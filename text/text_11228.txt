BACKGROUND
although all the cells in multicellular organisms basically share the same dna sequence with the same set of genes, in each cell type only a particular set of genes is actively expressed which then defines its specific morphology and function. thus, different types of cells are controlled by different sets of active genes and by the interactions between them . inside each cell, a set of target genes and regulatory genes, namely the transcription factors , interacts with each other and forms a gene regulatory network . grns topologically comprise a highly connected component and a few nodes with low connectivity  <cit> . embryonic stem cells , for example, can be distinguished from other cells mainly based on their pluripotency network. this network in escs is spanned up by few connected tfs which share many target genes  <cit> . a slight change in the expression levels of such a tightly interwoven network of tfs leads to esc differentiation  <cit> .

of particular interest are the groups of key driver genes and master regulatory genes in condition-specific and unspecific gene regulatory networks. key driver genes are basically those genes that control the state of the network . the term master regulatory gene was introduced by susumu ohno over  <dig> years ago. according to his definition, a master regulator is a gene which stands at the top of a regulatory hierarchy and is not regulated by any other gene  <cit> . later on, this term was redefined to involve a set of genes which either directly govern the particular cellular identity or are at the inception of developmental lineages and regulate a cascade of gene expressions to form specific lineages  <cit> .

to address the problem of computational identification of key and master regulatory genes, we have modeled and solved two optimization problems named minimum dominating set  and minimum connected dominating set  on the grns. we compared these sets against well-known centrality measures such as degree, betweenness and closeness centrality as described in  <cit> . these attribute the importance of genes to their centrality in the networks. however, it is unclear whether high centrality genes provide a full control of the underlying network.

a recent study derived a minimum input theorem based on structural control theory which can be applied to directed graphs to fully control the network  <cit> . for this, the authors introduced a deep relation between structural controllability and maximum matching. the idea is to control the whole network by covering all the regulatory interactions with a minimum number of genes. their results show that a few nodes are sufficient to control dense and homogeneous networks, but this number increases dramatically when the nodes in the network are sparsely connected.

an mds is a related concept in which the goal is to control the network by covering all expressed genes with a minimum number of tfs. since each node that does not belong to the mds is adjacent to at least one node in the mds, full control over the network is provided by the mds solution. our group has previously applied the concept of mds to the area of complex diseases. the results showed that this method can capture several important disease and drug target genes  <cit> . the mds method can be applied to any connected or disconnected regulatory network to identify key dominator nodes. in this work, we use mds in directed graphs to identify key driver genes. besides the mds concept, we suggest to also consider the task of identifying a set of master regulatory genes as an analogue of another optimization problem, namely that of constructing an mcds. we suggest to apply mcds mainly to networks that are related to cell fate transitions such as the pluripotency network of an embryonic stem cell. this idea is motivated by the observation that the pluripotency network in mouse escs is maintained by a few connected tfs which share many target genes  <cit> . the concepts of mds and mcds are visualized for a small toy network in fig.  <dig> 
fig.  <dig> a graphical representation that illustrates the mds and mcds solutions of an example network. the network can be controlled by mds and mcds nodes. in the case of a grn, directed arcs symbolize that a transcription factor regulates a target gene. in panel a, the mds nodes {a,b} are the dominators of the network. together, they regulate all other nodes of the network . panel b visualizes the respective set of mcds nodes . here, node c is added in order to preserve the connection between the two dominators a and b to form an mcds



the concept of mcds has already been applied to protein-protein interaction networks . there, the proteins which compose a mcds solution contributed significantly to related biological processes  <cit> . in this work, we show how the mcds concept can be applied to grns  to detect the tfs and target genes which determine a specific cellular identity. we start with the model organisms e. coli and s. cerevisiae because their grns have been extensively characterized in experimental studies. then, we present applications to a mouse pluripotency network and to a breast cancer regulatory network.

methods
minimum dominating set
a dominating set  in an undirected graph g= is a subset of nodes d⊆v with the property that for each node v∈v we have that v∈d or that there is a node u∈d and an edge {u,v}∈e. we call a set d⊆v a minimum dominating set  if it is a dominating set and it has minimum cardinality among all dominating sets for g. computing a mds is known to be an np-complete problem  <cit> . in biological networks, the set of dominators can provide full control over the whole network. since each node that does not belong to the mds is at least adjacent to one node in the mds, full control over the network can be obtained by the mds solution. to address grns which are represented by directed graphs, we define an mds for a directed graph g= to be a set d⊆v of minimum cardinality such that for each node v∈v we have that v∈d or that there is a node u∈d and an arc ∈e. the integer linear programming  formulation of mds for directed graphs is given below. here, for each node v∈v we denote by δ− the set of incoming nodes of v, i.e., the set of nodes u such that ∈e. 
  <dig> minimize∑v∈vxvsubject toxu+∑v∈δ−xv≥1∀u∈vxv∈{ <dig> }∀v∈v 

here, variables xu and xv are binary variables associated to the nodes u and v in the graph. using this formulation, we select a node v as a dominator if its binary variable xv has value  <dig> in the computed solution and otherwise we do not select it. since our objective function is to minimize ∑v∈vxv this yields a minimum dominating set. for all networks considered here, mds solutions were constructed in less than  <dig> minute of running time.

minimum connected dominating set
a minimum connected dominating set  for a directed graph g= is a set of nodes d⊆v of minimum cardinality that is a dominating set and that additionally has the property that the graph g induced by d is weakly connected, i.e., such that in the underlying undirected graph between any two nodes v,v′∈d there is a path using only vertices in d. computing an optimal mcds in undirected graphs is known to be np-hard  <cit> . since grns are represented by directed graphs, we are interested in mcdss for directed graphs.

optimal solution via ilp
to this end, we modified the existing integer linear programming  formulation of mcds in undirected graphs  <cit>  to determine a mcds for directed graphs.

as before, the set v is the set of vertices and e is the set of edges in the input graph. for a set s⊆v, the set e stands for all the edges connecting two vertices u,v with u,v∈s. the binary valued yv variables indicate whether node v is selected to belong to the minimum connected dominating set. the binary variables xe for the edges then yield a tree that contains all selected vertices and no vertex that was not selected. thus, the selected vertices form a connected component. the first constraint guarantees that the number of edges is one unit less than the number of nodes. this is necessary for them to form a  tree but is not sufficient. the second constraint guarantees that the selected edges imply a tree. the third constraint guarantees that the set of selected nodes in the solution forms a dominating set of the graph. for dense undirected graphs, this formulation provides a quick solution, but in the case of sparse graphs, finding the optimal solution may take considerable running time  <cit> . 
  <dig> minimize∑v∈vyvsubject to∑e∈exe=∑i∈vyi−1∑e∈exe≤∑i∈s∖{j}yi∀s⊂v,∀j∈syu+∑v∈δ−yv≥1∀u∈vyv∈{ <dig> }∀v∈vxe∈{ <dig> }∀e∈e 

the above ip formulation contains an exponential number of constraints since it has one constraint for each subset s⊆v. therefore, already for relatively small instances it is impractical to generate all its inequalities. instead, we used the following approach: we generate the first constraint and all constraints of the third type yv≥ <dig> for each u∈v). then we compute the optimal ip solution subject to these constraints. then we check whether the found solution satisfies all constraints of the above ip . this is the case if and only if the computed set of vertices yields a connected  set. if this is the case then we found the optimal solution and we stop. otherwise, we add  constraints of the second type xe≤∑i∈s∖{j}yi for some subset v and some node j) to our formulation and compute the optimal ip solution to this stronger formulation and repeat. if the computed set of vertices has more than one connected component then we add such a constraint for each connected component s and for each vertex j∈s. in order to improve the running time of our procedure, we added some valid inequalities to our initial formulation. these inequalities discard all the solutions that select an edge e={u,v}  such that not both of its incident vertices were selected . formally, for each edge e={u,v} we added the inequalities 
  <dig> xe≤yuxe≤yv 

despite adding these valid inequalities, some problem instances were not solved in appropriate time. to overcome this problem, we also considered a heuristic approach. it is known that an approximate mcds can be found by heuristic approaches in polynomial time  <cit> . for graphs with low node density and high node degree, the optimal ilp solution can be found at comparable running times as such heuristic solutions  <cit> . however, the heuristic solution outperforms the ilp for graphs with high node density and low node degree in terms of running time  <cit> . in this work, all computations were conducted on a single threaded intel xeon cpu at  <dig>  ghz. we determine the ilp solution using the glpk solver version  <dig>   <cit> . in cases where the network is very sparse we used the heuristic algorithm .

heuristic solution
in this study, we computed the heuristic solution for all networks except for the modules of a breast cancer network. there, the optimal mcds solution could be obtained within a few minutes to several hours of compute time. we adapted the heuristic algorithm presented in  <cit>  that was inspired by one of the two general approximation approaches mentioned in  <cit>  to find solutions for mcds. we modified the algorithm to determine a mcds for directed graphs rather than an undirected graph. the algorithm has three main phases as described in the following. initially, all nodes are white. in the first phase, a white node with the highest outdegree is selected as a dominator and colored black. in cases where multiple nodes have the same outdegree, we select the node with the highest indegree. this selection guarantees higher connectivity compared to nodes with smaller indegree. its  child neighbors are colored gray to indicate that they are already dominated. this step is repeated until all nodes are either black or gray. from these, we check if the  set of dominators forms a connected dominating set. if yes, we move to the third phase, otherwise we move to the second phase. in the second phase, a node with maximum number of arcs to black nodes, that we term a connector, is colored dark gray. this dark gray node is then added to the connected dominating set if it belongs to a path between two connected components that are not connected so far. this step is repeated until all black and dark gray nodes form a connected component in the underlying undirected graph. in the third phase, the size of the connected dominating set is reduced as much as possible by repeatedly removing a node with smallest outdegree while making sure that the dominating set remains connected and the graph remains covered by the connected dominating set. in cases where multiple nodes have the same outdegree, we again select the node with highest indegree.

one can also interpret the algorithm biologically in the context of grns. we start by selecting a tf with the most target genes as a dominator. this process is repeated until all the genes are either selected as dominators or as target genes. if the dominating set is not connected, the next step is to connect the dominators by adding a few number of connector genes. this step is motivated by the modularity of cellular networks  <cit> . we will investigate below whether defining a connected set of dominator nodes is beneficial for the biological interpretability of the control hierarchy. as connectors, we consider tfs as well as target genes. the last step is to reduce the size of the connected dominating set. then, the connected dominating set comprises of dominators and connectors, whereby all dominators are tfs and the connectors comprise of tfs and/or target genes. note that the set of mcds identified as dominators or connectors provides potential candidates for key drivers and master regulatory genes.

for the networks considered here, the running time for the heuristic mcds solution was less than  <dig> minute.

components
unlike mds, the task of computing an mcds only makes sense for input graphs that are connected since otherwise there can be no solution. therefore, if we are given a disconnected undirected graph, we compute mcdss for connected components of the graph. for directed graphs, we distinguish between strongly connected components and  connected components.

strongly connected component
a component is called a strongly connected component  in a directed graph if each of its nodes is reachable via directed edges from every other node in the component. in a scc, there is a path between each pair of nodes in the component. here, we implemented tarjan’s algorithm to find sccs as described in  <cit> .

largest connected component
a component is a  connected component if in the underlying undirected graph, there exists a path between any pair of nodes of this component. the connected component of highest cardinality is termed the largest connected component . the connected components were found by breadth first search  as described in  <cit> . note that each strongly connected component is also a  connected component but the converse is not necessarily true. since a mcds does not exist in graphs that are not connected, we consider the largest connected component  and the largest strongly connected component  in such cases, see fig.  <dig>  we compared the results of mcds when the network has only one connected component to those obtained with a directed version of mds in terms of the size of the result set and enrichment analysis.
fig.  <dig> a graphical representation that illustrates the concept of mds on a toy network. in addition, the mcds nodes are colored black on three types of components  in the toy network. the above toy network includes  <dig> nodes and  <dig> edges as shown in yellow in panel . the nodes {j, b, c, h, l} are the dominators of the network obtained by computing a mds . the nodes colored blue in panel b, make up the largest connected component of the underlying undirected graph. mcds nodes for this component are {j, d, b, c, g, h}. green colored nodes in panel c are elements of the largest connected component underlying the directed graph. the two nodes {b, c} form the mcds for this component. the nodes colored orange in panel d show the lscc in the network. here, the node a is the only element of the mcds



criteria to select the component
mds is always applied to the whole network. if the input network is not connected, we select either lcc or the lscc as the input for mcds. if the cardinality of the network is equal to the lcc of the network, we select the whole network. otherwise, we consider the component density of lcc and lscc. for a directed graph g=, the component density is defined as |e||v|, where e denotes the set of edges and v denotes the set of nodes in the component. the component density is equal to the ratio of existing edges  |e| in the component to the total number of possible edges . according to the definitions in  <cit> , in a dense graph the number of edges is close to the maximal number of edges which is in contrast to a sparse graph. in this study, an mcds is then derived for the component  with highest density, as we were interested to find the minimum number of genes. high density components are more promising in this regard, because they need a smaller number of connectors to connect the dominators.

enrichment analysis
the biological relevance of the results obtained by the directed forms of mds and mcds was evaluated using the enrichment analysis tool provided at the david portal of nih  <cit> . p-values below the threshold  <dig>  obtained by the hypergeometric test were adjusted for multiple testing using the benjamini & hochberg  procedure  <cit> .

functional similarity
functional similarity was examined based on gene ontology  biological process  terms among the pairs of mcds nodes. this was then compared to the functional similarity of gene pairs from the entire network as described in  <cit> . the permutation test was repeated  <dig> times and kolmogorov-smirnov  test was applied to get the p-value.

hypergeometric test
the statistical significance of the results was assessed using the hypergeometric test which is based on sampling without replacement. the p-value for the test is calculated from the following formula: 
 p−value=1−∑i=0xkim−kn−imn  where m is the total number of genes in the network, n is the sample size which is equal e.g. to the size of the mcds, k is the number of genes in m with a specific property and x is the number of genes in the mcds having that property. the cutoff value was set to p= <dig>  to report a set obtained by mcds as a significant result. to apply the test, we used the online tool  which is described in  <cit> .

data and software
we tested the presented approaches to identify key player and master regulatory genes in several grns for e. coli, s. cerevisiae, a human breast cancer network and for the pluripotency of mouse esc. we will present the obtained results one by one in the next section.

the dataset of e. coli is a grn of the escherichia coli strain k- <dig> that was downloaded on 22-july- <dig> from regulondb  <cit> . it contains curated data for  <dig> genes, including  <dig> tfs.

the dataset of s. cerevisiae was taken from the yeast promoter atlas  downloaded on 26-march- <dig>  <cit> . it contains  <dig> genes including  <dig> tfs. in this database, the target genes for each tf is a set of genes whose promoter regions contain the associated transcription factor binding site for the tf binding motif.

the dataset for mouse is a manually curated grn of mouse  escs. it consists of  <dig> mouse genes/proteins and  <dig> molecular interactions, stimulations and inhibitions  <cit> . the network consists of genes that are involved in either induction, maintenance or loss of the pluripotency state and is thus termed pluripotency network throughout the text.

the breast cancer network used here was generated in  <cit>  using a bayesian learning approach that was coupled to an integrative network-based approach based on whole-genome gene expression profiling, dna methylome, and genomic mutations of breast cancer samples from tcga. the grn networks were constructed via three steps: first the co-expression network was generated based on the topological overlap matrix as a distance measure. then, we connected the co-expression interactions to regulatory information retrieved from publicly available regulatory databases accompanied with motif search for all known binding motifs of the tfs represented in the co-expression network against the promoter regions of all genes in the network. finally, a causal probabilistic bayesian network was inferred from the co-expression modules utilizing the directed edges obtained from the previous step as a start search point to infer directionality between nodes. clustering yielded ten network modules of dysregulated genes  <cit> . each module turned out to have distinct functional categories, cellular pathways, as well as oncogene and tumor suppressor specificity. we also extracted breast cancer specific subnetworks from the human genome regulatory interactome induced by the dysregulated mrnas.

we implemented the ilp formulas for the directed forms of mds and mcds in the sagemath software system  <cit>  version  <dig>  using the glpk solver  <cit> . we implemented the heuristic algorithm in java and made it available as a plugin for the popular biological network analysis platform cytoscape  <cit>  at http://apps.cytoscape.org/apps/mcds and in additional files  <dig> and  <dig>  additional file  <dig> provides a user guide and example files. additional file  <dig> provides the grn networks used in this study.

RESULTS
global e. coli grn
the grn for e. coli studied here contains  <dig> genes, including  <dig> tfs and  <dig> regulatory interactions. this set of regulatory interactions in e. coli forms a general network which controls all sorts of responses which are needed in different conditions. with network density  <dig> , the network can be considered as sparse. due to this sparsity, mds deems  <dig> tfs to be necessary to control the network. the network does not have any scc with size larger than  <dig> nodes. for computing an mcds, we therefore used the lcc underlying directed graph that contains  <dig> genes. based on the directed form of the lcc, target genes are placed at the bottom level and a set of tfs comprises the mcds. in the lcc, the algorithm identified an heuristic mcds containing  <dig> genes  that cover the entire component, see additional file 5: table s <dig> 

additional file 5: figure s <dig> illustrates the hierarchical structure between the  <dig> tfs contained in the mcds. the hierarchical structure was drawn based on generalized hierarchies using breadth-first search as described in  <cit> . a previous study that was based on an earlier version of regulondb identified  <dig> global regulators that regulate operons in at least three modules  <cit> . two of them, h-ns and cspa, do not belong to the lcc considered here. two other global tfs identified previously  are no longer contained in the list of regulators in the version of regulondb used here. out of the six remaining genes, the five genes ihf, crp, fnr, arca and narl are among the nine top genes in table s <dig> and the sixth gene ompr is found a bit further below in the list. table s <dig> lists enriched kegg and go terms for the  <dig> genes in the mcds of the e. coli gene regulatory network. as expected, the strongest enrichment is found for processes related to transcriptional regulation. the second most enriched term is related to two-component systems which enables e. coli to respond to changes arising from different environmental conditions  <cit> .

cell-cycle specific s. cerevisiae grn
next, we retrieved regulatory interactions in s. cerevisiae involving  <dig> tfs from the yeast promoter atlas   <cit> . from this set of regulatory interactions, we extracted a cell-cycle specific subnetwork of  <dig> genes that are differentially expressed along the cell cycle of yeast as described in  <cit> . the  <dig> genes already form the lcc of this subnetwork. this set of genes is controlled by a mds including  <dig> tfs and a heuristic mcds including  <dig> tfs and  <dig> target genes. the mds and mcds elements are listed in tables s <dig> and s <dig>  respectively. most of the tfs identified to belong to the mds and mcds have been identified before by experimental methods to be associated with the cell cycle  <cit> . figure  <dig> shows the grn of the cell cycle activity of s. cerevisiae controlled by these  <dig> tfs. table s <dig> lists enriched kegg and go terms for the  <dig> genes in this mcds. as expected and similar to what we found for the e. coli network, the strongest enrichment was found for processes related to transcriptional regulation.  <dig> of the  <dig> genes  are annotated to cell-cycle related go terms, namely go: <dig> ∼ interphase of mitotic cell cycle and go: <dig> ∼ mitotic cell cycle and to the kegg pathway sce04111:cell cycle.
fig.  <dig> tightly interwoven network of  <dig> tfs and target genes that organize the cell cycle of s. cerevisiae. shown on the circumference of the outer circle are  <dig> target genes that are differentially expressed during the cell cycle. the inner circle consists of the  <dig> tfs from the heuristic mcds and of  <dig> other target genes that are regulated by at least two of these tfs



pluripotency network in mouse
next, we applied the mds and mcds methods to a manually curated grn of mouse escs that consists of  <dig> mouse genes/proteins and  <dig> molecular interactions, stimulations and inhibitions  <cit> . we found that the heuristic mcds of the lscc  of this network contains  <dig> tfs. the connectivity among these  <dig> tfs is displayed in fig.  <dig>  the mcds elements are listed in table s <dig>  respectively. among the set of regulators,  <dig> tfs including pou5f <dig>  nanog, sox <dig>  stat <dig>  esrrb, tcf <dig>  sall <dig> are in common with an experimentally validated regulatory network controlling pluripotency that consists of  <dig> experimentally validated tfs  <cit> . such a result is unlikely to be obtained by chance  in a network with  <dig> tfs.
fig.  <dig> connectivity among tfs in the heuristic mcds of the largest strongly connected component of a grn for mouse escs. the red circle borders mark the  <dig> tfs belonging to the set of master regulatory genes identified experimentally in  <cit> 



next, we evaluated the ability of the mcds method to detect a cooperative biologically functional backbone within the entire network. for this, we examined the functional similarity according to the wang measure in the gosemsim r package  <cit> , among the pairs of mcds nodes and compared this to the functional similarity of gene pairs from the mouse network, see additional file 5: figure s <dig>  this figure shows the cumulative distribution of the functional similarity scores between pairs of mcds nodes of the mouse pluripotency network  compared to the similarity scores of all possible pairs between genes of this network . the kolmogorov-smirnov test revealed that the mcds genes were functionally significantly more homogeneous than the randomly selected gene pairs of the whole network with p-value of  <dig> e- <dig>  this hints at the ability of the mcds method to extract a functionally homogeneous network backbone that is expected to have an important role in maintaining the pluripotency state in early developmental stages. table s <dig> lists enriched kegg and go terms for the  <dig> genes in the mcds of the mouse esc pluripotency network. in this case, go terms related to developmental processes are stronger enriched than go terms related to transcriptional regulation. the set of genes  annotated with go: <dig> are responsible for stem cell maintenance. the genes annotated with other go terms are mainly related to embryonic development and other tissue-specific development.

to check the centrality significance of the mcds genes in the lscc, we selected the same number of genes as the size of mcds with respect to degree, betweenness and closeness centrality. the centralities were measured using the igraph package  <cit> . we considered only outdegree nodes in the directed network. the results show that most of the genes contained in the heuristic mcds are among the top nodes according to at least one centrality , see fig.  <dig>  among them, the top nodes of the mcds have the highest overlap with the top nodes of the degree centrality and the betweenness centrality. six out of  <dig> connector nodes in mcds belong to the top  <dig> nodes with highest betweenness centrality according to jaccard’s index.
fig.  <dig> percentage overlap of the genes of the mds and mcds with the list of top genes  according to  <dig> centrality measures. shown is the percentage of genes in the mds or mcds that also belong to the list of top genes with respect to degree, betweenness and closeness centrality



human disease network
finally, we applied the mcds method to the lcc of ten breast cancer network modules where each lcc covers the whole module  <cit> , see “methods” section.
table  <dig> identified genes in the mds and mcds  for  <dig> modules of the breast cancer network

aatk
aatk
abhd10
abhd10
the genes, whose protein products are known to be targeted by drugs, are marked in bold



next, we compared the set size of the optimal and heuristic solutions of mcds and mds for  <dig> out of the  <dig> modules. one module  could not be solved in appropriate time using ilp. table s <dig> displays the density and running time for the ilp solutions for the mentioned modules implemented in sage. the running time was not correlated with the size or density of the networks. figure  <dig> shows that the optimal solutions of mcds and mds contain almost the same number of genes for all modules. in comparison, the heuristic mcds solutions  contain 10– <dig> % more genes than the solutions of the other two approaches. we also compared the heuristic approach with the optimal solution in terms of overlapped identified genes. table  <dig> indicates that according to jaccard’s index the solutions overlap approximately by about  <dig> % in a range from  <dig> to  <dig> %. table s <dig> shows the results obtained by the heuristic approach of mcds. table s <dig> lists enriched go bp terms and kegg pathways in the mcds genes obtained by heuristic approach.  <dig> genes  belong to a known cancer pathway . we hypothesize that the products of some of the remaining identified mcds protein coding genes may open up new avenues for novel therapeutic drugs.
fig.  <dig> number of mcds genes determined by the heuristic approach or by the ilp formulation and in the mds. shown are the results for  <dig> modules of the breast cancer network

the modules brown and turquoise have only  <dig> mcds gene and give  <dig> % overlap



directed random networks
to characterize the size of problems which can be solved using the mcds ilp formulation, multiple erdos-renyi random digraphs were generated using the java code digraphgenerator available in  <cit>  with different sizes and densities. we discarded the networks whose running times exceeded  <dig> days. table s <dig> shows that the size of mcds reduces when the network density increases. a low density for networks of size more than  <dig> nodes leads to a dramatic increase in the computation time.

CONCLUSIONS
experimental identification of a set of key regulatory genes among large sets of genes is very time-consuming and costly. therefore, computational methods such as the ones presented here are helpful to condense and shape a list of candidate genes to more promising candidates before planning and starting expensive experimental work. such follow-up works could e.g. validate the regulatory roles of these genes by sirna knockdown experiments, by over-expressing genes e.g. under the control of the highly inducible gal <dig> promoter in yeast, or by crispr-type genome editing of promoter sequences containing tf binding sites. we presented three novel approaches  to identify driver genes and master regulatory genes responsible for a particular cellular identity. in the notion of network controllability, mdss and mcdss of biologicals networks are likely enriched in key regulatory genes. the results of these optimization problems can thus aid in pruning the network to the potentially more important nodes. we applied our method to the established grns of e. coli and s. cerevisiae and also to a pluripotency network of mouse esc. the characteristics of these methods appear to be well suited, on the one hand, to the topology of approximately scale-free biological networks that contain a small number of high degree hub nodes and, on the other hand, to the observed tendency of these hubs to interact with each other. we showed that the networks can be controlled by a fairly small set of dominating tfs. a notable number of known master regulatory genes are detected in the connected dominating set of the components.

the number of driver genes obtained by the directed form of mds and mcds depends on the connectivity of the network. networks with low connectivity yield a higher number of driver genes compared to networks with higher connectivity. the application of the mcds method to modules of a regulatory network for a breast cancer network identified  <dig> key driver genes that could possibly drive the tumorigenesis process. twenty of them are already known targets of available cancer drugs. the remaining dominating genes may be suitable candidates as news drug targets that may warrant further experimental validation.

additional files
additional file  <dig> mds. this file includes the implementation of ilp formulation for mds problem using glpk solver. 



additional file  <dig> mcds. this file includes the implementation of ilp formulation for mcds problem using glpk solver. 



additional file  <dig> user guide. this guide contains instructions for users to use the mds and mcds programs to find the optimal solution in a directed network. it also includes two grns from breast cancer network modules which can be used as input networks for ilp programs. 



additional file  <dig> data.this folder contains grn files for e. coli, s. cerevisiae, pluripotency network of mouse esc and breast cancer network modules. 



additional file  <dig> supplementary. this file includes the supplementary figures and tables mentioned in the paper. 



abbreviations
tftranscription factor

grngene regulatory network

escembryonic stem cell

mdsminimum dominating set

mcdsminimum connected dominating set

ilpinteger linear programming

sccstrongly connected component

lcclargest connected component

bfsbreadth first search

lscclargest strongly connected component

bhbenjamini & hochberg

gogene ontology

bpbiological process

kskolmogorov-smirnov

coliescherichia coli

ypayeast promoter atlas

the authors thank christian spaniol for technical advise.

funding
mn was supported by a graduate fellowship from the graduate school for computer science at saarland university and subsequently by sfb  <dig> funded through the dfg. tw was supported by sfb  <dig>  mh was supported by the german academic exchange service  and by sfb  <dig> 

availability of data and material
the java implementation of the heuristic algorithm explained in this paper is available as a cytoscape plugin at http://apps.cytoscape.org/apps/mcds. the network data used in this study are all selected from public databases. the mentioned data and our implemented sagemath programs for solving integer linear programming formulations used in the paper are available at https://github.com/maryamnazarieh/keyregulatorygenesand as supplementary material.

authors’ contributions
mn initiated this study, designed and implemented the algorithms, performed data analysis and wrote the manuscript. aw extended the established the ilp formulations and edited the manuscript. tw developed the cytoscape plugin for the heuristic approach of mcds and improved the implementation of the algorithm. mh assisted with the functional enrichment analysis. vh proposed the biological motivation of the paper and helped with designing this study, data analysis and the manuscript. all authors read and approved the final manuscript.

authors’ information
mn is a phd student at the center for bioinformatics, department of computer science, saarland university. aw is a senior researcher at the max planck institute for informatics, saarbruecken. tw is a phd student at the center for bioinformatics, department of computer science, saarland university. mh is a postdoc at the institute for biostatistics and informatics in medicine and ageing research, university of rostock. vh is a professor at the center for bioinformatics, saarland university.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
