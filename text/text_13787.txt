BACKGROUND
selective pcr is widely used in genetics, environmental sciences and medicine. a critical step in some applications, such as single-nucleotide polymorphism  analyses  and monitoring of environmental microorganism populations , is the isolation and amplification of specific dna fragments, referred to as target sequences, from environmental samples. these samples are often complex mixtures of dna fragments that may also include non-target sequences, which are pieces of dna similar to target sequences but representing genes or organisms that are not the subject of the study. naturally, such non-target sequences should not appear in the amplified product. a critical step in achieving such high-resolution amplification is the design of sequence-selective pcr primers, which are primers that amplify the target sequences but not the non-target sequences.

designing such pcr primers manually is tedious and time consuming, and it can be streamlined and greatly simplified with the aid of appropriate software. among other tasks, such software tools can be used to identify target and non-target sequences or to quickly evaluate the quality of a large number of primer candidates by computing their alignment to these sequences. they can also be used to compute biological parameters of the primers, like gc-content or melting temperature, that are essential for evaluating whether primers will produce specific amplification and high yield. these tools can also identify primers with appropriate complementarity properties, to prevent undesirable pcr side effects where primers bind to themselves by forming hairpin or primer-dimer structures.

the purpose of this document is to describe features of prise <dig> , a new software package for designing sequence-selective pcr primers and probes. prise <dig> is an extension of prise  <cit> . while preserving the main strategy of the design process and core algorithms from prise, prise <dig> contains a number of extensions and new features, including the ability to add probes to selected primer pairs, platform independence, and performance enhancements, among others.

in a nutshell, prise <dig> is an interactive software package for designing primers and probes for pcr experiments, that accepts sets of target and non-target sequences on input, and produces primer pairs that will typically selectively amplify the target sequences. customizable features and settings are available to ensure that the computed primers will be effective for the application at hand.

one distinctive feature of prise <dig> is that it allows users to emphasize primer selectivity at the 3’end. this feature is essential for selective amplification of conserved sequences such as rrna genes, and to accurately differentiate between target and non-target sequences during the actual laboratory pcr process . the need for such precise selectivity arises when amplifying sequences from mixtures of dna. examples of such applications include subtype analyses, in which very similar groups of genes need to be distinguished, or rrna gene studies to monitor population levels of specific microorganisms in environmental samples that contain millions of different organisms . in fact, prise <dig>  was designed specifically to support our studies of microbial communities , that often involve analysing environmental samples containing mixtures of both target and non-target sequences. another application where such high selectivity is useful is genomic walking . the focus on the 3’ end selectivity is implemented through a detailed and customizable per-position mismatch allowance matrix that sets more stringent mismatch criteria at the 3’ end than for the rest of the primer. we are not aware of any other software that provides such sophisticated selectivity settings.

when searching for candidate primers, prise <dig> uses a custom algorithm that assigns appropriate mismatch weights, mentioned earlier, to different positions when aligning candidate primers against their potential binding regions. other programs typically use local alignment tools, such as blast, to do similarity searches to identify the binding position of primers, which may result in the loss of some match information over the entire primer range, especially when the match is not perfect toward the primer ends.

another distinctive feature of prise <dig> is the probe design function, which is useful in quantitative analyses to measure the amplification of target sequences. for example, it enables the design of taqman and other primer-probe based assays, or probes for fish and other hybridization-based assays. the probe design feature is integrated with the primer design process, in the sense that users can add probes to selected primer pairs, and the triples consisting of a forward primer, reverse primer and a probe are evaluated in tandem, in terms of coverage and other quality criteria. when designing probes, users can specify biological parameters that may be different than those for primers. for example, setting the melting temperature ranges for probes and primers at different levels helps to ensure proper functioning of probes during the taqman pcr process. the mechanism for defining mismatch criteria for probes is different than that for primers, with mismatches near the middle of the probe given more weight than at the ends. for this reason, the algorithm for selecting probes is also quite different than that for primers.

unlike some other programs , prise <dig> does not require signature primers.  using signature primers reduces computational cost; however, not all groups have unique signatures  <cit> . prise <dig> considers all combinations of forward/reverse primers and probes, so for such groups it is able to find individually non-specific but group-specific primer sets, for which the methods using signature primers are not likely to be effective.

prise <dig> also differs from existing tools in terms of the fundamental approach to the design process, by emphasizing interaction with the user, in order to take advantage of human expertise. rather than simply computing a primer-probe set that optimizes user-specified criteria, at several stages of the process prise <dig> produces a list of candidate primers or probes, each with a list of quality indicators, like coverage, length, gc-content, and other. the user can manipulate these lists, sorting them according to different criteria, to choose a subset of candidates to proceed to the next stage. this interactive approach also allows users to backtrack through the process to tune the program’s parameters. for example, if insufficiently many primer candidates are produced, due to excessively stringent biological settings, users can go back to the previous step and experiment with different parameters to increase the number of candidate primers.

more extensive comparison between prise <dig> and other primer design tools can be found in results and discussion section later in the paper.

implementation
overview of the design process
as explained in the background section, the primer design process in prise <dig> is essentially the same as in its predecessor, prise. the module for probe design is new. we describe the complete process in this section.

designing primers and probes in prise <dig> is accomplished in three stages:identification of target and non-target sequences. here, the user can download a collection of sequences from genbank and use the provided interactive tools to choose from them  the desired sets of target and non-target sequences.

generation of candidate primer pairs. in this step, the program computes a set of primer candidates, according to the specified parameters, and groups them into primer pairs. then the user can use a variety of sorting tools to manipulate the list of these primer pairs to choose a smaller collection of high quality primer pairs.

adding probes. once these desired primer pairs have been selected, the next module of prise <dig> allows probes to be added to each primer pair. for each primer pair, prise <dig> determines a list of candidate probes. this produces a collection of primer-probe sets that can be sorted according to multiple criteria, thus allowing the user to choose, ultimately, the final collection of primer-probe sets best suited for their pcr experiments.



below we give a detailed description of these steps.

creating lists of target and non-target sequences
in this step, users first need to identify the seed sequences and create the hit table. the seed sequences are dna sequences that the user aims to amplify, and the hit table is a file, created by subjecting the seed sequences to an analysis using blast   <cit> , that contains summary information  for similar or related sequences from all species or organisms in specified databases. users have two options to run blast, either remotely through the ncbi website, following the instructions provided in prise <dig>  or locally, if they have an installation of blast on their machine. in the latter case, prise <dig> provides an interface to integrate sequence identification with a locally installed blast application and databases.

once the seed sequences and the hit table are identified and saved, prise <dig> will download associated records from genbank and perform pairwise similarity  analyses between these sequences. those sequences are then displayed as a list, and can be interactively manipulated and sorted according to specified properties, similarity to seed sequences, or various other attributes. this allows the users to identify the desired target and non-target sequences, which then can be saved for future use. in a typical application, the sequences most similar to seed sequences would be designated as target sequences, while non-target sequences would be selected from the remaining set. other sequence attributes, provided by prise <dig>  may be useful in this task, for example sequence length.

designing primers
to design primers, the user needs to specify first the sets of target and non-target sequences. in most situations, these sequences are those identified in the previous step, but this is not a requirement. some users may wish to use their own collections of target or non-target sequences, whether obtained earlier from prise <dig> or from some other source. prise <dig> will accept any collections of sequences as long as they are in the fasta format.

next, the user can specify desired properties of individual primers and of pairs of primers. these properties include, for example, primer length, gc content or melting temperature. among other options, users can also restrict complementarity properties of primers, to assure that chosen primer candidates do not bind to themselves and that, in selected primer pairs, the forward primer does not bind to the reverse primer. for convenience, all parameters have pre-tested default choices that are likely to work well in most typical applications.

the following step involves choosing the primer selectivity settings. the purpose of selectivity settings is to identify highly selective primers, namely those that will bind to most target sequences but to as few as possible non-target sequences. these settings allow users to define what constitutes a match between a primer and a sequence, and they can be controlled separately for target and for non-target sequences. roughly, stringent settings correspond to nearly perfect matches, while more flexible settings represent inexact matches. thus more stringent settings produce fewer primer candidates than relaxed settings. as in the previous steps, typical users will likely use the default settings only. however, prise <dig> also allows the users to customize these parameters, either through a basic interface where they choose stringency levels, or more advanced options where they can manually adjust the values of all parameters.

there are two categories of selectivity settings: mismatch allowance mechanism and mismatch cost matrix. the purpose of mismatch-allowance mechanism is to emphasize primer selectivity on the 3’ end, which is crucial for functional primers, as explained earlier. this is accomplished by setting limits on the accumulated number of mismatches, starting at the 3’ end and ending at any position. for example, one can specify  <dig> mismatches on the first  <dig> positions, at most  <dig> mismatch on the first  <dig> positions, and at most  <dig> mismatches on the first  <dig> positions.

the mismatch cost matrix is a nucleotide-to-nucleotide dissimilarity function that reflects the likelihood of binding to occur, with smaller values representing higher likelihood. for example, in its simplest form, its entries could be  <dig> for equal bases  and  <dig> for different bases . users can adjust these values to distinguish different types of mismatches, for example a/g and a/c mismatches may be assigned different costs.

consider a primer candidate p and a template string t . for a fixed location l in t, let t’ denote the substring of t, of the same length as p, starting at location l. for all locations in p, prise <dig> computes accumulated costs of mismatches  starting from the 3’ end of p, and if any of these values exceeds the corresponding mismatch allowance, it determines that there is no match at location l. otherwise, it considers position l as a potential match and it stores the total accumulated mismatch cost as the cost of aligning p and t’ at location l.

by computing such alignment costs for all potential match locations l, prise <dig> then chooses among them the most likely location in t for this primer p to bind, simply by choosing the location with minimum cost.  in cases when no potential match locations in t are found, prise <dig> determines that p does not bind to t.

prise <dig> has also an option to allow gaps in alignments. this is implemented by assigning costs to gaps and putting a limit on the number of gaps. in the computation described above these costs are included as costs of nucleotide insertions or deletions.

repeating the above process for all primer candidates p and target/non-target sequences t, prise <dig> will determine which primers bind to which sequences and at which positions.

at this point, prise <dig> will match all primer candidates into pairs. these pairs are then presented to the user, sorted according to their selectivity measure, that is computed as follows. consider a pair f, r of primers. let covt denote the coverage of this primer pair in target sequences, and let covn and covn denote the coverage of f and r, respectively, in non-target sequences. these values are normalized so that they are in the range  <cit> . the selectivity of this primer pair is then computed as
  

note that this will produce high values for pairs f, r that jointly match many target sequences, but where each of f and r, individually, matches few non-target sequences. to emphasize, this value is used only to sort the primer pairs in the display window, to give the user a rough estimate of the quality of primer pairs.

the number of candidate primer pairs depends on the stringency of all settings. if too few or too many pairs are produced, prise <dig> allows the user to backtrack and adjust these settings to re-compute new candidate pairs.

after the user is satisfied with the list of candidate pairs, he/she can review their quality criteria and, based on these, he/she can select a small number of primer pairs to be used in the experiment, or to proceed to the probe design stage. to assist users with this task, the list of primer pairs is displayed in a tabular format that shows all quality indicators for these primer pairs, including the percentages of target and non-target sequences that the primers are predicted to bind to, the product length, gc-content, complementarity properties, etc. for each primer pair, users can even display and examine the alignments between this pair and all target or non-target sequences. an easy to use graphical interface allows the users to manipulate this list, in an interactive fashion, including removing primer pairs, adding  new primer pairs, and sorting the list according to a wide variety of criteria.

designing probes
once the user identifies and selects a collection of primer pairs of interest, prise <dig> provides an option of adding probes to these pairs. this module can be also used for designing probes for fish and other hybridization-based assays. in quantitative pcr  analyses such as taqman assays, probes play an essential role in monitoring the amount of sequence amplification.

the process of probe design is similar to that for primers. it involves selecting probe properties, such as the probe length, gc content, etc. one probe attribute that assures that the probes will function properly during the qpcr process is the difference of melting temperatures between the primer pair and its associated probe. for example, for taqman assays, setting the melting temperature for probes higher than for the primers ensures that the probe will bind to the target before the primers. this sequential binding is essential for consistent quantification in such assays, because measurement of amplification events occurs when dna synthesis from the primer leads to the polymerase enzyme contacting and then cleaving the quencher located on the end of the probe, resulting in a detectable fluorescent signal.

as in the primer design process, users can specify their own scoring scheme for probes, the cost function, and the mismatch allowance matrix, to obtain the desired selectivity to target sequences. unlike for primers, however, where matches on the 3’ end were considered more important, in the case of probes, prise <dig> focuses on the middle section of the probe by allowing the user to specify the number of continuous matches near the centre of the probe. such continuous matches increase the likelihood of binding, even if some mismatches occur near the ends of the probe. these mismatch criteria can be specified separately for target and non-target sequences.

once probe properties and selectivity settings are defined, prise <dig> will compute, for each pair of selected primers, the list of probes that match all the criteria.

the final result is a list of primer-probe sets, each consisting of a pair of primers and a probe, that meet all criteria for primers and probes. prise <dig> displays these results in a window with separate tabs for each primer pair, sorted according to the selectivity function:
  

in this formula, f, r, and p denote the forward primer, the reverse primer, and the probe in a probe set, and covt() and covn() represent the normalized coverage values in target and non-target sequences, respectively. for each primer pair the program shows a tabulated list, with rows corresponding to probes and columns showing properties of the corresponding primer-probe set. as for primers, these lists can be manipulated and sorted by the user, according to a number of different criteria. ultimately, using these tools, users can determine a small number of primer-probe sets to be used in their pcr experiment.

more detailed description of the primer/probe design process can be found in the prise <dig> manual and tutorial, both provided on the prise2’s web page.

RESULTS
experiment
to demonstrate that prise <dig> finds highly selective, functional primer-probe sets, we used prise <dig> to design two taqman real-time qpcr assays, which were subsequently tested in a laboratory experiment. primer and probes sets were designed to differentiate the rrna its region of two closely related strains of the fungus dactylella oviparasitica . sequence-selective primers and probes were designed using prise <dig> with the default settings. the non-target sequence used for the design of the do <dig> assay was do <dig>  while the non-target sequence used for the do <dig> assay was do <dig> 

the assay for do <dig> produced a robust amplification signal from do <dig> dna, but no signal from the do <dig> dna. a similar but opposite result was obtained for the do <dig> assay . these results demonstrate the ability of prise <dig> to create useful primers and probes for sequence-selective assays.figure  <dig> 
experimental results for do <dig> and do <dig> assays. qpcr of do <dig> and do <dig> dna using sequence selective assays for do <dig> and do <dig>  qpcr was performed using a bio-rad icycler myiqtm real-time detection system . the selective primers for the do <dig> and do <dig> assays are do-50 f <dig>  and do-50r <dig>  and do-60 f <dig>  and do-60r <dig> , respectively. the selective probes for the do <dig> and do <dig> assays are do-50probe- <dig>  aacagcacagtggacctgcc and do-60probe- <dig>  aaagctagcgggcacaggc, respectively, where bhq1a is black hole quencher  <dig> . the targets are fragments of the its rrna gene with sizes of 94-bp and 75-bp for do <dig> and do <dig>  respectively. the thermal cycling conditions were 94°c for 5 minutes; 42 cycles of 94°c for 20 seconds, x°c for 30 seconds and 72°c for 30 seconds; followed by 72°c for 10 minutes; where x =  <dig>  for do <dig> and  <dig> for do <dig>  amplification reactions were performed in icycler iq pcr plates with optical flat 8-cap strips . pcrs were performed in 25-μl reactions containing the following reagents: 50 mm tris , 500 μg/ml bovine serum albumin ,  <dig>  mm mgcl <dig>  250 mm of each dntp,  <dig> nm of each primer,  <dig> nm of the probe,  <dig>  x  <dig> copies of the its rrna gene, and  <dig>  units of taq dna polymerase. ct = threshold cycle. error bars indicate standard error. n =  <dig> for each column.



primers designed with prise/prise <dig> have been already used in multiple investigations of microbial community composition conducted by the last author  and his group . these studies typically require amplifying targeted sequences from dna mixtures extracted from environmental samples containing hundreds to thousands of non-target sequences, and the high resolution of the primers produced by prise/prise <dig> tools and their ability to distinguish between target and non-target sequences played critical role in these studies. for example, in a study examining the role of microorganisms in inflammatory bowel disease , use of prise enabled measurements of specific bacterial rrna gene sequences in a habitat harbouring hundreds or thousands of different microorganisms, providing putative links between specific host-microbe interactions and disease causation.

comparison with prise
in comparison to its predecessor prise, the most significant new feature of prise <dig> is the probe design option that can be useful for taqman and other primer-probe assays. in quantitative analyses such as taqman assays, probes can be used to measure the amplification of target sequences along with a pair of primers. probes can also be designed for fish and other hybridization-based assays.

unlike prise, which is only available on windows, prise <dig> is a cross-platform software, not restricted to a specific operating system. it is written in c++, with the gui implemented with the qt toolkit. we provide prise <dig> installations for windows, macintosh and linux machines.

another new feature in prise <dig> is the option to communicate with a local blast application, which provides a more convenient way to identify target and non-target sequences, without the need for connecting to the ncbi website.

although the core algorithms for sequence similarity and identifying primer candidates remain the same, several performance improvements were made to speed up the computation for large data sets. for instance, the module for computing primer candidates is roughly  <dig> times faster in prise <dig> than in prise. when run on a data set of  <dig> target and  <dig> non-target sequences from ncbi flu database, each of length approximately 1000 bps, with most parameters at default values, prise <dig> completed this task in 12 minutes, compared to 48 minutes in prise .

comparison with other software
prise <dig> implements a flexible mechanism for specifying primer-template mismatch criteria at specific positions at the 3’ end, with a detailed per-position mismatch allowance matrix. one other tool that allows users to differentiate selectivity properties of the 3’ and 5’ ends is primerprospector  <cit> , where different weights can be applied to the 3’ and 5’ ends of primers to estimate the likelihood of binding. to consider a primer candidate as functional to a specific template, primerprospector requires this candidate to have a number  of continuous base matches starting at the 3’ end. this feature can be thought of as a restricted case of prise2’s 3’-end selectivity mechanism. prise <dig> gives the user more control than primerprospector, to cover scenarios where primer-template binding is likely to occur even in the absence of continuous matches at the 3’ end. in addition, unlike prise <dig>  primerprospector does not use non-target sequences.

prise <dig> allows users to interactively design probes for selected primer pairs. primer3plus  <cit>  is a widely used web-based program for primer design, which provides similar options. in primer <dig> users can design a primer set consisting of a forward primer, a reverse primer and a probe, and they can choose a number of settings for controlling the quality of the primers, similar to prise <dig>  primer <dig>  however, focuses on designing primer sets targeting single sequences, and it does not take non-target sequences into consideration, nor does it allow mismatches to be placed on the 3' ends of the primers. in primer <dig>  the design is a single-shot process, without the flexibility and convenience of the interactive procedure available in prise <dig> 

primer-blast  <cit>  is an integrated tool for primer design provided by ncbi. it combines primer <dig> and blast along with the needleman-wunsch  global alignment algorithm, which overcomes the shortages of local alignment for primer design purpose. primer-blast first utilizes primer <dig> to generate the candidate primer pairs, and then applies the specific blast to check specificity. since it consists of two separate modules, users can check the specificity of existing primer candidates. however, primer-blast inherits limitations of primer <dig>  it does not have the feature to design a desired set of non-target sequences, and it has only limited ability to control mismatch positions. primer-blast achieves specificity of primers by forcing the number of mismatches between primers and unintended targets from a user-specified database, in a specific region at 3’ end.

other existing software packages for primer design include quantprime  <cit>  and primegens  <cit> . both these tools do not include options to specify non-target sequences or to design probes. for the 3’ end selectivity, quantprime provides only a rudimentary mechanism of limiting the number of mismatches near the 3’ end, while primegens does not implement this feature.

CONCLUSIONS
in this paper we presented prise <dig>  a new interactive software package for designing sequence-selective pcr primers. prise <dig> facilitates the design process through an intuitive, user-friendly graphical interface. among its main features, prise <dig> emphasizes primer selectivity at the 3’ end and it has the capability to add probes to selected pairs of primers. pre-tested default choices for all parameters are provided to simplify the process for less experienced users; while those more experienced can use the advanced options where these parameters can be highly customized. the package also includes a manual and a tutorial, to assist users with the design process.

prise <dig> has been tested on two very similar strains of the fungus dactylella oviparasitica, do <dig> and do <dig>  and it was able to create highly selective primers and probes for each of them. this result demonstrates the ability of prise <dig> to create high-quality sequence-selective assays.

availability and requirements
prise <dig> can be downloaded from http://alglab <dig> cs.ucr.edu/ofrg/prise <dig> php. alternatively, one can go to the ofrg website at http://algorithms.cs.ucr.edu/ofrg and follow the link to prise <dig>  the program is distributed as an executable file that can be executed once downloaded and no additional installation is required.

prise <dig> is free for non-commercial use. information about the commercial use of prise <dig> can be found at that website.

prise <dig> requires a minimum of 512 mb of ram . the software can run on the following systems:

 windows 2000/nt/xp/7/8

 ubuntu  <dig>  or higher

 mac os  <dig>  or higher



note: to run prise <dig> on mac os x mountain lion or higher, users may be required to change or bypass their gatekeeper settings to allow the installation. detailed information about this process can be found at http://www.imore.com/how-open-apps-unidentified-developer-os-x-mountain-lion.

activated internet connectivity is needed for full functionality, to connect to the ncbi website. for users who have target and non-target sequences already selected, or who have a local installation of blast, no internet connection is required.

prise <dig> is an open-source project. users interested in obtaining the source code should contact the authors by email.

prise <dig> is written in c++, with the graphical user interface implemented with the qt toolkit.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

y-th was responsible for the software design, implementation and testing. mc oversaw the design of the interface and the software, as well as testing. software requirements were provided by jb, who, along with ji-y, performed testing and experimental analyses. y-th, mc and jb participated in writing and editing of the manuscript. all authors read and approved the final manuscript.

