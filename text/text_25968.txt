BACKGROUND
non-coding rna genes  play important roles in the cell, e.g., structural, catalytic and regulatory functions  <cit> . the study ncrnas remains challenging, because laboratory experiments to confirm functions performed by one ncrna are difficult to be performed, and many distinct computational methods find different results to identify and classify ncrnas. one key problem is that ncrna functions are closely associated to their spatial  structures, which prevents the use of methods to predict protein coding genes based only on their nucleotide sequences .

identification of ncrnas have been developed for a variety of organisms , with the objective of constructing sets of different classes of ncrnas. in particular, snornas  <cit>  are  <dig> to  <dig> nt ncrnas, classified based on their characteristic sequence elements, called boxes, in two main classes: h/aca box snornas and c/d box snornas. in humans  <cit> , snornas are usually found in intronic regions where, after splicing reaction, they escape from degradation by forming a protein complex  <cit> . usually snornas have a short stretch of sequence complementary to target rnas, like rrnas, trnas and snrnas, performing chemical modifications on them. c/d box snornas contains fibrillarin that promotes the 2’o-methylation on target rnas, while h/aca box snornas contains dyskerin that catalyzes the conversion of uridine to pseudouridine  <cit> .

h/aca box snorna and c/d box snorna have distinct secondary structures. h/aca box snornas are formed by a double hairpin loop structure with two short-single stranded regions containing box h , located between the two hairpins loops, and box aca  followed by  <dig> nt upstream the 3’ end. the hairpin loops have bulges, or recognition loops, which form the antisense element for target rnas. normally the first unpaired nucleotide inside the recognition loop is an uridine located 13– <dig> nt before the h and aca boxes  <cit> . figure  <dig> shows a schematic secondary structure of h/aca box snorna.
fig.  <dig> example of h/aca box snorna




c/d box snornas are formed by two conserved boxes c  and d  near their 5’ and 3’ ends, separated by a short stem . inside the loop between c and d boxes, usually there are imperfect copies of c and d boxes, called c’ and d’. normally the antisense element is located  <dig> nt upstream c’ and d’ boxes. figure  <dig> shows a schematic secondary structure of a c/d box snorna.
fig.  <dig> example of c/d box snorna





snoreport  <cit>  is a tool that identifies the two main classes of snornas in single sequences, using a combination of secondary structure prediction and machine learning. in contrast to previous methods for snorna identification , snoreport prediction does not use information of putative target sites within ribosomal or spliceosomal rna . however, many orphan snornas have been discovered with the snoreport approach. the targets of orphan snornas are not known, consequently such genes would be missed by target depending on the identification method  <cit> . beyond this, some snornas are shown to target specific mrnas, suggesting other functions, e.g., interference with a-to-i editing . in order to identify c/d box and h/aca box snornas, snoreport uses position-specific weighted matrices  to identify boxes, together with a set of restrictions related to the secondary structure prediction, usually, restrictions about distance between regions of the secondary structure, and whether it forms the hairpins for h/aca box snornas, or the loop for a c/d box snorna.


snoreport produced good results. in the test phase, snoreport presented  <dig> % of sensitivity and  <dig> % of specificity for the c/d box snorna classification, while for h/aca box snornas, it has shown  <dig> % of sensitivity and  <dig> % of specificity. however, snoreport has been trained on almost exclusively mammalian sequences, having used some default parameters for the support vector machine  classifier. to date, many new sequences of snornas for different vertebrate organisms have been identified, and experimentally confirmed. furthermore, many tools and databases used to build snoreport have been improved. this suggests that snoreport has to be updated, in order to use new data and refined machine learning techniques to improve its performance.

we improved snoreport, by extracting new features for both box c/d and h/aca box snornas, developing a more sophisticated technique in the svm training phase , and using new versions of the tools and databases previously taken to build snoreport. to validate this new version of snoreport, we tested it in different organisms. these experiments have shown a very good performance.

this text is organized as follows. in the next section, we describe the methods used for building the new version of snoreport, particularly, data sources and the new workflow, besides the new features and details of the training phase. after, we show the results obtained by the new version of snoreport with different species of organisms. following, we discuss these results. finally, we conclude and suggest future work.

methods
first, data sources, software components, and the workflow used to build the new snoreport are described. next, the new attributes for boxes h/aca and c/d snornas used in the svm classifier are shown.

data sources
in snoreport, two datasets were used for the training and testing phases: positive samples and negative samples. the positive sample set was composed of h/aca box and c/d box snornas, while the negative one was obtained from a dinucleotide shuffling procedure executed in the positive samples with the eden  <cit>  library.

the positive sequences from each class of snornas were divided in two datasets, to be used in the learning process. in order to avoid overfitting, these datasets were created such that very similar sequences would not be stored in different datasets. first, we clustered the sequences using clustalw  <cit>  with criterion nucleotide similarity, which generated  <dig> clusters for c/d box snorna and  <dig> clusters for h/aca box snorna. after,  <dig> sequences from distinct vertebrates organisms were extracted from each cluster, noting that clusters containing less than  <dig> sequences were discarded. therefore, a consensus sequence from each cluster was obtained with clustalw and cons , and these sequences were used to generate a distance tree, with the neighbour-joining method  <cit>  from clustalw <dig> - phylogeny  <cit> . the next step was to divide this distance tree in two parts, which allowed to create the two datasets containing similar sequences. the generated trees of c/d box snorna and h/aca box snorna clusters can be viewed on additional file  <dig> 
table  <dig> number of sequences of datasets  <dig> and  <dig> of both c/d box and h/aca box snornas




position-specific weight matrices  were used to represent each characteristic sequence motif of h/aca box and c/d box snornas. these pwms were obtained by scanning the boxes from snornas of vertebrates. a pwm shows the probability that each nucleotide can be found in a particular position of a box motif. these pwms generate scores used to identify boxes in a candidate sequence. to create thresholds for each box, we scanned snorna sequences with a window size equal to the length of the corresponding box. the scanned candidate boxes that were not true boxes were classified as negative boxes. thus, we generated a density plot to define the thresholds. figures  <dig>   <dig>   <dig> and  <dig> show these density plots.
fig.  <dig> density plot of h box pwm-based scores


fig.  <dig> density plot of aca box pwm-based scores


fig.  <dig> density plot of c box pwm-based scores


fig.  <dig> density plot of d box pwm-based scores




in the validation phase, we used sets of predicted, and partially confirmed with experiments, snornas from many organisms: human  <cit> , nematodes  <cit> , drosophilids  <cit> , chicken  <cit> , platypus  <cit>  and leishmania  <cit> . these sequences were manually extracted from additional files  <dig>   <dig> and  <dig> of each paper .

software components
rna secondary structure prediction was performed using vienna rna package, current version  <dig> , in particular rnafold  <cit> , rnaz  <cit>  and rnalfold  <cit> . rnafold predicts a secondary structure associated with the minimum free energy  of a single stranded rna or dna sequence. rnalfold computes locally stable rna secondary structure with a maximal base pair span. it was used here in order to find the start position of a h/aca box snorna candidate. rnaz was executed to calculate zscore, an attribute of the feature vector of h/aca box snorna that represents the thermodynamic stability of a ncrna secondary structure.

many tools available in the libsvm version  <dig>   <cit>  performed the classification of h/aca box snorna and c/d box snorna: 

grid.py: to identify good values for c and γ svm parameters;


svm-scale: to scale the feature vector;


svm-train: to perform training and build a model used for predicting new candidates in the svm-predict tool;


svm-predict: to predict sequences not used in the training phase.




in order to calculate different performance measures , we developed a script using scikit-learn library  <cit>  to calculate accuracy, f-score, average precision, roc auc score and residual sum of squares . using these software components, the snoreport  <dig>  was entirely rewritten in the c language.

identifying snorna candidates in genomic sequences
as said before, both classes of snornas, h/aca box and c/d box, can be distinguished by their characteristic boxes, and some specific secondary structure features. for this, each class of snorna has a specific way to searching for candidates, described as follows.

searching for h/aca box snornas in a genome sequence was performed with the following steps : 
the genome sequence is scanned in order to find potential h boxes with pwm-based scores above a certain threshold;
fig.  <dig> workflow to identify h/aca on snoreport  <dig> 




if one h box candidate has a good pwm-based score, we executed first rnalfold to find the start position of one h/aca box snorna candidate, and then rnafold with some constraints to predict its secondary structure;

if the sequence between the start position and the h box candidate has a correct secondary structure, we look for aca box candidates with a maximum distance of  <dig> nts and presenting a pwm-based score above a certain threshold;

finally, rnafold is called for the sequence between h box and aca box. if this sequence has the correct structure, features for this candidate were extracted.




restrictions used to predict secondary structure are specific for each class of snorna. for the secondary structure of h/aca box snorna, the region upstream of box h and the region between box h and aca are used to fold into single stem loop structures. in the cell, snorna interacts with a set of different proteins that stabilize the large interior loop containing the target binding site. without these proteins, standard mfe folding algorithms can predict base pairs within this loop. therefore, to open the target region, we constrained the 14th base upstream of boxes h and aca, and in most cases the complete interior loop turns out to be unpaired in the mfe structure. figure  <dig> shows the canonical representation of h/aca box snornas.
fig.  <dig> canonical secondary structure of h/aca box snorna, with two hairpins and two short-single stranded regions containing boxes h and aca . the hairpin contains bulges, or recognition loops, which form complex pseudoknots with the target rna, where the target uridine is the first unpaired base  <cit> 




searching for c/d box snornas in a genome sequence was performed with the following steps : 
the genome sequence is scanned in order to find c boxes with pwm-based scores above a certain threshold;
fig.  <dig> workflow to identify c/d on snoreport  <dig> 




if the c box candidate has a good pwm-based score, we look for d box candidates with a maximum distance of  <dig> nts with pwm-based score above a certain threshold;

the candidate has its kink-turn structure  tested, and in case of having the correct one, rnafold is called to predict its secondary structure;

if it has the correct secondary structure, features for this candidate are extracted.




for the secondary structure of c/d box snorna, the complete region from the start of box c to the end of box d has to remain unpaired. many studies have shown that c/d box snornas must have a perfect kink turn structure that boxes c and d . for this, snoreport  <dig>  has a kink turn structure test, where a c/d box snorna candidate must have: g ∙a dinucleotides in box c  and box d; at least one uridine on the u-u pair ; and a watson-crick base pair between the 6th nt of c and the 1st nt of d box . figure  <dig> shows the kink turn structure of c/d box snorna, and fig.  <dig> shows the canonical representation of c/d box snornas.
fig.  <dig> kink turn structure of c/d box snorna  <cit> 


fig.  <dig> canonical secondary structure of c/d box snorna  <cit> . boxes c and d are located near to the 5’ and 3’ ends, noting that they are frequently folded together by a short stem. normally, imperfect copies of c and d boxes, called d’ and c’, are located internally in the loop, ordered as c, d’, c’ and d. the target rna is guided by antisense elements located upstream of d box or d’ box





extraction of feature vectors
if a snorna candidate meets all the previously described filters, and fold the secondary structure, snoreport  <dig>  extracts some attributes from a h/aca  box snorna candidate, in order to build a feature vector, which will be the input for the support vector machine . some changes in the feature vectors of both h/aca box and c/d box snorna candidates were introduced, compared to the previous version of snoreport.

in the feature vector of h/aca box snorna, the following new attributes were included: ac, gu, zscore, hscore, acascore, lloopsc, rloopsc, lloopyc, rloopyc, lloopsym and rloopsym. table  <dig> shows all the attributes that have to be extracted from a h/aca box snorna candidate.

mfec

a
c,g
u,gc

zscore

hscore

acascore

lseqsize

rseqsize

lloopsc

rloopsc

lloopyc

rloopyc

lloopsym

rloopsym



the attribute mfec shows the mfe of folding with constraint nucleotides, providing the information of how much “effort” is needed to force the candidate sequence to fit the requested structure, or if the candidate is more stable in another structure. ac, gc and gu contents are used to distinguish ncrnas from other rnas. for example, the human genome has approximately  <dig> % of gc content, but single sequences of mirnas and h/aca box snornas have  <dig> % of average gc content  <cit> . the zscore feature is obtained with rnaz  <cit> , representing the thermodynamic stability of a ncrna secondary structure. values hscore and acascore were computed using pwms of h box and aca box, respectively. attributes lseqsize, rseqsize, lloopsc, rloopsc, lloopyc, rloopyc, lloopsym and rloopsym help to discriminate arbitrary double stem loop structures from h/aca stem loop structures.

in the feature vector of c/d box snorna, new attributes were also included: zscore, bpstem, l
u <dig> l
u <dig>  stemunpcbox, stemunpdbox. table  <dig> shows the attributes that have to be extracted from a c/d box snorna candidate.

mfe

mfec

e
avg

e
stdv

ls

dcd

c
score

d
score

gc

zscore

bpstem

l

l

stemunpcbox

stemunpdbox



attributes mfec and mfe are used to distinguish both rnafold folding procedures, with and without restrictions, respectively. attributes e
avg and e
stdv represent average and standard deviation of folding energy for random sequences with identical nucleotide frequency in rnaz. values cscore and dscore were computed using pwms of c box and d box, respectively. the other attributes  allow to distinguish c/d box snornas from other rnas according to the stem found by the secondary structure prediction.

training and test phasesfig.  <dig> workflow of snoreport  <dig> 




since we have two datasets for each class of snorna, two different training and test phases were performed, one with dataset  <dig> as training and dataset  <dig> as test, and vice versa. for each dataset, negative samples were generated with a dinucleotide shuffling procedure from eden. in order to reliably measure the quality of the learning, we repeated the training and test phase  <dig> times for each dataset, generating on each time new negative samples. after creating the training and test dataset, the feature vector was scaled from - <dig> to  <dig>  using svm-scale for a better svm classification.

the next step was to perform a grid search for the c and γ parameters, using grid.py , a parameter selection tool for c-svm classification that uses the rbf  kernel. it uses a cross validation technique  to estimate the accuracy  of each combination of c and γ in the specified range, which allowed to choose the best values. following hsu  <cit> , “a practical method to identify good parameters is to try exponentially growing sequences of c and γ”. therefore, we first investigated all the combinations of these two parameters ranging both from 2− <dig> to  <dig>  shifting  <dig> for each step of the grid-search . figure  <dig> shows an example of a performed grid search.
fig.  <dig> grid search using accuracy as a criterion for the c/d box snorna classification. each line represents the accuracy obtained in the training phase, using parameters c and γ with 10-fold cross validation. here, the green line represents  <dig>  % of accuracy using any point of this line




after estimating parameters c and γ, the training phase was performed using svm-train, which used c-svm with the rbf kernel and probabilities estimates enabled. after training, we obtained a classifier  used as input in svm-predict to predict snornas from sequences not used in the training phase.

for a more refined analysis, we used the scikit-learn library  <cit> , which allowed to obtain three performance measures to better evaluate and compare the snoreport  <dig>  with the previous snoreport:‘q 
fixed threshold : a sample is classified as positive if its score  is above a certain fixed threshold;

dynamic threshold : measures based on moving thresholds along the positive class. it returns the area under the precision-recall curve  and the area under the roc curve ;

residual sum of squares : shows the discrepancy between data and an the estimator model.




RESULTS
first, we present statistics of the performance tests. then we will discuss the results of executing snoreport  <dig>  on real data of different organisms.

statistics
to identify h/aca box and c/d box snornas, we built two different datasets for each class of snornas. for the learning phases, we used one dataset as training and the other for test . each training was repeated  <dig> times, and our results show the average of the obtained results, together with their corresponding standard deviation. tables  <dig> and  <dig> show the results of the test phase of each snorna class obtained with snoreport  <dig> .





in order to compare the results with the previous version of snoreport, we executed on snoreport  <dig>  the datasets used in the tests with snoreport  <dig> . tables  <dig> and  <dig> show the results. these results have shown that snoreport  <dig>  presented a better performance to predict vertebrate data, with all the performance measures above  <dig> %. for h/aca box snorna, the f-score, which consider both precision and recall, snoreport  <dig>  was  <dig>  % better, having improved the old version. for c/d box snorna, we again see an increase of  <dig>  % on f-score, and better performances on all the other measures. thus, snoreport  <dig>  showed a significant improvement compared to the previous version.






validation on real data
to verify the quality of prediction, validation on real data was performed with two experiments. in the first one, we executed snoreport  <dig>  with a set of previously predicted vertebrate and invertebrate sequences, some of them partially confirmed in experiments, in humans, nematodes, drosophilids, platypus, chickens and leishmania. tables  <dig> and  <dig> show the summary of these results in vertebrates and invertebrates organisms, respectively.




yang et al.  <cit>  identified  <dig> snornas,  <dig> c/d box and  <dig> h/aca box in human, using snoseeker, a method based on probabilistic models, pairwise whole-genome alignments of eukaryotes, in which the user can include information of the putative target region or not . the previous version of snoreport predicted  <dig> out of  <dig> c/d box snornas and  <dig> out of  <dig> h/aca box snornas, while snoreport  <dig>  predicted  <dig> c/d box snornas and  <dig> h/aca box snornas.

schmitz et al.  <cit>  identified  <dig> individual snornas in a platypus brain cdna library, generated from small non-protein-coding rnas. after, using blast searches in platypus genomic sequences, they found  <dig> more sequences of snorna. we predicted  <dig> out of  <dig> c/d box snornas, and  <dig> out of  <dig> h/aca box snornas.

shao et al.  <cit>  identified  <dig> c/d box snornas in chicken using cdseeker and  <dig> h/aca box snornas using acaseeker . we predicted, with snoreport  <dig> ,  <dig> out of  <dig> c/d box snornas, and  <dig> out of  <dig> h/aca box snornas.

zemann et al.  <cit>  used a combination of high-throughput cdna library screening and computational search strategies to find  <dig> snornas  in caernorhabditis elegans. our snoreport  <dig>  predicted  <dig> out of  <dig> c/d box snornas, and  <dig> out of  <dig> h/aca box snornas.

huang et al.  <cit>  performed a large-scale genome wide analysis to identify both classes of snornas in drosophila melanogaster using experimental and computational rnomics methods, having found  <dig> snornas. our snoreport  <dig>  predicted  <dig> out of  <dig> c/d box snornas, and  <dig> out of  <dig> h/aca box snornas.

finally, liang et al.  <cit>  used a genome-wide screening approach to identify  <dig> c/d box snornas and  <dig> h/aca box snornas of closely related pathogens of leishmania major. we did not identify any c/d box nor h/aca box snornas. it is interesting to note that h/aca box snornas from leishmania major are quite different from the canonical h/aca box snornas of yeast and vertebrate. for example, they lack a recognizable h box, presenting an aga box instead of an aca box  <cit> . our snoreport  <dig>  was designed to identify canonical snornas from many different organisms, thus to predict h/aca box snornas from organisms that are different from the canonical model, we should use a different training set, together with a revision of the attributes of the feature vector.

in the second experiment, we investigated false positives in snoreport  <dig> . a variety of ncrna families were taken from rfam  <cit>  , and a set of  <dig> randomly chosen genomic loci of snorna comparable size taken from human genome grch <dig> p <dig>  <cit>  chromosomes  <dig>   <dig>   <dig> and  <dig> . to construct the confusion matrices , we chose one representative sequence from each cluster of snornas, as described in the data source section, in a total of  <dig> snornas,  <dig> c/d box and  <dig> h/aca box.




for the c/d box snorna experiment, we obtained a precision of  <dig> %, a recall of  <dig>  % and a f-score of  <dig>  %. this shows that snoreport  <dig>  is reliable to predict true c/d box snornas, since no other kind of ncrna was predicted as c/d box snorna.

for the h/aca box experiment, we obtained a precision of  <dig>  %, a recall of  <dig>  % and a f-score of  <dig>  %. analogous to the c/d box snorna experiment, our method prevent to obtain false positives, confirming that it is reliable to predict snornas. regarding the four non h/aca box snornas identified as so, three sequences belonging to chromosome  <dig> and one to chromosome  <dig>  it is noteworthy that, in chromosome  <dig>  one unknown h/aca box snorna, with probability of  <dig> %, was located inside the protein trpm <dig>  <cit> . the other two snornas were located in uncharacterized contigs. in chromossome  <dig>  we identified a h/aca box snorna, with probability of  <dig> %, inside the uncharacterized loc <dig> ncrna  <cit> .

discussion
in this work, we refined the training phase of the svm method, using different features in the characteristic vector, more data from different vertebrate organisms, and new versions of the tools and data bases used to build the first version of snoreport. we carefully chose good values for the c and γ svm parameters using grid searches.

all these steps allowed us to improve the performance of snoreport, avoiding false positives and finding more snornas. h/aca box snorna classifier had an improvement of  <dig>  % regarding to f-score, with the same data, when compared to the first version of snoreport. besides, the high score achieved from average precision,roc auc score and rss show us that the predictions have a high degree of reliability. the same could be observed for c/d box snorna classifier, which have an improvement of  <dig>  % regarding to f-score, and more than  <dig> % of all performance measures presented, allowing us to have high rate of quality on each prediction.

the validation phase showed, in the first experiment, that snoreport  <dig>  predicted  <dig>  % of snornas from vertebrates organisms, which shows that snoreport  <dig>  can identify snornas with significantly higher precision while maintaining recall. it is noteworthy that many sequences used for validation was not yet experimentally validated, and maybe some of them can be false positives, or are not representatives of the canonical snornas . in this case, snoreport  <dig>  could discard these candidates. since snoreport was trained with vertebrate sequence, snornas in invertebrates could not be detected efficiently by snoreport. to deal with some of these organisms, it is necessary to discover new features that describe those non standard snornas and use particular datasets in machine learning tasks. however, we find  <dig>  % and  <dig>  % of h/aca box snornas of nematodes and drosophilids described in literature, which suggests that h/aca box snorna predictor from snoreport can be used with high performance. in the second experiment, the validation confirmed that snoreport  <dig>  prevents to prediction of false positives.

therefore, snoreport  <dig>  constitutes a substantial improvent over its first version, and is now more efficient and reliable to identify both classes of snornas. it can be used for many different organisms, even invertebrates, with high quality of prediction.

CONCLUSIONS
in this article, we presented snoreport  <dig> , a reliable and efficient tool to predict the two main classes of snornas in different organisms. this version is a refinement of a previous version of snoreport, obtained with extensive improvements in the svm method, and the use of new versions of tools  and databases. in contrast to previous methods for snorna identification, snoreport  <dig>  can identify both guide and orphan snornas without using any information of putative target sites within ribosomal or spliceosomal rna nor using multiple alignments. experiments with very different organisms have shown good performance, even in invertebrates organisms , showing that snoreport  <dig>  can be used to obtain reliable prediction of snornas in a variety of organisms. besides, it prevents to predict false positives.

future work include to create specific datasets for different kinds of organisms , and to study at what extent different approaches to fold the sequences and different machine learning methods  allow to find intrinsic features or even to predict new snornas. clearly, these techniques could affect the performance of snoreport  <dig> . our method could also be used to identify snornas in specific species, e.g., fungi , or to find specific features and perform a svm training to identify snornas in leishmania. finally, a general method could be developed to allow svm training with particular organisms, according to an user’s necessity.

availability and requirements


project name: snoreport v <dig> ;


project home page: http://www.biomol.unb.br/snoreport;


operation system linux;


programming language c ansi;


other requirements: vienna rna package v <dig> . <dig> ;


license: gnu gpl


any restriction to use by non-academics: no restrictions




additional files

additional file  <dig> trees of c/d box snornas and h/aca box snornas. the generated distance trees of c/d box snorna and h/aca box snorna clusters, used to build the datasets for the training and testing phases. 





additional file  <dig> pwms to identify snorna boxes. position-specific weight matrices  used to identify boxes of both classes of snornas. 





additional file  <dig> machine learning statistics. statistics of all learning procedures made. 




abbreviations
mfeminimum free energy

ncrnanon-coding rna

pwmsposition-specific weight matrices

snornasmall nucleolar rna

svmsupport vector machine

