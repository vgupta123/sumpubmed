BACKGROUND
factor graphs are a graphical model formalism, able to capture both bayesian networks and markov networks, i.e. directed and undirected graphical models  <cit> . graphical models enjoy widespread use in genomics, in diverse areas such as genetics, integrative genomics and comparative genomics . a range of well-known bioinformatical models, such as position weighted matrices, hidden markov models, hierarchical models and phylogenetic models can all be cast into the factor graph formalism. therefore the overall return from efficient algorithms and methods operating on factor graphs is high.

signals in data are often associated with large deviation from a null  model. the amount of deviation is quantified with a score, such as the odds-ratio, i.e. the ratio between the probability of an observation under a foreground model to the probability under a null model. the odds-ratio is a popular choice of score, but in statistical practice other scores can be preffered, either because they are more robust, easier to compute, easier to interpret or simply because there is no explicit foreground model. irrespectively of the chosen score function, an important question is the statistical significance of the score, i.e. what is the probability that a score as high or higher is generated from the null model.

in the present paper we consider the problem of evaluating statistical significance of rare events defined over factor graphs. a problem which is generally np-hard even in the special case where all variables are independent of one another  <cit> . accordingly, it is important to formulate numerical approximations instead of exact methods. we have developed two approximation methods, one is based on importance sampling, the other on a saddlepoint approximation. both methods rely on novel algorithms for their efficient evaluation. the merits of the individual methods are assessed both theoretically and in a simulation study.

the applicability of the methods is demonstrated with four models used in different areas of bioinformatics. first, we consider the poisson binomial distribution. this model has a number of applications, among others in cancer driver detection, where it is used to find regions of the genome that contain a surprisingly high number of somatic mutations  <cit> . second, the ubiquitous position weight matrix model for motif description is discussed. the literature on pwm models also contains proofs that the problem of evaluating the significance of a motif match score defined by a pwm under a genomic background represented by a first-order markov model is np-hard  <cit> . this also shows that the more general class of problems is np-hard. the third model is higher-order markov chains. again a markov chain is an extremely versatile model with applications both inside and outside of bioinformatics. here we focus on a recent use in modelling sequence motifs, where parameters in a higher-order markov chain are learned in a regularized fashion  <cit> . finally we look at phylogenetic models and models of nucleotide substitution. phylogenetic models are interesting in their own right but also serve to illustrate the use on models with more complex dependency structures. we use the framework to evaluate if a position in an alignment column shows evidence of evolutionary conservation. though simplified this is conceptually similar to the widely used phylop-score, measuring evolutionary conservation and acceleration  <cit> .

for many probabilistic models it can be computationally expensive if not intractable to evaluate the statistical significance of an observation. even for the models where an efficient computational scheme exists it is often time-consuming to derive and implement. with the genericity of the factor graph formalism, we believe that the methods proposed here, will aid the analysis of data using a wide range of models. we have implemented the importance sampling and saddlepoint approximation methods in a freely available r-package called dgraph and provide code for the examples discussed in the paper. for efficiency the core algorithms are implemented in c++ using the rcpp r-package  <cit> . dgraph also contains methods for training factor graph models using the em-algorithm, this however is not a focus in the current paper, where we will treat models and parameters as given.

despite the fact that the saddlepoint approximation was conceived as far back as  <dig>  <cit> , it has only seen sporadic use in genomics  <cit> . we find that there are ample opportunities to apply saddlepoint approximation in genomics, but its intimidating appearance may have prevented more widespread application. by supplying an r-package we hope to reduce the barriers towards the use of saddlepoint approximation.

in applications of importance sampling, the proposal distribution is often picked based on experience, calibration or experimentation. by pointing out similarities between saddlepoint approximation and importance sampling and tying it up to existing litterature, we can advise the choice of proposal distribution in importance sampling on factor graphs. applying this more principled approach could lead to the discovery of more effecient importance sampling schemes for particular problems.

methods
problem statement
throughout the paper we will work with factor graphs  <cit> . importantly, both directed  and undirected  graphical models can be cast into the factor graph formalism . a factor graph is a bipartite graph consisting of variable nodes, x, and factor nodes a . there can only be edges between variables and factors. to every factor node, a, we associate a potential, f
a, which is a non-negative function of the neighbouring variables, x
a. the factor graph induces a probability measure over the variables 
  <dig> p∝∏a∈afaxa. 
fig.  <dig> a factor graph with two variables. the probability function is p∝f
af
b. it is customary to shade observed variables and leave latent variables unshaded. to calculate the marginal probability of the observed variables, we need to sum out the latent variables. the sum-product algorithm does that efficiently taking advantage of the conditional independence structure of the graph




if ∑x∏a∈afaxa= <dig> we will say that the factor graph is normalised and the proportionality in  can be replaced with equality. the sum-product algorithm, the main algorithm for calculating likelihoods and marginals, operate on graphs free of undirected cycles and with finite state spaces  <cit> . we will therefore limit ourselves to cycle-free graphs with finite state spaces. as continuous distributions can be discretized and thus this does not present a major limitation.

we define a score of an observation, x, as: 
  <dig> s=∑a∈agaxa, 


where gaa∈a is a collection of functions. given a null model, x,a,faa∈a, we are interested in determining how often extreme scores occur, that is we will address the problem of evaluating significance, p>t).

it has been shown that even the simpler subclass of this problem where the variables are independent, i.e. each variable node form a connected component together with its neighbouring factor nodes, is np-hard , yet an exact solution can be obtained with a method known as convolution . the convolution approach may be generalized to the depedence scenarios, factor graphs can represent, but not without significant additional bookkeeping, rendering the method intractable even in problems of modest size. in this light we investigate a number of approximation methods namely naive sampling, importance sampling, normal approximation and saddlepoint approximation.

in many real world problems, for instance in genomics, interesting findings often has significance, z=p>t), in the order of 10− <dig> or smaller. where an absolute error of e.g. 10− <dig> is more than good enough for a probability in the order of 10− <dig>  it is inadequate for a probability in the order of 10− <dig>  generally, if z^ denotes our estimate, to establish the order of magnitude of z, we need a small relative error, z−z^/z, rather than a small absolute error, z−z^.

scores
a number of different scores can be employed, indeed the examples will give an idea of the flexibility that eq.  offers in devising the scoring scheme. two choices deserve special attention. first, consider the case where we have a null model p
bg and define s=− log). with this choice of score a high value is equivalent to a small likelihood indicating an observation that is unlikely under the model. we can write 
  <dig> s=−log)=∑a∈a−logfa 


and it can be seen immediately that s is indeed of the form  with g
a=− log).

second, if instead we want to compare a background model to a foreground model, p
fg, we can define the score from the ratio of the probabilities in the two models: 
  <dig> s=logpfgpbg=∑a∈alogfafgfabg. 


again this is on the form  with 
  <dig> gaxa=logfafgxafabgxa. 


sampling based methods
in the following we introduce three different approximation methods for significance evaluation. in the end of the section we highlight similarities and differences.

the first method is importance sampling  using the following class of proposal distributions parameterised by α: 
  <dig> p~α∝pexpα∑a∈agaxa. 


as α increases the corresponding proposal distributions will generate higher scores more frequently. note that by taking α= <dig>  is is reduced to naive sampling. with the particular choice of gaa∈a from eq. , the proposal distributions have the form 
  <dig> p~α∝pbg1−αpfgα. 


here the parameter α gradually skews the proposal distribution from the background distribution  to the foreground distribution  and beyond.

due to the factorisation properties, the proposal distributions generally have a particularly simple form 
  <dig> p~α∝pexpα∑a∈agaxa=∏afaxaexpαgaxa=∏af~a,α, 


where f~a,α=faexpαga. this is again an  factor graph model with the same structure. the marginal distribution for each variable and for each set of variables neighbouring the same factor node can be found with the sum-product algorithm. using a method reminiscent of the forward sampling method used for bayesian networks , we can generate samples, x
 <dig> x
 <dig> …,x
n, from the proposal distribution  . the weight of each sample is wi=w=p/p~α and the score is s
i=s. the is estimate of the significance is then, 
 p≈1n∑i=1nwi𝕀si>t. 


as with sampling in general the variance of the estimate is o, yet the choice of α is critical to the performance of is in practice. one natural choice of α is such that the mean score under the importance sampling distribution is equal to the score threshold, t, i.e. 𝔼αs=t.

using proposal distributions of the form  has been explored previously in sequence analysis; the same idea is applied to hidden boltzmann models, a generalization of hidden markov models, in  <cit> . this theory enables computation of significance statistics over sequences of arbitrary length, whereas we generalize to arbitrary structures. we will see later that this particular class of proposal distributions is in fact an example of exponential tilting , an idea tightly linked to the method of saddlepoint approximation that we will explore next. in  <cit>  it is recommended to pick α using calibration requiring sampling with multiple different values of α’s. below we provide a method for choosing an α, that in many cases has the property of logarithmic efficiency , and can computed efficiently.

analytical approximations
we now derive two analytical approximations. first the conceptually simpler normal approximation and second the saddlepoint approximation.

consider a random variable s with density function f
s and define the moment generating function, φ=𝔼eθs, and the cumulant generating function, κ= logφ. the exponential family generated by s is defined by 
  <dig> f=exp)fs. 


the probability measures in this family are called the exponentially tilted measures. the following important identities connect the mean and variance of distributions in this family to the cumulant generating function, see e.g. : 
  <dig> 𝔼θs=κ′and𝕍θs=κ′′. 


in a normal approximation the score distribution is approximated by a normal distribution having the same mean and variance. these quantities can be found using the cumulant generating function: 
  <dig> ms=𝔼s=κ′ 


and 
  <dig> vs=𝕍s=κ′′. 


the tail estimate is then: 
  <dig> p≈1−Φt−msvs 


where Φ is the distribution function of the standard normal distribution. the normal approximations has generally quite poor performance in the tail of the distribution as we will show later.

saddlepoint approximation  is another analytical approximation that has better performance in the tails . sa is typically used for independent variables or in weak dependence scenarios  <cit> , but we have developed algorithms that allow their evaluation on general factor graphs. along with introducing sa, that might be unfamiliar to many readers, we will also indicate where these algorithms are used.

sa proceeds by choosing the parameter, θ=θ, called the saddle-point, such that the mean under f) is t, that is 
  <dig> 𝔼θs=κ′)=t. 


we want to evaluate the tail probability 
  <dig> p=∫t∞fsds=∫t∞exp−θs+κ)f)ds. 


now approximate f) with a normal distribution having the same mean, t=κ
′), and variance, v≡κ
′′). then we have 
  <dig> p≈∫t∞exps+κ))×12πvexp2)ds=φ)∫t∞12πvexp−v)22v+12θ2v−θtds=φ)exp)expθ2v2×1−Φv). 


in order to obtain the saddlepoint approximation we need to solve  and compute κ
′′). it turns out that both κ
′ and κ
′′ can be calculated exactly with extensions of the standard message passing algorithm . we solve  numerically using newton-raphson and then proceed to calculate κ
′′).

importance sampling vs. saddlepoint approximation
importance sampling and saddlepoint approximation are more similar than they appear at a first glance. let us look again at , f is the density function of s with x∼p, similarly f is the density function of s with x being distributed according to 
  <dig> f=exp−κ)pbg=φ−1expθ∑a∈agap. 


we see that we recover  and that importance sampling and saddlepoint approximation are essentially just two strategies for evaluating : either sampling f indirectly through f or approximating f by a normal distribution. the above analysis also suggests that a good choice of α for importance sampling around t is using the saddlepoint κ
′≈t. we will call importance sampling using this strategy for choosing α
saddlepoint guided importance sampling .

RESULTS
poission-binomial
as a first example we discuss the poisson-binomial distribution. the poisson-binomial distribution arises as the number of succeses in n independent but not neccesarily identically distributed bernoulli trials. let p
 <dig> …,p
n be a set of probabilities and {yn}n=1n be independent with y
n∼bernoulli. then s=∑n=1nyn is poisson-binomial distributed. in the case where p
n=p the poisson-binomial reduces to the regular binomial distribution.

the model has seen widespread use in a variety of fields, including genomics, forensics, psychometrics and ecology . as an example melton et al.  <cit>  considers regional somatic mutation status in cancer samples. a logistic regression model is used to determine the mutation rate at each loci for each sample. they then identify cancer-drivers by testing if a given genomic region has a surprisingly high number of mutated samples.

we compute the tail of a poisson-binomial using sa and using a fast fourier transform based method   <cit>  as implemented in the r-package poibin . in the simple case with p
i=p we also compare with the exact binomial probabilities . all comparisons are qualitatively alike: the saddlepoint and dft-cf methods give identical results for most part of the tail. the saddlepoint approximation is not suited for calculating large  p-values . on the other hand the dft-cf method experiences numerical underflow for small p-values . large p-values are typically not of interest and can usually be computed efficiently by other means.
fig.  <dig> 
a the tail of a poisson-binomial distribution where p
i is drawn independently from a beta and n= <dig>  the saddlepoint approximation tracks the exact distribution perfectly. the poisson-binomial as implemented in poibin r-package. b a comparison of the computation time for the two algorithms. the dft-cf method has quadratic run-time complexity whereas the saddlepoint method has linear run-time complexity




an additional argument for prefering saddlepoint approximation over dft-cf is the run-time complexity. although the dft-cf uses the fast fourier transform, the required preprocessing step makes it an o algorithm. in contrast, the saddlepoint approximation scales linearly with n, having complexity o .

for many applications it is attractive to assign a different score, s
n, for each event, y
n, leading to a new score of the form s=∑n=1nsnyn. using a different score and thus a different test statistic can be used to increase the statistical power of the test. the dft-cf does not readily generalize to different scoring schemes whereas this is immediately achieved with sa and sg-is.

pwms
our next two examples revolve around sequence motifs. we consider analysis of motifs with both the classical position weighted matrix model and a more recent bayesian motif model.

consider a simplistic dna model, where dna is a sequence of letters, x
1⋯x
l, from a four-letter alphabet. the x
i’s are independent and identically distributed and we let p
j=p for j∈{a,c,g,t}. a motif is  a fixed length subsequence of dna that exhibits a specific pattern. this pattern can be described with a probability distribution j={a,c,g,t} at each position i∈{ <dig> …,n} and is typically represented in a position weighted matrix , which is a 4×n matrix, m, where m=f
ji.

if we think of the dna-model as the background model and the motif as the foreground model, the log score for a subsequence x
m⋯x
m+n− <dig> of length n is simply: 
 sxm⋯xm+n−1=∑i=0n−1logfixm+ipxm+i. 


this is a sum of independent random variables and the motif model can be encoded in a rather simple factor graph, where each variable has its own potential . the significance can be evaluated using discretization and dynamic programming. these computations can be accelerated using heuristics such as branch-and-bound, still the problem remains np-hard  <cit> .
fig.  <dig> 
a sequence logo for the ctcf binding motif. the larger the letters, the higher the fold-enrichment compared to the background distribution. b the pwm model represented as a factor graph. note that since the nucleotides are considered independent of one another, no variable nodes are connected. c the approximations to the tail obtained from is, sa and the method from the tfmpvalue package. d the relative difference between significance estimates from tfmpvalue and is and sa respectively for all jaspar vertebrate motifs. the differences for the ctcf motif is indicated with yellow stars




as an illustration we analyse  <dig> motifs from the jaspar database  <cit> . sequence motifs are often represented with so-called sequence logos that show the log <dig> fold enrichment of a given base relative to the background .

we calculate the significance over a range of scores using both sa and is and compare with the estimates of the significance obtained from the tfmpvalue software package  <cit> . here we show the estimates for the ctcf motif. . as a means for evaluating the difference between the approximations, we compute the relative difference at a number of quantiles and take the average of the numerical value of these. by this measure it can be seen that all three methods agree well: is showing relative differences in the order of 10% with  <dig> samples and without tuning α. the relative differences for sa decreases with motif length and is typically less than 10% for motifs longer than  <dig> basepairs. the motifs where the saddlepoint approximation performs poorly have a strong preference for a single base at each site. for these motifs the score matrix have similar contributions at each site, causing the score distribution to have a discrete nature, not well approximated by sa .

the poisson-binomial and the pwm models can be seen as special cases of a more general class of models with variables taking a discrete set of values. in the supplement we state a theorem giving conditions, where the saddlepoint approximation has uniform relative error o for this class of models . we then give sufficient conditions for both the poisson-binomial and pwm model. although this result involves the limiting behaviour of the approximation, it has been demonstrated that the saddlepoint approximation has remarkably small error even for small n  <cit> .

tfmpvalue has two modules for p-value computation. the first calculates the exact p-value and the other rounds the score-matrix to increase computational speed. the exact p-value computation module in the tfm software has exponential computational time complexity  therefore we only compare with the approximate p-value calculation from tfm.

the approximate tfmpvalue computation is on <dig>  but faster in practice due to the branch-and-bound heuristic. again computing saddlepoint approximation is roughly o. for shorter motifs this does not make any practical difference, but for longer motifs  the difference can be sizeable depending on the exact problem and the desired level of accuracy . in the next section we will show that the sa and is methods can be applied to richer motif models, where the convolution methods can not easily be adapted.

higher-order markov chains
first- and higher-order markov chains is another application domain of sa and sg-is. in a recent paper by siebert et al.  <cit>  they argue convincingly for replacing the pwm motif models with higher order markov chains using a bayesian prior .

a pwm model assumes that each base in a motif is independent. in contrast markov chains are able to capture context dependent nucleotide frequencies at the expense of more parameters. siebert et al. overcome the challenge of training the parameter rich models by employing a bayesian model, where the prior shrinks the high-order parameters towards their lower-order counterparts for contexts rarely encountered in the training data.

bamms outperformed pwms in discriminating chip-seq peak-sequences from simulated background sequences of the same length and tri-mer composition. including flanking regions widens the gap between bamms and pwms in terms of predictive power. this is possibly explained by two modes of dna-protein binding specificity; base readout and shape readout. in base readout the protein recognizes the dna sequence. this form of binding specificity is dominant in the core motif and is reasonably well-captured by pwms. in shape readout the protein recognizes the shape of the dna, the dna shape is in turn determined by motifs showing high neighbour correlation  <cit> .

due to the large-scale nature of motif-detection accurate p-value evaluation is important. as pwms are markov chains of order zero, we are again dealing with an np-hard problem, making it natural to look for approximate methods.

we obtain a bamm for the ctcf transcription factor binding motif in mcf- <dig> cell lines . second- and higher-order markov chains contain cycles and are therefore not immediately suited for the framework. however by compounding variables an n-th order markov chain can be represented as a first order markov chain .
fig.  <dig> 
a 2nd and higher-order markov chains contain cycles. but higher-order markov chains can be viewed as first order markov chains by compounding variables. we thereby obtain a tree-structured graph. b simulating  <dig> sequences of the same length as our motif and estimated the significance and corresponding 95% confidence interval shown in shaded grey. we compare this with sa and is using  and  <dig> samples. c we simulated  <dig> sequences of length 200bp and calculated the maximum motif match score of all offsets, the 95% confidence interval is shown in shaded grey. to calculate the significance of this maximum, we used the calculation from a single match and employed a poisson approximation




first the significance of the log-odds score of a single match is determined using sa and is. second the accuracy of the approximations is verified using deep naive sampling, generating  <dig> background sequences of the same length as the motif  with a homogeneous second order markov model. comparing the approximation to the estimates obtained from deep naive sampling we the see that they track each other perfectly .

another classification task of interest is identifying longer sequences containing the motif. we simulate  <dig>  <dig> bp long sequences again with a homogenouos second order markov model. within a  <dig> bp long sequence a motif of length k can start at 200−k+ <dig> positions . we consider the max of log-odds scores obtained from evaluating a motif match in all offsets. to calculate the significance we use the estimates of significance for a single match and employ a poisson approximation  <cit>  . the poisson approximation is typically valid if the sequence we search is sufficiently long and the motif is not of low complexity . again we observe that the sa and is method combined with poisson approximation provides a good approximation of the statistical significance .

phylogenetic trees
our final example is derived from molecular evolution. a phylogenetic tree represents the relationship among species. with each leave representing a species and internal nodes common ancestors.

evolutionary conservation manifests itself by a slower than normal substitution rate. at the population level, purifying selection maintains phenotypic function by constraining the evolutionary process and effectively eliminates some mutations from being fixed as substitutions. evolutionary conservation therefore reflects presence of functional constraints. using a fixed phylogenetic tree and a model for nucleotide substitution we can calculate the expected number of substitutions along the branches of the tree given the present day sequences. we can then evaluate if this number is significantly lower than expected. this is conceptually similar to the widely used phylop-score, although their method is more sophisticated; modelling and accounting for clade specific mutation rates and indels  <cit> .

we perform our analysis on a phylogenetic tree with  <dig> leaves, corresponding to present day sequences . a phylogenetic tree model can be cast into a factor graph where leaf and each internal nodes are variable nodes and branches are factor nodes . assuming the jukes-cantor substitution model, we can calculate the transition probabilities and the expected number of transitions conditional on the end points of each branch. these are exactly the matrices needed in order to compute the expected number of substitutions conditional on the present-day sequences. note that we are not limited to the jukes-cantor model, these matrices can be computed for any substitution rate matrix  <cit> .
fig.  <dig> 
a a phylogenetic tree with  <dig> present sequences. a single alignment column with a high degree of identity across sequences indicate evolutionary conservation. b a phylogenetic tree can easily be converted to a factor graph, here shown for a phylogenetic tree with only  <dig> species. note that the common ancestors are typically not available for sequencing and their sequences are unknown. the internal variables are therefore unshaded indicating a hidden variable. c the distribution of the conditional expectation of the number of substitutions over the whole phylogenetic tree, given the present sequences. the distribution is obtained by simulating  <dig> times. d we use is to estimate the tail of the distribution by sampling n= <dig>  scores. two different α-values were used:  <dig>  corresponding to naive sampling and  <dig> . note that naive sampling has much wider confidence bands in the tail compared to importance sampling




the distribution of the conditional expectation of the number of substitutions is obtained by simulating  <dig> alignment columns . as we are testing for evolutionary conservation, a low number of expected substitutions is significant, testing for accelertion is however easily done by instead regarding a high number of expected substitutions as significant. while the actual number of substitutions is evidently an integer, the conditional expectation can be any non-negative number. note also that even for complete sequence identity the expected number of substitutions is non-zero as multiple substitutions at the same site can anull each other. observing less than  <dig> expected substitutions is a moderately rare event. but using is we can get a good handle on these probabilities .

in the present example the chosen score factorizes neatly according to , but this would not have been the case had we chosen a likelihood based score. as opposed to the previous examples this example contains latent variables. the log likelihood does not factor into . this is not a problem for the is procedure, where we can still simulate data from the full data distribution and then calculate the likelihood. for the sa method there is no immediate solution.

efficiency
in the following two sections we address the question of efficiency; basically establishing and evaluating appropriate measures of the quality of our approximations, both in terms of accuracy and computational cost.

normal and saddlepoint approximations
the error bounds typically given for the normal and saddlepoint approximations, are derived for sums of i.i.d. variables or markov chains  <cit> . we review a few of these results. as i.i.d. variables and markov chains are special cases in our setup, they will inform us on the behaviour we should expect in the general case.

for the normal approximation the berry-esseen theorem  <cit>  provides us with an upper bound on the absolute errors. consider a sequence x
 <dig> x
 <dig> …,x
n of i.i.d. variables having mean μ and variance σ
 <dig>  set s=∑i=1nxi, then 
 supx∈ℝp−Φt−nμσn=o1n. 


however the relative error is not bounded, which in most cases can be ascertained by considering a t of order n.

on the other hand the saddlepoint approximation has relative error of order o  <cit> . this bound holds for homogeneuous markov models and under mild regularity conditions for the poisson-binomial and pwm models . opposed to the normal approximation, the saddlepoint approximation will recognize bounded variables in the sense that  has no solution if t is outside the range of s.

to study the behaviour of the saddlepoint approximation in the general case, we conduct a simulation study. we investigated how the complexity of the graph, the degree of independency between the contributions from each factor and the size of the graph affects the quality of the approximation. the graphs were chosen as balanced trees  and such that the contribution to the sum  from each factor had the same marginal distribution. the complexity is adjusted by the degree of the variable nodes in the tree. the degree of independency is measured by the variance ratio, the ratio of the variance of the score and the sum of variances from each factor  
  <dig> vr=𝕍∑a∈asa∑a∈a𝕍sa. 


for a more detailed description see additional file 1: section ii.

first note that as we go to smaller percentiles the errors in the saddlepoint approximation remains stable, whereas they increase in the normal approximation increases. this parallels the situation for i.i.d. variables . as expected the relative error decreases with the size of the graph , note however that the errors do not seem to converge to zero. this we believe is explained by the discrete nature of the scores, there exist a correction factor to the saddlepoint approximation in the case the variables take values on a lattice: 
  <dig> k=αθ1−exp−αθ, 
fig.  <dig> 
a we investigate the quality of the approximation as a function of graph size and conditioned on the degree of independence between variables as measured by the variance ratio . here we found the 1%-quantile in a markov chain using importance sampling. we then found the saddlepoint approximation of the tail probability in this particular point and plot the relative error as a function of the length of the markov chain. for details see additional file 1: section ii. b the relative error measured at different quantiles for both sa and normal approximation, this was done under the same range of conditions as above. we see that while the errors remain stable for the sa they increase for the normal approximation as we move to smaller percentiles




where α is distance between two consecutive points in the lattice. generally log-odds scores will not take values on a lattice, still as the correction factor is larger than  <dig>  it suggests that the tail probability is underestimated and more so for large θ, this explains the only near convergence to zero. it is further observed that the convergence is slower for more complex graphs, i.e. graphs having many nodes with high degree, and that there appear to be an optimal amount of correlation between the contributions from each factor in the graph .

sampling based methods
both naive sampling and importance sampling gives unbiased estimates. we are therefore concerned with the variance of our estimate and not the bias. statements about the variance are typically phrased in an asymptotic setup. let {p
n} denote a family of probability distributions, where p
n is derived from a factor graph with n factor nodes. assume also that the contribution of each factor to  is identically distributed with mean μ. consider now z
n=p
n) and let z
n be the estimate of a z
n obtained from a single sample. we will say that the class of estimators, {zn}n=1∞, has bounded relative error if 
 limsupn→∞𝕍zn2<∞. 


for technical reasons one often considers the slightly weaker criterion of logarithmic efficiency namely, 
 limsupn→∞𝕍zn2−ε= <dig> ∀ε> <dig>  


the relationship between naive and importance sampling resembles that between normal and saddlepoint approximation: in the case where the contributions to  are also independent, sg-is has logarithmic efficiency as proven in  <cit> . for naive sampling the absolute error tends to zero but the relative error tends to infinity. we have strong reasons to believe that if certain regularity conditions regarding the correlation between neighbouring variables are imposed, logarithmic efficiency also holds in the more general case of factor graphs having bounded degree. we are currently working on a proof, this is however beyond the scope of the current work.

computational speed
making a direct comparison of the computational speed of evaluating the saddlepoint and normal approximations on one hand and doing importance sampling on the other is not meaningful, as the accuracy of the importance sampling depends both on the number of samples and the choice of tuning parameter α.

furthermore the three methods have different behaviours when it comes to evaluating a range of points and not only a single point: the additional computing time for importance sampling is negligible as long as the points have roughly similar significance so that we can use a single batch of samples generated with one α value. similarly for the normal approximation the mean and the variance of the score needs being calculated only once, the computational cost of evaluating the normal distribution is again negligible. the saddlepoint approximation does get sligthly faster per evaluation with consecutive evaluation, as the newton-raphson procedure can be initiated with the previous saddlepoint, still there is a linear cost in the number of evaluations .

all three methods scale linearly with the number of nodes in the graph . this suggests that we can formulate a rule-of-thumb regarding the number of points we need to evaluate before importance sampling becomes faster than sa. the benchmarks show that one evaluation of the saddlepoint approximation takes about the same time as generating  <dig> importance samples.

in conclusion saddlepoint approximation is accurate and relatively fast for a single evaluation. if we have to do multiple evaluations importance sampling is preferable. if speed is really the main concern and we need to evaluate a large range of scores, we can use the normal approximation to obtain rough estimates.

discussion
the saddlepoint approximation was originally conceived by daniels as far back as  <dig>  <cit> . although it has found uses in some areas of biomedical science e.g. survival analysis  <cit> , its intimidating look may have prevented widespread use in genomics, where we believe there is ample opportunity to apply it. the r-package we have developed contains methods for both building and training models, but also for applying the saddlepoint approximation and importance sampling algorithms. thereby we hope to reduce the barriers towards the use of saddlepoint approximations.

sg-is was derived by noting similarities between importance sampling and saddlepoint approximation. the literature contains proofs that this importance sampling scheme is in a certain respect the optimal  <cit> . taking this more principled way of designing importance sampling distributions is likely to lead to faster convergence to effective importance sampling schemes.

a direction of research that can be further pursued is how to deal with latent variables: as briefly discussed in the context of phylogenetic trees, the log-odds score does not factorize when we have latent variables. it is therefore not possible to calculate the moment generating function and its derivatives efficiently using the algorithms we use here. this prevents the use of the saddlepoint approximation. importance sampling will however still work, by just using the tilted distribution on the full data distribution.

the methods and algorithms have been phrased in terms of the factor graph formalism throughout the paper. as factor graphs can capture both directed  and undirected  models the theory applies to both of them. especially bayesian networks have gained much popularity as a tool for integrating the vast array of molecular profiling experiments. the general framework of factor graphs is a powerful tool to analyze such data.

CONCLUSIONS
in the current paper we have presented saddlepoint approximation and importance sampling based methods for evaluation of significance in factor graphs. efficient algorithms were developed for computing the first and second order statistics, required to derive the saddlepoint approximation, making the saddlepoint approximation feasible for large graphs. we provide an adaption of the forward-sampling algorithm tailored to factor graphs, needed for importance-sampling.

we further reviewed the theoretical properties of the two methods. as most results are derived for independent identically distributed variables, a simulation study was performed to confirm that many of the properties still hold in a range of dependence scenarios. further we compared the computational speed of the methods to give rough guidelines for deciding between the two.

we demonstrated the utility of the methods considering four different bioinformatics applications. the examples were chosen to show that current models can make use of the methods, but also point forward to new applications. first we looked at the poisson-binomial model, despite or because it is the simplest of the models, it has numerous uses. at the same time it appears that the algorithms used for analysing the poisson-binomial model is not state of the art. for exact computation, an adaption of the algorithm implemented in the tfmpvalue r-package  <cit> , is likely to outperform the dft-cf method. we showed that our approximation methods were able to compute the significance to a high accuracy.

two motif examples were given, both to show that the problem we are solving is np-hard, but also to provide useful methods to the motif-analysis field. these methods are especially likely to prove valuable for long and complex motifs such as nucleosome binding motifs.

the phylogenetic example was of a more complex nature than the other examples, highlighting the flexibility of the methods, more than trying to compete with existing methods. yet, it is qualitatively similar to the phylop-score. with the availability of massive multiple alignments, such as the ucsc 100-way vertebrate alignment and the coming results of the genome 10k projects  <cit> , there should be ample opportunity to apply these methods.

additional file

additional file  <dig> supplementary material. this file contains extended method descriptions and supplementary figures. additionally there is a vignette accompanying the dgraph r-package as well as vignettes covering each of the models used in the result section. 

 


abbreviations
bammbayesian markov model

dft-cfdiscrete fourier transform of characteristic function

emexpectation maximization

isimportance sampling

pwmposition-weight matrix

sasaddlepoint approximation

sg-issaddlepoint guided importance sampling

vrvariance-ratio

