BACKGROUND
protein identification using mass spectrometry is one of the fundamental tools of proteomics. liquid chromatography coupled to electro-spray injection tandem mass spectrometry   <cit>  is the method of choice for the fully automated, high throughput experiments that increasingly typify proteomics research  <cit> . these methods have pre-processing steps that may include extracting the proteins, digesting the proteins with a cleavage enzyme such as trypsin, and separating the resultant peptides using reverse phase lc columns. the samples are then introduced into the mass spectrometer by means of elution through a nano-spray injector. the output is a large number of complex mass spectra. the challenge of protein identification is to unambiguously match a single theoretical peptide to each of the unidentified spectra resulting from a true peptide fragmentation inside the machine. a confounding factor is the large number of spectra generated from noise, contaminants, and non-peptide products, as well as spectra that do originate from peptides, but are of such low quality that there is not enough reliable information to declare a theoretical match.

these comparisons between the observed and theoretical spectra are implemented as "metrics", which is a mathematical term for a function defining a distance between elements of a set. in the context of peptide metrics, a metric gives a measure of similarity between an observed spectrum and a theoretically generated spectrum. a metric may be a single feature, such as the number of matching peaks between the observed and theoretical spectrum, or it may be a complex function derived from many attributes of the potential match, such a dot product between a theoretically predicted and observed spectrum after mapping each into vectors. a peptide identification metric takes, as input, a candidate theoretical peptide sequence and an observed spectrum, and outputs a score representing the measure of confidence of a match between the two. a perfect metric, when given an unidentified spectrum and a set of candidate theoretical sequences would in every case give the highest score to the correct assignment, and lower scores to all other  peptide sequence assignments. in the case where the correct peptide is not among the candidates, the metric would output a score for all candidates below some threshold. in practice, any good metric will produce a distribution of scores for the candidate sequences, with the single correct assignment likely to be amongst the top candidates. metrics looking at different aspects of the confidence of a match between a candidate sequence and an observed spectrum will produce different distributions for the candidate scores. well-known examples of metrics in the protein identification context are the xcorr and s scores in sequest  <cit>  or the p values in mascot  <cit> .

each unidentified spectrum generated from a peptide fragmented inside the mass spectrometer is unique. in theory, every unidentified spectrum that has not been drawn from pure noise should yield enough information to identify it, except for a narrow set of exceptions  <cit> , although in practice the presence of noise and poor quality spectra make many spectra unidentifiable. the fact that a vast number of observed spectra remain unidentified during the protein identification process  <cit>  is a consequence of one of two limitations:

 <dig>  poor quality spectra: where the signal peaks are few or difficult to distinguish from the noise.

 <dig>  the inability to recognise and exploit enough features of the spectrum to declare a match i.e., the existing metrics are insufficient to perform the task of identification.

it is possible to develop a metric to assign a numerical value representing the similarity between two spectra for any feature against which it is possible to compare those spectra <cit> . if additional features of the spectrum can be recognised, or existing features better understood, they can be harnessed to create new or better metrics  <cit> .

in this work, we aim to provide a tool for the collection and analysis of data for a number of parameters related to fragmentation spectra. once this new knowledge is determined for a specific dataset, it can be used to create better metrics for identification algorithms. this is the fundamental approach behind fragmentation machine learning models shown to improve protein identification rates  <cit> . metrics giving a better separation between correct and random peptide assignments show that the new knowledge about the fragmentation process is genuine, and that the metric embodying that knowledge produces a measurable improvement when implemented. being assured of these two properties of the metric gives the developer a high degree of confidence that the use of the metric will improve the power of a protein identification algorithm.

in order to develop and test these metrics, we required a framework dedicated to the identification of peptides and flexible enough to handle arbitrary new information. we chose for the underlying method a probability approach for two reasons: it is a well established framework for noisy and complex data  <cit>  and because many protein identification algorithms rely on probability methods  <cit> , so new or better metrics developed using a probability framework can be easily implemented in this class of protein identification algorithms to improve their performance.

in this paper, we demonstrate the collection of dataset specific information about fragmentation spectra and examples of how to embed this knowledge into a probability metric. then we show how harvest can be used to validate an improvement in the number and confidence of peptide identifications using this new metric using a subset of the entire dataset. once validated using harvest, such a new metric can be used to improve the performance of any of the popular probability based protein identification algorithms, and to validate hypotheses about the poorly understood fragmentation process.

implementation
harvest has been written in c++ using microsoft visual studio v <dig> . the parameter class in the code gives access to all parameters required for testing. the section in which new metrics should be included is clearly marked in the candidate class definition. information relating to matching peaks and lod scores for each dataset is output by default in the working directory, and can be piped to an appropriate file by the user. the lod score is the log of the odds score, defined as the logarithm of the ratio of the probability the match is correct and the probability the match is random.

harvest is not a protein identification package. however, in order to compare peptide matching metrics harvest performs some of the same functions used in protein identification algorithms. it does this to produce a set of high confidence peptide assignments. the set of high confidence assignments can be examined to explore fragmentation properties or to trial the new metric against the dataset so as to measure any improvement in the confidence of peptide assignments or in the number of peptides identified when using the metric under development. the importance of harvest is the fragment-level reporting, comparison, manipulation, and analysis of novel peptide matching scores through a metric under development, thereby answering hypotheses about fragmentation and applying this information in the form of better peptide identification metrics. this research question does not necessitate globally maximising the number of identified peptides and therefore distinguishes harvest from existing algorithms that aim to do this, such as protein identification packages, or algorithms operating on the results of such packages.

datasets
we used the data from cooksey et al.  <cit> , downloaded in july  <dig> from the pride repository http://www.ebi.ac.uk/pride and the aurum dataset composed of known proteins  <cit> , as our reference ms/ms datasets. the aurum dataset is a maldi produced dataset and contains only + <dig> precursor ions. the cooksey dataset was selected because it is publicly available and is broadly typical of a high throughput ms/ms experiment using human tissue and is of a moderate size . the aurum dataset was chosen because it is derived from a known set of  <dig> input proteins, and therefore can be used to validate the harvest algorithm. for the cooksey dataset, the original sample was human plasma, depleted of the most abundant proteins, and cleaved with trypsin. lc analysis was accomplished by strong-cation exchange  followed by reverse-phase  lc coupled directly in line with esi it ms.

the files were unpacked from tar.gz format and converted from mzxml into dta format using the peak list conversion utility available at proteome commons  <cit>  to create folders of dta format files. this dataset we now refer to as the cooksey dataset. for the aurum dataset, the first  <dig> identified peptides were individually downloaded from the aurum manuscript files and used as a reference set.

pre-processing and modifications
a program written in c++ and bundled with harvest provides the necessary pre-processing tools for harvest. this program needs to be run once only, prior to the use of harvest, for each new or updated target protein database. it takes a fasta format file containing the entire proteome of the target organism and produces a binary output file containing peptide objects with pre-computed attributes such as parent mass, modifications, theoretical ion series spectra, an identifier for the protein from which it comes, etc. the file of peptide objects is ordered by mass. the processed human ipi database takes a few seconds to load into memory on a dual core  <dig>  mhz intel machine, and is typically in the order of  <dig> mb for a tryptic digest of the human proteome with up to  <dig> missed cleavages. this large size is due to the additional pre-computed information such as theoretical spectra included in the binary object file. however, the use of these pre-processed objects greatly improves the run-time speed of harvest.

modifications are dealt with in the harvest code. a number of common modifications are included by default .the user is able to create new modifications and control the type  and maximum number of each modification allowed per peptide.

load-in
the dataset of unidentified spectra in dta format is loaded into the application from a directory specified by the user. during this process, a noise level threshold of  <dig> % of the total sum of peak intensities was applied to each spectrum to filter out very low intensity peaks. this is consistent with signal processing algorithms previously described  <cit> . in brief, thresholds based on the sum of peak intensities, rather than the intensity of the most intense peak in the spectrum, are used. this is because the intensities of the peaks in the spectrum are relative to the proportion of fragmentation at each site along the length of the entire peptide. this means that the properties of the noise are dependent on the peptide, not the most intense fragment. after loading in the input dta files, the pre-processed peptide objects from the protein database are loaded into memory in a mass ordered array.

candidate selection based on precursor mass and number of y ion series matches
this first level of candidate selection in harvest is similar to that of most common protein identification algorithms  <cit> . theoretical peptide candidates are selected based on their parent mass falling within a given mass range of the unidentified spectrum parent mass. for each theoretical peptide in the candidate list, the y ion series  is compared to the unidentified spectrum. the number of peaks aligned within the specified mass tolerance is recorded. candidates with the minimum specified number of y hits show initial evidence of being potentially correct assignments and are retained as the candidate set.

preliminary scoring
preliminary scoring is now applied to the candidate set. the candidate set is assumed to contain the correct peptide assignment. although the candidate set is a tiny subset of the entire theoretical peptide database, it is still large enough so that the application of arbitrarily complex metrics cannot be applied to the set to distinguish the correct assignment due to computational constraints. for this reason, a preliminary scoring stage is used to reduce the candidate set by rejecting candidates showing significant evidence of being a random match. this candidate set reduction stage strikes a balance between speed and accuracy, but is biased heavily towards retaining the correct assignment. it does this by retaining in the candidate set any peptides with even weak evidence of being the correct match. the inclusive nature of this filter is necessary to retain the correct peptide in the candidate set given the expected inaccuracies of such a computationally "cheap" filter.

in harvest, the preliminary scoring:

• orders the most intense peaks in the unidentified spectrum

• selects the top 4n peaks, where n is the sequence length determined by assuming an average amino acid mass of  <dig> da. this step ensures that approximately the same proportion of the most intense peaks with respect to peptide length is used during scoring. limiting the number of peaks used for scoring is common for candidate selection procedures in protein identification algorithms  <cit>  and improves run-time speed. 4n is chosen as a number that will likely include most of the basic y and b ions, plus a number of other identifiable ions such as iminium  ions or those generated from the loss of water or ammonia from b or y ions. this choice is arbitrary and a simple percentage of the total intensity or a percentage of the highest intensity peak may be used as a cut-off if desired. if fewer than 4n peaks exist, then all peaks are used.

• for the first 4n peaks:

○ records the sum of intensities for peaks matching iminium, y, or b ions from the theoretical candidate sequence.

○ records the total sum of intensities of peaks not matched to iminium, y, or b ions.

for the preliminary score, theoretical y1+, b1+, and iminium ions are generated. y2+ ions are also generated if the parent charge is  <dig> or higher.

the preliminary score is defined as the proportion of intensities matched to these theoretical ions over the sum of all intensities for the first 4n peaks. for example, a preliminary score of  <dig>  would result if half of the total intensity of the top 4n peaks is accounted for by peaks matching iminium, y, and b ions. candidates with a preliminary score below a user-defined threshold are rejected. a low minimum preliminary score accepts more early stage candidates and therefore is more likely to capture the correct peptide assignment, while a high peptide score reduces the number of candidates and therefore reduces run-times. the default for a minimum preliminary candidate score is  <dig> , as this score was found sufficient to ensure the capture of high confidence peptide assignments across a range of datasets. if during the use of harvest a user finds consistently that high confidence assignments have preliminary scores above a certain threshold, they may increase the minimum preliminary score to this value to speed run times. for example, a value of  <dig>  was found to maintain sensitivity without sacrificing specificity for some datasets .

probability scoring
at this final stage there are few enough candidates to allow significant computational effort to be put into each candidate to either validate or confidently reject this match. candidates entering the final probability scoring stage have a preliminary score greater than the user defined minimum and it is assumed that the correct peptide assignment is in the set. a full set of theoretical ions is available for matching during probability scoring including up to two ammonia and two water losses per fragment. the default setting is to use y, b, and a ions. for parent masses with charge states higher than one, y2+ ions are also generated. the ion series are generated by using the pre-computed y ion series contained within the peptide object. other theoretical ion types can be generated if desired in the createfrags function. new metrics can be inserted in this probability scoring section of the algorithm.

harvest uses log odds  scores as the basis of its probability calculations. a lod score as defined in harvest is the log of the odds, where the odds are the probability of this match being correct, given the evidence, over the probability of this match being random , given the same evidence, where random peptides are drawn from a reverse database. using this definition of a lod score, a score of zero means that the candidate match is as likely to be correct as it is to be random, with greater positive scores indicating a higher level of confidence that the candidate is a correct assignment . one of the advantages of using lod scores during the probability scoring process is that the lod scores for separate pieces of knowledge relating to the fragmentation process can be independently integrated into the final score by simple addition. it should be remembered that lod scoring schemes assume independence of the factors constituting the score, which is unlikely to be strictly true. for this reason, the combination of metrics during scoring may confound interpretation, especially if these features are non-independent. however, using minimally related features of the spectrum during scoring will produce a good approximation.

the use of lod scores allows the developer to systematically test for the additional discriminating power of new knowledge relating to the fragmentation process by introducing the additional metric into the scoring process. they can then consider the distribution of scores for known incorrect peptides against a set of peptides that have a high probability of being correctly assigned, with an improvement in the separation of these sets being indicative of a good metric. each piece of knowledge can be leveraged by looking at the features of the unidentified spectrum.

the feature lod equation can be expressed as:

 featurelod=log 

where p is the probability of the spectrum under consideration having the specific feature relating to this lod score, if it was produced by the candidate theoretical sequence, given the evidence e, and p is the probability that this feature will have been observed if the spectrum was generated by a random peptide sequence, given the evidence e. in many instances, the differences between metrics will be measured at the fragment ion level, in which case the fragment lod scores of each of the matching ions is the only relevant information. there are, however, metrics operating at the peptide level, that is, using the aggregate information from the whole peptide. for example, a spectrum dot product between observed and predicted ion intensities, or if considering the effect of non-adjacent amino acids on fragmentation . for this reason, harvest provides a peptide lod, which, by default, is simply the sum of the individual fragment lod scores for the peptide:

 peptidelod=∑i=0nfeaturelodi 

where i represents a feature , and n is the total number of these features .

users may ignore the peptide lod if working with metrics only relevant to fragments. in the case where users choose to apply their own metrics at the peptide level, this default definition of the peptide lod can be replaced by any other metric operating at the peptide level, using the same interface used to apply metrics operating at the fragment level. the individual fragment lod scores, plus the peptide lod score for each candidate, is printed out to a log file, showing information on peak matches, individual peak scores, and whole peptide lod scores.

implementing a novel metric
harvest is designed for metric development. to demonstrate this utility, we use four metrics, each progressively derived from the previous metric by adding more information. these metrics are simple and not intended to be significant advances in the field. their purpose is to demonstrate the utility of harvest for building a non-trivial, experiment specific, data-driven metric in several stages. a metric combining statistical machine learning and neural networks is also described in this paper to demonstrate the application of more complex metrics using harvest.

it is well established that for any given input sample, different classes of ms/ms machine will produce significantly different output spectra  <cit> . in this paper we use harvest to demonstrate and validate the development of four novel metrics using dataset specific knowledge to improve peptide assignment confidences. first, we demonstrate the implementation of a basic metric for peptide scoring . then we show how the use of experiment specific fragmentation information can be used to build upon this simple metric to improve confidences for correct peptide matches . this is done in both the gold standard dataset  and in the context of a high throughput experiment . each of these metrics integrates increasingly detailed fragmentation information, to provide increased discriminating power. these metrics are validated against the aurum dataset and improve upon the number of peptides identified at the 5% false discovery level when compared to x!tandem. the improvement is seen in both the validated aurum dataset  and the cooksey dataset: a typical, moderate size non-validated dataset . lastly, we demonstrate the use of harvest to explore physio-chemical properties of fragmentation not related to the peptide identification problem.

the four metrics used to demonstrate the progressive development of a metric using harvest are:

metric 1: a basic metric
using this metric, correctly identified fragment matches are assumed to occur with a fixed probability and random peak matches are assumed to occur with an even distribution across the mass range for the peptide file. this metric approximates the scoring metrics used in most protein identification engines in which each fragment "hit" contributes an equal amount to a peptide score. the probability of a correct fragment match for metric  <dig> is fixed at  <dig> . this reflects the fact that approximately half of the peaks under consideration can be identified for correct peptides in this dataset. without further information, any peak match for a correct assignment has a probability of  <dig> . the peaks included in this set are described in the above preliminary and probability scoring sections. the probability of a random match is the probability that a peak would be found within the range between the observed and theoretical peak if the peaks from this spectrum were randomly distributed.

for example, consider the case where the smallest peak in the spectrum is  <dig> da, the largest is  <dig> da, and there are  <dig> peaks in the spectrum. assuming a random distribution, the density of peaks in the spectrum is  <dig>  peaks per dalton. now consider a candidate fragment match with a difference between the observed and expected mass of  <dig>  daltons. the probability of a random match with this error  is  <dig> . with a fixed correct probability of  <dig> , and a random probability of  <dig>  for this fragment, the fragment lod score is therefore  <dig> .

in the source code for harvest, this is the default metric.

metric 2: uses empirically derived fragment mass specific information to derive an estimate of correct assignment
the basic metric  assumes a fixed probability of a correct match for all fragments. considering the distribution of all theoretical fragments, which varies by mass, it may be useful to include this information when scoring. for example, there is only a single correct fragment assignment for each peak irrespective of the fragment mass, however for high fragment masses, there are fewer theoretical fragments which may randomly match. this in turn makes the odds of a correct fragment assignment dependent on the fragment mass. the simplest way to include this information is to empirically determine the probability for correct peptide matches of a peak being matched with respect to its mass. these values can then be used to replace the fixed probability of a correct hit used in the basic metric  with the probability for the specific fragment mass. the procedure for determining and using the probabilities of a correct fragment match with respect to mass is described below.

using the output from harvest using the basic metric  with the default settings, we generated a list of high confidence peptide assignments . these are assumed to be correct. for 1+ and 2+ parent charges, each peak fragment mass was recorded and marked as either matched or not matched, and grouped into fragment mass bins of  <dig> da. the proportion of matched over non matched peaks for each bin gives the probability of a correct match for fragments for each the mass range . rare 3+ parent ions were given a fixed value  as their numbers were too low to allow confident modelling. using these proportions allowed a direct look-up of probability for correct matches during calculation . for example, using the aurum dataset, it was found that 40% of the fragments between  <dig> and  <dig> da could be identified in correct peptides for this dataset, whereas 80% of the fragments between  <dig> and  <dig> da could be identified. therefore, using this metric, the probability of matching a peak in a correct peptide assignment for a fragment of  <dig> da was  <dig> . for a fragment of  <dig> da the probability of a correct match was  <dig> . a comparison of metric  <dig> and metric  <dig> was then carried out for the aurum dataset.

metric 3: builds upon metric  <dig> by producing more accurate estimates for random assignments
having modelled the probability of correct matches for this dataset with respect to fragment mass in the previous metric, we can now apply the same technique for the other half of the equation - the probability of a random match. instead of assuming an even distribution of random fragments as in the basic metric  and the previous metric , we add in this metric  an empirical estimate of the probability of a random match with respect to the fragment mass. to estimate random fragment matches with respect to mass, the same process of recording each fragment in the spectrum as matched or not matched along with the mass is used , although this time removing the minimum z-score requirement and using a reversed peptide database. with the probabilities of fragment matches grouped into bins of  <dig> da for both correct  and randomly assigned peptides , we can now use these tables to generate a lod score. to achieve this, first the values for correct and random probability distributions are normalised so that the probabilities for each bin sum to one for the correct and random distributions. the odds of a peak match for any given fragment mass is the normalised probability value for a correct assignment, over the normalised probability of a peak match for a random fragment for the appropriate mass bin . in this way the lod score for any matched peptide is now simply a function of its mass. this metric was tested on the aurum dataset to validate that the additional information using the distribution of random fragment matches by mass improves confidences in correctly matched peptides.

metric 4: including additional information about mass spectrometer specific fragment mass errors to increase discrimination
the fragment mass tolerances set in protein identification algorithms are designed to include as matches fragments which are correctly assigned but not found at the exact theoretical mass expected. these differences between observed and expected masses are introduced by largely stochastic processes in the instrument and are generally considered using a binary function: either a fragment is matched within this range or otherwise, instead of a "hit" or "no hit" approach, using a fragment mass tolerance parameter, metric  <dig> explicitly models information about the observed mass error distribution by fitting a probability density function  to produce a probability that an assigned fragment is correct based on the mass error. it is identical to metric  <dig>  except that when calculating the probability of a correct match, the mass error is input into the pdf to produce a probability that it is correctly assigned. the probability of correct assignment is then multiplied by this value. the mass error distributions for both the validation  and experimental  dataset show an approximately normal distribution in mass errors for correctly assigned fragments.

the pdf used the mean and standard deviation of correctly assigned fragment mass errors in bins of  <dig> da to produce a single function for each bin, so that each matched fragment used the pdf associated with its mass bin.

this metric was tested on the aurum dataset for validation and applied to the cooksey dataset to measure the improvement gained by combining the features present in metric  <dig> over the basic metric.

implementation of a complex metric
the modelling of peak intensities is another approach to increase discriminatory power in a novel metric  <cit> . many of the factors known to influence peak intensity are high dimensional and non-linear, and are therefore complex metrics. to demonstrate the use of a complex metric in harvest, we implemented a neural network to predict peak intensities. the neural network consisted of sigmoidal perceptrons with  <dig> input nodes,  <dig> hidden nodes, and a single output node. the inputs to the model for predicting fragment intensity were:

 <dig>  ion type: either no fragmentation, iminium, y, a, or b 

 <dig>  parent charge

 <dig>  fragment charge

 <dig>  length of the parent peptide

 <dig>  length of the fragment divided by the length of the parent peptide

 <dig>  number of h, k, and r residues in the fragment divided by the number of h, k, and r residues in the parent peptide

 <dig>  identity of the amino acid on the n-terminal side of the fragmentation

 <dig>  identity of the amino acid on the c-terminal side of the fragmentation

the identity of amino acid residues were coded as values between  <dig> and  <dig>  evenly spaced, and in order of increasing hydrophobicity. the output node for training was taken as the log of the peak intensity after normalising the spectrum so that the maximum peak was  <dig>  the testing and training dataset were derived from a 10% subset of the whole dataset to prevent over-fitting , with  <dig>  high confidence assignments  from this set used for training. the flood neural network package was used to model the neural network. training was for  <dig> epochs, using a quasi-newton method. during run-time, a vector of attributes was generated for each identified fragment for the neural network input nodes  <dig> to  <dig>  for each peak, the neural network predicted peak intensity, producing a predicted peak intensity spectrum. both the predicted and observed intensity spectra were normalised to sum to  <dig> and an inner dot product generated from the intensities of matching fragments. to generate a z score for the peak intensity prediction, a series of random predicted peak heights needed to be generated. to create this random set of predicted intensity spectra the intensities of each of the predicted peaks was iteratively assigned to the previous fragment  until the predicted intensity spectrum cycled back to its original position. this technique has the advantage of preserving the distribution of predicted peak heights for random assignments. the z score for the peak intensity prediction was the number of standard deviations the dot product for the predicted intensity spectrum was, above the mean of the "random" dot products. the peptide-level z score for peak intensity prediction was added to the z score for metric  <dig> to produce a final z score for each peptide. this complex metric involving a combination of statistically learned attributes, probability density function modelling, and neural network intensity prediction was applied to the cooksey dataset and compared to metrics  <dig> and  <dig> and x!tandem.

the use of harvest to explore data not related to the peptide identification problem
the fragmentation specific reporting capabilities of harvest allow the exploration of fragmentation properties. to demonstrate this functionality we used the output of harvest for the sample set of  <dig> identified peptides drawn from the aurum dataset to examine the influence of theoretical fragment isoelectric point  on the presence or absence of y or b ions. in cases where only the y or the b ion was detected, the pis of the found and missing fragments were calculated. the relative pi of the y ion with respect to the b ion was plotted against the proportion of the length from n to c terminal at which the fragmentation event took place. the use of harvest in this way provides both a statistical and visual representation of the instrument and experiment dependent fragmentation process.

RESULTS
metric 1
the first  <dig> identified peptides from the aurum dataset were used for the comparison of metrics. metric  <dig> was used in harvest to identify peptides at a 95% confidence level . x!tandem was run with equivalent parameters  and with an expectation value of  <dig> . the harvest and x!tandem sets were ordered by confidence. using a 5% false discovery cut-off against the validated peptides in the aurum dataset, harvest, using metric  <dig>  correctly identified  <dig> peptides and x!tandem correctly identified  <dig>  in this case, there was no significant different in sensitivity between the harvest basic metric and x!tandem using the aurum dataset . metric  <dig> was then used as a benchmark for further development of metrics. for the cooksey dataset, x!tandem identified  <dig>  peptides using an expectation value of  <dig> , while the harvest basic metric identified  <dig>  peptides using a z score cut off of  <dig> .

metric 2
for the aurum dataset, the proportional change in the z scores  for each correct peptide assignment when comparing metric  <dig> to metric  <dig> is shown in figure  <dig>  in figure  <dig>  values greater than  <dig> show an increase in confidence  for the assignments using metric  <dig> over metric  <dig>  values less than  <dig> show a decrease in confidence. metric  <dig> showed an average improvement in the confidence of correct peptide assignments by 11% when compared to metric  <dig>  there was, however, a large variance in "improvement". in this case, it decreases the confidence for many correct peptide assignments, resulting in only a few  additional spectra being identified despite the overall increase in confidence for correct assignments. this suggests that this metric should be further developed before use in a protein identification context.

metric 3
metric  <dig> improves upon metric  <dig> by including information about fragment matching probabilities for not just correct, but also random fragment matches. the probabilities of a fragment match for high confidence peptides  and random assignments with respect to mass for the aurum dataset is shown in figure  <dig> 

the higher relative values for the correctly assigned fragments  above  <dig> da in figure  <dig> characterise the increased likelihood of a correct match relative to a random match with increasing fragment mass. the use of this additional information in metric  <dig> gives an average improvement in z scores for correctly assigned peptides of  <dig> % over metric  <dig>  with  <dig> % of correct peptide assignments showing increased confidence. metric  <dig> improved the number of correct identifications at the 5% level over metric  <dig> by  <dig> peptides to  <dig>  figure  <dig> shows the change in z score for correct peptides in the aurum dataset when comparing metric  <dig> to metric  <dig> 

metric 4
metric  <dig> adds additional information to metric  <dig> by fitting a fragment mass error probability distribution for correctly matched peptides. this information can be derived from the analysis of any harvest output. figure  <dig> shows the mean fragment mass error and standard deviation for correct peptides across the fragment mass range of the aurum dataset.

a clear trend is apparent in figure  <dig> showing a "drift" with increasing fragment mass between expected and observed fragment masses. metric  <dig> uses this information to correct for this drift and to fit a probability density function for each fragment mass bin for correct peptide assignments. the distribution of the change in z scores for correct peptide assignments using metric  <dig> compared to metric  <dig> are shown in figure  <dig> 

when compared to metric  <dig>  metric  <dig> increased z scores for correct peptides for 93% of correct peptide assignments, with an average improvement in confidence  of 30%. the use of metric  <dig> increased peptide identifications at the 5% false discovery level by  <dig> when compared to metric  <dig>  this represents a  <dig> % increase in peptide identifications over x!tandem using this sample set.

after validation, metric  <dig> was applied to the cooksey esi ms dataset of  <dig>  spectra. metric  <dig> identified  <dig>  spectra, an improvement over the basic metric  of  <dig>  peptides , and an improvement over x!tandem of  <dig>  peptides .

use of a complex novel metric
the use of a neural network to predict peak intensities is an example of a metric operating at the peptide level. the z scores generated by the neural network based metric were therefore added to  the peptide lod score. when the neural network for peak intensity prediction was added to metric  <dig> and applied to the cooksey dataset, and additional  <dig> peptides were identified. the mean increase in z score for identified peptides was  <dig> %.

analysis of peptide fragmentation spectra not related to protein identification
harvest output provides the identities and properties of matched fragments. using this data, statistical or visual representations of the fragmentation process can be produced. using the method described above, we show in figure  <dig> a comparison of y and b ions  plotted against theoretical fragment pi.

discussion
unlike algorithms such as sequest, mascot, or x!tandem  <cit> , harvest is not designed to extract the maximum number of identified peptides from a dataset, nor is it limited to developing metrics intended for insertion into existing protein identification packages. rather it is designed to examine hypotheses relating to knowledge of the fragmentation process. the underlying candidate generation processes in common with protein identification algorithms merely serves to provide sets of high confidence assignments to unknown spectra. insights gained from harvest may later be used to develop better metrics for protein identification or to use this information without application to the protein identification problem. one example of the use of harvest without the end goal of developing metrics for protein identification algorithms has been shown in figure  <dig>  in this experiment, harvest was used to collect information on identified fragments where their complementary fragments could not be found . a plot of relative y ion pi with respect to b ion pi over the proportion of the parent peptide along which the fragmentation occurred characterises the inhibitory effects of basic residues for these fragments. the bias towards high pi for shorter y ions  is expected as the peptides in the aurum dataset were all tryptic, however the cluster of long, high pi identified y ions , and the cluster of long medium pi y ions , has, to our knowledge, not been previously reported in the literature. it may reflect previously undescribed fragmentation phenomena specific to maldi datasets.

other possible hypotheses to be explored include the elucidation of the properties of fragmentation spectra for different machines or experiments, or questions related to steric hindrance, peptide oscillations, or the location of mechanical moments during fragmentation.

as harvest is specifically geared towards analysis of peptide fragmentation, the outputs of the program include complete lists of the identities and properties of each of the ions matched. this level of reporting is critical for the development of new metrics and for the exploration of the fragmentation processes.

the metrics  <dig> through  <dig> demonstrated in this paper are deliberately simplistic and are intended only to demonstrate the way in which any given metric may be assessed and developed using harvest. using the harvest framework, investigators can build a wide range of novel metrics specific to peptide identification in their specific research domain, such as including more information about fragmentation processes, testing physio-chemical hypotheses, or for fine tuning machine learning models.

an exhaustive set of peptide identifications is not always necessary to assess the effect of a new metric for a given dataset. although, when seeking to test properties of peptides that are not homogenous for all fragments, such as metrics based on the amino acid composition of fragments, many more peptides will be required to validate an improvement.

as the development of metrics is based on the collection of information from the highest confidence peptide assignments, this training set provides the highest confidence information about the experiment specific parameters. an assumption is made that the parameters of this training set apply to the dataset in general. this assumption is reasonable if the training set is representative of the general dataset for the parameters used in the metric. in the case of metrics  <dig> through  <dig> presented above, this assumption is reasonable because the probabilities derive from a large number of fragments, from across the full range of the fragment mass spectrum, derived from peptides spanning the full mass range of the general dataset, thus presenting a low risk of over-fitting. any additional peptides identified using a new metric show an unambiguous improvement in the metric. this is because the information used to used to produce the metric was not drawn from these peptides , and therefore these peptides cannot be an artefact of over fitting. for metrics deriving from data for which the distribution or complexity of the data is larger, such as in the presented complex metric using  <dig> input attributes, a much larger set of data is required for both feature extraction and to validate the effectiveness of the metric.

low quality spectra will always remain more difficult to identify and to address with improved metrics. however, harvest does provide a framework within which metrics may be developed specifically for low quality spectra that have been identified, or for producing metrics better able to identify unknown low quality spectra. this can be achieved because the parameters used in the metrics have been developed specifically for the experimental conditions being investigated.

harvest provides a simple and flexible platform to enable the user to quickly develop and test new metrics using a set of high confidence peptide identifications drawn from the dataset. the run times required to process a set of peptides is similar to the run times required for protein identification algorithms. however, harvest allows for a quick turn-around time between hypothesis and test due to the simple interface. by modifying the candidate selection section of the code, users can provide their own parameters for choosing high confidence peptides, or use the default candidate generation process that follows the same basic methods as used in protein identification algorithms. the methods harvest uses for candidate selection are similar to those used in protein identification packages. this is done so new metrics are developed in an environment closely modelling that into which they may eventually operate.

as metrics for peptide assignment are the fundamental core of protein identification algorithms, any such metrics validated using harvest are good candidates for insertion into any one of the popular probability based protein identification algorithms to improve their performance or to extract more information from old datasets. the few open source protein identification packages currently available, x!tandem and omssa <cit> , are not readily adaptable to the direct assessment of arbitrary new information to improve peptide matching metrics. for example, the popular protein identification package x!tandem, provides pluggable scoring to give a greater degree of control during scoring. the x!tandem pluggable scoring api provides a number of functions which can be overridden or commented out to provide developers access to various parts of the program in order to modify the way in which scoring proceeds. however, there are three significant limitations in the x!tandem pluggable scoring. firstly, the user is required to work within the limitations of the scoring pipeline and data structures provided. for example, each peptide must pass through a number of pre-processing steps affecting scoring  and then through a set of peptide scoring systems . each of these steps require the use of the data structures defined by the x!tandem spectrum object. the second limitation is that arbitrary use of information cannot be made available during scoring. for example, while the x!tandem pluggable scoring api provides for extra information to be stored through the 'add_details' function, the standard release is not designed to accommodate complex objects into the spectrum object, such as a machine learning module, support vector machine or neural network. the third limitation is that while it may be possible to implement modifications to the scoring metrics of x!tandem outside the scope of the pluggable scoring, this would involve an in-depth understanding of the full details of the package. while overcoming these limitations may be possible for an highly experienced programmer, it remains a barrier to other researchers interested in exploring fragmentation properties. harvest overcomes each of these three limitations by:

 <dig>  not limiting the types of scoring calculations that a user may perform during either fragment or peptide scoring

 <dig>  providing an insertion point at which arbitrary methods, models, or structures may be used during scoring

 <dig>  providing the user with unlimited scope for generation, use, or manipulation of any information relating to either the observed or theoretical spectrum at a single, clearly marked point, along with instructions on how to access this information.

a key advantage of harvest is that it is able to directly assess peptide-matching metrics for arbitrary scoring functions in a simple stand-alone package, making the process of assessing new metrics simple and efficient. generally, algorithms incorporating elements in which peptide or protein identification would benefit from optimising metrics based on features of the spectra, may use harvest as a stand alone tool for the easy implementation and prototyping of metrics based on such features  <cit> . the output of harvest is a text file with the key features for each peptide identification in a simple, human-readable output as shown in figure  <dig>  this output is geared towards the intended audience, which include biologists without high-level object-oriented programming skills. for these users, a simple text output with key information for each match makes interpretation of the identifications as easy as possible, and makes the use of popular scripting languages for manipulating results simpler than for xml outputs such as those generated with x!tandem.

users of this software may take advantage of its flexibility to develop any number of metrics to improve protein identification algorithms or to explore fragmentation hypotheses independent of the protein identification problem. an obvious example would be to develop a data-driven machine-learning model as a metric used to compare observed and expected fragment peak intensities. machine learning has previously been introduced in the protein identification domain  <cit> , but interpretation of the effects of various parameter choices is difficult for results reported at the whole protein level. machine learning algorithms designed specifically to improve peptide identifications such as the riptide model described by klammer et al.  <cit> , or algorithms such as percolator  <cit> , could be combined under harvest with non-machine learning methods to assess the use of a combined approach. harvest may equally be used to test physio-chemical models  <cit>  using a similar process of deriving probabilities given differences in observed and expected fragment peak intensities resulting from the model. the authors plan to use harvest to assess the utility of new models for ms/ms fragmentation, including machine learning models, analysis of machine specific m/z recording error and models combining vibrational and steric information.

CONCLUSIONS
harvest bridges the gap between hypothesizing how new knowledge about the fragmentation process may be exploited and using this knowledge to identify more peptides. furthermore, through the subsequent use of these metrics in external protein identification packages, metrics developed using harvest may help to identify more proteins. existing open source software such as x!tandem  <cit>  and omssa  <cit>  are large and complicated programs focused on whole protein identifications rather than on metric validation. as a result, they do not provide a simple way for arbitrary new metrics to be tested on identifications at the peptide level, and as such are limited in their ability to assess new metrics. harvest provides this functionality by providing a framework for the easy implementation, prototyping, and validation of new metrics as a stand-alone process. the introduction of harvest will allow researchers to explore specific datasets for exploitable information and assess the utility in general of new metrics for peptide identification, which can then be used to improve protein identification packages. harvest will be freely available from the proteome commons http://proteomecommons.org/.

availability and requirements
project name: harvest

project home page: https://proteomecommons.org/tool.jsp?i=1039

operating system: tested on pc

programming language: c++

other requirements: none

license: freebsd

any restrictions to use by non-academics: none

authors' contributions
lm wrote the code and acquired the data. both authors were involved in the conception and design of the study, the analysis and interpretation of data, and the drafting and revision of the manuscript.

