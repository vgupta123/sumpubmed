BACKGROUND
as substantial amounts of data concerning expression, interactions/pathways, sequences, and other types of information for a variety of tissues, developmental stages, stimuli and organisms are generated, it becomes difficult for researchers with no background in bioinformatics and statistics to extract the information they seek. successful data integration is hampered by the orthogonal nature of the integrated data and by the multitude of controversies and name/id conflicts in public databases. examples of conflicts that cannot be automatically resolved include the situations when genes with the same name point to different chromosome locations or a gene/protein in different modification states has different names; for example, p <dig>  p <dig>  p <dig>  or pcmx-mutant-p <dig>  among the name/id conflicts that can be resolved is, for example, the conflict between different genes/proteins having the same synonym or the conflict between two databases naming the same gene differently - these and similar name/id conflicts can be automatically resolved if there are other databases that recognize the conflicting names. to analyze and visually integrate publicly available data on the systems level, several web-based tools have been developed: genomatix  <cit> , genego  <cit> , string  <cit> , cytoscape  <cit> , visant  <cit> , ingenuity  <cit> , pathway studio  <cit> , pipelinepilot  <cit> , and biologicalnetworks  <cit> . workflow systems, like taverna  <cit> , genepattern  <cit>  and galaxy  <cit> , have been designed for the automatic application of the computational methods and data provenance management rather than visual integration, representation, querying and analysis of the data which are addressed in biologicalnetworks. each of the mentioned tools has a distinct set of features, which are highlighted in table  <dig>  facilitating functional analysis of networks/pathways as well as comparative gene sequence analyses, including cis-element prediction, expression profiling and co-expression analysis.

in, ingenuity; gg, genego suite; ps, ariadne genomics pathway studio; ge, genomatix suite; st, string; cs, cytoscape; vs, visant; pa, partek; pp, pipelinepilot; gx, galaxy; tv, taverna; bn, biologicalnetworks.

+, a feature is present; -, not present; +/-, present but not fully; ?, unknown/cannot be determined;

#, tfbs, transcription factor binding site

in this work, the application biologicalnetworks  <dig>  for integration of functional genomics data with biological networks is presented. in comparison with other tools , biologicalnetworks integrates much more different types of data and provides broader analytical capabilities. the developed system minimizes the need for prior knowledge of existing nomenclatures and data formats representing microarrays, networks/pathways, sequences, and other types of data. biologicalnetworks allows integral visualization and analyses of over  <dig>  features from multiple different data types that are integrated in integromedb  <cit>  and provide information concerning pathways, molecular interactions, gene function, expression data, sequences, transcription factor binding sites, promoters and other gene regulatory regions, orthology, mutations and disease relations for thousands of eukaryotic, prokaryotic and viral organisms. querying capabilities implemented in biologicalnetworks allows accessing all integrated data simultaneously, from specified databases only, or in conjunction with the user's data. biologicalnetworks provides an interactive and user-friendly interface with a strong emphasis on graphical data representation. this paper aims to describe biologicalnetworks  <dig>  and its application to navigating through the sea of integrated data and extracting biological knowledge.

implementation
biologicalnetworks  <dig>  is built on the netbeans platform from sun microsystems  <cit> . the system has a modular architecture and an intuitive and customizable user interface and has been tested for robustness to system failure and big data loads. a typical user of biologicalnetworks loads large  datasets from files and analyzes these data in conjunction with publicly available data integrated in our database. data uploads to the program are limited only by the user's computer capabilities. now, by default, a 32-bit java can upload  ~2gb of data, and 64-bit java has practically no limits and can go up to  <dig> gb  in modern computers.

biologicalnetworks integrated database
the backend database of biologicalnetworks, called integromedb  <cit> , is a semantic graph base 'deep-web' data integration system, or data warehouse, that automatically captures, integrates, and manages publicly available data concerning transcriptional regulation, along with other relevant biological information. integromedb integrates over  <dig> experimental and computational data sources providing genomics, transcriptomics, genetics, functional and interaction data in eukaryotes and prokaryotes. the example databases integrated in integromedb include ncbi nucleotide and protein databases  <cit> , metabolic and signaling pathway databases, such as kegg  <cit> , interaction networks database, such as string  <cit> , and databases of transcription factors and gene regulatory regions, such as transfac  <cit>  . integromedb data is stored in a postgres database under the metagraph schema and is updated monthly, being synchronized with the latest changes in most current databases. detailed information on the statistics, integrated databases catalog, and organism list can be found at http://www.integromedb.org.

the procedure of data integration and mapping to the internal database is fully automated and is based on the semantic web technologies, such as the resource description framework  http://www.w <dig> org/rdf/ and the web ontology language  http://www.w <dig> org/tr/owl-ref/. integromedb also enables researchers to integrate their own data into the database as described in the section 'integration of user's data.'

the integromedb schema is based on bionets ontology, the core of which is basic ontology that was manually developed by the authors. basic ontology describes classes from different domains, such as, protein, gene, pathway, interaction, disease, cell, tissue, drug, chromosome, cog functional group, gene set . basic ontology is manually mapped onto  <dig> obo ontologies, including sequence ontology, geneontology, human disease, chebi, brenda tissues, that were selected from the best curated and regularly updated ontologies provided by the obo consortium http://www.bioontology.org. the mapping among the obo ontologies, which is provided by obo, allows for the automatic integration of  <dig> ontologies in bionets ontology. the basic.owl file with basic ontology and mappings from it to other ontologies can be downloaded at http://www.integromedb.org/bionetsonto.php.

due to the generic schema of the database and ontology-driven mapping, during integration, new objects and their properties are automatically added in the database. for example, if the database stored information about the interaction between the two objects, proteins × and y, new information about this interaction will be integrated as a new property, e.g., a property 'p-value from the experiment a', and the 'experiment a' will be added in the database as a new object. if a clear evidence of, or reference to, a class from the bionets ontology is absent , an automatic procedure to statistically evaluate the content of the integrated table and assign a term from the ontology is applied. the procedure takes each word and word combination in the table, search for them in the bionets ontology, calculates the statistical significance of the occurrence, and assigns the most significant term to the table.

upon the integration of a new data source, the database automatically identifies conflicts in names, name synonyms and ids of all objects in the database  among various databases and identification systems. all names/ids are weighted and sorted by the number of integrated data sources, supporting the name/id. when the user searches the database, names/ids appear in the search result in the descending order by weight; the potential conflicts will appear in the bottom of the list. thus, if one database, for example, names the specific gene as × and another database, as y, both names, × and y, will be equally searchable; while in the search result, the name that is the most common among all integrated databases will appear first. however, no conflict data are removed or become invisible to the user, since the data sources are not weighted or judged. inconsistencies among the names/ids of all objects in the database that were found for human, mouse and rat are provided at http://www.integromedb.org. if the user searches the http://integromedb.org page for an object for which inconsistencies were calculated and found, they can be seen on the result search page by clicking the 'red button'.

the integromedb data can be searched at http://www.integromedb.org; however, in comparison with the application biologicalnetworks, described in this work, the web site provides only general quick search capabilities and no extensive data analysis, dynamic integration, and visualization capabilities.

integrative view of data in biologicalnetworks
the typical user of biologicalnetworks starts with loading the file or searching the integrated database for a list of genes , networks , curated pathways , microarrays, proteomics data , or sequence data . biologicalnetworks provides an integrative view of the found data , opening the modules of the system  in separate windows. all opened modules are synchronized and interconnected by object/gene/protein ids, so that changing the state of the object/gene/protein in one module of the system automatically changes the states of the respective objects/genes/proteins in all opened modules. this makes it possible, for example, to map color-coded expression data or ontology annotations onto any collection of genes/proteins as well as pathways and interaction/relation networks or chromosomal sequence view that are currently opened in the project. the modules are described in detail in the subsequent sections.

microarray data search and analysis
most current web-based tools are focused on retrieving expression and/or co-expression patterns for individual genes from particular microarray experiment. multi-experiment/multi-gene co-expression analysis is a labor-intensive and computationally challenging task, involving collecting suitable datasets, data downloads, preprocessing, normalization, and gene annotation management, the integration of different datasets, merging cross-platform data, and handling ambiguous mappings between genes and probe sets. microarray databases gene expression omnibus   <cit>  and arrayexpress  <cit>  provide tools for finding and analyzing most relevant datasets, but neither currently provides a comprehensive gene co-expression search over many datasets simultaneously. we have refined and extended the process of multi-experiment/multi-gene co-expression analysis in the microarray analysis window. biologicalnetworks database integrates tens of thousands microarray experiments from geo, arrayexpress and other public data sources . data from every experiment are normalized, so every expression vector is subtracted from the mean and divided by the standard deviation of the experimental expression values. since different experiments have different numbers of time points and conditions, the pearson correlation calculation is fdr-corrected so that the p-values calculated for pcc take the length of the expression vectors into account.

the user can upload the microarray data files and analyze them in conjunction with the integrated compendium of publicly available microarray data using the microarray analysis window. when searching in the microarray analysis window, the user can select the 'default', 'co-expression pairs' or 'co-expression triples' search modes. in the first case the search will return all available microarray experiments in which genes from the input gene list are over- or under-expressed. in the second case, it will return experiments and gene pairs where genes are co-expressed; and in the third case, it will return gene triples and experiments where these gene triples are co-expressed. this last option is especially important for discovering gene regulatory modules , since several studies exploit the fact that co-expressed and/or functionally related genes may be transcriptionally coordinated  <cit>  . the results are presented in highly interactive graphical format with strong emphasis on further data mining. in the resulting tree the user can pick the datasets manually and visualize it in the main window with the description of the experiment, annotations and metadata. datasets in the query results can be ordered by highest co-expression to input genes. in addition, to search functionalities the platform provides the user with clustering and functional enrichment analysis tools.

integrated visualization of biological 'themes' and gene list enrichment analysis
the implementation of the biological 'themes' within the biologicalnetworks framework provides a set of tools for giving the researcher a biological interpretation of gene clusters based on the indices provided in the input data set and information linking those indices to biological 'themes' . our gene list functional enrichment analysis currently uses as many as  <dig> annotation categories including  <dig> categories of go terms, curated  pathways, diseases, cell types, tissue gene expression, phenotypes and human anatomy . hypergeometric distribution with bonferroni correction is used as the standard method for determining statistical significance  <cit> . the result of the analysis is a group of biological themes that are represented as gene clusters by themes. statistical reports show the probability that the prevalence of a particular theme within the cluster is due to chance alone given the prevalence of that theme in the population of genes under study.

although ontologies are stored as dags  in our internal database, we visualize them as tables  for the sake of usability and easier navigation . since biologicalnetworks provides integrative view of the visualized data, all windows of the system and data inside them are synchronized and interconnected by ids. in the 'themes' tables, this is exemplified by the simultaneous highlighting of all gene/protein instances in all opened pathways, networks, experiments, sequences etc. representing the same 'theme' whenever one of them is chosen. terms under different categories are highlighted using different colors. all clusters of genes/proteins discovered for enriched biological terms are organized by 'themes' under the subfolder analysis in the project panel on the left. clicking on the expansion symbol or double-clicking over project panel tree nodes will expand or collapse it. other information, such as the number of genes directly annotated under the term, connections microarray experiments, network, sequence data if any etc. are also provided.

sequence annotation and sequence analysis browser
sequence data together with annotation data, including binding sites, promoters, and other regulatory regions, that have been integrated in the biologicalnetworks database represent the collection of interval trees; a single interval tree is created per chromosome instead of per annotated dna sequence regions. nodes of the interval -trees, or sequence intervals. are connected to the bionets ontology http://www.integromedb.org/bionetsonto.php nodes  through the internal objects and attribute values tables that list a huge amount of objects and attributes of different types integrated in the biologicalnetworks system. bionets ontology is implemented as a directed labeled meta-graph data structure that serves as a general-purpose 'labeled join index'. the general-purpose owl schema of the bionets ontology integrates sequence ontology, geneontology, biopax, disease ontology, chemical ontology, the functional genomics ontology  and the phenotype and trait ontology  and other ontologies provided by obo consortium at http://www.bioontology.org. it is implemented so that any individual ontology describing another type of biological knowledge  can be introduced and modified with minimal impact on the rest of the system. this is implemented through 'ontology mapping'  <cit> : for every new adapted ontology  that maps a class  a new class that maintains mapping to source ontology is generated  which is connected to a gene in our bionets ontology through 'same_as' relation. this is done to not modify bionets ontology classes every time new ontology is ingested, thus while 'unifying' different biological data types to keep specificity of every member schema of our integrated database. examples of operations on ri-trees that will apply on all substructures , called sub_x, are represented below:

ifoverlap function: sub-x * sub_x - > { <dig>  1}, returns true if the two interval substructures overlap.

next function: sub_x ->sub_x is applicable on data types for which there is a strict ordering on the domain; it returns the sub-structure encountered next in the ordering input substructure. the semantics of 'next' depends upon the data types .

intersect function: sub_x * sub_x ->sub_x, returns the intersection of two sub-x. this operation is valid for convex data types such as sequences and rectangles.

these operators are extensively used in sequence analysis browser for navigation   and annotation of multiply overlapping gene regulatory regions  . figure  <dig> represents different types  of segment elements and different annotations  integrated from many data sources for one gene or gene upstream region. genomic sequences are integrated with the meta-graph schema of biological-networks database through an elementid-objectid connection table, where elements are sequence elements, for example, a core promoter, tata box, or binding site, that are attributed to a particular gene by means of known localization in the gene, according to the genbank global position. internal enumerations in the integrated databases-transfac, for example, provides localization of regulatory regions in respect to the transcription start-are recalculated accordingly. the connection table assigns sequence elements to meta-graph objects, so that sequence elements, represented as a ri-tree structure, become graph objects within the meta-graph database. all heterogeneous data, for example gene properties in the property panel , integrated in the meta-graph database thus appear to be mapped on genomic intervals and vice versa. in the result, dna sequences, molecular interaction graphs, 3d protein structures, images of expression, and other types of data integrated in the biologicalnetworks become connected and annotated within the same context. the sequence part of biologicalnetworks integrated database is updated monthly from the primary public servers: genbank, ensembl and the ucsc genome browser database.

in the sequence analysis browser, the user can upload  large  volumes of sequence data and analyze them together with the integrated data on gene sequences, annotations, orthologs and cross-references to the major biological databases displayed in the sequence annotation browser . the browser window allows any sequence region within specific gene loci or whole genome to be displayed , using the set of navigation tools that are functionally similar to the tools in ucsc genome browser  <cit> . the rich collection of sequence features, such as exons, introns, the transcription start site, repetitive elements, conserved sequence regions and transcription factor binding sites, are color-coded in the browser window. the whole genome chromosome viewer  is a chromosomal representation of the entire genome of a sample. this view, integrated with experimental data , provides easy identification of large-scale abnormalities and the overall aneuploidy of a sample. the display consists of a number of bars , each representing a chromosome. each bar is composed of a series of colored linear segments, each representing a probe. the user can click on any clone in the chromosomal viewer to see its clone name and chromosome, and all properties  from integrated database.fho

comparative genomics browser
biologicalnetworks provides the ability to investigate transcriptional cascades by integrating and visualizing transcription factor gene regulation networks, relevant transcription factor binding sites and target genes with multiple sequence annotations, thus facilitating validation experiments  . a fundamental problem in building transcription factor -gene networks based on binding motifs in dna sequences of putative target genes is the rate of false positive predictions of tf binding sites . to reduce the false positive rate of tfbss predictions, phylogenetic footprinting methods are used that search only for genomic dna sequences, which are conserved among species. phylogenetic footprinting methods still have a high false positive rate because, although a tfbs might be correctly predicted, binding of the respective factor might only occur in certain cells or tissues. the biologicalnetworks' comparative genomics browser addresses both these problems of tfbs prediction via 1) integrating tfbss predicted by phylogenetic footprinting methods  <cit> ; 2) integrating all available experimental and computational data sources on transcriptional regulation, transcription factor binding sites, together with scores   <cit>   of binding event for each transcription factor and a gene or a pair of genes; and 3) filtering the final tf-gene interaction networks by tissue- and cell type-specificity in order to correct the probability of binding and thus reduce the false positive rate of tfbss prediction and narrow the list of potential target genes for further investigation. described methods can be applied to those genes and species for which data on tfbss and gene homology are available in the biologicalnetworks integrated database; if such data are available, gene regulatory regions can be visualized in the browser as it is shown in figure  <dig> . the homology information is imported from the cogs database  <cit> ; we extend the cog groups to cover all organisms available in the integromedb database of biologicalnetworks.

the comparative genomics browser can be explored together with other modules/windows of biologicalnetworks. for example, figure  <dig> shows how the browser can be used in tandem with the network/pathway window on the example of four transcription factors, creb, nrsf, gata- <dig>  atf- <dig>  in three species, human, mouse and rat. other species, including prokaryotes, can be also studied, subject to data availability. because if the user intends to explore specific genes/species in these two modules simultaneously, all these types of data, interaction networks/pathways, tfbss and gene homology, must be available. the browser displays regions surrounding orthologous genes, highlighting orthology relations among them and cases of synteny . the user may change the stringency of evolutionary conservation of tfbss and apply tissue-specific and cell type-specific filters; in the results, data and their representation visualized in both windows will change synchronically. the comparative genomics browser together with other modules of biologicalnetworks forms a valuable tool for investigating transcriptional cascades as it is described in the section 'demonstration study' below.

data querying
the biologicalnetworks interface contains multiple search and build pathways/networks capabilities , allowing the simultaneous querying of and the building of pathways/networks, using microarray or proteomics data, networks, curated pathways, sequences, sequence annotations, gene regulatory regions, and other data. the user can start searching for an entity of interest and then query for relations to that entity. alternatively, the user can import a list of entities and search for relations among them and other entities in the database.

the seven querying options listed below allow for the specification and search for any logical combination of entities, processes/relations and their properties. the first four options are available from quick search box at the top right corner of the program  and allow searching the entire database. the next three query options define more specific searches; they are accessible by clicking the buttons to the left and right of the search boxes in the correspondent windows . the search results appear in the bottom list panel .

 <dig>  simple gene/protein search . for example, the search for the three genes/proteins 'p <dig>  egfr, esr1' returns these three genes in all specified species and gene properties. the list of genes/proteins can be uploaded from the file.

 <dig>  keyword search. for example, the keyword search 'p <dig>  egfr, esr1' returns all database objects, including experiments, publications, pathways, and all properties of all objects that contain either p <dig>  egfr, or esr <dig> 

 <dig>  wild card search. for example, the search 'neurodeg*' returns all objects related to neurodegenerative, neurodegeneration, and all words in the databases beginning with 'neurodeg'.

 <dig>  multi-word search. for example, the search 'obesity diabetes'  returns the results for 'obesity and diabetes' and 'obesity or diabetes'.

 <dig>  build pathway wizard: path queries. build pathway wizard contains dozens types of pathway and network searches  in protein-protein interactions, transcription factor-dna networks, relational  networks and curated pathways  . the three wizard windows  allow users to specify:

a) algorithm type for pathway building;

b) select the directionality of relations;

c) types of objects and property values  to be included in the pathway; and

d) relations  to be included in the new pathway.

 <dig>  specialized search . these search boxes are available on the microarrays, curated pathways and networks and sequence panels. they are for quick retrieval the most popular public data sets.

 <dig>  search by attributes . the search by attributes allows the user searching the database, as well as user's data files, for specific entities, using many types of data as search conditions. these include, for example, node type, effect , mechanism , tissue type, description, user-defined attributes text, and so forth. . these types of queries can contain logical operators on the attributes .

search boxes accept lists of gene names , accession numbers from public databases  or geo experiments . the system recognizes most of the currently available gene/protein ids and synonyms for thousands of organisms integrated from over  <dig> data sources. to perform a search in the microarray, pathways/networks, sequence annotations and pubmed repositories, the user can specify any combination of keywords, including authors names, tissue types, diseases, gene/protein names. the search box contains different configuration options and filters and enables limiting searches on specific species, opened network/pathway and sequences. the organism drop-down menus in each search window include  <dig> model organisms, which are mostly represented in the database, and the following options to narrow down the search and subsequent data analysis: all organisms, eukaryotes, prokaryotes and viruses. eukaryotes are subdivided into plants, fungi, protists, archea, and metazoa/animals, which in turn are subdivided into vertebrate, invertebrate and mammals.

loading files and output results in biologicalnetworks
in biologicalnetworks, the user can load/open files in the following standard formats:

• networks: sif , psi-mi, tab-delimited network file, sbml and bigg model format;

• microarray data: tab-delimited file format, illumina tab-delimited and affymetrix file formats;

• sequences: genbank  and fasta formats.

the results of analysis and visualization in biologicalnetworks can be saved at any moment as the bionets xml project file and then opened at other computers; the user's settings, data files, results of search, built networks, clustering, colorings and all other visualizations will appear exactly how they were at the moment of the file saving. the project can be also saved/exported to the sif and svg formats.

integration of users' data
biologicalnetworks allows the user to work with his/her own data, and to integrate them into the system database . the integration procedure is different from the procedure of loading/opening data files described above in that the loaded data are available to the user and also to whoever obtains the bionets xml project file that includes the user's data. the integration procedure allows the data to be made public; they become integrated in integromedb as any other database and become searchable in the biologicalnetworks application and at the web-page http://integromedb.org.

the user can integrate the data at http://integromedb.org under "user's data integration" menu . the data will become public, but unless it is already curated by the data administrators, it will remain 'tagged' as 'uncurated' under the contributor's name. the integration procedure consists of  <dig> steps : 1) registration, 2) data mapping and 3) data integration. data mapping and integration is done automatically; it follows the same procedure as one described in the section 'biologicalnetworks integrated database.' the user can accept or not accept the resulting mapping. to be integrated, the data needs to be in the table format. any type of data can be integrated, given that they are provided in the tab-delimited format.

user support and problem handling
to address the critical need for user support, we developed bug and problem report tools. this tool allows the user to report problems or bugs, while working in biologicalnetworks. during the installation of biologicalnetworks and the initial run of the program, the user is asked for the agreement for permission to send from his computer any future bug reports. if the user agrees, bug reports will be automatically generated and sent to our support server; it will include the environment settings and the last user's steps before the program gave an error. to report the problem, the user needs to use problem report tool that is located in the 'tools' menu of the program. the sun netbeans report and bugzilla mechanisms are employed in the bug/problem report tools. our experience shows that most of the user  problems are minor problems that can be quickly fixed by the developers, if the bug and problem report tools are used.

RESULTS
the biologicalnetworks analytical and querying functionality were applied to and tested in a number of different biological systems/projects, both eukaryotic and prokaryotic: host-pathogen interactions, specifically, the influenza and streptococcus pneumoniae -human/mouse/rat interactions  <cit> , 'meta-genomics' camera project  <cit> , yeast meiosis  <cit> , whole-genome metabolic reconstruction in humans and e. coli  <cit> , parasite studies in giardia lamblia  <cit> , and microbial metabolism in thermatoga maritime  <cit> . all described projects are accessible from biologicalnetworks main page under "driving projects" panel or upon launching the biologicalnetworks application, on the welcome screen. these studies can be replicated by running the respective projects.

in this section, we demonstrate a case study of the search for potential therapeutic targets for hypertension. specifically, it is shown how, using biologicalnetworks and starting with a single microarray experiment in the model organism rattus norvegicus  <cit> , one can identify regulatory regions in the hypertension essential genes and investigate transcriptional modules and gene regulatory networks describing multi-factorial nature of hypertension . below the case study is described step-by-step.

first, among about  <dig> genes significantly perturbed in hypertension in the microarray experiment  <cit>  , we found  <dig> over-expressed and  <dig> under-expressed genes that showed the maximal fold change of expression in hypertension  . for the demonstration purpose of this study, we focused only on over-expressed genes. further, using the multi-experiment/multi-gene microarray search panel, we searched the microarray experiments for co-expressed pairs containing the selected over-expressed genes . data in every experiment was normalized; that is, the expression vector was subtracted with the mean of the expression values in the experiment and divided by the standard deviation. since different experiments have different number of time points and conditions, calculation of pearson correlation coefficient  was fdr-corrected, so that calculated p-values for pcc took into account the length of the expression vectors . for further analysis, only pairs that were co-expressed in more than  <dig> experiments were chosen .

second, we built a network of  <dig> selected genes, selected at the previous step, that were co-expressed and at the same time over-expressed in hypertension, together with tfs that might potentially regulate transcription of these genes  <cit> . to search for tfs, we considered that gene regulation is controlled to a significant degree by tfbss within proximal promoters and the fact that in orthologous promoters, the relative order and spacing among tfbss expected to be conserved during evolution  <cit> . for the  <dig> selected genes, we first identified orthologous promoter regions in human, mouse and rat . we considered the regions from - <dig> kb to  <dig> bp relative to the transcription start sites and used comparative genomics browser, which was described in the above section and shown in figure  <dig>  then, we searched for tfbss that were conserved in the orthologous promoters . binding sites were filtered at p-values below 10- <dig> and examined visually for consistency. in the result, we obtained  <dig> tfs that might potentially regulate transcription of  <dig> hypertension-specific genes . to construct the final network, we searched for all reported interactions among identified  <dig> tfs and  <dig> genes . the obtained network is shown in figure 7; it consists of  <dig> tfs/proteins/genes since depicts only those of analyzed tfs/proteins/genes for which at least one pairwise interaction/relation was reported in the databases integrated in biological-networks.

third, to investigate the constructed network, we searched the geo compendium for co-expressed tf-gene pairs; we found pairs that are connected by red lines in figure  <dig>  we also investigated whether more disease information related to the found genes/tfs can be obtained from omim database. using the keyword search mechanism, we first searched the integrated database for mesh terms related to 'hypertension' and then searched for these terms in the omim database. among all human genes, hypertension-associated mesh terms were found in  <dig> genes, or about  <dig> % of all human genes. while in the set of  <dig> transcription factor found in this study ,  <dig> genes, or 31%, had hypertension associated terms .

CONCLUSIONS
the new release of biologicalnetworks introduces extensive functionality for a more efficient integrated analysis and visualization of diverse data in studies of different biological systems concerning human diseases, host-pathogen interactions, metagenomics, meiosis in fungi, microbial metabolism, and whole-genome metabolic reconstruction in eukaryotes and prokaryotes. the biologicalnetworks database has a general purpose graph architecture and is data-type neutral, thus there is the prospect of further data integration for more complete systems biology studies. the integration of additional, orthogonal sources of information, such as clinical data, will enable quantitative associations of clinical variables with the activities of molecular pathways and processes. we also demonstrated how biologicalnetworks can be used to find disease-specific interaction networks, through the application of multi-level analysis of microarray, sequence, regulatory, and other data.

besides customization on the level of selecting analysis methods/tools in biologicalnetworks, the user has an option to change the parameters of each method; for example, specify the homology level in the "build homology wizard" when building the clusters of homologous genes/proteins or specify data sources, types of interactions, species, and p-values in the "build pathway wizard". we are also customizing biologicalnetworks constantly adding new features, methods, data formats and sources by the users' requests.

to allow for the replication and comparison of the results presented in this work with other related analysis, all available demonstrated examples and data can be accessed in 'bmc bioinformatics demo project', upon launching the biologicalnetworks application. additionally, the biologicalnetworks welcome screen and front page of the web site contains a list of "driving" biological projects  which can be replicated by simply running the respective project.

biologicalnetworks, along with the user manual and video tutorials and quick start guide, is available at http://www.biologicalnetworks.org.

availability and requirements
project name: biologicalnetworks

project home page: http://www.biologicalnetworks.org

operating systems: windows 2000/xp/vista/ <dig>  linux/ubuntu/redhat, macosx

programming language: java

license: free for academic purposes

other requirements: 2gb ram

authors' contributions
mb, ag and ms contributed to system concept. sk, yd, ms and mb implemented the system and performed major programming work. mb and jp coordinated this work, contributed to data analysis and wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
methods. detailed description of the methods and data types used in the biologicalnetworks system.

click here for file

 acknowledgements and funding
we would like to thank our colleagues from ucsd medical school daniel o'connor and ryan fries and animesh ray from kgi for valuable discussions of hypertension case study and ching-wai tan for critical reading of the manuscript.

this work is supported by national institutes of health r01gm <dig> to mb and ag and r01gm <dig> to jp.
