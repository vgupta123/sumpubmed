BACKGROUND
acquiring large quantities of a desired protein in situ from original host cells is not trivial. moreover, gene over-expression and purification of corresponding proteins in a soluble form are important for structural and functional proteomics. recombinant protein production is an important applicable procedure in biotechnology and one of the few ways to over-express a given protein coding sequence of interest. to date, escherichia coli , one of gram-negative bacteria, is still an approachable and favored host for cloning and expressing a given protein in many occasions  <cit> . in recent years, a variety of studies have developed well-established large-scale and high-throughput systems to obtain large quantities of soluble recombinant proteins  <cit> . however, it has been reported that a large number of foreign heterologous proteins were expressed at relatively low levels  <cit>  or difficult to solubilize  <cit> , in e. coli. these over-expressed proteins in an insoluble form are termed as inclusion bodies. since the refolding procedure of inclusion bodies to recover a soluble form of recombinant proteins is time-consuming, expression of insoluble protein aggregates is frequently a major obstacle in recombinant protein production.

hence, to meet the demands of preventing inclusion body formation in recombinant expression systems, many researchers have dedicated their efforts to optimize the growth conditions, such as buffer composition, protein concentration, and cultivation temperature. while others have focused on improving the folding probabilities regarding enhancement of mrna stability, over-expression of rare-codon trna, selection of efficient vectors and host strains, and co-expression with solubility-enhanced proteins  <cit> . nevertheless, more studies have emphasized the importance of increasing the solubility of recombinant proteins in e. coli by fusing them to highly soluble carrier proteins  <cit> . because the only way to select a specific match between a target protein and an appropriate fusion partner that will lead to a soluble form is still a trial-and-error process; a more systematic approach is required.

regardless of fusing different vectors, most previous works have attempted to predict the propensity of a given protein to be soluble or not in e. coli. the first such study was conducted by wilkinson and harrison  <cit>  with a regression model analysis. they concluded five amino acid-dependent factors are discriminative features that correlate to inclusion bodies formation. there were charge average approximation , turn-forming residue fraction , cysteine and proline fractions, hydrophilicity and molecular weight. in a subsequent study, davis et al. have improved the statistical solubility model of solubility in e. coli by demonstrating that the first two parameters were more critical than other three  <cit> . additionally, based on the undertaking of structural genomics projects, bertone et al. have applied machine learning techniques such as decision trees and support vector machines  to discover other informative features based on  <dig> proteins from methanobacterium thermoautotrophicum. among these critical parameters, low content of negative residues  and presence of hydrophobic patches are associated with insoluble protein formation  <cit> . subsequently, goh et al. utilized random forest and decision-tree based methods on about  <dig>   <dig> protein targets in targetdb  <cit>  to conclude that the most significant protein feature was serine percentage composition  <cit> . furthermore, luan et al. collected  <dig>   <dig> soluble proteins out of  <dig>  orfs in caenorhabditis elegans expressed by single vector and one e. coli strain. in their study, the most prominent protein feature was gravy   <cit> .

to date, many studies have showed that support vector machines  combining with appropriate kernels frequently result in better performance for biological sequence classification than other methods based on statistical learning theory  <cit> . recently, many studies have tried to apply svms to circumvent the problem of assessing the propensity of target proteins to be actively soluble or to form inclusion body in e. coli. according to their previously observed sequence-dependent features in protein levels, idicula-thomas et al. provided a svm-based approach to achieve 72% in prediction accuracy  <cit> . additionally, smialowski et al. developed proso, a two-layered predictor combining svm and naive bayes classifiers, and obtained a compatible performance similar to idicula-thomas et al.  <cit> .

the studies mentioned above have at least two basic postulations: 1) a given gene was thought to have been over-expressed and 2) the expression level of a target gene was the same whatever by fusing different vectors in e. coli. consequently, most previous works only focused on demonstrating important factors related to solubility prediction and mixed the cases of target genes in inclusion fraction and non-expression to form a negative set. however, recent research has reported that recombinant proteins expressed as inclusion bodies still keep biological activity than previously appreciated  <cit> . thus, it is still significant to distinguish inclusion bodies from the negative set in previous studies. moreover, it has also been assumed that all given proteins obtained the same expression result regardless of the fusion of different vectors in e. coli as it only focused on predicting the solubility of a target gene by its protein sequence. however, a given protein usually yielded different expression levels by fusing different vectors. note that different groups have discovered different crucial protein factors according to soluble target proteins acquired from their own experiments. it would be partly because their experimental data were conducted under different expression conditions, such as the focus of fusing different vectors in this work. thus, kataeva et al. reported that the sensitivity in previous works on predicting the solubility of recombinant proteins was much lower than the specificity  <cit> .

to the best of our knowledge, this is the first attempt to consider the entire cloning and expression regions as a whole than focusing only on the sequences of the desired protein as in previous works. the entire cloning and expression regions usually consist of affinity tags and desired proteins for over-expression in recombinant protein production systems. therefore, the objective of this study is to predict the efficacy of vectors in e. coli for a given protein. we propose three svm-based methods to tackle a three-class classification problem according to the expression levels in sds-page experiments. these three classes consist of soluble fraction, inclusion fraction, and non-expression, as show in figure  <dig>  we finally compare our three svm-based methods to previous studies and report two case studies of applying our methods to enhance the solubility for a given protein to be over-expressed in e. coli.

methods
data preparation and formulation
high-throughput  protein productions were conducted to screen the over-expressions of target proteins. the system of htp and parallel approaches in protein expression included six different fusion protein expression vectors and two universal restriction sites in e. coli. the expression results consisted of three levels after the treatment of denaturing sds-page. one hundred and twenty one target genes were recruited from our core facility of recombinant protein production  <cit> . the target genes cover a wide variety of species from virus, bacteria, mouse to human. the lengths of target genes varied from  <dig> to  <dig>  that is, the lengths of final translation proteins after being cleaved from recombinant fusion proteins varied from  <dig> to  <dig>  given a target gene, dna products were generated with 5' ecori and 3' xhoi sticky ends, and then cloned into six expression vectors in parallel. the structures of six different fusion constructs were shown in figure  <dig>  fusion vectors were named by their corresponding fusion tags; i.e., cbp, gst, nusa, his, mbp, and trx. to over-express highly soluble recombinant proteins, six different fusion constructs for each target gene were transformed into e. coli under the same standard experimental conditions, as well as in parallel. host strains of e. coli used in this study were jm <dig> and bl21-codonplus. host cells were harvested and lysed in 96-well plates. after centrifugation, sds-page experiments were used to separate proteins to determine expression levels. in addition, western blot was used to further verify expression results in sds-page experiment. finally, in a parallel analysis of protein solubility, each target gene was identified as soluble fraction, inclusion fraction, or non-expression with respect to different fusion protein vectors. in this way,  <dig> scenarios,  <dig> target genes with six different fusion vectors, were obtained. there were  <dig>   <dig>  and  <dig> cases for soluble fraction, inclusion fraction, and non-expression, respectively .

recombinant fusion protein solubility modelling
as shown in figure  <dig>  three expression levels of recombinant proteins in sds-page experiments were soluble fraction, inclusion fraction, and non-expression. hence, after screening solubility of  <dig> target proteins in six different fusion vectors, the model of expression and solubility of entire recombinant proteins, including given genes and fusion vectors, was formulated as a three-class classification problem. in this work, three svm-based methods were proposed to tackle a three-class classification problem in three different aspects of using the hierarchical structure. furthermore, based on our experimental data of over-expression of given genes in different fusion vectors in e. coli, we considered entire sequences of recombinant expressed proteins instead of only sequences of target protein in previous works. altogether, these three svm-based methods, i.e. flatsvm , nestsvm , and hiersvm , predict each scenario, including a given gene and corresponding fusion vector, as one of the expression levels in sds-page experiments. because f <dig> measure is a frequently used parameter in a multi-class classification problem, it was employed to compare the performance among three proposed svm-based methods. precision-recall curve  and receiver operating characteristic  were used to compare performance of our methods to previous works. the following sections describe feature extraction and our three proposed methods in more detail.

feature generation
before training svms, feature extraction was applied to generate fixed length feature vectors from entire recombinant expression regions. two major steps in recombinant protein productions in e. coli; i.e., transcribing messenger rnas  of cloning and expression regions, and translating proteins of recombinant fusion vectors, were considered. the major factors were correlated to mrna expression and stability, codon usage in e. coli, solubility of whole fusion vectors, and post-translational modifications  on recombinant proteins. hence, based on nucleotide and protein levels, entire cloning and expression regions were used to retrieve potential features for predicting transcription efficacy and solubility propensity of recombinant fusion proteins in e. coli. for mrna expression and stability,  <dig> k-mer features where k =  <dig>   <dig>  and  <dig>  along with transcribed mrna length for each recombinant fusion gene.

guanine-cytosine content  calculated from nucleic acid sequences of recombinant fusion genes were also taken into account. for protein expression, codon usage bias in e. coli could be a key factor of determining the efficiency of translation. moreover, based on the reconstruction of phylogenetic tree, elena et al. have concluded that b and k <dig> strains are the most closely related ones in e. coli  <cit> . consequently, in this study, codon adaptation index  has been calculated based on codon preference in e. coli k <dig> strain by emboss package  <cit> . as described in previous works,  <dig> and  <dig> sequence-independent and non-redundant features used in  <cit>  and  <cit>  were extracted, respectively. features used in most previous works were extracted only from sequences of target proteins to predict solubility. however, different results having been observed by using different fusion vectors were considered in this study. instead of considering only target proteins, features in protein levels were derived from entire recombinant fusion proteins. it is known that ptms rarely occur in e. coli. however, for higher eukaryotic proteins, some critical steps of correct protein folding may be related to certain ptms. therefore, in the present work, predicted ptms on entire recombinant fusion proteins were further considered.  <dig> ptms predicted by automotif  <cit>  were used to reveal critical steps of ptms on recombinant fusion proteins to aid prediction of recombinant fusion protein solubility. in addition, compared to solubility-related features used in the previous works, isoelectric point and other  <dig> peptide statistics calculated by emboss.iep and emboss.pepstats were included  <cit> . finally,  <dig> features for each instance vector were generated .

 <dig> features were extracted from an entire recombinant fusion protein. they were divided into two groups with respect to nucleotide or protein levels. the first  <dig> features were generated from nucleic acid sequences of entire recombinant fusion genes. the rest  <dig> features were retrieved from protein sequences.

three svm-based methods for classification
support vector machines  are one type of machine learning techniques used for classification and regression originally developed by vapnik based on the statistical learning theory  <cit> . svms search for a hypothetically unique and optimal hyperplane to distinguish data by maximizing the margin. by cooperating with kernel functions, svms map original data that are non-linearly separable in input space into a high-dimensional feature space. in this paper, expression level prediction of recombinant fusion proteins was formulated as a three-class classification problem; i.e., soluble, insoluble, and non-expression. after scaling features generated by feature generation, all features in instance vectors were normalized to zero mean and standard deviation  to  <dig>  here, three svm-based methods were proposed to deal with the three-class classification problem. with respect to different aspects of considering the hierarchical structure formed by expression levels of recombinant fusion proteins, instance vectors were treated as flat, nested, or hierarchical ones. three svm-based methods were named as flatsvm , nestsvm , and hiersvm , respectively. libsvm  <cit>  were used to implement all core algorithms in this research. according to the characteristics of features, the radial basis function  kernel implemented in libsvm was used because of its advantages on dealing with the most cases of numerical data. in the present work, all instance vectors were stratified sampling among three classes. in each class, the same proportion is present in each random partition to divide instances into m parts. in training and validation, k-fold cross-validations  were applied to the m- <dig> parts of instance vectors. the last part was used as test. the procedure of training and testing was repeated for n times. finally, performance results of these n repeats were averaged and their corresponding sds were measured.

flatsvm
according to the hierarchical structure as shown in figure  <dig>  we treated this binary-tree taxonomy as a flat one. generally, one-against-one  and one-against-the rest  are two commonly used strategies on dealing with multi-class classification problems. however, as reported by hsu et al., 1vsall strategy may get a comparable performance as 1vs <dig> strategy, but it takes much more time on training  <cit> . therefore, considering the cost of training time, we decided to use 1vs <dig> strategy instead of 1vsall strategy in this work. as mentioned in feature generation, instance vectors were derived with  <dig> features from entire recombinant fusion regions and  <dig> instance vectors were stratified by labels and divided into ten parts randomly. along with their corresponding labels of expression levels,  <dig> instance vectors were used on training and validation by 10-fold cvs. by using three 1vs <dig> classifiers, the prediction class of an instance vector was determined by a majority voting. the other unseen  <dig> instance vectors in training and validation were applied to evaluate the performance of trained classifiers. by repeating the same procedure of training and testing in ten times, an average and sd were calculated for these ten cv results. all programs were implemented and associated with libsvm package  <cit> .

nestsvm
following the procedure of transcribing and translating a recombinant fusion protein in e. coli, the hierarchical structure was divided into two steps. the first step was related to protein expression and the second was associated with the solubility of expressed proteins. first, mrna expression and stability for a recombinant fusion gene and codon preference in e. coli were the major factors. for second step, solubility related features to test whether an expressed protein could be folded correctly as a soluble one in e. coli were applied. based on the divide-and-conquer conception, a stepwise method, nestsvm , was proposed to undertake the three-class classification problem by training corresponding classifier for each step. this way, two binary classifiers were trained with distinct sets of features to predict whether a recombinant fusion gene could be expressed and whether an expressed recombinant fusion protein would be soluble in e. coli. for protein expression, a binary classifier was trained to distinguish whether a recombinant fusion gene could be expressed as a protein in e. coli by focusing on features derived from nucleic acid sequences.  <dig> k-mer frequency features, length, gc-content, and cai were derived from entire recombinant fusion genes used in first binary classifier. similar to flatsvm ,  <dig> instance vectors with  <dig> features were applied to 10-fold cvs on training and validation of the first classifier. however, for the first classifier, instance vectors labelled with soluble and insoluble were treated as one class. furthermore, for predicting solubility of expressed recombinant fusion proteins in e. coli, the second classifier was trained by the other non-overlapping  <dig> features in protein level. for a perfect case, all instance vectors of soluble and insoluble used in first step were promoted to train the second classifier. hence,  <dig> soluble cases and  <dig> insoluble cases were used for 10-fold cvs for training and validation. the second binary classifier was mainly used to determine instances between soluble and insoluble proteins. for testing the performance of nestsvm ,  <dig> unseen instance vectors were used to predict protein expression by the first binary classifier. in the second binary classifier, it was applied to instances that were labelled as expression in the first step to predict their protein solubility. the three-class classification problem was tackled by combining two binary classifiers for predicting expression and solubility of recombinant fusion proteins in e. coli respectively.

hiersvm
for our third method, class labels were considered as attribute vectors instead of arbitrary numbers and involved the concept of hierarchical classification method  <cit> . because of resource availability constraints, we did not implement the entire algorithm. instead, we reduced it into a binary svm classification to fit the public domain tool. the algorithm was described as follows. according to figure  <dig>  attribute vectors of labels were encoded as < <dig>   <dig>   <dig>  1>, < <dig>   <dig>   <dig>  1>, and < <dig>   <dig>   <dig>  0> to illustrate soluble, insoluble, and non-expression, respectively. here, the first three digits in attribute vectors were associated to the original labels in the order of soluble, insoluble, and non-expression. the last digit in attribute vectors represented the common parent node of labels between soluble and insoluble proteins in class taxonomy. in other words, for the instance labelled as non-expression, the last digit will be zero for the attribute vector.

in order to reduce a hierarchical svm classification into a binary classification, subtractions between pairs of attribute vectors were taken to implement the idea. for example, when considering an instance vector with its label as soluble, two new attribute vectors of positive cases were produced by subtracting attribute vectors of insoluble and non-expression from attribute vector of soluble, respectively. hence, two new attribute vectors of positive cases were < <dig>  - <dig>   <dig>  0> and < <dig>   <dig>  - <dig>  1>. in other words, subtracting attribute vector of soluble from attribute vectors of insoluble and non-expression, generated two new attribute vectors for negative cases, therefore, two new attribute vectors of negative cases were <- <dig>   <dig>   <dig>  0> and <- <dig>   <dig>   <dig>  -1>. by using tensor product ⊗ to cooperate attribute vectors of labels into instance vectors,  <dig> features in an instance vector were expanded to four times, i.e.,  <dig> features. consider an instance vector x, after expanding the four new attribute vectors were generated. <x, -x,  <dig>  0> and <x,  <dig>  -x, x> were positive cases and <-x, x,  <dig>  0> and <-x,  <dig>  x, -x> were negative cases. finally, for training and validation, two positive cases and two negative cases were used. for testing,  <dig> pairs of subtractions between attribute vectors of labels were applied to predict and averaged to decide the final prediction label. similar to our other two methods, after a stratified selection,  <dig> instance vectors were used in training and validation for 10-fold cvs, and then the remaining  <dig> instances were applied as test cases.

evaluation measurement
given a multi-class classifier, f <dig> measure is the proper parameter of its performance. f <dig> measure is calculated as   

where j is the total number of classes, aj is the number of instances correctly predicted as class j, bj is the number of instances incorrectly assigned to class j, and cj is the number of class j instances assigned to other classes. taking a general case of f <dig> measure as example, f score is simply derived and represented as   

where tp, fp, and fn represent true positive, false positive, and false negative, respectively. alternatively, the well-known representation of f score for a binary classification is associated with precision and recall, which are denoted as p and r, respectively. generally, a system with good performance will assign the correct class and only the correct class, by maximizing not only precision but also recall, and then results in maximizing the f score.

in this work, each svm-based classifier was used as a three-class classifier to predict expression levels of recombinant fusion proteins in e. coli. hence, the performance of three proposed svm-based classifiers were compared to each other by f <dig> measure. however, to compare with previous works, three proposed svm-based classifiers were reduced to distinguish soluble from non-soluble cases, including insoluble and non-expression cases. by using f score, performance of our methods was compared with previous works under the same criterion. moreover, the areas under receiver operating characteristic  and precision recall curves  were used to assess the performance of our methods with previous works. roc consists of false positive rate  and true positive rate  as x and y-axes, respectively. on the other hand, prc consists of true positive rate  and positive predictive value  as x and y-axes, respectively. the detail calculations were as follows.         

to investigate difference between pairs of our three methods, student's t-test and yule's q-statistic  <cit>  were conducted to demonstrate the relationship of diversity. the yule's q-statistic is defined as   

where nij is the number of instances in the test instances, classified correctly  or incorrectly  by the first classifier, and correctly  or incorrectly  by the second classifier. after calculation, the range of q varies from - <dig> to  <dig>  for statistically independent classifiers, the calculation will be equal to zero. on one hand, the positive value of q indicates that classifiers tend to identify the same instances correctly. on the other hand, classifiers commit errors on different instances will have a negative q.

RESULTS
predictive performance of our proposed svm-based methods
in order to investigate expression levels of target proteins cloned into individual fusion vectors, six three-class classifiers were trained and assessed by applying flatsvm . six hundred and seventeen features for each target gene associated with individual vector were generated as mentioned in feature generation. the process of training and testing were used to  <dig> target genes for each vector to train a three-class classifier. all target genes were divided into five parts. four out of five parts were used to train a classifier by 5-fold cvs. the last part of  <dig> target genes was tested by the classifier trained in previous step. as elucidated in table  <dig>  the best performance occurred in the classifiers based on gst vector for the average f <dig> measure. the result showed that the classifier of gst vector outperformed other five classifiers trained with respect to other vectors on classifying instances into three expression levels correctly. however, the performance of six individual classifiers trained independently per vector was still far from satisfactory.

f

 <dig> 
for f <dig> measure, each individual classifier must correctly identify each instance into its real class

instead of taking experimental data separately to train six classifiers with respect to each vector, all data were considered together in the following experiments. for our three proposed svm-based methods, the predictive performance was shown in table  <dig>  we also showed the performance of adaboost as our baseline performance. overall, flatsvm with high f <dig> measure, f score, and accuracy seems to outperform other methods. using student's t-test, we investigated the pair wise relationship of three proposed methods with respect to accuracy. we showed in table  <dig> that only flatsvm and nestsvm resulted in statistical significance with a p-value less than  <dig> .

for f <dig> measure, each individual classifier must correctly identify each instance into its real class. in contrast, f score just focuses on measuring the rate of correctly identifying soluble fraction instances from non-soluble ones, i.e. the class of soluble fraction versus the other two classes.

flatsvm
nestsvm

nestsvm

hiersvm
student's t-test in accuracy was performed to  <dig> repeats of evaluation procedures among three proposed methods. flatsvm method performed significantly better than nestsvm method with a p-value less than  <dig> .

comparisons with solubility prediction methods
to compare our proposed methods with other previously published predictors, our methods were reduced to a binary classifier of predicting solubility of proteins from non-soluble ones, which included insoluble and non-expression. as we have discussed, the widely used and available predictors are wilkinson-harrison  <cit>  and proso  <cit> . by submitting each recombinant fusion proteins to their provided web servers, calculated results were acquired. as illustrated in figure  <dig> for prc, each point in the plot was an average of  <dig> repeats of test cases for all methods. to compare two methods in previous works, wilkinson-harrison method achieved a better result than proso by  <dig> . according to the claim of proso, correct evaluation occurred only when target proteins were without trans-membrane segment. hence, after checking proteins in our dataset by tmhmm  <cit> , the bad performance of proso would be because of the existence of trans-membrane segments in recombinant fusion proteins that were not removed. as shown in figure  <dig>  the area under roc curve of proso is  <dig> , which is closer to  <dig>  reported in the paper. compared our three methods to others, the best result of our proposed method is flatsvm , which outperformed by achieving the auprc and auroc of  <dig>  and  <dig> , respectively.

we used the feature selection package provided in libsvm to measure the importance of the features. we found that if we remove those less important features from our feature set, it will result in a lower accuracy. for instance, after doing feature selection and keeping  <dig> the most important features, the testing accuracy will dramatically decrease from  <dig> % to  <dig> % in one of the best cross-validation model in flatsvm . hence, we decided to keep all  <dig> features to maintain the performance.

model ensemble of proposed methods
to investigate the diversity of our proposed methods, we calculated yule's q-statistic between pairs of proposed methods. the results in table  <dig> indicate that each method permit to train a classifier in a partial un-correlation. this outcome could motivate the importance to combine different methods into an ensemble one. as shown in figure  <dig> for prc, ensemble models between flatsvm and nestsvm resulted in a higher auprc of  <dig> . as shown in figure  <dig>  ensemble models among all methods achieved  <dig>  in auroc.

flatsvm
nestsvm
hiersvm

nestsvm

hiersvm

adaboost
yule's q-statistic was performed to proposed methods. it shows that flatsvm and hiersvm tend to make similar mistakes and correct classifications.

computational simulation of enhancing solubility by limit mutations or optimal codons
in biotechnology perspective, to improve the solubility of target proteins, some laboratory workers may mutate few nucleotides in target genes without affecting their corresponding translational proteins. moreover, according to the codon preference in e. coli, they synthesize whole nucleotide sequences based on the amino acid sequences. here, we designed two computational simulations to enhance the solubility of recombinant proteins via our prediction classifier. first, while considering a proper number of mutation sites in biological laboratories, we limited the maximum steps of mutation sites to five. meanwhile, to effectively reduce the search space, we employed a beam search for narrowing down the search to the top five potential candidates to be soluble forms, which were predicted by our classifier. on the other hand, we designed the second simulation by using preferential codons in e. coli to synthesize entire nucleotide sequences of target proteins. by inputting these synthesized nucleotide sequences into our classifiers, we want to investigate whether any changes in expression levels will occur.

in our data set, there are totally  <dig> scenarios, including a given gene and its corresponding vector, resulted in a non-expression level. by mutating few nucleotides or by synthesizing nucleotide sequences based on the codon preference in e. coli, we tried to recover these  <dig> cases from non-expression to soluble fraction. for the first part, there are two cases predicted by our classifier to change their expression level to soluble forms after one and five steps, respectively. as shown in figure  <dig>  this case was originally in the non-expression level, but was predicted as a soluble from after mutating five bases. for the simulation of using synthesized nucleotide sequences, there were totally  <dig> out of  <dig> cases that were successfully predicted as soluble fractions as well as nine out of  <dig> cases were predicted as insoluble fractions.

CONCLUSIONS
since the days when wilkinson and harrison started applying statistical and computational approaches on studying the solubility prediction for a given protein over-expressed in e. coli  <cit> , a large number of researchers developed variety of methods on extracting the important factors to affect the solubility of recombinant proteins. in this study, we developed three svm-based methods of predicting three expression levels based on sds-page experiments for a target protein in a corresponding vector in e. coli. unlike most previous works of omitting the cases of no protein expressions in e. coli, this work is the first attempt to tackle a three-class classification problem of distinguishing the expression level for a desired protein in sds-page experiments. moreover, according to the observation from our experimental data, a given protein could result in different expression levels when being over-expressed in different vectors in e. coli. therefore, this work is the instance of encompassing the entire cloning and expression regions. by using our classifiers, the prediction results could help biologists effectively and efficiently choose among different vectors to gain soluble recombinant proteins in e. coli. additionally, in biotechnology perspective, by mutating few nucleotides or by synthesizing optimal sequences according to the codon preference in e. coli, our prediction methods also provide effective ways to enhance the solubility of target proteins.

competing interests
the authors declare that they have no competing interests.

authors' contributions
all authors conceived the project and design. ys and pl prepared the data. wc implemented the algorithms, performed the computational experiments, and analyzed the results. uy partly initiated the design of computational analyses. wc, wl, and ch wrote the paper. all authors read and approved the document.

