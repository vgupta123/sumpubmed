BACKGROUND
in recent years high throughput technologies have provided experimental tools to identify protein interactions in large scale, generating tremendous amount of protein interaction data  <cit> . on the other hand, however, computational approaches for protein interaction inference have presented a growing number of inexpensive methods to predict vast number of protein pairs on genome scale  <cit> . both experimental techniques and computational approaches are affected by high false positives and false negatives that tend to result in poor agreement among bench mark datasets  <cit> . on the experimental front, false positives mostly stem from the technology involved. nonetheless, some techniques have been already proposed to enhance the reliability of current high-throughput screening datasets  <cit> . on the computational front, most efforts have been focused on predicting more protein-protein interactions by means of various approaches identifying true positives that bring along numerous false positive and false negative predictions. reduction of false positive predictions in computational approaches has not been adequately investigated.

so far, several computational approaches have been proposed to predict protein interactions  <cit> . these approaches can be grouped into six categories based upon the hypotheses from which they originate. the first category comprises the methods that utilize genomics information to predict protein interactions. conventional phylogenetic profiles  <cit> , gene fusion  <cit> , gene neighbourhood  <cit> , and transgenic distance  <cit>  are as such. availability of whole genome sequences has enabled the genome scale homology search, resulting in the construction of protein profiles, discovery of fusion events, specifying gene orders, and identifying genetic distances in the above-mentioned genome-based methods. in second category are the methods that rely on statistical scoring functions such as mutual information  <cit> , jaccard coefficient  <cit> , and chance co-occurrence distribution  <cit>  to calculate the extent of similarity of protein phylogenetic profiles. these methods have been recently employed to enrich conventional genomics methods by using score functions instead of exact similarity of patterns or genetic localizations. the third group is domain-based protein interaction prediction methods. these methods postulate that conservation of sequence properties such as domains, motifs, and signatures over the course of evolution may contribute to the interaction of proteins. earlier studies focus on an association method  <cit>  which was improved by considering the number of signatures in each protein sequence  <cit> . the likelihood approach was also implemented to enhance the feasibility of domain-based approaches  <cit> . the fourth category consists of the methods in which structural similarities and prediction upon structural models is the underlying hypothesis. these methods range from the threading approach  <cit> , docking methods  <cit> , and the capri experiment  <cit>  to protein interaction prediction based on surface patch comparison  <cit>  and oligomeric protein structure networks  <cit> . the fifth category covers the methods which employ machine learning techniques to predict protein-protein interactions. these methods use different information to predict protein-protein interactions such as primary structures  <cit> , and conserved network motifs  <cit> . interaction mining was also used to train learning systems to recognize correlated patterns within protein interaction pairs  <cit> . support vector machines  have been used to construct supervised classifiers in order to identify interacting proteins  <cit> . the effect of the training dataset on the performance of svm prediction has been studied  <cit>  to enhance the efficiency of predictions. the sixth category includes the methods that use gene co-expression information to predict protein-protein interactions  <cit> . these methods predict interacting proteins through integration of micro array data in different biological conditions and construction of co-expression profiles for genes  <cit> .

false positive prediction in all computational methods and their limited overlap with experimental results are post-genomic challenges. computational ppi prediction approaches consider protein-protein interactions in the most general context and often refer to 'functionally interacting proteins', implying that the proteins cooperate to perform a given task without necessarily involving any physical contact. experimental ppi detection techniques, such as yeast two-hybrid and large-scale affinity purification with mass spectrometry, attempt to discover direct physical interactions between proteins. however, there is a limited overlap between sets of interacting proteins identified by functional and physical relationships  <cit> . given the incomplete coverage of experimental results, there is clearly the need to develop large-scale robust computational sets of interacting proteins validated by future experiments. furthermore, because of the lack of solid information on protein-protein interaction, the accuracy of different computational approaches remains uncertain. nevertheless, it is a common perception that if both experimental results and computational predictions agree on a link, the confidence level of that link would be high. therefore, one measure to evaluate the false positive content of computational predictions is the level of agreement with experimental findings. although high-throughput screening techniques are affected by false positives, validation of computational pairs by experimental results is widely acceptable.

to enhance the overlap between computational predictions and experimental results, we need to find a systematic way to remove false positives, resulting in an increased true positive fraction of every predicted ppi dataset. in order to achieve this goal a common ground upon which the predicted results can be evaluated is required. gene ontology  annotations may serve as the common ground, even though annotation is an ongoing process. gene ontology  is the database that contains controlled vocabularies to annotate molecular attributes for different model organisms. annotations are defined in three structured ontologies which allow the description of molecular function , biological process , and cellular component . each ontology is structured in child-parent hierarchies in which a 'child' may have many 'parents' and child terms are components of parent terms. thus, information provided by go must be useful in further assessment of predicted ppis and may be integrated with global filtering algorithms to reduce the number of false positives in ppi predicted datasets. currently, several attempts have been reported in constructing functional association predictors solely based on go information. in some studies, associations between proteins in a pair are assessed in terms of the similar go terms  <cit> , while other studies evaluate functional associations based on either information content  <cit>  or go structural hierarchy  <cit> . in a recent study, go annotations have been used to construct a ppi network for yeast by measuring similarity between two gene ontology terms with a relative specificity semantic relation  <cit> .

therefore, go can be utilized as a useful informative resource to either predict or further analyze the predicted ppi datasets. however, ontology annotation is an incomplete process and suffers from inconsistency within and between genomes. in some cases, two confirmed interacting proteins are assigned two different go annotations which are not equivalent in terms of information content. one protein is assigned a term that represents a broad type of activity, and its interacting partner is assigned a more specific term that represents a subtype of that activity. in other cases, some proteins have not even been assigned all three ontologies which make the interaction assessments more difficult without human intervention. thus, the molecular functions of go annotations of related proteins should be harmonized in relation to the information content and compared on a more general level. there are advantages and disadvantages associated with the harmonization of go terms. the advantage is that the predicted relationship between proteins in a pair can be detected systematically using some keywords and it is not required to be verified manually. the disadvantage is that the integration of go annotations and predicted ppis might not be able to reveal the specific functions of the interacting proteins. however, knowing the fact that ppi prediction techniques are merely capable of specifying the general category of relationship between two proteins, this disadvantage is not a great source of concern.

in this study a global framework to refine computationally predicted datasets is developed. first, two experimental ppi datasets with high confidence were prepared for two model organisms s. cerevisiae and c. elegans. assuming the experimentally confirmed pairs are true, the go annotations of these interacting proteins were utilized to extract keywords which represent general category functions of the proteins. then, a set of heuristic rules was established to be satisfied by the predicted interacting protein pairs based on extracted keywords and the fact that two proteins acting in the same cellular components are more likely to interact than those located in different components. next, four computational methods representing four out of six categories of prediction techniques, mentioned earlier in this section, were selected. using these methods, four predicted datasets were created for each organism of interest. the heuristic rules were applied to these predicted datasets. when a predicted pair of interacting proteins satisfied the rules it was considered a true positive, otherwise the pair was assumed false positive and removed from the dataset. the results show that the filtered datasets have higher true positive fractions than non-filtered datasets and the improvement is statistically significant.

RESULTS
using information deposited in the uniprot and go databases, the experimentally obtained protein pairs for yeast and worm were processed, resulting in  <dig> non-redundant go term information  and  <dig> non-redundant go term information , respectively. these pieces of term information were further clustered, resulting in  <dig> and  <dig> keywords for yeast and worm, respectively .

significant keywords
low frequency of appearance of some keywords in the training dataset indicates that all extracted keywords do not contribute equally to discriminate go annotations. as listed in table  <dig>  the frequency of appearance of each keyword was ranked in descending order. the eight top-ranking keywords were chosen for the following analyses, and the remaining keywords  were grouped and called "rk". in order to evaluate the significance of these top-ranking keywords, the sensitivity and specificity analysis was conducted. sensitivity  is the percentage of protein pairs that are recovered using a certain keyword or a group of keywords when they are applied back to the source . specificity  is the percentage of protein pairs recovered when keywords are applied to predicted datasets . the sensitivity of each keyword was calculated as:

 sn of a keyword=number of pairs represented by the keywordtotal number of pairs in the training dataset×100=1x∑i=1xni×100
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwgobgtcqqggaaicqwgvbwbcqwgmbgzcqqggaaicqwghbqycqqggaaicqwgrbwacqwglbqzcqwg5bqecqwg3bwdcqwgvbwbcqwgybgccqwgkbazcqgh9aqpdawcaaqaaiabd6gaujabdwha1jabd2gatjabdkgaijabdwgaljabdkhayjabbccagiabd+gavjabdagamjabbccagiabdchawjabdggahjabdmgapjabdkhayjabdohazjabbccagiabdkhayjabdwgaljabdchawjabdkhayjabdwgaljabdohazjabdwgaljabd6gaujabdsha0jabdwgaljabdsgakjabbccagiabdkgaijabdmha5jabbccagiabdsha0jabdigaojabdwgaljabbccagiabdugarjabdwgaljabdmha5jabdeha3jabd+gavjabdkhayjabdsgakbqaaiabdsha0jabd+gavjabdsha0jabdggahjabdygasjabbccagiabd6gaujabdwha1jabd2gatjabdkgaijabdwgaljabdkhayjabbccagiabd+gavjabdagamjabbccagiabdchawjabdggahjabdmgapjabdkhayjabdohazjabbccagiabdmgapjabd6gaujabbccagiabdsha0jabdigaojabdwgaljabbccagiabdsha0jabdkhayjabdggahjabdmgapjabd6gaujabdmgapjabd6gaujabdeganjabbccagiabdsgakjabdggahjabdsha0jabdggahjabdohazjabdwgaljabdsha0baacqghxdatcqaixaqmcqaiwaamcqaiwaamcqgh9aqpdawcaaqaaiabigdaxaqaaiabdiha4baadaaewbqaaiabd6gaunaabaaaleaacqwgpbqaaeqaaaqaaiabdmgapjabg2da9iabigdaxaqaaiabdiha4bqdcqghris5aogaey41aqraegymaejaegimaajaegimaadaaa@c7a0@ 

where x is the total number of pairs in the experimental dataset . if ni =  <dig>  it indicates that two proteins in pair i are represented by a keyword; and ni =  <dig>  otherwise. cumulative sensitivity of all keywords was obtained as:

 cumulative sn=1x∑i=1x∑j=1znij×100
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwg1bqdcqwgtbqbcqwg1bqdcqwgsbabcqwghbqycqwg0badcqwgpbqacqwg2bgdcqwglbqzcqqggaaicqwgtbwucqwgobgtcqgh9aqpdawcaaqaaiabigdaxaqaaiabdiha4baadaaewbqaamaaqahabagaemoba42aasbaasqaaiabdmgapjabdqgaqbqabaaabagaemoaaomaeyypa0jaegymaedabagaemoeaohaniabgghildaaleaacqwgpbqacqgh9aqpcqaixaqmaeaacqwg4baea0gaeyyeiuoakiabgena0kabigdaxiabicdawiabicdawaaa@5827@ 

where z is the number of keywords. if nij =  <dig>  it shows that two proteins in pair i are represented by the common keyword j; and nij =  <dig>  otherwise. cumulative sensitivity demonstrates the recovery power of all keywords collectively when they are applied to the source . specificity of a keyword and cumulative specificity of all keywords are similarly defined and calculated:

 sp of a keyword=number of pairs represented by the keywordtotal number of pairs in the test set×100=1y∑i=1yni×100
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwgqbaucqqggaaicqwgvbwbcqwgmbgzcqqggaaicqwghbqycqqggaaicqwgrbwacqwglbqzcqwg5bqecqwg3bwdcqwgvbwbcqwgybgccqwgkbazcqgh9aqpdawcaaqaaiabd6gaujabdwha1jabd2gatjabdkgaijabdwgaljabdkhayjabbccagiabd+gavjabdagamjabbccagiabdchawjabdggahjabdmgapjabdkhayjabdohazjabbccagiabdkhayjabdwgaljabdchawjabdkhayjabdwgaljabdohazjabdwgaljabd6gaujabdsha0jabdwgaljabdsgakjabbccagiabdkgaijabdmha5jabbccagiabdsha0jabdigaojabdwgaljabbccagiabdugarjabdwgaljabdmha5jabdeha3jabd+gavjabdkhayjabdsgakbqaaiabdsha0jabd+gavjabdsha0jabdggahjabdygasjabbccagiabd6gaujabdwha1jabd2gatjabdkgaijabdwgaljabdkhayjabbccagiabd+gavjabdagamjabbccagiabdchawjabdggahjabdmgapjabdkhayjabdohazjabbccagiabdmgapjabd6gaujabbccagiabdsha0jabdigaojabdwgaljabbccagiabdsha0jabdwgaljabdohazjabdsha0jabbccagiabdohazjabdwgaljabdsha0baacqghxdatcqaixaqmcqaiwaamcqaiwaamcqgh9aqpdawcaaqaaiabigdaxaqaaiabdmha5baadaaewbqaaiabd6gaunaabaaaleaacqwgpbqaaeqaaaqaaiabdmgapjabg2da9iabigdaxaqaaiabdmha5bqdcqghris5aogaey41aqraegymaejaegimaajaegimaadaaa@bcf4@ 

 cumulative sp=1y∑i=1y∑j=1znij×100
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwg1bqdcqwgtbqbcqwg1bqdcqwgsbabcqwghbqycqwg0badcqwgpbqacqwg2bgdcqwglbqzcqqggaaicqwgtbwucqwgqbaucqgh9aqpdawcaaqaaiabigdaxaqaaiabdmha5baadaaewbqaamaaqahabagaemoba42aasbaasqaaiabdmgapjabdqgaqbqabaaabagaemoaaomaeyypa0jaegymaedabagaemoeaohaniabgghildaaleaacqwgpbqacqgh9aqpcqaixaqmaeaacqwg5bqea0gaeyyeiuoakiabgena0kabigdaxiabicdawiabicdawaaa@582f@ 

where y is the total number of pairs in the predicted dataset . cumulative specificity translates into the recovery power of all keywords when they are applied to a predicted dataset .

in order to further examine the significance of the extracted top-ranking keywords from the training dataset, the cumulative specificities of the keywords applied to four predicted protein-protein interaction datasets were calculated. these four predicted datasets were obtained using computational methods including phylogenetic profiles , gene expression , maximum likelihood estimation , and chance co-occurrence distribution . the implementation of these methods is described in additional file  <dig>  as illustrated in figure  <dig>  the cumulative specificity of yeast varies from 25% in pp dataset to 69% in mle dataset. in all four predicted datasets specificity changes very slightly when it is extended from eight top-ranking keywords to all extracted keywords. similarly, in figure  <dig>  the worm dataset cumulative specificity ranges from 32% in the pp dataset to 64% in the mle dataset using the eight top-ranking keywords. the remaining keywords exert negligible changes to the cumulative specificities in all four datasets. therefore, these top-ranking eight keywords extracted from the experimental datasets of both organisms are capable of representing the common functions of interacting proteins either experimentally specified or computationally predicted.

although the eight top-ranking keywords significantly recover the experimental or predicted datasets, the cumulative sensitivity or specificity is not distributed equally as seen in figures  <dig>   <dig>   <dig>  among the keywords "binding"  is an exception with the sensitivity of  <dig> % in the yeast dataset, for instance, compared to  <dig> % for "ase activity" ,  <dig> % for "porter activity" , and so on. this drastic difference between the sensitivity or specificity of this particular keyword and that of other keywords stems from the fact that our experimental datasets are collections of protein interactions detected mainly by the two-hybrid technique. this high-throughput technique detects physical interactions among proteins in which binding of a protein to the active site of another protein is a crucial step. accordingly, most of these protein pairs are assigned the "binding" molecular function annotation in go database. on the other hand, the contribution of keywords such as "receptor activity"  in the cumulative sensitivity is  <dig> % which is not a remarkable contribution; however, it is significant when it is compared with  <dig> % increase in cumulative sensitivity by "remaining keywords"  which represents  <dig> keywords in the case of yeast.

it should be noted that the highest obtainable cumulative sensitivity, in yeast for example, is  <dig> % by means of all keywords and  <dig> % by means of eight top-ranking keywords. currently, it is impossible to obtain complete sensitivity , as some experimental pairs do not have consistent annotations. this inconsistency comes from the fact that there are deficiencies in either annotation or experimental techniques. in case of the worm dataset the inconsistency is worse. only 55% of worm genes are annotated and many annotations are not consistent. it is also notable that the go molecular function annotations can not be used directly as keywords. when the definitions of the go molecular functions were considered as keywords, the cumulative sensitivity of the training dataset was only  <dig> %, comparing to that of  <dig> % when the keyword extraction approach was implemented.

heuristic rules
protein interactions take place in either permanent or transient complexes formed in a cell, suggesting that proteins are required to exist in close proximity to interact physically  <cit> . hence, the concept of protein-protein interactions in cellular systems is based on the following two observations:  interacting proteins often perform similar general functions, assuming that two proteins functioning in the same general category are more likely to interact than two proteins involved in different functions:  co-localization may serve as an useful tool to predict protein interactions. physical interactions occur when two proteins are located in the same cellular component, either a permanent cellular location or a transient complex. motivated by the two observations, two heuristic rules were set to be satisfied by predicted interacting protein pairs. these rules are:

 two predicted proteins in the pair should match one of the eight trained function keywords.

 two predicted proteins in the pair should be in the same go cellular components.

as many computational protein interaction prediction techniques suffer from mass false positive predictions, satisfying the rules filters the predicted datasets and removes the false interactions to some extent.

based on the algorithm depicted in figure  <dig>  these two rules were applied to the four predicted ppi datasets for each of the studied organisms. the algorithm reads ppi pairs predicted by pp, ge, mle, and cc sequentially. it then examines if two proteins in the same pair possess the go annotations: molecular function and cellular component. if so, such a pair with annotations is checked with the proposed rules. satisfying rule i and rule ii, this protein pair is considered as an interacting one. finally, the filtered predicted dataset is compared with experimental dataset to assess the level of agreement with experimental results.

statistical analysis
in order to evaluate the improvement made by applying rules to the predicted ppi datasets, the signal-to-noise ratio   <cit>  was employed. snr is a measure of signal strength relative to background noise. in bioinformatics, snr is translated to the ratio of the capability of a computational method in creating protein pairs to pairing proteins on a random basis. therefore, we define snr as the ratio of the true positive fraction of a predicted dataset to the true positive fraction of a randomly selected dataset with the same sample size. true positive fraction of a dataset is the ratio of matched protein pairs with the experimental dataset to the total number of pairs in the same dataset:

 snr=predicted datasetrandom dataset
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwgobgtcqwgsbgucqgh9aqpdawcaaqaaiabcicaoiabd2gatjabdggahjabdsha0jabdogajjabdigaojabdwgaljabdsgakjabbccagiabdchawjabdggahjabdmgapjabdkhayjabdohazjabc+caviabdsha0jabd+gavjabdsha0jabdggahjabdygasjabbccagiabdchawjabdggahjabdmgapjabdkhayjabdohazjabcmcapmaabaaaleaacqwgwbaccqwgybgccqwglbqzcqwgkbazcqwgpbqacqwgjbwycqwg0badcqwglbqzcqwgkbazcqqggaaicqwgkbazcqwghbqycqwg0badcqwghbqycqwgzbwccqwglbqzcqwg0badaeqaaagcbagaeiikagiaemyba0maemyyaemaemidaqnaem4yammaemiaagmaemyzaumaemizaqmaeeiiaaiaemicaanaemyyaemaemyaakmaemocainaem4camnaei4la8iaemidaqnaem4ba8maemidaqnaemyyaemaemibawmaeeiiaaiaemicaanaemyyaemaemyaakmaemocainaem4camnaeiykakyaasbaasqaaiabdkhayjabdggahjabd6gaujabdsgakjabd+gavjabd2gatjabbccagiabdsgakjabdggahjabdsha0jabdggahjabdohazjabdwgaljabdsha0bqabaaaaaaa@9f72@ 

snr was calculated for all four predicted datasets for each of yeast and worm in the following two circumstances: before applying the rules to a dataset , and after applying the rules to a dataset . the effect of the rules on the reduction of false positive predictions was measured by the strength :

 s=snrfiltered datasetsnrraw dataset
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqgh9aqpdawcaaqaaiabdofatjabd6eaojabdkfasnaabaaaleaacqwggbgrcqwgpbqacqwgsbabcqwg0badcqwglbqzcqwgybgccqwglbqzcqwgkbazcqqggaaicqwgebarcqwghbqycqwg0badcqwghbqycqwgzbwccqwglbqzcqwg0badaeqaaagcbagaem4uamlaemota4kaemouai1aasbaasqaaiabdkfasjabdggahjabdeha3jabbccagiabdseaejabdggahjabdsha0jabdggahjabdohazjabdwgaljabdsha0bqabaaaaaaa@590e@ 

as seen in table  <dig>  snr values for all filtered data were larger than those for corresponding raw data, indicating that the proposed algorithm can reduce false positive prediction of ppi pairs. depending on the ppi-predicting method employed, the s value varies from  <dig>  to  <dig>  for the yeast datasets, and  <dig>  to  <dig>  for the worm datasets, implying that the proposed algorithm exerts a stronger influence on improving ppi pairs predicted by the pp method than those predicted by the mle method. in other words, the mle approach predicts more robust protein pairs than other three methods used in this study.

*snr was calculated based on equation . the size of the random dataset was the same as that of protein pairs predicted by each respective method and their true positive fractions were obtained using the mean of  <dig> trials.

given the fact that protein interactions are required for cell functioning and permanent or transient interactions between proteins are regulated under biological circumstances, this statistical analysis can well distinguish between the predicted/filtered datasets and random selection of interaction. the predicted and filtered set of interactions in a dataset is significant when the true positive fraction of the dataset is greater than that in a randomly selected dataset. in other words, the selection of interacting proteins is significant when the strength value is greater than  <dig> 

the algorithm proposed here to reduce the number of false positive predicted protein pairs could also be extended to evaluate and compare the effectiveness of ppi prediction among different computational approaches. the algorithm is a post-prediction processing step that is applied to the resulted predicted dataset when a computational method is implemented. thus, it can be attached to any computational approach for further analysis of predicted results. however, it should be noted that ontology is an ongoing process. with more genes assigned with go terms, the proposed filtering algorithm is a promising approach to reduce the number of false positive interactions and thus to enhance the accuracy of ppi prediction.

uniprot/go limitations and intrinsic deviation of the analysis
uniprot and go employ different strategies to annotate proteins. in cases where experimental information is not available, sequence homology is the strategy that is used to assign biochemical information to proteins. thus, there is a concern that protein pairs detected by the proposed algorithm as true positives may also be inferred by homology which consequently demonstrates low accuracy of filtered protein pairs. we compared our filtered datasets with interacting proteins reported in kog database provided by ncbi. this database includes orthologous and paralogous proteins of eukaryotic species. each group is associated with a conserved and specific function. our examination shows that, on average, only  <dig> % of the protein pairs that satisfies the rules can be predicted through homology. refer to additional file  <dig> for more information.

annotation is an ongoing process and there are many proteins: i) to be annotated, ii) erroneously annotated, iii) annotated but do not comply with experimental findings, iv) with unidentified locations and ubiquitous status. these proteins and their pair-wise interactions with other proteins contribute to the intrinsic deviation of the proposed approach to filtering false positive predictions. to confine the bias caused by the above mentioned reasons and decrease the deviation of the resulted filtered datasets, the rules have been applied solely to those protein pairs whose go annotations are available. furthermore, protein pairs with go annotations suffer from inconsistency among annotations. extracted functional keywords address this deficiency and can recover proteins pairs whose general functions are similar, even though their go annotations are not in the same level of information content. nevertheless, the deviation resulted from this inconsistency can be well represented by means of sensitivity and specificity. for example, in yeast high confidence experimental dataset , there are  <dig> protein pairs of which  <dig> protein pairs  contain go annotation. this figure indicates that the coverage of go annotations for well-studied organisms is satisfactory. of  <dig> protein pairs with annotations,  <dig> pairs contain similar function annotations accounting for  <dig> % which is equal to the sensitivity of the extracted keywords.

the intrinsic deviation partially depends on the precision of annotation process. in fact, annotation process has shifted from manual annotation to automated annotation due to growing influx of protein information in the past few years and time-consuming process of manual curation. shifting from manual annotation to automated procedures decreased the accuracy of annotation process. however, with the aid of powerful text-mining tools the accuracy of annotation is now satisfactory. based on an investigation in  <dig>  incellico inc. reported that the accuracy of go annotation is 95%  <cit> . goa is a project aiming at providing high quality go annotation to proteins in uniprot knowledgebase  <cit> . camon et al.  <cit>  evaluated the go annotation retrieval of goa project and reported 91% precision. recently, couto et al.  <cit>  presented a text-mining technique with 93% precision in annotation.

CONCLUSIONS
gene ontology annotation was used as a common ground to evaluate protein pairs predicted by four different ppi-predicting methods. molecular function annotations in the gene ontology database were used to extract discriminating keywords, upon which heuristic rules were set. the rules were incorporated into an algorithm by which predicted datasets were filtered and false positive predictions were partially removed from the datasets. when only eight top-ranking keywords were chosen, over 99% of molecular function could be recovered as indicated by the cumulative sensitivity for both experimentally obtained and computationally predicted protein pairs. the effectiveness of the proposed algorithm to filter false positive predicted protein pairs varies from one method to another. the proposed algorithm is unbiased and could be implemented on all computational methods to increase the accuracy of ppi prediction. as more genes are assigned with go annotations, the proposed filtering algorithm will become even more effective.

