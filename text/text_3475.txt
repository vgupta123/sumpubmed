BACKGROUND
high throughput data analysis is a crucial step in research endeavours involving gene expression, protein classification, and flow cytometry. a classical approach for analysing biological data is to first group individual data points based on some similarity criterion, a process known as clustering, and then compare the outcome of clustering with the biological hypotheses. an example of this approach is in the analysis of flow cytometry data where populations of cells that express specific intracellular or surface proteins are identified. flow cytometry is a technique for measuring physical, chemical and biological characteristics of individual microscopic particles such as cells and chromosomes. it has many applications in molecular and cell biology for both clinical diagnosis and research purposes  <cit> . in cytometers, cells are individually passed through a laser beam and the scattered light is captured to measure up to  <dig> characteristic of each cell  <cit> . as thousands of cells can be analyzed per second, cytometers can generate large-sized datasets. recently, sophisticated methods have been developed for automatic analysis of flow cytometry data  <cit> . the proposed clustering techniques include: mixture modeling approach  <cit> , model-based cluster analysis  <cit> , feature-guided clustering  <cit> , density-based clustering  <cit> , combining the curvature information with density information  <cit> , and image processing  <cit> . the automatic techniques are useful in clinical and research applications such as: application of high-content flow cytometric screening  to the problem of cellular signature definition for acute graft-versus-host-disease  <cit> , vaccine trials  <cit> , visualizing data in stem cell research  <cit> , and immunophenotypic characterization of b-cell chronic lymphoproliferative disorders   <cit> .

problem statement
automated identification of flow cytometry cell populations is complicated by overlapping and adjacent populations, especially when low and high density populations are close to each other. analysing such data requires clustering methods that can separate these populations. non-parametric methods include density clustering  <cit> , real-time adaptive clustering  <cit> , and kohonen self-organizing maps  <cit> . the application of these methods is restricted since the first two are subjective due to a dependency on user-defined thresholds, and the latter one requires the number of clusters to be determined by the user. while accurately determining the number of clusters may not be a key issue in some clinical cytometry analysis  <cit> , this requirement can be a critical obstacle for other analyses such as identifying novel populations for biomarker discovery  <cit> .

model-based clustering techniques such as flame  <cit> , flowclust  <cit>  and flowmerge  <cit>  have been developed to improve results. flowmerge uses the flowclust framework to identify clusters based on a t-mixture model methodology, followed by a merging step to account for overestimation of the number of clusters by the bayesian information criterion. flame uses a skew t-mixture model, which is in theory more robust to skew, because unlike t-distributions, skew t-distributions can be asymmetric  <cit> . however, the running time of this algorithm increases with the fourth degree of the number of dimensions. in practice this tends to make the algorithm impractical for more than five dimensions, while flow cytometry data can have up to  <dig> dimensions. overall, the major drawback of these parametric methods is the requirement for assumptions on either the size of the clusters or the cluster distributions and shapes  <cit> , which could result in incorrect identification of biologically interesting populations. in addition, one challenge for existing approaches is the identification of rare populations. spectral clustering is a non-parametric clustering method that avoids the problems of estimating probability distribution functions by using a heuristic based on graphs  <cit> . it has proved useful in many pattern recognition areas  <cit> . not only does it not require a priori assumptions on the size, shape or distribution of clusters, but it has features that make it particularly well-suited to clustering biological data:

• it is not sensitive to outliers, noise or shape of clusters;

• it is adjustable so that biological knowledge can be utilized to adapt it for a specific problem or dataset;

• there is mathematical evidence to guarantee its proper performance  <cit> .

two main challenges in applying spectral clustering algorithm on large data sets are the computationally expensive steps of constructing the normalized matrix and computing its eigenspace. for instance, for high throughput biological data containing one million data points , it requires computing eigenspace of a million by million matrix, which is infeasible in terms of memory and time. although there are some approximation methods for speeding up this computation  <cit> , these could produce undesired errors in the final results. the problem of applying this algorithm on large datasets has been studied in  <cit>  using nyström's method. they suggest a strategy of sampling data uniformly, clustering the sampled points and extrapolating this solution to the full set of points. however, sampling data uniformly can miss low-density populations entirely when the density of adjacent populations varies considerably, a situation that often arises for biologically interesting populations in flow cytometry data. appendix  <dig> includes an experiment to explain the effect of uniform sampling in such cases.

data reduction schemes have been developed to reduce the complexity of the flow cytometry data while preserving the information  <cit> . these methods reduce the dimensionality but not the size of the dataset, the latter being the more important bottleneck for spectral clustering.

our approach
we hypothesized that spectral clustering could significantly improve high throughput biological data analysis. however, serious empirical barriers are encountered when applying this method to large data sets. specifically, for n data points, the running time is o, requiring o units of memory. for instance, it would take  <dig> years and  <dig> terabytes of memory to analyze a typical flow cytometry sample with  <dig>  events. we developed a novel solution for this problem through our non-uniform information preserving sampling. our heuristic approach is specific to cytometry applications and made it possible for the first time, to apply spectral clustering method on flow cytometry data.

RESULTS
in this paper, we distinguish between the terms biological populations, clusters and components as follows. a population is a set of cells with similar functionality or molecular content. by a cluster, we mean a set of data points that are grouped together by spectral clustering algorithm. we incorporate a post-processing stage on spectral clusters to find the connected components intended to estimate the biological populations.

algorithm
spectral clustering
the first step is to build a graph. the vertices represent the n data points , and the edges between the vertices are weighted based on some similarity criterion. the adjacency matrix of the graph is then normalized using the following formula:

  aƒ=d−12ad− <dig>  

where a is the adjacency matrix of the graph and d is a diagonal matrix where the  entry is equal to the sum of the weights on the edges that are adjacent to vertex i.

the next step is to compute eigenspace of the normalized matrix. that is, all vectors vi and values λi satisfying the following equation are computed:

  aƒv→i=λiv→. 

in order to find k clusters, an n by k matrix is built using the k eigenvectors with highest eigenvalues. the rows of this matrix are normalized and finally k-means is used to cluster the rows.

however, the above method cannot be directly applied to flow cytometry data due to large number of data points  per sample. our solution for this problem is a data reduction scheme developed specifically for this purpose. this reduces the number of vertices significantly, but in a way such that biological information can be preserved by updating the weights on the edges.

data reduction scheme
while data size can be reduced by known sampling methods  <cit> , a very delicate method should be used to preserve biologically important information. from a high-level perspective, our data reduction scheme  consists of two major steps; first we sample the data in a representative manner to reduce the number of vertices of the graph . sample points cover the whole data space uniformly , a property that aids in the identification of both low density and rare populations. in the second step as described below, we define a similarity matrix that assigns weights to the edges between the sampled data points. higher weights are assigned to the edges between nodes in dense regions so that information about the density is preserved .

faithful sampling algorithm

 <dig>  label all data points as unregistered.

 <dig>  repeat

 <dig>     pick a random unregistered point p  {the representative of a new community}

 <dig>     label all unregistered data points within distance h from p as registering

 <dig>     put registering points in a set called community p

 <dig>     relabel registering points as registered

 <dig>  until all points are registered

 <dig>  return all communities

after faithful sampling is completed, the set of all representatives can be regarded as a sample from the data. reducing the value of parameter h will increase the number of sample points, resulting in increased computation time and required memory. conversely, increasing h will result in fewer sample points that may lead to too low a resolution. in such a case, the computed spectral clusters may fail to estimate the real cell populations appropriately. in our implementation, we use an iterative procedure  to adjust h automatically such that the number of representatives will be in range 1500- <dig>  as a result of this adjustment, the following two objectives are achieved. first, computing the eigenspace of a graph with a number of points in this range is feasible,  second, the communities are "small"  and the resulting resolution is high enough such that no biologically interesting information is lost.

in the sampling stage, there is no preference in picking up the next data point, therefore, the final distribution of the sampled points will be uniform in the "effective" space. that is, the representatives are distributed almost uniformly in the space where data points were present . as a consequence, by repeating sampling procedure the final results of clustering will not change significantly. this observation is confirmed quantitatively in appendix  <dig>  by considering just the representatives, density information is effectively ignored so working directly with these representatives results in improper outcome. on the other hand, some biological information from the original data is preserved by the above algorithm that can be retrieved to guide the clustering algorithm. more precisely, for each sample point, we know the list of all points in its neighbourhood . in the next stage, we use this information to define the similarity between two sample points to modify the behaviour of spectral clustering. in this sense, our sampling scheme is faithful, meaning that the valuable biological information from the original data points is preserved even after sampling. we call the overall procedure, which consists of faithful sampling, computing modified similarity matrix and spectral clustering, samspectral clustering.

similarity matrix
in this study, we use the following heat kernel formula  <cit>  to compute the similarity between two vertices i and j:

  si,j=e−d22σ <dig>  

where d  is the euclidean distance between them. σ is a scaling parameter that controls how rapidly similarity between pi and pj falls off with increasing distance. we define the similarity between two communities c and c' as the sum of all pairwise similarities between all members of the first community and all members of the second community. that is,

  sc,c′=∑i∈c∑j∈c′si,j, 

where i and j are members of c and c' respectively.

we do not normalize the similarity by dividing the above sum by the size of communities because we would lose valuable biological information that is supposed to be preserved. in short, the size of the communities determines the local density of the data points, which is biologically of great importance.

the above definition is motivated by the following intuition from potential theory that explains how biological information is preserved after faithful sampling by assigning similarities in this way. the eigenvectors of a graph are interpreted as potential functions on the electric network modeled by the graph  <cit> . assuming the radius of each community is small enough, the potential values of the community members are almost the same. on the other hand, in potential theory, the equivalent conductance between a group of nodes {vi} with equal potential values and another group of nodes {wj} that also have equal potential values is computed by the summation of pairwise conductance between nodes vi and wj for all i and j. since in our model, the similarity between two vertices is equivalent to the conductance between the corresponding electrical nodes, it is reasonable to sum up pairwise similarities to estimate the equivalent similarity between communities .

number of clusters
the number of clusters must be determined before running the spectral clustering algorithm  <cit> . to find this number automatically and in an efficient manner, we propose a method that is motivated by the following observation from spectral graph theory:

theorem  <cit> : the number of connected partitions of a graph is equal to the number of eigenvectors with eigenvalue  <dig> 

we observed that typically for flow cytometry data, if σ is adjusted properly as explained in the samspectral package vignette  <cit> , the first few eigenvalues are close to one and at a point we call knee point they start to decrease almost linearly. we compute the knee point by applying linear regression to the eigenvalues curve  and use the horizontal coordinate of this point as a rough estimate for the number of spectral clusters.

combining clusters
applying spectral clustering on sampled data results in graph partitioning, which is almost optimum in the sense of having minimum normalized cut  <cit> . however, in some cases, a biologically interesting population might be split into two or more smaller clusters by samspectral. we addressed this issue by adding a post-processing stage wherein the partitions of a population are combined based on known properties of flow cytometry cell populations. typically, biologically meaningful cell populations in flow cytometry data have their highest density at the centre, and their density decreases towards the border of the population. since higher density regions indicate communities with relatively more members, the conductance between them is expected to be relatively higher . thus, similarity between communities is higher in regions with higher densities and the highest similarity is expected to be at the centre of the biological population. this observation forms the basis for our criterion for combining clusters. specifically, similarity between communities determines the weight on graph edges and we define the maximum weight of the edges of a spectral cluster as within similarity of that cluster. also, the maximum weight of the edges between two different spectral clusters is defined as between similarity. if the ratio of between similarity to within similarity is greater than a predefined threshold , we conclude that these clusters are partitions of a single population, and should combine them to form a component. we repeat this stage until no two components can be combined. the final components computed in this way are called connected components of the data, and estimate the real biological populations. with smaller separation factors, spectral clusters tend to combine more often.

overview of samspectral algorithm
in summary, the stages of our algorithm are as follows, assuming the data contains n points in a d dimensional space of volume v, and the parameters m , σ , and separation factor are set properly.

 <dig>  sampling:

 let h=12vmd.

 repeat:

• run faithful  sampling algorithm. suppose m' communities are built.

• update: h=h.

until m2≤m′≤m.

 <dig>  compute the similarities between communities by adding pairwise similarities si, j defined by 3:

  sc,c′=∑i∈c∑j∈c′si,j. 

 <dig>  build a graph wherein each community is a vertex. put edges between all pairs of vertices and weight them by similarity between corresponding communities.

 <dig>  analyze the spectrum of the above graph to find the clusters;

 normalize the adjacency matrix of the graph according to equation  <dig> 

 compute the eigenspace of the graph and set k, number of clusters, according to the knee point of eigenvalues curve.

 run classical spectral clustering algorithm to find k clusters.

 <dig>  combine the clusters to find connected components:

 initiate the list of components equal to the list of spectral clusters.

 repeat:

• for any pairs of components ci, cj , set:

  separation_ratio:=between_simi1aritywithin_simi1arity 

• for each component ci, compute:

 m:=maxj≠i) 

• if for all i, m ≤ separation_factor, break.

• pick an i such that m > separation_factor and let:

 j=argmaxj≠i) 

• combine ci and cj , then update list of components.

until number of components >  <dig> 

in the sampling stage, we start with the initial value h=12vmd for the neighbourhood. m is a parameter that controls m', the final number of sample points such that m2≤m′≤m. since in our implementation, we use manhattan metric to measure the distance between points, the volume of a community can be estimated by σxx1= <dig> , σyy1= <dig> , σxy1=σyx1= <dig>  therefore if the the data points were distributed uniformly in the space, we would get m sample points in the first run. however, in practice, we need to repeat the procedure after updating the neighbourhood value. according to our experiments, a few iterations are enough to fulfil the terminating condition m2≤m′≤m. as the running time of this part of samspectral is o, which is negligible compared to eigenspace computation time, we did not attempt to optimize the sampling loop.

modified markov clustering algorithm 
step  <dig> in the above algorithm is the classic spectral clustering method. this step potentially could be substituted by any clustering algorithm for weighted graphs. to verify that our approach is extensible in this sense, we substituted classic spectral clustering with markov clustering   <cit>  keeping the rest of our algorithm, sampling and post-processing steps, unchanged.

mcl finds the partitions of a graph by simulating flow on the nodes. simulation is done by iteratively multiplying two type of matrices that correspond to expansion and inflation operations  <cit> . because flow and eigenspace of a graph are strongly related <dig>  the outcome of this approach tends to be similar to spectral clustering through computing eigenspace.

testing
we implemented our algorithm with r, and applied it on four different datasets. we were able to identify some types of biologically interesting populations that were previously known to be hard to distinguish, including:

 <dig>  overlapping populations .

 <dig>  subpopulations of a major population .

 <dig>  non-elliptical shaped populations .

 <dig>  low density populations close to dense ones .

 <dig>  rare populations comprising less than 2% of all data points .

here, we demonstrate the capabilities of samspectral in identifying biological populations in these cases and compare our results with two state of the art methods for clustering flow cytometry data, flowmerge  and flame , respectively obtained through bioconductor and genepattern.

overlapping populations
traditionally, identifying cell populations in flow cytometry data is accomplished by visualizing the multidimensional data as a series of bivariate plots, and separating interesting sections manually, in a process termed gating. gating becomes challenging for high dimensional data since when the data is mapped to two dimensions, some clusters may overlap, resulting in the mixing of different populations. consequently, even a trained operator cannot identify overlapping populations properly in all cases. however, our algorithm prevents this undesired error by considering all data dimensions together . model based multidimensional techniques also perform generally well in this regard.

subpopulations of a population
non-elliptical shaped populations
while most model based techniques have a priori assumptions on the shape of populations that resulted in mixing or splitting populations, our method worked relatively well on the samples with arbitrary shape populations. in figure  <dig>  the pi positive population  was clearly identified despite its non-elliptical shape. flowmerge could also distinguish this population, but it incorrectly split the pi negative population into two parts. flame did not correctly distinguish the two populations. figure 6a-c shows the output of the three algorithms on a four dimensional sample from gvhd dataset. while the red population has a complex shape, it could be identified with high accuracy by samspectral. while flame produced a satisfactory result, flowmerge mixed this population with the one below it.

low density populations close to dense populations
rare populations
identifying rare populations has many significant applications in flow cytometry experiments including distinguishing cancer stem cells, hematopoietic stem cell transplantation, detection of fetal cells in maternal blood, detection of leukocytes in leukocyte-depleted platelet products, detection of injected cells for biotherapy and malaria diagnosis  <cit> .

samspectral could distinguish this population in  <dig>  samples including all the ones that were identified by flame and flowmerge. in the  <dig>  samples that samspectral failed, the rare population of interest contained less than  <dig> % of all data points.

to measure the accuracy of samspectral, we define sensitivity and specificity as follows. for each sample, we call a cell positive if it belongs to the rare population of interest, and it is negative otherwise. sensitivity is defined to be the number of truly identified rare cells divided by the total number of rare cells. accordingly, specificity is the number of cells identified as negative divided by the total number of truly negative cell. the  <dig>  cases where samspectral correctly identified the rare population, had a  <dig>  mean sensitivity with a  <dig>  standard deviation. the median sensitivity was . <dig>  specificity was  <dig> except for one sample. if we consider the samples with a rare population bigger than  <dig> % of the total data, we obtained median =  <dig>  mean =  <dig>  and standard deviation of  <dig>  for sensitivity. a detailed report of the results of this experiment is provided as a table in additional file  <dig> 

samspectral with mcl
discussion
although spectral clustering algorithm is a powerful technique, it can not be directly applied to large datasets as it is computationally expensive both in time and memory. in this study, we developed a sampling method and combined it with spectral clustering by modifying the similarity matrix based on potential theory. as a result, for the first time, analysing flow cytometry data using spectral methods becomes possible and practical. we applied samspectral to four different flow cytometry datasets to demonstrate its applicability on a broad spectrum of flow cytometry data, and compared its performance to two state of the art model-based clustering methods optimized for flow cytometry data.

detecting rare populations is a challenging problem and in spite of its significant applications in medical and biological research, little progress has been achieved in automatic identification of such populations. our data reduction scheme is delicate enough not to miss rare populations comprising between  <dig> % to 2% of the total data. samspectral can identify populations of relative size in this range with acceptable accuracy.

since our method, samspectral, is a multidimensional clustering approach, it can identify overlapping populations that are generally hard to identify by manual gating that uses sequential two dimensional visualizations of the data. samspectral is the first method that has demonstrated the ability to correctly identify subpopulations of major flow cytometry cell populations.

an important challenge in analysing flow cytometry data is in clustering data files that contain populations that significantly differ in density. model-based techniques can produce errors in identifying a low density population close to denser populations because they typically make assumptions on the density of clusters  <cit> . our experiments demonstrated that samspectral can properly tackle this problem. besides the practical observations, this capability is justified by the following observation. spectral methodology clusters the graph such that the normal cut is "almost" optimum  <cit> . now, assume that it can distinguish between two clusters when their densities are comparable. then, if the size of the smaller cluster is reduced without change in its shape or distribution, the normal cut between them remains similar because the number of vertices and edges reduces almost proportionally to each other. therefore, the clusters remain distinguishable. this explains why the overall performance of samspectral is independent of cluster densities as long as their shapes are preserved.

since parametric methods such as flame and flowmerge make a priori assumptions on the distribution or shape of the clusters  <cit> , they may fail in identifying populations with arbitrary shapes. although flowmerge attempts to solve this issue by finding more clusters than needed and then merging them together, it still does not produce satisfactory results when the shape of the cluster is complex. samspectral has the capability of identifying arbitrary shape clusters since it is a non-parametric approach that makes no assumptions on the shape and distribution of clusters, and clusters data based only on similarity between data points. compared to other non-parametric methods, our algorithm has the advantages of automatically identifying the number of clusters and having low sensitivity to the predefined thresholds. therefore, users can adjust the parameters only once by running samspectral on one or two random samples from a flow cytometry data set. then, the algorithm can be run on the rest of data set without changing the parameters.

not only does our sampling scheme increase the speed of spectral clustering without losing important biological information, but the resulting algorithm is faster than other methods considered in this study. more precisely, the running time of samspectral is o + o where o is the running time for building m communities from n points in d dimension and o is the running time for computing the eigenspace. after this step, the k-means clustering runs very fast in time o to find k clusters using eigenvectors by t iterations. in comparison, the time complexity of the original mcl method is o with no guarantee on upper bound for number of iterations r, other than n. practically, for our model of flow cytometry data where all pairs of data points are connected, we could not run mcl before applying our modification to it. moreover, samspectral running time is significantly less than model-based techniques. the running time of flowmerge is o and flame runs in time o where l is the number of times it runs to find the optimal number of clusters. in practice, we can keep m as small as 1500- <dig> without loosing important biological information, and consequently samspectral ran at least 5- <dig> times faster than flowmerge and flame on the studied datasets. furthermore, the time efficiency of our algorithm is more noticeable for higher dimensional data such as the one provided as additional file  <dig>  this sample contains  <dig>  events in  <dig> dimensions and samspectral can analyze it in less than  <dig> minutes by a  <dig>  ghz processor.

CONCLUSIONS
faithful sampling is based on potential theory. it reduces the size of input for spectral clustering algorithms and consequently they can now be efficiently applied on flow cytometry data in spite of its large size. practically, our approach demonstrated significant advantages in proper identification of populations with non-elliptical shapes, low density populations close to dense ones, minor subpopulations of a major population, rare populations, and overlapping populations. no state of the art method can solve the challenges in identifying populations with the above properties simultaneously. moreover, applying samspectral to other biological data such as microarrays and protein databases may result in significant improvements in gene expression and protein classification.

besides, our faithful sampling algorithm can have interesting applications by itself. for instance, it can be used appropriately to reduce the size of input for other clustering algorithms that are based on spectral graph theory such as markov clustering algorithm , electrical circuit based clustering, and agent based graph clustering  <cit> . we have shown the extendibility of our approach in this sense by substituting classic spectral clustering with mcl, a method that has many applications in bioinformatics.

other directions for future work include applying other schemes for estimating similarities between communities, combining clusters based on other combinatorial algorithms or biological criteria, and repeating the algorithm several times to obtain a more stable outcome.

