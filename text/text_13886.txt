BACKGROUND
structural variations , like single nucleotide polymorphisms , are a ubiquitous feature of genomic sequences and are major contributors to human genetic diversity and disease . with the advent of next-generation sequencing  technologies providing vast throughput for individual resequencing, a number of new algorithms have been developed for various sv types, including copy number variations  , and large deletion events  <cit> . these algorithms take advantage of various signals provided by ngs mapping algorithms, primarily read-depth , and read-pair  mapping positions. however, the computational identification of mobile element insertions  with ngs data is less well established because mobile elements  are highly repetitive dna sequences that are difficult to align against a reference genome with commonly used mapping strategies.

the most recent estimates indicate that more than half of the human genome is comprised of mes  <cit> . based on their propagation mechanisms, mes can be divided into two classes. class i elements encompass retrotransposons that move within a genome through a two stage copy process utilzing an rna intermediate. in contrast, dna transposons rely for their mobilization on a ‘cut and paste’ mechanism and are considered class ii elements . while dna transposons are thought to have largely ceased activity in primates about  <dig> million years ago  <cit> , retrotransposons have continued to propagate throughout primate evolution including the lineage leading to humans  <cit> .

retrotransposons represent the most successful mes in primates and are major drivers of genome expansion in primates. they can be further subdivided based on the presence/absence of long terminal repeats . in humans, the currently propagating non-ltr elements include the autonomous long interspersed element  <dig> , and the non-autonomous alu and sva elements  <cit> . while l <dig> and alu elements have been active throughout primate evolution, sva elements are hominid-specific  <cit> . endogenous retroviruses  belong to the family of ltr elements and have played a minor role in recent human evolution. in contrast, non-ltr elements have continued to propagate in the human lineage since the divergence from the lineage leading to chimpanzee. in fact, there is evidence for a recent increase in non-ltr expansion in the human lineage compared to chimpanzee  <cit> . altogether, me mobilization rates varied considerably throughout primate evolution with episodes of lower and higher expansion  <cit> . compared to a peak in alu and l <dig> expansion in anthropoid primates about 35– <dig> million years ago  <cit> , the current insertion/duplication rate of these elements is substantially reduced. however, many genetic disorders, such as crohn’s disease  <cit> , hemophilia  <cit>  and some cancers  <cit> , have been reported to be associated with their transposition activities.

to address effective detection of mei events we developed an mei detection pipeline around our spanner sv discovery tool , and deployed it on the pilot data of the  <dig> genomes project  <cit> . using this pipeline we compiled the most comprehensive catalog of mei events in the human genome to date  <cit> . although an effective sv detector used extensively in the 1000gp  <cit> , spanner only uses rp signal, limiting the precision of breakpoint resolution, detection sensitivity, as well as the genotype accuracy that can be achieved. also, although the pipeline that was built around spanner was able to utilize the sr signal, its split alignment algorithm is only compatible with reads collected using the now defunct  <dig> sequencing technology. this issue significantly restricts its detection capability to new sequencing data.

more recently, three ngs-based mei detectors, retroseq  <cit> , tea  <cit>  and variationhunter  <cit> , have been published, each with specific limitations. for example, tea and variationhunter do not report sample genotypes, limiting their use for single-sample detection pipelines e.g. in personal genome sequencing projects; or genotype data likelihoods that are essential for phasing structural variants together with snps and short indels. also, none of these detectors efficiently integrate the sr and rp signals: variationhunter detects meis using rp signal alone; retroseq and tea only trigger sr analysis when rp signal suggests a potential mei, and therefore miss events for which only sr evidence is available from the reads. because of the steady increase in the read lengths generated by today’s sequencing technologies, there is a significant increase in the confidence of alignments spanning sv event breakpoints. therefore, it is reasonable to expect that using both sr and rp signal on an equal footing, as primary observations for “nucleating” sv event calls, will lead to more sensitive detection than rp signal alone, or rp signal in combination with a secondary sr search. as a more practical point, the tea and variationhunter programs produce reports in non-standard formats, rather than the well established standard variant call format   <cit> , an issue for data communication and downstream analysis. finally, all the above tools focus on the detection of non-ltr events, such as alu, l <dig> and sva events, and they do not address the detection of ltr elements in the human genome.

RESULTS
here we report a fast and convenient mei detection toolbox, tangram, which effectively integrates signals generated by both rp and sr mapping. what sets our approach apart from existing methods is the “global” use of sr mapping: we perform an sr mapping step for all orphaned or substantially soft-clipped reads before the detection begins, and therefore both rp and sr mappings are available at the outset, and can nucleate sv event calls. we target both non-ltr and ltr me types. the global use of sr mapping substantially improves the accuracy of identifying sv event boundaries  and our method produces sample genotypes as well as genotype likelihoods. unlike other sv detection tools, tangram is able to simultaneously process multiple sequence alignment   <cit>  files to call mei events on population-scale data, and can deal with multiple fragment length libraries and a mixture of read lengths within a single detection step. tangram is memory and central-processing-unit  efficient as analysis is carried out locally, i.e. event detection in any given region only requires reading the alignments within that region. to our knowledge, there are currently no other detectors that can provide such a comprehensive set of features required for the full characterization of meis within a single sample, or a large collection of samples.

performance evaluation on simulated datasets
we evaluated the detection and genotyping performance of tangram with a series of in silico experiments involving the insertion of  <dig>  full-length aluy and  <dig>  5′ truncated l <dig> elements into the sequence of human chromosome  <dig>  and generated simulated paired-end sequencing reads of various lengths with realistic base error properties . after aligning these reads to the human reference genome sequence using our mosaik read mapping program  <cit> , we used tangram to detect mei events and to generate sample genotype calls . for comparison, we also ran the retroseq program  on the same dataset , and compared detection sensitivity and genotyping accuracy for various read lengths and levels of sequence coverage, considering both heterozygous and homozygous events, i.e. cases where the mei event is present in one or both chromosome copies within the cell. tea and variationhunter do not report sample genotypes, and therefore were not used in the comparisons.table  <dig> 
mei detection sensitivity for alu elements


 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
results are shown for the tangram and retroseq programs applied to simulated data . simulated reads were generated under different ploidy values , read length  and read coverage . columns “sen ” and “sen ” indicate the sensitivity of the rp and sr methods respectively. the two columns “sen ” and “sen ” indicate the sensitivity of the rp and sr signal in isolation respectively. “sen ” indicates the overall sensitivity of tangram when calling mei with both rp and sr modules. the best result in each row is indicated in boldface text.
genotype accuracy results of mei detection using tangram and retroseq on simulated data for alus




as table  <dig> shows for alu detection, tangram’s sensitivity exceeds 97% both for heterozygous and homozygous events in 10x sequence coverage or greater. even in low-coverage sequence , tangram maintains >80% sensitivity. tangram’s sensitivity substantially exceeds that of the retroseq program, especially when detecting heterozygous events in low-coverage  data. tangram also boasts high specificity, making no false positive calls in any of the simulated data. this was also the case for retroseq.

we also tabulated genotype-calling accuracy, i.e. the rate at which a given algorithm provides the correct genotype for a given simulated sample . as table  <dig> indicates for alu detection, tangram is able to call sample genotypes with >90% accuracy for all coverage levels and event ploidy we considered. accuracy in our simulated data is nearly perfect for heterozygous events over 10x coverage, and for homozygous events over 20x coverage. these accuracy values compare very favorably with those obtained for retroseq, which appears to heavily favor homozygous calls in low-coverage data, and heterozygous calls in deeper sequence coverage and has a very high error rate in the non-favored category. the overall accuracy of the tangram genotypes, obtained by a judicious weighting of heterozygous and homozygous events, is high, over 96%, in every category, again, substantially higher than what was obtained with retroseq.

l <dig> elements in the human genome are usually found truncated at the 5′ end  <cit> , which further complicates detection. to assess the sensitivity of our method to those truncated l <dig> elements , we generated two simulated datasets using the same strategy as the alu simulations with 5′ truncated l <dig> elements ; heterozygous 106 bp at 10x and 20x sequence coverage. the length distribution we used was derived from the l <dig> detection results in stewart et al.  <dig>  the results are shown in table  <dig>  for both datasets, tangram achieved over 90% sensitivity and genotype accuracy, which is substantially better than the performance of retroseq. moreover, from figure 1a and 1b we can see that tangram can effectively detect those severely truncated l <dig> events whereas retroseq missed almost all the short l <dig> elements . like the alu simulation dataset, both detectors do not report any false positive l <dig> events.

determining the exact location of sv event boundaries is notoriously difficult. in the simulation experiments performed here, tangram was able to assign mei breakpoints at or near single nucleotide resolution using the sr signal. for alu detection with 106 bp reads at 20x , greater than 65% of the reported breakpoints co-locate exactly with, and over 99% are within 15 bp of the true breakpoints . for l <dig> detection with 106 bp reads at 20x , more than 60% of the reported breakpoints co-locate exactly with, and over 97% are within 15 bp of the true breakpoints . the inexactness is caused by the simulated target site duplication  sequences . this introduces a localization error mode. additional, smaller localization errors are caused by alignment artifacts where similarity exists between the tsd and the me sequences themselves. this performance is attributable to sr-mapped reads identifying the breakpoints at a resolution that rp-only methods are unable to match. see methods for detailed information about breakpoint calculation.table  <dig> 
mei detection sensitivity and genotype accuracy for l <dig> elements


 <dig> %
 <dig> %
 <dig> %
 <dig> %
results are shown for the tangram and retroseq programs applied to simulated data . “sen” indicates sensitivity and “genotype” indicates the genotype accuracy. the best result in each row is indicated in boldface text.
l <dig> length distributions of missed events. a and b show the length distributions of l <dig> events that are not detected by tangram and retroseq, respectively. the red line is the l <dig> length distribution of the  <dig>  l <dig> elements introduced in the simulated data. the blue line represents the missed events in 10x data and the green line represents the missed events in 20x data. tangram  detected almost all the severely truncated events whereas retroseq  is not sensitive enough to those short l <dig> elements.
breakpoint resolution for a  and b . the difference between reported and true breakpoint position in simulated data is shown for the tangram and the retroseq mei detection algorithms . the majority of breakpoints reported by tangram exactly match the true breakpoint.



performance comparisons using  <dig> genomes project data
we ran tangram and two other mei detection algorithms, retroseq and tea, to analyze deep-coverage sequencing data from a ceu trio consisting of samples na <dig> , na <dig>  and na <dig> , obtained from the public 1000gp ftp site . the data consists of 101 bp paired-end reads generated by illumina hiseq sequencing machines; the insert size was 465 ± 50 bp . we mapped the reads with mosaik  <dig>  for tangram and bwa for retroseq and tea, according to author instructions. to assess sensitivity and genotype accuracy, we compared the mei loci  reported by the three detectors to the events reported and experimentally characterized in a previous large-scale study using an earlier set of 1000gp data  <cit>  for the same samples . the stewart et al. call set consisted of  <dig>  alu and 180 l <dig> calls, including  <dig> alu and 48 l <dig> insertions that were experimentally confirmed with a polymerase-chain-reaction-based  validation techniques. as shown in table  <dig>  tangram recovered >98% of pcr validated events and >93% of all reported events. retroseq provided comparable results, but tea was unable to achieve this level of sensitivity to alu events. tangram’s genotype accuracy for alu events was >91% for all three samples. tangram detected approximately 87% of pcr validated l <dig> insertion events, outperforming the two competing algorithms. tangram’s sensitivity to l <dig> events reported in the stewart et al. data set drops markedly in comparison to the pcr-validated events. this is likely the result of the high false discovery rate  for l <dig> events  in the stewart et. al. data set. notably, our algorithms called none of the events reported in the stewart et al. dataset that failed pcr validation. it is noteworthy that sample na <dig> had the highest number of mei calls using either of the calling methods. this is likely the result of the substantially higher read coverage in this sample, as well as longer reads from  <dig> sequencing machines, not available for the other two samples in the analysis of stewart et al.  <dig> .table  <dig> 
sequence coverage for two sequencing technologies of ceu trio used in 1000gp pilot mei paper




 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
 <dig> %
comparisons are shown for a ceu trio  processed with tangram, retroseq and tea. sensitivity and genotype accuracy was measured by comparing the reported events with those in stewart et al.,  <dig>  the total number of validated and reported mei loci are shown under the “stewart et al. 2011” column. the two sub columns under each detector, “validated” and “reported”, show the sensitivity to pcr validated loci and all reported loci in stewart et al.  <dig>  respectively. the tea program does not provide genotype calls, and therefore could not be used for genotype accuracy comparisons. the best result in each row is indicated in boldface text.



our experiments here demonstrate that tangram provides accurate mei genotypes across all mei types . the tea program does not provide sample genotypes, and therefore was not included in this comparison. retroseq appears to suffer from a systematic bias when applied to deep-coverage data; it called almost all mei loci as heterozygous. in comparison, tangram can effectively distinguish between homozygous and heterozygous loci.table  <dig> 
genotype accuracy


a contingency table is shown for mei genotypes reported by tangram and retroseq on deep coverage sequencing data from a ceu trio . the “genotype from validation” column shows the genotype that was validated in stewart et al.  <dig>  the “genotype call” column shows the genotype predicted by tangram and retroseq at the same loci. the “genotype” column in table  <dig> was calculated based on the results in this table.



running tangram on population data
we deployed tangram on  <dig> samples from the 1000gp phase  <dig> release  <cit> . three populations were included in this dataset: african ancestry in southwest usa , luhya in webuye, kenya  and yoruba in ibadan, nigeria . on average, each sample had 5x sequence coverage so the overall coverage of this dataset is ~ <dig> x. the allele frequency spectrum  of all meis for each of the three populations  and afs of snp calls generated by sanger institute with qcall  <cit>  and gatk  <cit>  on the same sequencing dataset  are shown in figure  <dig>  the expectation is that the afs of meis is similar to the afs observed for snp data  <cit> . this is indeed the case , except at low allele frequency, where detection sensitivity drops off in the low-coverage 1000gp datasets . additionally, we calculated the allele frequency spectrum for each me type. figure 3b shows the afs of four me types, alu, l <dig>  sva and herv-k, across all three populations. similarly, we can see from the figure that tangram loses some sensitivity on low allele-frequency events.figure  <dig> 
allele frequency spectrum of african populations. the number of loci for a given allele frequency is normalized with the total number of loci. a. allele frequency spectrum for mei and snp  variants detected in  <dig> african populations. results for samples designated as asw, lwk and yri are shown, for  <dig> types of meis: alu, l <dig>  sva and herv-k. overall, the afs of meis is very similar to that of snps except that there is limited sensitivity to low frequency events for mei detection due to sparse or absent supporting reads in low-coverage data. b. allele frequency spectrum for four different types of mes, alu, l <dig>  sva and herv-k detected with the tangram toolbox.



experimental validation
to assess the specificity of tangram, we performed pcr validation on  <dig> 1000gp phase  <dig>  <cit>  samples , including a ceu trio  with deep coverage  and  <dig> low-coverage  samples from the chs and lwk populations . tangram detected  <dig>  alu, 256 l <dig>   <dig> sva and  <dig> herv-k insertions in these samples. of the  <dig>  loci,  <dig> were novel, i.e. not reported in previous studies , and absent from the dbrip database  <cit> . two random subsets,  <dig> sites in all, were randomly selected for pcr validation:   <dig> loci  were randomly selected from the entire call set of  <dig>  meis; and  additional  <dig> loci were randomly selected only from the  <dig> novel calls. pcr validation results for tangram and variationhunter are shown in table  <dig> and table  <dig>  tangram achieved very low fdr for all three non-ltr mei types . although the numbers are low, no false positive l <dig> and sva calls were reported. the overall estimated fdr for the first and second validation sets were  <dig> % and  <dig> %, respectively. this result is consistent with expectations that newly detected, previously unknown events have higher fdr. in table  <dig>  we compared experimental validation results for three algorithms: tangram, retroseq, and variationhunter, for event types detected by each calling algorithm. tangram achieves substantially higher specificity than the two competing algorithms. in fact, this level of accuracy is close to the fdr of snp calls from current state-of-the-art variant callers  <cit> .table  <dig> 
sequencing information of ceu trio and  <dig> 1000gp phase i samples used for pcr validation


the sequencing data for ceu trio is a mixture of multiple libraries with different read length so in the “read length” column for these three samples shows mean ± standard deviation.
pcr validation results for the tangram mei detector


validation results and estimated false discovery rates are shown for mei calls from  <dig>  <dig> genomes project phase  <dig> samples.
comparison of pcr validation results across three mei detection algorithms


calls were made in  <dig>  <dig> genomes project phase  <dig> samples by tangram, retroseq and variationhunter.



resource requirements and software availability
the primary motivation behind developing tangram was to provide highly accurate mei calls. to be a useful software tool, however, it must be easy to install, easy to run, and able to generate results in a timely fashion, using reasonable computational resources. we characterize resource usage and analysis time on our analysis of the  <dig> 1000gp low-coverage samples   <cit> . when using other mei detection software programs, it is a common requirement that only a single bam file can be processed at a time, necessitating all input bam files to be merged into a single file , or to process each bam file individually . tangram, in contrast, can process all input bam files simultaneously. most currently available structural variant callers employ multiple passes through the entire input file, requiring substantial memory and computation time. to reduce the memory footprint and increase the throughput, tangram was designed to call mei events regionally, i.e. within shorter windows of the sequence alignment. single-pass analysis is made possible by annotation tags produced by our mosaik read mapper software, marking reads whose fragment-end paired mate maps into me reference sequence. additional parallelization was accomplished by multi-threaded implementation of the software. in this test, we submitted one tangram detection job for each chromosome . each job used one amd opteron  <dig> cpu . the detection process finished within 58 hours  or 96 hours . tangram is designed to run on any specified genomic region, e.g. chr1: <dig> - <dig> , to facilitate parallelization when a computer cluster is available for running the analysis. for example, when we repeated the detection process in 1mbp detection windows running in parallel on our cluster, the total compute only took  <dig>  hours  or  <dig>  hours .

as inherent to its algorithmic design, tangram requires mappings to me reference sequences, as well as bam alignment file tags that are currently only provided by our own mosaik mapper. as discussed below, we are developing and testing a program to “retrofit” alignments created with other read mapping programs such as bwa or bowtie  <cit> , to provide similar information as part of an alignment post-processing step, to enable efficient mei detection using the primary mappings. but for now, before we are able to release this post-processor, we recommend remapping with mosaik. mosaik is a fast read mapper, able to map over  <dig> read pairs  per second  <cit> .

tangram is easy to install and run. users can download it from its main github repository . we have also integrated it into our pipeline and tool launcher system, gkno, available at http://gkno.me.

CONCLUSIONS
mei events can have a strong impact on gene function and therefore accurate detection and genotyping is essential within individuals. mes are, by nature, repetitive sequences and are therefore difficult to detect. to our knowledge, our tangram software is the only robust software tool capable of detecting all classes of meis, providing accurate individual genotype information, and facilitating near base-perfect breakpoint localization. we showed that tangram could achieve higher sensitivity, specificity, genotyping accuracy, and breakpoint accuracy than competing mei detection methods because of the global use of sr mapping information into the detection process. competing algorithms either only use rp mapping information to call events, or perform sr mapping in regions where rp mappings indicate a possible mei event. in contrast, tangram analyzes both rp and sr mapped reads from the start, and can therefore detect events for which only sr mapping evidence exists.

table  <dig> illustrates detection sensitivity when rp or sr signal is used in isolation, or in combination with each other. at almost all read lengths and coverage values, the sr method on its own is more sensitive than the rp method . importantly, rp detection sensitivity does not exceed 85%, even in deep-coverage data. this is because rp-mapped reads localize the mei point to a window. if the reference sequence already contains an me within this window, one must filter out the candidate event because of the high likelihood of spurious detection. sr mapping localizes the insertion site with much greater resolution, making it possible to distinguish between mes in the reference, and polymorphic insertions not present in the reference.

table  <dig> also illustrates that rp-based methods implementing a secondary sr-mapping step can perform very well in deep-sequencing data because such high-coverage datasets likely contain rps that map across the breakpoints and additional reads that can be sr-mapped across the breakpoint for fine localization. in low-coverage data however, there are many events without rps mapping across the breakpoints. when using shorter reads, reliable sr mapping becomes difficult. in both cases, sensitivity suffers. recent technological developments are continuously increasing the length of sequenced reads. consequently, the same sequence coverage is accomplished with fewer, but longer, reads. moving forward, this trend clearly favors the sr mapping method, and in particular, methods that use sr mapping as part of their primary detection approach. as we demonstrated in this study, such methods are more sensitive and specific, have higher genotype accuracy, and are able to localize event boundaries more accurately. admittedly, our sensitivity estimates are likely too high, because our method is not designed to detect meis that are embedded inside other mes in the genome. however, these estimates are perfectly valid for comparing the performance of tangram to that of competing tools. a clear limitation of our method is that it only detects meis for which a me reference sequence is provided in the mapping step. the detection of “novel” insertions is a much bigger, and as of today a largely unsolved problem.

our main focus in this study was on alu insertions, and the balance of simulated datasets we used to characterized our method reflects this. biologically, alus are the most abundant meis in the human genome. methodologically, the majority of competing approaches also focus on alu . however, tangram is also able to effectively detect l <dig> insertions, as demonstrated both with simulations and with the analysis of real datasets.

as mentioned earlier, currently tangram can only run on alignment data generated by the mosaik aligner, but not by other widely used sequencing aligners such as bwa, because only mosaik currently provides the mapping information vital for mei detection with our method. we realize that it would be desirable to run tangram on e.g. bwa alignments, and have written a program, “tangram-bam” currently in testing, that is able to add to the primary bam file the appropriate mapping information, at the cost of very light additional computation. with this modification tangram will not only be compatible with mosaik and bwa but also with other primary read mapping programs.

