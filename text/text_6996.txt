BACKGROUND
many evolutionary processes involve transitions among different discrete characteristic states, including changes in morphological characteristics  <cit> , sequence gain and loss  <cit> , gene family expansion and contraction  <cit> , gain and loss of mobile promoters  <cit>  and epigenetic characteristics such as methylation  <cit> . evolutionary rates of discrete characters have been estimated using programs primarily developed for constructing ancestral character states such as the ace function of the ape package  <cit>  in r, standalone programs bayestraits  <cit>  and mesquite  <cit> . recently, great efforts have been made to estimate gene family turnover rates. the gloome program maps gain and loss rates using binary characters   <cit> , while count  <cit> , begfe  <cit> , badirate  <cit> , and cafe <dig>  <cit>  employ birth-and-death  models to study gene family expansion and contraction.

some of these programs have advanced  features that are not implemented in other programs. for instance, the bayestraits program implements a Γ-distribution for rate variation  <cit> . the gloome program allows the estimation of prior root probabilities of the character states  <cit> . the badirate program allows variable birth rates and death rates, and corrects for unobservable data  <cit> . furthermore, many multistate characters do not necessarily evolve in a bd manner  <cit> , and should therefore be modeled using transition rate matrices other than bd.

in order to perform accurate rate estimation on a variety of discrete characters, we have developed a unified program discml by implementing the advanced features mentioned above as well as flexible options for transition rate matrices.

implementation
discml estimates the evolutionary rates of discrete characters by fitting the distribution of all character states  on a given phylogeny. the data need to be in a matrix format  as required in many other phylogenetic programs in r . the provided phylogeny is required to have branch lengths, as branch lengths will be used as a relative time scale in the analysis. the evolutionary rates, transition rate matrices, and additional parameters discussed below will be optimized to maximize the likelihood of the data. the optimization is achieved using the port routines  <cit>  implemented in the nlminb function in r.

implementation of rate variation in the analysis
rate variation among the character sites has long been recognized and implemented in dna analyses  <cit> , but has been missing from most analyses of non-dna discrete characters . discml considers rate variation among the character sites by implementing a discrete Γ distribution .

estimation of prior root probabilities
most programs for the analysis of discrete characters assume only uniformly distributed prior root probabilities, e.g., , . discml allows the estimation of prior root probabilities  for different character states .

flexibility on both the transition model and the number of character states
discml is flexible on both the size and type of the transition rate matrix , which can be customized by users. this option could open the door for novel evolutionary analyses on different discrete characters. several transition rate matrices are pre-determined in discml: model=~er~ , model=~sym~ , and model=~ard~ . er and sym are reversible matrices, while ard matrices are irreversible.
  

evolutionary processes can follow a birth-and-death  process. the birth processes correspond to transitions from state n to state n+ <dig>  while the death processes correspond to transitions from state n to state n− <dig>  the bd transitions can be represented as matrices containing non-zero entries only between the neighboring states . several pre-determined bd transition rate matrices are available: bder , bdsym , bdisym , and bdard .
  

finally, all transition rate matrices  are calibrated  <cit> , i.e., each q satisfies
  <dig>  

so that the evolutionary rate parameter  is the average number of transition events per site per evolutionary time unit  <cit> .

forced reversibility and flexible irreversible options
when the prior root probabilities  for different character states are estimated, reversible transition matrices will no longer necessarily result in reversible evolutionary processes . since it is sometimes of biological interest to assume reversibility , discml can allow forced reversibility by setting reversible=true. in practice, reversibility is obtained by multiplying the corresponding root probabilities  to the entries in reversible transition matrices, e.g., er and sym. such a practice is conceptually the same with the general time-reversible  dna substitution model  <cit> . in discml, model=~gtr~ is equivalent to the combination of model=~sym~ and reversible=true.
  

similarly, when the prior root probabilities for different character states are estimated, forced reversibility can be applied to the bd related matrices .
  

in discml, the default setting is reversible=false and users have the flexibility to conduct analysis by assuming irreversible evolutionary processes. unlike in reversible processes, the root position can greatly affect the maximum likelihood calculation in irreversible cases  <cit> . therefore, it is only meaningful to perform irreversible analysis on a rooted tree. if the provided phylogenetic tree is unrooted, discml will first reroot the tree by midpoint rooting, and perform analysis on the midpoint rooted tree.

correction for unobservable data
some characters may contain unobservable character states, which can only be inferred indirectly from the presence of observable states of the same characters in related taxa. ancient characters can be lost from all examined extant taxa, and result in unobservable data. discml provides the option of zerocorrection=true to calculate the likelihood conditional on a pattern being observable following  <cit> , i.e.,
  <dig>  

where l− is the likelihood of unobservable patterns. the correction for unobservable data  is essential for systems such as gene family data due to the complete loss of some ancient genes, but not suitable for single-site analyses and for systems in which all character states are observable .table  <dig> 
discml estimates from the gene family data in the bacillaceae  clades



er
μ

μ

bder
μ

bdisym
μ

bdard
μ

er
μ

sym
μ

ard
μ

gtr
μ

μ

er+ π
μ

er+ Γ
μ

er+0+ π + Γ
μ

er+0+ π
rev + Γ
μ
the parameter μ is the estimated evolutionary rate of the characters. “1s/0s only” indicates binary analysis by converting all non-zero characters to 1s using simplify=true, ‘+0’ indicates the correction for unobservable data using zerocorrection=true, ‘+ Γ’ indicates the implementation of a discrete Γ distribution using alpha=true, ‘+ π’ indicates the estimation of prior root probabilities using rootprobability=true, ‘+ π
rev’ indicates the estimation of prior root probabilities with forced reversibility using rootprobability=true and reversible=true.



site and branch specific estimations
even though the default setting of discml is to perform rate estimation by fitting the distribution pattern of all character sites on a phylogeny, there is an option to perform rate estimation on individual sites . individual rates can be graphically displayed using plotmu=true. furthermore, discml allows branch specific rate estimation, which can be specified using ‘$’ on branches in the provided tree file. for instance, $3:  <dig> , taxon3$2:  <dig> )$3:  <dig> , taxon4$2:  <dig> ); specifies three rates, one for the branches leading to taxon <dig> and taxon <dig> , one for the branches leading to taxon <dig> and taxon <dig> , and one for the remaining branches . the modified tree files are no longer in the conventional newick format, we have developed a function read.tree <dig> in discml to read such modified tree files.

additional features
discml allows binary  analysis on data with more than two character states by converting all non-zero characters to 1s with simplify=true.

RESULTS
discml was first tested using the gene family data on three bacillaceae clades . in the previous study  <cit> , we distinguished gene fragments from gene absence and gene presence. in this study, we eliminated the character state specific for gene fragments and re-categorized gene fragments as gene absence or character state  <dig>  single-copy genes as character state  <dig>  and gene families with two or more members as  <dig> , so that the application of bd models on these data is meaningful. it is worth to note that, though the number of character states is restricted to three here, discml is flexible and capable of analyzing a large number of character states. figure  <dig> 
phylogenetic relationship of three bacillaceae  clades, on which the evolutionary rates of gene families are estimated using discml.
a, a constant rate is estimated on each phylogeny; b, separate rates are estimated for external branches  versus internal branches  on each phylogeny. these three clades were studied in our previous study on gene presence, absence, and fragments  <cit> . gene families are recategorized, with gene absence and fragments as character state  <dig>  single-copy genes as  <dig>  and gene families with two or more members as  <dig> 



the performance of discml is found to be reliable. for instance, the er+ <dig> model with the option of simplify=true in table  <dig> is mathematically identical to the m <dig> model in  <cit> . the optimization in  <cit>  was achieved using the nelder-mead simplex method  <cit> , while the optimization in table  <dig> was achieved using the port routines  <cit> . importantly, the discml estimates are identical to the previous estimates for all three clades. as expected, the parameter-rich models consistently outperformed the nested simplistic models . consistent with previous studies  <cit> , rate estimates in closely related clades tend to be higher than those in distantly related clades due to the transient nature of many acquired genes . tested on an intel core i <dig>   <dig> gb ram dell desktop, the computation using discml is fast . for instance, the er  analysis took  <dig> seconds  for b <dig> ,  <dig> seconds  for b <dig> , and  <dig> seconds  for b <dig> . computational time increases with the complexity of transition rate matrices and the addition of estimated parameters. for instance, the er+0+ π + Γ analysis took  <dig> m  <dig> s for b <dig>   <dig> m  <dig> s for b <dig>  and  <dig> m <dig> s for b <dig> .table  <dig> 
computational time on an intel core i <dig>   <dig> gb ram dell desktop to generate the results in table
1





bder

bdisym

bdard

er

sym

ard



er+ π

er+ Γ

er+0+ π + Γ

er+0+ π
rev + Γ
the number of gene families is shown in parentheses for each clade. the time is shown in minutes  and seconds .



discml was developed to allow separate rates among branches since evolutionary rates can vary among lineages . in the three bacillaceae clades, we assigned separate rates between external branches  and internal branches  as illustrated in figure 1b. our results in table  <dig> support the previous findings of higher gene turnover rates on external branches than those on internal branches  <cit> .table  <dig> 
separate rates on branches estimated from the gene family data in the bacillaceae  clades


er
μ
er
μ
1
μ
2

μ
1is for external branches, while μ
 <dig> is for internal branches on each tree as illustrated in figure 1b.


∗∗∗
p< <dig>  , as  <dig> Δlnl approximately follows a χ
2-distribution.



it is often of interest for users to know the individual rate of each character site. previously, we have shown that the mitochondrial intron in the 21s rrna gene undergoes very rapid turnover in yeast  <cit> . in this study, we estimated the individual rates of all  <dig> mitochondrial introns on the yeast phylogeny  based on the intron distribution pattern . on the plot generated by discml using ind=true , users can visually compare the individual rates of different introns. for instance, the introns at sites  <dig> and  <dig> have faster turnover rates than the 21s rrna intron at site  <dig> . the r commands used in the study are provided in additional file  <dig> figure  <dig> 
phylogenetic relationship of the yeast strains in the
saccharomyces
complex, on which the rates of mitochondrial intron gain and loss are estimated using discml. the phylogeny was reconstructed using the concatenated sequences of all mitochondrial protein genes after excluding the var <dig> gene.
plot of individual turnover rates of the  <dig> mitochondrial introns in yeast. ten introns in the cox <dig> gene are shown as sites 1- <dig>  six introns in the cob gene are shown as sites 11- <dig>  and one intron in the 21s rrna gene is shown as site  <dig> 



CONCLUSIONS
we illustrated the versatility of discml on different types of data and analyses. with a great flexibility and fast computational speed, we are confident that discml can be used in a variety of studies on different discrete characters.

availability and requirements
project name: discml

project home page:http://cran.r-project.org/web/packages/discml/index.html

operating system: platform independent.

programming language: r.

other requirements: r ; r-package: ape from cran.

license: gnu gpl

electronic supplementary material
additional file 1: files and commands used in the analyses of the b <dig> clade and the yeast clade. b <dig> tre is the b <dig> tree in the conventional newick format. b1_pattern contains the distribution pattern of gene families in the b <dig> clade with gene absence and fragments as 0s, single-copy genes as 1s, and gene families with two or more members as 2s. each column is for one genome, and each row is for one gene family. b1_2rates.tre is the b <dig> tree with assigned separate rates for external branches and internal branches. the rate for external branches is $ <dig>  and the rate for internal branches is $ <dig>  the yeast.tre file is the phylogenetic tree of  <dig> yeast strains in the conventional newick format. the intron_pattern file contains the distribution pattern of the  <dig> mitochondrial introns in the  <dig> yeast strains. each column is for one intron, and each row is for one strain. data matrix in this format will need to be transformed before the analysis . some r commands are in r.inputs. 

 competing interests

the authors declare that they have no competing interests.

authors’ contributions

wh designed the package, tk wrote the codes, wh performed data analysis, tk and wh wrote the manuscript. both authors read and approved the final manuscript.

