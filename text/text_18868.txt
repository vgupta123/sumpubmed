BACKGROUND
dna sequence copy number changes have shown to play an important role in the aetiology of cancer and congenital disorders. comparative genomic hybridization  is a molecular cytogenetic method for the detection of chromosomal imbalances  <cit> , which does not depend on the availability of chromosome spreads and is not confined to the analysis of growing cells. unfortunately, conventional chromosomal cgh has a low resolution. recently, this drawback has been overcome by the introduction of array cgh. here differentially labelled test and reference dna are co-hybridized onto microarrays of several thousand evenly spaced dna clones or oligonucleotides representing specific regions of the human genome <cit> . the resolution of this technique depends on the number of different dna spots printed on the glass slides and on the size of the dna clones used. currently most available cgh arrays allow the reliable detection of deletions and duplications if they are larger than  <dig> mb. however, with arrays containing more densely spaced bac  clones containing on average  <dig> kb of human dna, much higher resolutions can be achieved  <cit> . up to now, array cgh has been predominately used in highly specialized laboratories, and most of the data analysis programs currently available are not able to process the output of array cgh experiments in an easy and comprehensive way. for example, the two r packages, acgh and dnacopy, can identify copy number transitions on chromosomes by unsupervised hidden markov model  <cit>  and circular binary segmentation  <cit> , but the application of these tools requires basic programming skills in r language. cgh-plotter is a matlab toolbox with a graphic user interface. it detects the regions of amplifications and deletions using k-means clustering and dynamic programming. however, like acgh and dnacopy, cgh-plotter can only be used to analyse already normalized array data in a specific format  <cit> . in addition, these programs output display the results in a non-interactive plot. as a visualization tool for array cgh, seegh can display the data in a user friendly interface <cit> . it allows users to explore the results in a conventional karyotype diagram with annotation. however, without the essential statistical methods for characterizing the genomic profile, seegh is rather a visualization than an analysis tool for array cgh.

here we present a comprehensive data analysis software for array cgh. the program combines analysis and visualization of array cgh data. furthermore it supports comparative analysis of complete study groups based on absolute and relative frequencies of aberrations.

implementation
software design and information sources
cghpro was programmed in java and mysql was used as the back-enddatabase. the decision to use java and mysql was based on their public availability, their platform independence and the fact that mysql can handle large data files with high throughput. two "r" packages from bioconductor <cit> , dnacopy and acgh, were implemented in our software, which enable a platform-independent characterization of genomic profiles. up to now, cghpro has been tested in a linux and a windows  <dig> environment.

to date, cghpro allows the import of result files from genepixpro <dig> , agilent and imagene, but users can also customize the program to support their own data format. all essential data required to meet future standards of "minimal information about an array cgh experiment" can be stored in the database. such standards have already been defined for gene expression analysis  <cit> , but are still lacking for array cgh.

the genome annotation that has been integrated into the current version of cghpro is based on the ucsc genome browser  <cit> , but users can choose different versions to meet their own needs.

the example chosen for demonstration of this software is a male versus female co-hybridization onto a  <dig> bac array, comprising a genome wide  <dig> mb resolution bac array  and the tiling path of nine chromosomes from the human " <dig> k" bac re-array set, a series of overlapping bac clones obtained from bacpac resources centre at children's hospital oakland research institute  <cit> . detailed protocols for the generation of the arrays and the hybridization are available at our website  <cit> .

the dataset for the comparative analysis was generated artificially.

RESULTS
database design
in cghpro a back-end database using mysql has been implemented. the database stores the description of each analyzed chip  as an entry in the table 'analyzedchips'. this description includes all essential information about the experimental and data analysis procedure, e.g. the number of spots that have been excluded and the normalization algorithm applied. a separate table named according to the chip id saves the original data from the image analysis software as well as the results from data analysis. a table called 'cloneposition' is used to store the mapping information for each clone. the information comprises data that might influence the reliability of the clone's hybridization characteristics, such as content of repetitive sequences and most importantly, its involvement in segmental duplications, which can be visualized by a colour code, as discussed below. in order to be able to use this feature properly, users with cdna- or oligo-arrays have to adjust the chromosome positions of their probes. instead of the actual chromosome position, one should define the chromosomal region, which the probe represents.

data input
cghpro allows the import of output files from several image analysis software packages, as listed above. essential data are extracted and spots flagged as "poor" by the image analysis software are excluded automatically. mapping information and related annotations for each clone are fetched from the back-end database.

mapping information for each clone, based on a specific version of ucsc genome browser, has to be provided by the user. for this purpose, a tab-delimited file has to be loaded into the back-end database, which must include six fields for each clone, the unique identifier, the respective chromosome, the positions of the first and last base pair, the source of the clone, and the user-specified comments of the clone. for the complete tiling path, as distributed by the bacpac resources centre, the mapping information based on the april  <dig> assembly of ucsc genome browser comes along with the software.

the way this information is acquired differs from other recently published programs like arraycghbase  <cit>  or cap  <cit> , both of which provide these data by directly accessing the respective genome browser. this may be an advantage when looking for the most recent update, but it may pose problems for diagnostic and related applications, where patient confidentiality is important and precludes online data analysis. offline analysis also speeds up the process, as it is not dependent on server capacities or transfer rates.

graphical analysis of hybridization characteristics
cghpro provides a variety of graphical data representation tools to visualize the data before and after normalization. scatterplots allow for estimates of the noise within a given data set. spatial dependency of log ratios can be detected with boxplots for all different subgrids. maplots are implemented to detect intensity-dependent effects of the log ratios distribution  <cit> , and the distributions of signal intensity ratios are displayed as histograms. this feature is supplemented by qq plots, which demonstrate to what extent the ratio follows the normal distribution.

visual inspection enables identification of clones that should be excluded from further analysis, and at the same time it provides a basis for choosing the appropriate method of normalization.

data normalization
the goal of normalization is to remove any systematic bias in the measured fluorescence intensities. such systematic bias can originate from different labelling efficiencies of the used fluorochromes, different scanning parameters, spatial effects and/or other effects. in cghpro there are four options to remove these biases: global median, lowess   <cit> , subgrid median and subgrid lowess. global methods assume that the bias is constant across the whole chip. using global median, the median value of log <dig> ratios is chosen as the correcting value. lowess function is especially useful for removing intensity-dependent biases. in order to reduce the influence of spatial effects, as may be detected by boxplots, the above two methods can be applied to every subgrid separately. according to our experience, at least in our settings, the median subgrid works best for the normalization of array cgh data.

if one clone is spotted more than once on the chip, the replicate spots are automatically identified by their common id. after normalization, the normalized ratios for the replicates are averaged and the standard deviations are calculated. this average ratio will later be used to represent the ratio of each clone. in subsequent analysis, users can set a threshold based on the number of replicas and standard deviation, such that clones exhibiting inconsistent results can be excluded.

characterization of genomic profiles
the eventual goal of array cgh is the characterization of the individual genomic profile. up to now, the common method is to use fixed thresholds, which should be dependent on the variability of the data. cghpro allows users to set the threshold either directly, or smooth the data first and then set a threshold based on the smoothed results. for smoothing, cghpro provides two options. when using moving average, which is applied to each chromosome separately, a window of adjustable size moves along the clones, which are ordered according to their base pair positions on the chromosome. the smoothed ratio of the clone at a window's centre will be the average ratio of the clones within the window.

the second smoothing strategy is to segment the clones, which are ordered along the chromosome, into sets with equal copy numbers. then the data can be smoothed via averaging within the sets.

cghpro includes two methods for the segmentation of chromosomes into regions with identical copy numbers, namely 'unsupervised hidden markov partition' created by jane fridlyand  <cit>  and 'circular binary segmentation' first published by adam olshen  <cit> . we have implemented the two methods by linking the two r packages, acgh and dnacopy, to our program. based on the smoothed ratios generated by one of these two algorithms, we have introduced the median absolute deviation  as an objective measurement of data scattering.

data display
genomic display
the graphical interface of cghpro allows to explore the results in an interactive interface . in the genome display, the window consists of  <dig> sub-panels, each containing one chromosome. in each sub-panel, the ratios of clones are plotted in a size-dependent manner along the ideogram. as described below, several display parameters can be modified.

in each sub-panel, there are three lines along each chromosome. the yellow line represents a log ratio of zero; the individually adaptable green and red lines mark the negative and positive log ratios, respectively. the smoothed log ratios calculated by moving average, dnacopy or acgh can be chosen to be displayed as a black line called smooth line. optionally, the original data can be blanked out.

each clone is colour-coded according to its involvement in segmental duplications, as defined by the following formula: / length of clone. based on the factors determined this way, the clones are grouped into seven classes that can be looked up separately by clicking on the button with the corresponding colour in the top right corner.

segmental duplications, which comprise ~5% of the human genome, are copies of genomic dna with >90% sequence identity that range in size from  <dig> to > <dig> kb and are present in at least two locations in the human genome  <cit> . highlighting segmental duplications is useful for the recognition of clones that may show misleading ratio scores  <cit> . moreover, this feature also allows to relate chromosomal rearrangements to duplicated genomic regions. it has already been shown that segmental duplications increases the chances of non-allelic homologous recombination and that genomic regions flanked by these duplications are particularly prone to rearrangements  <cit> . clicking on each sub panel will open a separate window and allow zooming on a specific chromosome.

chromosome display
chromosome display provides a detailed view of the selected chromosome . in addition to the features provided by the genome display, the chromosome display supports the search for clones, zooming in or out, as well as the export of images. upon clicking on a clone, information on its exact localization, contents of simple repeats, its involvement in segmental duplications, as well as information on number, position and ratio of the present replicas will be displayed in a text box. a key feature added to the chromosome display is a right-click mouse event, which will open a pop-up menu, offering several zoom options. finally, chromosome display can be exported as an image file in portable network graphics  format.

comparative analysis of different chips
once stored in the database, all entries can be used for comparative analysis at the genomic, chromosomal and clone-by-clone level. genomic view is especially suitable for the summarizing display of chromosomal aberrations in a series of cases. in this mode, the absolute frequencies of aberrations within a study group are displayed alongside the chromosome ideograms ordered in a  <dig> ×  <dig> grid. upon clicking on the chromosomes of interest in the list located at the left side of the screen, the program switches to the chromosome view and zooms in the respective chromosome. in addition to the absolute frequencies of aberrations, the relative frequencies can also be shown, which makes it easier to compare study groups of different size . for detailed analysis, the clone-by-clone view can be used. this mode supports "mouse over functionality", which displays further clone information in the bottom text field. additionally the clone-by-clone matrix paves the way for the implementation of further algorithms such as hierarchical clustering.

as in all other views, balanced regions are indicated in yellow, while deleted and gained regions are shown in red and green, respectively. the simultaneous display of results from several experiments can assist in the definition of shortest regions of overlap, can help to reveal patterns of chromosomal aberrations, and can facilitate the recognition of odd clones.

CONCLUSIONS
cghpro represents a comprehensive and easy-to-use data analysis tool for array cgh. the software features the test of hybridization quality, normalization and visualization, as well as interactive data exploration and the comparative analysis of complete study groups. by providing all features offline, cghpro can be especially suitable in situations where protection of sensitive patient data is an issue. cghpro is written in java and requires mysql and r. the program runs on linux and windows operating systems.

it is freely available for use under the terms of the gnu general public licences  at the project's homepage. the open design of cghpro allows the easy adaptation to specific needs and the future incorporation of new features.

availability and requirements
project name: cghpro

project home page: 

operating system: linux and windows 2000

programming language: java, sql, r

other requirements: java  <dig>  or higher, mysql database and r

license: gnu general public license

any restriction to use by non-academics: contact authors

authors' contributions
wc was the principal programmer of the cghpro software. fe has performed the hybridization experiment and tested the program, hhr and sl contributed ideas for display and analyzing features and ru was responsible for defining the practical requirement catalog and contributed to manuscript preparation.

