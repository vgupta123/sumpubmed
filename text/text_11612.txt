BACKGROUND
the rapid increase in the availability of genomic-scale multiple sequence alignments covering diverse sets of taxa offers new and exciting opportunities for those seeking to understand the processes and patterns of molecular evolution and brings us a step closer to solving such grand challenges as assembling a tree of life. in practice however, regions  of large multi-source data sets seldom support a single phylogenetic tree. more often than not, we are left to sort through hundreds if not thousands of competing phylogenies. different data partitions may support different phylogenies because reconstruction methods sometimes fail to adequately accommodate process heterogeneous underlying data partitions found within an alignment  or because some data partitions simply do not share the same evolutionary history, . furthermore, large data sets are typically more computationally challenging to analyze and often call for more extreme heuristic shortcuts, which may fail to converge to a global optimum  <cit> . therefore, visually representing the similarity or dissimilarity among competing phylogenic trees supported by different genes or by other a priori defined data partitions in  <dig> or 3-dimensional space is a potentially powerful way for investigators to gain a better perspective on the problems sometimes associated with the analysis of large multi-source data sets  <cit> .

to date, the typical approach used to summarize a set of phylogenetic trees is to create a single consensus tree from the set of competing trees, in which the vertices of the consensus tree are only retained if they are shared by a majority of the trees contained within the set of candidate trees. phylogenetic network  <cit>  and maximum agreement subtree  <cit>  methods also result in concise summaries for sets of conflicting trees whether the conflicts are caused by reticulate events or by modeling errors. these methods, while easy to interpret, lack information regarding the distribution and relationship among the candidate trees. refinements to the consensus tree approach have been made by applying clustering methods to identify subsets of related phylogenies contained within the larger set  <cit> . an appealing aspect of this method is that it can be used as an objective means to identify discontinuities in the distribution of candidate phylogenetic trees or the phylogenetic landscape. however, the clustering approach still discards a great deal of information and lacks the fine-grain perspective needed to infer the cause of the discordance among the competing trees.

motivated by the inherent limitations of the consensus tree approach, amenta and klinger  <cit>  applied a dimensionality reduction method that they referred to as “iterative multidimensional scaling ” to display tree-to-tree distances in a 2-dimensional space. the practice of visually representing sets of competing phylogenetic trees in a geometric space can be separated into three major and sometimes computationally intensive components: 1) the selection of a set of phylogenic trees to be compared; 2) the calculation of pairwise distances between all members of the set of selected phylogenetic trees; and 3) the calculation of coordinates in  <dig> or 3-dimensional space, such that the euclidean distance between the projected points closely corresponds to the original tree-to-tree distances. hillis et al.  <cit>  later applied the method developed by amenta and klinger  <cit>  to demonstrate how this approach could be used to explore tree islands, compare trees from different data partitions, compare trees from bootstrap samples with trees sampled from a markov chain monte carlo  simulation, and compare trees from different mcmc simulations.

while the aforementioned authors did an excellent job demonstrating the utility of this new approach, they did not specifically address some key methodological questions specifically related to mapping high-dimensional data, in this case tree-to-tree distance, into a lower dimension for visualization. in this study we specifically address some of these unanswered questions by applying several nonlinear dimensionality reduction   <cit>  methods to the problem of visualizing large sets of phylogenetic trees obtained from the analysis of whole mitochondrial dna  genomes. the performance of these methods is evaluated relative to others and to the method introduced by amenta and klinger  <cit> .

in addition, we estimate the intrinsic dimensionality of large collections of mtdna gene trees in order to better understand whether viewing the relationship among phylogenetic trees in 3d is warranted. finally, we introduce ways to compare projections obtained from unrelated alignments so that we might better understand the biological processes and methodological biases associated with the inference of phylogenetic trees. correctly characterizing phylogenetic tree-space by dimensionality reduction methods is critical if this approach is to be of value as an interpretive or a diagnostic tool for detecting problems with substitution models or tree searching strategies.

methods
genomic data and phylogenetic analyses
aligned whole mitochondrial dna  genomes were obtained from three published studies representing fishes   <cit> , mammals   <cit> , and salamanders   <cit> . the software package paup*  <dig> b <dig>  <cit>  was used to perform 100-replicate nonparametric bootstrap analyses  <cit>  on each of 15-gene partitions contained within each of the three-mtdna alignments. hereafter we will refer to the nonparametric bootstrap analyses as the bootstrap analyses. the maximum likelihood  criterion and a heuristic search  were used to select optimal phylogenetic trees for each bootstrap replicate. parameters of the ml model  were independently optimized for each gene partition on a neighbor joining tree constructed for each gene partition. a special purpose script  <cit>  was used to distribute phylogenetic analyses in parallel on fsu’s shared hpc system.

phylogenetic analyses as described above were also performed on a test data set consisting of  <dig> partitions equal in size to the original gene partitions found in the salamander data set. the  <dig> test partitions were composed of characters  selected at random but in proportion to their occurrence in the original salamander mtdna genome alignment. therefore, the partitions within the newly compiled test data set only differ from one another by sampling error and by size . the test data set was intended to serve as a null data set in which any patterns observed in subsequent nldr projections could only have resulted from sampling error and the size of data partitions.

tree-to-tree distances
a set of trees was compiled for each of the three multiple sequence alignments by taking the union of the bootstrap trees obtained from the analyses of the  <dig> individual gene partitions . the robinson-foulds  <cit>  distance , as implemented in the software package paup*  <dig> b <dig>  <cit> , was used to measure the topological difference between all of the trees in each of the three concatenated sets of trees. the rf-distance counts the number of bipartitions that are present in one but not both trees being compared and is a commonly used tree-to-tree distance metric. we also calculated the geodesic distance  <cit>  for each of the three-mtdna data sets to determine whether the underlying distance metric had an impact on the results related to the ndlr methods or the dimensionality estimates implemented in this study. the geodesic is sometimes preferred because this distance naturally incorporates both the tree topology and branch  lengths. only the results using the rf distance are presented here because choice of distance did not alter our conclusions. the resulting rf distance matrices were used for all subsequent nldr analyses described below.table  <dig> characters per gene partition for each mtdna data set

the number of unique ml bootstrap topologies  retained for each of the 15-mtdna gene partitions for each of the three- mtdna alignments. the number of nucleotides representing each gene partition is given in parentheses. gene partitions are sorted in ascending order of their size. characters for each test partition are selected at random but in proportion to the size of each partition from the original salamander alignment




intrinsic dimensionality measures
the utility of phylogenetic landscapes generated by dimensionality reduction methods depends on whether there exists a reliable representation of the tree-to-tree rf-distances in  <dig> or 3-dimensional space. for example,  <cit>  demonstrated a simple case where the projection of 3d data into a 2d space is distorted in such a way that the original relationship among data is lost and subsequent interpretations of the 2d projection will be misleading. this result could also be obtained for higher dimensional data projected into either a 2d or 3d space. whether the rf-distances for the three-mtdna data sets used in this study suffer from the “curse of dimensionality” can, to a limited extent, be evaluated by estimating the intrinsic dimensionality of the tree-to-tree rf-distances. the intrinsic dimensionality of a data set can be thought of as a measure of the number of variables required to represent the original distances  <cit> .

if the intrinsic dimensionality of the rf-distances is three then we should be able to represent these data in a 3d space with very little to no distortion. alternatively, if the intrinsic dimensionality of the distances is greater than three then we will necessarily have to discard some information in order to visualize the data set. whether the discarded information results in distortions that mislead our interpretation cannot be fully answered, except perhaps by a subjective evaluation of the projection. we employed four different methods to estimate the intrinsic dimensionality of the rf-distances using the treescaper software package  <cit> ; correlation dimension  <cit> , a maximum likelihood estimator  <cit> , a nearest neighbor estimator  <cit>  and by examining the final value of the nldr cost function versus the dimension to which the data was reduced  <cit> . these methods are described in the additional file  <dig> 

methods of dimension reduction and evaluation
the nldr methods evaluated in this study consist of two major components; 1) a stress function, which is an objective function used to evaluate embeddings of the rf-distances in lower dimensions, and 2) an algorithm used to optimize the stress function. the stress functions are normalized stress  <cit> , kruskal- <dig> stress  <cit> , sammon’s stress, also known as the nonlinear mapping  stress  <cit> , and curvilinear components analysis  stress  <cit> . the optimization algorithms are majorization, gauss-seidel-newton, stochastic gradient descent, and mcmc simulated annealing. to better understand how each of these constituent components contributes to the overall performance of the nldr method we implemented in the software package treescaper  <cit>   <dig> of the  <dig> possible combinations of the four-optimization algorithms and four stress functions for reasons discussed in the additional file 1: appendix.

when implementing each pairing of stress function and optimization algorithm, efficiencies specific to the pair were exploited. the details of stress functions, optimization algorithms, and implementation considerations are presented in the additional file 1: appendix. the values obtained by different stress functions cannot usefully be compared directly, therefore several goodness of fit measures were used to evaluate how well each of the four stress functions were at characterizing the original rf-distances. they are  <dig> nearest neighbor   <cit> , continuity  <cit> , and trustworthiness  <cit> . details of each goodness of fit measure are presented in the additional file 1: appendix.

RESULTS
phylogenetic analyses
the number of bootstrap trees  representing each gene partition varied from between  <dig> and  <dig> . in general, shorter gene partitions  are represented by more bootstrap trees  <cit> . the inverse relationship between gene partition length and number of bootstrap trees suggests that shorter gene partitions do not have a sufficient number of informative characters for the analyses to discriminate among competing tree topologies.

not only are more trees retained by bootstrap analyses of shorter gene partitions, but the mean rf-distance among trees from shorter partitions is generally greater then the mean rf-distances among bootstrap trees from longer gene partitions . this relationship was also observed in the test  data set , where partitions equal in size to those in the original salamander alignment were created by selecting characters at random from the entire salamander genome. by homogenizing the mtdna characters from the  <dig> gene partitions over a range of partition lengths we were able to evaluate how partition length influences mean rf-distance. the relationship between partition length and the number and distance among bootstrap trees is germane to this work because it begins to shape what we might expect to observe when the rf-distances are plotted as tree landscapes using nldr methods. for example, based solely on the length of a data partition, we will expect to see a greater number of more widely distributed trees from the bootstrap analyses of smaller gene partitions . additional structure or patterns in the ndlr plots will either be attributed to our nucleotide substitution models failing to accommodate the underlying process heterogeneity associated with each of the  <dig> gene partitions or our tree searching methods systematically failing to converge.fig.  <dig> mean rf-distances by mtdna gene. mean rf-distances plotted against the length  of each gene partition for each set of taxa


fig.  <dig> phylogenetic landscape of shuffled versus unshuffled mtdna data. projections of the rf-distances among bootstrap trees from separate analyses of  <dig> mtdna data partitions from within the  the test data set generated by shuffling columns in the original salamander alignment and  the original salamander mtdna alignment  <cit> . colors correspond to the bootstrap trees found by each separate data partition analysis




the bootstrap analysis, as applied in phylogenetics, uses randomly selected columns from the original multiple sequence alignment to generate new character matrices, which are then used to infer optimal tree topologies  <cit> . if all, or most of the characters contained within a given gene partition support the same phylogeny, then each bootstrap replicate data set will unambiguously support a single tree topology. this level of congruence rarely occurs in real data sets, however. bootstrap analyses typically result in a group of related trees, which in effect represent a confidence interval around the evolutionary history of that gene partition  <cit> . by concatenating all trees from each of the separate bootstrap analyses, calculating their pairwise rf-distance, and projecting these distances in  <dig> or 3d space we can at once see the relationship among the trees from the separate gene partitions  <cit> . if our nucleotide substitution models and tree searching methods worked perfectly then the bootstrap trees from each mtdna gene partition would mostly overlap because the gene partitions are physically linked on the mtdna genome and therefore must share a common history. it is generally accepted that our models and methods are not perfect  <cit> ; therefore, it should come as no surprise that trees from within a given bootstrap analysis are more similar to one another than are trees from different bootstrap analyses and a nldr method should clearly show these clusters of related gene trees . failure of an nldr method to show clusters of related trees could mislead practitioners to believe that their choice of tree reconstruction method correctly compensated for process heterogeneity. the ability of the nldr methods to preserve these sub-clusters of related rf-distances contained within the concatenated bootstrap trees will, in large part, be used as the means by which we visually evaluate the success of an ndlr method.

intrinsic dimensionality of tree-to-tree distances
we used four different methods to estimate the intrinsic dimensionality of each of the three tree-to-tree distance matrices generated from the concatenated bootstrap analyses. our estimates of the intrinsic dimensionality for each data set varied from between  <dig> to 15-dimensions . these estimates show that the use of 3d projections is warranted for viewing the mtdna tree landscapes in order to minimize loss of information and to preserve the relationship among bootstrap trees suggested by the rf-distances. plotting the cca stress as a function of dimensions shows that using more than  <dig> dimensions does very little to improve the fit of the projected distances with those obtained using the rf-distance metric . while most of the estimates of intrinsic dimensionality suggest that viewing the distances in  <dig> and 3d will result in some distortion of the relationship among the rf-distances, it is less obvious as to whether this distortion can impact our interpretation of how the trees are related. for example,  <dig> and  <dig> dimensions may adequately characterize the relative positions of clusters of gene trees to one another, while perhaps failing to more completely capture the relationship among the trees within each sub-cluster. furthermore, other methodological considerations may be of as much or greater significance concerning the preservation of the original rf-distances. for example, we will demonstrate in the next section, that the choice of nldr method can also significantly influence how trees are displayed in  <dig> and 3d and the choice of nldr method may do more to distort or obscure the true relationship among large sets of trees than the number of dimensions into which they are projected.table  <dig> dimensionality of tree-to-tree distance matrices

the intrinsic dimensionality of each tree-to-tree distance matrices, where nn nearest neighbor estimator  <cit> , cor correlation dimension  <cit> , ml maximum likelihood estimator  <cit> , and “visual inspection” is based on results from fig.  <dig>  <cit> 


fig.  <dig> dimensionality of tree space. the cca stress plotted against the projection dimensionality for each of the three mtdna alignments




nonlinear dimensionality reduction
in order to better understand the effect of each constituent component of the nldr analysis, the results from  <dig> of the  <dig> combinations of cost functions and optimization algorithms were evaluated. the combination of majorization with cca and gauss-seidel with cca were not included for the reasons discussed in the additional file 1: appendix. the combination of sgd with the kruskal- <dig> stress function was replaced by kruskal- <dig> with a fixed-step classical deterministic steepest descent iteration, i.e., the step was not chosen to guarantee a true descent step, for the reasons also discussed in the additional file 1: appendix. this iteration is called linear iteration in  <cit>  and will be so-called in the following discussions and figures. each combination of cost function and optimization algorithm was run  <dig> times for each data sets using a different set of initial conditions. like phylogenetic tree searching, nldr is non-convex. by including results obtained from multiple starting points we are able to measure how results vary from one iteration of the same analysis to the next. we report the means and standard errors calculated using all ten iterations. lastly, and perhaps most importantly, we visually compare the resulting projections to understand the extent to which the different nldr methods influence our interpretation of the tree landscapes. for example, if a projection is deemed a better representation of the rf-distances by one or more of our objective measures, we want to know if it is possible to visually discriminate among the projections.

all of the nldr analyses that we evaluated took between four and 230 min to converge on local minima . our results show that on average the sgd algorithm converges faster than did the other optimization algorithms over all of the cost functions and each of the three mtdna data sets. there is no clear trend among the three data sets as to which of four optimization algorithms converged most rapidly for the kruskal- <dig> cost function. from a practical standpoint, these results are encouraging because they suggests that large data can be projected in 2- and 3d within a reasonable timeframe using the methods discussed herein. furthermore, algorithmic refinements and some recently developed parallel nldr implementations  <cit>  promise to further improve run times and thereby will increase the practical potential of this general approach.fig.  <dig> time to convergence. the average time in seconds it took for each combination of cost function and optimization algorithm used for the nldr analysis of the three mtdna rf-distance matrices to reach convergence. each graph showing the results for the three mtdna data sets is divided into four panes representing four cost functions 




time to convergence is only useful in light of how well each of the optimization algorithms is able to minimize their respective cost functions. for example, majorization took the longest time to minimize the kruskal- <dig> cost function among all the other optimization algorithms that we compared ; however, majorization converged on a value that was as low or lower than most of the other optimization algorithms for each of the three data sets . the normalized and nonlinear mapping raw stress values are nearly identical for each of the optimization algorithms compared  indicating that per unit time the sgd optimization algorithm is more efficient at minimizing these cost functions . the raw stress for cca was not plotted because this cost function contains a weighting function, which is used to preserve the relationship among local distances, but as a consequence makes it impossible to meaningfully compare the raw stress values from one cca analysis to the next. overall, sgd when used in conjunction with cca converged faster than all other combinations of optimization algorithm and cost function .fig.  <dig> minimizing the stress function. raw stress values for three difference stress functions  were plotted for each data set and optimization algorithm




we evaluated the relative performance of each cost function using three measures of goodness of fit. these measures provide a common objective function that can be used to evaluate how well each projection preserves the relationship among the bootstrap trees as suggested by the original rf-distances. we chose to evaluate the projections with the lowest stress value for each cost function no matter which optimization algorithm was used to obtain it. in this way we restricted our comparisons to the best representation of the cost function given the optimization algorithms that were included in this analysis. according to both the 1-nn  <cit>  and trustworthiness  <cit>  measures, the cca cost function best preserves the relationship among all three of the original distance matrices. the cca cost function also ranks highly among the cost functions preserving continuity, whereas kruskal- <dig> ranks lowest among all three data sets. that cca performs well according to all three measures of goodness of fit is not surprising. the rf-distance matrix contains groups or clusters of related distances that correspond to the bootstrap trees obtained from the independent analyses of  <dig> mtdna genes. the flexible weighting function  included in the cca method allows for tearing of the distance manifold  <cit>  such that closely related rf-distances are drawn closer  without drawing more distant pairs closer  to one another compared to how they are represented in the original distance matrix.

the choice of cost function and optimization algorithm used to project the rf-distances in  <dig> and 3d space significantly impacts the visual interpretation of the projected rf-distances. more importantly, it was not necessary to visually compare extreme cases to detect these differences. for example, fig. 6a was created by using cca plus sgd and represents the best projection of the mammal mtdna bootstrap trees as judged by all three of the goodness of fit measures . changing the optimization algorithm for the cca cost function to that which performs second best  we see a loss of continuity among related groups in fig. 6b for trees that are tightly grouped in plot a . furthermore, it is impossible to discriminated among some groups in fig. 6b because many of the points are superimposed. projections of the second best performing cost function and the sgd optimization algorithm , as judged by the goodness of fit measure, also gives a picture that lacks continuity when compared to fig. 6a.fig.  <dig> phylogenetic tree landscape by nldr method. projections of rf-distances representing the concatenated bootstrap trees from  <dig> mammal mtdna genes. colors represent mtdna bootstrap trees. projections correspond to following cost function and optimization algorithm; a cca plus sgd, b cca plus mcmc, c nlm plus sgd, and d an alternative minima of cca plus sgd


fig.  <dig> goodness of fit. the mean goodness fit  for ten initial conditions plotted for each cost function and data set




while the choice of optimization algorithm and cost function make a noticeable difference in the projection of mtdna distances, different initial conditions for a given method are difficult to discern. for example, fig. 6a and d represent two non-equivalent projections using the same cost function and optimization algorithm but a different set of initial conditions. we used the ordinary procrustes analysis to characterize the dissimilarity among the ten projections obtained by using different initial conditions for a given combination of cost function and optimization algorithm. the procrustes analysis leaves us with differences that have been adjusted for translation, rotation, and scale. two projections are considered non-equivalent if the residual of procrustes analysis is very large relative to the others. for the cca plus sgd projections nine of the  <dig> projections were considered equivalent by this method and those that differed are shown as fig. 6a and d. while fig. 6a and d are considered to be non-equivalent by the procrustes, the clusters of related gene trees within each plot are still well defined and also occupy similar positions with respect to one another especially when compared to the two other projects, wherein a different cost function  and a different optimization algorithm  were used.

comparing tree landscapes
hillis et al.  <cit>  did a thorough job demonstrating a variety of applications for phylogenetic trees projected into a 2d space. in their exposition, they also briefly mentioned the idea of using ellipses to create 95% confidence intervals around projected trees obtained by bootstrap and bayesian analyses. they did not implement this approach, however, citing potential interpretation problems related to mapping high-dimensional data into 2-dimensions and concerns about the statistical interpretation of these projections. we share their concerns, but also see the potential utility of an approach that attempts to visually relate a priori defined set of points in an nldr projection. to this end, we implemented a method that encloses sets of points representing bootstrap trees from gene partitions in a convex hull. visually grouping related trees in a convex hull can make it easier to interpret the significance of the size and relative position of clusters of trees in a single tree landscape and can also facilitate comparisons of multiple tree landscapes generated from different sets of taxa with similar data partitions . in order to see “interior” clusters we devised a method for eliminating outlying trees from the set of points used to create the convex hull and for drawing clusters apart to reveal clusters located near to the graph origin . a point was considered an outlier and removed from a set of points if the variance of the distance among all points decreased by an arbitrary threshold value  when the point was excluded from the variance calculation. changing the threshold value will determine how aggressively points are eliminated from a set of points. convex hulls are moved away from the origin of the graph by translating each convex hull in a parallel manner in the direction from the center of all points to the center of the convex hull. spreading convex hulls out in this way will change some relationships among the clusters within a single graph; however, different plots can still be compared usefully if the convex hulls are moved uniformly apart. this approach addresses the misgivings of  <cit>  by displaying results in 3d to minimize distortion and by avoiding a strict statistical interpretation of the convex hulls.fig.  <dig> mtdna genes in 3d convex hulls. the distribution of mtdna gene trees for  mammals and  salamanders 3d convex hulls covering. clusters of gene trees are represented by 3d convex hulls


fig.  <dig> mtdna genes in 3d convex hulls with seperation. 3d convex hulls cover points representing bootstrap trees obtained from separate analyses of the  <dig> mtdna data partitions from within the fishes mtdna alignment. plots were made by projecting rf-distances of the concatenated bootstrap trees using cca plus sgd. convex hulls in plots a through d were progressively moved away from the graph origin to reveal more of the clusters located near the graph origin




CONCLUSIONS
correctly characterizing phylogenetic tree-space by dimensionality reduction methods is critical if this approach is to be of value as an interpretive or a diagnostic tool for large sets of trees obtained from whole genomes or from multi-gene data sets. we found that different dimensionality reduction methods can significantly influence the appearance, and hence interpretation of 2- and 3-d projections of tree-to-tree distances. in particular, among the cost functions and optimization algorithms that we evaluated, we found that cca and the sgd method gave the best representation of the original tree-to-tree distances as indicated by the trustworthiness and continuity metrics. we also demonstrate by using several different estimates that the intrinsic dimensionality of three mtdna tree-to-tree distance matrices is greater than two, and therefore using 3d to view these data is warranted in order to minimize distortions related to projecting high dimensionality data into a lower dimension. tree landscapes obtained from analyses of alignments composed of very different sets of taxa but similar data partitions share some striking similarities. these similarities are easiest to observe when outliers are removed and related points are covered by a convex hull. the results obtained in this study establish that the choice of nldr method can significantly influence our interpretation of tree landscapes. perhaps more importantly, this work establishes the necessary framework for the application nldr to be used in the evaluation of tree reconstruction methods, nucleotide substitution models, and other tree-to-tree distance matrices [e.g., nearest neighbor interchange  <cit> , quartet  <cit> , subtree prune and regraft  <cit> , branch score  <cit> , geodesic  <cit> , match  <cit> .

additional file

additional file 1: appendix. detailed description of the intrinsic dimensionality measures, nonlinear dimensionality reduction methods, and the goodness of fit measures . 




abbreviations
1nn <dig> nearest neighbor

2d2-dimensional

3d3-dimensional

ccacurvilinear components analysis

coiiimitochondrial cytochrome oxidase iii

corcorrelation dimension

krukruskal-1

mcmcmarkov chain monte carlo

mdsmultidimensional scaling

mlmaximum likelihood

mtdnamitochondrial deoxyribonucleic acid

nldrnonlinear dimensionality reduction

nlmnonlinear mapping

nornormalized

rf-distancerobinson-foulds-distance

sgdstochastic gradient decent

sprsub-tree pruning and regrafting

