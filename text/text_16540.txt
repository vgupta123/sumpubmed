BACKGROUND
transposable elements  are genomic sequences that either directly encode the mechanism of their own duplication within a genome, or that appropriate a protein product from the cell or another transposable element to achieve mobility. these "jumping genes" share features and origins with viruses, though they differ from viruses in that they are usually unable to leave one cell to affect another  <cit> . transposons were first characterized in  <dig> by barbara mcclintock, who won a nobel prize in  <dig> for the discovery of transposons in the maize genome - of which 78% is currently identified as transposable element content  <cit> . transposons have been identified in the genomes of almost all living organisms, and are especially prevalent in mammalian genomes  <cit> . at least 45% of the human genome is derived from transposable elements  <cit> , as is least  <dig> % of the mouse genome  <cit> . another large fraction of mammalian genomes is probably transposon-derived, but has mutated to an extent that it is unidentifiable by the current approaches  <cit> .

improving transposon modeling and detection has potential impact in medicine as well as in basic molecular bioscience. transposons are implicated in many human diseases, including hemophilia, muscular dystrophy, leukemia, breast cancer, and colon cancer  <cit> . the majority of transposons in eukaryotic genomes employ the same retrotransposing mechanisms used by retroviruses such as hiv, and many human viruses are derived from transposons   <cit> . piriyapongsa and colleagues experimentally characterized  <dig> transposon-derived human micrornas  that participate in the regulation of as many as thousands of human genes  <cit> . many human genes and pseudogenes have been identified as being either derived from transposons or created by transposon activity  <cit> . one quarter of experimentally-identified gene promoters in mammals contain transposon-derived sequences  <cit> . transposons are used to manipulate genome regulation in experimental settings and have potential applications in human gene therapy  <cit> . transposon/gene location and orientation correlation suggests a positively-selected role for transposons, and has been used to enhance gene-finding algorithms  <cit> .

this work was inspired by an earlier investigation into improving the performance of repeatmasker   <cit> , the popular transposon detection software, by using position-specific score matrices . because most transposons have been neutrally evolving for many millions of years with little selection pressure, they can be difficult to differentiate from the background distribution of genomic sequence. repeatmasker currently uses a variant of repbase  <cit> , a library of consensus sequences , and an assortment of  score matrices representing different transposon ages and target sequence isochores. these score matrices are passed into the crossmatch  <cit>  or wu-blast  <cit>  software packages to search a target genome for hits against each consensus sequence. the consensus-and-score matrix approach can be viewed as a simple model of the variation seen in transposon-derived sequences. using position-specific score matrices relaxes the model's constraint that substitution patterns remain constant across the positions of the transposon. as such the use of profiles can be seen as a first step towards a more comprehensive approach to modeling the variation observed among elements of a transposon family.

the process of creating a profile or a consensus sequence from a set of sequences known to belong to a sequence family begins with the creation of a multiple alignment via insertions of gaps into each sequence so that the residues of the sequences line up. a score matrix is used to evaluate the possible ways of creating these alignments, with preference given to exact matches or chemically feasible mismatches, and to contiguous gaps. to create a consensus or profile, each column of the multiple alignment is first examined for the number or fraction of gaps, to determine if the column should be considered part of the profile , rather than an insertion column. all of the non-insertion columns are tabulated for their content of each residue, for instance the number of adenine , cytosine , guanine , and thymine  nucleotide bases. when constructing a profile, the relative frequencies of residues in a column are used to create a score matrix reflecting the column's divergence and bias .

the reliance on a single multiple alignment is problematic, especially since transposon sequences can be very poorly conserved. there are several popular multiple alignment programs, including clustalw  <cit> , t-coffee  <cit> , muscle  <cit> , and mafft  <cit> . it has been widely reported that these programs produce different multiple alignments from the same input set, and that the difference is greatest when the sequences are most diverged  <cit> .

use of profile hidden markov models   <cit> , probabilistic models of sequence families, allows simultaneous incorporation of all of the possible multiple alignments into the determination of a profile model. the hidden markov model , initially introduced in the late 1960s, is a powerful statistical modeling tool widely adopted in such areas as signal processing, speech recognition, and time series analysis  <cit> . the method was first applied to modeling biological sequences by churchill in  <dig>  <cit>  and today is popular in biological sequence modeling  <cit> . hmms assume that the distribution of an observed data point dτ at time τ ∈  <dig> .k depends on an unobserved  state hτ. the general form of an hmm can be written as   

where eτ and tτ are probability distributions, and the hτ form a markov chain. in this article we will follow the nomenclature of  <cit>  and refer to eτ  as the "emission" distribution and to tτ  as the "transition" distribution. figure  <dig> depicts the dependence structure of an hmm.

one prominent instance of hmms in sequence analysis is the profile hmm. profile hmms model the residues of a genomic sequence as the observed data , with each time τ associated with exactly one residue dτ. the unobserved states of the markov chain represent the unknown correspondence between the observed sequence's residues and the positions of the ancestral sequence from which the observed sequence has derived by a process of mutation, deletion, and insertion. the hidden data can be viewed as the alignment between the sequence and the model. the states of the markov chain in a profile hmm correspond to ancestral positions .

an important feature of the hmm is the existence of a tractable algorithm, baum-welch, for finding maximum-likelihood and maximum a-posteriori values for its parameters  <cit> . the baum-welch algorithm is an expectation maximization  algorithm for hmms  <cit> . baum-welch iteratively improves the parameters of the distributions in equations  <dig> and  <dig> 

we recently introduced two variants of the baum-welch  algorithm  <cit> : conditional baum-welch  and dynamic model surgery . the new variants take advantage of special constraints in the profile hmm transition kernel, and can be applied to other hidden markov modeling contexts in which the transition kernel is similarly constrained. we showed that these variants can escape some of the local optima that infamously entrap the baum-welch algorithm when it is applied to profile hmms. the phenomenon of local optima is particularly problematic in the context of dna profile hmm models, which have fewer residues than amino acid  models. while profile hmms are widely used to model protein families, their use for dna has been constrained by this limitation.

cbw  <cit>  is an alternate procedure for parameterizing profile hmms. it depends on the same update procedure as bw, but iteratively applies this procedure to conditional parameter distributions rather than to the complete joint likelihood/posterior. more precisely, cbw updates the parameters specific to a position as a group, holding all other parameters fixed, one position at a time. non-position-specific parameters are then updated together, holding fixed the position-specific parameters, and the process is iterated until convergence. as bw is an example of the em algorithm  <cit> , cbw is an example of the expectation conditional maximization  algorithm  <cit> . like baum-welch, cbw is guaranteed to converge to a local maximum.

in the context of the profile hmm, the cbw algorithm is no less computationally efficient than the bw algorithm . this efficiency is possible because the algorithm uses the same dynamic programming recursions as baum-welch, and most of these values do not need to be recomputed when the parameters affecting only one model position are altered.

even with the improvements garnered by conditional maximization, the cbw algorithm often converges to local optima that are far from the global optimum. through exploratory analysis using simulated data and profile-profile alignments, we have found that these locally optimal profile models often align with the correct profile  after local shifts of the model positions.

we thus designed the dynamic model surgery   <cit>  algorithm to detect misalignments and correct them. positions that are underutilized are removed, while positions at which there are a high occurrence of insertions are duplicated. the effect is dramatic: after convergence the profiles have a much higher log-likelihood than they do without the misalignment correction.

previously we found that under the controlled conditions of simulation studies, the new algorithms outperform baum-welch alone, with the best results achieved when cbw and dms are used together  <cit> . in those simulation studies, summarized below, we found that for profile hmm models of dna sequences the improvements were most dramatic when the sequences were between  <dig> and  <dig> percent conserved. our present goal is to apply the methods to real mammalian transposon sequences of the oldest detectable age, to determine if the new approaches provide an improvement in that context. our hypothesis is that the combination of the cbw and dms algorithms will provide a significant improvement over bw. as described below, we find that our hypothesis appears correct for transposon models trained using transposable elements found in the human genome. as in the simulation study, we found that the new approaches perform better than the standard bw algorithm.

RESULTS
in  <cit> , we demonstrated the effectiveness of the conditional baum-welch  and the dynamic model surgery  algorithms using simulated data. under the controlled conditions of the simulation study it was possible to evaluate the algorithms' performance relative to the true model from which the data were generated. here we provide a brief summary of those results, and compare them with results from a real biological data example: modeling the mammalian interspersed repeat  family of transposons in the human and mouse genomes.

simulation study
our goal for the simulation study was to evaluate the relative benefits of each algorithm across a range of conservation levels. we randomly generated profile hmms for each of the seven conservation levels in the range from . <dig> to . <dig>  from each of these "true" profile hmm models we drew a set of sequences; by design the set of sequences drawn from a profile with conservation level . <dig> are about 50% conserved . we then used these training sets to estimate the parameters of a profile hmm, and compared these estimated parameters to the parameters of the "true" model. the results we provide here compare the log-likelihood of the training sequences across each combination of algorithms . we also generated another set of sequences from the same "true" profiles and used these for cross-validation. since the algorithms are deterministic but depend on the starting values of the parameters, we used the same random "starting" profiles for every algorithm.

the simulation study was designed to provide a simple setting in which to compare the methods. it did not capture the full complexity of real biological sequences. further simulations could be performed to better reflect the natural biases in sequence residues, the transition/transversion biases in dna substitution matrices, and other features of genomic sequences that might complicate the profile hmm parameter estimation process. our intention is to continue exploring both simulated and real application environments for profile hmms.

transitive transposons
our goal for the transposon study was to determine if the same pattern of improvement is seen for profile hmm models of sequences generated by natural biological processes as that seen with data simulated from profile hmms. real genomic sequences are generated by a complex set of biochemical processes that are never fully representable in a mathematical model, and it is possible that our simulation results fail to capture an important feature of real genomic data.

we aim to build profile hmm models to identify transopon elements in the mouse and human genomes. due to the shorter generation time in mice, transposons are on average  <dig>  times more diverged in the mouse genome than in the human genome, and are thus more difficult to identify  <cit> . comparative genomics can be used to identify transposons in one genome by homology with those found in another genome. using profile hmms, we hope to identify transposon elements in the mouse and human genomes that are not identified by repeatmasker. we then use genome-genome homology with known elements in the other genome to confirm our findings.

the mammalian interspersed repeat  family, at between  <dig> and  <dig> percent conserved, is one of the most diverged transposable element families identifiable in the human genome by current techniques. we put together a training set of about  <dig> sequences of mir elements found in the human genome by repeatmasker. we used these sequences to train profile hmms  from a variety of random start profiles, and then evaluated the methods by searching for new elements in target regions of the mouse and human genomes known to be mutually homologous. we restricted the size of the training set to more easily compare the methods, though in practice we will use all available data when building models for deployment.

in addition to calculating the number of elements found by each profile hmm training procedure that are homologous to known elements on the other genome, we also evaluated the procedures using a measure of the quality of the alignments. in particular we are interested in the quality of what we deem the "transitive alignments," the alignments between the known elements on one genome and the newly found elements on the other genome. we measured quality by the number of exact matches in each transitive alignment, plus the number of transitions  and pyrimidine  nucleotide sets, as opposed to transversions, which are the other, less probable mutations).

to illustrate how the transitive alignment metric works, consider the human genome mir element at hg <dig> chr10: <dig>  241- <dig> . figure  <dig> depicts the pairwise alignment between that element and the human genome region on which it is found.

the region of the mouse genome corresponding to the mir element, according to the ucsc genome-genome alignment, is the complement strand of hg <dig> chr13: <dig> , 994- <dig>   <dig>   <dig>  one side of the rm alignment extends beyond the genome-genome alignment. the multiple alignment in figure  <dig> shows a new element on the mouse genome that we found using a profile hmm, in the context of the mouse-human homology.

from this transitive pileup multiple alignment, pairwise alignments between the new "hit"  on the mouse genome and the known element on the human genome are implied . these are what we refer to as "transitive alignments." the transitive alignment between the new element and the human mir element is depicted in figure  <dig> 

transitive alignments contain many more gaps than do non-transitive alignments. the majority of the gaps are flanking gaps; internally, these alignments are quite good. we have found that the boundaries between the flanking gaps and the internal alignments are usually defined by dot-gaps, indicating that there is a gap in one of the genomes relative to the other. these genome alterations can force one hit to terminate while the other continues.

our comparison metric is the number of matches in the transitive alignments between the hits we find on one genome and the rm hits on the other genome, plus the number of transitions. for instance in the transitive alignment depicted in figure  <dig> there are  <dig> matches and  <dig> transitions . in the  <dig> fragments of homology between mm <dig> chr13: <dig> ,000- <dig> , <dig> and hg <dig> chr10:1- <dig> , <dig>  repeatmasker finds  <dig> mir elements , of which  <dig>  transitively align. these  <dig> rm-rm transitive alignments have  <dig> matches, plus  <dig> transitions, for a total of  <dig> 

all three new algorithm variants show significant improvements over baum-welch. the same pattern of improvement is seen as in the simulation study: cbw with dms is the best combination, cbw alone provides an improvement over bw alone, and the bw & dms combination provides more improvement over bw than does cbw alone. in this case the differences among the three new combinations is only slight, and is within the margin of error.

the high variability of the baum-welch results reflects the higher tendency of that algorithm to get stuck in local optima. the dms algorithm was more difficult to apply to this context than to the simulated data because these data show many more deletions than insertions. to accommodate this, we had to adjust a tuning parameter that governs the threshold at which positions are inserted or removed. while we put some effort into finding the parameter value that optimized the model length, the resulting models had higher length variability than models in our simulation study. the hmmer and sam packages required tuning of analogous parameters. details are provided in the methods section.

the comparison to repeatmasker and to existing profile hmm packages indicates the promise of the new approaches. the muscle-hmmer combination seems to improve upon repeatmasker, but the number and quality of transitive alignments for all of the methods in figure  <dig> are much higher than those in figure  <dig> 

CONCLUSIONS
profile hmms are a model-based alternative to the ad-hoc multiple alignment approaches common for sequence family modeling. since different multiple alignment software packages can yield very different alignments, use of the profile hmm approach is more robust than relying on a single multiple alignment to construct a consensus or a position-specific score matrix.

while profile hmms are widely used for protein family modeling, and databases of profile hmms exist for protein sequence families, including the popular pfam  <cit>  and superfamily  <cit>  databases, profile hmms have not generally been embraced as a tool for modeling dna sequence families. both of the major software packages for building and using profile hmms explicitly focus on protein family modeling, though they retain some support for dna. the baum-welch algorithm, which has problems with local optima in the context of protein sequences, is even more prone to premature convergence when there are four residues instead of twenty. our hope is that the algorithmic contributions described here and in  <cit>  will open new possibilities for applications of profile hmms to the dna domain.

the simulation study and transposon study both demonstrate that the conditional baum-welch algorithm is an improvement over the baum-welch algorithm, as is the dynamic model surgery algorithm. the simulation study demonstrated a greater improvement from the dms algorithm than from the cbw algorithm, with the best improvement when the algorithms are used together. in the transposon study, each of the new algorithm combinations provide a large improvement over bw alone, but we found little discernible difference among the new approaches. the dms algorithm always converged on a model length near the repeatmasker consensus length, though it required tuning of a threshold parameter to do so. the hmmer and sam packages also require parameters to be tuned to control the model length, and these packages performed relatively poorly even after tuning.

we have argued that improving transposon modeling is a worthwhile endeavor, and have shown that, by one metric, the new methods do improve upon the transposon-finding abilities of existing profile hmm parameterization methods. the new algorithms overcome one of the major impediments to the application of profile hmms in the transposon modeling problem: that of poor parameter estimation. already new repeat elements have been identified using these new techniques, and we will work with the transposon research community to develop the methods further.

