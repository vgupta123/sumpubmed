BACKGROUND
enzymes are highly specific and efficient biocatalysts. it is of great scientific and practical interest to alter the function and stability of enzymes, or even generate them de novo from first principles  <cit> . due to our limited understanding of the structure-function interplay, most of the successful enzyme design examples have been achieved by "directed evolution", i.e. by performing several rounds of random mutagenesis in combination with efficient screening or selection systems to isolate beneficial variants  <cit> . however, the complexity of the problem calls for computational methods that are aimed at guiding enzyme design experiments, and during the last years we have seen significant progress along these lines. the first computer-based approaches described were dezymer  <cit>  and orbit  <cit> . since then, novel program suites have been developed  <cit> , and a few successful experimental enzyme designs have been based on computational methods  <cit> . only recently, the successful design of kemp elimination catalysts  <cit>  and of retro-aldol enzymes accommodating a multistep reaction  <cit>  have been reported. despite this progress, computational enzyme design is far from being applicable to any arbitrary problem.

why is this the case? the structural basis of enzyme catalysis is often not well understood, which makes it difficult to define the critical optimization criteria in a specific enzyme design problem  <cit> . factors that might be relevant and often mutually interdepend are binding of the substrate and transition state of a given reaction, release of the product, conformational flexibility or dynamics, and pka values of catalytic residues. considering protein dynamics is still beyond the scope of current optimization methods. however, ligand-binding  <cit>  and adjusting pka values of active site residues  <cit>  can be integrated into the optimization process. additionally, a statistical analysis of homologous proteins might help to incorporate factors that cannot be considered explicitly. multiple sequence alignments  have already been used for consensus design approaches  <cit> . ensemble-based scoring functions  <cit>  and knowledge-based potentials  <cit>  turned out to be valuable approaches for deducing additional characteristics from larger datasets.

along these lines, we designed the computational enzyme design program transcent. in order to focus on the most relevant determinants, we restrict the design goal to a well defined task: this is the transfer of an active center from one enzyme  to a second protein  whose backbone remains fixed. the novel approach implemented with transcent is the concurrent consideration of four constraints during modeling. these are protein stability, ligand binding, pka values of active site residues, and structural features of the active site described by knowledge-based potentials. the program comprises four modules, each of which processes one constraint. we show that each module contributes to the quality of the 3d model, and that the combination of all modules performs best. as a first application, we present and discuss models transferring active sites of 8-barrels, which form a frequently encountered and catalytically versatile enzyme family  <cit> .

RESULTS
prerequisites and conventions
transcent supports the transfer of an active site from one enzyme  to another protein backbone . we focused on design problems that fulfill the following prerequisites: 1) the 3d structure of both the template and the scaffold are available with adequate quality . 2) the pose of the ligand-template complex is known. 3) the active sites of the scaffold and the template can easily be superimposed. 4) for the template, the sequences of at least  <dig> homologous proteins are available, allowing the inference of a well populated msa.

moreover, in order to reduce computational complexity of the algorithm, the following assumptions and restrictions are also effective: 5) the backbone of the scaffold and the position of the ligand are kept fixed in 3d space during optimization. 6) only side chain conformations of a backbone dependent rotamer library  <cit>  are considered. 7) the pose of the ligand as observed in the template is assumed to be the relevant one for catalysis .

note that the above limitations are either related to the precision required for reliable predictions  or could be circumvented by combining transcent with existing programs like rosettamatch  <cit>   or by computing transition states  <cit>  . computational complexity imposes conditions  <dig> and 6; for many proteins condition  <dig> can easily be accomplished due to the abundance of completely sequences genomes.

during the design process, residues are grouped with respect to their distance from the ligand. we name residues, which have to the ligand a distance of at most  <dig> Å, the active center act_cent. act_cent is surrounded by a shell shell_ <dig> consisting of residues having a distance between  <dig> Å and  <dig> Å. all other residues belong to shell_ <dig>  the central shells are larger than those used elsewhere  <cit>  in order not to miss relevant residues. in the design phase, the backbone of the scaffold has to be decorated with side-chains. residues belonging to act_cent will be redesigned; residues of shell_ <dig> will be repacked to flexibly embed the amino acids constituting act_cent. for shell_ <dig>  transcent keeps residues and side chain conformations as found in the scaffold. altogether, this selection of constraints is a compromise of speed and precision by allowing a flexible modeling of the active site and the conservation of remote residues, which are presumably less relevant for catalysis.

a framework for enzyme design
a typical protein design program consists of three elements  <cit> . these are a modeling unit, which generates the atomic details of a protein model, a unit that evaluates the quality of a model via an energy function, and an optimization unit that directs the design process to find low energy configurations. a state-of-the-art program for protein modeling is rosettadesign  <cit> , which predicts an optimal sequence for a given backbone and comprises the above mentioned three elements. we utilized rosetta as a framework for transcent, i.e. we did not alter the modeling and optimization unit. however, we extended its energy function to include features relevant for enzyme design. the novel energy function consists of four terms, which are computed by separate modules. these are related to protein stability , ligand binding , knowledge-based potentials , and pka-values . in the following, these modules are described in detail.

protein stability: st-module
rosetta's built-in energy function generates sequences to optimize protein stability by combining terms for van der waals interactions, hydrogen bonds, solvation, a knowledge-based pair-wise potential that accounts primarily for electrostatics, and a score derived from the frequency of rotamers deposited in a library. the outcome of many studies has demonstrated the excellent performance of rosetta for predicting stable proteins  <cit> . therefore, to assess the stability of a protein model, we decided to use rosetta's approach and named the corresponding energy term est:

  est=∑i=1ne+∑i=1n∑j=i+1ne 

est is the sum of all self-energies e and pairwise energies e for all residues i and all residue pairs i, j of a 3d model  <cit> . in order to increase speed, rosetta stores pre-calculated partial results of this energy term in tabular form. the st-module accesses this table during the optimization process. as an alternative to rosetta's approach, a different energy function like the one implemented by egad  <cit>  might be utilized for the st-module.

ligand binding: lb-module
a prerequisite for catalysis is substrate binding. since many of the x-ray structures of the template enzymes do not have the true substrate bound but a substrate analogue/product/product analogue, we termed this module ligand-binding module. during modeling, three constraints have to be considered. these are 1) the positioning of the ligand, 2) ligand conformation and 3) adequate interactions of the ligand with the atoms of the scaffold making up the binding site. transcent expects a specification of the ligand position and its conformation as input. it is the task of the lb-module to optimize the interaction of the active site with the ligand. for this purpose we utilized drugscore, which is a knowledge-based scoring function for protein-ligand interactions  <cit> . based on this potential, the lb-module computes a score elb:

  elb=∑i=1nsdrugscore 

elb is the sum of drugscore energies determined for the interaction of ligand atoms with residues of the model.

knowledge-based potentials: kp-module
for modeling enzyme function, it is crucial to parameterize all relevant aspects of the active site. however, frequently it is unclear, which details of a protein structure are relevant for catalysis. in such cases, the usage of knowledge-based potentials is a proper method of including information given implicitly by protein structures or sequences  <cit> . we utilized this approach to determine type and location of catalytic active residues and those residues that interact with the ligand by analyzing residue conservation and networks of hydrogen bonding .

a prerequisite for the determination of knowledge-based potentials is a sufficiently large number of structures that can be exploited for statistical analysis. however, for enzyme design the number of highly resolved structures is too low in most cases. in order to increase the number of samples, we created homology models, which we utilized as a surrogate. modeller  <cit>  was fed with homologous sequences originating from the respective pfam  <cit>  entry to which the template belongs. we only used highly similar sequences during homology modeling: for residues constituting act_cent, sequence identity with the template had to be > 40% and the average t-coffee core index  <cit>   had to be >  <dig> . it is known that composition and 3d arrangement of active sites are generally highly conserved. therefore, one can expect high precision for the predicted arrangement of residues participating in catalysis and may use the models alternatively to known structures. using a superposition of these models and known structures, for each hydrogen bond involving ligand atoms, its variation in 3d position was determined and utilized to parameterize shape and location of an ellipsoid constituting an individual probability density function . these pdfs were transformed to knowledge-based potentials  which formed the basis for the computation of the energy term ekp. figure  <dig> illustrates our approach.

for each residue of an active site to be modeled, a set of atoms put_hb_seti may participate in hydrogen bonds with the ligand; see methods. for an assignment of individual put_hb atoms to kbps, we used the hungarian method  <cit> . in each case, the outcome of an assignment are three sets: hb_ kbp consists of those put_hb atoms and kbps assigned to each other. hb_unlinked contains all put_hb atoms that were not allocated to a kbp, and kbp_unlinked subsumes all kbps, that were not occupied by a put_hb atom. based on this assignment, ekp is computed as:

  ekp = ehb_kbp + ehb_unlinked + ekbp_unlinked 

the three terms score those residues contributing to the related sets; see eq. .

optimizing pka values: pk-module
in many cases, pka values of titratable groups belonging to the active site are shifted. these shifts can be crucial for catalysis if the groups participate in proton transfer steps. therefore, the respective pka values arising in a designed site have to be similar to those found in the template. the level of pka perturbation depends on the local environment of the respective residue. this is why pka shifts impose an additional constraint for sequence optimization. propka  <cit>  is one of the most accurate methods for computing pka values  <cit> . however, although it is also a fast method, we had to further increase execution speed in order to incorporate pka determination into the optimization process. the pk-module computes the energy term epk:

  epk=∑i=1mcons·|pka−pka|λpka 

here, pka is the predicted pka value for residue i of the template used as a reference and pka is the predicted pka value of the corresponding residue in the model. the factor λpka was determined together with other parameters . λpka =  <dig>  turned out to be adequate, which is in agreement with previous recommendations  <cit> . the weight cons is related to residue conservation deduced from the amino acid frequency distribution of an msa of homologous proteins; see methods, eq. . it is  <dig>  for strictly conserved residues and decreases for less conserved ones. the assignment routine of the kp-module was utilized to deduce from the set hb_ kbp those m residues that were considered for pka optimization.

a combined energy function
based on the outcome of the four modules, transcent computes the energy etranscent:

  etranscent =  <dig> ·est + wlb·elb +wkp·ekp·+ wpk·epk 

which is a combination of the above introduced terms. we utilized the outcome of the st-module as reference. therefore, wst is  <dig> . the remaining three weight factors and λpka were determined by analyzing a training set . transcent performed best with wlb =  <dig> ·10- <dig>  wpk =  <dig> , and wkp =  <dig> . etranscent was embedded into rosetta as an alternative energy function. note that individual energy terms of etranscent can be eliminated by setting the respective weight to  <dig> . in the following, we will designate a non-standard combination of modules by enumerating active modules as for example in transcent. in this case, the st- and the lb-modules are enabled and the kp- and the pk-modules are disabled. the term transcent is equivalent to transcent.

training the weights
a common method for in silico training and for benchmarking design algorithms is the recapitulation of native proteins  <cit> , where – for a given set of examples – the concordance of calculated models and the wild-type is evaluated. we selected a set of  <dig> enzymes , which we named enz_test. for training and evaluation, we used two different similarity measures, both of which assess the correspondence of protein sequences of a given model and the native protein. the first one  was the percentage of identical residues; the second one  was deduced from amino acid similarity. both values were determined by analyzing residues belonging to the active centers act_cent. among the proteins of enz_test, the size of active centers varied from  <dig> to  <dig> residues; the mean was  <dig> residues. due to the simulated annealing protocol  <cit>  used during optimization, final models may differ for individual experiments. therefore, we computed for all entries of enz_test  <dig> individual designs each and determined the mean for both similarity measures. in the following, these mean results will be reported.

at first, this approach was used to determine optimal weights required for eq. . different combinations of transcent's modules were used and weights were varied within an appropriate range of values. those weights were identified that gave the highest blosum_scores. the outcome of these computations was as follows:

st-module
in order to assess the improvement gained by combining transcent's modules, we first determined the performance of the st-module on enz_test. the ident_res values varied between 9% and 56%, the mean was  <dig> %; the blosum_scores were between - <dig>  and  <dig> , the mean was  <dig> . the rank correlation of ident_res values and blosum_score values was high with statistical significance , indicating that both similarity measures are equally well suited to evaluate model quality.

lb-module
for the determination of wlb, the lb-module was combined with the st-module. ident_res and blosum_score values had an optimum at wlb =  <dig> ·10- <dig>  in this case, the mean ident_res value was 37% and the mean blosum_score was  <dig> .

kp-module
a prerequisite for using this module is the existence of a sufficiently large set of homologous sequences, which was the case for the  <dig> elements of the subset named enz_testhom. to determine an optimal weight wkb, transcent was used. in this case, both the ident_res values and the blosum_score values did not show a distinct optimum, but ascended a plateau. in order to avoid an overvaluation of the associated potential, we selected wkp =  <dig>  which is the smallest value gaining the plateau. in this case, the mean ident_res value was 48% and the blosum_score value was  <dig> .

pk-module
this module depends on the identification of a specific set of residues accomplished by the kp-module . therefore, enz_testhom was analyzed using the combination transcent. as wkp was set to  <dig> , the contribution of ekp was disabled. performance was maximal for wpk =  <dig> . in this case ident_res was  <dig> % and the blosum_score was  <dig> .

assessing transcent's performance
a central paradigm for evaluating the quality of a design program is the in silico recapitulation experiment introduced above. due to the specific requirements of catalysis, active sites are generally highly conserved. therefore, the comparison of modeled sites with the active site of the wild-type enzyme allows the evaluation of a program's performance. in order to assess the contribution of individual modules to the performance of transcent, eight different combinations of transcent's modules were tested. we generated  <dig> models for each enzyme belonging to enz_testhom. mean ident_res values were determined and plotted. results are summarized in figure  <dig>  the data clearly show that each module contributes significantly to the performance of transcent. compared to an exclusive usage of the st-module, the combination of all four modules resulted in an increase of identical residues from  <dig> % to  <dig> %. a t-test based on ident_res values showed that each addition of a module improved the performance in a statistically significant manner .

one might argue that training and test data were not separated for the above evaluation. however, as we trained only four parameters , the program cannot memorize specific arrangements of active sites possessing hundreds of degrees of freedom each. in order to confirm this argument and to show that our training allows an unbiased determination of the above weights, we performed a leave-one-out test. each of the  <dig> enzymes belonging to enz_testhom was used for validation, while deducing individual weights from the remaining  <dig> enzymes taken for training as described above. by conducting a grid search, optimal weight factors were determined. these factors were then used to measure the performance of each module in combination with the st-module. results were added to figure  <dig>  as can be seen, there is no significant performance difference between related tests. this result indicates that the training set allows a robust determination of the above parameters and confirms that the parameter set generalizes well.

for the above recapitulation test, all residues of act_cent are considered equally important. however, their distance to the ligand and their conservation levels  differ. for a model of higher quality, it is plausible to expect a higher rate of recapitulated amino acids at those positions which are closer to the ligand or which are more conserved. analyzing these two parameters, we further assessed the performance of transcent. different combinations of modules were used to generate  <dig> models each in a recapitulation experiment for all enzymes belonging to enz_testhom. for each residue resi, the distance of the cβ-atom  to the nearest atom of the ligand was determined. in addition, related msas were used to deduce the residue-specific conservation cons; see eq. . modeled residues were grouped according to their concordance with the template. the group "identical aa" contains the recapitulated positions; "different aa" are those ones, where transcent proposed an amino acid not seen in the template. for these two groups, mean distance values were determined and plotted. figure  <dig> shows the results. by utilizing more modules, the distance of "identical aa", i.e. recapitulated residues, decreased steadily from  <dig>  Å when using transcent, to  <dig>  Å when enabling all modules. synchronously, the distance of "different aa" increased from  <dig>  Å to  <dig>  Å. that is, the more modules are used, the higher is the probability that residues located close to the ligand are recapitulated. the right panel depicts the mean conservation as deduced from the respective msas and as expressed by the score cons. by using more modules, the conservation level of "identical aa"  increased, whereas the conservation level of "different aa" decreased. for transcent, the conservation for "identical aa" is  <dig>  and for "different aa" it is  <dig> . for transcent, the mean conservation for "identical aa" increased to  <dig> , whereas the score for "different aa" fell to  <dig> . that is, the more modules are used, the higher is the probability of conserved residues to be recapitulated. in summary, the results indicate that the active sites became more similar to the template by using additional modules. note that the shell defining an active site for transcent is larger than that used elsewhere  <cit> . therefore, it is not implausible, that a certain fraction of these residues differs from the template. this notion is supported by the above results: the mean conservation for the set "different aa", i.e. those residues decorated by transcent with an amino acid not seen in the template is  <dig> . this value indicates a substantial degree of variation even in msas which sample closely related homologs.

recapitulating the oxidoreductase cytochrome p450
in order to exemplify the progress gained by combining transcent's modules, we present the results of an in silico recapitulation which allows best to track the cooperation of the modules. oxidoreductase cytochrome p <dig> 2b <dig>  is – according to the scop classification  <cit>  – an all-alpha protein. in this case, act_cent consists of  <dig> residues. transcent recapitulated  <dig> , whereas the st-module alone recapitulated only  <dig>  of the native residues. figure  <dig> shows an msa of act_cent residues listing the proposals of the various combinations. there are only two positions , which were recapitulated by different module combinations but not by transcent. at position  <dig>  the module combinations transcent, transcent, and transcent proposed the native valine, all other combinations predicted a tyrosine or a phenylalanine. at position  <dig>  only transcent proposed the native lysine, all other combinations proposed an aspartic acid or an asparagine. in contrast, transcent as well as transcent did not recapitulate a group of three arginine residues . transcent and transcent proposed two arginines and a glutamate, which constitute a salt bridge. only after adding the lb-module, all three arginines were proposed. a further indicator for the high quality of the design is the similarity between the model and the native active site: a superposition of the  <dig> recapitulated side chains with the template gave an rmsd-value of only  <dig>  Å for all side chain atoms .

a case study: converting 8-barrels that bind ribulose-phosphate
as a first application, in silico transfer experiments were performed with five enzymes belonging to the scop  <cit>  superfamily of ribulose-phosphate binding proteins, which belong to the frequently encountered and catalytically versatile enzyme class of 8-barrels  <cit> . these were the enzymes phosphoribosyl-5-amino-1-phosphoribosyl-4-imidazolecarboxamide isomerase , the cyclase subunit of imidazole glycerol phosphate synthase , phosphoribosylanthranilate isomerase , indole-3-glycerol-phosphate synthase , and the α subunit of tryptophan synthase . hisa and hisf catalyze two successive steps within histidine biosynthesis, whereas trpf, trpc, and trpa catalyze three consecutive reactions within tryptophan biosynthesis  <cit> . for hisa and hisf, the ligand is n1--5-aminoimidazol-4-carboxamide ribonucleotide . reduced 1--1-deoxyribulose 5-phosphate  is bound to trpf and trpc; imidazole glycerol phosphate  is bound to trpa. note that the ligand of hisa and hisf, which contains two sugar phosphate moieties, is twice as large as the ligands of trpf, trpc and trpa, which contain only a single sugar phosphate group. although the general topology of these five enzymes is similar, the mean rmsd value of related cα-atoms is as high as  <dig>  Å, as determined by tm-align  <cit> . for each of the experiments described below,  <dig> models were generated and mean similarity values were calculated. based on the five enzymes,  <dig> models can be generated; among these are five recapitulation experiments. for the latter cases, the mean number of identical residues in active sites was between 46% and 54%, which is in agreement with the mean performance of the program . for the transfer experiments, the mean sequence identity value was 27%. in the following, several models resulting from recapitulation and transfer experiments are described.

hisa  and hisf  are similar, both with respect to structure and function. the product of hisa is the substrate of hisf; moreover hisf of thermotoga maritima has weak hisa activity  <cit> . three aspartate residues are strictly conserved among and between the hisa and hisf enzymes . these aspartates are either essential or important for turnover of the substrates ; additionally, a conserved threonine residue  influences enzymatic activity  <cit> . transcent's hisf recapitulation restored at their correct position all above mentioned residues as well as cys  <dig>  which is also conserved in the known hisf sequences . this finding indicates that transcent was able to reconstruct the catalytic environment of the prfar ligand guided by the knowledge-based hb potential energy ekp.  for the hisf → hisa transfer . the comparison of the est scores computed for the hisf recapitulation and the hisf → hisa transfer signaled only a minor loss of protein stability.

recapitulating hisa is hindered by insufficient data, as no x-ray structure of hisa in complex with a bound ligand is known. alternatively, we used for the design process hisa with modeled prfar. the complex of hisa and prfar was minimized employing the force field mab as implemented in the program moloc  <cit> . an inspection of the hisa recapitulation and the hisa → hisf design showed that transcent introduced the mutations d8k during recapitulation and d11k in the transfer experiment, thus replacing one of the negatively charged catalytic aspartates by a positively charged lysine residue. the rosetta energy score est indicates a stabilization of about - <dig> kcal/mol caused by this exchange. in addition, the catalytically important thr  <dig> was replaced by leucine during recapitulation. in the modeled binding mode the distances of residues asp  <dig> and thr  <dig> to the ligand are above transcent's global cutoff ; consequently no knowledge-based potential was determined. therefore, amino acids were selected upon stability criteria for these positions. this is why the hisa → hisf transfer sequence contains the exchanges d11k and t171a, although the native hisf residues would match the catalytic residues asp  <dig> and thr  <dig> in hisa. the positively charged lysine side chain of d11k is placed near the negatively charged d176e on the opposite side of the active site, enabling a stabilizing electrostatic interaction. this example indicates that the visual inspection of the models is crucial to detect stabilizing mutations, which may be disadvantageous for catalysis and could be due to parameter settings or limitations of our approach.

trpf catalyses the isomerization of phosphoribosylanthranilate  to carboxyphenylamino-1'-deoxyribulose-5'-phosphate . the x-ray structure of trpf  from t. maritima in complex with the product analog rcdrp is known; the catalytic residues are cys  <dig> and asp  <dig>  <cit> . transcent's redesign of trpf recovered the complete environment around the ligand, including the catalytic residues . for the  <dig> residues making up act_cent, the program proposed  <dig> exchanges;  <dig> are located in loops at the surface. the remaining  <dig> replacements q81n, a103g, l124t, v155i, s135t, and v179a, which are located inside the barrel, are conservative ones. energy minimization of the crystal structure and the model resulted in similar stability and ligand binding energy.

when judging the quality of a model with respect to the successful recapitulation of catalytic residues and calculated ligand binding energy, then the best design of the trpf template was accomplished on the hisf scaffold. it has been shown experimentally that moderate trpf activity can be established on the hisf-scaffold by mutating asp  <dig> to a non-negatively charged residue  <cit> . in our trpf → hisf transfer, transcent proposed the d130h exchange, reconstituting his  <dig> of the trpf template. the essential catalytic residues cys  <dig> and asp  <dig> of the template were introduced in the scaffold by transcent at the correct locations near the ligand by exchanges v48c and t171d . interestingly, asp  <dig> and t171d are both located on β-sheet  <dig> and perfectly superimpose, whereas cys  <dig> is located on β-sheet  <dig>  but v48c on β-sheet  <dig>  this finding demonstrates that transcent can position an essential residue in a different secondary structure element of the scaffold than utilized in the template. this capability is further demonstrated by an arginine interacting with the anthranilic acid moiety of the ligand: in the trpf template, arg  <dig> is located in the long loop after β-sheet  <dig> and its positively charged guanidinium side chain forms a salt bridge with the negatively charged carboxylate moiety of rcdrp . in the hisf scaffold this loop is missing. however, β-sheet  <dig> is elongated and the exchange d11r introduces an arginine with a side chain oriented towards the ligand . in this case, all three terms elb, ekp, and epk are negative, i.e. all constrains demand for this mutation. in summary, the above examples illustrate the interplay of transcent's modules when constructing active sites.

discussion
computational enzyme design methods improve slowly and are far from being perfect
recent work  <cit>  demonstrates that the de novo design of enzymatic activities not found in natural biocatalysts has become feasible. however, the designed activities were considerably lower than those evolved by nature  <cit> , although the computation consumed more than  <dig>  <dig> cpu hours. thus, in spite of these pioneering efforts, we are still far away from an adequate understanding of enzyme structure-function relationship and the de novo design of highly effective active sites.

when developing transcent, we followed a less ambiguous goal by transferring an already existing active site to a different backbone. transcent is based on rosettadesign and comprises modules for the optimization of ligand binding  and pka values of essential residues . using knowledge-based potentials as implemented in the kp-module contributed favorably to the performance of transcent, demonstrating that active site "fingerprints" can be deduced from homology models and structure databases. in order to limit computer time, we concentrated on the most important features of enzyme catalysis, accepting restrictions such as fixed backbones and ligands. however, due to the modular concept of transcent and the structure of its energy function , additional constraints can easily be integrated. along these lines, methods for assessing side-chain conformational entropy have been proposed recently  <cit>  and the latest version of rosetta contains a "backrub"-model introducing local backbone flexibility  <cit> .

approaching specific requirements in enzyme design
the modules of transcent constitute an approach of a multi-objective optimization for enzyme design. here, we utilized a classical energy function ; alternative non-standard approaches have recently been described  <cit> . each of transcent's modules contributes to the quality of the design and has its specific strengths and weaknesses that will be discussed below. in general, the ultimate proof demonstrating success in model building is the biochemical characterization of enzyme function. unfortunately, wet-lab experiments are time-consuming and expensive. therefore, in silico methods must serve as a surrogate especially for the evaluation of algorithms. however, these approaches allow us at best to demonstrate the plausibility of a design, and the assessment rests on the assumption that wild-type sequences are optimal for catalysis  <cit> . trusting in this postulate, we have performed active center recapitulation experiments to estimate the significance of individual modules for the design success. it is the aim of the st-module to guarantee the stability of the modeled protein. when used exclusively, this module recovered on average 30% of the wild-type residues . this value is within expectation for two reasons: 1) active sites resemble more the surface than the core of a protein. for remodeling, a recovery rate varying between 27% for surface positions and 52% for core positions has been reported  <cit> . 2) residues of the active sites often do not contribute to stability, and catalytically relevant residues even tend to destabilize the enzyme  <cit> . therefore, programs focusing on protein stability will fail to recover these residues. the same holds for residues that are constrained due to the shape of the binding pocket. the observation that rosettadesign nevertheless recovered almost one third of the residues in active sites could indicate that the backbone conformation restricts the selection of amino acids at certain positions. differences in rotamer frequencies for backbone independent and backbone dependent libraries support this notion. in addition, recent studies indicate that side-chain rotamers may lock the backbone into slightly different conformations  <cit> .

the lb-module aims at optimizing ligand binding. it uses a rotamer-based version of drugscore allowing transcent to assess the impact of each individual rotamer. however, due to algorithmic complexity, the rotamer-based version, in contrast to the original version, is not able to consider the desolvation effect, as the orchestration of neighboring residues influences the outcome markedly. despite this restriction, the performance data shown in figure  <dig> illustrates that the lb-module contributes significantly to the recapitulation success of transcent.

the kp-module determines the characteristics of the template's active site by deducing potentials without expert knowledge. the module aims at optimizing the protein-ligand hydrogen bond network by arranging donors and acceptors in a way resembling the template. as the module considers residue conservation as well, the selection of amino acids can be carefully balanced. in other programs, relevant amino acids have to be fixed before active site optimization can be started and therefore only residues relevant for catalysis could be considered until now  <cit> . thus, our approach of using knowledge-based potentials adds flexibility not yet implemented in traditional computational design methods. this option requires that the sequences of at least  <dig> homologous proteins must be available to deduce the potentials with acceptable quality. however, the sequencing of hundreds of genomes  <cit>  during the past years ensures that this condition can be fulfilled in most cases.

the pk-module optimizes the electrostatic embedding of residues relevant for catalysis. we introduced this module, because in general it is not sufficient to merely place active site residues in the correct orientation. in addition, often a proper pka value will be essential for a specific residue to act as general acid or base during catalysis. in accordance with this statement, the markedly improved activity of a computationally designed enzyme by means of a directed evolution experiment has been explained with the pka shift of a catalytic site  <cit> . we consider the simultaneous optimization of protein stability and of pka values in a rotamer based protein design framework as a key feature of transcent. however, one might argue that ignoring the effect of ligand atoms onto pka values or an insufficient accuracy of pka value determination by propka could render the results ambiguous. however, a systematic deviation of absolute values has only a minor effect on the outcome of the design, as both the template and the model are treated in the same way. in accordance with this notion, figure  <dig> illustrates the significant positive contribution of the pk-module to the performance of transcent.

transfer experiments will promote computational enzyme design
reflecting the status quo of computational protein and enzyme design, the current potential and limitations of these methods become obvious. for several algorithms, their ability of creating stable proteins by decorating native backbones has been successfully demonstrated  <cit> . therefore, generating in silico a stable protein based on a native fold should be feasible in most cases. for enzyme design, taking this constraint is clearly not sufficient and additional features such as substrate binding  <cit>  and transition state stabilization  <cit>  have to be considered to generate native-like active sites. drafting artificial folds might be regarded as a further step towards de novo enzyme design. however, it is doubtful whether this effort is a necessary prerequisite to establish novel functions or to surpass the proficiency of existing enzymes. for example, when searching a suitable scaffold for the kemp-elimination reaction, more that  <dig>  <dig> locations for putative active sites were identified in natural folds  <cit> . in addition, the observed preference for the ancient and frequently encountered 8-barrel  <cit> , which accommodates enzymatic reactions covering five of the six classes defined by the enzyme commission  <cit> , suggests that computational design can readily use folds evolved by nature. nevertheless, in spite of first promising success cases, our limited understanding of most enzymatic reactions makes de novo design a very difficult task and leaves room for simpler, nevertheless instructive approaches. following recapitulation experiments, the transfer of an existing active site to a new scaffold – as supported by transcent – is the next obvious step to take. both the in silico analysis of generated 3d models as done above, and particularly the biochemical characterization of the designed proteins will identify properties that were modeled in an acceptable or insufficient way. these findings will help to validate or improve in a feedback-loop  <cit>  both transcent as a whole and the individual methods implemented in its modules. thus, transfer experiments will contribute to our understanding of enzyme function and bring forward computational enzyme design.

CONCLUSIONS
transcent is a computational enzyme design program, which predicts mutations in a scaffold aimed at establishing the activity of a template enzyme. during the design process, protein stability, substrate binding, pka values of essential residues and knowledge-based hydrogen bonding networks are considered simultaneously by integrating separate optimization modules. our in silico evaluation demonstrated that transcent can recapitulate a considerable fraction of active site residues for a given template. we will now experimentally test some of the transfer designs in order to further judge the prediction quality of the program. depending on the outcome, we will take advantage of transcent's modular character to incorporate additional features such as backbone and ligand flexibility, which promises a further fine-tuning of the designed active site.

