BACKGROUND
gene expression microarray  technology is a powerful tool for modern biomedical research. it could monitor relative expression of thousands of genes under a variety of experimental conditions. therefore, it has been used widely in numerous studies over a broad range of biological disciplines, such as cell cycle regulation, stress responses, cancer diagnosis, functional gene discovery, specific therapy, and drug dynamic identification  <cit> . although microarray technology has been used for several years, expression data still contain missing values due to various reasons such as scratches on the slide, spotting problems, poor hybridization, inadequate resolution, fabrication errors and so on.

basically, microarray data contain 1-10% missing values that could affect up to 95% of genes  <cit> . the occurrence of missing values in microarray data disadvantageously influences downstream analyses, such as discovery of differentially expressed genes  <cit> , construction of gene regulatory networks  <cit> , supervised classification of clinical samples  <cit> , gene cluster analysis  <cit> , and biomarker detection.

one straightforward solution to solve the missing value problem is to repeat the microarray experiments, but that is very costly and inefficient. another solution is to remove genes  with one or more missing values before downstream analysis, but it is easily seen that part of important information would be lost. hence, advanced algorithms must be developed to accurately impute the missing values.

using modern mathematical and computational techniques can effectively impute missing values. early approaches included replacing missing values by zero, row average or row median  <cit> . recently, many studies found that merging information from various biological data can significantly improve the missing values estimation. liew et al. categorized the existing algorithms into four different classes:  local algorithms,  global algorithms,  hybrid algorithms, and  knowledge assisted algorithms  <cit> .

the first category includes k nearest neighbors   <cit> , iterative k nearest neighbors   <cit> , sequential k nearest neighbors   <cit> , least squares adaptive   <cit> , local least squares   <cit> , iterative local-least-squares   <cit> , sequential local-least-squares   <cit> , and etc. the second category includes bayesian principal component analysis   <cit> , singular value decomposition   <cit> , partial least squares  and so on. the third category includes lincmb  <cit> . the fourth category integrates domain knowledge  or external information into the imputation process. projection onto convex sets   <cit> , goimpute, histone acetylation information aided imputation   <cit> , weighted nearest neighbors imputation   <cit>  and integrative missing value estimation   <cit>  belong to the knowledge assisted approach algorithms. in this study, we did not use the hybrid algorithms and the knowledge assisted algorithms because their programs are not freely available or cannot be easily modified.

in the past few years, several papers have preliminary and objective analyses for the systematic evaluation of different imputation algorithms  <cit> . the weaknesses of these studies are as follows. first, few microarray datasets were used  <cit> . second, few independent rounds of the imputed procedure were performed . third, single performance measure was used  <cit> . here, we present a fair and comprehensive evaluation to assess the performances of different imputation algorithms on different datasets using different performance measures.

methods
datasets
considering that datasets from different species and types of datasets may have different effects on the performance of imputation algorithms, we chose thirteen different datasets from two species , which could be categorized into three different types , for our analyses.

for time series datasets, we selected the yeast cell cycle data  from  <cit> , and shapira04a and shapira04b datasets, which were two different time series datasets  from  <cit> . we also chose the human cell cycle data called human hela from  <cit> . for non-time series datasets, we chose the datasets  from  <cit>  and  <cit> . ogawa's data was retrieved from the study of phosphophate accumulation and poly-phosphophate metabolism and the bohensh was retrieved from follicular lymphoma lymph node and normal lymph node and spleen samples on sh microarrays and the bohenlc was retrieved from  <dig> independent follicular lymphoma lymph node samples on lc microarrays. for mixed type datasets, we chose the datasets from lymphoma  <cit>  , baldwin  <cit> , yoshimoto <dig>  <cit> , brauer <dig>  <cit>  and ronen <dig>  <cit> .

before analyses, we removed all genes with missing values to create complete matrices. and then multiple entries with different missing rates  were randomly introduced into these complete matrices. a brief information of these datasets is presented in table  <dig> 

collection of missing value imputation algorithms
in this paper, we present a comprehensive evaluation on the performance of nine imputation algorithms on a wide variety of types and sizes of microarray datasets. we assessed the performance of different algorithms on each dataset. algorithms used can be divided into two categories: local imputation algorithms and global imputation algorithms.

local imputation algorithms select a group of genes with the highest relevance  to the target gene to impute missing values. for local imputation algorithms, we used k-nearest-neighbors , iterative k-nearest-neighbors , sequential k-nearest-neighbors , least squares adaptive , local least squares , iterative lls  and sequential lls . for global imputation algorithms, we used singular value decomposition  and bayesian principal components analysis . the knn and svd algorithms were run with the parameter k =  <dig>  the sknn algorithm was run with the parameter k =  <dig> for time series data and k =  <dig> for non-time series data. the automatic parameter estimator was used for lls, slls and bpca. the ls, iknn and ills methods do not contain any free parameters. a brief information of these algorithms being used is presented in table  <dig> 

performance indices
we used three performance indices  to assess the performance of imputation algorithms. based on the type of information used in the index, we categorized these three indices into three different types:  statistic index,  clustering index and  differentially expressed genes index.

 statistic index
for the statistic index, we used the normalized root mean squared error  to evaluate the performance of the imputation algorithms. lower the value of the statistic index, better the algorithm performs.

normalized root mean squared error : nrmse is a popular index used to evaluate the similarity between the true values and the imputed values  <cit> .

  nrmse=meanvariance 

where yguess and yanswer are vectors, the elements of yguess are the imputed values, the elements of yanswer are the known answer values, and variance is the variance of yanswer.

 clustering index
an important data analysis in the microarray data is the gene clustering. in this study, k-means was used to do gene clustering for the complete datasets and the imputed datasets. we used cluster pair proportions   <cit>  as a clustering index to evaluate the performance of the algorithms. the numbers of clusters for each dataset was  <dig>  higher the value of the clustering index, better the algorithm performs.

cluster pair proportions : a schematic illustration of cpp is showed in figure  <dig> 

 differentially expressed genes index
an important data analysis in the microarray is the identification of differentially expressed genes. in this study, sam was used to identify differentially expressed genes for the complete dataset and the imputed dataset. we used biomarker list concordance index   <cit>  as the differentially expressed genes index to evaluate the performance of the algorithms.

biomarker list concordance index : a high blci value indicates that the list of the significantly differentially expressed genes of the complete data is similar to that of the imputed data. and it also means that the imputed data does not significantly change the result of downstream analysis, so the algorithm has excellent performance. we expect that a good algorithm has a high blci value. the blci is defined as follows:

  blci=nn+nn- <dig>  

where bcd is the significantly differentially expressed genes from the complete data, and bid is the significantly differentially expressed genes from the imputed data. bcdc is the complement set of bc d, and bidc is the complement set of bid.

RESULTS
we used  thirteen different datasets coming from two organisms ,   <dig> independent rounds per experiment, and  three kinds of indices to assess nine different algorithms. we thought that the performances of algorithms should be evaluated using measures which can reflect the impact of imputation on downstream analysis. the cluster pair proportions  is used to assess the results of clustering analysis and the biomarker list concordance index  is used to assess the results of identifying differentially expressed genes. therefore, we used not only normalized root mean squared error , but also cpp and blci to evaluate the performance of each algorithm. such a comprehensive comparison can provide an explicit direction for practitioners and researchers for advanced studies.

simulation setting
in our numerical experiments, thirteen real microarray datasets were used as benchmark datasets and nine algorithms including knn, sknn, iknn, ls, lls, ills, slls, bpca and svd were used.

first, we removed genes with one or more missing values from the original datasets to generate complete data matrices. second, multiple entries with different missing percentages  were randomly introduced into these complete data matrices. and then, the data with missing values was imputed by nine algorithms, respectively. the three steps mentioned above are repeated  <dig> times for each algorithm. finally, downstream analysis results from the complete data are compared to the results from the imputed data using three kinds of indices. the workflow of numerical experiments is shown in figure  <dig> 

the performances of imputation algorithms
we present a distinct illustration that can point out the optimal method for the microarray datasets used. the x-axis means the algorithms used and the y-axis means the average rank of each algorithm. for example, if we perform an experiment with  <dig> independent rounds, in which ranks of an algorithm are  <dig>   <dig>   <dig>   <dig> and  <dig> respectively. the average rank of the algorithm in this experiment is / <dig> =  <dig> . thus, in figure 3a, the average rank of slls is  <dig> , which is the result from  <dig> rounds in an experiment. the error bar for each algorithm is the standard error of the rank.

in this paper, we compared the performances of imputation algorithms using microarrays of various data types to determine the optimal algorithm. time series, non-time series and mixed type datasets were used as benchmark datasets, and the performance of each algorithm was evaluated using different measures mentioned above. furthermore, robustness of an imputation algorithm was also disscussed. we compared robustness of an algorithm between various conditions, such as types of datasets and datasets from samples of different organisms.

the ranking of imputation algorithms for different data types
performance of imputation algorithms on time series data
in figure  <dig>  lls-like algorithms  outperform the others on nrmse. ills is the algorithm with the best performance among the lls-like algorithms . the average rank of ls and lls-like algorithms are around  <dig>  using the cpp. slls is the optimal method using blci .

the performances  of algorithms are estimated by different indices. the optimal algorithm is ills using nrmse , the optimal algorithms are ills and lls using cpp  and the optimal algorithm is slls using blci . to precisely understand the performances of the algorithms on time series datasets, we averaged each average rank of the algorithms using the different indices as the average rank of the algorithms using the average index on time series datasets. the performance of lls-like algorithms perform well using the average index. the top two of lls-like algorithms are slls and ills. the average rank of slls is  <dig>  and the average rank of ills is  <dig> .

performance of imputation algorithms on non-time series data
for non-time series datasets , it is prominent that the performance of ls is the best using nrmse. the average rank of ls is  <dig> . using blci, the three algorithms  have the best performance. the average rank of sknn is  <dig> , the average rank of knn is  <dig>  and the average rank of ls is  <dig> . the top performing algorithm is sknn using cpp. the average rank of sknn is  <dig> . in figure  <dig>  ls is the optimal algorithm using the average index and then is knn-based algorithms, such as knn  <cit> , iknn  <cit>  and sknn  <cit> . we can clearly see that lls-like algorithms have better performance on time series datasets than on the non-time series datasets.

performance of imputation algorithms on mixed type data
in figure  <dig>  we can obviously see that ls has a low average rank  using nrmse. however, the performance of lls-like algorithms is better than that of ls using blci. using cpp, the average rank of ls is  <dig> , the average rank of ills is  <dig> , the average rank of knn is  <dig>  and the average rank of slls is  <dig> . the top three performing algorithms  are all very competitive with each other. the top performing algorithm is ills, followed by ls and slls.

performance of imputation algorithms on all data
performance of each algorithm using the three kinds of indices and the average index on all datasets is given in figure  <dig>  it can be clearly seen that the performances of lls-like algorithms and ls are better than the performances of knn-like algorithms. we noted that no algorithm can perform well on all kinds of datasets. therefore, the best algorithm cannot be found, but we can find the optimal algorithm for each data type .

robustness of each imputation algorithm
tuikkala et al. demonstrated that bpca is the best imputation method on most of datasets  <cit> , while de brevern et al. indicated that knn constitutes one efficient method for restoring the missing values with a low error level  <cit> . according to our experiences, bpca does not always perform well on all benchmark datasets, and the performance of knn is usually worse than that of other methods for most of time, which means that knn cannot accurately estimate missing values to improve downstream analysis. integrating the results of the previous studies with our experiences, it strongly suggests that the optimal imputation algorithms for different types of datasets may be different. therefore, it is necessary to compare the robustness of each imputation method, which is useful for choosing an optimal algorithm for most of the researchers, especially when they cannot ensure the type of their dataset.

robustness against different data types
ls outperforms other algorithms using nrmse  and the average index . in figure 8a and 8d, ills and sknn are more sensitive than the other algorithms. when illustration has no explicit trend, we set a threshold σ  - |). when σ is less than  <dig> , it indicates that the performance of an algorithm is not much different between datasets. in figure 8c, the performance is not much different between lls-like algorithms and knn-like algorithms in mixed type dataset against non-time series dataset. in figure 8b, ls, lls, iknn, knn and slls are also not much different. on the other hand, ills, sknn, bpca and svd are sensitive algorithms. therefore, in figure 8b and 8c, we suggest that ls can be used when researchers cannot ensure the type of their dataset.

there is an obvious trend in figure 9a and 9d. hence, we recommend that ls can be used when researchers cannot ensure whether their dataset belongs to time series dataset or non-time series dataset. in figure 9c, ls is the optimal algorithm  when researchers cannot ensure the type of their datasets. in figure 9b, ls is still the best one when the type of the dataset is unknown. in figure 9d, it can be obviously seen that ills and ls are more sensitive than the other algorithms. in figure 9a, lls-like algorithms prefer time series datasets but not non-time series datasets. sknn prefer non-time series datasets but not time series datasets. in figure 9b, ills, slls and lls prefer time series datasets but not non-time series datasets. knn and sknn prefer non-time series datasets but not time series datasets. in figure 10c, lls is more sensitive than the other algorithms. in figure 10b, svd prefers mixed type datasets but not time series datasets. in figure 10a and 10b, ills is considered as the optimal algorithm, which can be used when the type of the dataset is either time series or mixed type. in figure 10d, the performances of all algorithms are similar between ls and lls-like algorithms, but ls is still more sensitive than other algorithms. in figure 10c, ills and ls have better performances than the other algorithms.

robustness against data from different species
from figure 11a to 11d, we can see that σ is almost less than  <dig> for each point . this indicates that the performance of each algorithm between different organisms is very similar.

an easy-to-use web tool for missing value imputation
in addition to a comprehensive comparison between imputation algorithms, we developed a web-based imputation tool--missvia to help researchers, who do not have good programming skills, to deal with missing values in their datasets. in missvia, many existing imputation algorithms were integrated together. missvia is built up based on the easy-to-use principle, so every imputation task could be completed with only three steps:  upload the dataset with missing values,  choose the imputation algorihtms and  click the "submit" button. once missvia receives the request of an imputation task, it will send an e-mail notice with the link of the job to users. subsequently, missvia will initiate a simulation procedure for performance comparison to find out the optimal algorithm . finally, the results of performance comparison would be presented with a missing rate-to-nrmse plot . according to the plot, missvia would determine the optimal algorithm, and then users can use the imputed result for the downstream analysis.

CONCLUSIONS
to find an optimal method to solve the missing value problem efficiently, we conducted a comprehensive performance comparison of various missing value imputation algorithms in this work. first, we investigated the impact of different types of microarray data on the performance of imputation methods. three types of microarray data  were used as benchmark datasets, and the performance of each algorithm was evaluated using three kinds of measures  and the average of these measures . these measures are originally used for different purposes. nrmse is for estimation of deviation between the estimated values and the real values, cpp is for evaluation of clustering results, and blci is for assessing the results of finding differentially expressed genes. our results suggest that, for time series data, ills and slls have better performances if one wants to do clustering analysis or find differentially expressed genes. for non-time series data, ls is the best algorithm when the performance is evaluated using nrmse, while sknn is better than the others if one wants to conduct downstream microarray data analysis. for mixed type data, ills is the best choice if one wants to find differentially expressed genes, but ls would be better for the other two purposes.

then we investigated whether the microarray data from different species would affect the performance of various imputation methods or not. our results indicate that what kind of species a dataset comes from does not have any obvious effect on the performance of imputation methods. this means that when one is dealing with missing values, what he needs to consider is not the species that the dataset comes from, but the type of the dataset. besides, we used a distinct illustration to display the relationship between different types of datasets, which is helpful to reveal the robustness of these imputation methods and is useful for researchers to choose an optimal algorithm for their datasets. besides, to assist experiment practioners in solving missing value problems directly before data analysis, we developed a web-based imputation tool. in this web tool, only  <dig> steps are needed, and then users could easily obtain a complete dataset imputed by the optimal algorithm.

competing interests
the authors declare that they have no competing interests.

authors' contributions
wsw conceived the research topic and provided essential guidance. ccc developed the web-based tool, and he did all the simulations with syc. ccc, syc, and wsw wrote the manuscript. ccw helps to revise the manuscript. all authors have read and approved the final manuscript.

