BACKGROUND
with the completion of genomic sequencing projects, the need for automated prediction of protein subcellular or subnuclear localizations becomes increasingly important. the localization of a protein can provide valuable information about its molecular function, as well as the biological pathway in which it participates  <cit> . the bulk of past work has focused on protein subcellular localizations  <cit> , and has achieved high accuracy. however, the prediction of protein localization at subnuclear level is far more challenging. we have developed the first svm-based system using protein sequence information for this task with considerable predictive accuracy  <cit> . in this work, we attempted to improve the performance of the system through the incorporation of information obtained from gene ontology .

go has been developed to help manage the overwhelming mass of current biological data that are difficult to tie together into a cohesive whole from a computational perspective  <cit> . it has become a de facto standard tool to annotate gene products for various databases. go is a controlled vocabulary of terms split into three related ontologies consisting of molecular function , biological processes  and cellular components . molecular function describes activities, such as catalytic or binding activities, at the molecular level. molecular functions generally correspond to activities that can be performed by individual gene products, but some activities are performed by assembled complexes of gene products. a biological process is series of events accomplished by one or more ordered assemblies of molecular functions. a cellular component is a component of a cell, but with the proviso that it is part of some larger object such as an anatomical structure, a gene product group. a gene product might be associated with or located in one or more cellular components  <cit> . it is active in one or more biological processes, during which it performs one or more molecular functions.

each category of go terms is structured as a directed acyclic graph . currently there are over  <dig>  go terms  <cit> . the relationships between go terms have been extensively explored and applied to various biological problems, such as search for genes with similar function. one of the key problems in these applications is how to define similarity between two go terms. lord et al.  <cit>  proposed a measure based on information content for the semantic similarity of go terms. they revealed that the semantic similarity is correlated with the protein sequence similarity and this correlation is more marked in molecular functional annotation. however, their definition of similarity measure relies on a particular database, e.g. swiss-prot. zhang et al.  <cit>  used a recursive procedure to define a statistical measure d-value  for each go term in the go dag to avoid the dependency on a single annotation database, and developed a gene functional similarity search tool. gentleman  <cit>  proposed two measures based on graph similarity: simui and simlp. the former is the ratio of the number of common nodes in the two graphs reduced from the go dag and the number of nodes in their union. the latter is defined as the depth of the longest shared path from the root node. wu et al.  <cit>  predicted functional modules encoded in microbial genomes using a similarity measure similar to simlp.

although the semantic similarity between two go terms has been extensively investigated, how to define similarity between two gene products based on go annotations for a specific application remains unclear. suppose that each gene product is annotated by a set of go terms. each go term from one set will be paired with all go terms in the other set. there are three general ways of defining similarity for two gene products from those go term pairs:  to take the maximum value from the similarity scores of go term pairs  <cit> ,  to take average over all the similarity scores of go term pairs  <cit> , and  to count the number of identical go terms in the two go term sets  <cit> . we are particularly interested in the identification of an appropriate definition of similarity for proteins for the prediction of protein subnuclear localization. to do so, it is necessary to investigate the effect of various combinations of different measures of go term similarity and different similarity measures of a pair of proteins on the predictive performance. this evaluation was carried out through our new predictive system expanded from the previous svm module  <cit>  with the addition of a nearest neighbor classification module, which was constructed based on a similarity definition between a pair of proteins.

RESULTS
dataset
to provide a valid comparison with our previous system, the same dataset as in  <cit>  was used for evaluation of the new system. the dataset was extracted from the nuclear protein database   <cit>  using a perl script. the npd is a curated database that stores information on more than  <dig> vertebrate proteins, chiefly from human and mouse, which are reported in the literature to be localized in the cell nucleus. since certain proteins are associated with more than one compartment, a test dataset consisting of proteins with multiple localizations was extracted. these proteins have the same swissprot or entrez protein accession numbers although localized in different compartments. this preparative procedure resulted in  <dig> proteins that are localized within the six compartments described below. the majority is localized in  <dig> compartments and the remaining portion is localized in  <dig> or  <dig> compartments. after excluding the multi-localization proteins, a non-redundant dataset was further constructed by proset  <cit>  to ensure low sequence identity . in order to have sufficient number of proteins for training and testing, only six localizations were selected for evaluation. these are pml body , nuclear lamina , nuclear splicing speckles , chromatin , nucleoplasm , and nucleolus . each of these proteins has a single localization and the total number is  <dig>  the  <dig> multi-localization proteins are not included in the set of  <dig> single-localization proteins for the leave-one-out cross-validation . therefore, the multi-localization dataset is an independent testing set. the summary of the datasets is presented in table  <dig> 

predictive system and evaluation criteria
given a test protein with go annotations, the similarity scores between this protein and all the other proteins in the training set are calculated from the similarity scores of go term pairs . the protein with the highest similarity score is designated as the nearest neighbor of the testing protein and its class label will be assigned to the test protein. if multiple proteins in various localizations attain the same highest score or the test protein does not have go annotation, then the test protein will be assigned as "unpredicted". the unpredicted proteins will be passed on to the svm module, which uses sequence information  <cit> , for a full coverage of prediction.

since the numbers of proteins for the six localizations are unbalanced, the matthew's correlation coefficient  was employed for the optimization of parameters and evaluation of performance  <cit> . the overall accuracy for the multi-class classification proposed by rost  <cit>  was also used for the evaluation of our system. definitions of the mcc and overall accuracy are detailed in methods section.

comparison of various similarity measures for go term pairs
three different similarity measures for go term pairs were compared:  lord's method  <cit> ,  simlp as described in bioconductor  <cit> , and  exact match. for lord's method, the go term frequencies were extracted based on uniprotkb/swiss-prot  <cit> . for a go term pair, exact match defines the similarity score as  <dig> if the two go terms are identical,  <dig> otherwise. sum_match was utilized to compute the similarity score between two proteins from similarity scores of go term pairs. it takes the sum of similarity sores for all matched go terms from two proteins. note that the sum_match score is equivalent to the inner product of two go term vectors if exact match is used for go term similarity . as shown in table  <dig>  no significant difference in performance can be observed for these three similarity measures of go term pairs. surprisingly, the exact match method, which does not utilize any dag structure of go, achieved competitive performance in comparison with the other two methods.



comparison of various similarity definitions for proteins
very few studies have focused on exploring similarity definition of proteins based on go terms. two simple ways are usually employed in defining the similarity between two proteins annotated by go terms. one is to take the maximum value from the similarity scores of go term pairs. the other is to take average over all the similarity scores of go term pairs. however, the above two methods produced poor results especially when the proteins were annotated by many go terms for the prediction of protein subnuclear localization. consequently, an extensive investigation on various similarity definitions obtained from similarity scores of go terms was warranted. as shown in table  <dig>  similarity definition has profound impact on the quality of prediction. the overall accuracy ranges from  <dig> % to  <dig> % and overall mcc ranges from  <dig>  to  <dig>  for proteins with single-location. it seems that the use of the sum of similarity scores over the matched go term pairs for two proteins as the similarity definition produces the best predictive outcome for this prediction task.



effect of using go terms from homologs
lord et al.  <cit>  reported a problem that many go term pairs have identical similarity values. this problem stems from two sources:  proteins are represented by relatively small number of go terms;  the similarity measure considers only the information content pms  of shared parents of the query terms, meaning that the semantic distances of many different go term pairs are identical. in order to alleviate this problem, go terms of homologs retrieved by blast were used for the representation of a query protein. the parameter e-value in blast is crucial for the quality of homologs, as well as the number of candidate homologs. if e-value is too large, then homologs of low quality may be retrieved. on the other hand, if e-value is too small, then the number of candidate homologs retrieved becomes small. we tested the following e-value parameters:  <dig>  10- <dig>  10- <dig>  ..., 10- <dig>  10- <dig>  10- <dig>  10- <dig>  10- <dig>  10- <dig>  10- <dig>  and found that e-value = 10- <dig> was a good trade-off value. even with this threshold the blast could retrieve different numbers of hits for different query proteins. we found that up to  <dig> homologs were suitable to represent the query protein .

predictive performance of the new system
as demonstrated before, the predictive outcome is greatly influenced by the ways of combining similarity scores of go term pairs to give the similarity between two proteins. with the appropriate similarity definition, the performance of the current system can be significantly better than that of the previous svm system. as seen in table  <dig>  the overall mcc  is elevated from  <dig>  to  <dig>   for single-localization proteins in the leave-one-out cross-validation; and from  <dig>  to  <dig>   for an independent set of multi-localization proteins. more specifically,  <dig>  out of  <dig> proteins were predicted by the go module in the loocv, and the remaining  <dig> were passed on to the svm module. for the independent test set of proteins with multi-localizations,  <dig>  out of  <dig> proteins were predicted by the go module, and the remaining  <dig> were passed on to the svm module.

it also should be noted that our system currently is designed to predict only one localization. in fact, the results shown for the proteins with multiple localizations is somewhat overestimated, as the prediction is considered correct if any one of localizations of a protein is correctly predicted.

discussion
go terms have been used in the prediction of protein subcellular localization  <cit> . the similarity of two proteins was defined as the number of the exactly shared go terms from the two proteins, or equally defined as the inner product of go term vectors representing the two proteins . the inner product of two go term vectors can be considered as a special case of the similarity definition sum_match for two proteins used in this work. sum_match is essentially a weighted sum of the matched go term pairs, where the weight is the depth of the term if simlp is the go term similarity; while the inner product weights uniformly  <dig> for all matched go term pairs. consequently, the more specific the two matched go terms is, the greater the weight is; and the higher the contribution to the similarity is.

it seems that the inclusion of similarity scores of all go term pairs is in general not a good strategy for the definition of similarity between two protein sequences. the same conclusion can be drawn for the use of scores of all best go term pairs . the reason may be considered as follows. if two go terms are remotely related, but sharing a common ancestor, they still have a positive score which contributes to the similarity of two proteins. however, the similarity for protein pairs based on the matched go terms has zero contribution from those unmatched go terms. it seems that the unmatched terms add noise to the data and thus weaken the discriminative ability of the nearest neighbour module in our system. in our study, the best performance was attained when the similarity measure of two protein sequences is defined as sum_match. the similarity scores of ~ <dig>  matched go term pairs can be pre-computed and stored in a hash table to effectively reduce the computation time.

a question that needs to be clarified in the go-based approach is whether the prediction accuracy could be artificially inflated if the proteins in training or testing sets have their specific subnuclear class annotated in go. we examined this issue as follows. in this study, there are six go terms associated with the subnuclear compartments: pml body , nuclear lamina , nuclear speck , chromatin , nucleoplasm , and nucleolus . all proteins annotated by any of the above six go terms are listed in the supplementary file . it is observed that relatively large number of proteins are correctly annotated only in two localizations: chromatin and nucleolus and that some proteins are mis-annotated for their subnuclear compartments. most of them are mistakenly labelled as nucleoplasm .

to assess if these specific go terms are influential in the prediction, the performance of the go module was compared before and after the removal of the six go terms from the annotation list. as shown in table  <dig>  the accuracies for the compartments nuclear lamina, chromatin and nucleolus decreased slightly, and those for the compartments nuclear splicing speckles and nucleoplasm increased slightly, and there is no change for the compartment pml body. the role of the go terms of subnuclear compartments appears to be not decisive in the identification of the subnuclear compartment of a protein. rather, the information of the overall annotated go terms, that is, the similarity of two proteins defined from the go term pairs is more important.

the incorporation of the go module has substantially improved the system performance. however, the module still makes relatively high number of incorrect predictions. this error can not be corrected by the next svm module. therefore, it would be desirable if the system can integrate the outcomes from two modules whenever two predictions are available. we are investigating the possibility on this aspect.

our system can be combined with other subcellular localization predictors, e.g. wolf psort  <cit> , pa-sub  <cit>  and ptarget  <cit> , for genome scale prediction of protein localizations. our system can take a list of predicted nuclear proteins obtained from the subcellular localization predictors and make a refined prediction at the subnulear level.

CONCLUSIONS
gene ontology terms have been effectively incorporated into our previous svm-based system for the prediction of protein subnuclear localization with the use of a nearest neighbour classification module. the improvement on performance of the new system is substantial. various similarity definitions for a pair of proteins from different similarity measures of go terms have been examined for their effect on prediction. the use of the sum of similarity scores over the matched go term pairs for two proteins as the similarity definition produced the best predictive outcome in our study. the extensive investigation conducted in this work may provide some guidance on the determination of similarity definition for protein pairs based on go terms in other applications.

