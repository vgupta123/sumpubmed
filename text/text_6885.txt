BACKGROUND
microarray experiments are popular tools in functional genomics. correspondingly, many techniques have been developed to analyze their results. typical questions asked include which genes are differentially expressed  <cit> , and which groups of genes show similar expression in multiple related experiments  <cit> . identifying functional patterns among the resulting list or groups of genes is a separate step that is not supported by standard clustering techniques. biclustering techniques have been developed to group functions and experiments simultaneously  <cit> . gene expression information is also used to predict gene functions  <cit> . in experiments related to transcriptional regulation, the objective is to understand the regulation process rather than predicting protein function. that means that predictive techniques are not appropriate.

recently, gene set enrichment analysis, gsea  <cit> , has become a popular tool for relating expression values to properties that define sets of genes. gene set analysis conventionally tests the relationship of gene expression experiments related to a discrete phenotype to any one of a number of possible grouping criteria. a phenotype may distinguish between healthy and diseased tissue or between different strains of bacteria. gsea also enables such analysis for continuous phenotype labels. this feature can be used for time series gene expression data. however, this analysis type requires knowing what the profile of interest is. two example applications are suggested in the gsea documentation  <cit> : an expected profile such as a peak or alternatively the expression of a particular gene may be used as profile of interest.

our algorithm does not require any input of an expected profile. the distribution of gene expression profiles alone is what determines whether the gene set shows enrichment. this allows us to not only consider time course experiments for which a particular profile may be natural to expect but any group of related experiments. fig.  <dig> illustrates the concept: the same set of curves is shown in the left and in the right panel of the figure. each curve represents a gene expression profile over multiple related experiments. in each panel, a different subset of profiles is highlighted, corresponding to genes of a different functional designation. the highlighted profiles in the left panel show a clear pattern, while the ones in the right panel do not. we quantify the presence of patterns by identifying neighboring relationships among profiles using a product measure. if a gene has many neighbors with a similar expression profile – more than would be expected by random chance – then it supports the existence of a pattern. the number of neighbors, for all genes that show the function, is summarized in a histogram. in the left panel, two of the profiles have all other three genes as neighbors, and the others have two neighbors. in the right panel, in contrast, none of the profiles has any neighbor. it is expected that some profiles may have neighbors by random chance alone. for this reason, we compare the resulting histograms with ones that are generated for random subsets of the same size.

the concept of gene set enrichment has previously been applied to the results of clustering or biclustering  <cit> . in this approach it is tested whether any one particular functional category shows enrichment for the clustering that was determined. fig.  <dig> illustrates the limitations of such a two-step process. this schematic uses the same type of representation as fig.  <dig>  in which experiments are shown side-by-side and are connected by lines. the example was constructed such, that there are two clear clusters that would be identified by most clustering algorithms. one cluster is formed by the five genes that have primarily positive expression values and the other cluster by those that have primarily negative values. neither of these clusters shows enrichment for the function that is highlighted, since each of them has two out of five members with the annotation. the genes with the annotation, nevertheless, show a clear pattern. the right panel illustrates that the histogram of neighbors for the subset of highlighted genes differs from what would be expected for a random subset, showing that such patterns are accessible to our algorithm. notice that the similarity among the highlighted genes is not sufficient to consider them as a cluster based on expression values alone. our algorithm, in contrast, tests solely whether their distribution within the space of gene expression values differs from what would be expected. no information is lost prior to that test. if clustering/biclustering is performed first, the information that the highlighted genes are similar despite being in different clusters is lost. this limitation of the clustering-based approach cannot be resolved by using different clustering algorithms that use functional information  <cit>  since such algorithms would distort the probability of finding enrichment. our one-step approach resolves the problems of the two-step approaches at a fundamental level.

work by kim et al.  <cit>  can also be compared with our approach. in this work conventional statistical techniques are used, in particular the pearson correlation coefficient. for that reason, gene sets have to be grouped into functional clusters first, such that there is a sufficiently large number of genes in each group. the histogram-based analysis in our presented algorithm can be applied to fewer genes, and furthermore performs a direct comparison with a randomized distribution. using the pearson correlation coefficient directly as a measure of coherence amounts to an assumption of a homogeneous comparison distribution, much as our theoretical model, which is introduced as a high-performing alternative. in contrast to the work by kim and coworkers, our algorithm allows a more accurate comparison based on resampling. other modifications have been proposed to the gene set enrichment concept, such as dimensionality reduction  <cit>  and considering multiple functional groups  <cit> . reviews of some related techniques can be found in  <cit> .

our algorithm is tested on a published set of microarray data  <cit> , in which each experiment corresponds to one knock-out mutant that represents one two-component system, compared to wild-type e. coli. two-component systems are regulatory systems that involve two protein components, a histidine kinase and a response regulator. in response to an environmental stimulus, the histidine kinase phosphorylates itself and then transfers the phosphate to the response regulator. transcription regulation only happens when the response regulator is in its phosphorylated state. in this sense, two-component systems are the predominant signal transduction system in bacteria, being used for the response to a diverse set of environmental signals . two-component systems have attracted the attention of bioinformatics researchers for the past years. the abundance of these systems makes them particularly suitable for genomics studies. many bacteria have two-component systems, the majority of them possessing multiple of them. in addition, sensor domains that are unrelated to the sensor kinase domain and the response regulator domain are abundant within two-component systems, further increasing their complexity. crosstalk between different signaling systems completes the signaling network .

genomics studies involving two-component systems include sequence comparisons of a single two-component system  across many different bacteria  <cit> , sequence based structural classification of several response regulators across many genomes  <cit> , and the development of new protocols to identify two-component systems in newly sequenced genomes  <cit> . evolutionary studies identified recently evolved signaling molecules, indicating increased selective pressure upon the bacteria  <cit> . a new database, sentra  <cit> , includes many two-component systems, as well as other signaling proteins. it was hypothesized that a network of two-component systems might equip the bacteria with a rudimentary form of intelligence  <cit> .

all of these studies use a comparative genomics approach to obtain structural and/or functional information. as the function of most of these two-component systems  lies in gene regulation, functional genomics experiments have been performed for a small number of them  <cit> . the data set used for this study constitutes the most complete compilation of data on gene regulation by two-component systems that is currently available  <cit> . we will use an integrated approach to analyze this data set, combining functional or domain information with gene expression data. throughout this manuscript, we will refer to the two-component system mutants as attributes and the log expression ratios between mutant and wild-type as attribute values.

the objective of the study is to find functional groups that are preferentially regulated by a specific set of two-component systems. such information is of interest in understanding gene regulation. the objective is different from conventional clustering approaches, in which the actual gene clusters are in the foreground  <cit>  and functional information may be used to improve clustering results  <cit> . functional information has also been considered in the context of determining the significance of clustering results  <cit> . our approach, in contrast, finds the significance of the relationship between the function and the differential expression. a related algorithm, using a subspace-based distance measure, has been discussed previously  <cit> , and applied to cell cycle experiments in yeast.

this study is based on the perspective that groups of similar data points represent patterns in the data. most clustering techniques implicitly use this concept and density-based techniques  <cit>  are explicitly based on it. pattern-based techniques have also been used to find differentially expressed genes  <cit> . while most algorithms use the full data set to find patterns, in this study we only consider the subset of data points that have a particular property of interest. properties may either be functional designations, as provided through gene ontology  or hidden markov models for protein domains . if the subset shows an inhomogeneous distribution of data points, then we conclude that the property is related to the gene expression data set.

the objective of our study is, hence, slightly different from the goals of gsea, where a main motivation is summarized by efron & tibshirani  <cit>  as "by borrowing strength across the gene-set, there is potential for increased statistical power". towards this goal, it is essential to correctly take into consideration that not just one test is performed, but multiple. the gsea algorithm does so by controlling the false discovery rate  <cit> . in a multiple hypothesis testing context, overlap between gene sets has to be carefully taken into consideration  <cit> . in our work, the focus is on establishing that any one pattern we find is significant. it is not our intention to increase the significance of the gene expression experiment, but rather to find non-obvious patterns involving multiple, possibly independent, experiments. we thereby follow the pattern mining paradigm, which typically takes the perspective that any one reported pattern should be significant, but each pattern is an independently determined entity  <cit> .

RESULTS
algorithm
the algorithm has two objectives:  identifying subsets that have a distribution that significantly differs from what would be expected for a random subset and  finding those data points that have more neighbors than expected. we define a density measure that is evaluated for each data point, and is given by the number of neighbors that are close according to a product similarity measure. product similarity is used, rather than cosine similarity or euclidean distance, since we expect those vector pairs to be most relevant that exhibit a large absolute value of differential expression as well as a small angle between vectors. the product similarity measure for vectors x and x, with coordinates xi and xi respectively, is defined as follows

  sjk=∑i=1dxixi1≤j≤nand1≤k≤n 

where n is the number of selected data points, and d the number of dimensions, i.e. the number of experiments that are being considered. vectors for which sjk exceeds a threshold t are considered neighbors. the threshold is given as

  t=μdμ∈ 

where μ is chosen to be  <dig>  in the evaluation. the algorithm does not strongly depend on the choice of μ as will be discussed in the section on choices within the algorithm. each data point is associated with a density that is of type integer: the number of neighbors that satisfy the product similarity criterion. the occurring density values for all data points can be summarized using histograms. density calculations are done on column-wise z-normalized data  <cit> , i.e. for each attribute, the mean is subtracted and the attribute values are divided by the standard deviation. the rationale for using column-wise rather than row-wise normalization is that overall large absolute log expression ratios of individual genes are thereby preserved. this choice is also discussed in detail later. fig.  <dig> and  <dig> show examples of histograms of the observed density values that are derived using the product similarity criterion . these examples are derived as part of the evaluation on the oshima data set on two-component systems  <cit> , which is discussed in more detail in the next section.

even randomly distributed vectors are expected to have some neighbors. we, therefore, have to evaluate the expected distribution of densities. this is done by randomly selecting a subset of genes that has the same number of elements as the protein function under consideration. a histogram is then constructed for the random subset. the process is repeated multiple times and the results averaged over  <dig> runs. table  <dig> summarizes this resampling-based algorithm. figs.  <dig> and  <dig>  show the distribution for random data sets in addition to the experimental ones.

an observed histogram is considered significant if it would be unlikely to encounter it based on a randomly selected set of genes. a χ <dig> goodness-of-fit test is used to compare the histogram with its randomized counterpart. we consider patterns as significant, if the comparison yields a p-value ≤  <dig> . the methods section provides details on the significance testing. fig.  <dig> shows three vector-item patterns that are considered significant, while fig.  <dig> shows one counter example that is not considered significant.

application of the algorithm to two-component system data
we applied the algorithm to the two-component system data from oshima and coworkers  <cit> . throughout the entire data set, expression ratios represent the expression of mutants divided by those of the wild-type strain. therefore, an expression ratio above  <dig> indicates that the gene is repressed by the corresponding two-component system. expression ratios below  <dig> indicate activation by the two-component system. log expression ratios for individual experiments are considered dimensions in a d-dimensional vector space, where d is the number of experiments considered. histograms for all functional groups were derived. seven functional designations were found to be significant, as shown in table  <dig> and fig.  <dig>  the histograms for the gene ontology terms go: <dig> = macromolecule_catabolism, go: <dig> = response_to_desiccation, and go: <dig> = biopolymer_metabolism are presented in fig.  <dig> 

column 1: function name from go annotation.

column 2: p-value for standard χ <dig> goodness-of-fit test.

column 3: the average expression level of genes with the given function.

column 4: the average expression level of genes with the given tail.

column 5: number of genes with the function.

column 6: number of genes in the tail.

to understand our result better we also calculated the variance of the expression of genes that have the functional designation  in comparison with the overall data set . we expect that the genes with a significant functional designation should rather be more clearly differentially expressed, i.e. have a higher variance of the differential expression. this is not required for our algorithm and the variance is not used in our algorithm. however, it might be an indication of a problem if significant functional designations were consistently less expressed. the same holds to an even greater extent for the genes that are in the tail of the distribution . these genes represent the patterns that contribute to the significance of the functional designation. if the patterns were due to genes that showed a low differential expression, the value of our observations to biologists would be questionable. in fact, when we used a previous algorithm  <cit>  on our data set, this is exactly what we found: significant patterns were found that were due to genes with an exceptionally low variance of differential expression. later, we will present details on the comparison between our previous and our current algorithm and show that the variance of expression can be used as a means of validating if our results are useful from a biological perspective. fig.  <dig> shows the expression profiles of all those genes in the above functional groups that have a larger number of points in the neighborhood than any of the points in the histograms for the random subset . the individual genes that form this group are indicated in the inserted legends. the numbers on the x-axis symbolize the individual two-component systems. the order of two-component systems  is identical to the original data set  <cit> . for the purpose of this study, # <dig> is ompr/envz, # <dig> is bassr, # <dig> is yfha, # <dig> is uvry, # <dig> is ypdab, # <dig> is dcusr, # <dig> is ntrbc, and # <dig> is arcb. these are the two-component systems for which the grouping of expression ratios is most visible within the profiles. tables  <dig>   <dig>  and  <dig> provide the log <dig> expression ratios for the genes that are in the histogram tails. the first row in both tables lists the two-component systems and the first column the genes that belong to the respective functional group. log expression ratios that are < log <dig> or > log <dig> are presented in bold face.

column 1: genes that are part of the function macromolecule catablism. the first gene in each operon is printed in bold.

column  <dig> through 6: two-component systems that are involved in the regulation of the genes in column  <dig>  these are the most dramatic peaks in fig.  <dig>  top panel.

column 7: functions of the proteins that are encoded by the genes in column  <dig> 

column 1: genes that are part of the function response to desiccation. the first gene in each operon is printed in bold.

column  <dig> through 5: two-component systems that are involved in the regulation of the genes in column  <dig>  these are the most dramatic peaks in fig.  <dig>  middle panel.

column 6: functions of the proteins that are encoded by the genes in column  <dig> 

column 1: genes that are part of the function biopolymer metabolism. the first gene in each operon is printed in bold.

column  <dig> through 6: two-component systems that are involved in the regulation of the genes in column  <dig>  these are the most dramatic peaks in fig.  <dig>  bottom panel.

column 7: functions of the proteins that are encoded by the genes in column  <dig> 

biological significance of the data
the first functional group of study is go: <dig> = macromolecule_catabolism . this group contains seven genes in four operons. three operons include genes for galactarate and glucarate degradation. these are gard, garp , and gudp . the fourth operon is ptsa  that encodes a phosphotransferase system.

the results suggest that two-component signaling plays an important role in the regulation of the galactarate and glucarate genes. this is important because little has previously been known about the regulation of these genes. galactarate and glucarate are contained in various fruits. they can serve as growth substrates for several bacteria, including e. coli. the pathway that is used for the degradation of galactarate and glucarate leads to the production of pyruvate and glycerate.

the second functional group that is analyzed more closely is go: <dig> = response_to_desiccation . the eleven genes listed in table  <dig> are all part of the cps operon. they encode enzymes, such as glycosyl and acetyl transferases and other auxiliary proteins that contribute to the formation of the colanic acid capsule . the genes for the colanic acid capsule are clustered at about  <dig> min on the chromosome and expressed from a single promoter upstream of the gene wza  <cit> . this promoter is characterized by its - <dig> and - <dig> sites, as well as the rcsab box that permits binding of rcsab  <cit> . the rcs system is the major system of regulation for the cps operon. it constitutes an unusual form of a phosphorelay, involving two of each, the kinase and the response regulator domains. it is not included in the data set that was used for this study  <cit> .

the two-component systems that appear as most important for the regulation of the capsule genes  respond to diverse environmental signals, such as iron  <cit> , carbon  <cit> , nitrogen  <cit> , oxygen  <cit> , and osmolarity  <cit> . it becomes obvious that the production of capsules is under tight environmental control, including many two-component systems. this regulation is in addition to the known regulation by the rcs system  <cit> . it is consistent with the observation that colanic acid capsules have no known role in the virulence of the bacteria  <cit> , but are needed for various lifestyles outside the host. examples for stressful situations include osmotic shock or desiccation. complex gene regulation by several two-component systems would enable the bacteria to perform this complex adaptation.

the third functional group under investigation is go: <dig> = biopolymer_metabolism. as the most interesting observation, this group contains many of the genes of the cps operon that were discussed above. however, additional genes are included in this group. these are listed at the bottom of table  <dig> and include rfbc, rfbx, wbbh, wbbj, and cld. the regulation of these five genes by dcusr is all above the two fold threshold and, therefore, more pronounced than regulation of any of the other genes by any of the other two-component systems. it appears that dcusr is the major regulator of these genes. additional minor regulators might be uvry and ntrbc.

the rfbc, rfbx, wbbh, wbbj, and cld genes are all involved in the synthesis of the o-antigen. the o-antigen is another surface polymer . variation in its structure is the reason for the many o-specific serotypes that e. coli can exhibit. it provides a challenge to the host immune system, having to continuously adapt to new bacterial surface proteins. the colanic acid genes and the o-antigen genes cluster together on the e. coli chromosome, with the o-antigen genes being located downstream of the capsule genes . an additional promoter  has been postulated within this gene cluster. it resides in the intergenic region between galf and rfbb and probably constitutes a transcriptional start site for the o-antigen genes. according to our data, the wza promoter could be regulated by bassr, uvry, ntrbc, and ypdab. the rfbb promoter might be regulated by uvry, ntrbc, and dcusr. this indicates that our algorithm is able to predict transcriptional units within gene clusters, based upon similarity in function and gene expression profiles.

biological questions and hypotheses derived from this study
we used the new analysis of the previously published data set  <cit>  to design biological questions that could lead to future experiments. three questions were asked in particular:

 <dig>  under which conditions is e. coli able to use galactarate and glucarate as growth substrates? the observation that several two-component systems are involved in the regulation of the galactarate and glucarate genes indicates that e. coli might be able to grow on galactarate and glucarate under more environmental conditions than previously thought.

 <dig>  are the two-component systems bass/basr, bara/uvry, ntrb/ntrc, and arcb/arca involved in the formation of biofilms? in a recent review article, we summarized a network of regulation that involved the agellar master regulator flhd/flhc and several two-component systems  <cit> . the network affected the expression and synthesis of several cell surface organelles, including capsules. the formation of biofilms was used as a connecting theme to explain regulations within the network. this study extends previous observations. the number of two-component systems that is involved in the regulation of biofilms might be larger than anticipated earlier  <cit> . whether any or all of these two-component systems are really involved in the formation of biofilms, can easily be determined experimentally.

 <dig>  do our data indicate new functions for two-component systems of previously unknown function? yfha is the response regulator that is phosphorylated by its cognate kinase, yfhk  <cit> . considering that the expression ratios for yfha are higher than for the other two-component systems that contribute to the regulation of the galactare and glucarate genes , one might assume that yfha is a major regulator of these genes. ypdab is another two-component system whose function is currently unknown. it appears in our data as the major negative regulator of the colanic acid capsule genes .

testing of one hypothesis derived from this study
we tested part of hypothesis two, the involvement of two-component systems in biofilm formation, with a quantitative biofilm assay that was previously described  <cit> . the two-component systems tested were bassr, ntrbc, and uvry. mutants in bassr, ntrbc, and uvry were compared to their isogenic wild-type strain . all three mutants produced more biofilm than the wild-type. this is consistent with our hypothesis.

application of the algorithm to a second data set
to test the algorithm for its general usefulness, we applied it to a second data set. the data set by baev and coworkers  <cit>  contains a total of  <dig> experiments, each representing a time point in the growth profile of e. coli growing in lb at 37°c. applying the algorithm to this data set yielded one structural group of proteins that exhibited similar expression profiles. histograms and profiles are shown in fig.  <dig>  the group hmm.mfs- <dig> consists of transporters that belong to the major facilitator superfamily. many of them are involved in drug export and multidrug resistance. this functional group was not analyzed in the three previous publications  <cit> . this analysis is a good example of how the biological question asked and the algorithm used impact the results that are to be expected. baev and coworkers identified functional groups first and analyzed their expression profiles in a second step. they found proteins transporting a certain compound and the enzymes that are used for the degradation of this compound exhibit similar expression profiles. our algorithm identifies patterns involving functional groups and gene expression data in one step. we found one large group of transporters. this demonstrates that applying a new algorithm to an already well analyzed data set can still yield new information.

comparison with the gsea algorithm
we compared our algorithm with the gene set enrichment analysis algorithm, gsea  <cit> . in order to use this algorithm, the gene expression data were transformed to gsea format, then phenotype files as well as gene sets for each domain were created. for both the oshima and baev data sets, no domain was considered significantly enriched at nominal p-value < <dig>  by the gsea algorithm. all possible combinations of parameters, which include 'metric for ranking genes' and 'gene list sorting mode', were used.

comparison with clustering and biclustering followed by enrichment analysis
we then applied biclustering to the oshima data set. for this comparison, we first considered the bimax algorithm  <cit> , which is available as part of the biclustering analysis toolbox bicat  <cit> . with default settings, this algorithm did not return any results. when setting the 'discretization threshold' to  <dig> , which approximately corresponds to the log <dig> we received  <dig> clusters as a result, but each of them with no more than  <dig> genes which was too small for further statistical analysis.

we then used the expander software  <cit> , following the suggestions in the documentation . for consistency reasons we used the same gene annotation data as for our own algorithm. tango enrichment analysis was performed, both on the results of the samba biclustering  <cit>  and the click clustering algorithm  <cit> , using default parameters throughout. both samba and click results led to the identification of two enriched functional groups, however only one of them  was found by both algorithms. the samba result showed enrichment for go: <dig> = response_to_desiccation and the click result for go: <dig> = cellular_macromolecule_metabolism.

both go: <dig> = response_to_desiccation and go: <dig> = cellular_macromolecule_metabolism are also found by our algorithm. in addition, our algorithm identifies five functional categories as significant that are not found by the comparison methods. as expected, based on the discussion that accompanies fig.  <dig>  our algorithm is able to identify patterns that are not accessible by a two-step method. note that go: <dig> = lipid_biosynthesis, which is found by both comparison methods does not satisfy the filter condition of a minimum of  <dig> genes that we applied to the data set when using our own algorithm. the clustering- and biclustering-based approaches also return a smaller number of genes as members of the significant clusters . fig.  <dig> highlights genes identified by each algorithm for go: <dig> = response_to_desiccation. two genes in the cps operon were considered significant by both ours and the samba-based algorithm. our algorithm found nine additional genes within the same functional group, whereas samba/tango found only four additional genes. both algorithms pointed to the same operon, in which all genes are expected to be similarly expressed and have related functions.

comparison with a previously proposed subspace-based algorithm
the development of this new algorithm was motivated by problems that we observed when applying one of our previous algorithms  <cit>   to the oshima data set. the subspace-based algorithm calculates histograms based on the following definition of a neighborhood: a gene is considered a neighbor of another gene if it is within a predefined range for at least a predefined fraction of dimensions. that means that two genes can be considered neighbors because they both show a particularly small differential expression. table  <dig> illustrates this problem: for the subspace-base algorithm , the variance of the differential expression of genes in the tail of the distribution is smaller than the variance of all genes with the respective functional designation. that means that the corresponding functional annotations are significant, based on genes that show little or no differential expression. note that from a statistical perspective such functional annotations may very well be significant, but from a practical perspective they are only of interest to biological researchers if the goal is to identify housekeeping genes and not differentially expressed genes.

column 1: function name from go annotation.

column 2: the average expression level of genes in the tail for the product-based similarity. using column-wise z-normalization.

column 3: the average expression level of genes in the tail for the product-based similarity. using row-wise z-normalization.

column 4: the average expression level of genes in the tail for the subspace-based similarity.

column 5: the average expression level of genes with the function.

column 6: the average expression level of genes in the whole data set.

the similarity measure used in this work is inherently designed to measure the degree to which positive or negative differential expression matches between any two genes. table  <dig> illustrates that for the new algorithm, as expected, the variance in the tail is indeed larger than the overall variance . note that the variance of the differential expression does not enter the algorithm as such but rather is a result.

choices within the algorithm
we tested how sensitive the algorithm is with respect to the value of the threshold value μ. we compared the outcome of the analysis for eight different choices of μ in the range from  <dig>  to  <dig> . six of the  <dig> functional annotations were significantly related to the gene expression data for all choices of μ, and  <dig> were not significant for any of the choices. for each of the remaining  <dig> choices, the value at μ =  <dig>  matched the result for at least half of the parameter choices. it can be concluded that the algorithm is not very sensitive to the choice of μ.

in addition, we evaluated the impact of data imputation on the results. our data set has 14% unavailable data, and hence it can be argued that selecting those from the estimated distribution of values is more appropriate than replacing them with the mean. we used the multiple imputation software by allison  <cit>  for this purpose. the functional groups, for which the majority of μ-values indicate a significant relationship with the gene expression data, as well as the result for μ =  <dig>  remain the same. we found that no more than, on average, one gene is considered as being in the tail without imputation and not in the tail with imputation or vice versa for the functional annotations that are significant in both settings. hence, we conclude that imputation does not have a strong impact on the outcome of the analysis either. finally, we tested how strongly the normalization affects the result. for this comparison, we applied z-normalization to rows and then applied the algorithm as previously. we found that only one additional functional annotation was considered significant, the abc_transporter domain from pfam. we also checked whether the significant relationships were due to highly expressed genes. the results are shown as column  <dig> of table  <dig>  it can be seen that the variance of expression values for the genes in the tail is typically smaller than the corresponding quantity based on all genes that share the functional annotation. only two of the annotations show higher variance in the tails . for the column-wise normalization that we use otherwise, the genes in the tail of the distribution have an higher variance for all functional annotations, i.e. the genes in the tail are more clearly differentially expressed. we, therefore, consider the results with column-wise normalization to more likely represent useful information.

performance
the algorithm scales linearly with the number of domain or function subsets. for each domain, scaling as a function of domain size is approximately quadratic, as fig.  <dig> shows. for the e. coli data set that was used in this study, the quadratic complexity is not a problem, and it can be seen that execution times are so small that performance is not expected to be a bottleneck even for larger genomes.

the runtime for one subset can be expressed as follow:

  tc=∗+tχ2−test 

where tc is the runtime of the algorithm for one subset, thist the time to create the histogram for one subset, textract is the time for extracting the subset of genes, r is the number of runs for random subsets  and tχ2−test is the time for the statistical analysis. under the assumption that data sets are small enough such that all genes can be kept in memory, the time is dominated by thist, which is quadratic in the number genes in a subset.

notice that the main contribution to tc comes from the histogram evaluation on random subsets. in the following section, we discuss a theoretical model for deriving the random histogram without resampling. the model ignores correlations that may occur even among unrelated genes, and is hence not expected to be as accurate as the randomized evaluation. nevertheless, it provides an alternative if the data sets are very large.

theoretical model for histograms
the resampling version of the algorithm, which is used for the remainder of this study, is robust with respect to uctuations in the data set. the theoretical derivation of a comparison distribution that is presented in this section is given for the sake of performance improvement where necessary, but is not expected to lead to equally robust results. for the random model that is used in the theoretical derivation, we assume that all experimental data follow a normal distribution. this assumption is not expected to be fully accurate, since gene expression experiments typically do not exactly follow such a distribution. the calculation also assumes that dimensions for the random comparison model are unrelated, which is a different approximation. both assumptions only apply to the theoretical model and not to the resampling approach that is used for this study. the resampling model is expected to be substantially more accurate, and the theoretical model should only be used if the computational complexity of the resampling model is considered prohibitive.

the coordinates of two experiments are denoted by vectors x and y. all those pairs of genes are considered significantly related, for which the product is greater than threshold t. the expected probability that the product for any two experiments is beyond the threshold t can be calculated by integrating the following expression over the relevant gaussian distribution functions:

  p=θ 

where θ is the heaviside step function, which is  <dig> for a positive argument and  <dig> otherwise. we integrate over all directions of x and y with their respective weights

  ∫θ2ne−x22e−y22dnxdny 

note the data are normalized using z-normalization, resulting in mean  <dig> and standard deviation  <dig> for both vectors x and y. the radius of the vector x will be denoted by r and the integration re-written

  ∫ne−x22dnx=∫snrn−1e−r22dr 

where sn is the surface of a hypervolume in n dimensions

  sn={2n+12πn−12!!for n odd2πn2!for n even 

the integration over y can be written as an integration over the coordinate in the direction of x, which we will denote as z and the vector perpendicular to x, represented by u. we can now rewrite the θ-function as follows

  θ=θ 

this function does not depend on u. the n - 1-dimensional integration over u, therefore only has a normalized n -  <dig> dimensional gaussian function as integral, and thereby trivially gives the result  <dig>  the probability of a product beyond the threshold is

  p=∫∫1ne−r22snrn−1θe−z22dr dz 

the integration over z can be performed by recognizing that the θ function is  <dig> only for z>tr and  <dig> otherwise.

  p=∫12n−1snrn−1e−r22dr 

given this probability p, we can calculate the theoretical distribution for the selected subsets:

  hk=npkn−k 

fig.  <dig> shows the histograms of the theoretical distribution, resampled distribution  and the observed distribution  for one of the three discussed functions. the resampled distribution is slightly more stretched than the theoretical one, which can be attributed to correlations among the experiments that are not considered in the theoretical model. fig.  <dig> shows that the complexity of the algorithm is significantly decreased, although it is still roughly quadratic.

using the theoretical model, the algorithm of table  <dig> can be modified as shown in table  <dig> 

CONCLUSIONS
we have introduced an algorithm that permits relating protein functions to gene expression data. it allows us to identify functions that are common in proteins whose genes are regulated similarly across the spectrum of two-component systems. our analysis led to the development of biological hypotheses that suggest further experimentation. initial experiments confirmed one of the hypotheses.

