BACKGROUND
data on single-nucleotide polymorphisms  have been found to be useful in predicting an individual’s class membership or his/her response to a drug, susceptibility to environmental factors such as toxins, and the risk of developing a particular disease, among others  <cit> . the classification literature provides a variety of classifiers  and sample size determination methods  <cit> , but most of these are only applicable to continuous data.

recently liu et al.  <cit>  developed an optimal bayes classifier and a linear classifier for coded snp data from two classes, and obtained a normal approximation to the probability of correct classification  for each classifier. they also proposed a sample size determination methodology to determine an adequate sample size, which ensures that the difference between the two approximate pccs is below a pre-specified threshold value. using monte carlo simulations, liu et al.  <cit>  assessed the validity of their approximations. furthermore, they illustrated the performance of their sample size determination method via simulations and a real data analysis using the hapmap data on two populations—chinese and japanese.

while liu et al.  <cit>  showed that their sample size determination method is competitive, they also pointed out that an additional maximization step is required in order to determine the discrimination values for each of their classifiers; see their remark <dig> in their article for more details. when there are three or more classes, however, determination of such discrimination values is not only more difficult, but also increases the overall computational burden. in a two-class scenario, a well known way to overcome this difficulty is to consider the receiver operating characteristic  curve, which plots the true positive rates vs. false positives rates, at various discrimination values  <cit> . note that the roc allows the discrimination value to be varied and it simultaneously explores all possible combinations of the correct classification rates  <cit> . the area under the roc curve  is commonly used as a scalar performance measure, which allows classifiers to be compared independent of the discrimination values. unfortunately, the auc measure is only applicable to a two-class scenario. a popular extension of the auc measure, known as the volume under the roc hyper-surface  measure, is often used in a multi-class scenario .

this article revisits the problem of sample size determination in classification scenarios involving coded snp data, but uses the auc and the vus as performance measures for two-class and multi-class scenarios, respectively. more specifically, for coded snp data from d classes, we derive an optimal bayes classifier and obtain a normal approximation to its probability of correct classification, which is denoted by pcc. we also derive a linear classifier and obtain a normal approximation to its probability of correct classification, which is denoted by pcc. for an overall assessment of each of the classifiers, we define the scalar measures auc  and vus , and correspondingly define the quantities auc,auc,vusandvus for each classification scenario. for the two-class scenario, we propose to determine the sample size n for which auc−auc<γ, where γ∈ is a pre-specified threshold value. whereas, for the multi-class scenario, we propose to determine the sample size n for which vus−vus<γ. a computational method to determine the total sample size for various values of γ is described. monte carlo simulations are carried out to corroborate our theoretical approximations, and the performance of our sample size determination method is assessed via simulations and analysis of the hapmap data consisting of  <dig> and  <dig> populations, respectively. in all, four different sample size determination studies are conducted with the hapmap data, covering cases involving well-separated populations to poorly-separated ones. details are given in the data analysis section.

r software was used to carry out all the computations. a pdf manual for r package “samplesizesnp” is given in additional file  <dig>  and a zip file of the r package “samplesizesnp” is given in additional file  <dig> 

methods
assumptions
suppose there are d distinct classes denoted by c <dig> …,c
d
, consisting of n <dig> …,n
d
 subjects, respectively. for each subject, we observe a p-dimensional snp vector, x→=′, where typically p is much larger  than ∑i=1dni, and the jth snp is coded in such a way x
j
= <dig> , <dig>  which denotes the number of minor alleles in the genotype “aa”, “aa” and “aa”, respectively. it is possible that some of the snps are highly correlated, leading us to choose one snp to represent a set of highly correlated ones. for classification and sample size determination, we make the following assumptions: 

 <dig>  for an m such that ∑i=1dni<<m<p, the data vector x→=′ consists only of m snps, which are statistically independent. that is, the rest of the  correlated snps are not used for classification.

 <dig>  for each k= <dig> …,d and j= <dig> …,m, we postulate hardy-weinberg equilibrium, according to which the probability mass function of the coded snp  belonging to class k is given by 

 pk=2xjθk,jxj2−xj,xj= <dig> , <dig>  

where θ
k,j
 is the minor allele frequency at locus j in class k, and by definition θ
k,j
∈. here, θ
k,j
< <dig>  because it is the minor allele frequency, and θ
k,j
> <dig>  ensures that the polymorphism is not a mutation. for each k= <dig> …,d, let θ→k=′ denote the parameter vector corresponding to the class c
k
.

 <dig>  there is a percentage ρ of the m snps with marginal effect on any two classes, and let l=⌊ρm⌋ be the number of snps with marginal effects.

the optimal classifier and its 
pcc

by the assumptions above, the conditional mass function of x→=′ given the class c
k
, k= <dig> …,d, is 

 fk=∏j=1l2xjθk,jxj2−xj. 

suppose πk=p and we denote the marginal mass function f=∑k=1dπkfk, then for each 1≤k≤d, the posterior mass function of the class c
k
 given x→ is 

 τk=πkfkf. 

for any fixed k= <dig> …,d, the bayes classification rule then classifies x→ to the class c
k
 if 

  τkτk′> <dig> 

for all k′≠k. this leads to the optimal bayes classifier, which classifies x→ to c
k
 if 

  ∑j=1lbk,k′jxj>kk,k′ 

for all k′≠k, where 

  bk,k′j=logθk,jθk′,jandkk,k′=logπk′πk+2log1−θk′,j1−θk,j. 

then, the pcc of the optimal bayes classifier is defined as 

 pcc=∑k=1dπkp⋂k′≠k∑j=1lbk,k′jxj>kk,k′|x→∈ck. 

in additional file 3: appendix  <dig>  we derive a normal approximation for pcc, as l→∞. that is, for large l, we show that 

  pcc≈∑k=1dπk∫k→k∞ϕx→;μ→l,k,Σl,kdx→, 

where 
ϕ
 is the -dimensional multivariate normal density, ∫k→k∞ is a multiple integral, k→k and μ→l,k are × <dig> vectors, and 
Σ

l,k
 is a × matrix. all these quantities are defined in additional file 3: appendix  <dig> 

in additional file 3: appendix  <dig>  we give an expression for  for the case d= <dig> 

a linear classifier and its pcc
motivated by the form of the optimal bayes classifier in , we consider the following linear classifier that classifies x→ to the class c
k
 if 

  ∑j=1mb^k,k′jwj,nxj>k~k,k′ 

for all k′≠k, where b^k,k′j=logθ^k′,j), θ^k,jandθ^k′,j are the maximum likelihood estimators of θk,jandθk′,j, respectively. also, the values of the weights w
j,n
 in  are determined in the following way: for each j= <dig> …,m and k′≠k, suppose we test the hypothesis h <dig> jk,k′:θk,j=θk′,j versus h <dig> jk,k′:θk,j≠θk′,j. then w
j,n
= <dig> if h <dig> jk,k′ is rejected; else w
j,n
= <dig>  in additional file 3: appendix  <dig>  we use the large sample theory to derive a wald test of level α to test h <dig> jk,k′ versus h <dig> jk,k′, and an expression for the power, 1−βjk,k′, of this test, when θk,j−θk′,j=hj.

in additional file 3: appendix  <dig>  we derive a normal approximation for the pcc of the linear classifier, denoted by pcc. that is, for large l, we show that 

  pcc≈∑k=1dπk∫k→~k∞ϕx→;μ→~l,k,Σ~l,kdx→ 

note that pcc depends on n→=′ through ; see additional file 3: appendix  <dig> for details. in additional file 3: appendix  <dig>  we give an expression for  for the case d= <dig> 


auc
 and 
vus
 for the optimal and linear classifiers
for any , define 

 ξk,k′=pclassifyx→tock′|x→∈ck. 

then, for the optimal bayes classifier in  we have from  that 

  ξk,k≈∫k→k∞ϕx→;μ→l,k,Σl,kdx→ 

and similarly, for the linear classifier in , we have from  that 

  ξ~k,k≈∫k→~k∞ϕx→;μ→~l,k,Σ~l,kdx→, 

for k= <dig> …,d. when d= <dig>  for the optimal bayes classifier, the roc for two classes is the curve ξ <dig>  vs. . then, the auc is 

 auc=∫ξ <dig> dξ <dig> . 

however, when the number of classes d≥ <dig>  we need to consider the volume under the roc hypersurface. following the work of landgrebe and duin  <cit> , the vus is defined as 

  vus=∫…∫ξd,ddξ <dig> ξ <dig> …ξ, 

 =∫…∫ξd,d∂ξ <dig> ,ξ <dig> ,…,ξ,∂dk1…dkd− <dig>  

by replacing ξ
k.k
 by ξ~k,k  in the above definitions of roc,auc and the vus, we obtain corresponding expressions for the linear classifier in . we denote the resulting ones as auc and vus. in additional file 3: appendix  <dig>  we derive these expressions for the case d= <dig> 

computation of 
vus

as is evident from , the computation of vus involves high dimensional integration. given below is a brief description of the steps involved in the computation of vus. for ease of exposition, we will denote ξ
k
=ξ
k,k
, k= <dig> …,d. first, we randomly generate the thresholds k→= ) and compute the corresponding ξ→=′ satisfying . note that the ξ→ contributes to the integration in vus only if all the ξ
k
’s are positive.

to find as many ξ→ values that contribute to the integration as possible, we use the ant colony optimization algorithm, where only the k→ values corresponding to the ξ→ values that contribute to the integration are retained. however, these are perturbed by a small noise and the resulting k→ values are used as seeds for the next iteration. then, we use the genetic algorithm to obtain another ξ→ value located in a different region within 
k
, which also contributes to the integration. we use the ant colony algorithm and the genetic algorithm alternatively to eventually generate a dense set of ξ→k) values that contribute to the integration. note that the process is such that the newly generated ξ→ values are appended to all the previously generated ξ→ values.

now, to compute the volume, vus, we use the convhulln function in the qhullr-package. note that the convhulln function is designed to determine the convex hull of a set of d-dimensional points and thus compute the volume of the hull. in view of this, in order to compute the volume, vus, a base of ξ→  is appended to the original ξ→. since in each iteration the new ξ→ values are appended to the old ξ→ values from the previous iterations, and the vus is concave, the computed vus is supposed to increase in value with each iteration. we stop appending the new ξ→ values when |vus
o
l
d
−vus
n
e
w
|< <dig> . when this criterion is satisfied, we obtain the value of vus. similarly, the values of auc,auc,andvus are calculated.

sample size determination using 
vus
 or 
auc

given a threshold γ, we determine the sample size n satisfying the following condition: 

  vus−vus<γ 

for the case d= <dig>  we determine the sample size n satisfying the condition: auc−auc<γ. a simulation study for the case d= <dig> is carried out in additional file 3: appendix  <dig> to assess the performance of our sample size determination algorithm.

RESULTS
monte carlo simulations
before we illustrate the performance of our sample size determination method based on auc or vus, we present results from an extensive monte carlo simulation study conducted to verify the accuracy of the approximations for auc and vus, respectively, and study their behavior as a function of n and other parameters. here, we present the numerical assessments based on the vus for the cases d= <dig> and  <dig>  respectively. however, as mentioned above, the assessments based on the auc for the case d= <dig> are given in additional file 3: appendix  <dig>  henceforth, we will set n
k
=n for all k= <dig> …,d, and we will use n instead of n→ to simplify notations.

when d= <dig>  we consider the following simulation set up: for θ→1=′, let θ <dig> j
∼u, j= <dig> …,m; for a specified scalar value h, let h→ <dig> h→ <dig> be such that their components h
i,j
∼u, i= <dig> ; j= <dig> …,m; and let θ→2=θ→1−h→ <dig>  θ→3=θ→2−h→ <dig>  first, we generated a  according to the above set up, and then generated the data vector x→=′ for each class. we then computed vus^ and vus^ following the computational methodology described earlier. for this , we then drew twenty x→ data sets and calculated a monte carlo estimate, denoted by vus^mc. this process was repeated  <dig> times and an average value of vus^mc was computed. these are given in table  <dig>  it is evident from table  <dig> that the bias^=vus^mc−vus^ is negligible in most cases, which validates the use of our approximation for vus. table  <dig> also gives similar results for the case d= <dig>  note that vus=1/d! for a random classifier, which is the lower bound of vus for any classifier.

d = 3

h
m
n
d = 4
here, d =  <dig> and  <dig>  θ→1=′, let θ <dig> j
∼u,j= <dig> …,m; for a specified scalar value h, let h→ <dig> h→ <dig> h→ <dig> be such that their components h
i,j
∼u ,j= <dig> …,m; and let θ→i+1=θ→i−h→i,i= <dig> ,3; n is the sample size for each class; m is the number of independent snps, α= <dig>  is the significant level for wald tests; and ρ= <dig> is the percentage of the significant snps.

next, we determine the smallest n such that f=vus^−vus^−γ< <dig>  for a pre-specified γ value. we use the following algorithm to determine such an n:  let n=n
s
 and n
l
 such that f> <dig> and f< <dig>  and set n
m
=. the algorithm begins by selecting a small n
s
 and a large n
l
;  if ff< <dig>  then reset n
l
=n
m
; or else, reset n
s
=n
m
. in either case, return to step , unless n
l
−n
s
≤ <dig>  in which case, the smallest sample n=n
l
;  use the smallest  sample of size d×n
l
, with n=n
l
 from each class, c <dig> …,c
d
. we implemented this algorithm for each value of h, m and significance level α for the wald test; see discussion below . for the cases d= <dig> and d= <dig>  respectively, table  <dig> displays the determined sample sizes for γ= <dig>  and each combination of parameter values. from table  <dig>  it is evident that the required sample size reduces as h increases, as expected. hence, f< <dig> for smaller sample sizes, as shown in table  <dig>  however, the effect of m on the determined sample sizes is less clear. when h is large, say h≥ <dig> , then the required sample size reduces as m becomes large. whereas, when h is small, say h= <dig> , the reverse is true as m becomes large.

n

d
h
m = 30
m = 50
m = 100
m = 200
here, θ→1=′, let θ <dig> j
∼u,j= <dig> …,m; for a specified scalar value h, let h→ <dig> h→ <dig> h→ <dig> be such that their components h
i,j
∼u, j= <dig> …,m; and let θ→i+1=θ→i−h→i,i= <dig> ,3; m is the number of independent snps, α= <dig>  is the significant level for wald tests; and ρ= <dig> is the percentage of the significant snps.

application to the hapmap data
the aim of the international hapmap project is to develop a haplotype map of the human genome, which will describe the common patterns of human dna sequence variation.

the hapmap data  consists of eleven populations with about p= <dig> × <dig> snps. here, we consider the following nine populations in order to illustrate our sample size determination algorithm: asw—african ancestry in southwest usa with  <dig> subjects; ceu—utah residents with northern and western european ancestry from ceph collection with  <dig> subjects; chb—the han chinese individuals from beijing with  <dig> subjects; chd—chinese in metropolitan denver, colorado with  <dig> subjects; gih—gujarati indians in houston, texas with  <dig> subjects; jpt—the japanese individuals from tokyo with  <dig> subjects; mex—mexican ancestry in los angeles, california with  <dig> subjects; tsi—toscans in italy  with  <dig> subjects; and yri—yoruba in ibadan, nigeria with  <dig> subjects. with these, we created four sample size determination studies, of which the first three involve three populations , and the last study involves four populations . more specifically, we conducted our sample size determination studies with the following population groupings:  ;  ;  ; and  .

based on all the available subjects, we extracted pair-wise independent snps using the following steps. suppose l is a set of snps, then:  form a set s with one snp from l and update s after the next step;  from the remaining snps in l, choose one snp that is independent of every snp in s using kendall’s τ coefficient as a test statistic to test pair-wise independence, and then add this new snp to s. here, we concluded independence if the kendall’s τ-value < <dig> ;  repeat  until each remaining snp in l is correlated with at least one snp in s. this procedure yielded a set s with m= <dig> pair-wise independent snps, and with these we built our linear classifier.

next, we set ρ= <dig> so that m=l=92; see assumption  <dig> under the methods section. recall that θk→=′ for k= <dig> …,d. for the cases d= <dig> and d= <dig> considered in studies  to  above, we estimated θk→ using the maximum likelihood  estimates obtained based on all the available subjects belonging to the respective populations. we then substituted these ml estimates into the corresponding expressions for vus^ and vus^, respectively. figures  <dig>   <dig> and  <dig> show plots of required sample sizes for a continuum of threshold values γ for the case d= <dig> considered in studies  to , respectively, and figure  <dig> plots the same for d= <dig> considered in study . from these figures, the required total sample size can be determined approximately for each pre-specified γ value.

for example, if we set γ= <dig>  ^−vu^s< <dig> ), then in the three population  case, the vus^= <dig>  and about  <dig> observations are required for each class with a total sample size of  <dig>  whereas in the three population  case, the vus^= <dig>  and about  <dig> observations are required for each class with a total sample size of  <dig>  note that, for γ= <dig> , in study  the required sample sizes for each population is less than what is currently available, whereas in study , we would need  <dig> and  <dig> more observations for the populations asw and tsi, respectively. for the three population  case, if we set γ= <dig>  then the vus^= <dig>  and about  <dig> observations are required for each class with a total sample size of  <dig>  clearly, for study  at least  <dig> more observations are needed for each population  when γ= <dig> . finally, for the four population  case, setting γ= <dig>  yields that the vus^= <dig>  and about  <dig> samples are required for each class with a total sample of  <dig> . once again, at least  <dig> more observations are needed for each of the four populations when γ= <dig> .

the results from the four hapmap studies suggest that the vus^ value is large and the required total sample size is small when the populations are well-separated . whereas, when the populations are moderately-separated , the vus^ value reduces and the required total sample size increases moderately. when the populations are poorly-separated , the vus^ value reduces even further and there is a substantial increase in the required total sample size. finally, in the four population study, where three of the populations are poorly-separated, once again we see a further reduction in the vus^ value and a corresponding increase in the required total sample size. although not reported here, we also considered other well-/moderate-/poorly- separated cases with the hapmap data and observed similar results as the ones reported here.

it is well known in the classification literature that the performance of a classifier depends on how well separated the classes are. similarly, the studies above involving the hapmap data show that the performance of our sample size determination methodology also depends on the extent of separation between populations. while our methodology provides a formal way of determining an approximate total sample size for each specified value of γ, it is clear from the hapmap data analysis that it is not possible to propose a universal γ value. nevertheless, if the classes are well-separated or moderately-separated, then we believe that γ= <dig>  may be a good choice for many frequently encountered data sets in classification problems.

discussion
we have built an optimal bayes classifier and a linear classifier based on coded snp data from two or more classes. for these classifiers, we have considered the two commonly used scalar performance measures, the area under the roc curve  and the volume under the roc hyper-surface , which allow classifiers to be compared independent of discrimination values. we have illustrated the performance of a sample size determination methodology, which selects the smallest total sample size n such that the criterion vus^−vus^<γ is satisfied. while the approximations to the vus  obtained here provide the necessary theoretical justification, the simulations and the hapmap data analysis presented here illustrate the practical value of our sample size determination method.

the fact that the hapmap contains data on multiple populations belonging to similar or dissimilar geographical locations enabled us to test the performance of our sample size determination method on three different multi-class scenarios involving well-separated, moderately-separated, and poorly-separated populations. we have shown that the the extent of separation between the populations and the choice of threshold value affect the total sample size required to satisfy the criterion. with regard to the choice of the threshold value γ in other practical contexts, we recommend that the user take into consideration the cost of obtaining more samples and choose an appropriate value of γ that gives an acceptable precision. in other words, if the cost of sampling is affordable then the user may want to sample more to achieve a higher precision  using our classifier; otherwise, the user has to settle for a higher γ value that makes use of all the available samples. we also infer from our hapmap data analysis that a value of vus^> <dig>  may indicate the extent of separation between the classes. thus, the value of vus^ could also give some prior guidance on the choice of γ values, especially in instances where the cost of sampling is a serious concern.

CONCLUSIONS
in summary, for multiple classes, we have developed an asymptotic methodology based on auc or vus to estimate the learning curve of snp classifiers. it is shown that the required total sample size can be obtained from the estimated learning curve for each pre-specified threshold value. in classification problems, sample size determination is important due to cost considerations. this methodology will help scientists determine if a sample at hand is adequate or more observations are necessary to achieve a pre-specified accuracy, and thus help users strike an optimal balance between precision and cost.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
xl developed and implemented the proposed model, performed simulation and application, and drafted the manuscript. tns participated in model development and helped manuscript preparation. yw participated in hapmap data analysis. all authors read and approved the final manuscript.

supplementary material
additional file 1
manual of r package “samplesizesn”.

click here for file

 additional file 2
r package “samplesizesnp” in zip file.

click here for file

 additional file 3
appendix 1– <dig> 

click here for file

 acknowledgements
we would like to thank the editor and the two reviewers for their careful reading and insightful suggestions, which greatly improved the content and the presentation of the article. t.n.s. was supported by a grant from the national security agency  and the national science foundation .
