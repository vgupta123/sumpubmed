BACKGROUND
noise is inherent in gene expression and affects the behavior of genetic circuits and thus phenotype determination. it is unknown to what extent this noise is evolvable. one mechanism that likely contributes to transcriptional noise in prokaryotes is rna polymerase  pausing during elongation 
 <cit> . pausing enhances the propensity for collisions between consecutive rnaps in the template 
 <cit>  and, in some cases, of premature terminations 
 <cit> , particularly when hairpin loops form in the transcript, facilitating the recruitment of rho-factor, a protein that dissociates the rna from the dna template and rna polymerase 
 <cit> . the distance of the hairpin from the rna 3′ end and the rna sequence affect pause duration and proneness for premature termination 
 <cit> , indicating that the kinetics of this process is sequence dependent 
 <cit> . this feature makes transcriptional pausing a plausible mechanism via which natural selection may act upon noise in gene expression.

long-duration pauses usually occur only at specific dna sequences 
 <cit> , while short-duration pauses occur at random locations 
 <cit> . observations in bacteria suggest that the rnap pauses, on average, every  <dig> to  <dig> bp, for a few seconds 
 <cit>  and, less frequently, for one to several minutes 
 <cit> .

one of the best studied long-pause sites is the his pause sequence. this sequence causes the rnap to pause for, on average,  <dig> s, with an efficiency that can go up to 80% 
 <cit> . the long duration of this event relies on the formation of a hairpin loop in the elongating rna sequence that stabilizes the rnap 
 <cit> . by removing the region of the dna that codes for loop, the duration is reduced to  <dig>  s, and becomes exponentially distributed 
 <cit> . unlike his pauses, other sequence dependent long pause sites do not require the formation of rna secondary structures 
 <cit> .

studies of transcriptional pausing have focused on the physical-chemical causes and its physiological role in gene expression 
 <cit> . biochemical experiments to single-molecule measurements suggest that there are several kinds of transcriptional pauses, which differ in the causal mechanism and in duration once occurring 
 <cit> . one hypothesis regarding the role of pausing is that it facilitates the coupling of transcription and translation by halting the rnap, allowing a translating ribosome to catch up 
 <cit> . recently, it was suggested that pauses affect transcriptional noise 
 <cit> . also, the location of the pause-prone sequence, the duration, and the proneness for pausing influence the extent to which the pause affects the kinetics of rna production 
 <cit> . these effects on rna numbers may be of relevance in prokaryotes, particularly because rnas usually exist in very small amounts  
 <cit> .

so far there are only hypotheses regarding what may be the roles of sequence-dependent pauses on the dynamics of gene expression and genetic circuits 
 <cit> . to determine the role of pauses, a better knowledge is required regarding which sequences enhance the occurrence of pauses. also, more knowledge is needed on the kinetics of the various pausing mechanisms and on their location in the genome to determine which genes’ expression is affected by pauses. for that, methods are needed to recognize the existence of pauses from temporal gene expression profiles. it is also necessary to identify the sequences responsible for the occurrence of transcriptional pauses.

with this aim, here we investigate whether, from temporal rna and protein numbers, we can determine if there is a long-duration pause site in the elongation region of a gene. additionally, we aim to estimate, at least by comparison, the mean duration of a pause and its location relative to the transcription start site. for that, we simulate stochastic gene expression dynamics at the nucleotide and codon levels 
 <cit>  of genes whose sequence includes long-duration pause sites that promote the occurrence of pauses with identical kinetics to that of the his pause 
 <cit> . namely, we produce temporal series of rna and protein numbers assuming that these molecules can be detected at the single-molecule level, as soon as they are produced, which is possible using ms2-gfp tagging 
 <cit>  for rna, and tsr-venus sequences for proteins 
 <cit> . we use this information to search for pause sites and characterize their kinetic properties making use of statistical methods for classification using features extracted from time series of rna and protein numbers.

methods
modeling gene expression
we use a delayed stochastic model of prokaryotic transcription and translation at the nucleotide and codon level that includes the closed and the open complex formation, stepwise elongation, as well as alternative pathways to elongation, namely pausing, arrests, editing, pyrophosphorolysis, rna polymerase traffic, and premature termination. stepwise translation can begin after the formation of the ribosome binding site and accounts for variable codon translation rates, ribosome traffic, back-translocation, drop-off, and trans-translation 
 <cit> .

the dynamics follows the delayed stochastic simulation algorithm 
 <cit> , which is based on the ssa 
 <cit> . the delayed ssa allows an arbitrarily distributed time delay to be associated with the release of each of the reaction products, and consequently it can be used to model non-instantaneous sequences of events, which are expected not to follow the exponential statistics of ssa. we make use of such delays to model, for example, events during the stepwise process of transcription initiation. each chemical species is a variable of integer value. time advances at discrete steps and, at each step, a reaction occurs and the number of molecules of the species involved are updated according to the reaction formula. in a delayed event, one or more products are kept on a waiting list until sufficient time has elapsed, after which they are released in the system. delayed events are represented as a→b + c. when this reaction occurs at moment t, b is instantaneously produced at t and c is placed on a waiting list until it is released at t + τ <cit> . the value of τcan be drawn from a specified distribution, each time the reaction occurs. this is the case, for example, for the duration of the open complex formation .

chemical reactions, rate constants , and delays  used to model transcription and translation. pro – promoter, rp – rna polymerase, rib – ribosome, [ribr – number of translating ribosomes on rna strand, p – complete protein, u – unoccupied nucleotide and o – nucleotide occupied by rp, a – activated nucleotide; ur,or,ar – corresponding ribonucleotides. n denotes the number of the nucleotide in the sequence. Δp – range of nucleotides that rp occupies, Δp= <dig>  Δr – range of ribonucleotides that ribosome occupies, Δr= <dig>  notation x∼n denotes that the values of x are drawn from normal distribution with a mean of μand variance of σ <dig>  parameter values are from measurements in e. coli, mainly for lacz 
 <cit> . the duration of protein folding after translation is completed  is set according to measurements of a commonly used gfp mutant 
 <cit> .

the model of transcription accounts for the binding of the rnap to the template and diffusion along the template , promoter open complex formation  
 <cit> , promoter clearance , nucleotide activation followed by stepwise elongation at each nucleotide , and termination . the reactions competing with stepwise elongation are transcriptional pauses , collisions between rnaps, which may release  or induce pauses , arrests , misincorporation and editing , premature terminations , and pyrophosphorolysis . the number of nucleotides  occupied by the rnap on the strand while elongating is  <dig> 
 <cit> . finally, mrna can undergo degradation  
 <cit> .

the model of translation includes translation initiation  and ribonucleotide activation  followed by stepwise translocation  
 <cit> . reactions competing with translocation are the back-translocation , ribosome drop-off , and trans-translation . after elongation completion, it follows protein folding . the model accounts for codon-specific translation rates 
 <cit>  and for the ribonucleotides occupied by a ribosome when on the rna strand 
 <cit> . finally, protein molecules undergo degradation . note that each time we generate the sequence of a model gene, we generate the codon sequence randomly, according to the statistical frequency of each codon in escherichia coli  
 <cit> .

modeling sequence-dependent pauses
two types of transcriptional pauses have been identified: i) ubiquitous pauses, which can occur at any nucleotide with approximately uniform probability of occurrence 
 <cit> , and ii) sequence-dependent pauses, which occur at specific regions of the sequence 
 <cit> .

reaction  <dig>  in table 
 <dig> models the occurrence of ubiquitous pauses and their release . to introduce a sequence-dependent pause in nucleotide n, we modify the reactions at that location as follows: 

  on⇌1/τnpknponp 

where 
knp=kaεnp−1−1− <dig> is the rate of pausing, 
τnp is the mean duration of the pause, and 
εnp denotes the pause efficiency, that is, the probability that an rnap pauses when at the nth nucleotide.

as specified in reaction  <dig>  the duration of these pauses is randomly drawn from an exponential distribution with the appropriate mean pause duration each time it occurs. it is noted that the assumption of exponential duration of each pause event is based on measurements where the sequence causing the pause is present, but the subsequent sequence where hairpin loops form  is not 
 <cit> . unfortunately, there are yet no measurements available informing of the distribution of the durations of these long pauses, and thus we opted to make this assumption.

when a pause occurs, the ribosomes translating the rna proceed only until the point where the rnap is stranded. at that point, ribosomes pause until the rnap is released 
 <cit> . due to this, the pauses are expected to affect protein number dynamics 
 <cit> .

detecting the presence of a sequence-dependent pause site
simulations of the models are initialized without rna or proteins in the system. for our analyses we use only the stationary part of a time series. the methods assume the time series to be weakly stationary, meaning that the first two moments  do not vary over time. this condition is, in all cases, tested by a two-sample t-test for the ensemble mean values for a sample size of  <dig> 

we first present a method to detect a sequence-dependent pause site from the time series of rna and protein numbers. we denote by rm, 
rm′ two matrices of size f×lcontaining the number of mrnas generated from two models, m and m′. f is the number of time series generated for each model and l is the length of the part of a time series that is assumed to be stationary. rm is a vector of length l containing the number of mrnas of the ith time series for model m. analogously, pm, 
pm′ are two matrices of size f×lcontaining the number of proteins for the two models. a thorough discussion of the generated data, i.e., how it was sampled, can be found in the results section.

previous work based on the simulations of stochastic models similar to the one used here 
 <cit> , reported that the presence of sequence dependent pauses affect the rna production sufficiently to have a discernible effect on the mean number of mrnas. we use this feature as a statistic to discriminate between models with and without a pause site. more precisely, we conduct hypotheses tests according to the following procedure. first, we estimate the mean number of mrnas for two models m and m′from a randomly sampled time series i of length Δlby: 

 <dig>  sample i∼unif

 <dig>  sample ls∼unif

 <dig>  estimate the mean number of mrnas for model m and m’: 

  mmr=1Δl+1∑t=lsls+Δlrm 

  mm′r=1Δl+1∑t=lsls+Δlrm′ 

here, the symbol unif indicates the uniform probability distribution with a discrete domain from x to y. we repeat the above procedure for s∈s samples to obtain two profile vectors of dimension s containing information about the mean number of mrnas. based on the profiles 
mmr and 
mm′r we conduct a two-sample t-test 
 <cit>  for their mean values: 

  null hypothesis:h0:μmmr=μmm′r 

  alternative hypothesis:h1:μmmr≠μmm′r 

this test results in a p-value, p, indicating for p≤αthe statistical significance of the test, i.e., the rejection of the null hypothesis, for a given significance level α. this p-value should be denoted as 
pm,m′ since it results from a comparison of data from model m and model m′. repeating the above procedure n times results in n different p-values that reflect the behavior of the population. finally, we apply the same procedure to pmand 
pm′ to obtain similar information for the protein levels.

definition of feature vectors
for each of the models with pauses with distinct kinetic characteristics, we measure the number of mrnas and of proteins, and the cumulative number of proteins as a function of time, represented by matrices, rm, pm and em, respectively. following the previous notation, each matrix has size f×l, where f is the number of repeated time series and l is the length of the stationary time series.

to perform a clustering and a classification of the time series data generated from the different models, we define the following  <dig> features, which we use to define feature vectors. these features capture information about the autocorrelation, cross-correlation and the duration of the transcription and translation processes. specifically, we estimate the lag-l sample autocorrelation, rxx 
 <cit>  by 

  rxx=∑t=l+1t∑t=1t <dig>  

here 0≤l<t− <dig> and 
m¯x=∑t=1txt/t is the mean of the time series {xt}. we estimate the lag-l sample autocorrelation for rmand pm, i.e., rxx and rxx. then we estimate the mean and the standard deviation of the autocorrelation function, rxx, up to lag k by 

  m=1k∑l=1krxx×l 

  s=1k−1∑l=1krxx×l−m <dig> 

for our numerical analysis we set k= <dig>  similarly, we estimate the lag-l cross-correlation, rxy, by 

  rxy=∑t=l+1t∑t=1t2∑t=1t <dig>  

with 0≤l<t− <dig> and 
m¯y=∑t=1tyt/t is the mean of the time series {yt}. also, for the cross-correlation function we estimate m and s up to lag k for rmand pm.

further, we estimate the mean decay time of the transcripts and its standard deviation. to obtain these, we first determine a vector, d, of decay times of mrnas by estimating for how many consecutive steps 

  rm≥rm 

holds during the time series rm. a component of vector d therefore gives the number of consecutive steps for which the number of mrnas does not increase. from the resulting vector d) we estimate its mean, m)), and standard deviation, s)).

a summary of all  <dig> variables is given in table 
 <dig>  we use these variables to define a  <dig> dimensional feature vector 
vm∈r <dig> for a model m, i.e., vm gives the value of the i-th variable in table 
 <dig> 

summary of the  <dig> variables we use to define a feature vector for a model m.

we would like to emphasize that all three types of measures introduced above, based on autocorrelation, cross-correlation and the decay time, are fundamentally different from each other. whereas the first two types of measures are based on a different usage of correlation coefficients within  and between time series , the latter measure is not referential. instead, it provides information about the continuity of the transcription process. in the results section, we will provide quantitative information for this argument.

RESULTS
we model genes  <dig>  nucleotides long. unless otherwise stated, the long-pause site is at nucleotide  <dig> and has the same kinetic properties as a his pause, i.e., the efficiency of pausing is 
εnp= <dig>   and the mean duration is 
τnp= <dig> s 
 <cit> . we do not model an enhancement in the premature terminations at this location, since measurements of the kinetic properties of this process are not yet available. however, the occurrence of pauses may nevertheless lead to an increase of premature terminations due to increasing the expected duration of the elongation process which, on its own, may lead to an enhanced chance of premature termination of rnaps preceding the paused one 
 <cit> . the models are implemented and simulated in sgn sim 
 <cit> .

for the following analysis, we consider six models, a through f, described in table 
 <dig>  in the null model a, we assume ubiquitous pauses only. namely, at each nucleotide there is a rate of occurrence of pausing set to  <dig>  s− <dig>  once occurring, such pauses last, on average,  <dig> s following an exponential distribution 
 <cit> .

the six models with different pause characteristics are considered for the purposes of detection and classification of sequence dependent pauses.

the comparison between models a and b tests if the presence of a long pause is detectable from time series of rna and protein numbers. the other models are used to test whether the location and kinetic properties of the pause can be classified. for each model, we simulate  <dig> instances, each for  <dig> , <dig> s. the sampling frequency of the number of rnas and proteins is  <dig> s− <dig>  the different instances of each model differ in the codon sequences, as these are randomly generated as described in the methods section. however, it is noted that the length of the sequence used here was found to be sufficient to not expect significant differences in the kinetics of translation elongation due to differences in the codon sequence.

we found that for t≥ <dig>  s the time series for the models a through f are weakly stationary, as hypothesized by the methods. additionally, the time series appear ergodic, i.e., the ensemble average over different realizations corresponds to the time average over an individual time series 
 <cit> . despite these properties, the average number of proteins estimated from a  sample size s≪ <dig> , <dig> is not a reliable variable that could serve as a feature, e.g., for clustering or classification of different models.

to visualize this problem, figure 
 <dig> shows time series of the average of the number of proteins of  <dig> independent simulations for each model. in addition, each data point has been averaged over  <dig> time steps and smoothed over a window of size  <dig>  for the smoothing, we used a standard cubic spline smoothing 
 <cit> . despite the smoothing, the resulting time series fluctuate clearly around the mean value of the time series, showing that the average number of proteins from ‘small’ samples is not a reliable feature.

we would like to emphasize that, theoretically, different models can be distinguished from each other by calculating the asymptotic average number of proteins, however, in practice  the fluctuations increase the uncertainty of these estimates. this is especially important if one aims at studying the dynamics of expression of real genes since, given the present methods, asymptotic results are unreachable.

detecting a sequence-dependent pause site
first, we test if a sequence-dependent pause with the aforementioned characteristics is detectable. such a detection would discriminate a model with a pause site from a model without one. to study this, we compare model a with model b with the hypotheses tests described in the methods section.

the results of the analysis are shown in the first column in figure 
 <dig>  there, the distribution of p-values is shown in dependence on the sample size s  and the length of the time series . the top row shows results for Δl= <dig> and the bottom row for Δl= <dig> , for illustration purposes. the results correspond to n= <dig>  which means that for each sample size, we obtained  <dig> independent p-values. in general, in a boxplot a ’circle’ corresponds to an outlier.

it is visible that, with larger sample sizes, the median p-values fall below the α= <dig>  significance level , which means that the two models can be discriminated from each other in a statistical manner. the p-values for Δl= <dig> are in general higher than for Δl= <dig> , as expected, because a shorter time series contains more variability with respect to the estimation of the mean number of mrnas or proteins.

it is interesting to note that the information provided by the protein level allows a better discrimination for Δl= <dig> compared to the mrna level. specifically, for sample size  <dig>  the median p-value of the number of proteins is clearly significant, whereas the p-value for the mrnas is not. for longer time series this difference vanishes. further increasing Δl leads to an even better distinction between the model a and b by requiring a smaller number of samples .

to demonstrate that the null hypothesis is not rejected if the data come from the same model, i.e., when the null hypothesis is true, we repeat the above analysis to obtain p-values for the cases pa,a and pb,b. the second column in figure 
 <dig> shows the result for a comparison of data from model a. in this case, the probability to reject the null hypothesis falsely is very low, because almost all p-values are much larger than our significance level of α= <dig> . for model b we obtain qualitatively similar results .

classification of models
we hypothesize that despite the intricate dynamics of the gene expression model where, e.g., rnaps can bump into each other causing mutual delays of transcription, the information captured on the mrna and protein numbers suffices to distinguish models with different parameter configurations. to demonstrate this, we estimate feature vectors for each model, based on the  <dig> features defined in the methods section, and show numerically their discriminative power.

the rationale of the following analysis is, first, to use an unsupervised clustering analysis to demonstrate that our features are not only sufficient to recover different models in an unsupervised manner but also that such clusters are robust. second, we use a random forest classifier to classify the models based on our feature vectors. this allows a precise quantification of the errors made by such a categorization.

first, we perform an unsupervised clustering analysis. specifically, we generate for models a through f time series data from which we estimate  <dig> feature vectors 
{vm}j= <dig> for each model. each of these feature vectors vmj is  <dig> dimensional, i.e., vmj with i∈{ <dig> …,10}. since the  <dig> variables defining the components of the feature vectors vmj are on different scales, we perform a z-transformation separately for each component to scale the different variables. that means, after the z-transformation, every variable  follows a standard normal distribution, i.e., vmj∼n. here, the symbol ’∼’ indicates that the random variable  is sampled from a model . to these feature vectors , we apply a hierarchical clustering using a manhattan distance measure and the mcquitty clustering 
 <cit> . the results for models a, c and d  and models b, e and f  are shown in figure 
 <dig>  we used for the three major branches of the clusters three different colors to highlight them. the resulting clusters are not without error with respect to the types of the models. however, overall, the obtained clusters correspond well to models with different kinetics. clustering all models together results in similar but slightly worse clusters.

the sensible cluster formations of our hierarchical clustering in figure 
 <dig> demonstrate that time series data from different models carry indeed different information, which can be captured by our  <dig> features. this implies that our  <dig> dimensional feature vectors are sufficient to accomplish their separation. further, it shows that the formation of these clusters is robust because the differences in the height of the lowest clusters compared to the major branches is up to 30-fold larger. this is confirmed by a bootstrap analysis using only a subset of all available data to cluster the models, which leads essentially to the same cluster formations .

what the clustering in figure 
 <dig> does not show is if all  <dig> features are actually required. for this reason, we repeated the clustering for many subsets of the  <dig> features and found always less meaningful clusters. this indicates that all features are different from each other and capture complementary information. to demonstrate this last point, we show in figure 
 <dig> a graphical visualization of p-values obtained from correlation tests of the  <dig> features. more precisely, we use the same data we used for our clustering analysis and estimate the statistical significance of the correlation coefficients between the different features in form of p-values 
 <cit> . in figure 
 <dig>  the feature index corresponds to the feature number in table 
 <dig>  we use a color code for the obtained p-values where red indicates low and blue indicates high p-values . statistically, this means if a p-value is low  the correlation between two feature indices is high. correspondingly, high p-values represent low correlation coefficients. due to the symmetry of a correlation coefficient, the shown matrix of p-values is also symmetric. as one can visually see from figure 
 <dig>  the patterns demonstrate the independence of the features and explain why the removal of individual features worsens the clustering results. the mathematical interpretation of these results is that our feature vectors form a kind of base of the model space generated by the dynamical system we study.

next, we quantify the classification abilities of the feature vectors. we use a random forest classifier  
 <cit>  to categorize all models. a rfc is an ensemble method that is based on decision trees. due to the fact that it consists of multiple  decision trees and not just one, it is called a forest . each decision tree is only capable of performing a linear classification, however, breiman 
 <cit>  showed that an ensemble of decision trees performs actually a non-linear classification. training a rfc with  <dig>  trees and averaging over  <dig> bootstrap 
 <cit>  data sets results in a classification error of  <dig> %. if, instead, we are classifying models a, c and d and models b, e and f separately, then we obtain a classification error of  <dig> % for a, c and d, and  <dig> % for b, e and f.

overall, these findings demonstrate that the information measured by the mrna and protein numbers suffice to distinguish the models from each other, however, not without error. we studied many additional variables by enlarging the dimension of the feature vectors and found that the above classification errors can be further lowered. however, due to the moderate decrease in the classification errors  and the considerable increase in the complexity of the model , we focused on lower dimensional feature vectors as these suffice to provide affirmative information for our hypothesis.

estimating the location of a pause site
finally, we estimate the location of a pause site from time series data. for this, we consider the location of a pause site as a parameter of the gene expression model and estimate its optimal value with a maximum likelihood estimation 
 <cit> .

because for the model of gene expression used here there is no known likelihood function available that could be used to obtain a maximum likelihood estimate for this parameter, we use an approximation thereof. the approximation proposed is based on the feature variables defined in table 
 <dig>  which have already proven useful for the clustering and classification of the models. specifically, we define an approximate likelihood function as 

  l=p=πi=1sp=πi=1sπj=1vp|θ). 

here, y is a s×vmatrix where s is the sample size and v  corresponds to the dimension of the random variable 
yi∈rv, which are the row vectors of matrix y. the components of yi, whereas the index refers to the i-th sample, correspond to the variables defined in table 
 <dig>  i.e., yi=,…,vv) with v= <dig> 

for simplicity, we assume that the multivariate density p can be written as the product of its components, i.e., 
p=πj=1vp|θ), implying the independence of vifrom each other. in the previous section we saw that all random variables vj are required to obtain a sensible classification of the models. this justifies the independence assumption, because if these variables were strongly dependent, the dimension of the feature vector could have been reduced.

further, we define p as the joint probability density to observe the random variable x=vj in the models 
mθ′ and mθ. more precisely, the joint probability density is calculated by 

  p=prob==∫min{f,g}dx. 

here, the probability densities f  and g correspond to models 
mθ′ and mθ, respectively. f  and g are unknown and need to be estimated. we use a gaussian density estimator 
 <cit>  to estimate 
f^n′ and 
ĝn from samples. the density 
f^n′ is estimated from the data y, with sample size s. in contrast, 
ĝn is estimated from simulated data using model mθ to generate data with sample size s′. theoretically, s′≠s is possible, however here we used s′=s. the meaning of p is that, if f≡g then p= <dig>  on the other hand, if 
min{f,g}= <dig> for all x  then p= <dig> 

to motivate our approach, we note that the parameter θ′ in model 
mθ′ corresponds to the true but unknown position of a pause site in the model from which we observed the data set y, and θ is the unknown position of a pause site in model mθ that needs to be estimated. to estimate the probabilities, p, in equation  <dig>  we simulate data from mθfor varying values of the parameter θ. that means that we compensate for the lack of the availability of a likelihood function by the simulation of additional data sets to estimate some approximation thereof. when using only one variable, i.e., v= <dig>  the likelihood function becomes l=p with 
y∈rs. from this, the maximum likelihood parameter is estimated by 
θ^=argmax{l}. because of the definition of the joint probability p , it follows that 
θ^=θ′, which justifies its definition. for the multivariate case, the interpretation is similar.

using this approach, we study if the location of the pause relative to the transcription start site  can be estimated from the time series measurements. in figure 
 <dig> we show results of our analysis for models b, c and d. we show the logarithmic relative likelihood  
 <cit>  which is defined by 

  lrl=log)−log). 

the range of the lrl is from zero  to minus infinity. in the figures, the vertically dotted lines in green corresponds to the true but unknown position  of a pause site and the vertically dotted lines in blue are the maximum likelihood estimates of these positions. the error bars correspond to the standard deviation for the nucleotide positions estimated from b= <dig>  bootstrap samples. all three maximum likelihood estimates  contain within their 95% bootstrap confidence region, shown as horizontally dotted lines, the true position of the pause site of models b, c and d.

overall, due to the likelihood principle <cit> , our results justify the usage of equation  <dig> as an approximate likelihood function.

CONCLUSIONS
so far the identification of pause-prone sequences has relied on in vitro studies that make use of complex measurement procedures to characterize the kinetics of elongation of the rnap 
 <cit> . these difficulties have hampered a proper assessment of possibly existing pause-prone sequences and thus a genome wide study of their role in the dynamics of gene regulatory networks. further, there is a need for a better understanding of the role of these sequence-dependent and thus, evolvable events on the in vivo kinetics of gene expression.

here we proposed a set of novel statistical methods that allow detecting the presence of pause sites, their location relative to the tss, and their kinetics , from time series data of mrna and protein numbers at the single molecule level. this is motivated by the fact that such measurements are already possible to obtain in an almost genome-wide scale 
 <cit> . the methods proved to be efficient in all aims proposed when applied to a stochastic, sequence-level model of coupled transcription and translation in prokaryotes 
 <cit> , found to be able to match measurements of gene expression at the single rna and protein molecule level 
 <cit> .

for the cases studied, there may be alternative features that perform better, in one sense or another. for example, to detect the existence of a pause site we used the mean rna and protein numbers. this feature is only suitable if the induction level is strong enough for several collisions between rnaps to occur during the simulations. additionally, this feature is affected by the codon sequences, which here are randomly generated in each simulation. in this case, and for the realistic parameter values used, this feature proved to be sufficient. in other conditions, the use of different or additional features may be required.

at the moment there is no means to experimentally validate the results. for that, one needs to measure, in vivo, rna numbers at the single molecule level. the ms2-gfp tagging system of rna molecules is likely to not be usable, not only because it immortalizes the rna, but it most likely affects the secondary and tertiary structure of rna as the binding of ms <dig> is likely to hamper formation of structures such as hairpin loops, which are needed to confer transcriptional pauses with stability 
 <cit> . instead, the best approach may be to engineer two genes that code for a tsr-venus protein 
 <cit>  and are under the control of the same promoter. in one of the genes, a his-pause would then be introduced, while the other would be used as a null model. controlling the expression of these sequences, one should use a strong promoter, capable of transcribing rna at a rate of  <dig> s− <dig> or faster .

the methods used here require data from different models to compare them with each other. this is regardless of the type of the statistical method employed. for example, to detect whether a pause exists from real gene expression data, one must provide a certain amount of data of the dynamics of expression of a gene that indeed contains a pause and data of a gene that does not contain the pause. similar data are required if one wants to determine the location of pause sites and their durations. hence, regardless if a hypothesis test, clustering or a classification method is used, one needs data that can be compared with each other in a statistical manner. we believe that this is not a problem. it is feasible to engineer genes, with the same promoters as the native genes, while having elongation sequences that follow those requirements and are known. from the data resultant from these engineered genes, we can train the algorithms prior to providing data on the native genes that may or may not possess pauses. if these have similar kinetic properties to the pauses of the synthetic genes, their presence is bound to be identifiable by the trained algorithm.

from the above, the method proposed here to identify unknown pause-prone sequences is rather laborious on the experimental side. nevertheless, it is feasible using known, relatively simple experimental techniques 
 <cit> . also, to the best of our knowledge, it is the first method that can detect pause sequences from in vivo measurements of rna and protein numbers. finally, this method is not more extensive than the one presently used to detect pauses by in vitro techniques, which relies on the use of polystyrene beads held in optical traps 
 <cit> .

a recent work 
 <cit>  proposed a model of transcription elongation that allows, based on the dna sequence, to predict to some extent the occurrence and duration of ubiquitous pauses. from measured rates of incorporation of nucleotides , they derive a distribution of durations of these events for a certain dna length. this distribution shows that some of these events can take several seconds to occur, thus providing an explanation for the occurrence of ubiquitous pauses during elongation. unfortunately, the model is unable to predict long-duration pauses 
 <cit>  as these are due to processes not accounted for by their model, such as the formation of hairpin loops in the elongating rna and their interaction with the rna polymerase, as in the case of his pauses 
 <cit> . nevertheless, this approach, provided the inclusion of further details on the kinetics of transcription and translation , may allow in the future to predict the occurrence of long pauses as well. in that case, the combined of use of this method along with ours , may be of great aid in detecting and better understanding the nature of sequence dependent pauses.

in another work 
 <cit> , a model of transcription elongation was proposed that was able to predict the kinetics of a specific type of transcriptional pauses, based on the sequence dependent translocation of the rnap. namely, the model accurately matched the kinetics of the tr <dig> pause 
 <cit> . it is yet unknown if this model can be extended to also be able to predict, from the dna sequence, the occurrence of pauses such as the his pause, which require the formation of secondary rna structures 
 <cit> . a similar work 
 <cit>  proposed a method to predict sites for backtracking pauses. the method cannot be used for hairpin-induced pauses, since it cannot determine their stability. again, in our understanding, these methods, provided their extension to include the long-duration pauses, can be used in parallel with the method proposed here since these methods aim to predict pauses from the sequences while we aim to detect the pause, its kinetics, and its location from rna and protein numbers.

in conclusion, our methods provide means to detect unknown pause-prone sequences from temporal gene expression measurements and to determine their location in the sequence relative to the transcription start site and their kinetic properties. it may thus facilitate their identification from genome-wide temporal gene expression measurements. from this mapping, and by correlating these findings with the functions of the various proteins in the cells, we may enhance our understanding of whether and how this sequence-dependent mechanism is used in the regulation of genetic network dynamics 
 <cit> . finally, this knowledge may aid in developing novel means by which one can regulate the degree of noise in the dynamics of engineered genetic circuits.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
asr and fes conceived the analysis. fes, ah and asr performed the analysis and wrote the paper. all authors read and approved the final manuscript.

