BACKGROUND
under a rapid increase of genome data, the need for accurate sequence alignment algorithms has become more and more important, and several methods have been developed. sequence alignment algorithm is designed for mainly two purposes. one purpose is to design for comparing a query sequence with the database which contains preobtained sequences, and another is to design for generating multiple sequence alignment. fasta  <cit>  and blast  <cit> , commonly used methods in molecular biology, are developed for database search, where a quick alignment algorithm is desired. for this quickness, the accuracy of alignment in these methods is lower than of the alignment by optimal algorithm.

in addition to for database search, sequence alignment is used for generating multiple alignment. in the multiple alignment, the accuracy is more important than the quickness. the recent popular multiple alignment methods, such as clustalw  <cit> , dialign  <cit> , tcoffee  <cit> , mafft  <cit> , muscle  <cit> , probcons  <cit>  and probalign  <cit> , are based on a "pairwise" alignment algorithm. in order to generate alignment with a realistic time and space costs, all of these methods use a progressive algorithm for constructing multiple alignment  <cit> . this "progressive" means to construct the multiple alignment by iterating pairwise alignment. these kind of methods give high accuracy for closely-related homologous sequences with identity more than 40%, but are not satisfied for distantly-related homologous sequences  <cit> . to improve the accuracy of the progressive algorithm, some measures based on, for instance, entropy  <cit>  or consistency  <cit>  have been developed. however, these measures are still not taken the intersite correlations of the sequences.

according to anfinsen's dogma   <cit> , for a small globular protein, its three-dimensional structure is determined by the amino acid sequence of the protein. there may exist intersite correlations at least for two consecutive pairs of residues. gonnet et al. considered this possibility  <cit> . we could improve alignment accuracy by taking into account information of the intersite correlations. recently, crooks et al. tried and tested such an approach  <cit> , but they concluded that their approach is statistically indistinguishable from the standard algorithm. more recently, however, lu and sze proposed another approach  <cit> , and they concluded that their strategy is able to consistently improve over existing algorithms on a few sets of benchmark alignments. their approach is a kind of post processing algorithm. they take the average of the optimal values of the neighboring sites of one site, and they consider that the average value is the optimal value of that site. note that they used usual "sum of pairs" measure for sequences. their improvement of the accuracy in their tests was around 1~ 3% by using the balibase  <dig>   <cit> .

in this paper, we propose another approach introducing a new metric defined on compound systems of two sequences. most of alignments are based on finding a path that gives the minimum value to the sum of difference  for each residue pair between two sequences. our method is to change the way defining the difference  above by computing this sum of differences by introducing a quantity through the transition probability between consecutive pairs of residues. the comparison of our method with the method of lu and sze gives the following: in the very difficult range that the sequence identity is less than 15%, our method improves the accuracy nearly 8% up, but the lu and sze method improves it nearly 1% up.

a new measure taking the correlation of consecutive pairs of residues
first, let us establish some notations. let Ω be the set of all amino acids, and Ω* be the Ω with the indel  "*": Ω* ≡ Ω∪{*}. let  be the set of all sequences of the elements in Ω*. we call an element of Ω a residue and an element of Ω* a symbol. in addition, let Γ ≡ Ω × Ω be the direct product of two Ωs and Γ* ≡ Ω* × Ω*.

consider two arranged sequences, a = a1a <dig> ... an and b = b1b <dig> ... bn, both of length n, where ai, bj ∊ Ω*. we also denote the sequences by u1u <dig> ... un, where ui =  ∊ Γ*, and we call ui a site in the following discussion. in general, the relative likelihood that the sequences are related as opposed to being unrelated is known as the "odds ratio":   

here, p  is the occurrence probability of the given segment and p  is the joint probability that the two segments occur. in order to arrive at an additive scoring system, equation  is typically simplified by assuming that the substitutions are independent of the location and there is no intersite correlations; namely, p  = ∏ p , p  = ∏ p  and p  = ∏ p . thus the logarithm of equation , known as the log-odds ratio, is now a sum of independent parts:   

where   

is the log likelihood ratio of the symbol pair  occurring as an aligned pair to that occurring as an unaligned pair. the s  is called a score and s = ) is called a substitution matrix. these quantities  and ) are used to define a measure for pairwise sequence alignment  <cit> . here, we define a normalized substitution matrix  and define a difference of a and b.

let fs :  ↦ r be a normalizing function:   

where   

let put   = f ) for a, b Ω. this   is a normalized expression of the score s . by using this quantity, we define a normalized substitution matrix as m = ). then a difference of a and b is defined by   

when the sequence a is equal to b the difference dsub  has a minimum value  <dig> 

one of the essential assumption for the above approach  was the induction of the occurring probability. we could take more informative approach by including the intersite correlations. crooks et al. tried one of such an approach  <cit> . they introduced a measure for two sequences based on a multivariate probability approximated by using the intersite relative likelihood. but, they concluded that their approach is statistically indistinguishable from the standard algorithm. we feel that their measure  in their paper) is different from ours. to introduce their measure, they defined a type of joint probability. however it can not be a probability, bacause their quantity is the multiplication of likelihood "ratios", so it goes beyond more than  <dig>  moreover, we think that the intersite relative likelihood may not describe the difference of sequence a and b. under an assumption that each site of the sequences has markov property, we propose a new measure for two sequences by adding a transition effect and its weight ε :   

where   

here we introduce a normalized transition  called "transition quantity", in order to simplify the equation. let  be a normalized transition defined as   

where ft  is a normalizing function:   

by using the above quantity, a difference of a and b representing the "intersite transition" is defined as   

consequently, we define a difference measure for two sequences by combination of two differences dsub and dtrans:   

estimation of the transition quantity
let us discuss how to estimate the transition quantity . we can estimate the transition quantity by collecting reliable aligned protein sequences. in this study, we estimated the transition quantity by means of the superfamilies subset of the dataset sabmark   <cit> . this set covers the entire known fold space using only high-quality structures taken from the scop database  <cit> . for a large set, the same sequences are re-used in the set. in order to reduce the bias introduced by multiple use of the same sequences, we assign a weight to each sequence. this approach is similar to the one described in the paper  <cit> . if a sequence occurs n times in the dataset, its weight is n-1/ <dig>  we estimated the transition quantity from the weighted frequencies of observed transitions as follows.

let l, n be the set of n sequences with length l:  

let  =  be in the finite set Γ* and it is a symbol pair in the kth site of the l, n. in addition, let  be the set of all given sets l, n , and let na be the frequency of the sequence a in the set .

let : Γ* × Γ* ↦ r be a mapping which represents the weighted frequency appearing the symbols  in l, n such that   

let p  be a transition probability from the symbol pair u to the pair v on  such that   

for u, v in the finite set Γ*.

we define a matrix t = ) called "transition matrix" by the elements  as  

where t  = log p  and ft is the normalizing function defined by the equation .

mtrap algorithm
the mtrap  is an alignment algorithm by minimizing the value of a certain objective function based on the transition quantity . we describe the algorithm by means of dynamic programming  <cit> .

let a, b be two amino acid sequences such as  

where ai, bj ∊ Ω. take the lattice point pk = , i =  <dig>  ..., m, j =  <dig>  ..., n as in figure  <dig>  we call the sequence of the lattice points   

a "route" with an initial point p <dig> =  and a final point pn =  if the following conditions are met:   

let αr, βr be maps from a route ℛ = {p <dig>  p <dig>  ..., pn} to a set Ω* such that   

and μr be a map from the route ℛ to the set of all symbol pairs Γ* such that   

we call the following a* and b* the alignment of a and b by the route ℛ:  

let r be the set of all routes with the final point p, that is,   

let us fix the following notations for the following discussion:  Γ*- ≡ Ω* × Ω,  Γ;-* ≡ Ω × Ω*,  Γg-≡ {*} × Ω,  Γ-g ≡ Ω × {*},  wopen is a constant called gap "opening" cost;  <dig> ≤ wopen ≤  <dig>   wextend is a constant called gap "extending" cost;  <dig> ≤ wextend ≤ wopen and  ε is a weight,  <dig> ≤ ε ≤  <dig> . the difference between a and b by a route ℛ is given by   

where ds is a function from Γ* × Γ* to r such that   

the degree of difference between a and b with respect to a final point p can be defined as   

hence the degree of difference between a and b is   

we calculate dab by a dynamic programming technique as below. for a final point pk =  and a route ℛ = {p <dig>  ..., pk} ∊ r, we have   

where q <dig> = , q <dig> =  and q <dig> = . therefore   

with   

for l =  <dig>   <dig>   <dig>  thus we obtain   

where   

for l =  <dig>   <dig>   <dig> 

each point ql has three points  which possibly go to ql one step after. these points are precisely written as   

when q <dig> = , q <dig> = , q <dig> = .

the distances dl ) can be obtained from one step before by the following recursion relations:   

for l =  <dig>   <dig>   <dig>  the values dl of initial point and those of the edge points are assumed as   

moreover for other special cases, the recursive relation of the edge points satisfies   

for ℛ ∊ r <dig> , i =  <dig>  ..., m,   

for ℛ ∊ r <dig> , j =  <dig>  ..., n.

this calculation is completed in mn steps.

multiple sequence alignment by mtrap
in order to discuss the effect of using mtrap algorithm in the iteration step of progressive multiple alignment, we modified the tcoffee  <cit> , a consistency-based progressive multiple alignment program, by means of our distance ). tcoffee constructs a primary library  at first step. we implemented our algorithm to make this primary library. that is, our modified tcoffee constructs a multiple alignment by following steps.

 <dig>  generating a primary library by using mtrap

 <dig>  extending the library 

 <dig>  making a guide tree for the progressive step

 <dig>  constructing a multiple alignment by progressive strategy

the modified tcoffee uses the extended library obtained by the mtrap algorithm for aligning.

performance evaluation
we compared the performance of mtrap to those of the most often used nine methods: needle, clustalw <dig>  mafft, tcoffee, dialign, muscle, probcons, probalign and tcoffee-lu/sze. the details of these nine methods are:  needle, a global pairwise alignment using needleman-wunsch algorithm  <cit>  contained in emboss package ver.  <dig> . <dig>  <cit> ;  clustalw <dig>  <cit> , a typical progressive multiple alignment method;  mafft ver.  <dig>  <cit> , a fast method with fourier transform algorithm;  tcoffee ver.  <dig>   <cit> , a heuristic consistency-based method that combines global and local alignments; 

dialign ver.  <dig>   <cit> , a method with segment-segment approach;  muscle ver.  <dig>   <cit> , a method with log-expectation algorithm;  probcons ver.  <dig>   <cit> , a probabilistic consistency-based method,  probalign ver.  <dig>   <cit> , a multiple sequence alignment using partition function posterior probabilities and  tcoffee-lu/sze, an improved tcoffee modified by the lu/sze algorithm  <cit> . these programs without mafft used their default parameters and mafft used "l-in-i" strategy mode.

to measure the accuracy of each method, we used three different databases: homstrad   <cit> , prefab  <dig>   <cit>  and balibase  <dig>   <cit> . these are the databases of structure-based alignments for homologous families. we used the all  <dig> pairwise alignments obtained from the homstrad for pairwise alignment tests, and used the all  <dig> multiple alignments obtained from this database for multiple alignment tests. we also used the all  <dig> protein pairs obtained from the prefab  <dig>  for pairwise alignment tests. the balibase  <dig>  contains  <dig> different reference sets of alignment for testing multiple sequence alignment methods. we used the bbs sets included in the references  <dig> , <dig> and  <dig>  the bbs sets are described as being trimmed to homologous regions.

in order to avoid using the same dataset for training and test, we estimated the transition quantity by using the superfamilies subset from the dataset sabmark, which is described in the section "estimation of the transition quantity". we also used this dataset for optimizing the parameters wopen, wextend, ϵ. consequently, mtrap uses the followings for parameter values: wopen = fs , wextend = fs and ε =  <dig> .

alignment accuracy was calculated with the q  score  <cit> . the q score is defined as the ratio of the number of correctly aligned residue pairs in the test alignment  to the total number of aligned residue pairs in the reference alignment. when all pairs are correctly aligned, the score have a maximum value  <dig>  and when no-pairs are aligned the score have a minimum value  <dig>  this score has previously been called the sps   <cit>  or the developer score  <cit> . let us redefined this score in our notations. let ai  indicates the ith sequence of the reference alignment with length l, and let aik ∊ Ω* indicates the kth symbol in the sequence ai. when aik ≠ *, it is important to find the number of the site in the test sequence corresponding to the symbol aik, whose numbers are denoted by nik. when aik = *, put nik =  <dig> . then the q score is given as  

implementation
the mtrap algorithm is implemented as a c++ program. the program has been tested in several types of linux machines including 32-bit × <dig> platform and also has been tested on mac osx snow leopard . the program has a number of command-line options, e.g., the option setting the value of a parameter such that , , ε, wopen, wextend, and the option controlling the output format. the program accepts only multiple-fasta format as an input format.

RESULTS
performance evaluation of pairwise alignment
we compared mtrap with nine different alignment methods including the modified tcoffee by using all  <dig> protein pairs of prefab  <dig>  and all  <dig> protein pairs of homstrad. we used gonnet <dig> matrix with the mtrap. the similarity between the test alignment  and the reference alignment  was measured with the q score. suppose as usual that the reference alignment is the optimal alignment, the results of prefab  <dig>   and those of homstrad  indicate that our method works well compared with other methods. our method achieves the highest ranking compared with all other methods except only one range 30-45%. especially for the identity range 0-15%, mtrap is  <dig> ~ 5% accurate than the 2nd ranking method. for the identity range 30-45%, probcons and probalign perform slightly better .

the average q scores of four testing datasets with different identity ranges on prefab  <dig>  are shown. the number in parentheses denotes the number of alignments in each sequence identity range. for each sequence identity range, the best scores are in bold. cpu is the total computing time for all alignments in seconds.

amtrap uses gonnet <dig> substitution matrix.

bdialign reported critical errors for some testing data. therefore, the scores of dialign were calculated by the partial testing data.

the average q scores of four testing datasets with different identity ranges on homstrad are shown. the notations are the same as table  <dig> 

performance evaluations using other substitution matrices
we did the performance evaluations using three different substitution matrix series: pam, blosum and gonnet, with homstrad and prefab  <dig> , whose results are shown in table  <dig> and figure  <dig>  respectively. we compared mtrap with two typical global alignment programs, needle and clustalw <dig>  which can use various substitution matrices. we used all  <dig> protein pairs of homstrad and all  <dig> protein pairs of prefab  <dig> . the similarity between the test alignment and the reference alignment was measured with the q score.

the average q scores of four testing datasets with different identity ranges on homstrad are shown. the number in parentheses denotes the number of alignments in each sequence identity range. for each sequence identity range, the best scores in each substitution matrix are in bold.

*needle does not support gonnet matrix.

for every typical substitution matrix , mtrap has more than 80% accuracy , whereas needle and clustalw <dig> have less than 80% accuracy  . moreover, it is important to notice that for two sequences with less than 30% sequence identity, our method improves the alignment accuracy significantly. for instance, mtrap with pam <dig> matrix has  <dig>  for 0-15% sequence identity and  <dig>  for 15-30% sequence identity, and clustalw <dig> with pam <dig> matrix has  <dig>  for 0-15% sequence identity and  <dig>  for 15-30% sequence identity, respectively.

performance of mtrap algorithm for multiple alignment
we modified the tcoffee by means of our mtrap algorithm. table  <dig> and table  <dig> show the accuracy of the modified tcoffee  compared with other methods including the original tcoffee with homstrad and balibase  <dig> . for all testing datasets, tcoffee-mtrap shows the performance increase over the original tcoffee. especially for the identity range 0-15%, tcoffee-mtrap is  <dig> % more accurate than the original tcoffee with homstrad, whereas the tcoffee modified by the lu/sze algorithm  is  <dig> % more accurate than the original . also for v <dig>  of the reference  <dig>  tcoffee-mtrap is  <dig> % more accurate than the original tcoffee on balibase  <dig> , whereas tcoffee-lu/sze is  <dig> % more accurate than the original . in some domains, the two methods probcons and probalign, both of which are based on the probabilistic consistency strategy, are more accurate than tcoffee-mtrap. note that these two methods use the parameter values estimated from the balibase  <dig>  database.

the average q scores of four testing datasets with different identity ranges on homstrad are shown. for each sequence identity range, the better scores of the tcoffee modified by lu/sze algorithm  and the tcoffee modified by mtrap algorithm  are in bold. the best scores of the other methods are also in bold.

*dialign reported critical errors for some testing data. therefore, the scores of dialign were calculated by the partial testing data.

the average q scores of five reference bbs sets  on balibase  <dig>  are shown. for each reference, the better scores of the tcoffee modified by lu/sze algorithm  and the tcoffee modified by mtrap algorithm  are in bold. the best scores of the other methods are also in bold. id means a sequence identity of the reference alignment.

*dialign reported critical errors for some testing data. therefore, the scores of dialign were calculated by the partial testing data.

CONCLUSIONS
mtrap is a global alignment method that is based on a new metric. the metric is determined by an adjusted substitution matrix and a transition probability-based matrix between two consecutive pairs of residues including gap-residue derived from structure-based alignments.

we indicated here that our approach, which takes into account an intersite correlation on the sequences, leads to a significant increase in the alignment accuracy, especially, for the low identity range. we also indicated that the mtrap improves the alignment accuracy for any substitution matrices. moreover, we confirmed that our algorithm works well together with a consistency based progressive approach for constructing multiple alignment.

however, the methods probcons and probalign were more accurate than tcoffee-mtrap in some multiple alignment tests. the probabilistic consistency strategy is an improved consistency strategy of tcoffee. therefore, combining mtrap pairwise algorithm with the probabilistic consistency strategy will generate more high quality multiple alignments. we will examine this fact in a separate paper.

mtrap has the similar calculation cost with other pairwise methods. that is, mtrap has o  calculation order for two input sequences with length m and n. our cpu time shown in the tables  <dig>   <dig> are almost the same as others.

pairwise sequence alignment is among the most important technique to perform biological sequence analysis, and is fundamental to other applications in bioinformatics. any multiple sequence alignment that is gradually built up by aligning pairwise sequences is essentially based on high-quality pairwise sequence alignments. by modifying common multiple alignment method based on our algorithm as shown in this paper, the accuracy was improved significantly. moreover, we think that our technique is applicable to not only global alignment, but also some others such as, local homology search and motif-finding, which will be our future works.

availability and requirements
project name: mtrap

project home page: http://www.rs.noda.tus.ac.jp/%7eohya-m/

operating systems: linux, unix

programming languages: c++

license: bsd license

authors' contributions
we three  discussed all fundamental parts together. in details, mathematical idea mainly comes from mo and th did mathematical algorithm. moreover, th and ks made computer algorithm and did computer alignment by means of this algorithm. all authors have read and approved the final manuscript.
