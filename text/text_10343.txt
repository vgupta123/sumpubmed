BACKGROUND
the ability to visualize and manage protein-protein interaction  networks is extremely useful in biochemistry and other related research fields. several online web servers are currently being used for these purposes. for example, the string database  <cit>  not only provides ppi information for many organisms, but also graphically shows interactions of interest. the pina database  <cit>  is another online web server containing ppi information for six organisms and is also highly useful in this regard  <cit> . both of these systems allow users to download ppi information they have collected from databases. however, users often experience difficulties in editing such collected information, as well as in constructing and sharing integrated ppi networks. the aim of this cispath package is to simplify all of these processes. with cispath, users can combine ppi information downloaded from different databases, add private data to these combinations, and construct new and personalized ppi networks. the functions available in this package are listed in table  <dig> 

in recent years, cloud applications in which application software and all associated data are hosted centrally on the cloud have become more and more popular  <cit> . cloud users typically access the software and data via a thin client web browser. rstudio  <cit>  which was developed by rstudio inc. and is available under a free software license for academic use is a powerful integrated development environment for r programming language. deploying rstudio and r on a cloud server allows primary users to provide r as a cloud application to authorized users, who can access this r workspace from any computer. in this case, only primary users need to install and update r and related packages. using r as a cloud application provides many benefits, but the necessity of downloading output to a local machine is an inconvenience that diminishes the benefit of the cloud model. taking this into consideration, cispath displays all of the results in web format. as such, using this package as a cloud application allows users to visualize, manage, and share results through the web browser, instead of downloading them. for users who may have only cloud drivers, such as google driver instead of cloud computing servers, results can be uploaded to cloud drivers, which can then be visualized and shared via a browser. details on how to use google driver in hosting online results can be found on our website  <cit> .

implementation
environment and technologies
r is a software environment that can be run on a variety of unix platforms, as well as windows and mac os. this package employs r to analyze input files and output results in the hypertext markup language  format. in html files, ppi networks are displayed as force-directed graphs with javascript library d <dig>  to maintain consistency across different browsers, html files follow the html  <dig>  strict standard, html  <dig> experimental standard, and css version  <dig> standard. thus, different browsers such as chrome, firefox, safari, opera and ie <dig>  consistently display the output.

this cispath package is available through the bioconductor project  <cit> . for users of cloud servers, rstudio is recommended as it enables primary users to provide a browser-based interface of a version of r running on a remote linux server. louis aslett has provided various kinds of amazon machine images  which make deploying an rstudio server very fast and easy  <cit> . these amis are highly recommended, especially for free micro instance users. the bioconductor team has also developed amis optimized for running bioconductor packages with the amazon elastic compute cloud   <cit> . users without any cloud services experience can easily launch the ami using instructions on the bioconductor website. an introduction on the use of this package for r beginners is also available on our website  <cit> .

data collection and integration
there are several protein interaction databases, such as pina, string, and irefindex  <cit> , which allow downloading ppi information for academic purposes free of charge, but such downloaded files from different databases do not take on a common format. in this cispath package, functions are provided to format the downloaded files from the pina, string and irefindex databases into a standard workable format. to remove redundant interactions, uniprot knowledgebase  accession numbers are used as unique protein identifiers. uniprotkb is a part of the uniprot database and serves as a central hub for collection of functional information on proteins with accurate annotation  <cit> . uniprotkb consists of two sections including uniprotkb/swiss-prot  and uniprotkb/trembl . proteins with names that cannot be mapped to uniprotkb accession numbers are discarded.

the pina database includes unified ppi data integrated from six manually curated databases: intact  <cit> , mint  <cit> , biogrid  <cit> , dip  <cit> , hprd  <cit>  and mips mpact  <cit> . like pina, the irefindex database also provides an index of protein interactions integrated from primary interaction databases. ppi data downloaded from the pina and irefindex databases contain the pubmed ids of corresponding papers which support the ppis. the string database contains not only known ppis but also predicted protein associations with confidence scores. the latest version of string  currently covers  <dig> , <dig> proteins from  <dig>  organisms. although the pina and irefindex databases are both integrated from manually curated databases, many distinct interactions exist in each case. thus, several functions have been included in this package to format downloaded ppi data from different databases, consequently allowing users to edit downloaded information or merge them with privately collected data to construct more comprehensive ppi networks.

functions for visualization
after obtaining ppi data which has been downloaded from our website or privately generated, users can look up all the possible interactions for a given protein using the networkview function. upon providing a gene name or the swiss-prot number for a given protein, proteins that are capable of interacting with the input protein are presented as shown in figure 1a. the given protein is represented by a relatively larger blue node, while related proteins are presented as smaller green nodes . these nodes can be clicked, which provide links to the uniprot database for the extraction of more information. protein interactions are also presented in a table , where the names of databases that support each specific interaction are displayed. pubmed ids of corresponding publications and/or string scores are also displayed, providing users with direct links for the verification of corresponding sources as desired. in cases where there are more than  <dig> protein interactions for a given protein, the viewer randomly displays  <dig> of these interactions , but all protein interactions and corresponding details are presented in the table .

the networkview function can also be used to visualize ppi networks in a given list of proteins, together with corresponding evidence of the specific interactions among them. a sample output is shown in figure 2a, where the selected proteins are tp <dig>  tp53bp <dig>  magi <dig>  and pten. the first three proteins are designated as main nodes and pten is designated as a leaf node. since interaction between two proteins is often mediated by scaffolding proteins rather than direct interaction, the viewer also displays proteins that can interact with at least two of the main proteins, such as the green leaf nodes in figure 2a. additionally, users are free to choose the visualization style  with which the proteins are displayed in the network. using the parameter mainnode for this function, a selected protein can be designated as a main or leaf node. in this example, since pten is manually designated as a leaf node unlike the other three input proteins designated as main nodes, the only interactions presented for pten are those with the main nodes. thus, views are generated corresponding to user preference. a protein often has multiple gene names, some of which may not be included in the input ppi data file. to avoid inputting invalid names of proteins, the unique identifier swiss-prot accession number may be used alternatively as input. swiss-prot accession numbers may be found in the uniprot database.

in some cases, users may want to identify interaction paths with more than two interacting steps between a pair of given proteins in a ppi network, and another function may be used to yield this type of result. the function cispath identifies and outputs the shortest ppi paths between a pair of given proteins involved in multiple interaction steps. users can obtain the shortest path by either directly requesting the path that reflect minimal cost using the default "cost" values of edges, or manually assigning "costs" to specific edges in the ppi network by editing the input file. the "cost" of an edge between two interacting proteins is a numerical value that is greater or equal to one, quantifying the extent to which an interaction is unfavorable. the default value for the "cost" of each edge generated from the pina and irefindex databases is  <dig>  and the "cost" of the edge generated from the string database is given as max. the variable string_score is the confidence score given by the string database. an example of this function is shown in figure 2b. evidence representing the string score or pubmed id of relevant manuscripts is shown for all interaction paths. similar to the networkview function, other proteins that can interact with at least two of the proteins that lie on the shortest ppi path are also displayed, giving a full range of possibilities despite the fact that they may be suboptimal paths. all of the shortest paths are listed in a table under the network view and can be shown graphically when selected . to identify the paths that reflect the least number of steps independent of what the associated "costs" are, the parameter bystep may be set as true. in this case, all edge "costs" are assigned as  <dig> and ppi paths with the minimum number of steps between a pair of given proteins are produced.

research groups that focus on specific proteins may require screening of the shortest interaction paths from a single fixed protein to all other proteins in the input database. in this case, only the source protein name should be inputted in the cispath function. all proteins in the input database are scanned for the shortest interaction paths to the fixed protein, and all of the shortest ppi paths from the fixed protein to each of the relevant proteins are outputted. upon finding a new protein of interest, users can query the shortest interaction paths to the fixed protein with a browser without launching r. although more cpu time and space is required to compute this function and store the results, results can be easily placed on a cloud driver or web server for quick access over the internet. sample results for fixed source proteins tp <dig> and pten can be found on our website.

the functions networkview and cispath described above allow users to change color and size of the nodes in the network view prior to running. there is an additional editor for easy modification of network graphs after running. figure 2c shows a screenshot of this tool. this editor is accessed via an "edit graph" button on the output webpage, and allows users to make changes to the output graph as well as draw new network graphs that are directed or undirected, using different edge and arrow styles. the editor is compatible across a range of different browsers. since most commonly used browsers support the html <dig> web storage, users can store the network graph view and open it later using the same browser. an additional function of this editor allows the view graph to be converted into a span of text. as the text is reversible to an editable view graph, it is possible to share output graphs easily via email or online messenger. this editor is independently usable, and is included in the source package. it is also available on our website for online access or downloading for offline usage.

RESULTS
as examples to demonstrate the use of this package, integrated ppi data from the pina, irefindex and string databases for six model species are available for downloading from our website. users should cite the databases accordingly when using these files. when integrating interactions from different databases, the function combineppi will also count the number of valid proteins and protein interactions from each database. in view of the fact that the string database includes not only known ppis but also predicted associations, only high confidence interactions from string are retained in these samples. the threshold of the string score is set to  <dig> by default, which can be changed manually with the function formatstringppi.

taking homo sapiens as an example,  <dig> ,  <dig> , and  <dig>  valid proteins are identified in the pina, irefindex and string databases. generated by the combineppi function of this cispath package, tables  <dig> and  <dig> present the proteins and protein interactions in a given database which overlap with the other two databases. the last column of each table shows the number of distinct proteins or protein interactions found in each database. although the pina database contains the least number of distinct proteins, and has only  <dig> proteins not found in the other two databases, it contains  <dig>  interactions that are distinct, and most of these are supported by scientific literature. the irefindex database contains a large number of distinct proteins, as well as a large number of distinct interactions, which are all well supported by scientific literature. the string database contains up to  <dig>  distinct interactions, but most of these interactions are predicted by data mining. sample r scripts used to download and format ppi data can be found on our website. only a small portion of available ppi data is selected for examples in the source package. the file with complete ppi information can be downloaded from our web site.

each cell indicates the number of overlapping proteins from the two databases designated in the row and column; numbers on the diagonal indicate the total number of proteins from the database designated in the row and column. the last column indicates the number of distinct proteins from the given database.

each cell indicates the number of overlapping protein interactions from the two databases designated in the row and column, excluding ppis with string scores of less than 700; numbers on the diagonal indicate the total number of proteins interactions from the database designated in the row and column. the last column indicates the number of distinct protein interactions from the given database.

compared to other existing tools such as cytoscape  <cit>  and the online web servers pina and string, this cispath package is especially useful for r and cloud users. for r users, this package can be installed and updated by using only two commands, and no other plugins are required. users can view, edit, and save the output network views with most modern web browsers. cloud users can simply connect to the rstudio server with a browser and construct and publish personalized ppi databases and networks. it allows the user to play the role of ppi database administrator, rather than simply act as a common user.

CONCLUSIONS
this cispath package allows great convenience for cloud users who wish to visualize and manage functional protein interaction networks. with this package, ppi data from different databases can be integrated and used to deduce network graphs from one or several given proteins. this package can also identify the shortest interaction paths between a pair of proteins. published evidence of interactions from different databases is present in the output html files. the graph editor adds a further layer of functionality, allowing different kinds of network views to be drawn according to user preference. with an rstudio server, molecular biologists can run cispath functions and easily view results on mobile devices via web browsers. for cloud users, the amazon ec <dig> service with amis which were generated by louis aslett is recommended  <cit> . one micro instance which is available free of cost is sufficient to launch the ami and run this package.

in developing this cispath package, one of our main aims is to offer an easy-to-use tool for mobile devices and panel pcs that is accessible through the browser. therefore only functions that can be easily operated on mobile devices are included. a number of other functions, although useful, were excluded from the package, as they were deemed unsuitable for mobile use. we hope that with this tool, users will now be able to evaluate their ideas concerning protein interactions through visualization and management of protein networks, and limitations of time and location will become a thing of the past.

availability and requirements
project name: cispath

project home page: http://www.isb.pku.edu.cn/cispath/, http://www.bioconductor.org/

availability: all sources and compiled code are free for academic use

operating system: platform independent

programming language: r

other requirements: r 

license: gpl 

any restrictions to use by non-academics: none

competing interests
the authors declare that they have no competing interests regarding publication of this manuscript.

authors' contributions
lw developed the r package. ly, zp, dl, yg, mm, and yy designed and tested its functions. all authors have read and approved the final manuscript.

