BACKGROUND
biological databases, such as pathway databases, are very useful in helping biologists discover new and existing biological mechanisms. each entry in a database is based on experimental results. yet as the amount of published research increases, constructing databases becomes more difficult. biomedical text mining is a key technology for automatically extracting important information from biomedical literature.

one key task in biomedical text mining is gene normalization , mapping genes mentioned in the text to their unique database ids. this task is difficult because one gene mention may map to different genes in various species. for example, papers containing in vivo experiments may describe mouse and human genes with the same name  in the same paper. closely related to gn is the important and fundamental task of identifying proteins for inclusion in protein-protein interaction  databases. ppis are of great interest to biomedical researchers because of their crucial role in elucidating signal pathways, controlling central biological processes such as transcription factors involved in cell division and dna transcription  <cit> , and their implications in a range of human diseases including cancer and neurodegeneration  <cit> . to provide efficient widespread access to ppis information, some organizations have begun compiling structured ppi annotation in public databases. mint  <cit> , intact  <cit> , and biogrid  <cit>  are examples of ppi databases containing large numbers of verified ppis. ppi databases are also very useful in building databases of signalling pathways, like biocarta  <cit> , or protein networks.

since most ppi information exists in published papers, text mining is an ideal way to speed up construction of these databases. several research institutes and groups have been active in the effort to curate resources for ppi text mining and lay our roadmaps for the development of ppi mining tools. in  <dig>  biocreative i/ii  <cit> , held by the centro nacional de investigaciones oncol√≥gicas , established the gn task, in which participant systems must map gene names to database identifiers. then in  <dig>  cnio launched the interactor normalization task   <cit>  at the biocreative ii. <dig> challenge. another more important and difficult task in the biocreative ii. <dig> challenge is the interaction pair task . in the ipt task, systems are further asked to return a list of interaction identifier pairs for each article.

the goal of ipt is to map interaction pairs in well-formed full-text articles to uniprot identifiers  and to rank these identifier pairs according to their probability of being interactors . ranking ppi pairs is very important because only a small percentage of the identifiers are suitable for database curation . in a quality ranked list, the curatable identifier pairs should be placed at the top. such a ranked list would be more useful for human curators.

unlike other biomedical text mining tasks, which use only abstracts as research data, the biocreative ii. <dig> challenge compiled a dataset of full-length journal articles, which were formatted in a well-formed block structure. figure  <dig> shows an example article with three blocks. the first line of each block defines the section type and its corresponding text content. the section types include title, abstract, and body for the main article content, as well as figure, keyword, and table. the second line defines the section and the subsection headings. for example, the article has a keyword "socs3", and a subsection heading "socs <dig> interacts with map <dig> s in vivo and in vitro".

our three main contributions in this paper are a section-optimized ranking model, an efficient dynamic-programming-based relational re-ranking algorithm, and the interaction pair ranking function. firstly, our ranking model is optimized to take advantage of section-specific information. several studies  <cit>  have shown that scientific authors do, in the majority of cases, follow the basic principles of the research article structure and assign information accurately to each section. each section of the paper has different characteristics which we can use to guide gn and the ranking algorithm. for example, the introduction often contains information that repeatedly appears throughout the article , while the results section presents new scientific findings, such as ppis. in addition to section-specific information, our ranking model also makes use of the metadata that is included in full-text articles, such as the keywords fields.

secondly, we have developed a re-ranking algorithm that considers co-occurrence among interactors in an article. co-mentioned genes influence each other's rank  <cit> . if two gene names frequently occur alongside each other in the same sentences in an article, they are likely to have an influence on each other's rank. take a low-ranked interactor mentioned only twice in an article for example. if both mentions happen to be alongside the highest-ranked interactor in the article, then the low-ranked interactor's rank should be significantly boosted. our re-ranking algorithm is designed to use this information to improve accuracy of interactor ranking. using a greedy computational approach, the re-ranking procedure requires large amounts of computer resources and time to calculate each gene identifier's rank simultaneously and find the best ranked list. therefore, to maximize computational efficiency, we implemented our re-ranking algorithm using dynamic programming.

finally, we describe an approach to generating a ranked list of binary interaction pairs which combines the int re-ranking results with a labor-saving unsupervised approach that still achieves competitive results.

RESULTS
implementation
overview of the proposed int and ipt system
after preprocessing, the multi-stage gn procedure  <cit>  is executed . for each identifier extracted by the multi-stage processing, the corresponding context information is used to extract features and the identifier is ranked by a support vector machine  classifier .

in order to further refine the ranking results, we create a re-ranking algorithm that takes into consideration the rank of an identifier and the genes that co-occur alongside. the re-ranking results are treated as an interaction candidate list for the article.

to further extract interaction pairs, an unsupervised association analysis method is employed to determine their association scores. we then combine the scores with the results of int re-ranking to generate the list of interaction pairs .

algorithm
svm-based ranking model
our model is based on the svm algorithm, a well-known machine learning  algorithm that has proved useful for text classification  <cit> . we have extracted the following features related to rank identifiers found in the gn procedure:

frequency features
the frequency with which the identifier appears in the entire article is used as a feature. in addition, based on the work of  <cit> , who found that molecular interaction descriptions usually appear in the results section, we added the percentage of an identifier found in the results section against in the other sections as a feature.

location features
the features indicate where the identifier appears in the full text. the following location types are taken into consideration:  title;  abstract;  the first section , the results section, the last section , the appendix section, and the other sections;  section and sub-section titles, such as " <dig> results  <dig>  socs <dig> interacts with map <dig> s in vivo and in vitro" in the figure 1; and  figure and table captions.

field features
these features indicate if the target identifier's name occurs in the full-text article's keyword field, full name, or abbreviation field.

co-occurrence features
these features describe co-occurrence of the target interactor with three types of the paper's key information: keywords, full names/abbreviations, and references to figures in the article text. co-occurring with the paper's keywords or full names/abbreviations implies that the identifier is very likely to be key identifier in this article  <cit>  and  <cit>  have shown that figures often concisely summarize the most important results or methods used and described in an article. the paragraphs containing figure references often summarize the content of a figure. therefore it follows that identifiers that co-occur beside figure references have a higher possibility of being interactors. for instance, the interactor "socs3" appears beside "figure 1c and 1d" in the figure  <dig> 

indicator phrase features
 <cit>  and  <cit>  have shown that there are commonly occurring structures which explicitly state the article's main knowledge claim or the assertion for which the authors hope to be cited and credited in future articles. examples are "the aim/purpose of this paper/article/study" and "we conclude/propose". those phrases that signal important sentences in a text are referred to as indicator phrases  <cit> . such sentences can be used to create an extract-type summary of the text. we add a feature to indicate whether or not the identifier occurs in the same sentences that contain indicator phrases.

q05513:2
re-ranking algorithm based on co-mentioned genes
the ranking procedure tends to rank the focus genes higher. however, the main concern of int and ipt is to extract interactors. our re-ranking algorithm is designed to boost the rank of interactors by considering co-occurrence among gene mentions in a single article. the example shown in table  <dig> gives a general illustration of how the algorithm works.

after generating all possible ranked lists, there are new candidates in each rank. as shown in table  <dig>  q9npb <dig> and p <dig> are candidates in rank  <dig> and  <dig> respectively. therefore, there are several possible combinations and each one represents a possible re-ranked list. we then define a score function that estimates the likelihood of an identifier x being re-ranked in i as follows:

 score=rankn_ratio√ósvmaccuracy√ósvmaccuracy) 

where the rankn_ratio function is calculated based on all possible ranked lists, l ; svmaccuracy is the function that returns the int accuracy of rank i in our svm ranking ; the deciderrank function returns the rank of the highest ranked identifier that supports an identifier x in rank i. for example, assuming that the identifier w's corresponding new list is  and x's is , y will be ranked third, and l = {, }. in this case, deciderrank, will return  <dig> since w and x support y in rank  <dig>  but w's rank is higher than x's.

for a possible re-ranked list r, its overall score can be calculated as follow:

 overallscore=‚àèi=1|r'|score 

where r' is the ith element of r'. the re-ranked list with the highest overallscore among all possible combinations is chosen as the final output re-ranked list.

if the duplication of identifiers in a re-ranked list is permitted, the optimal ranked list can be directly found by choosing the identifier with the highest score value for each rank. however, a legal ranked list cannot have any duplicates. to avoid duplication, we add a duplication constraint on the score function: when estimating score, if the identifier x has been determined in the previous rank, k, the score function must return  <dig>  is 0). unfortunately, the duplication constraint increases the computational complexity of finding the optimal ranked list. in order to find the optimal ranked list and avoid computational overhead, we propose a dynamic-programming-based algorithm. details on the algorithm are described in the "implementation of the re-ranking algorithm" sub-section.

using re-ranked int results for ipt
in order to extract interaction pairs, we follow the workflow shown in figure  <dig> to process the article and generate a ranked list of identifiers. if two identifiers are described in one sentence, they are extracted as an interaction pair candidate. the mutual information  analysis described in the methods section is used to determine their association score. we then combine the association analysis with the results of int ranking. based on the assumption that the iptscore  is positively relevant to association and x and y's individual interactor scores, we propose the following formula to combine the results of association analysis and re-ranking:

 iptscore=association√óinteractor_score√óinteractor_score 

when using the score function introduced in equation  <dig> as the interactor_score function, the formula can be rewritten as:

 iptscore=association√óscore√óscore 

because we use mi to determine the association, the formula can be rewrite as follows:

 iptscore=mi√óscore√óscore 

testing
dataset and evaluation metrics
the biocreative ii. <dig>  <cit>  provides  <dig> journal articles selected mainly from febs letters for evaluating int and ipt systems. following the format of the biocreative ii. <dig> challenge, we use  <dig> articles published in  <dig>  as our training set and  <dig> articles published in  <dig> or earlier  as our test set. the dataset is preprocessed to convert greek alphabet characters  to corresponding diacritics .

the most common information extraction  evaluation metric is centered on f-measure, an evaluation score generated from combining precision and recall. this evaluation has an obvious shortcoming: it does not take ranking of results into account. e.g., two systems reporting the same two correct and eight wrong hits for a document would produce the same f-scores, including precision and recall values, no matter the ranking of the results. therefore, the area under curve   <cit>  of the interpolated precision/recall  curve used in the biocreative ii. <dig> challenge is used to evaluate the proposed approach. the auc of the ip/r function fpr is defined as follows:

 auc¬†ip/r=‚àëj=1n)pi=maxr'‚â•rp 

where n is the total number of correct hits and pi is the highest interpolated precision for the correct hit j at rj, the recall at that hit. interpolated precision pi is calculated for each recall r by taking the highest precision at r or any r' ‚â• r.

preliminary experiments on the training set
to examine calculate the accuracies used in the score function , we apply the thirty-fold cross validation on the training set. we use the svm-based ranking procedure to determine ranks, and then calculate each rank's accuracy using the training set. the accuracy of rank i is calculated by the following formula:

 svmaccuracy=the¬†number¬†of¬†correctly¬†nomalized¬†identifiers¬†in¬†rank¬†rthe¬†number¬†of¬†normalized¬†identifiers¬†in¬†rank¬†r 

int test set performance
as shown in figure  <dig>  after employing our re-ranking algorithm, auc ip/r performance increases by  <dig> % over the previous top score in biocreative ii. <dig>  according to our analysis, before re-ranking, gene identifiers whose feature values rarely appear in the training set are often incorrectly ranked because their feature values are underweighted in the ranking model. however, if these identifiers co-occur with higher-ranked identifiers whose feature values frequently appeared, our re-ranking algorithm is very likely to increase their ranks. this results in the improved auc ip/r score.

ipt test set performance
as shown in figure  <dig>  mi achieves a very low auc ip/r , while mi+svmaccuracy achieves a much better auc ip/r  than average . mi+re-ranking  further achieves a competitive auc ip/r of  <dig> % . the results show that by using the results of int re-ranking, the auc ip/r score can be improved by  <dig> %  comparing with the top team  <cit> , which constructed a syntactic filter by semi-automatically annotating a ppi syntactic path corpus based on the genia corpus  <cit> , and the third team  <cit> , which manually annotated interaction proteins according to sda information to construct a corpus for supervised learning, our approach requires less annotated data to construct and has the potential to be improved by using advanced association calculation techniques.

comparison of svm-based ranking and re-ranking
we apply a two-sample t-test to examine whether the proposed re-ranking method is better than the original svm-based ranking method by a statistically significant difference in int and ipt. the null hypothesis, which states that there is no difference between the two configurations a and b, is given as

 h0:Œºa=Œºb. 

where Œºa is the true mean auc ip/r of configuration a, Œºb is the mean of the configuration b, and the alternative hypothesis is

 h1:Œºa>Œºb. 

a two-sample t-test is applied since we assume the samples are independent. as the number of samples is large and the samples' standard deviations are known, the following two-sample t-test is suitable:

 t=sa2na+sb2nb 

if the resulting t-score is equal to or less than  <dig>  with a degree of freedom of  <dig> and a statistical significance level of 95%, the null hypothesis is accepted; otherwise it is rejected.

to get the average auc scores and their deviations required for the t-test, we randomly sampled ninety training sets  and ninety test sets  from the  <dig> biocreative ii. <dig> journal articles. we trained the model with baseline ranking on gi and tested it on di. we then performed the re-ranking procedure on the test results for di. following that, we summed the scores for all ninety test sets, and calculated the averages for performance comparison. table  <dig> shows the results. we can see that after re-ranking, int and ipt performances are improved by  <dig> % and  <dig> % respectively on the auc ip/r scores with a statistically significant difference.

CONCLUSIONS
in this paper, we have proposed a svm-based ranking procedure with a relational re-ranking algorithm that considers the associations among gene identifiers to further improve performance on the biocreative ii. <dig> int and ipt task. we formulated the re-ranking problem as an optimization problem and solved it by using dynamic programming to reduce computational complexity.

we evaluated our approach on the biocreative ii. <dig> full-text dataset. in int, the highest auc ip/r achieved by our re-ranking system is  <dig> %,  <dig> % higher than that of our svm-based system . in ipt, our unsupervised method incorporating re-ranking not only achieves a promising auc ip/r of  <dig> %, which exceeds the best score in the biocreative ii. <dig> ipt challenge by  <dig> %, but also saves significant annotation effort in comparison to other top teams' supervised methods. a statistical significance t-test using ninety randomly selected training/test sets confirms that our additional re-ranking procedure significantly improves performance over the baseline ranking method.

the proposed re-ranking algorithm relies heavily on association information, which it uses to generate possible ranked lists as described in the algorithm section. we believe that our proposed approach could be combined with other advanced association scoring methods to further improve results. in the future, we plan to integrate our relation extraction method, which was developed for extracting hypertension-related genes in  <cit> , into our int and ipt system, and study the performance gains. we will also continue to improve our online web service to allow users to upload full text articles for ppi pair extraction.

