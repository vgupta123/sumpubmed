BACKGROUND
microarray technology provides a revolutionary tool for understanding human diseases. golub et al.  <cit>  demonstrated that microarray data can be used to classify cancer, e.g. to distinguish between acute myeloid leukemia and acute lymphocytic leukemia. since then, disease classification has been one of the primary foci of microarray research. for example, microarray technology has been applied to classify cancers as diverse as lung cancer  <cit> , breast cancer  <cit> , and glioma  <cit> . in principle, a disease classification problem can be solved with a two-step process:  build classifiers based on samples with known disease class labels; and  classify the unknown samples into known disease classes. in an ideal case, we would hope that the large amount of data generated by different laboratory on various diseases could be integrated into a diagnosis database, such that unknown samples could then be matched to the disease classes in the database. in this way, microarray-based classification could be practical and promising.

recently, several studies have tested the feasibility of disease classification on cross-platform microarray data  <cit> . employing different normalization methods, those studies showed promising results. however, all of those studies were based on cancer microarray data with limited scales. moreover, in some studies, the good performance was biased by correlated training and testing data   <cit> . in addition, the performance evaluations of current studies were mainly focused on precision without considering recall. in this study, we integrated  <dig> microarray datasets of diverse disease classes to perform a large-scale and unbiased evaluation on the classification performance. furthermore, we design an approach to automatically construct disease classes from microarray data, which is an important step towards automated disease classification by utilizing the enormous amount of public microarray repositories.

our goal is that given microarray data profiling two samples, one normal condition and another disease condition, the disease condition can be classified based on the phenotype annotations of datasets in the public microarray database. to approach this problem, we need three component tools:  a feature vector to describe a microarray profile pair  that is comparable among microarray data generated with different platforms;  disease classes built from cross-platform microarray data based on their associated phenotype information; and  a machine learning approach capable of assigning potential phenotypes to a queried sample pair based on its similarity to profiled pairs in known disease classes.

for the first component, we derive the expression log-rank ratio for each gene in each profile pair. by first deriving the expression log-rank ratios between a disease and a normal profile as meta-information within the same dataset, and then comparing such ratio profiles across datasets, the results shall be comparable across datasets. simply speaking, we compare cross-dataset signals by emphasizing on differentially expressed genes, which were shown to be relatively robust to platforms or laboratory settings <cit> . to complete the second component, we need to systematically annotate the experimental information associated with each microarray dataset. we followed the approach of butte and kohane  <cit>  to use the disease concepts in the unified medical language systems   <cit>  in order to annotate the phenotypes associated with each microarray dataset. since a disease state is usually defined by several phenotype concepts , we built disease classes by selecting microarray datasets sharing a common set of umls concepts. with respect to the third component, we used support vector machine   <cit>  for classification, and further developed a method named manisvm by integrating manifold  <cit>  and svm where manifold is employed for nonlinear dimensionality reduction to enhance the performance.

by integrating the microarray data of major platforms in the ncbi gene expression omnibus  database  <cit> , we constructed  <dig> classes. using the leave one dataset out cross validation , manisvm and svm achieved the overall accuracies of  <dig> % and  <dig> %, respectively. our result not only demonstrates the feasibility of disease diagnosis by integrating heterogeneous microarray data, but also reveals that the performance of disease classification improves with the number of homogenous training datasets. thus, the power of the integrative approach can be expected to dramatically increase with the continued accumulation of microarray data in public repositories.

RESULTS
in this section, we will first give a brief introduction to the methods, followed by analysis results. figure  <dig> illustrates the three major steps of our analysis:  data standardization,  construction of disease classes, and  classification.

data standardization for cross-dataset comparison
standardization of expression data
we collected  <dig> human microarray datasets from three major platforms of the ncbi geo  <cit> : u <dig>  u <dig>  and u <dig> plus  <dig> . these platforms contain the majority of geo human datasets. we only kept the  <dig> datasets containing both diseased and "normal"  conditions. the mapping between probe sets and entrez gene id  <cit>  yielded a set of  <dig> genes common to all three platforms. for each gene, we calculate the average expression level for probe sets associated to this gene. within each dataset, any combination of one disease sample and one normal sample is called a profile pair. to avoid systematic bias due to the differences in expression signals measured by different laboratories, we describe the properties of a profile pair in terms of log-rank ratios. this is calculated as follows:  convert the gene expression values to ranks within each profile, and  calculate the log ratio of the two ranks for each gene . in total, we obtained  <dig>  vectors of log-rank ratios for an equivalent number of profile pairs. we then filtered out those datasets giving rise to fewer than  <dig> such vectors. our final sample consists of  <dig> datasets and  <dig>  log-rank-ratio vectors.

standardization of dataset annotation
to systematically categorize the phenotype information associated with each microarray dataset, we mapped the mesh headings and the geo dataset summary of each dataset to the umls concepts. any umls concepts associated with only one microarray dataset were filtered out, resulting in a vocabulary of  <dig> disease and phenotype concepts. more details on this phase of the analysis are given in the methods section.

construction of disease classes
this step groups microarray datasets into disease classes. we first employed the frequent itemset mining  algorithm  <cit>  to identify candidate disease groups sharing a common set of umls concepts. this effort assumes that a particular disease state is usually described by a common group of umls concepts . next, within each group we measured the phenotype distance score among pairs of datasets. this is quantified by the term frequency-inverse document frequency   <cit> . only those disease classes with a phenotype distance score whose estimated p-value is less than  <dig>  were kept for further analysis. this cut ensures that each class has a similar level of homogeneity in its associated umls concepts. details of the tf-idf calculation and its associated p-value estimation are described in the methods section.

in this manner we constructed  <dig> classes, comprising  <dig> microarray datasets. each class contains  <dig> to  <dig> datasets. the classes covered a wide spectrum of conditions: cardiovascular/heart diseases, "bacterial infections and mycoses", neoplasms, cns disorders, skin disorders, and metabolic diseases. table  <dig> shows selected disease classes. note that a given dataset can appear in more than one class, and that many of the classes are interrelated. for example, the disease class described by  is the parent class of one characterized by .

gds1321
gds1479
gds1392
gds539
gds1320
gds1726
gds1022
gds539
gds711
gds1726
the datasets within each disease class naturally form a positive set for that class. however, the size of the datasets can vary widely. large datasets may come to dominate the characteristics of their disease classes. in order to get an unbiased estimator of classification accuracy, we randomly selected  <dig> log-rank ratio vectors from each dataset if its total number of profile pairs is greater than  <dig>  we built the negative set by randomly sampling an equal number of vectors from datasets not in the positive set.

classification analysis
we applied two approaches to training the disease classifiers. the first was direct application of the svm algorithm with a linear kernel and c-support vector classification , using the libsvm package  <cit> . prior to classification, we reduced the number of features by selecting those genes with significantly different log-rank ratios  between the positive and negative training sets. in the second approach, we first constructed a laplacian matrix to represent the gene expression data  <cit> , thereby transforming the data in a non-linear fashion into a new and lower-dimensional manifold. we then applied svm to the transformed data. we call the second approach manisvm. the major advantage in integrating graph laplacian with svm is to transform the data via non-linear dimension reduction into a new space, where data points close in distance shall share high phenotype similarity based on the chosen similarity metric. such transformation enhances the separation of data points between positive and negative classes, thus the subsequent application of the linear kernel svm to the transformed data can achieve better performance than its direct application to the original data. details of the graph laplacian transformation are described in methods.

we performed disease classification with svm and manisvm, and evaluated performance with loocv . we performed loocv by leaving out one dataset from the positive set  and the equal number of expression log-rank-ratio vectors from the negative set as the testing positive and negative set, respectively. then the remainder positive and negative set are training positive and negative set, respectively. even though our classification unit is a single profile, we left out the entire positive dataset to avoid bias caused by replicates in the same dataset. we used the following measures to assess classification performance: precision = tp/; recall = tp/; and accuracy = /, where tp stands for true positives, tn for true negatives, fp for false positives, and fn for false negatives. the accuracy is actually a way to summarize the precision and recall information. for each loocv procedure, we repeated  <dig> times by random sampling of different negative sets, and we averaged the result to assess the classification performance.

our results showed that manisvm achieved the overall accuracy of  <dig> % outperforming svm  by the default hyperplane positions. although svm can achieve high classification precision , its recall is rather low . in the contrast, manisvm provides more balanced performance and yielded  <dig> % precision and  <dig> % recall with 12% disease classes achieving the accuracy higher than 80%. by further shifting the position of hyperplane via adjusting the threshold of svm decision value, svm achieved the maximum accuracy of  <dig> %  and manisvm achieved the maximum accuracy of  <dig> % . again, manisvm outperformed svm. the endowed classification power of manisvm is attributed to the fact that the data points can be better separated in the manifold space in terms of their phenotype similarity based on the chosen data similarity metric.

the performance of individual classes varies greatly. for example, manisvm achieved  <dig> % accuracy for the disease class described by the umls concepts , but only  <dig> % accuracy for the disease class described by . one reason for this difference is that the former contains  <dig> datasets, while the latter contains only  <dig> datasets. in general, a class with more datasets will be easier to classify . figure 2a shows that the accuracy increases with the number of datasets in a class: as the number of datasets increases from  <dig> to  <dig>  the accuracy increases from  <dig> % to  <dig> % and from  <dig> % to  <dig> % for manisvm and svm respectively. this relationship highlights the advantage of integrating multiple datasets for disease classification.

discussion
although the correlation between dataset number and classification performance is strong , outliers do exist. for example, the disease class characterized by the umls concepts  contains only  <dig> datasets, but has a high classification accuracy of  <dig> %. in contrast, the disease class  contains  <dig> datasets, but is associated with a classification accuracy of  <dig> %. these two disease classes differ in terms of within-class homogeneity. the disease class with  <dig> datasets benefited from similar dataset annotations, with an average phenotype distance score of  <dig> ; while the disease class with  <dig> datasets had an average phenotype distance score of  <dig> .

to properly compare the average phenotype distances within disease classes of different sizes , we estimated the statistical significance of phenotype distance scores by random sampling . in general, more significant p-values correspond to lower phenotype distance scores and higher degrees of within-class data homogeneity. figure 2b shows the significant negative correlation between accuracy and the p-value of the phenotype distance score. as the p-value of the phenotype distance score increases from 10- <dig> to 10- <dig>  the accuracy of the classifier decreases from  <dig> % to  <dig> % and from  <dig> % to  <dig> % for manisvm and svm respectively. this analysis demonstrates conclusively that classification power increases with dataset homogeneity. thus, integrating multiple datasets is only expected to enhance classification performance if they are sufficiently homogenous in the diseases being measured.

in the above analysis, we have assessed the homogeneity of a disease class by comparing dataset annotations that were mapped to the umls concepts. our results show that such assessment generally reflects the true phenotype similarity between datasets. despite a satisfactory overall performance, we have observed a few exceptions to this rule. for example, the disease class  contained  <dig> datasets {gds <dig>  gds <dig>  gds1022} and had a fairly small average phenotype distance score  <dig>  , but proved rather difficult to classify. a further investigation of individual datasets revealed that the dataset gds <dig> actually studied lung pneumocytes after infection with pseudomonas aeruginosa, which is not related to digestive system disorders. the reason that gds <dig> was mapped to this disease class is because its dataset summary mentioned "pseudomonas aeruginosa causes serious respiratory infections in cystic fibrosis patients," and "cystic fibrosis" was automatically mapped to the "digestive system disorders" by the umls system. thus, although the object of this study  is not related to the digestive system, gds <dig> was nonetheless classed among digestive system disorders by the umls concept of "cystic fibrosis." this mapping imprecision resulted in inaccurate phenotype distance scores, and led to a low classification accuracy of  <dig> % and  <dig> % for this disease class by manisvm and svm, respectively. on the other hand, such failures prove that the performance of our method could be further enhanced by a more advanced umls text mining tool. as with all automated text mining methods, however, mapping imprecision cannot be fully avoided. but with the rapid accumulation of microarray data, we should be able to minimize or bypass the influence of umls mapping noise by imposing stricter homogeneity requirements on candidate disease classes.

CONCLUSIONS
we have proposed a framework for microarray-based molecular diagnosis by combining public microarray repositories with the umls knowledge base. we respond to several challenges in integrating cross-platform microarray datasets. in particular, we addressed the issue of data compatibility by expressing the difference in two profiles as the ratio of logarithmic rankings. in addition, we systematically associated each microarray dataset with disease classes by mapping their textual annotations to umls concepts. the disease classes were created by comparing phenotype distance scores among pairs of datasets. although svm has already been considered one of the best approaches for microarray-based disease classification by several studies  <cit> , we further enhanced its power by using manifold for non-linear dimension reduction and data transformation. our result has not only demonstrated the feasibility of this approach, but also highlighted the fact that classification power increases with the number and homogeneity of training datasets. this work therefore provides a solid foundation to the problem of integrating enormous amounts of microarray data, which are costly to generate yet freely available. the power of our approach will increase dramatically with the continued growth of public microarray repositories. the framework presented here will also benefit from ongoing efforts to develop more advanced umls text mining tools.

