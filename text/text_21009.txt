BACKGROUND
recent advances in single cell rna sequencing  technology has enabled the routine high-throughput collection of quantitative gene expression measurements across a range of tissue types and diversity of cellular states at the level of the single cell . the application of single cell gene expression profiling has identified cell-to-cell expression variability in phenotypically and/or genetically identical cells that is masked in standard “population” gene expression studies where the transcriptomes of thousands to millions of cells are simultaneously measured and averaged. this expression variability is driven by stochastic gene expression mechanisms whose effects cannot be measured in the context of a population of cells but only through the microcosm of a single cell. consequently, scrna-seq has increasingly become the method of choice in discovering molecular underpinnings of complex and rare cell populations  <cit> , assessing tissue composition , studying various diseases  <cit>  and cell development/lineage processes .

our particular focus in this article is the utility of scrna-seq data to enable the identification of functionally distinct sub-populations that each possesses a different pattern of gene expression activity  <cit> . these sub-populations could indicate different cell types that exhibit relatively stable, static behaviour but also cell states representing intermediate stages in transient processes. traditionally, cell types have been defined by the functional behaviour of certain cellular features, for example, cd14+ monocytes show cd <dig> expression, but with the availability of scrna-seq the potential exists to develop a richer taxonomy of cell types by extending the molecular features used for characterisation to consider the whole transcriptome. the population of cd <dig> expressing monocytes might in fact be a collection of distinct cell subtypes each sharing a common cd <dig> expression signature but also possessing a unique expression pattern of their own.

unbiased discovery of cell types from scrna-seq data can be automated using unsupervised clustering algorithms. given expression profiles for a collection of single cells, the objective of the algorithm is to partition the cells into a number of cell types such that each cell type has a significantly distinctive expression signature from the others. single cell analytical software pipelines have been developed recently for single cell analysis that include procedures for unbiased cell type identification.

in raceid  <cit> , k-means clustering with gap statistics was used to identify six intestinal cell types, while rare cell types were identified by examining outliers that could not be explained by a background noise model. the backspin method  <cit>  uses a customized version of the spin algorithm  <cit> . when applying the backspin method to  <dig> mouse cortex and hippocampus cells, the algorithm identified  <dig> groups, stopping after  <dig> splits along the deepest branch. this was manually limited to  <dig> splits per branch and subsequent merging of the neuronal groups into three main groups  and oligodendrocytes into one group  resulted in the nine main cell classes given in the study  <cit> . seurat  <cit>  applies a two-dimensional t-sne projection  <cit>  to the most significant principal component scores  from a principal component analysis of the single cell expression matrix. density clustering   <cit>  is then used to identify cell type clusters in the two-dimensional space. seurat was used to classify  <dig>  drop-seq single cell expression profiles into  <dig> retinal cell populations  <cit> . the sincera package  <cit>  uses hierarchical clustering using centered pearson’s correlation and average linkage as default settings for the similarity measurement and linkage method respectively. snn-cliq  <cit>  uses the concept of shared nearest neighbour  to define similarities between data points  and achieves clustering by a graph theory-based algorithm. finally, the sc <dig> approach  <cit>  which uses spectral transformations, the k-means algorithm and complete-linkage to perform consensus clustering.

a limitation of these methods is that they do not establish a connection between the representation of the data to the number and nature of the cell types that can be resolved. for example, fig.  <dig> illustrates three clustering structures derived from a single cell study of mouse sensory neurons  <cit> . four broad sensory neuronal cell types  were identified by examining clusters of cells in the subspace spanned by the first few principal components  and using expression of key  cell markers to label the clusters. using information contained in additional principal components, the four major cell types could then be sub-divided into further distinct cell subtypes. the presence of these refined cell subtypes is clearly not obvious from a visual inspection of the data in the subspace spanned by pc2- <dig> .
fig.  <dig> cellular hierarchies. three hierarchically related clustering structures for a single cell mouse neuronal dataset  <cit> . the data has been projected on to the first four principle directions, we report the three that allows best data visualisation; we used the given cellular labels to colour cells according to the a  <dig>  b  <dig>  and c  <dig> cell subtypes identified in the original study



we have developed an agglomerative clustering approach that integrates principal components analysis  and hierarchical clustering that we call pcareduce. this method seeks to establish a connection between the reduced representations given by principal components analysis and the number of resolvable cell types . the approach is driven by the expectation that information pertaining to large, broad classes of cell types are likely be contained in low dimensional pc representations whilst refined cell type structure are only defined in high dimensional pc representations. our proposed method is similar to the “iterative” principal component analysis approaches used to establish putative cell types in  <cit> . however, the question we asked was whether we could recapitulate such results fully automatically in an unsupervised fashion without prior knowledge of cell type markers that was used in these studies. this question is important in study conditions where there maybe little or unreliable prior knowledge of cell types. we will test our methods against existing approaches but note that many existing approaches typically utilise different combinations of standard dimensionality reduction and clustering algorithms. therefore, in our investigations, instead of using these packages directly, we will explore the utility of the constituents components .

methods
let xn×d denote a gene expression matrix, where n is the number of cells measured across d number of genes; i.e. each cell xi = {xi <dig> …,xid} is a d-dimensional object. further assume that yn×q denotes a score matrix, obtained after projecting data into first q principle directions, and yi denotes a subset of cells, yi⊂y.

our clustering algorithm begins by performing a k-means clustering operation on the projection of the original gene expression matrix, xn×d, to the top k− <dig> principal directions. the number of initial clusters k is set to a sufficiently large value, say  <dig>  to ensure most cell types will be captured. once the initial clusters are determined, we take two subsets  that originate from a pair of clusters  respectively, and calculate the probability for those observations to be merged together, p. we assume that the probability density function is a multivariate gaussian with mean and covariance matrix given by: 
  μij=nini+njμi+njni+njμj,Σij=nini+njΣi+njni+njΣj, 

where ,  and  denote the sizes, centroids and covariances of the clusters i and j respectively. we repeat this for all possible pairs . we then choose to merge two clusters by either  picking the pair that has the highest probability or  sampling a pair of clusters to merge in proportion to their  merged probabilities. the number of clusters will now decrease to k− <dig>  we then project the data matrix on to the first k− <dig> principal directions, i.e. removing the -st principal component that explains the lowest degree of variance in the data, removing this dimension from the existing cluster centroids and covariance matrices.

the above clustering operation is then repeated so that after every merge operation we remove a principal direction until only a single cluster remains. if sampling-based merge operations are used, the whole process can be repeated to obtain a number of alternative clusterings. this will be useful for assessing the stability of the clustering results. algorithm  <dig> gives a pseudo-code description.


fig.  <dig> method illustration using an autoencoder network. clustering is applied to the data representation at each linear hidden layer. if there are k− <dig> linear hidden units, the data is projected into a subspace spanned by the top k− <dig> principal components. consistency between the clusterings at each layer is maintained by enforcing a hierarchical constraint. a graphical interpretation of an autoencoder network. b corresponding hierarchical structure



RESULTS
to demonstrate the performance of pcareduce method, we considered two single cell rna-seq dataset examples. the first contains a collection of cells originating from diverse biological tissues  <cit> ; and the second dataset the mouse sensory neuronal cells  <cit>  discussed in the introduction. these were selected as they contained pre-existing hierarchical cluster structures that can be used to assess unsupervised algorithmic performance. here we show that pcareduce can be applied to re-capture the known cellular hierarchies and we compare to other statistical techniques, which are commonly applied to address similar cell sub-typing problems. below, all examples were implemented using the free statistical computing platform r .

cells from disparate tissues
we obtained single cell rna-seq dataset  <cit>  for  <dig> cells whose transcriptional measurements were taken across  <dig>  genes . the data were derived from  <dig> cell types: k <dig> – myeloid , hl <dig> – myeloid , crl- <dig> – lymphoblastoid; ips – pluripotent; crl- <dig> – epithelial, bj – fibroblast , kera – foreskin keratinocyte; npc – neural progenitor cells, gw – gestational week , fetal cortex . in addition, as specified in the original study by  <cit> , these cell types could also be grouped into four disparate tissue sources: blood, stem, skin and neural tissues. we refer to these as the cell line-level and tissue-level classifications respectively and use these as ground-truth classes in our performance assessment; i.e. we will focus on data partitions into k= <dig> and k= <dig> clusters.
fig.  <dig> application of pcareduce to single cell rna sequencing of  <dig> cell lines. a projection of the data on to the first two principal components. b performance of pcareduce, the horizontal axis corresponds to a level in the hierarchical cluster structure reported by pcareduce, the vertical axis show the adjusted rand index  score between the tissue-level  and cell-line level labels  and the clustering reported by each level of the hierarchical clustering of pcareduce. each line correspond to a single run of pcareduce using probabilistic sampling. c the most probable cellular hierarchy identified using pcareduce




we applied pcareduce to this dataset to construct a hierarchical clustering of cells. first, we initially projected the data into the subspace spanned by the first  <dig> principal components following a pca and performed an initial k-means clustering to get initial cluster assignments   <cit> . after this, we applied different merging strategies to construct the cellular hierarchies: first, when merging is performed based on the most probable cluster merge value  in algorithm 1) and, secondly, when merge candidates are probabilistically sampled  in algorithmic overview section). the former gives a single hierarchical clustering whilst the latter can give a range of candidates hierarchies based on repeated sampling.

we compared the hierarchical clustering given by pcareduce for levels k= <dig> and k= <dig> to the true cell line and tissue level classifications respectively using the adjusted rand index  <cit> . note that, in fig. 3a, the projection of the eleven cell lines in two-dimensional principal component space cannot be separated into distinct groups. it is only possible to do this in higher dimensional representations. figure 3b illustrates the performance of pcareduce using the sampling-based merge operation where each line corresponds to a single run of the method. although, pcareduce has no knowledge of the true number of cell line or tissue labels, the correspondence between the hierarchical clustering output of pcareduce and the true classification peaks at around levels  <dig> and  <dig> of the hierarchies respectively which it discovers without any prior knowledge.

in order to gain an understanding of the misclassifications, we looked specifically at the most probable hierarchical structure identified using pcareduce . compared to the known cell line and tissue labels , the 11-cluster structure given by pcareduce did not fully differentiate the  <dig> cell types. this is not unsurprising since the  <dig> cell types included a set of three maturing neural cell types  that are highly related. interestingly, pcareduce grouped these cell types together, which is not an entirely inappropriate operation since the expression variation between the maturing neural cells maybe relatively low compared to unrelated cell types. there was also some class splitting, for example, two sub-groups of k <dig> cells were identified. figure 3a qualitatively indicates that this may make sense as some k <dig> cells were closer in overall expression to hl <dig> cells than other k <dig> cells.

at the 4-cluster level the assignments given by pcareduce gave some interesting group structures. the ground truth tissue-level classification assumed the existence of blood, neural, dermal and stem cell types but pcareduce identified that the crl- <dig> and crl- <dig> cell lines should form a group. this is interesting as crl- <dig> is a cell line derived from a primary stage iia, grade  <dig> invasive ductal carcinoma and crl- <dig> is a b lymphoblastoid cell line initiated from peripheral blood lymphocytes from the same patient. pluripotent stem cells  were also grouped by pcareduce with neural progenitor cells  which is also reasonable if we consider this a stem cell-like group. overall, whilst pcareduce did not give a 4-cluster classification that was identical to the original tissue classifications  <cit> , the output produced are not nonsensical. in comparison, the output of standard hierarchical clustering failed to separate the cells both at the cell line and tissue level into any obvious structure .

in order to fully assess the performance of pcareduce, we compared it to a set of alternative approaches . this includes popular methods such as: k-means, hierarchical clustering , mclust – mixture modelling for model-based clustering  <cit>  combined with tsne – a nonlinear dimensionality reduction/visualisation technique  <cit> ; and recent single cell methodology – snn-cliq, which determines similarities between cells based on a shared nearest neighbours algorithm and performs single cell clustering using a graph-theoretical approach  <cit> , and sc <dig> which uses spectral transformations of a cell-to-cell distance matrix followed by k-means and consensus-based clustering  <cit> . details regarding all parameters and running specifications for each clustering approach are summarised in additional file  <dig> 
fig.  <dig> performance comparison on cell line data. classification performance against known a tissue-level and b cell-line level labels. all points and boxplots illustrate performance relative to the benchmark  measured as arandi score. numbers 1− <dig> correspond to clustering methods in table below. blue and green circles for methods 1- <dig> illustrate consensus clustering of  <dig> runs of pcareduce algorithm with sampling and max merging settings respectively. each point for method  <dig>  corresponds to a different range of the parameter d. further details can be found in additional file 1: figure s3



whilst some methods had comparable performance to pcareduce in terms of capturing the cell line level classifications, their performance diminished for the tissue-level ones. here, the benchmark used was method  <dig> when the number of clusters  was given as an input parameter. despite this advantage it failed to identify any clustering structure even closely resembling the ground truth we are using. similarly, method  <dig> uses hierarchical clustering applied to a t-sne projection of the data, this had a reasonable arandi score for the cell line level classification but when the clusters were merged into  <dig> groups these had no correspondence to the ground truth. sc <dig> was able to achieve comparable performance to pcareduce for specific range of values for a parameter d – the number of eigenvectors retained following the spectral transformation of the cell-to-cell distance matrix. however, the range of d that gave greatest concordance was not the default setting , see additional file 1: figure s <dig>  overall, pcareduce gave consistently provide clustering results that were closest to the ground truth  for both the cell line and tissue classifications. its performance suggests that the gradual use of successively reduced dimensional representations of the data helps to merge clusters together in a sensible way.

note, there is stochasticity in the clustering structures produced by pcareduce due to the random initialisation provided by the k-means algorithm and probabilistic merge steps. interestingly, motivated by the use of consensus clustering in sc <dig>  we applied an ensemble clustering method across the pcareduce clustering structures , the consensus clustering structure achieves a high level of concordance with the cell line and tissue level classification. finally further details regarding sensitivity in initial selection of q – the initial number of clusters used – is shown in additional file 1: figure s3).

mouse neuronal cells
we next returned to the mouse neuronal cell dataset discussed in the introduction that contains measurements across  <dig>  genes  <cit> . the study classified cells according to four principle neuronal groups: non-peptidergic nociceptor cells , peptidergic nociceptor cells , neurofilament containing cells , and tyrosine hydroxylase containing cells  . in addition to this, it was suggested that the np, pep and nf cells possessed further subtypes . we now examined whether pcareduce could recover these three layers of clustering structures within its hierarchical output without the use of marker genes.
fig.  <dig> application to single cell mouse neuronal data. a data projected on to pc2- <dig> for visualisation and coloured by the four major neuronal cell types. b clustering performance of pcareduce. c cellular hierarchy identified using pcareduce, further details are given in additional file 1: figure s4



we applied pcareduce and computed the correspondence between its 4-, 8- and 11-cluster structures and those in the original study. figure 5b shows that the absolute classification accuracy was relatively low compared to the previous cell line experiment. this is unsurprising as the four pre-dominant neural cell groups form a complex cluster pattern in the subspace spanned by pc2- <dig>  and would be hard to segregate in an entirely unsupervised way as we propose. this is especially evident from pca plots summarised in additional file 1: figure s <dig>  where we plot pairwise combinations of various principle components and highlight cells that should correspond to neuronal subtypes: nf <dig> and nf <dig>  and np <dig> and np <dig> .

the performance of pcareduce generally outperformed the other approaches we tried across the three clustering structures  except for method  <dig> , which used the true number of clusters by default and acts as an artificial benchmark, and sc <dig> . interestingly, classification performance was again increased by applying consensus clustering across the pcareduce sampled clustering structures. although this had greater effect for the 4-cluster structures than the 8- and 11-clusters. in the case of sc <dig>  the classification performance was sensitive to the choice of the number of eigenvectors  used in the spectral transformation step . strong classification performance was obtained using the default range of d but we note that this range was chosen based on optimizing against a number of single cell datasets and their ground truth classifications including this mouse neuronal dataset  <cit> . outside of this default range, performance varied and could be similar to the levels obtained by other methods .

using the most probable structure given by pcareduce, we noted that the three groups of the four top level groups are predominantly dominated by np, th and nf cells respectively  matching groups in the classification by  <cit> . marker gene expression patterns  for these three groups also corresponded to those found in the original study confirming their identities . the main source of discordance comes from  <dig> np cells being assigned to the same group as  <dig> pep cells giving a combined group of these cells  not present in the original classification. when we examined the expression of the marker genes, we discovered that the expression of these genes was strikingly similar between the np and pep groups found by  <cit>  with the only major difference being complete zero expression of mrgprd in the pep group whilst only some np cells show zero expression for this gene. therefore it is perhaps unsurprising that cells from these two groups were merged by pcareduce. interestingly, the pep and np cells correspond to sub-classes of nociceptors . this combined np/pep groups does subsequently become partitioned as the number of clusters was allowed to increase into subgroups dominated by np and pep cells respectively. note that the use of t-sne – a non-linear dimensionality reduction technique – did not well-separate the four groups either , and it would not be obvious, without known markers, how to delineate each group.
fig.  <dig> performance comparison on mouse neuronal data. boxplots illustrate the expression levels of marker genes that define four major neuronal classes. a illustrates results obtained using pcareduce algorithm, whereas  illustrate the ground truth. the information about marker genes was obtained from  <cit> 



at the 11-cluster level pcareduce identified multiple subgroups of th cells that had high th gene expression but possessed different patterns of expression in other marker genes . in contrast, the original study  <cit>  only possessed one th group. this difference alone drives much of the classification discordance between pcareduce and the original classes but this discordance may not be an “error” but simply a different choice of clustering compatible with the same data. further differences are driven by the combined np-pep cluster generated by pcareduce that is then propagated down the hierarchical structure. finally, the decomposition of the nf cluster by pcareduce, splits the nf group into three subgroups with striking similarity to the nf <dig>  nf2/ <dig> and nf4/ <dig> groups in  <cit> .

discussion
in this paper we have presented an unsupervised hierarchical clustering approach for the identification of putative cell sub-populations from single-cell transcriptomics profiles. clustering occurs in a linearly transformed subspace obtained from principal component directions and, at each level of our hierarchical clustering structure, the similarity between clusters is measured in subspaces of decreasing dimensionality by discarding principal directions as the number of clusters decreases. in doing so, we presume that the variation contained in the first principal components corresponds to the features of broad cellular classes, whilst fine-scale variation in lower principal directions correspond to the features of detailed cellular sub-structure. we also implicitly assume that the clusters are separable in the principal component subspaces. for data sets where this does not apply, it maybe possible to perform an non-linear transformation of the data first, before applying pcareduce although this would lead to the loss of simple interpretation for the principal components attached to each merge in the hierarchical clustering.

we applied this technique to two illustrative single cell datasets from the recent literature and showed that, compared to a variety of existing clustering tools, our approach was able to better recapitulate pre-existing cluster structures across both – broad and detailed cellular states; further, this was achieved simultaneously in a hierarchical fashion. interestingly when we specifically compared pcareduce to related variants of the method, which did not use successively reduced dimensional representations, we showed that clustering performance was worse for these alternate approaches. intuitively, this might be expected since the “distances” between cells in high-dimensional spaces can be unstable depending on the measure used. by using low-dimensional data representations to describe low-complexity cluster structures we reduce the possibility that variability in higher dimensions impacts on clustering performance. in summary, the key advance of our method is that we provide consistent clustering across different reduced dimension representations of the data. this is important because the choice of reduced dimension representation will allow a different number of clusters or cell types to be resolved. although we cannot define how many real cell types exists nor which representation are optimal for finding them, pcareduce will return consistent clustering across the different representations such that, for example, a 4-cluster structure will always be related to a 5-cluster representation and that the extra cluster is related to the extra dimension of information introduced.

benchmarking our algorithm and related methods is extraordinarily difficult since there is a lack realistic, gold standard data sets with known cell types. the disparate tissue data used in our first application has known cell types but could be considered artificial in that the constituent cell populations are derived from completely independent cell lines and have a different genetic background. furthermore, the tissue-level categorisation we used as our ground-truth is potentially arbitrary. alternative groupings of the cell lines could be made that are qualitatively sensible. the mouse neuronal data is more representative of the type of data that our method targets where the main is to explore expression heterogeneity against a fixed genetic background but in such situations the true cell types are unknown and, as our analysis has shown, there is potential subjectivity in how we define novel cell types. other data sets, such as the five primary glioblastomas in  <cit> , could be used by defining a cell type as the glioblastoma from which the cells are derived but again this would be examining expression variability against a variable genetic background. unfortunately, as yet, there are no realistic simulation algorithms that can generate suitable high-dimensional single cell gene expression data.

CONCLUSIONS
we conclude by remarking that the absolute performance of ours and other techniques can be rather limited in an unsupervised setting, and further research is required to combine local and global feature selection alongside clustering/classification techniques is necessary in order to better identify real cell types and states. cluster validation with single cell data is also challenging since there are often no independent means of establishing the validity of computationally derived cell types. we therefore emphasise that such tools are primarily exploratory devices and more extensive functional validation is required.

finally, we previously described our hierarchical clustering approach within an autoencoder network framework. this analogy offers the possibility for further methodological extensions. our implementation uses principal components analysis which in an equivalent autoencoder representations corresponds to using linear transformation between hidden layers. however, non-linear transformations can also be applied leading to give greater flexibility and improved dimensionality reduction properties. we are currently exploring this feature and aim to implement it in the next version of pcareduce.

availability and supporting data
the details of the data sets supporting the results of this article are detailed in additional file  <dig>  the r source code for pcareduce is freely available from our github repository: https://github.com/justinaz/pcareduce.

additional file
additional file  <dig> supplementary information. a pdf file that contains additional information and results omitted from the main paper. 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

jz and cy conceived the study and wrote the manuscript. jz developed software and performed experiments. all authors read and approved the final manuscript.

