BACKGROUND
over the last fifteen years, there has been a growing interest in reverse engineering of gene regulatory networks  that aim to infer complex graphs representing transcriptional regulatory relationships, directly from gene expression profiles . due to its low computational complexity as well as lower requirements for the number of samples, co-expression network analysis has been widely used to infer gene regulatory networks from high throughput expression data, such as microarray or rna-seq data . typically thousands of genes/transcripts of special interest  are utilized to construct the co-expression network in an experiment. top candidates whose expression correlates with the gene of interest are usually further examined to identify novel regulators/targets. despite this approach being widely used, there is a general lack of studies on the precision  and recall  expected.

considerable effort has been made to evaluate the performance and robustness of grn inference methods. the majority of evaluations were implemented on in silico datasets simulated from reference networks with sizes up to a few hundred or 1– <dig> genes. numerous studies using a range of network sizes, time-series data and perturbations have compared different analysis methods. results are variable in terms of the top-performing method . a series of studies have been carried out by the dialogue for reverse engineering assessments and methods  project, which generates challenges and organizes contests annually. the dream <dig> challenge presents gene network inference problems based on in silico networks of sizes ranging from  <dig>   <dig> and  <dig> genes . gene expression data was simulated using these networks for the following scenarios: 1) the steady state of the unperturbed networks, as well as steady state of the network where every gene is knocked out or down; and 2)  <dig>   <dig> and  <dig> different time series for the size  <dig>   <dig> and  <dig> networks respectively, with  <dig> time points for each time series. for example, for the network of size  <dig>  there are a total of  <dig> gene expression profiles with different perturbations and knockout/knockdown experiments available to make the inference. the inference methods: scan bayesian model averaging , gene network inference with ensemble of trees  and minimum redundancy networks using backward elimination  were the top performers in three different studies using the dream <dig> challenge time-series data, which is composed of five perturbation experiments for size  <dig> networks and ten perturbation experiments for size  <dig> networks, each with  <dig> time points  . besides the dream benchmark datasets, the bayesian network , graphical gaussian models  and relevance network  methods were compared using expression simulations of  <dig> sample points for a size  <dig> network with bn and ggm performing best  <cit> . the algorithm for the reconstruction of accurate cellular networks  method had a much better performance than bn and rn on expression data with  <dig> samples simulated from size  <dig> networks  <cit>  while mrnet was the top ranked method when compared to the rn, aracne and context likelihood or relatedness  methods on  <dig> datasets with different network sizes  and sample sizes   <cit>  .

a few studies aimed to evaluate network methods on larger networks of a few thousand genes. in the dream <dig> challenge, least absolute shrinkage and selection operator , clr and genie <dig> are top performers among more than  <dig> network inference methods on a size  <dig> network with  <dig> simulated gene expression profiles, where a list of regulators  are given  <cit> . ten network inference methods on size  <dig> network from s. rogers  <cit> , size  <dig> and  <dig> networks from syntren  <cit>  and size  <dig> and  <dig> networks from genenetweaver   <cit>  were assessed using simulated datasets of  <dig>   <dig>   <dig>   <dig> and  <dig> experiments individually. clr, genie <dig> and mrnet were the top performers in this study  <cit> . similarly, aracne, genenet, weighted correlation network analysis  and sparse partial correlation estimation  were compared using size  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> networks over datasets with  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> sample points simulated from gaussian distribution  <cit> . genenet ranked in the first place followed by aracne .

despite the large number of evaluation studies, none have explored the normal experimental situation where a regulatory network is generated which involves hundreds and thousands of genes with only a small number of profiles being available. the assessments in the literature were based on either small and medium sized networks or datasets with a large number of samples. the evaluation conclusions were also based on a large amount of simulated expression profiles which would be difficult to validate experimentally due to the prohibitive cost or the amount of work in real experiments  <cit> .

distinguishing direct regulatory interactions from indirect associations has been one of the major challenges in gene regulatory network constructions  <cit>  . partial correlation  is one of the methods used as a solution to distinguish direct from indirect edges of each pair of candidates by calculating the correlations after removing the linear dependencies from the remaining genes . other methods dealing with indirect connections include partial correlation coefficient with information theory , aracne, mrnet and mrnetb. pcit and aracne use the information theory of data processing inequality method to remove the weakest gene association in each possible triplet structure in a network  <cit> . pcit uses first order pc  to measure the significance of edge associations  <cit> , whilst aracne uses mutual information  to measure the associations between any two edges in each possible triplet  <cit> . mrnet uses a minimum redundancy feature selection method  <cit> , where for each candidate gene in a mi network, it selects a subset of its highly relevant genes while minimising the mi between the selected genes  <cit> . mrnetb is an improved version of mrnet using a backward selection strategy starting from assuming that all genes are connected to the candidates. less relevant genes are eliminated until the difference between the mi between a candidate and its neighbours and the mi within the neighbours are optimised  <cit> .fig.  <dig> indirect edge and rlowpc network. a an indirect association from x
1 → x
 <dig> could arise from a regulatory structure of x
1 → x
3 → x
 <dig>  b rlowpc network inference. in an rlowpc network, firstly only the top ranked edges are kept in a pre-inferred pc network and then for each pair of genes, only the immediate neighbours will be regressed for pc calculation. in this example only the top  <dig> of  <dig> edges with highest correlations are kept and pc between x
 <dig> and x
 <dig> is re-calculated by removing the effects from two immediate neighbouring nodes . the correlation values are represented by the thickness of the edges




given that the search space for regulatory relationships expands factorially with the number of genes included in the network, the precision and recall of regulatory inference decrease with the increase of the network size. as gene clusters with highly cohesive patterns give rise to high correlations between all pairs of the genes in that cluster, the top ranked highly co-expressed genes may also be prone to errors of indirect associations. here, we have developed a new method named relevance low order partial correlation , which is a refinement of top inferred edges by partial correlation methods. rlowpc selects top ranked edges from an inferred pc network as a reduced search space for indirect edges. we evaluated rlowpc alongside pc, pcit, aracne, mrnet, mrnetb, and clr on simulated time-series data and the summaries of the evaluated network inference methods is shown in table  <dig>  precision and area under precision-recall curves  were used as metrics to show that rlowpc outperforms the other methods.table  <dig> summaries of the evaluated network inference methods

nine correlation-based, mi-based and random network inference methods have been compared and evaluated in this study. the methods are classified into two main groups: deal with indirect edges explicitly and not deal with indirect edges




methods
relevance low order partial correlation 
the conventional pair-wise pc measures correlations after linear dependencies on all the remaining genes are removed, the majority of which may not connect to the candidates, especially in large networks where the majority of the genes only have few linked neighbours  <cit> . low order partial correlation methods have been proposed and utilized in the past to reduce computational complexity without much sacrifice in prediction accuracy. for example, de la fuente et al.  <cit>  proposed to calculate up to second order partial correlations regressing against all the remaining genes. this method was improved by confining the second order partial correlation calculation only in cases where both zero and one order pc are non-zero  <cit> . our proposed rlowpc method, firstly, reduces the search space by only picking the top ranked genes from partial correlation analysis and, secondly, computes the pc by only removing the linear dependencies from the shared neighbours in the confined search space, largely ignoring the genes showing lower association and which are less relevant in the pair-wise pc calculation. the implementation details are shown below:


for pc and shrinkage pc calculation we have used ppcor r package  <cit>  and corpcor r package  <cit> , respectively.

gene expression data simulation
the main purpose of this study is to evaluate the performance of different network inference methods on datasets that reflect real experimental setup: large number of genes in the network with limited sample sizes and perturbations. here, to evaluate the proposed methods comprehensively, large scale gene expression datasets were generated based on a variety of network structures using gnw version  <dig>   <cit> . we used in silico size  <dig> networks in dream <dig>  extracted size  <dig> and  <dig> networks from a source e.coli network with  <dig> nodes and  <dig> edges and size  <dig> and  <dig> networks from a yeast source network with  <dig> nodes and  <dig>  edges as reference networks. the source networks were provided by gnw  <cit> . the networks were denoted as gnw <dig>  gnw <dig>  gnw <dig>  gnw <dig> and gnw <dig>  summaries for data generation can be found in table  <dig>  for each size, network extraction was repeated five times yielding five networks with different structures and kinetics for statistical analysis of the results. to generate the time-series, transcription kinetic models of reference networks were firstly generated in gnw by removing self-regulatory interactions and randomly assigning transcription factor  genes to groups to produce protein binding complexes. in the time-series simulation procedure, stochastic differential equations  were used to model the transcription kinetics, gene activation by protein complexes, gene perturbations, mrna and protein production and degradation. one-third of the genes in each time-series were randomly selected and perturbed from steady state at the initial time-point. perturbations were implemented by varying the activation strengths in the protein binding simulations to enhance or inhibit the downstream expression of target genes. the perturbations were sustained until the middle of the time-series at time point  <dig> when the activation strengths were changed back to initial levels. a random noise term proportional to production and degradation was introduced in the sde model, inducing high noise for activated genes and low noise for inactivated genes. the coefficient to control the noise amplitude was set to  <dig> . another random noise, which was independent to the noise in sdes, was added at the final step to the expression data to simulate technical variations  <cit> . the parameters for activation strengths, production, degradation and noises were set as defaults in gnw. the time-series generation were repeated five times yielding five different time-series with different initial conditions and perturbations. average results obtained from these time series as well as five different network structures are reported in this study. parameter setting details are shown in additional file 1: figure s <dig> and additional file 2: configuration file for genenetweaver. three biological replicates were generated for each time-series. by using the replicates, analysis of variance was carried out to select genes with significant expression changes across all  <dig> time-points with p-value cut-off of  <dig> . in each experiment, there are only  <dig> gene expression profiles generated from one perturbation used for the network construction. the repeated generation of time series data as well as the network extraction are only used for statistical purposes to take the average and calculate the variations.table  <dig> source network structures and synthetic datasets

e.coli
e.coli
a number of directed network structures were generated from source networks provided by gnw. the network names, gene and edge numbers for each structure are listed in the table. network density is defined as the true edges divided by all possible edges. the network structures were used to simulate the time-series datasets using gnw




evaluation of the network inference methods
besides the methods mentioned earlier, we also included pearson correlation, which has been the most commonly used method to identify correlated gene pairs, as well as random guessed network, which serves a baseline for network inference performances. we also included the clr method, which although not partial correlation-based, has been shown to perform well in several studies . we divided the methods under investigation into two groups. group one includes all the methods that deal with indirect edges explicitly, which are rlowpc, pc, pcit, aracne, mrnet and mrnetb. group two are the methods which do not deal with indirect edges explicitly and they are clr, pearson correlation and random guessed networks. for mi-based methods, such as aracne, mrnet, mrnetb and clr networks, we have used the minet r package with default parameters  <cit> . the mi matrices of the methods were approximated using pearson correlation directly from continuous time-series data  <cit> . the pc matrices were calculated by a shrinkage approach using corpcor r package  <cit> . the boolean pcit adjacency matrices were calculated using pcit r package  <cit> , which was used as a weight to pearson correlation networks  <cit> . for the rlowpc method, the top  weighted edges of inferred pc networks in gnw <dig>  gnw <dig>  gnw <dig>  gnw <dig> and gnw <dig> datasets were selected as search space for indirect edges. details for tools used in the network inference analyses can be found in table s <dig> in additional file  <dig>  in each inferred network, the top  <dig> edge predictions was used to calculate true positive , false positive , true negative  and false negative  by comparing to the reference networks. the precision ) and paupr ) values were calculated by picking the top ranked edges. pauroc  was also calculated and the results were shown in the supplementary material. all the evaluation of network inference methods was based on undirected network structures and the self-regulation edges were removed.

RESULTS
rlowpc significantly improves the precision and recall in top predictions



we further divided the top  <dig> predictions into groups of top 1– <dig>  101– <dig> and 501– <dig> . the plots indicate that, once again, the precision of rlowpc method outperformed all others, regardless of which group within the top  <dig> genes were selected for investigation. mrnet, mrnetb and clr again showed slightly better performance than pc, pcit and aracne and correlation methods. it is noteworthy that the precisions of all the methods are extremely low in large networks. for example, the precision median of rlowpc in the gnw <dig> networks is around  <dig> , which indicates that in the top  <dig> predictions, only  <dig>   edges are true predictions.fig.  <dig> precisions within different groups of the top  <dig> predicted edges. the top  <dig> predicted edges are divided into three groups, top 1– <dig>  101– <dig> and 501– <dig>  each bin depicts the precision distribution of the method matched to the group and the network structures




clustering before network inference could improve the precision and recall in top predictions
given that precision and recall is very low among the top predictions for all methods for large networks, we explored whether precision can be improved by dividing the large networks into smaller highly cohesive clusters. using the time-series data generated for gnw <dig> as described above, all genes were clustered into non-overlapping co-expressed modules using the r package weighted correlation network analysis  with default settings  <cit> . then, network inference and evaluation were carried out separately and individually in each module. essentially, wgcna was used to break a big network into smaller non-overlapping subnetworks, at which point we carried out the network inference and evaluations within these smaller networks with the same time-series data. the paupr values were averaged across all the modules and it did not include genes that do not fit in any module . similar to the simulation settings above, the clustering and evaluation procedures were repeated for five network structures, where five different time-series data were simulated for each structure. the average results were obtained. the average paupr values and precision distribution of the top  <dig> predictions are presented in fig.  <dig>  compared with the results of gnw <dig> in figs.  <dig> and  <dig>  all methods evaluated have improved when the wgcna method was used. this can be seen with the scale of average paupr values which increased from  <dig>  × 10− <dig> to  <dig>  × 10− <dig> , while the average precision of the top  <dig> predictions has changed from  <dig>  × 10− <dig> to  <dig>  × 10− <dig> when the wgcna method is used . the paupr value of rlowpc method is again significantly better than pc, pcit, aracne, correlation and random networks. in the groups of top 1– <dig> and 101– <dig>  the precision of rlowpc is better than the other eight methods and in top 501– <dig> it is only better than pc, pcit, correlation and random networks. the superior performances of rlowpc when the wgcna method is used are also observed on the pauroc plots .fig.  <dig> evaluation of network analysis methods within co-expression modules by wgcna on gnw <dig> networks a barplots of average paupr for different methods. error bars represent standard errors of the paupr values across the top  <dig> predictions. a student t-test was carried out to determine the significance of the difference of paupr values between rlowpc and the other eight methods. p-values are shown on the top of the bars if it is less than  <dig>  b box plots of precisions in different groups of top  <dig> edge predictions. the means of precision within modules by wgcna  and before clustering using wgcna  are shown as red and blue dashed lines




discussion
the performance of different network inference methods varies according to network structures, data quantity and quality, and methodologies. the insufficiency of sampling and the high complexity of regulation kinetics prevent precise predictions of large gene regulatory networks. as a large regulatory network is often under-determined using a small number of samples, there exists multiple plausible solutions, which cannot be distinguished by the information presented in the sample. this uncertainty in the inference of gene regulatory networks has been termed in some studies as “inferability”  <cit> . although our study mainly focuses on the network inference methods, special attention should be paid to generate the most informative data when trying to construct the accurate and comprehensive underlying grns.

the co-expression based methods capture the relationships between genes which are perturbed directly or indirectly. therefore, the multifactorial intervention on the regulators, as discussed in  <cit> , or hub genes rather than on target genes will generate expression data that is more informative for regulatory inference. results presented here are based on the time-series data corresponding to one perturbation simulation to reflect more typical experimental conditions. when there are more experiments available with different sets of genes being perturbed, the inference accuracy tends to increase with the increased number of gene expression profiles available  <cit> . our data also show that the precision median increases as the experiment size increase . using rlowpc, a precision of  <dig>  is achieved in one experiment, while using pc on  <dig> experiments only leads to a precision of  <dig> . thus refining the top inferred edges using rlowpc is more effective in improving precision than generating data for nine more experiments.fig.  <dig> other factors that influence the precision for network inference a boxplots on the precision of pc and rlowpc methods inferred from datasets with  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> experiments with different perturbations. b relationships between the average precisions of all network inference methods used in this study and network density. the network names shown on the plot can be found in table 2





with the number of possible edges growing factorially with increasing number of genes, the sparsity issue in large networks also becomes more prevalent. we observed that precision of the network inference methods increases with the increase of the network density  as shown in fig. 5b. several types of methods have been explored to alleviate this problem including using network inference methods that allow imposing sparsity constraints  <cit>  or leveraging on multiple datasets on other species that are evolutionary connected  <cit> , or incorporating prior information, such as genetic maps  <cit> , pathways, transcription factor binding, protein-protein interactions, gene ontology, epigenetics, literature, as well as functional association databases to increase the efficiency and reduce the search space by focusing on the top weighted edges  <cit> . rlowpc method also uses a two-step approach to select on the high-confidence edges first. thus there is enrichment of true regulatory relationships for the second step of the inference, which explains the improvement of gene regulatory inference performances. similarly clustering using wgcna also groups highly correlated and connected genes together, which we see an increase of proportion in the true regulatory relationships. this has a similar effect on the network inference performances.

auroc and aupr curves have been popular matrices in the evaluation of network performances  <cit> . auroc measures the area under the curve between true positive rate/recall, which is calculated as ) and false positive rate, which is calculated as  = fp/n). as in big sparse networks, the negatives  greatly exceed the positives , thus false positive rate is less discriminative when the network inference methods have very different abilities to largely reduce the false positive predictions. in the meantime, aupr measures the area under the curve between precision and recall. precision, which is calculated as  = 1-fp/), captures the impacts of tp or fp in the evaluation of big networks. studies have shown that aupr is more informative than auroc in evaluation on datasets where the tp and tn is imbalanced. large sparse networks are typical cases  <cit> . as the purpose of this study is to focus on the utility of co-expression network inferences methods to prioritize the novel regulatory genes pairs for experimental validation from the top ranked edges, we mainly focused on partial aupr curve to evaluate the accuracies and power of the network inference methods on the top weighted edges, which is more relevant than using the entire area under the curve  <cit> .

one parameter required by the rlowpc method is a number to define the search space for indirect edge reduction. for large networks, a reduction space larger than the size of the top weighted edges under investigation should be applied but has to take into account the computational search space and time required. table  <dig> lists the average computational time for different sizes of search space. a useful prior may be to enrich the reduction space with true gene connections. for example, cluster analysis and functional annotation using other experimental data or regulatory databases could be carried out before network inference to investigate the functions and modules of interest.table  <dig> average computational time of different sizes of reduction space using rlowpc

the computational time is calculated based on dell, windows  <dig>  64-bit operating system with  <dig> gb ram and intel core  i7– <dig> cpu @  <dig> ghz  <dig>  ghz processor




CONCLUSIONS
in this paper, we present analysis of the evaluation of different regulatory network inference methods with special emphasis on large scale gene regulatory networks with limited sample size. we developed a new method, rlowpc, which improves the precision and recall in the top weighted pc network structures. we evaluated all methods on time-series datasets with only one perturbation for various sizes of networks using a small number of samples, which reflect better the high throughput gene expression data usually generated in laboratory experiments. we also demonstrated that clustering large co-expression networks into functional and informative co-expressed modules, improved the precision and recall of the regulatory inference.

additional files

additional file 1: file contains additional figures and tables. figure s <dig>  bar plots of pauroc values for top  <dig> edge predictions. figure s <dig>  bar plots of pauroc values of top  <dig> predictions for gnw <dig> module-based. figure s <dig>  gnw settings for data simulation. figure s <dig>  examples of evaluation results. table s <dig>  summaries of evaluation of gene network inference methods. table s <dig>  r packages used to construct and evaluate grns. 

 
additional file 2: configuration file for genenetweaver . the settings in the file were load in gnw to generate synthetic data. 

 


abbreviations
aracnealgorithm for the reconstruction of accurate cellular networks

aurocarea under the receiver-operating characteristic curve

auprarea under the precision recall curve

bnbayesian network

clrcontext likelihood or relatedness

dreamdialogue for reverse engineering assessments and methods

fnfalse negative

fpfalse positive

gcngene co-expression network

genie3gene network inference with ensemble of trees

gnwgenenetweaver

grngene regulatory network

mimutual information

mrnetminimum redundancy networks

mrnetbminimum redundancy networks using backward elimination

paurocpartial area under the receiver-operating characteristic curve

pauprpartial area under the precision-recall curve

pcpartial correlation

pcitpartial correlation coefficient with information theory

rnrelevance network

rlowpcrelevance low order partial correlation

sdesstochastic differential eqs.

tntrue negative

tptrue positive

wgcnaweighted correlation network analysis

electronic supplementary material

the online version of this article  contains supplementary material, which is available to authorized users.

