BACKGROUND
identification of transcription factor binding sites  is fundamental of understanding gene regulations. binding sites or motif instances are typically  <dig> ~ 15bp in length and degenerated in some positions. they are often buried in a large amount of non-functional background sequences, which causes low signal-to-noise ratio. hence, using computational approaches to discriminate motif signals from background signals has not always brought satisfactory results. development of advanced tools is necessary for more accurate motif predictions.

an essence of computational approaches for motif discovery is to search for motifs that are over-represented in the input sequences compared to the background sequences. motif over-representation can be explained by the existence of segments that have been evolutionarily preserved due to their functional significance to gene regulation. hence, appearances of motif instances are rather similar to each other despite having variability in some of their positions  <cit> . two issues that are closely related to motif discovery problem are:  how to construct a model to represent the motifs and,  how to define a suitable search strategy to find putative motifs from the solution space. position-specific-scoring-matrix   <cit>  and its variations are the most widely used motif model. this model defines the maximum-likelihood estimation on the probability of nucleotide occurrences in every position of a motif. the motif search strategies can be local or global. local search algorithms begin with an initial guess of a motif model and iteratively refine this model in the search space to maximize a certain criterion. two examples of such algorithm are meme  <cit>   and alignace   <cit> ). the local search approaches find out one motif at a time. global search algorithms such as clustering based algorithms  and genetic algorithms based algorithms  perform simultaneous searches for multiple candidate motifs by exploring the whole solution space.

in this paper, we aim to develop a som  <cit>  based extraction algorithm  to discover over-represented motifs in dna datasets. we seek to use som to project k-mers  onto a 2-dimensional  lattice of nodes. through this projection, input patterns  with closely related features are projected onto the same or adjacent nodes on the map. hence, the complex similarity relationships of the high-dimensional input sequence space become apparent on the map. analysis of selected nodes, therefore, can reveal potential patterns  in the dataset.

previous studies have applied a standard  and hierarchical  som to discover motifs in protein or dna sequences. those studies have made a common assumption that the motif and the background signals can be analogously modeled by using a homogeneous node model. this assumption is weak because the two classes of signals have some distinct statistical properties  <cit> . hence, homogeneous model of these two signal classes may cause unfaithful map representation and produce clusters with many false positives. the traditional homogeneous modeling of two signal classes implies that, both signals are clusterable under a single type of model. however, mutational events are more rapid in background regions compared to binding regions, causing most of the nucleotide bases in background regions to be random. thus, they have relatively lower clusterability compared against binding site regions  <cit> . therefore, nodes’ vectorial or string  <cit>  based prototypes given by som in traditional tools, can represent motifs reasonably well, but do not well suit for background sequences since two different classes of signals are tried to be expressed through a homogeneous modeling. hence, an alternative modeling approach, preferably a heterogeneous modeling approach, that takes these two signal properties in consideration is necessary.

in the development of somea, we have proposed a hybrid node model to address some of the limitations of current som approaches. this hybrid node model is constituted by pssm  <cit>  and markov chain   <cit>  model. these two model components perform soft-competition through an adaptive weighting scheme within a node to represent the mixture of signals in it. we hypothesized that, the fitness of each model’s components  with respect to the sequences in a node, is a fuzzy indication of its signal class composition. heuristic learning rules are proposed in this paper to adjust the model parameters during learning stage. we have evaluated our proposed somea algorithm against several motif discovery tools using real and artificial dna datasets. results have shown that, our approach performs significantly better than a state-of-the-art clustering algorithm for motif discovery, named sombrero  <cit> .

RESULTS
we now present an experimental evaluation of our somea approach. we have used eight real datasets to compare the performances of our approach against sombrero, meme, alignace and weeder  <cit>  in terms of sensitivity and specificity. then, to evaluate somea’s ability in multiple motif discovery, we used five artificial datasets.

for performance quantification, we employed three measures i.e., precision, recall and f-measure  <cit> . they can be computed as: p = tp/, r = tp/y, f = 2/, where tp, fp, and y are the numbers of true positives, false positives, and true binding sites in the dataset, respectively. we have considered a predicted site as a true positive if it is overlapped with a true binding site location by at least x nucleotides, where x is selected according to the length of the true motif consensus.

performance on real datasets
the eight test datasets used in this experiments are composed of seven datasets used in  <cit>  and a dataset collected from the promoter database of s. cerevisiae   <cit> . each sequence contains at least one true binding site. these datasets consist of motifs from escherichia coli, homo sapiens and s. cerevisiae.

somea was run with map sizes that were arbitrarily selected between  <dig> ×  <dig> to  <dig> ×  <dig> depending on the size of the dataset. in each case, somea was trained for  <dig> epochs with a motif length value in , where l is the known motif consensus length. the top  <dig> highest ranked motifs according to their map score  <cit>  were saved for evaluation purpose. a 3rd order markov chain model  <cit>  was used to compute map score. the learning rate parameter was fixed at  <dig>  in all the experiments. whereas, the neighborhood function parameter value, σ was set at  <dig> .

for weeder, we used the online tool  <cit>  with the following options: sites might appear more than once, both strands, and normal or complete scan. the interesting motifs and their instances that scored at least  <dig> were used in the evaluation. sombrero was run with the default map sizes and random initialization method. the standalone tool was downloaded from  <cit> . we evaluated all the “best-motifs” returned by the tools. meme was run with the “any number” model option and minimum and maximum length value as discussed above. alignace was run online  <cit>  with default arguments in most cases.

it can be noticed that, somea performance is comparable or better than alignace, meme and weeder. for example, in terms of f-measure rates, somea produces the best results for five of the eight datasets due to its higher precision rates . somea’s average f-measure value for all datasets  is found better than meme , alignace and sombrero and equally good as weeder.

it should be noted that, the comparison results between programs cannot be completely fair as every program has its own strengths and weaknesses. for example, some programs might perform rather well for strong motifs; whereas some are designed to discover motifs with certain characteristics . the nature of the datasets can be an influential factor to the success of each program. therefore, the results reported here should serve only as reference.

performance on artificial datasets with multiple planted motifs
practically, we can often find multiple motifs in upstream region of a set of co-regulated genes. these motifs often work as cis-regulatory module to regulate gene expressions. motif discovery programs should be able to return all of these potential motifs. local search algorithms, such as meme, perform a search for single motif at one time; whereas somea and sombrero search for all motifs simultaneously. it is interesting to compare these two strategies.

we have prepared five artificial dna datasets generated from annotated regulatory binding sites  database  <cit> . every dna dataset has twenty sequences  with three planted real motifs. we run meme, weeder, somea and sombrero five times on each dataset. we asked somea and meme to return the top  <dig> motifs for the evaluation purposes. again, we evaluate all best motifs returned by weeder and sombrero.

it should be noted, there are some biases in the comparisons for two reasons. firstly, both somea and sombrero are rather sensitive to the motif length parameter. as the motif consensuses in a dataset have different lengths, a single run with a fixed length value might not be suited for all motifs. on the contrary, meme is able to find a length value that suits better each motif. consequently, in some of somea/sombrero runs, some motifs might appear to be performed better in the experiments. secondly, the lower precision rates for somea and sombrero could be explained by the fact that the optimal map sizes are not known. improper map sizes can, to some extend, affect the results for multiple motif datasets.

robustness analysis
we have conducted some analysis on the robustness of somea with respect to different map sizes. we have computed recall, precision and f-measure analysis on somea using the eight real datasets for map sizes  <dig> ×  <dig>   <dig> ×  <dig>  and  <dig> ×  <dig>  each dataset is run for five times and their average recall, precision, and f-measure is computed.

showing is the average f-measure from five runs of eight real datasets using three map sizes  <dig> ×  <dig>  ×  <dig> and  <dig> ×  <dig> 

the computational time of somea is mainly imposed by three operations: a) finding winner node for each kmer; b) updating winner and its neighboring nodes models; and c) updating node model at the end of an epoch. the time complexity of somea with map size r × c is o +  + ), where l is the total length of dna sequences and p is the size of neighborhood during k-mers assignment. here, the o term is due to the computation of finding winning node for every k-mer;  operations are needed for the computation of updating the temporary model variables during the k-mers assignment stage; and  operations for updating the node models at the end of an epoch. self-organizing map based algorithm is known to suffer from heavy computational time due to the global search to simultaneously discover all clusters. we have recorded the execution time of somea for the eight real datasets and found that it has the highest average computational time of 1364s as compared to weeder , sombrero , meme  and alignace . the slower computational time of somea compared to sombrero is due to the fact that we have to update the ∆mpssm and ∆mmc parameters  for the winner and its neighborhood during k-mers assignment  and ). in sombrero, the update of node models only occurs at the end of an epoch. also, some heuristic optimizations are included in it to reduce computational time. it can be observed that, current version of somea requires slightly larger computational time, however, its better sensitivity and specificity performances can offer a good trade-off.

CONCLUSIONS
motif discovery in dna datasets is a challenging problem domain because of our lack of understanding of the nature of the data, and the mechanisms to which proteins recognize and interact with its binding sites are still perplexing to biologist. hence, predicting binding sites by using computational algorithms is still far from satisfaction.

in this paper, we have proposed a som based extraction algorithm  for simultaneous identification of multiple-motifs in dna dataset. we have made two main contributions in this work. firstly, it is shown that, the use of node model that considers the distinct properties of the motif and background signals is helpful in mining dna motifs. we have proposed a hybrid model that is composed of pssm and mc model to better represent these two classes of signals. secondly, it has been highlighted that, clustering based dna motif mining requires some customizations in the clustering system design, as standard clustering frameworks may not be sufficient. in addition to these, we have proposed heuristic learning rules to update the node model’s parameters during learning.

many computational motif discovery algorithms have been proposed in the past decade. like most of these algorithms, somea shares some common challenges that require further investigation. the first is the scalability of the system for large scale dataset such as chip sequences. the scalability is the ability of a tool to maintain its prediction performances and efficiency while the size of the datasets increases. to the best of our knowledge, most motif discovery algorithms are not designed to handle large scale datasets. in a recent study  <cit> , using chip datasets as benchmark, it is shown that local search techniques such as meme does not scale well with the increase in dataset sizes. this finding is consistent to an early study by  <cit> . currently, somea is not proposed to handle large scale dataset either. however, it can potentially be used to reduce the sequence search space by pre-cluster sequences into lower-dimensional topological space. then we can perform the motif searches in this lower-dimensional space instead of the original sequence space. it would be interesting to further investigate the feasibility of this search space reduction strategy to enable system scalability.

the second critical issue is the system’s robustness, which relates to the ability of the pattern recognition system to maintain its performance with the changes of parameters and noise in the inputs  <cit> . currently, the critical parameters for somea are the map size and the motif length. from our experiences with somea, we found that setting improper map sizes have caused poorer performance. if the map sizes are two small, the precision rates might be poor; whereas if the map sizes are two large, opposite results are expected. choosing a proper motif length value is important to reveal the true motif patterns. setting improper length values caused motif discovery algorithms to return only partial motif consensus patterns. we can overcome this shortcoming by running the system with different length values. through some analysis on the produced results from different runs, we will be able to reveal the true motif consensuses.

in conclusion, clustering biological sequences for motif discovery should consider the use of heterogeneous model to efficiently represent both motif and background signals. we have shown that, our proposed somea using a heterogeneous model, can perform better in terms of sensitivity and specificity than the tools that use homogeneous model.

system and methods
overview
the main idea of our somea algorithm is to use a hybrid node model, where a model is heterogeneously composed of pssm and mc. we assume each node on the map is a fuzzy composition between a motif signal and background noise. since we do not have prior knowledge on the type of each node, we use a soft competitive weighting scheme for the two components  of each node model. we refer it as intra-node competition. our framework design is inspired by the fact that, the two sequence classes  in the dna dataset have distinctive properties. subsequently, it is necessary to represent them using appropriate signal’s models.

somea starts with converting the input dna sequences  into a set of k-mers using k length window shifting through the sequence. then, the size of the map is defined  and nodes’ model parameters are randomly initialized. then, the following two learning steps are repeated for each input k-mer in the dataset:

 <dig>  inter-nodes competition: to find the best matching unit  of current input k-mer kj.

 <dig>  models updating: update model parameters of the bmu including its topological neighborhood.

the two steps above define a recursive regression process  <cit> , where the optimal models parameters are estimated by iteratively applying the k-mers to the system. after some training epochs, similar k-mers from supposing motif or background class are projected onto the same or adjacent nodes on the 2d grid map. the k-mers projected in the vicinity on the map, generally forming clusters. this implies the similarity of their respective features. once the nodes’ models have been stabilized, we can identify candidate motifs using a motif model evaluation metric.

basic concepts and problem formulation
we first give some notations used in this paper, and then describe the somea algorithm. denoted by d = {s <dig>  s <dig> …, sn}, a dna dataset with n sequences. let a k-mer ki =  be a continuous subsequence of length k in a sequence, and i =  <dig> …, z, with z is the total number of k-mers in that sequence. for a sequence with length l, there are l – k +  <dig> number of k-mers can be produced using k length window shifting process.

we can represent a k-mer k as a  <dig> × k matrix  <cit> . let the matrix representation be e = 4×k, where  =  and j =  <dig> …, k. the matrix has a column j representing certain nucleotide i at that position j in the k-mer.

a 2d som map is a lattice of r × c nodes, where r, c is the number of rows and columns respectively. each node vij, i =  <dig> …, r and j =  <dig> …, c, has a subset of k-mers assigned to it. for convenience, we use the notation vl to represent a node, where  <dig> ≤ l ≤ . the coordinate of a node vl in the lattice is expressed as zl = . then, each node vl has a parameterized model Θl associated with it.

let us formulate the clustering based motif discovery task. clustering on the k-mers dataset aims to partition the dataset into a set of non-overlapping clusters {c <dig>  c <dig> …, cu}, where each cluster ci holds a subset of k-mers. in our study, each node in the som 2d-lattice represents a cluster . after forming the clusters, each cluster ci’s potential is evaluated as true motif using motif model evaluation metric and rank the clusters based on their obtained scores. in somea, we used maximum a posteriori score  as the model evaluation metric. then, top h highest ranked clusters are selected as putative motifs, and k-mers from those clusters indicate the motif locations in the sequences.

pssm based motif model mpssm
we use the position-specific-scoring-matrix   <cit>  to model the motif signals. the pssm based motif model, let it denoted by mpssm, is a matrix, i.e., mpssm = 4×k, where bi ∈ {a, c, g, t} and i =  <dig> …, k. here, each entry f represents the probability of nucleotide bi in position i and . in our somea, the mpssm for a node vl can be calculated from the k-mers in a node using the maximum likelihood principle, with a pseudo-count value added as under sample correction to the probabilistic model. we follow the bayesian estimation method for this purpose  <cit> . the pssm entries are computed as follows:

f =  + g) /, 

where n is the number of k-mers, c is the frequency of nucleotide bi at position i of a set of k-mers in a node, g = / and .

markov chain based background model mmc
in our approach, the background signal is modeled by using the markov chain  model  <cit> . the mc is a commonly used background signal model to distinguish over-represented motifs from background signals . the stochastic and temporal nature of this model can effectively model the complex relationship of the background bases. the mc model assumes that, the probability of occurrence of a nucleotide bi at position i in a dna sequence is dependent only on the occurrences of m previous nucleotides. this relationship can be expressed by the conditional probability p, where bi–m…bi– <dig> are bases that precede base bi, and m is the markov order. in our approach, the first order mc  is used because higher order model usually requires more input data to avoid over-fitting. the maximum likelihood estimation of the conditional probability p is given by  <cit>  as:   

where c′ is the number of times sub-sequence x found in a set of k-mers in a node.

let us denote π  to represent the conditional probability p of the first order mc, where a, a′ ∈ {a, c, g, t}. then the mc transition matrix gives the background model mmc to be used in somea, i.e., mmc = 4× <dig> , where .

similarity score
a similarity metric is needed for k-mers assignment to the nodes during the learning. the score of a k-mer kj =  in respect with the pssm based model  assigned to node vl, can be computed as,   

here, k is the length of k-mer, and f represents the probability of nucleotide bi in position i. then, the score of a k-mer kj to the mc  <cit>  based model mmc of node vl is computed as:   

here, p is the independent and identically distribution  probability of nucleotide b <dig> in current node, which is estimated from the k-mers of node vl.

hybrid model
in practice, we are unable to certainly deduce if a somea’s node is a motif or background at any stage of the learning process. also, before the system converged, the members of a node are likely to be composed of mixed signals. therefore, neither pssm or mc based models  alone would satisfactorily model such composition. however, we can weigh the fitness of mc and pssm models with respect to the k-mers in a node. in other words, when a set of k-mers fit with a certain model, , it is more likely that those k-mers represent that class. note that both signal models, can represent signal features from opposite class to some extent.

in this work, we aimed to combine the expression abilities of both of the models  in an unified mechanism to improve the distinguishing ability of the system, since each node given by somea  contains a fuzzy mixture of motif signals and background signals.

in implementation, we adopted a simple linear weighting scheme to combine these two models for a node vl as follows:   

equation  gives a linear combination of the two models to produce a heterogeneous model for a node vl. here, λ is a scaling factor, for simplicity default value of λ is set as  <dig> . if a k-mer kj gets a higher score by this heterogeneous model based scoring Θl, that indicates kj has a better fit to the combined model of node vl.

motif ranking
once the somea is stabilized after training, we have to perform an evaluation on the nodes in order to identify the most prominent candidate motifs. the candidate motifs can be identified using either motif evaluation metric or statistical significance value. these metrics usually require the use of background sequences model for computation.

in this work, we adopt the maximum a posteriori score   <cit>  for motif ranking. the map score measures the conservation property of a motif with respect to the species background sequences  <cit> . since, rare motifs in the background can achieve a higher map score, this measure can be used to distinguish a true motif from false ones based on their scores ranking. the background sequences can be modeled by using the markov chain model generated from the intergenic sequences of a species under study. this model can be used to assign a probability of a k, namely , under the background model given by . the map score of a node vl can be calculated as follows:   

where nl is the number of k-mers in node vl and  refer to background probability of a k-mer k in respect with background model  .can be written as,   

here, m is the markov chain order, k is the length of k-mers, p is the probability of subsequence b <dig> b <dig>  …, bm, and p is the conditional probability of the subsequence bi under bi–m, bi–m+ <dig> …,bi– <dig> occurrence constraints. for instance, using the 3rd order model, the probability of the sequence atgcg can be calculated as: . this background probability is usually pre-computed on the sequences of interest. in eq , e is the shannon’s entropy, that can be written as,   

here, f is the probability of nucleotide base bi ∈ {a, c, g, t} to occur in i-th position of the pssm.

algorithm
in this section, we describe our somea learning algorithm, which includes the similarity metric used for k-mer assignments, model parameters adaptation, and the finding of bmu for a k-mer. according to  <cit> , any arbitrary set of items, for which a similarity or distance measure between its elements is definable, can be mapped onto the som grid in an orderly fashion. hence, the standard som learning algorithm is applicable for our purposes with some modifications.

adaptation process
we opted for the more speed efficient batch training scheme to update the nodes’ model parameters. this method delays the update of the model parameters at the end of an epoch. heuristic rules are proposed to update each node’s pssm and mc model parameters. we associate each node with three computing components including: two matrices ∆mpssm, ∆mmc and a counter r. let  be bmu of an input k-mer k = . denoted ∆mpssm = 4×k for bi ∈ {a, c, g, t} and i =  <dig> … ,k. similarly, let ∆mmc = 4× <dig> for a, a′ ∈ {a, c, g, t}. we initialize all entries in both matrices ∆mpssm and ∆mmc as  <dig>  also let r =  <dig>  once a winning node for a k-mer k is found, the matrices of a node  are updated as follows.      

where  is an entry of the binary matrix e, count is the frequency of di-nucleotide  in k-mer k and h is a neighborhood function. the neighborhood function h is defined as   

where σ is the variance whose value is fixed throughout the learning stage. we also update r = r +  <dig>  upon completion of an epoch, all nodes’ model parameters will be updated as follows:      

where η is the learning rate and f and π  is defined in eq  and eq  respectively. note that, in the computation of eq  and eq , we first compute f and π  using the current set of kmers assigned to a node.

it is also necessary to update the weighting parameters α and β. assuming a set of nlk-mers {k <dig> …, knl} is assigned to a node vl at the end of an epoch, the weighting parameters update equations are   

and

βnew =  <dig> – αnew. 

training
assuming a set of k-mers x is available. the high-level training algorithm for somea is as follows.

 <dig>  inputs.k-mer length k, number of top motifs to return in the results h, markov chain background model, and dna sequences.

 <dig>  architecture setup. the somea lattice size is arbitrarily chosen. the default size is  <dig> ×  <dig>  each node’s model, Θi, is initialized with random values.

 <dig>  training.

let the bmu index for a k-mer k is q.

for epoch= <dig> to max_epoch do

for each k ∈ xdo

•compute Θi ,∀i =  <dig>  …,u.

•find the bmu of k as 

•assign k-mer k to node q.

•update ∆mpssm, ∆mmc, r of node q and its neighboring nodes.

end for

update model parameters of all nodes using eqs  and .

end for

 <dig>  finalizing.

 compute the map score f,∀i =  <dig> …,u.

 rank vi according to their map score values.

 save the top h ranked vi as result.

author details
intelligent search and discovery laboratory, department of computer science and computer engineering, la trobe university, melbourne, victoria  <dig>  australia.

authors' contributions
dh conceived the idea of this study and gave the direction on the framework and experimental studies. under dh supervision, nk implemented the algorithm and carried out the experimental studies. nk drafted the manuscript and amended by dh. both authors agreed on the final manuscript.

competing interests
the authors declare they have no competing interests.

