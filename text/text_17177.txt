BACKGROUND
genome copy number changes  include inherited, de novo, and somatically acquired deviations from a diploid state within a particular chromosome segment. cnvs likely contribute substantially to inherited and/or acquired risk for a variety of human diseases, including cancer and neuropsychiatric disorders  <cit> . in addition, cnvs are widely distributed in the genomes of apparently healthy individuals and thus constitute significant amounts of population-based genomic variation  <cit> . new genotyping technologies such as snp-based arrays provide high-resolution coverage of entire genomes as well as an opportunity for rapidly determining cnv content in sample collections of interest  <cit> . accordingly, numerous recent studies have described constellations of structural variants in various healthy and disease cohorts  <cit> . however, interpretation of the exact extent, character, distribution, and effect of these cnvs has been limited by the emerging nature of computational methods for accurate detection, and further challenged by the difficulty in assessing the biological importance of particular cnvs in context with other genomic features and study findings.

detection of cnvs in high-density snp arrays requires genotypes that yield high quality intensity and, optimally, allelic ratio data for each locus surveyed. a number of algorithms have been utilized for the detection of cnvs from such genotyping data sets. software from array vendors such as illumina and affymetrix provide basic cnv calls along with graphical interfaces that allow visual inspection of a region of interest. however, these tools generally lack the ability to quickly manage, annotate, and assess cnvs from a sizable number of samples. moreover, visual inspection becomes challenging for interpreting small or complex rearrangements, or cnvs predicted from genome array data of marginal quality. a number of 3rd party commercial and open-source algorithms, including quantisnp  <cit>  and penncnv  <cit> , utilize algorithms employing hidden markov models  <cit>  to predict cnvs, and these approaches have been developed and adopted for a number of recent genome-wide studies of structural variation. equally promising are segmentation algorithms such as glad  <cit>  and circular binary segmentation   <cit>  that have been successfully applied for analysis of data from array-based comparative genomic hybridization  platforms. these segmentation approaches are particularly attractive as they have been shown to outperform certain hmm-based approaches for acgh data  <cit> . regardless of the approach, these algorithms typically overcall cnv events  <cit> , thus requiring post-prediction methods that consider data quality metrics for distinguishing true events from false positives. currently, researchers interested in analyzing genotypes for cnv content for the first time, or in setting up production systems for high-throughput analysis and interpretation, are challenged by the considerable variety and limited scope of most existing methods and tools. this is especially true in the use of snp arrays for clinical diagnostic applications, where reliability and performance are of critical importance.

at the same time, assessing the importance of particular cnvs in context with other genomic features and study findings is a complex task even without robust quality assessment of cnv predictions, especially given limited current knowledge of the distributions of cnvs across the genome and in populations. contextual genomic and phenotypic annotations need to be considered, while projects involving sizable cohorts also require an infrastructure for managing, accessing, batch-processing, and visualizing annotated cnv predictions.

to address these challenges, we describe the integrated platform cnv workshop. this package incorporates a modified segmentation algorithm that we have previously applied successfully for detecting pathogenic cnvs in large-scale research and clinical projects  <cit> . cnv workshop includes a database layer, role-based security and authentication schemes suitable for clinical diagnostic environments, a web-based presentation layer providing textual and graphical visualization of cnv predictions, and integration of cnv content with known genomic and biomedical annotations for rapidly determining the significance of a particular cnv. these components are modular yet seamlessly integrated and together provide an effective platform for identification of high-throughput copy number variation; discovery of inherited, de novo, and somatically acquired pathogenic variants; and clinical diagnostics.

implementation
approach
conceptually, cnv detection from genotyping data sets consists of two major steps: 1) segmenting chromosome-arrayed genotypes into discrete regions, with probes in each region presenting different signal intensity patterns than adjacent regions; and 2) labeling particular segments that are inherently different in copy number from expected. to accurately predict cnv events, an algorithm requires sufficient sensitivity to distinguish true chromosome copy number state changes from local signal fluctuations.

for acgh data, these algorithms rely solely upon normalized probe signal intensities, typically log <dig> ratios of intensity, for segment delineation. examples include the glad and cbs algorithms  <cit> . genotyping arrays provide an additional useful metric, the allelic ratio, which can be utilized for assessing the copy number state of each segment. allelic ratio is a measure of the relative signal intensities for probes measuring each of the two alleles at a snp locus. besides overall signal intensity at a snp locus, allelic ratios of a region of true copy number change should present a pattern consistently different from a diploid region. for these reasons, we devised a generic three-step cnv detection methodology that can be applied to all genotyping platforms, with only slight variations required to address platform-specific properties: segmentation, calculation of genotype-specific statistics, and cnv determination. we describe here our implementation and modifications to cbs first for the illumina infinium array platform and then modifications required for use with affymetrix, other snp, and acgh arrays.

segmentation
in the illumina infinium assay, two different probe sets are used to measure the presence of the two different alleles for a given snp. allele-specific signal intensities are first normalized into rsubject values. rexpected values are then calculated through linear interpolation of the r values for each canonical cluster; the log <dig> ratio of rsubject and rexpected is named the log r ratio   <cit> . lrrs above or below zero indicate possible duplication or deletion at a locus, with the degree of deviation correlating with the likelihood of a copy number change. to identify segments of adjacent loci  that display an overall lrr pattern consistently distinct from neighboring segments, cnv workshop implements the segmentation algorithm cbs as its default detection method. however, other segmentation algorithms can be used in place of cbs with only minor source code modifications.

additional statistics
after the segmentation step, additional lrr and allelic ratio  statistics are then calculated for each segment, which are critical for ensuring high quality cnv determinations. the results are then stored in a mysql database along with the chromosomal coordinates of each segment. for lrrs, two simple statistics are calculated: standard deviation of lrrs by sample and by chromosome, and mean lrr for each chromosome and each segment. similarly for baf, three statistics are devised and calculated for each segment: percentage of snps with bafs between  <dig>  and  <dig> , b <dig> sd , and b <dig> sd . these statistics are designed as straightforward measures of the distribution pattern of the bafs in a segment. for b <dig> sd and b <dig> sd, xi represents the baf for the ith snp of the segment and n represents the total number of snps in the segment.   

for b <dig> sd, the constants chosen for the equations are expected baf values for snps in a normal diploid segment for the homozygous aa alleles , homozygous bb alleles , and heterozygous ab alleles . for the b <dig> sd, the constants are the expected values of snp bafs in a monoallelic duplication: aaa , bbb , abb , and aab   <cit> . in this way, b <dig> sd is expected to be significantly smaller than b <dig> sd when the segment is truly diploid, and the opposite is expected when the segment is a duplicated or amplified region.

cnv determination
the likelihood of a segment being predicted as a cnv is determined by many attributes of the segment, especially the baf statistics, the mean lrr, and the number of snps. although copy number determination can be performed directly after the segmentation step, delay of the copy number calling step affords greater flexibility. subsequent use of a modified set of criteria for calling copy number changes will not require the repeat of the segmentation step, which is much improved but still computationally intensive with the current implementation of the cbs algorithm. however, the values to use might need to be changed based on the goal of the analysis and the nature of the samples of interest. we have previously reported cnv workshop threshold values for calling germline heterozygous deletions, homozygous deletions, and duplications from illumina  <dig> k data that we found effective for a wide range of samples and genotype quality scores  <cit> . an effective way for learning a new platform and developing appropriate threshold values is by taking advantage of the widely available and validated cnv contents of the  <dig> hapmap samples, as well as the genotyping data of these same samples from different platform vendors. hapmap data for a new platform can first be processed with cnv workshop. thresholds that provide desirable or acceptable type i and type ii rates can then be obtained by comparing calls derived using different thresholds for known variants. using this process, we have adopted the algorithm for a number of genotyping platforms, including illumina 610-quad, 660-quad, and affymetrix  <dig>  arrays .

a number of variables in addition to the array platform, including the particular samples and the reference group used for allele calling, may influence the set of parameters that will function optimally in a given setting. for example, tumor samples are often hyper- or hypodiploid across a genome or certain chromosomes. commonly employed global normalization algorithms often assume that the majority of probe intensities should remain at a diploid state and do not incorporate a priori methods for inferring degree of aneuploidy. cnv workshop provides a convenient mechanism for determining the existence and degree of hyper- or hypodiploidy. as b <dig> sd and b <dig> sd statistics are calculated for each chromosome, highly skewed chromosome-specific b <dig> sd/b <dig> sd ratios indicate chromosome-level aneuploidy. however, normalized values of a hyper- or hypodiploid sample are also skewed due to global normalization; thus, detection of copy number changes at higher resolution requires cutoff mean intensity values of a segment to be adjusted accordingly for tumor samples. we advise users to experiment with these parameters as appropriate. to assist with this process, an "advanced search" function has been included in cnv workshop for adjusting these parameters. in addition to these criteria, segments can be queried based on physical size and number of snps.

affymetrix arrays
affymetrix genotyping arrays are widely used for copy number variation detection. similar to illumina's lrr metric, the affymetrix genotyping console application, as well as commercial packages such as partek genomics suite, calculate log-transformed ratios  of summarized probe intensities for a snp of a given sample, as compared to the same intensities measured in control samples  <cit> . additionally, these packages provide allelic ratios comparable to bafs. we have successfully used cnv workshop to analyze affymetrix array data by substituting log r ratios and b allele frequencies with normalized log <dig> ratios and allelic ratios derived from partek genomics suite. as log <dig> ratios exhibit greater variance than lrrs and vary across different affymetrix platforms, different threshold values are required. certain affymetrix platforms such as the  <dig>  platform incorporate non-snp copy number probes in addition to snp probes. while the data from these intensity-only probes is less reliable for cnv determination, the added advantage of increased resolution may be desirable for certain applications. inclusion of intensity-only probe data is enabled by uploading an additional text file containing intensity values for these probes.

acgh and other snp platforms
cnv workshop can also be adapted for use with acgh and other snp platforms. for acgh platforms, normalized probe signal intensities, which are typically transformed as log <dig> ratios of probe intensities of a sample versus controls, are the only available metric for assessing relative copy number. after the segmentation step, the likelihood of a given segment representing a true copy number loss or gain is proportional to the segment mean signal intensity relative to other segments from the same chromosome, or across the entire genome. for this reason, cnv workshop calculates and stores all probe and segment means, medians, and standard deviations. this information, even in the absence of allelic ratio data, can be used to establish a dynamic yet robust threshold for acgh data. for example, a segment with mean signal intensity deviating by three standard deviations from the mean signal intensity of all segments is likely to indicate true gain or loss.

algorithm performance
direct comparison of cnv detection algorithms is challenging in the absence of a sizable evaluation standard. however, to provide a general measure of algorithm performance, we compared results from cnv workshop with penncnv, a commonly used, hmm-based cnv detection algorithm. a set of  <dig> unique hapmap samples genotyped on the illumina  <dig> kv <dig> platform was analyzed for cnv content using default settings and threshold values for each algorithm . overall, cnv workshop and penncnv were generally concordant . concordance rate increased substantially as a function of cnv size, but considerable discordance was observed especially for cnvs spanning < <dig> snps. these results indicate some combined contribution of type ii error from cnv workshop and type i error from penncnv for smaller predicted cnvs. notably, the number of cnvs predicted by penncnv per sample was inversely proportional to sample-wide lrr standard deviation, but this trend was not observed for cnv workshop within lrr standard deviation ranges we consider acceptable for analysis .

architecture
cnv workshop builds upon a number of open source applications and libraries. the major components of cnv workshop are a set of scripts for processing the genotyping data, a set of scripts for predicting copy variations and subsequently annotating each cnv, a mysql database server, a web server hosting a custom instance of the gmod generic genome browser  <cit>  via cgi, and an apache tomcat server hosting the java-based cnv workshop web application. these components may reside on the same or different physical computers running either windows or unix-based operating systems such as linux and macintosh os x. as such, the application is well suited to support a set of investigators and projects distributed across an organization or multi-site collaboration. cnv workshop is best administered by bioinformaticists or computer system administrators on behalf of biologists. however, we also make available a pre-installed virtual machine  to ease installation for those with a powerful computer and virtualization software such as parallels, vmware, virtualbox, or xen.

data processing and management
raw genotyping data are first processed with an r script that automatically segments based on the snp intensity data, calculates additional statistics, and subsequently inserts the segment information and these statistics into a mysql database. in our setting, segmentation of data from a single illumina  <dig> k array, using an intel xeon  <dig>  ghz server running centos  <dig> with  <dig> gb of ram, required  <dig> minutes and less than  <dig> gm ram on a single cpu core. a perl script then analyzes the segment data files, predicts cnvs, and populates the database with cnv calls. alternatively, cnv predictions using custom parameter values can be made on-the-fly for specified datasets via the advanced search function in the web application. cnv data sets established by a user are then made visible via the cnv workshop web application. the database supports the ability to view and manipulate cnvs at the event, sample, and sample cohort levels.

cnv annotations
cnvs are automatically annotated for genotyping and genome-derived metadata, including cnv type , number of snps in an event, genomic sequence position, and quality metrics. a database parameter specifies genome build version such that annotations reflected in cnv workshop are accurate with respect to build. the default value is build hg <dig> as most array platforms are currently based on this build. additional automated annotations include gene content, association with known disease loci or genes, and overlapping public cnvs from the database of genomic variants   <cit> . this is accomplished by running programs that query remote data sources such as dgv and ucsc known genes, certain of which are cached locally for performance reasons. cnv workshop also comes pre-loaded with the chop cnv collection from  <dig>  healthy controls  <cit> . an optional custom track is reserved such that a set of customized annotations can be readily incorporated. to facilitate this function, the site administrator is able to load into the database a mapping of annotation labels to loci. these labels are displayed in both the graphical and tabular presentations for cnvs that overlap the annotated loci. for instance, the custom track might be used to flag cnvs that overlap genes in a specific pathway or are associated with a disease of particular interest to the research group.

administration
analysis and loading of data sets into the database, along with creation and updating of local mirrors of annotation sources, is accomplished by the execution of programs on the command line. through the admin tab of the web application, an administrator can assign role-based privileges so that access to a data set is restricted to a group of users. this function is controlled by the creation, deletion, and modification of three entities: users, groups, and data sets. users have three attributes: email address, password, and group membership. groups are essentially many-to-many mappings between users and data sets. finally, administrators use the admin interface to provision data sets that have previously been loaded into the database.

RESULTS
cnv workshop's web application allows users to flexibly query cnv data sets, view annotated search results, mark and save subsets of queries in their accounts, and download query results in a variety of formats.

queries
for each data set, users can choose from a basic search function that queries cnv predictions and annotations of these cnvs , or an advanced search function that queries segmented data prior to cnv determination . for both data types, supported search parameters include genomic position , variation type , and cnv size . for the advanced search function, additional supported queries include segment mean, heterozygous allele frequencies, and copy gain filter, which allows a user to set parameters for establishing customized cnv detection thresholds.

presentation
query results are presented to a user both graphically and in a tabular format . the graphical image is rendered via a gmod generic genome browser  display. the gbrowse layer presents project-specific cnvs in one or more regions of interest as a custom track, along with default tracks for the healthy control set, dgv content, annotations from the genetic association database   <cit> , and the known genes and cytogenetic band tracks from the ucsc genome browser  <cit> . queries that yield results for multiple, non-overlapping genomic regions are rendered as separate visualizations, which are viewable by selecting region-specific views from a drop-down list.

the tabular display generally reiterates the graphical display but includes additional features of each cnv in a row-by-row format, including variation type, sample id, cytogenetic band, sequence position, number of snps, segment size in base pairs, and segment mean log r ratio. to facilitate further exploration of particular cnvs, both the graphical and tabular displays include links to the external genomic resources dgv, gad, and the ucsc genome browser. in addition, for cnvs that overlap genes, annotations and hyperlinks are provided to corresponding gene content from ncbi entrez, entrez gene, and medline-mined literature through fable  <cit> .

saving and downloading
query results can be downloaded in a variety of formats, including excel, csv, xml, and bed. the bed format is especially useful as it is compatible with visualization in the ucsc genome browser as well as additional analysis tools such as galaxy  <cit> . cnv workshop also supports the concept of persistent, editable "clipboards" of previous search results through the mycnv function. users can create multiple clipboards, each of which can store selections from multiple queries. clipboards persist across logins until deleted by the user.

discussion
structural variants are increasingly recognized as crucial contributors to genome diversity and disease risk. while many studies exploring associations between structural variants and individual disorders have recently emerged, most human diseases with a genetic component have yet to be systematically investigated. analysis of new and existing genotype data generated for association studies or clinical purposes will require more robust tools to facilitate these numerous and often large-scale studies. accordingly, our design of cnv workshop attempted to address both current impediments to rapid analysis and the need to accommodate a variety of approaches. an additional objective was to incorporate features to facilitate workflow, data management, and data interpretation tasks that are often underappreciated in cnv studies. finally, we aimed to create a platform that was compatible with both discovery and diagnostic needs.

current methods for analyzing structural variants are diverse, including only moderately compatible approaches for genotyping, cnv calling, and analysis requirements. this diversity has created challenges for groups or consortia interested in combining data sets derived from multiple platforms or analytical approaches. while cnv workshop cannot overcome these challenges, there are several features that can assist. first, cnv workshop supports both illumina and affymetrix snp arrays that constitute the majority of current snp array data, and it can be readily adapted to other snp and acgh platforms with relatively minor effort. moreover, data sets with pre-existing cnv calls can be uploaded into cnv workshop for integrated annotation, visualization, and cross-comparison. this feature also provides flexibility for users who wish to use other detection algorithms, although the cnv workshop architecture enables additional algorithms to be incorporated directly into the workflow with modest effort. moreover, as cnv calls are locally stored, particular cnvs or samples can be quickly and conveniently re-queried or re-analyzed with differing attribute or parameter settings, especially as new data sets are added incrementally. finally, for use in diagnostic settings, we have incorporated features such as role-based access control and the ability to view and store cnv content relative to healthy controls.

we have predominantly used the cbs algorithm for the segmentation step, although we have tested all segmentation algorithms described by lai and colleagues  <cit>  on the log r ratios of illumina genotypes. in terms of sensitivity and specificity, cbs was found to be one of the better performing algorithms by the lai study. cbs was also the only algorithm that could consistently segment chromosomes correctly for all samples with known cnvs that we tested. our work led us to an appreciation of including post-segmentation analyses that incorporate quality metrics into the cnv determination process.

we have successfully applied our modified cbs process for analyzing over  <dig>  research-derived genotypes spanning more than a dozen pediatric disorders, along with nearly  <dig>  clinical samples for diagnostic purposes  <cit> . these efforts have included validation trials using a variety of experimental approaches. future versions of cnv workshop plan to exploit newer detection methods, possibly including the simultaneous application of multiple algorithms, as well as approaches that consider additional genomic features.

CONCLUSIONS
as disease-oriented genomic analysis continues to evolve, large-scale array- and sequence-based studies will become increasingly possible. this evolution will likely necessitate more sophisticated analytical, workflow, and data infrastructure elements. cnv workshop provides a first-generation platform for managing many of the complex tasks required to productively process and assess structural variation content from high-resolution genomic array data. currently, we are formulating strategies for further accommodating these needs within the cnv workshop framework. possible extensions include features to more directly allow cross-cohort comparisons and to assist with clinical diagnostic applications via automated disease labeling and report generation. in addition, we are developing features for viewing regions of homozygosity and labeling potential mosaic cnvs. finally, we are exploring methods for both expert- and machine-ranking of cnvs to assist the considerable challenge of assessing pathogenicity for structural variants in disease settings.

availability and requirements
• project name: cnv workshop

• project home page: http://sourceforge.net/projects/cnv

• operating systems: linux or mac os x operating systems

• programming languages: java, r, perl

• other requirements: maven  <dig>  java jdk  <dig>  perl  <dig> .6+, apache or other web server, apache tomcat  <dig> , mysql client and server  <dig>  or  <dig> , generic genome browser  <dig>  x, r  <dig> , gnu make

• license: gnu affero gpl v <dig> or any later version

authors' contributions
xg and jcp planned, wrote and tested most of the first iteration of software, including algorithm development. km, ro, aw, and md substantially contributed code, subsequent aspects of design, testing, and deployment. hx, efr, and ths contributed user requirements, functionality input, and expert testing. psw oversaw project development. xg, km, and psw wrote and revised the manuscript. all authors read and approved the final manuscript.

