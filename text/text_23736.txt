BACKGROUND
in many contexts, researchers use different variations of the polymerase chain reaction  to detect the presence of a specific sequence in a sample. in order to do that, one needs a "handle" for the sequence; a mechanism by which one can pull out precisely the sequence in question, and nothing else. as is well-known, with pcr this handle is constituted by a pair of pcr primers designed to amplify the target sequence. often, the design of such primers can be done manually by researchers with lab experience. also, numerous software tools exist that can do it automatically.

however, for experiments where the target sequence is very similar to other sequences also possibly present in the sample, the primer design task becomes more tricky; especially so if one needs to be able to detect any one of these very similar alternatives. then, not only must each of the target sequences have its own primer pair, but further it becomes essential that this pair does not amplify any of the other alternative sequences due to sequence similarity. if more than very few sequences are involved, the combinatorial challenge is manually intractable.

this paper describes primique, a free, web-based, graphical, very user-friendly software tool which solves the problem. if, e.g., you are working with gene families  and need to detect exactly which family member is present in your sample, you can upload the sequences from the gene family and have primique design your primers for you, such that each pair is designed to specifically and uniquely amplify its target sequence in the family and none of the others. e.g., primique may also be used to design diagnostic assays for the identification of pathogen strains.

more formally, given n target sequences and possibly a secondary group of non-targets, primique attempts to find a sequence specific primer pair for each of the n target sequences, such that it will neither amplify any of the other n- <dig> target sequences nor any of the non-target sequences. to our knowledge, no other free, web-based tool exists which is tailored to precisely this task. many tools exist for primer design, but either they are not web-based or they solve different problems. there are also tools for designing specific probes, i.e. single oligos, rather than primer pairs . one comparable program is osprey  <cit> . osprey is a web-based package of oligonucleotide generating programs, including one for designing pcr primers which has functionalities similar to those of primique. see a detailed comparison in the results and discussion section.

the web-based pcr now primer design tool  <cit>  generates primers using the program primer <dig>  <cit> . it employs a "universal mispriming library" of human and rodent sequences in order to improve primer specificity. each uploaded sequence is "individually extracted" and primers are generated; hence, the primers are not checked against the other, non-target sequences, and so for very similar sequences, specificity cannot be guaranteed.

some programs for download and local installation exist which are capable of solving the same problem as primique. one such example is fastpcr  <dig> , a windows-restricted software package  <cit> .

implementation
given a set of n sequences,  <dig> . n, primique attempts to find a specific primer pair for each sequence such that primer pair i uniquely amplifies sequence i and none of the others. more precisely, what primique guarantees is that no suggested primer will exactly and fully match, sequence-wise, any substring of any other sequence in the uploaded set . the specificity is achieved through several executions of a standalone version of the blast program  <cit>  with appropriate, inter-related parameter settings including zero mismatch tolerance.

the primer pairs are ranked such that pairs whose primers have no 1- or 2-mismatch alignments to non-target sequences are preferred over those that do; in other words, if possible, primique suggests primers that align perfectly only to their target, and that do not align almost perfectly to any other sequences. this information is generated from another blast search. further, variation in the locations of the suggested primers is promoted.

the simple front page of primique requires only one thing of the user: the upload of a set of sequences in the fasta format. optionally, the user may choose to upload a secondary database of sequences which the primers must not amplify. if, for example, the user is working with four specific transcription factors from a family containing a total of  <dig>  he may paste the four transcription factors as the primary sequences and upload the database containing the full  <dig> transcription factors as the secondary set to make sure that the primers produced will only amplify the four target sequences and none of the others . on the front page there are also links to an example sequence file as well as to a page explaining the tool. see figure  <dig> 

upon clicking the "submit" button and successful upload of the sequence file, the user reaches the parameters page. the parameters controllable by the user are primer length, product length, primer melting temperature, maximum difference between primer melting temperatures, g/c 3' end terminal enforcement, gc content, 3' tail gc content, maximum repeat of identical bases in primers, check for primer self-hybridization  and primer/primer cross hybridization, enforcement of specificity of both primers, and the maximum number of primer pair suggestions given for each sequence. all parameter names are clickable links that will lead to a page explaining them in detail. they all have commonly-used default values. next, we will briefly discuss some of these parameters.

• the primer melting temperatures are calculated following a formula given by le novère  <cit> , with a correction for entropy suggested by santalucia  <cit>  and thermodynamic parameters given by sugimoto et al.  <cit> .

• if the g/c 3' end terminal option is checked, a primer is only considered valid if it has a g or a c as its last base in the 3' end.

• the 3' tail g/c content is defined as the percentage of g's and c's among the last five bases in the 3' tail.

• regardless of the user-permitted number of repeated bases, three identical bases are disallowed among the last five bases in the 3' tail.

• the check for primer self-hybridization is performed following a simple, commonly used heuristic: the maximum number of consecutive watson/crick matches in any binding configuration of a valid primer to itself is 6; the maximum total number allowed is  <dig>  this covers both self-complementarity, where two copies of the same primer bind to one another, and hairpins, where the same primer folds back to bind to itself.

• the check for cross-hybridization is analogous to the self-hybridization check, only the two different primers from a potential candidate primer pair are checked against each other.

• in theory, only one of the two primers of a pair needs to be 100% uniquely specific to the target sequence in order for the pair to be specific. in practice, though, results are better if both primers are designed to be specific. still, it is possible not to enforce this requirement by unchecking the 'force specificity for both primers' option.

• by default, primique suggests two valid primer pairs for each target sequence; if the user wishes a broader selection to choose from, this number may be increased.

primique always disallows primer pairs that are complementary in the 3' end . when the "submit" button on the parameters page is clicked, the search is initiated. when the results are ready , the user is redirected to a results page. part of such a page is shown in figure  <dig> 

at the very top of this page, several links are displayed: the user may click to:

• download all primers 

• check the primers against ncbi's databases 

• try other parameter settings for the same sequence file

• run primique again on other sequences.

for the last two, the user can choose to open a new browser window  or to perform the analysis in the same window. immediately below these links, the user is informed for how many sequences primique succeeded in finding primers . if the success rate is unsatisfactory, the user may follow the link above to relax the parameters and retry, or do a re-run on only those sequences for which no primers could be found . the data files need not be uploaded again, and previous parameter settings are remembered.

if applicable, there is also a link called "sequences with no primers & re-run help" leading to a page displaying a table of all sequences for which primique did not succeed in finding primers. from this page, the user can click a link to do a re-run on only these sequences, either in the same window or in a new window . further, there is a table displaying some statistics over discarded primer and primer pair candidates and reasons for their discarding. this might aid the user in choosing relevant, effective parameters to re-tune before another try. if, e.g., for many of the sequences, many potential primer candidates were thrown out because of an invalid melting temperature, it might help to widen the valid melting temperature range .

on the results page, the suggested primer pairs are shown in tables , sorted by target sequence header. each sequence header is displayed as a clearly highlighted, yellow bar. each table shows the primer sequences as well as various properties: primer and product lengths, primer and product melting temperatures, primer gc content and, if the user chose to check this, the maximum total number of self-hybridization base pairings and maximum number of consecutive base pairings for each primer, as well as the analogous numbers for cross-matches between the primers. these numbers serve as web links, and when clicked, they take the user to a page showing the exact alignments of the primers to themselves and each other that lead to the numbers reported. see figure  <dig> 

the primer sequences themselves can also be clicked. they take the user to a page such as the one shown in figure  <dig> which displays the full target sequence and the primer locations within it, as well as the amplicon, highlighted in three shades of green.

the valid primer sets found for each target sequence are given a score and ranked such that the best scoring sets are suggested. this score depends on whether the individual primers have 1- or 2-mismatch alignments to any non-target sequences. such "close match" alignments are considered problematic since they represent possible mis-primings, and hence primers with close matches are penalized and get lower scores. further, close match alignments where the  mismatch position is located closer to the 5'-end than the 3'-end are considered worse: the closer to the 3'-end a mismatch position is, the less likely it is that the primer will anneal to the wrong site and "ignore" the mismatch. the score formula reflects these two criteria – existence of 1- or 2-mismatch alignments, and position of the mismatch positions – and the exact penalty values are found heuristically so that they reflect lab experience. the calculated score is shown in the table and can be clicked; if any close matches are found, the corresponding alignments are shown on the resulting page as well as a detailed explanation of the score .

the user has the option to check all suggested primers against the nr nucleotide database of ncbi . this feature might be relevant, e.g. if the user is designing primers for a certain set of proteins from some organism and wishes to make sure that no other sequences from the same organism will be amplified. if the ncbi check is performed, the ncbi nr database will be searched for matches to the suggested primers, and any sequence containing a perfect match to both primers from the same primer pair will be reported as a clickable link leading to the sequence itself at ncbi's website.

RESULTS
the typical use of primique would be to upload the target sequences, apply strict criteria and save the found primers, then, if necessary, iteratively re-run with slightly relaxed criteria on those sequences for which no primers were found, saving new primer pairs as they emerge. if many primer pairs are found, they are presented over several, inter-linked pages to avoid heavy bandwidth load. currently, the maximum number of sequences each user can upload in one go is  <dig>  to keep the server performance high. users with extraordinary needs may contact us for assistance.

we tested primique by designing  <dig> primer sets for different hordein transcripts from barley and performing real-time pcr experiments  amplified a single product while two were unspecific, amplifying two products. one of them may have formed primer-dimers due to complementarity in the 3' end; we have since implemented an improved complementarity check  disallowing such primer pairs. also, the check for 1- or 2-mismatch alignments to non-target sequences has been implemented since.

as mentioned, the osprey software contains a program with capabilities similar to those of primique. the defining feature of osprey is that it uses very elaborate thermodynamic calculations when assessing secondary binding ; in comparison, primique uses sequence similarity and a heuristic explained below. osprey's feedback is minimal and purely textual; primique provides dynamic, graphical feedback  and provides the user with information which is helpful for tuning the parameters in a second run if primers were not found for all sequences in the first run. further, primique suggests several primer pairs for each sequence, letting the user make an informed choice. both tools allow the user to upload a secondary database of sequences not to be matched by the suggested primers. another difference is speed: primique is much faster than osprey. in a head-to-head trial with similar parameter settings  and a test file containing  <dig> sequences, primique found primers for  <dig> sequences in about  <dig> minutes, whereas osprey found primers for  <dig> sequences in several hours . thus, "playing around" with and comparing the outcome of various parameter settings is faster, easier and more straightforward in primique than in osprey.

CONCLUSIONS
we have presented primique, a new graphical, web-based, user-friendly, fast tool which designs sequence specific primers for a given set of target sequences, such that each primer pair is designed to amplify its target sequence and no others in the set. a secondary set of sequences not to be amplified can also be uploaded. several primer pair suggestions are made, and variation among them is attempted. primers that almost match non-target sequences are selected against, and further, the suggested primers may be checked against ncbi's databases for possible mispriming. the specificity is theoretically guaranteed in terms of sequence similarity: each primer pair uniquely matches its target sequence only. being web-based, primique requires no installation and runs on any machine with internet access.

primique is the work of a bioinformatician  guided by a lab practician , and therefore we hope it offers most of the functionality required by its potential users. our experience and experience with past collaborators  <cit>  shows that extreme, chemical-mathematical precision in the primer design  is shadowed by the multitude and coarseness of other factors that may influence the pcr experiment and cause unexpected results or simple failure.

availability and requirements
project name: primique

project home page: 

operating system: platform independent

programming language: python

other requirements: none

license: primique is free to academic users while commercial users must acquire a license.

authors' contributions
jf conceived of the study, did all programming and wrote the main manuscript. ml designed and performed the lab experiments, made suggestions to program functionality and design, and wrote the supplementary material. both authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary material. details on the rt-pcr experiments on barley.

click here for file

 acknowledgements
jf and ml are funded by two grants from the danish research council for technology and production. we thank lene h. madsen, jens stougaard, niels sandal and giuseppe dionisio for helpful discussions, and three anonymous reviewers for constructive criticism.
