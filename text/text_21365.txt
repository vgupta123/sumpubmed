BACKGROUND
dna microarrays allows reliable measures of the levels of several tens of thousands of different mrnas simultaneously  <cit> . the microarray 'annotation' contains information specifying the mrnas and genes assayed by the probes present on a particular microarray. a good annotation not only lists the probed transcripts but also contains biological information about the corresponding genes and information about the reliability of each probe-transcript association for instance. the information needed to define an annotation is extracted from molecular biology databases, such as entrez gene  <cit> .

in the case of commercial microarrays supported by a dedicated analysis software , an annotation is provided by the manufacturer and integrated in the analysis environment. on the other hand, if custom analyses are performed with the help of a versatile computing environment like r  <cit> , an annotation for the microarray format of interest can be chosen explicitly. here, we present an r package to support the use of annotations and other molecular biology databases provided as flat file databases . flat annotation databases may be provided by microarray manufacturers or generated anew on the basis of microarray probe sequences by researchers who aim at a better definition of targeted transcripts .

some functions in annotationtools are tailored to mine flat file databases containing gene homology/orthology information. dna microarrays are available for numerous different species allowing for the comparison of gene expression levels across different organisms. this opportunity is promising  <cit> , in particular for the better understanding of human diseases, where the comparison of disease-related expression profiles in humans and in animal models might yield important insights into pathological molecular mechanisms . furthermore, comparing a disease condition in humans and in animal models, we can assess whether experimental models recapitulate aspects of the human disease  <cit> , a critical step in validating disease models with regard to their use in preclinical therapeutical trials for instance. the comparison of transcriptional profiles across different species can make use of orthologous genes , assuming that they have retained the same function and are thus involved in similar processes in the two species. whole-genome sequences have allowed extensive mapping of orthologs across many species, and several databases store clusters of homologous/orthologous genes .

annotations and orthology information are sufficient to perform cross-species analyses but combining heterogeneous sources of information is often arduous . based on a set of functions with common input and output formats and mining flat databases, annotationtools implements a robust solution for integrating heterogeneous data. to illustrate the use and functionality of our software, we will present the following example analyses that are directly relevant to cross-species mrna profiling studies. we mapped probes across two widely used microarray platforms  and also mapped probes on a mouse microarray to their orthologs on a human microarray using information supplied by homologene. we further show how the latter mapping differed from mappings obtained using  <dig> alternative sources of orthology information . building on this example and using data from human patients and from a murine disease model, we then demonstrate how annotationtools can be used to easily perform cross-species comparisons of gene expression profiles.

implementation
functions in annotationtools are coded in pure r and do not depend on other r packages. they are therefore easily usable on any r installation. the annotation functions accept a vector of identifiers to be annotated  and an annotation table, created by loading a flat annotation file in a data.frame object . in the annotation table, each column contains a piece of annotation information  and each row contains a probe record. the identifiers to be annotated are looked up in the annotation table. since a single identifier can be annotated with multiple items , the annotation retrieved for the whole vector of identifiers is output as a list where the i-th element is a vector containing all annotation items found for the i-th input identifier. options can be set to output the cause of an annotation failure: empty or invalid input identifier, input identifier not found in the annotation table, input identifier with no annotation information provided in the annotation table.

the annotation functions can be grouped according to their look-up behavior. first, functions that find a single match in the annotation table for each input identifier : getannotation, getgeneid, getgenesymbol, getgenetitle, getgo. note that getannotation is a flexible function that can be set to look up any fields  in an arbitrary annotation table. the four other functions are tailored to accept annotation tables provided by affymetrix but they can be easily customized to other formats by setting options.

a second group of annotation functions find multiple matches  for each input identifier: getmultiannotation, getprobeset and gethomolog. getmultiannotation is a flexible annotation function that can work with arbitrary annotation tables whereas getprobeset works with affymetrix annotation tables by default. gethomolog is designed to look up homologs or orthologs and accepts an homology/orthology table and two inputs: a vector of gene identifiers and a target species identifier.

finally, a third group of functions making use of the previous two groups allows to perform higher-level operations . in conclusion, our package provides the user with a set of customizable functions with consistent input and output formats that can be easily chained to perform more complex operations.

RESULTS
examples of basic annotation operations
let us consider a typical affymetrix genechip experiment and assume that we chose to use the annotation provided by affymetrix. after downloading the annotation from affymetrix website , the user loads it into r as a data.frame with

> annotation <- read.csv

genes associated with particular probe sets can then be retrieved with the function getgenesymbol. to retrieve genes whose transcripts are probed by probe sets '117_at' and '1007_s_at', type

> getgenesymbol, annotation)

where the variable 'annotation' is the data.frame containing affymetrix annotation. being interested in human gene rfc <dig> , we can find its mouse ortholog using the information in homologene. having downloaded the flat database  <cit>  to a file called 'homologene.data' for instance, we first load it into r and then mine it using the function gethomolog

> homologene <- read.delim

> gethomolog

where the variable 'homologene' is the data.frame containing the homologene database and  <dig> is the taxonomy id of mus musculus  <cit> . detailed function descriptions and further examples are given in help files and in the package's vignette.

cross-platform probe mapping
as an illustration of the use and application of functions in annotationtools, we next outline how to perform a cross-platform mapping of probes. suppose that we would like to compare the outcome of two gene expression profiling experiments, one performed with the affymetrix mouse  <dig>  <dig>  array and the other with the illumina mouse- <dig> array. we thus need to find pairs of probes measuring the same transcript on both platforms. affymetrix and illumina provide annotation information including the transcript measured by each probe, designated by its refseq accession number  <cit> . this identifier can thus be used to find matching probes across platforms, as illustrated in figure 1a: we first use the multi-purpose function getannotation on affymetrix annotation to retrieve refseq accession numbers corresponding to affymetrix probe sets and second, use those to retrieve illumina probes  annotated with the same corresponding refseq accession numbers, mining illumina annotation with the help of getmultiannotation. since several probes can measure the same transcript and are thus annotated with the same refseq accession number, in this case this function is to be preferred over getannotation that will return the first match only .

using this strategy to map all 45' <dig> probe sets present on affymetrix mouse  <dig>  <dig>  to illumina mouse-6v <dig>  we found 31' <dig>  probe sets with at least one matching probe on illumina array . the first  <dig> probe sets in affymetrix annotation and their matching illumina probes are shown in table  <dig>  gene symbols  are for illustration purpose and were not used for finding probe pairs. the first affymetrix probe set  was annotated with two refseq identifiers but only one of those  was found to match an illumina probe. conversely, the second and ninth affymetrix probe sets, each annotated to a single refseq identifier, matched to three, respectively two different illumina probes annotated with the same refseq identifier.

the use of gene symbols was not always consistent across both annotations, as illustrated by the last probe set pair annotated to psenen  by affymetrix and to 1700023m09rik  by illumina. this suggests that, in this example, matching probes via gene symbols instead of refseq identifiers would have yielded an incomplete mapping, which highlights the importance of the matching identifier when setting up a mapping strategy. note that if annotations do not contain any suitable identifier to be used as matcher, an intermediate mapping step can be introduced that makes use of a molecular biology database providing a link between several identifiers . in the mapping presented above, imagine for instance that one of two microarray annotations would have listed gene ids and not refseq ids, we could have used the database gene2accession  to link these two identifier types through an additional, intermediate matching step.

mapping of orthologous affymetrix probe sets
to illustrate how annotationtools allows to combine various sources of information, we now consider the mapping of orthologous probe sets  across two affymetrix genechip formats, namely from mouse  <dig>  <dig>  to hg-u <dig> plus  <dig> . we used the following procedure, illustrated in figure 1b: annotate probe sets on mouse  <dig>  <dig>  with their gene ids using the corresponding affymetrix annotation and use the gene ids to mine homologene and find orthologous gene ids in the target species . finally, use the affymetrix annotation for hg-u <dig> plus  <dig>  to retrieve the corresponding  probe sets. this method is easily implemented using getgeneid, gethomolog and getprobeset sequentially  or, alternatively through a single call to the wrapper function ps2ps

> ps2ps

assuming that 'annotation_hgu133plus2', 'annotation_mouse4302' and 'homologene' are data.frame objects containing the corresponding annotations and the homologene database.  <dig> is the taxonomy id of mus musculus. the function ps2ps returns a complete mapping table as a data.frame. this operation lasts on the order of ten minutes on a desktop computer. we compared the result of this procedure to  <dig> alternative sources of orthologous affymetrix probe sets: resourcerer , ensembl, and affymetrix orthology file . the  <dig> corresponding mapping tables  can be easily mined for orthologous probe sets with gethomolog.

31' <dig> mouse probe sets  were mapped to  <dig> or more orthologous human probe sets on hg-u <dig> plus  <dig>  array using our homologene-based procedure, 31' <dig> were mapped using affymetrix ortholog file, 23' <dig> using ensembl and 8' <dig> using ego. figure  <dig> shows the number of mouse probe sets mapped to at least one human probe set by the different methods .  <dig> mouse probe sets could be mapped to at least  <dig> ortholog using homologene only . the opposite was true for  <dig> and  <dig> mouse probe sets, for which ensembl and ego respectively, but no other methods, found at least one orthologous probe set. overall, 10' <dig> mouse probe sets could not be mapped using any of the three methods. figure 3a displays the distribution of the number of orthologous human probe sets found  for each mouse probe set using our homologgene-based procedure. for comparison, figure 3b–d represent the same distribution but using affymetrix ortholog file, ego and ensembl, respectively. affymetrix ortholog file returned the exact same set of human orthologous probe sets as the homologene-based method for most of the mouse probe sets . affymetrix actually uses the information in homologene to build its orthology files , such that the small differences between both methods can be assumed to be due to the use of different homologene versions. furthermore, using ensembl and ego, and for mouse probe sets with at least one ortholog in human, on average less orthologs were found than with the homologene-based method .

cross-species analysis of gene expression changes
we now present a practical example of cross-species analysis using gene expression data from huntington's disease patients and from a genetic mouse model of the disease. huntington's disease  is a neurological disorder caused by a trinucleotide  expansion in the hd gene. animal models of hd have allowed the demonstration that mutant protein expression results in transcriptional dysregulation of many genes  <cit> . more recently, many mrna changes have also been detected in the brains of hd patients  <cit> . how do these changes compare with those identified in mouse models?

here we will consider the chl <dig> mouse model of hd  <cit>  and investigate whether the most robust mrna changes detected in striatal samples of these mutant mice parallel those measured in the corresponding brain region of hd patients. thereby, we aim at assessing the faithfulness of the animal model with regard to transcriptional dysregulations in human. we used public data from a study that profiled striata of chl <dig> and control mice and assessed differential expression between both genotypes  <cit> . in short, strand et al. extracted rna from  <dig> transgenic and  <dig> control animals and hybridized it to affymetrix mg-u74av <dig> arrays. these were normalized using rma  <cit>  and differential expression analysis was performed with the r package limma  <cit> . the list of affymetrix probe sets along with measures of expression change and associated statistics for differential expression is publicly available  <cit> . in addition, we used data from a large transcriptomic study of human hd using affymetrix hg-u133a arrays  <cit> . human striatal gene expression profiles from  <dig> hd patients and  <dig> controls were analyzed similarly as described for the mice and the list of probe sets with associated measures of expression change and differential expression statistics is available from the same source  <cit> .

to perform this mouse-human comparison, we first needed to find orthologous probe sets on the two microarrays used in the aforementioned studies . as presented above, a table of orthologous probe sets can easily be generated with the function ps2ps in annotationtools. this mapping table and results from differential gene expression analyses of the mouse and human data could then be used to look up the probe sets present in the human data that are orthologous to the selected top mouse probe sets . this is implemented by the function getorthologousprobesets

> getorthologousprobesets

that takes a vector of probes to be matched , a data.frame object containing the target probe sets and associated log <dig> fold changes or statistics of interest , and the mapping table . this returns a list of target probe sets and associated values . in case of multiple human orthologous probe sets found to match a given mouse probe set, the function can be configured to either output a summary value  or a single value corresponding to a selected probe set . this information allowed us to readily compare gene expression changes in the chl <dig> mouse model with those measured in hd patients.

discussion
as shown in a recent study, different microarray technologies can reliably and concordantly measure gene expression profiles  <cit> . the combination of heterogeneous microarray datasets can subserve different purposes. on the one hand, one might want to combine several independent profiling experiments aimed at answering the same question but performed with different technologies. we have shown here how to use annotationtools to quickly map probes across different microarray platforms and thus 'align' datasets. such parallel experiments can then be considered in the framework of meta-analysis and analyzed so as to reach robust conclusions that would have been difficult to obtain based on any single study . note that different statistical methods have been proposed for combining multiple independent studies, based on the use of parameter estimates , effect sizes , p-values, statistic ranks or test decisions . their extension and application in the field of microarray studies is an area of current active research.

alternatively, heterogeneous datasets can be considered sequentially: a first study is considered as a reference and is used to derive a particular transcriptional signature  whose presence is then tested for in a second dataset. in this context, we showed how to use annotationtools to map orthologous probes across species and explore the recapitulation of a human disease signature in a particular mouse model. our example suggested that such comparisons can be made at various resolution levels . our package does not address the issue of significance testing in such comparisons. over the last years, several groups have proposed solutions to this issue  and a general framework for statistical testing of global similarity is now emerging  <cit> . we have recently proposed the concordance coefficient as a new measure of similarity between datasets , that is amenable to formal statistical testing and that we used to assess the extent to which transcriptomic changes in huntington's disease were recapitulated by different genetic mouse models  <cit> . in particular, we could show that the chl <dig> model significantly recapitulated aspects of gene expression changes detected in hd patients.

an alternative bioconductor  <cit>  solution for annotation and ortholog finding makes use of specialized data packages, which are compilations of biological information obtained from various databases for probe sets of particular microarray formats. these meta-data packages are prepared with the package annbuilder and can be obtained from the bioconductor website  <cit> . they can be subsequently queried with special functions available through the package annotate. another bioconductor solution is provided by the package biomart which allows the  query of biomart databases . annotation and homology/orthology information can thus be retrieved from the newest built of available databases without downloading the database. many annotations and molecular biology databases, however, are readily  available as flat file databases. these include annotations provided by commercial microarray manufacturers, by academic facilities producing and annotating their own spotted arrays, as well as re-annotation efforts aimed at providing more faithful representation of the transcript species measured by a given microarray platform . moreover, most information present in very large databases such as entrez gene for instance is distributed as various flat file databases. the package annotationtools provides the r user with a simple solution to mine and combine data from flat file databases in a systematic way. in particular, the functions handling orthology databases allow for a straightforward use of publicly available orthology information . as cross-species studies will become more frequent in the near future, it is of particular importance to develop user-friendly, flexible analysis tools that ease the comparison of gene expression profiles across microarray platforms.

CONCLUSIONS
the bioconductor-compliant package annotationtools allows analysts to perform microarray annotation tasks, match orthologous probes across microarrays and, more generally, use and combine information from flat databases within r. in particular, it offers an easy solution for implementing cross-species analysis of gene expression, which is of timely relevance.

availability & requirements
the r package annotationtools is freely available under the gpl license and can be downloaded from bioconductor. the details for this package are provided below.

project name: annotationtools

project home page: 

operating systems: linux, windows

programming language: r

other requirements: none

license: gnu gpl

restriction to use by non-academics: none

authors' contributions
ak conceived the package, wrote the code, performed data analysis and wrote the manuscript. rlc provided microarray data, input on data analysis and comments on the manuscript. md contributed to the package design and data analysis and participated in the writing of the manuscript. all authors read and approved the final manuscript.

