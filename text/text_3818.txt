BACKGROUND
in the era of information overflow, data mining and machine learning are indispensable tools to retrieve information and knowledge from data. the idea of incorporating several data sources in analysis may be beneficial by reducing the noise, as well as by improving statistical significance and leveraging the interactions and correlations between data sources to obtain more refined and higher-level information  <cit> , which is known as data fusion. in bioinformatics, considerable effort has been devoted to genomic data fusion, which is an emerging topic pertaining to a lot of applications. at present, terabytes of data are generated by high-throughput techniques at an increasing rate. in data fusion, these terabytes are further multiplied by the number of data sources or the number of species. a statistical model describing this data is therefore not an easy matter. to tackle this challenge, it is rather effective to consider the data as being generated by a complex and unknown black box with the goal of finding a function or an algorithm that operates on an input to predict the output. about  <dig> years ago, vapnik  <cit>  introduced the support vector method which makes use of kernel functions. this method has offered plenty of opportunities to solve complicated problems but also brought lots of interdisciplinary challenges in statistics, optimization theory, and the applications therein  <cit> .

multiple kernel learning  has been pioneered by lanckriet et al.  <cit>  and bach et al.  <cit>  as an additive extension of single kernel svm to incorporate multiple kernels in classification. it has also been applied as a statistical learning framework for genomic data fusion  <cit>  and many other applications  <cit> . the essence of mkl, which is the additive extension of the dual problem, relies only on the kernel representation  while the heterogeneities of data sources are resolved by transforming different data structures  into kernel matrices. in the dual problem, these kernels are combined into a single kernel, moreover, the coefficients of the kernels are leveraged adaptively to optimize the algorithmic objective, known as kernel fusion. the notion of kernel fusion was originally proposed to solve classification problems in computational biology, but recent efforts have lead to analogous solutions for one class  <cit>  and unsupervised learning problems . currently, most of the existing mkl methods are based on the formulation proposed by lanckriet et al.  <cit> , which is clarified in our paper as the optimization of the infinity norm  of kernel fusion. optimizing l∞ mkl in the dual problem corresponds to posing l <dig> regularization on the kernel coefficients in the primal problem. as known, l <dig> regularization is characterized by the sparseness of the kernel coefficients  <cit> . thus, the solution obtained by l∞ mkl is also sparse, which assigns dominant coefficients to only one or two kernels. the sparseness is useful to distinguish relevant sources from a large number of irrelevant data sources. however, in biomedical applications, there are usually a small number of sources and most of these data sources are carefully selected and preprocessed. they thus often are directly relevant to the problem. in these cases, a sparse solution may be too selective to thoroughly combine the complementary information in the data sources. while the performance on benchmark data may be good, the selected sources may not be as strong on truly novel problems where the quality of the information is much lower. we may thus expect the performance of such solutions to degrade significantly on actual real-world applications. to address this problem, we propose a new kernel fusion scheme by optimizing the l2-norm of multiple kernels. the l <dig> mkl yields a non-sparse solution, which smoothly distributes the coefficients on multiple kernels and, at the same time, leverages the effects of kernels in the objective optimization. empirical results show that the l2-norm kernel fusion can lead to a better performance in biomedical data fusion.

methods
acronyms
the symbols and notations used in this paper are defined in table  <dig> .

formal definition of the problem
we consider the problem of minimizing a quadratic cost of a real vector in function of  and a real positive semi-definite  matrix q, given by   

where  denotes a convex set. also, psd implies that . we will show that many machine learning problems can be cast in form  with additional constraints on . in particular, if we restrict , the problem in  becomes a rayleigh quotient and leads to the eigenvalue problem. now we consider a convex parametric linear combination of a set of p psd matrices qj, given by:   

to bound the coefficients θj, we restrict that, for example, ||θj|| <dig> =  <dig>  and  can be equivalently rewritten as a min-max problem, given by   

to solve , we denote , the min-max problem can be formulated in a form of quadraticly constrained linear program , given by   

the optimal solution  in  is obtained from the dual variable corresponding to the quadratic constraints in . the optimal t* is equivalent to the chebyshev or l∞-norm of the vector of quadratic terms, given by:   

the l∞-norm is the upper bound w.r.t. the constraint  because   

apparently, suppose the optimal  is given, optimizing the l∞-norm in  will pick the single term with the maximal value, and the optimal solution of the coefficients is more likely to be sparse. an alternative solution to  is to introduce a different constraint on the coefficients, for example, ||θj|| <dig> =  <dig>  we thus propose a new extension of the problem in , given by   

this new extension is analogously solved as a qclp problem with modified constraints, given by   

where . the proof that  is the solution of  is given in the following theorem.

theorem  <dig>  the qclp problem in  equivalently solves the problem in .

proof given two vectors {x <dig>  ..., xp}, {y <dig>  ..., yp}, xj, yj ∈ ℝ, j =  <dig>  ..., p, the cauchy-schwarz inequality states that   

with as equivalent form:   

let us denote xj = θj and ,  becomes   

since ||θj|| <dig> =  <dig>   is equivalent to   

therefore, given , the additive term  is bounded by the l2-norm |||| <dig> 

moreover, it is easy to prove that when , the parametric combination reaches the upperbound and the equality holds. optimizing this l2-norm results in a non-sparse solution in θj. in order to distinguish this from the solution obtained by  and , we denote it as the l2-norm approach. it can also easily be seen  that the l1-norm approach is simply averaging the quadratic terms with uniform coefficients.

the l2-norm bound is also generalizable to any positive real number n ≥  <dig>  defined as ln-norm mkl. recently, the similar topic is also investigated by  <cit>  and a solution is proposed to solve the primal mkl problem. in this paper, we will show that our primal-dual interpretation of mkl is also extendable to the n-norm. let us assume that  is regularized by the lm-norm as ||||m =  <dig>  then the lm-norm extension of equation  is given by   

in the following theorem, we prove that  can be equivalently solved as a qclp problem, given by   

where  and the constraint is in ln-norm, moreover, . the problem in  is convex and can be solved by cvx toolbox  <cit> .

theorem  <dig>  if the coefficient vector is regularized by a lm-norm in , the problem can be solved as a convex programming problem in  with ln-norm constraint. moreover, .

proof we generalize the cauchy-schwarz inequality to hölder's inequality. let m, n >  <dig> be two numbers that satisfy . then   

let us denote xj = θj and ,  becomes   

since ||||m =  <dig>  therefore the term  can be omitted in the equation, so  is equivalent to   

due to the condition that , so , we prove that with the lm-norm constraint posed on , the additive multiple kernel term  is bounded by the ln-norm of the vector . moreover, we have .

in this section, we have explained the l∞, l <dig>  l <dig>  and ln-norm approaches to extend the basic problem in  to multiple matrices qj. these approaches differed mainly on the constraints applied on the coefficients. to clarify the difference of notations used in this paper with the common interpretations of l <dig> and l <dig> regularization on , we illustrate the mapping of our l∞, l <dig>  l <dig>  and ln notations between the common interpretations of coefficient regularization. as shown in table  <dig>  the notations used in this paper are interpreted in the dual space and are equivalent to regularization of kernel coefficients in the primal space. the advantage of dual space interpretation is that we can easily extend the analogue solution to various machine learning algorithms. to keep the discussion concise, we will from now on mainly focus on comparing the l∞, l <dig> and l <dig> in the dual problems and present the solutions in the dual space.

next, we will investigate several concrete kernel fusion algorithms and will propose the corresponding l <dig> solutions.

one class svm kernel fusion for ranking
the primal problem of one class svm  is defined by tax and duin  <cit>  and schölkopf et al.  <cit>  as   

where  is the norm vector of the separating hyperplane,  are the training samples, ν is the regularization constant penalizing outliers in the training samples, ϕ denotes the feature map, ρ is a bias term, ξi are slack variables, and n is the number of training samples. taking the conditions for optimality from the lagrangian, one obtains the dual problem, given by:   

where αi are dual variables, k represents the kernel matrix obtained by the inner product between any pair of samples specified by a kernel function . to incorporate multiple kernels in , de bie et al. proposed a solution  <cit>  with the dual problem formulated as   

where p is the number of data sources and kj is the j-th kernel matrix. the formulation exactly corresponds to the l∞ solution of the problem defined in the previous section  with additional constraints imposed on . the optimal coefficients θj are used to combine multiple kernels as   

and the ranking function is given by   

where Ωn is the combined kernel of training data , i =  <dig>  ..., n,  is the test data point to be ranked,  is the kernel function applied on test data and training data,  is the dual variable solved as . de bie et al. applied the method in the application of disease gene prioritization, where multiple genomic data sources are combined to rank a large set of test genes using the 1-svm model trained from a small set of training genes which are known to be relevant for certain diseases. the l∞ formulation in their approach yields a sparse solution when integrating genomic data sources . to avoid this disadvantage, they proposed a regularization method by restricting the minimal boundary on the kernel coefficients, notated as θmin, to ensure the minimal contribution of each genomic data source to be θmin/p. according to their experiments, the regularized solution performed best, being significantly better than the sparse integration and the average combination of kernels.

instead of setting the ad hoc parameter θmin, one can also straightforwardly propose an l2-norm approach to solve the identical problem, given by   

where . the problem above is a qclp problem and can be solved by conic optimization solvers such as sedumi  <cit> . in , the first constraint represents a lorentz cone and the second constraint corresponds to p number of rotated lorentz cones . the optimal kernel coefficients θj correspond to the dual variables of the r cones with ||θ|| <dig> =  <dig>  in this l2-norm approach, the integrated kernel Ω is combined by different  and the same scoring function as in  is applied on the different solutions of  and Ω.

support vector machine mkl for classification
the notion of mkl is originally proposed in a binary svm classification, where the primal objective is given by   

where  are data samples, ϕ is the feature map, yi are class labels, c >  <dig> is a positive regularization parameter, ξi are slack variables,  is the norm vector of the separating hyperplane, and b is the bias. this problem is convex and can be solved as a dual problem, given by   

where  are the dual variables, y = diag, k is the kernel matrix, and c is the upperbound of the box constraint on the dual variables. to incorporate multiple kernels in , lanckriet et al.  <cit>  and bach et al.  <cit>  proposed a multiple kernel learning  problem as follows:   

where p is the number of kernels.  optimizes the l∞-norm of the set of kernel quadratic terms. based on the previous discussions, the l2-norm solution is analogously given by   

where . both formulations in  and  can be efficiently solved as second order cone programming  problems by a conic optimization solver  or as qcqp problems by a general qp solver . it is also known that a binary mkl problem can also be formulated as semi-definite programming , as proposed by lanckriet et al.  <cit>  and kim et al.  <cit> . however, in a multi-class problem, sdp problems are computationally prohibitive due to the presence of psd constraints and can only be solved approximately by relaxation  <cit> . on the contrary, the qclp and qcqp formulations of binary classification problems can be easily extended to a multi-class setting using the one-versus-all  coding, i.e., solving the problem of k classes as k number of binary problems. therefore, the l∞ multi-class svm mkl is then formulated as   

the l <dig> multi-class svm mkl is given by   

where  

sip formulation for svm mkl on larger scale data
unfortunately, the kernel fusion problem becomes challenging on large scale data because it may scale up in three dimensions: the number of data points, the number of classes, and the number of kernels. when these dimensions are all large, memory issues may arise as the kernel matrices need to be stored in memory. though it is feasible to approximate the kernel matrices by a low rank decomposition  and to reduce the computational burden of conic optimization using these low rank matrices, conic problems involve a large amount of variables and constraints and it is usually less efficient than qcqp. moreover, the precision of the low rank approximation relies on the assumption that the eigenvalues of kernel matrices decay rapidly, which may not always be true when the intrinsic dimensions of the kernels are large. to tackle the computational burden of mkl, sonnenburg et al. reformulated the qp problem as semi-infinite programming  and approximated the qp solution using a bi-level strategy   <cit> . the standard form of sip is given by   

where the constraint functions in  can be either linear or quadratic and there are infinite number of them in ∀t ∈ ϒ. to solve it, a discretization method is usually applied, which is briefly summarized as follows  <cit> :

 <dig>  choose a finite subset  ⊂ ϒ.

 <dig>  solve the convex programming problem      

 <dig>  if the solution of  <dig> is not satisfactorily close to the original problem then choose a larger, but still finite subset  and repeat from step  <dig> 

the convergence of sip and the accuracy of the discretization method have been extensively described . as proposed by sonnenburg et al.  <cit> , the multi-class svm mkl objective in  can be formulated as a sip problem, given by   

the sip problem above is solved as a bi-level algorithm for which the pseudo code is presented in algorithm  <dig> in the appendix. in each loop τ, step  <dig> optimizes  and u for a restricted subset of constraints as a linear programming. step  <dig> is an svm problem with a single kernel and generates a new . if  is not satisfied by the current  and u, it will be added successively to step  <dig> until all constraints are satisfied. the starting points  are randomly initialized and sip always converges to a identical result.

algorithm  <dig> is also applicable to the l2-norm situation of svm mkl, whereas the non-convex constraint  in step  <dig> needs to be relaxed as , and the fj() term in  is modified as only containing the quadratic term. the sip formulation for l2-norm svm mkl is given by   

with these modifications, step  <dig> of algorithm  <dig> becomes a qclp problem given by   

where  and  is a given value. moreover, the psd property of kernel matrices ensures that aj ≥  <dig>  thus the optimal solution always satisfies .

in the sip formulation, the svm mkl is solved iteratively as two components. the first component is a single kernel svm, which is solved more efficiently when the data scale is larger then thousands of data points  and, requires much less memory than the qp formulation. the second component is a small scale problem, which is a linear problem in l∞ case and a qclp problem in the l <dig> approach. as shown, the complexity of the sip based svm mkl is mainly determined by the burden of a single kernel svm multiplied by the number of iterations. this has inspired us to adopt more efficient single svm learning algorithms to further improve the efficiency. the least squares support vector machines   <cit>  is known for its simple differentiable cost function, the equality constraints in the separating hyperplane and its solution based on linear equations, which is preferable for large scaler problems. next, we will investigate the mkl solutions issue using lssvm formulations.

least squares svm mkl for classification
in lssvm, the primal problem is given by  <cit>    

where most of the variables are defined in a similar way as in . the main difference is that the nonnegative slack variable ξ is replaced by a squared error term  and the inequality constraints are modified as equality ones. taking the conditions for optimality from the lagrangian, eliminating , defining  =  and y = diag, one obtains the following linear system  <cit> :   

where  are unconstrained dual variables. without the loss of generality, we denote  and rewrite  as   

in , we add an additional constraint as y- <dig> = i then the coefficient becomes a static value in the multi-class case. in 1vsa coding,  requires to solve k number of linear problems whereas in , the coefficient matrix is only factorized once such that the solution of  w.r.t. the multi-class label vectors  is very efficient to obtain. the constraint y- <dig> = i can be simply satisfied by assuming the class labels to be - <dig> and + <dig>  thus, from now on, we assume y- <dig> = i in the following discussion.

to incorporate multiple kernels in lssvm classification, the l∞-norm approach is a qp problem, given by    

the l2-norm approach is analogously formulated as   

where . the λ parameter regularizes the squared error term in the primal objective in  and the quadratic term  in the dual problem. usually, the optimal λ needs to be selected empirically by cross-validation. in the kernel fusion of lssvm, we can alternatively transform the effect of regularization as an identity kernel matrix in , where θp +  <dig> = 1/λ. then the mkl problem of combining p kernels is equivalent to combining p +  <dig> kernels where the last kernel is an identity matrix with the optimal coefficient corresponding to the λ value. this method has been mentioned by lanckriet et al. to tackle the estimation of the regularization parameter in the soft margin svm  <cit> . it has also been used by ye et al. to jointly estimate the optimal kernel for discriminant analysis  <cit> . saving the effort of validating λ may significantly reduce the model selection cost in complicated learning problems. by this transformation, the objective of lssvm mkl becomes similar to that of svm mkl with the main difference that the dual variables are unconstrained. though  and  can in principle both be solved as qp problems by a conic solver or a qp solver, the efficiency of a linear solution of the lssvm is lost. fortunately, in a sip formulation, the lssvm mkl can be decomposed into iterations of the master problem of single kernel lssvm learning, which is an unconstrained qp problem, and a coefficient optimization problem with very small scale.

sip formulation for lssvm svm mkl on larger scale data
the l∞-norm approach of multi-class lssvm mkl is formulated as   

in the formulation above, kj represents the j --th kernel matrix in a set of p +  <dig> kernels with the p + 1-th kernel being the identity matrix. the l2-norm lssvm mkl is formulated as   

the pseudocode of l∞ -norm and l2-norm lssvm mkl is presented in algorithm  <dig> in the appendix. in l∞ approach, step  <dig> optimizes  as a linear programming. in l <dig> approach, step  <dig> optimizes  as a qclp problem. since the regularization coefficient is automatically estimated as θp +  <dig>  step  <dig> simplifies to a linear problem as   

where .

summary of algorithms
as discussed, the dual l <dig> mkl solution can be extended to many machine learning problems. in principle, all mkl algorithms can be formulated in l∞, l <dig>  and l <dig> forms and lead to different solutions. to validate the proposed approach, we implemented and compared  <dig> algorithms on various data sets. the summary of all implemented algorithms is presented in table  <dig>  these algorithms combine l∞, l <dig>  and l <dig> mkl with 1-svm, svm, and lssvm. moreover, to cope with imbalanced data in classification, we also extended weighted svm  <cit>  and weighted lssvm  <cit>  to their mkl formulations . though we mainly focus on l∞, l <dig>  and l <dig> mkl methods, we also implement the ln-norm mkl for 1-svm, svm, ls-svm and weighted svm. these algorithms are applied on the four biomedical experimental data sets and the performance is reported in section  <dig> of additional file  <dig>  moreover, the ln-norm algorithms are also available on the website of this paper.

summary of algorithms implemented in the paper. because a same algorithm can be solved via different formulations. the different formulation numbers correspond to a same algorithm number and represent multiple formulations. in total  <dig> different algorithms were implemented, which were solved through  <dig> different formulations. for an algorithm with different formulations, the solutions are identical and only differ by computational efficiency. some algorithms have already been proposed in the literature as shown in the reference column. the novel algorithms and formulations proposed in this paper are labeled as "novel".

experimental setup and data sets
the performance of the proposed l <dig> mkl method was systematically evaluated and compared on six real benchmark data sets. the computational efficiency was compared on two uci data sets. on each data set, we compared the l <dig> method with the l∞, l <dig> and regularized l∞ mkl method. in the regularized l∞, we set the minimal boundary of kernel coefficients θmin to  <dig> , denoted as l∞ . we also compared the three different optimization formulations socp, qcqp and sip on the uci data sets. the experiments were categorized in five groups as summarized in table  <dig> 

experiment 1
in the first experiment, we demonstrated a disease gene prioritization application to compare the performance of optimizing different norms in mkl. the computational definition of gene prioritization is mentioned in our earlier work  <cit> . in this paper, we applied four 1-svm mkl algorithms to combine kernels derived from  <dig> heterogeneous genomic sources  to prioritize  <dig> genes that are annotated to be relevant for  <dig> diseases in omim. the performance was evaluated by leave-one-out  validation: for each disease which contains k relevant genes, one gene, termed the "defector" gene, was removed from the set of training genes and added to  <dig> randomly selected test genes . we used the remaining k -  <dig> genes  to build our prioritization model. then, we prioritized the test set of  <dig> genes with the trained model and determined the rank of that defector gene in test data. the prioritization function in  scored the relevant genes higher and others lower, thus, by labeling the "defector" gene as class "+1" and the random candidate genes as class "-1", we plotted the receiver operating characteristic  curves to compare different models using the error of auc .

the kernels of data sources were all constructed using linear functions except the sequence data that was transformed into a kernel using a 2-mer string kernel function  <cit>  . in total  <dig> kernels were combined in this experiment. the regularization parameter ν in 1-svm was set to  <dig>  for all comparing algorithms. since there was no hyper-parameter needed to be tuned in loo validation, we reported the loo results as the performance of generalization. for each disease relevant gene, the  <dig> test genes were randomly selected in each loo validation run from the whole human protein-coding genome. we repeated the experiment  <dig> times and the mean value and standard deviation were used for comparison.

experiment 2
in the second experiment we used the same data sources and kernel matrices as in the previous experiment to prioritize  <dig> prostate cancer genes recently discovered by eeles et al.  <cit> , thomas et al.  <cit>  and gudmundsson et al.  <cit> . a training set of  <dig> known prostate cancer genes was compiled from the reference database omim including only the discoveries prior to january  <dig>  this training set was then used to train the prioritization model. for each novel prostate cancer gene, the test set contained the newly discovered gene plus its  <dig> closest neighbors on the chromosome. besides the error of auc, we also compared the ranking position of the novel prostate cancer gene among its  <dig> closet neighboring genes. moreover, we compared the mkl results with the ones obtained via the endeavour application.

experiment 3
the third experiment is taken from the work of daemen et al. about the kernel-based integration of genome-wide data for clinical decision support in cancer diagnosis  <cit> . thirty-six patients with rectal cancer were treated by combination of cetuximab, capecitabine and external beam radiotherapy and their tissue and plasma samples were gathered at three time points: before treatment ; at the early therapy treatment  and at the moment of surgery . the tissue samples were hybridized to gene chip arrays and after processing, the expression was reduced to  <dig>  genes. ninety-six proteins known to be involved in cancer were measured in the plasma samples, and the ones that had absolute values above the detection limit in less than 20% of the samples were excluded for each time point separately. this resulted in the exclusion of six proteins at t <dig> and four at t <dig>  "responders" were distinguished from "non-responders" according to the pathologic lymph node stage at surgery . the "responder" class contains  <dig> patients with no lymph node found at surgery whereas the "non-responder" class contains  <dig> patients with at least  <dig> regional lymph node. only the two array-expression data sets  measured at t <dig> and t <dig> and the two proteomics data sets  measured at t <dig> and t <dig> were used to predict the outcome of cancer at surgery.

similar to the original method applied on the data  <cit> , we used r bioconductor deds as feature selection techniques for microarray data and the wilcoxon rank sum test for proteomics data. the statistical feature selection procedure was independent to the classification procedure, however, the performance varied widely with the number of selected genes and proteins. we considered the relevance of features  as prior knowledge and systematically evaluated the performance using multiple numbers of genes and proteins. according to the ranking of statistical feature selection, we gradually increased the number of genes and proteins from  <dig> to  <dig>  and combined the linear kernels constructed by these features. the performance was evaluated by loo method, where the reason was two folded: firstly, the number of samples was small ; secondly, the kernels were all constructed with a linear function. moreover, in lssvm classification we proposed the strategy to estimate the regularization parameter λ in kernel fusion. therefore, no hyperparameter was needed to be tuned so we reported the loo validation result as the performance of generalization.

experiment 4
our fourth experiment considered three clinical data sets. these three data sets were derived from different clinical studies and were used by daemen and de moor  <cit>  as validation data for clinical kernel function development. data set i contains clinical information on  <dig> patients with an endometrial disease who underwent an echographic examination and color droppler  <cit> . the patients are divided into two groups according to their histology: malignant  versus benign . after excluding patients with incomplete data, the data contains  <dig> patients of which  <dig> malignant and  <dig> benign. data set ii comes from a prospective observational study of  <dig> women undergoing transvaginal sonography before  <dig> weeks gestation, resulting in data for  <dig> pregnancies of which  <dig> normal at week  <dig> and  <dig> miscarriages during the first trimester  <cit> . data set iii contains data on  <dig> pregnancies of unknown location   <cit> . within the pul group, there are four clinical outcomes: a failing pul, an intrauterine pregnancy , an ectopic pregnancy  or a persisting pul. because persisting puls are rare , they were excluded, as well as pregnancies with missing data. the final data set consists of  <dig> puls among which  <dig> failing puls,  <dig> iups, and  <dig> eps. as the most important diagnostic problem is the correct classification of the eps versus non-eps  <cit> , the data was divided as  <dig> non-eps and  <dig> eps. to simulate a problem of combining multiple sources, for each data we created eight kernels and combined them using mkl algorithms for classification. the eight kernels included one linear kernel, three rbf kernels, three polynomial kernels and a clinical kernel. the kernel width of the first rbf kernel is selected by empirical rules as four times the average covariance of all the samples, the second and the third kernel widths were respectively six and eight times the average covariance. the degrees of the three polynomial kernels were set to  <dig>   <dig>  and  <dig> respectively. the bias term of polynomial kernels was set to  <dig>  the clinical kernels were constructed as proposed by daemen and de moor  <cit> . all the kernel functions are explained in section  <dig> of additional file  <dig>  we noticed that the class labels of the pregnancy data were quite imbalanced . in literature, the class imbalanced problem can be tackled by modifying the cost of different classes in the objective function of svm. therefore, we applied weighted svm mkl and weighted lssvm mkl on the imbalanced pregnancy data. for the other two data sets, we compared the performance of svm mkl and lssvm mkl with different norms.

the performance of classification was benchmarked using 3-fold cross validation. each data set was randomly and equally divided into  <dig> parts. as introduced in the methods section, when combining multiple pre-constructed kernels in lssvm based algorithms, the regularization parameter λ can be jointly estimated as the coefficient of identity matrix. in this case we don't need to optimize any hyper-parameter in the lssvm. in the estimation approach of lssvm and all approaches of svm, we therefore could use both training and validation data to train the classifier, and test data to evaluate the performance. the evaluation was repeated three times, so each part was used once as test data. the average performance was reported as the evaluation of one repetition. in the standard validation approach of lssvm, each dataset was partitioned randomly into three parts for training, validation and testing. the classifier was trained on the training data and the hyper-parameter λ was tuned on the validation data. when tuning the λ, its values were sampled uniformly on the log scale from 2- <dig> to  <dig>  then, at optimal λ, the classifier was retrained on the combined training and validation set and the resulting model is tested on the testing set. obviously, the estimation approach is more efficient than the validation approach because the former approach only requires one training process whereas the latter needs to perform  <dig> times an additional training . the performance of these two approaches was also investigated in this experiment.

experiment 5
as introduced in the methods section, a same mkl problem can be formulated as different optimization problems such as socp, qcqp, and sip. the accuracy of the discretization method for solving sip is mainly determined by the tolerance value ε predefined in the stopping criterion. in our implementation, ε was set to  <dig> × 10- <dig>  these different formulations yield the same result but mainly differ on computational efficiency. in the fifth experiment we compared the efficiency of these optimization techniques on two large scale uci data sets. the two data sets are digit recognition data for pen based handwriting recognition and optical based digit recognition. both data sets contain more than  <dig> data samples thus they were used as real large scale data sets to evaluate the computational efficiency. in our implementation, the optimization problems were solved by sedumi  <cit> , mosek  <cit>  and the matlab optimization toolbox. all the numerical experiments were carried on a dual opteron  <dig> unix system with  <dig> g memory and the computational efficiency was evaluated by the cpu time .

RESULTS
experiment 1: disease relevant gene prioritization by genomic data fusion
in the first experiment, the l <dig> 1-svm mkl algorithm performed the best . as shown in table  <dig>  the l∞ and l <dig> approaches all performed significantly worse than the l <dig> approach. for example, in the current experiment, when setting the minimal boundary of the kernel coefficients to  <dig> , each data source was ensured to have a minimal contribution in integration, thereby improving the l∞ performance from  <dig>  to  <dig> , although still lower than l <dig>  in figure  <dig> we illustrate the optimal kernel coefficients of different approaches. as shown, the l∞ method assigned dominant coefficients to text mining and gene ontology data, whereas other data sources were almost discarded from integration. in contrast, the l <dig> approach evenly distributed the coefficients over all data sources and thoroughly combined them in integration. when combining multiple kernels, sparse coefficients combine the model only with one or two kernels, making the combined model fragile with respect to the uncertainty and novelty. in real problems, the relevance of a new gene to a certain disease may not have been investigated thus a model solely based on text and go annotation is less reliable. l <dig> based integration evenly combines multiple genomic data sources. in this experiment, the l <dig> approach showed the same effect as the regularized l∞ by setting some minimal boundaries on kernel coefficients. however, in the regularized l∞, the minimal boundary θmin usually is predefined according to the "rule of thumb". the main advantage of the l <dig> approach is that the θmin values are determined automatically for different kernels and the performance is shown to be better with the manually selected values.

results of experiment 1: disease relevant gene prioritization by genomic data fusion. the error of auc values is evaluated by loo validation in  <dig> random repetitions. the best performance  is shown in bold. the p-values are compared with the best performance using a paired t-test. as shown, the l <dig> method is significantly better than other methods. the paired spearman correlation scores compare similarities of rankings obtained by different approaches when compared with the target rankings . higher spearman correlation values mean that the two ranking results are much similar.

experiment 2: prioritization of recently discovered prostate cancer genes by genomic data fusion
in the second experiment, recently discovered prostate cancer genes were prioritized using the same data sources and algorithms as in the first experiment. as shown in table  <dig>  the l <dig> method significantly outperformed other methods on prioritization of gene cdh <dig>  and jazf <dig>  for  <dig> other genes , the performance of the l <dig> method was comparable to the best result. in section  <dig> of additional file  <dig>  we also presented the optimal kernel coefficients and the prioritization results for individual sources. as shown in additional file  <dig>  the l∞ algorithm assigned most of the coefficients to text and microarray data. text data performs well in the prioritization of known disease genes, however, does not always work the best for newly discovered genes. this experiment demonstrates that when prioritizing novel prostate cancer relevant genes, the l <dig> mkl approach evenly optimized the kernel coefficients to combine heterogeneous genomic sources and its performance was significantly better than the l∞ method. moreover, we also compared the kernel based data fusion approach with the endeavour gene prioritization software: for  <dig> genes the mkl approach performed significantly better than endeavour.

results of experiment 2: prioritization of prostate cancer genes by genomic data fusion. for each novel prostate cancer gene, the first row shows the error of auc values and the second row lists the ranking position of the prostate cancer gene among its  <dig> closet neighboring genes.

experiment 3: clinical decision support by integrating microarray and proteomics data
one of the main contributions of this paper is that the l <dig> mkl notion can be applied on various machine learning problems. the first two experiments demonstrated a ranking problem using 1-svm mkl to prioritize disease relevant genes. in the third experiment we optimized the l∞, l <dig>  and l <dig> -norm in svm mkl and lssvm mkl classifiers to support the diagnosis of patients according to their lymph node stage in rectal cancer development. the performance of the classifiers greatly depended on the selected features, therefore, for each classifier we compared  <dig> feature selection results . as shown in table  <dig>  the best performance was obtained with lssvm l <dig>  using  <dig> genes and  <dig> proteins. the l <dig> lssvm mkl classifier was also promising because its performance was comparable to the best result. in particular, for the two compared classifiers , the l <dig> and l <dig> approaches significantly outperformed the l∞ approach. we also tried to regularize the kernel coefficients in l∞ mkl using different θmin values. nine different θmin were tried uniformly from  <dig>  to  <dig>  and the changes in performance is shown in figure  <dig>  as shown, increasing the θmin value steadily improves the performance of lssvm mkl and svm mkl on the rectal cancer data sets. however, determining the optimal θmin was a non-trivial issue. when θmin was smaller than  <dig> , the performance of lssvm mkl l∞ remained unchanged, meaning that the "rule of thumb" value  <dig>  used in experiment  <dig> is not valid here. in comparison, when using the l <dig> based mkl classifiers, there is no need to specify θmin and the performance is still comparable to the best performance obtained with regularized l∞ mkl.

the table shows the error of auc in patient classification using microarray and proteomics data. in lssvm l∞, l∞ , and l <dig>  the regularization parameter λ was estimated jointly as the kernel coefficient of an identity matrix. in lssvm l <dig>  λ was set to  <dig>  in all svm approaches, the c parameter of the box constraint was set to  <dig>  in the table, the row and column labels represent the numbers of genes  and proteins  used to construct the kernels. the genes and proteins were ranked by feature selection techniques . the auc of loo validation was evaluated without the bias term b  because its value varied by each left out sample. in this problem, considering the bias term decreased the auc performance. the performance was compared among eight algorithms for the same number of genes and proteins, where the best values  are represented in bold, the second best ones in italic. the best performance of all the feature selection results is underlined. the table presents the  <dig> best feature selection results of each method. the complete experimental results containing  <dig> different numbers of genes and  <dig> numbers of proteins is available at http://homes.esat.kuleuven.be/~sistawww/bioi/syu/l2lssvm.html.

in lssvm kernel fusion, we estimated the λ jointly as a coefficient assigned to an identity matrix. since the number of samples is small in this experiment, the standard cross-validation approach to select the optimal λ on validation data was not tried. to investigate whether the estimated λ value is optimal, we set λ to  <dig> different values uniformly sampled on the log <dig> scale from - <dig> to  <dig>  we compared the joint estimation result with the optimal classification performance among the sampled λ values. the joint estimation results were found as optimal for most of the results. an example is illustrated in figure  <dig> for the integration of four kernels constructed by  <dig> gene features and  <dig> protein features. the coefficients estimated by the l∞-norm were almost  <dig> thus the λ values were very big. in contrast, the λ values estimated by the non-sparse l <dig> method were at reasonable scales.

experiment 4: clinical decision support by integrating multiple kernels
in the fourth experiment we validated the proposed approach on three clinical data sets containing more samples. on the endometrial and miscarriage data sets, we compared eight mkl algorithms with various norms. for the imbalanced pregnancy data set, we applied eight weighted mkl algorithms. the results are shown in table  <dig>   <dig>  and  <dig>  on endometrial data, the difference of performance was rather small. though the two l <dig> methods were not optimal, they were comparable to the best result. on miscarriage data, the l <dig> methods performed significantly better than comparing algorithms. on pregnancy data, the weighted l <dig> lssvm mkl and weighted l <dig> lssvm mkl performed significantly better than others. we also regularized the kernel coefficients using different θmin values on lssvm l∞ and svm l∞ mkl classifiers. the results are presented in figure  <dig>  figure  <dig> and figure  <dig>  as shown, the optimal θmin value differs across data sets thus the "rule of thumb" value of  <dig>  may not work for all the problems. for the endometrial and miscarriage data sets, the optimal θmin for both mkl classifiers is  <dig> . for pregnancy data set, the optimal θmin value for lssvm is  <dig> and for svm  <dig> . in comparison, on the miscarriage and pregnancy data set, the performance of the l <dig> algorithm is comparable or even much better than the best regularized l∞ algorithm. for the endometrial data set, though the optimal regularized l∞ lssvm and svm mkl classifiers outperform l <dig> classifiers, l <dig> methods still perform better than or as equal as the unregularized l∞ method.

results of experiment  <dig> data set i: classification of endometrial disease patients using multiple kernels derived from clinical data. the classifier with the best performance is shown in bold. the p-values are compared with the best performance using a paired t-test. the performance of classifiers is sorted from high to low according to the p-values.

results of experiment  <dig> data set ii: classification of miscarriage patients using multiple kernels derived from clinical data. the classifier with the best performance is shown in bold. the p-values are compared with the best performance using a paired t-test. the performance of classifiers is sorted from high to low according to the p-values.

results of experiment  <dig> data set ii: classification of pul patients using multiple kernels derived from clinical data. the classifier with the best performance is shown in bold. the p-values are compared with the best performance using a paired t-test. the performance of classifiers is sorted from high to low according to the p-values.

to investigate whether the combination of multiple kernels performs as well as the best individual kernel, we evaluated the performance of all the individual kernels in section  <dig> of additional file  <dig>  as shown, the clinical kernel proposed by daemen and de moor  <cit>  has better quality than linear, rbf and polynomial kernels on endometrial and pregnancy data sets. for the miscarriage data set, the first rbf kernel has better quality than the other seven kernels. despite the difference in individual kernels, the performance of mkl is comparable to the best individual kernel, demonstrating that mkl is also useful to combine candidate kernels derived from a single data set.

the effectiveness of mkl can also be justified by investigating the kernel coefficients optimized on all the data sets and classifiers. as shown in section  <dig> of additional file  <dig>  the kernel coefficients optimized by l∞ mkl algorithms were sparse whereas the l <dig> ones were more evenly assigned to different kernels. the best individual kernels of all data sets usually get dominant coefficient, explaining why the performance of mkl algorithms is comparable to the best individual kernels.

in this paper, the regularization parameter λ in lssvm classifiers was jointly estimated in mkl. since the clinical data sets contain a sufficient number of samples to select the λ by cross validation, we systematically compared the estimation approach with the standard validation approach to determine the λ values. as shown in table  <dig>  the estimation approach based on l∞ performed worse than the validation approach. this is probably because the estimated λ values are either very big or very small when the kernel coefficients were sparse. in contrast, the l <dig> based estimation approach yielded comparable performance as the validation approach. we also benchmarked the performance of lssvm mkl classifiers using  <dig> different static λ values on the data sets and the results are shown in section  <dig> of additional file  <dig>  in real problems, to select the optimal λ value in lssvm is a non-trivial issue and it is often optimized as a hyper-parameter on validation data. the main advantage of l <dig> mkl is that the estimation approach is more computational efficient than cross validation and yields a comparable performance.

comparison of the performance obtained by joint estimation of λ and standard cross-validation using lssvm mkl. as shown, the estimation approach based on l <dig> mkl is better than l∞ mkl. this is because when the kernel coefficients are sparse, the estimated regularization parameters λ are either very big or very small, which are usually not optimal values in lssvm. in contrast, the λ values estimated by l <dig> method are at normal scale and often close to the optimal values.

experiment 5: computational complexity and numerical experiments on large scale problems
overview of the convexity and complexity
we concluded the convexity and the time complexity of all proposed methods in table  <dig>  all problems proposed in this paper are convex or can be transformed to a convex formulation by relaxation. the lssvm sip formulation has the lowest time complexity thus it is more preferable for large scale problems.

convexity and complexity of all methods. n is the number of samples, p is the number of kernels, k is the number of classes, τ is the number of iterations in sip. the complexity of lssvm sip depends on the algorithms used to solve the linear system. for the conjugate gradient method, the complexity is between o and o  <cit> .

we verified the efficiency in numerical experiments, which adopts two uci digit recognition data sets  to compare the computational time of the proposed algorithms.

qp formulation is more efficient than socp
we investigated the efficiency of various formulations to solve the 1-svm mkl. as mentioned, the problems presented in  can be solved either as qclp or as socp. we applied sedumi  <cit>  to solve it as socp and mosek to solve it as qclp and socp. we found that solving the qp by mosek was most efficient . in contrast, the mosek-socp method costed  <dig> seconds and the sedumi-socp method took  <dig> seconds. this is probably because when transforming a qp to a socp, a large number of additional variables and constraints are involved, thus becoming more expensive to solve.

sip formulation is more efficient than qcqp
to compare the computational time of solving mkl classifiers based on qp and sip formulations, we scaled up the kernel fusion problem in three dimensions: the number of kernels, the number of classes and the number of samples. as shown in figure  <dig>  the sip formulation of lssvm mkl increases linearly with the number of samples and kernels, and is barely influenced by the number of classes. solving the sip based lssvm mkl is significantly faster than solving svm mkl because the former optimizes through iterations on a linear systems whereas the latter iterates over quadratic systems. for lssvm mkl, the sip formulation is also more preferable than the quadratic formulation. a quadratic system is a memory intensive problem and its complexity increases exponentially with the number of kernels and the number of samples in mkl. in contrast, the sip formulation separates the problem into a series of linear systems, whose complexity is only determined by the number of samples and less affected by the number of kernels or classes. as shown in step  <dig> of algorithm  <dig> , the coefficient matrix of the linear system is a combined single kernel matrix and is constant with respect to multiple classes, thus it can be solved very efficiently. we have also compared the cpu time of l∞ and l <dig> lssvm mkl on large data sets and their efficiency is very similar to each other.

discussion
in this paper we propose a new l <dig> mkl framework as the complement to the existing l∞ mkl method proposed by lanckriet et al.. the l <dig> mkl is characterized by the non-sparse integration of multiple kernels to optimize the objective function of machine learning problems. on four real bioinformatics and biomedical applications, we systematically validated the performance through extensive analysis. the motivation for l <dig> mkl is as follows. in real biomedical applications, with a small number of sources that are believed to be truly informative, we would usually prefer a nonsparse set of coefficients because we would want to avoid that the dominant source  gets a coefficient close to  <dig>  the reason to avoid sparse coefficients is that there is a discrepancy between the experimental setup for performance evaluation and "real world" performance. the dominant source will work well on a benchmark because this is a controlled situation with known outcomes. we for example set up a set of already known genes for a given disease and want to demonstrate that our model can capture the available information to discriminate between a gene from this set and randomly selected genes . given that these genes are already known to be associated with the disease, this information will be present in sources like text mining or gene ontology in the gene prioritization problem. these sources can then identify these known genes with high confidence and should therefore be assigned a high weight. however, when trying to identify truly novel genes for the same disease, the relevance of the information available through such data sources will be much lower and we would like to avoid anyone data source to complete dominate the other. given that setting up a benchmark requires knowledge of the association between a gene and a disease, this effect is hard to avoid. we can therefore expect that if we have a smoother solution that performs as well as the sparse solution on benchmark data, it is likely to perform better on real discoveries.

for the specific problem of gene prioritization, an effective way to address this problem is to setup a benchmark where information is "rolled back" a number of years  prior to the discovery of the association between a gene and a disease . given that the date at which the association was discovered is different for each gene, the setup of such benchmarks is notoriously difficult. in future work, we plan to address this problem by freezing available knowledge at a given data and then collecting novel discoveries and benchmarking against such discoveries in a fashion reminiscent of casp   <cit> .

the technical merit of the proposed l <dig> mkl lay in the dual form of the learning problems. though in the literature the issue of using different norms in mkl is recently investigated by kloft et al.  <cit>  and kowalski et al.  <cit> , their formulations are based on the primal problems. in our paper, the notion of the proposed l <dig> method is discussed in the dual space, which differs from regularizing the norm of coefficients term in the primal space. we have theoretically proven that optimizing the l <dig> regularization of kernel coefficients in the primal problem corresponds to solving the l2-norm of kernel components in the dual problem. clarifying this dual solution enabled us to directly solve the l <dig> problem as a convex socp. moreover, the dual solution can be extended to various other machine learning problems. in this paper we have shown the extensions of 1-svm, svm and lssvm. as a matter of fact, the l <dig> dual solution can also be applied in kernel based clustering analysis and regression analysis for a wide range of applications. another main contribution of our paper is the novel lssvm l <dig> mkl proposed for classification problems. as known, when applying various machine learning techniques to solve real computational biological problems, the performance may depend on the data set and the experimental settings. when the performance evaluations of various methods are comparable, but with one method showing significant computational efficiency over other methods, this would be a "solid" advantage of this method. in this paper, we have shown that the lssvm mkl classifier based on sip formulation can be solved more efficiently than svm mkl. moreover, the performance of lssvm l <dig> mkl is always comparable to the best performance. the sip based lssvm l <dig> mkl classifier has two main "solid advantages": the inherent time complexity is small and the regularization parameter λ can be jointly estimated in the experimental setup. due to these merits, lssvm l <dig> mkl is a very promising technique for problems pertaining to large scale data fusion.

CONCLUSIONS
this paper compared the effect of optimizing different norms in multiple kernel learning in a systematic framework. the obtained results extend and enrich the statistical framework of genomic data fusion proposed by lanckriet et al.  <cit>  and bach et al.  <cit> . according to the optimization of different norms in the dual problem of svm, we proposed l∞, l <dig>  and l <dig> mkl, which are respectively corresponding to the l <dig> regularization, average combination, and l <dig> regularization of kernel coefficients addressed in the primal problem.

six real biomedical data sets were investigated in this paper, where l <dig> mkl approach was shown advantageous over the l∞ method. we also proposed a novel and efficient lssvm l <dig> mkl classifier to learn the optimal combination of multiple large scale data sets. all the algorithms implemented in this paper are freely accessible on http://homes.esat.kuleuven.be/~sistawww/bioi/syu/l2lssvm.html.

authors' contributions
all authors conceived the project and design. sy performed the theoretical analysis, programmed the algorithms, analyzed the data and wrote the paper. tf investigated sip and implemented sip formulations for svm and lssvm. ad preprocessed the rectal cancer, endometrial, miscarriage and pregnancy data sets. ad also provided the code of clinical kernel construction. lct provided the data sources, disease relevant benchmark genes and prostate cancer genes for gene prioritization application. lct also compared the performance of prioritization on endeavour system. js is the promoter of tf. bdm is the promoter of ad and sy. ym is the promoter of sy and lct. all authors read and approved the manuscript. ad is research assistant of the fund for scientific research - flanders  js and ym are professor and bdm a full professor at the katholieke universiteit leuven, belgium. all authors read and approved the manuscript.

appendix
algorithm  <dig> : sip-svm-mkl

obtain the initial guess 

while 

comment: τ is the indicator of the current loop

return 

algorithm  <dig> : sip-lssvm-mkl

obtain the initial guess 

while 

comment: τ is the indicator of the current loop

return 

supplementary material
additional file 1
the supplementary material contains  genomic data sources used in experiment  <dig> and 2;  mkl extensions for weighted svm and weighted lssvm;  kernel functions used in the paper;  optimal kernel coefficients and performance of individual data sources in prostate cancer genes prioritization;  performance of individual kernels in experiment 4;  optimal weights assigned on each individual kernels in experiment 4;  the effect of cost function regularization parameter λ of lssvm in experiment 4;  experimental results using mkl algorithms based on other norms.

click here for file

 acknowledgements
the work was supported by research council kul: goa ambiorics, coe ef/ 05/ <dig> symbiosys, prometa, several phd/postdoc and fellow grants; fwo: phd/postdoc grants, projects g. <dig> , g. <dig> , g. <dig> , g. <dig> , g. <dig> , g. <dig> , research communities; iwt: phd grants, gbou-mcknow-e, gbou-ana, tadbioscope-it, silicos; sbo-bioframe, sbo-moka, tbmendometriosis, tbm-iota <dig>  o&o-dsquare; belgian federal science policy office: iuap p6/25; eurtd: ernsi: european research network on system identification; fp6-noe biopattern; fp6-ip e-tumours, fp6-mc-est bioptrain, fp6-strep strokemap.
