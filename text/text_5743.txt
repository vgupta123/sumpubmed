BACKGROUND
in metazoans, during endoplasmic reticulum  stress, the endoribonuclease  inositol requiring enzyme 1a  initiates removal of a 26 nt region from the mrna encoding the transcription factor xbp <dig> via an non-canonical mechanism . this causes a transitional open reading frame-shift to produce a potent transcription factor, xbp1s, that induces expression of numerous downstream genes in response to er stress as part of the unfolded protein response   <cit> . in addition, spliceosome-independent cytoplasmic splicing, as a part of the unfolded protein response pathway, has been described in yeast  <cit>  where hac1p was found to be the sole splicing substrate of ire <dig>  the mechanism of ire1α-mediated rna-splicing is likely conserved in all eukaryotes as well  <cit> .

in recent years, many popular methods have been developed to identify novel splice sites in rna-seq data, including tophat  <cit>  and alt event finder  <cit> . a detailed review on the limitations of several other tools for identification of alternative splicing events  was described previously  <cit> . in short, indeed none of these existing tools were suitably designed for detecting the type of non-canonical sometimes called non-canonical splice sites generated by ire1α-targeted xbp <dig> mrna splicing. given that non-canonical splicing events of short mrna regions occurring within the cytosol have not yet been investigated using next-generation technologies at a genome-wide level, cutting-edge bioinformatics methods of detecting such targets are needed to quickly discover such splicing events in a patient-specific manner in order to derive future therapeutic value.

in order to supply the medical and scientific fields with such a tool we previously developed a novel bioinformatics pipeline method, named read-split-walk  <cit>  for detecting non-canonical, short, splicing regions using rna-seq data. we applied the method to er stress-induced ire1α heterozygous and knockout mouse embryonic fibroblast  cell lines to identify ire1α targets of which the 26 nt non-canonical splice site in xbp <dig> was detected as the most prominent splice target by our initial rsw pipeline in heterozygous  samples, not mapped in the negative control ire1α knockout  samples for both thapsigargin  and dithiothreitol  treated experiments. in our previous study, we also compared the xbp <dig> results from our approach with results using the alignment program bwa  <cit> , bowtie <dig>  <cit> , star  <cit> , exonerate  <cit>  and the unix “grep” command. although our previous rsw method gave better results overall than the above-mentioned approaches, we realized that rsw’s running speed needed to be further improved in order to handle the massive amount of data in other experiments . in addition, we wanted to test, under different combinations of parameters, how and where reported spliced regions would differ. therefore, we have designed a newer algorithm which we call “read-split-run”  that can process rna-seq data in a more efficient manner with flexible parameters. we also proposed a linear regression equation under the assumption of the generalized linear model for rsr parameters that can automatically predict the number of spliced regions given any parameter settings for a particular experiment.

we compared our rsr algorithm with the above-mentioned alternative splicing events detection tools using metrics of how each tool ranks xbp <dig> as the top cleavage target and its presence and absence in ire1α+/− and ire1α−/− mef samples. we have also compared our rsr pipeline and other tools to process a human encode dataset and reported their statistics of running performance and sensitivity .

RESULTS
the web interface features of rsr
in addition to providing the source code for download, the current web site of rsr  allows users to use rsr by using a web form to upload data to the rsr server. after a job is submitted the server runs the pipeline and sends an email with a download link when the results are ready. the web form allows selection of a flexible combination of parameters. for example, users can select “mode ”, “reads type ”, “experimental replicates ”. the input files must be in fastq format. based on the user’s initial selection, the pre-processing step will automatically reflect the number of input files needed. users also have the options of checking the quality encoding and read length for short read input sequence files. the pipeline moves to the next step only if the read lengths for all input files are confirmed to be equal. a screenshot for the rsr web interface is shown in fig.  <dig> fig.  <dig> a screenshot for the read-split-run web interface



the spliced regions detected by the rsr pipeline for mouse mef rna-seq data
the identified spliced regions by the rsr pipeline for five cases with different combinations of parameters when processing ire1α and ire1α samples in both experiments  are shown in table  <dig>  the detailed information of spliced regions identified by rsr for tg and dtt treated samples under different parameter settings are reported in additional files  <dig> and  <dig>  the attached additional files  <dig> and  <dig> give statistics from running the new pipeline on mouse tg and dtt data with various parameter settings for ms, md, and bb on a system with two intel xeon e5- <dig>  <dig> ghz processors .table  <dig> comparison of total number of junctions identified by rsr for five cases from tg and dtt treated samples

8
11
11
15
18
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
5
5
5
8
8
the bolded numbers show parameters with different test settings



the spliced regions detected by the rsr pipeline for human encode data
the total number of spliced regions and running time of rsr on each chromosome of human encode rna-seq data are shown in fig.  <dig>  the analysis for chr <dig> was not performed due to memory constraints on the machine running the rsr pipeline. additional file  <dig> shows the number of spliced regions identified by our rsr algorithm for each chromosome of the human encode rna-seq dataset.fig.  <dig> number of junctions and clock time reported by rsr for the human encode rna-seq sample . blue bar: junctions; red bar: clock time; purple bar: reads processed 



comparison of detected spliced regions between rsr and other tools
we also compared our rsr algorithm with other ngs based alternative splicing events detection tools . our read-split-run algorithm outperformed the other two software in the context of ranking xbp <dig> gene as the top cleavage target present in ire1α+/− but absent in ire1α−/− mef samples. in particular, we have ran tophat and alt event finder on both tg and dtt samples of mef cell line rna-seq data. tophat identified  <dig> reads supporting xbp <dig> in tg het and  <dig> reads for tg ko samples. for dtt samples, tophat reported a total of  <dig>  and  <dig> . although the number of reads supporting xbp <dig> reported by tophat in tg het sample is slightly higher than our rsr method , our rsr accomplished a better turnaround  when compared to tophat  in the dtt dataset. surprisingly, tophat also reported reads supporting xbp <dig> in ko samples , which are false positive reads. alt event finder did not identify any reads in supporting 26 nt xbp <dig> spliced regions. the comparison results between rsr and other tools in running rna-seq data from mef cell line is listed in table  <dig> table  <dig> number of reads for supporting xbp <dig> 26 nt spliced regions reported by rsr and other tools



when applying these tools on human encode rna-seq data, we found that the running speed and splicing regions detected by these tools are different. due to the memory constraint of our server, we ran rsr by splitting the genome alignment files into individual chromosomes. it took rsr less than half an hour to run most chromosomes except for chromosome  <dig> and  <dig>  in contrast, it took tophat roughly 20 h to run the encode rna-seq dataset. alt event finder only required 3 h time to process the dataset, but the result was not informative for identifying short non-canonical spliced regions. indeed, we have designed the web-based interface to and results reporting of our rsr pipeline to be as user-friendly as possible. figure  <dig> shows comparison results between rsr and other tools in identifying number of spliced regions for the human encode rna-seq dataset that we have tested.fig.  <dig> comparison results in identifying number of spliced regions between rsr, alt event finder, tophat tools. blue bar: tophat; red bar: rsr; green bar: alteventfinder



the general linear model for rsr algorithm
we generated a general linear model for both tg and dtt samples in the context of the total number of unique spliced regions  identified by the rsr algorithm . the model is derived from the results based on many pairs of het and ko test cases  with different combinations of three rsr algorithm parameters , maximum candidate distance , and read mapping region boundary buffer size ). we therefore obtained two linear regression equations  as shown in fig.  <dig>  it is clear that the numbers of spliced regions identified by rsr decreases as ms values increase. this is true because the numbers of split pairs fed into the second step of bowtie decrease when ms values increase. the parameter of md plays less critical roles as we expected. the bb parameter seems to follow the correlation  for the tg dataset, but not for the dtt dataset. we would like to increase test cases for the dtt sample to see whether the trend will change.fig.  <dig> linear regression equations for mouse mef tg and dtt experiments



discussion
parameters consideration in rsr pipeline
our proposed model of taking different parameter combinations to run the bowtie aligner and rsr algorithm could be applied to other species. however, different parameter combinations would predict different outcomes  for different species, even for different experiments. in our pipeline, we chose three parameters  to test how different combinations affect the prediction outcome. specifically, we have run a number of test cases  with different combinations and used the results to generate linear regression equations. to increase the robustness of our rsr algorithm, it is ideal to perform a large-scale simulation study in order to look for the optimal combination. typical questions remain to be answered: what would be the trade-off between lower/upper bound split size vs alignment sensitivity? what is the optimal consolidation slip/buffer size? more or fewer supporting reads will be reported if different cut-off criteria are applied, and these can be adjusted to achieve the desired balance between sensitivity and specificity in specific applications.

we chose three parameters , maximum candidate distance , and read mapping region boundary buffer size ) for the rsr algorithm because the number of reads supporting spliced regions could be different given different combination values of these parameters. our glm was generated by running a number of test cases. a smaller ms and bigger md and bb could increase the number of junctions reported. empirically ms could be set to approximately 1/ <dig> of the read length, and should also be larger than 8 bp to ensure the split half is not too short to be mapped accurately. an estimated md value could be determined according to the average gene length of species tested. therefore, users could choose their customized md value according to the species on which their experiments were performed. this criterion is determined according to the assumption that the split pairs supporting the junction are often mapped onto the same gene. finally, bb could be set to a number that should not reflect a large boundary variation .

the file deletion of our rsr algorithm
we noticed, by splitting reads into multiple read half pairs, the size of the result files substantially increased when the human encode dataset was processed. to reduce the hard drive storage of large data files, we automatically delete files throughout the pipeline as they are no longer needed. for example, if the split step only needs to utilize the unmapped read datasets, the alignment files generated from the first step of bowtie are deleted. after the second step of bowtie is finished, all unmapped files will be deleted and only the alignment file will be kept for the next rsr step. the rsr pipeline can also compare spliced regions between samples and output reported regions side-by-side.

rsr running speed, sensitivity, and specificity
in this study, we have developed a newer pipeline  of rsw with an improved running speed and proposed a general linear model for the algorithm. we used rsr to process different combinations of running parameters for the mef and human encode rna-seq data. we have compared our rsr algorithm with two popular ngs based alternative splicing events detection tools  and reported the spliced regions detection results. neither of these two tools achieved better sensitivity  than our rsr algorithm in identifying reads supporting the xbp <dig> 26 bp spliced region. this can be explained in part due to the fact that alt event finder processes the mapped reads to report splice regions yet does not consider unmapped reads in the analysis input. moreover, the current version of alt event finder focuses on identifying exon skipping events only. tophat reported canonical exon-exon splice sites as well. the spliced junctions identified by tophat and our rsr are reported in table  <dig>  tophat reported more junctions than our rsr. but many of them were known junctions or false positive ones. it is clear that the common junctions detected by both tools or overlapping rate is low. indeed, the overlapping rate is even smaller for results from the human encode dataset.table  <dig> the overlapping spliced junctions identified by tophat and our rsr



in our original rsw paper, we also compared the xbp <dig> results from our approach with results using the alignment program bwa  <cit> , bowtie <dig>  <cit> , star  <cit> , exonerate  <cit>  and the unix “grep” command. although our rsw method gave better results overall than the above-mentioned approaches, comparison results also suggested that reads supporting removal of the 26 nt intron from xbp <dig> mrna were not fully acknowledged. a study using in vitro cleavage assay combined with microarray analysis reported  <dig> additional mrnas as ire1α cleavage targets  <cit> . the discovery shed light on the existence of other possible targets. a future version of the algorithm will focus on rescuing these false negative reads in order to achieve a better sensitivity.

applying rsr on human encode rna-seq data
the discovery of a new set of non-canonical splicing events in humans is important not only because of the obvious potential for novel alteration of targeted transcript function, but also the potential for the resulting excised sequences to function as silencing rnas associated with particular disease states. in addition, the frequency of these novel splicing events could be subject to altered regulation in some individuals, resulting in identifiable splicing profiles associated with the risk of certain diseases. we used encode rna-seq datasets to train our rsr algorithm and hope to identify additional targets and elucidate their splicing patterns. results should eventually provide unique insight of elucidating how short non-canonical spliced sequences act their biological functions in the context of relevant biological processes and diseases.

CONCLUSIONS
the positive control for our application, the xbp <dig> 26 nt non-canonical splice site, was clearly detected in het samples but not in the ko control samples from tg and dtt treated mef experiments, and was reported again as the top cleavage target for an ire1α target splice site. although we have tested the rsr using human encode datasets, our algorithm could also be easily extended for prediction of spliced regions for other species under any given parameter settings.

