BACKGROUND
plants are a type of natural product that includes trees, herbs, edible foods, among others  <cit> . they are known to be abundant sources of chemicals with potential therapeutic effects  <cit> . furthermore, since natural compounds have been empirically proven to have relatively fewer side effects and unwanted reactions, plants have been widely used for thousands of years for the treatment of diverse diseases and their symptoms  <cit> . because of these advantages of plants, many studies have been carried out assessing the effectiveness of plants against diseases , and the number of patents related to pharmaceutical natural products including plants has continuously increased  <cit> . to further enhance such efforts, identification of active substances or chemical compounds in plants is important because many diseases can be relieved or treated by chemicals in plants that control the activities of proteins related to diseases  <cit> .

in this respect, many researchers have tried to construct public databases containing plant-related information, especially plant–chemical relationships that represent which compounds are included in which plants. in general, such data were manually collected from books, published results, and empirically widely known facts. one of the most representative databases containing plant–chemical relationships is the traditional chinese medicine  database@taiwan  <cit> , which is a 3d small molecular structure database of tcm for virtual screening or molecular simulation. although this database currently contains  <dig>  compounds from  <dig> different herbs, animal products, and minerals, which were manually collected from medical texts and scientific publications, only a small fraction of plants used for medicinal purposes are included in the database. tcmid  <cit>  is one of the largest tcm databases providing tcm-related data, including prescriptions, herbs, herbal ingredients, targets, drugs, diseases, and relationships between these entities. this database was assembled by applying text mining methods to biomedical articles and by integrating other public databases such as tcm-id  <cit> , tcm database@taiwan  <cit> , hit  <cit> , stitch  <cit> , omim  <cit> , and drugbank  <cit> . however, even in tcmid, only  <dig> plants  are currently provided, which is relatively small compared to the more than  <dig>  plants defined in the ncbi taxonomy database  <cit> .

with the continuous accumulation of biomedical articles, it is possible to extract such plant–chemical relationships from the literature if proper corpora and text mining  models are available. until now, few tm systems that extract information about chemicals contained in plants from biomedical articles have been developed  <cit> . jensen et al.  <cit>  proposed an integrated text mining system based on manually constructed corpora for analyzing associations between plants and health effects. they extracted plant–chemical and plant–disease relationships from biomedical articles using text mining models and then integrated these two relationships to infer chemical–disease relationships. although jensen et al.  <cit>  has presented a text mining model to extract plant–chemical relationship, a corpus used to text-mine the relationship is not available for public use. generally, developing a corpus requires significant efforts because several annotators need to manually identify entity names, trigger words, and positive or negative relationships in the articles. because most text mining methods require an annotated corpus to learn models for detecting entity mentions and for extracting relationships between entities, providing a corpus specific for each domain is important  <cit> . therefore, a plant–chemical corpus with a proper format such as the bioc xml format  <cit> , which is a common interchange format widely used in the bionlp community, is important for constructing and evaluating future text mining systems that extract plant–chemical relationships from texts.

our study aims to develop a corpus for plant–chemical relationships. here we describe processes for constructing the corpus for two entities of plants and chemicals and their plant–chemical relationship. in addition, we construct and evaluate a rule-based model, which automatically extracts plant–chemical relationships from articles. in this work, “plant–chemical relationships” are classified into two types:  a positive relationship means that a plant contains a chemical, i.e., a chemical is derived from a plant or a chemical is a part of the molecular structure of a plant ;  a negative relationship means that there is no information specifying that a plant contains a chemical . the corpus currently consists of  <dig> plant entities,  <dig> chemical entities, and  <dig>  plant–chemical relationships , which are drawn from  <dig> sentences in  <dig> pubmed abstracts. our corpus will be useful for developing new natural language processing  tools related to plant–chemical relationships.

related works
automatic extraction of semantic relationships between domain-specific entities from articles requires recognition of the entity names and syntactic analysis of texts. for this task, an annotated corpus is necessary. thus, we review several corpora and text mining systems related to chemicals and plants.

the linnaeus corpus  <cit>  annotates entities related to species and organisms, including plants, from  <dig> full-text articles in the pmc open access document data set. it was built for tools to recognize and to normalize species names and uses a dictionary-based approach with the ncbi taxonomy data. the species corpus  <cit>  remedies the shortcomings of the linnaeus corpus, which annotates entities at the full-text level, by annotating entities at the abstract level to increase variability of species names. they selected  <dig> abstracts from journals in the following eight categories: bacteriology, botany, entomology, medicine, mycology, protistology, virology, and zoology. the corpus currently contains a total of  <dig> abstracts with annotated information of species mentions. the corpus was used for the development and evaluation of their ner tool based on the dictionary provided by the ncbi taxonomy database  <cit>  for detecting species names.

the chemdner corpus  <cit>  is the most comprehensive data for the development of named entity recognition  systems in the chemical domain. it contains a total of  <dig>  chemical entity names from  <dig>  pubmed abstracts, which were manually annotated by expert chemistry curators. each abstract was carefully selected based on document selection criteria to be representative of a wide range of chemistry-related fields. each chemical entity names was assigned to one of the following seven different subtypes: abbreviation, family, formula, identifier, multiple, systematic, and trivial. the authors of the corpus also provided detailed guidelines for identifying entity names with a proper entity class. the chemdner corpus and the proposed annotation guidelines, which can be expanded by users, are publicly available so that they can be used for researchers developing tm systems in the area of chemicals. however, the corpus does not contain any relationship information.

li et al.  <cit>  performed manual annotation of chemical and disease entities and relationships between them for the biocreative v challenge of recognizing disease name entities and extracting chemical-induced disease relationship. the corpus in the bioc xml format currently contains  <dig>  pubmed articles with  <dig>  chemicals,  <dig>  diseases, and  <dig>  chemical–disease interactions, all manually annotated. they used some annotation tools including pubtator  <cit>  and ner tools such as dnorm  <cit>  and tmchem  <cit>  to accelerate manual annotation. the strength of this corpus is that chemical–disease relationships were extracted from both within a sentence and across sentence boundaries. along with  <cit> , there are several chemical- or drug-related corpora such as comparative toxicogenomics database corpus  <cit>  and a corpus contained in the pharmspresso database  <cit> . however, there are so far no publicly available corpora for plant–chemical relationships.

jensen et al.  <cit>  proposed an integrated text mining approach and chemoinformatics analysis to enhance understanding of how plant-based diets  affect human health and disease prevention. they accumulated  <dig>  plant–phytochemical edges from  <dig>  compounds and  <dig>  plants and  <dig>  plant–disease associations from  <dig>  plants and  <dig>  human disease phenotypes using a naive bayes classifier. these relationships were extracted from  <dig> million pubmed abstracts. using chemical–disease relationships inferred from text-mined relationships, they applied chemoinformatics methods to analyze the molecular-level association of a plant-based diet to diseases. for the development and evaluation of the text mining model, an in-house corpus for each relationship type was also constructed. however, the corpus is not publicly available.

methods
sentence collection and preprocessing
this section describes selection of candidate sentences before constructing the corpus as shown in fig.  <dig>  for this task, we automatically extracted  <dig> , <dig> pubmed abstracts using pubtator  <cit> , which provides functions for users to download all pubmed abstracts. then, the following preprocessing steps were performed on the collected pubmed abstracts.
fig.  <dig> the workflow of corpus construction. the corpus was constructed as follows:  we collected pubmed abstracts from the pubtator database;  we applied ner tools, including lingpipe and chemspot, to pre-annotate plant and chemical names;  we extracted co-occurrence sentences that contain at least one plant and chemical name;  we randomly selected candidate sentences, where the numbers of positive and negative sentences were set to be approximately the same, and also split them into corpus units;  we manually annotated candidate corpus units with our guidelines and also conducted later annotation to harmonize disagreements after annotators finished their annotation tasks; and  we converted annotated corpus units to the bioc xml format



for pre-annotating plant names in abstracts, a plant name dictionary was first constructed using public data from tcmid  <cit>  and ncbi taxonomy  <cit> . the dictionary contains  <dig>  plant names in english, chinese, and latin and it is available to download at our corpus web site. after constructing the dictionary, lingpipe  <cit> , a dictionary-based exact-matching ner tool, was applied to all collected abstracts to locate plant names. chemical names were annotated using chemspot  <cit> , which is a specialized tool for locating chemical names that covers trivial names, drugs, abbreviations, and molecular formulas in texts. for the annotation of chemical identifiers , three types of ids were used: mesh, chembl, and cas registry number.

using pre-annotated abstracts from step one, we collected  <dig>  co-occurrence sentences in which at least one plant name and at least one chemical name co-occur. the rest of the sentences that do not contain either a plant name or a chemical name were excluded.

in this step, the main annotator selected, from  <dig>  co-occurrence sentences, candidate sentences to be manually annotated by annotators in the “annotating the corpus” step. of the co-occurrence sentences, the number showing a negative relationship was larger than the number showing a positive relationship. because positive relationships are more informative than negative relationships for showing that a plant contains a chemical, we constructed balanced numbers of positive and negative relationships. hence, the main annotator randomly selected candidate sentences from the co-occurrence sentences and manually classified each sentence into positive or negative classes, where the numbers of positive and negative sentences were set to be approximately the same. in addition, the main annotator validated whether all the entity mentions and their ids in sentences were correctly annotated by ner tools. if contents such as mentions and ids were incorrectly annotated, then the main annotator manually corrected them. when multiple pairs of plant and chemical names were found in a candidate sentence, each plant–chemical pair was classified into a positive or negative relationship; we call each pair “a corpus unit,” because more than one relationship can be found in a candidate sentence. for example, in the third line in fig.  <dig>  the candidate sentence has one chemical name and two plant names, which can produce two plant–chemical pairs . in this case, two different candidate corpus units were created from a single sentence . likewise, we split all candidate sentences into candidate corpus units.


fig.  <dig> annotation example in excel file. the candidate corpus units were exported in excel format so that annotators could easily annotate the corpus. the first and second columns represent annotated plant names and ids contained in each sentence shown in the eleventh column. the sixth and seventh columns show annotated chemical names and ids. annotators should check whether plant and chemical names and their ids are correctly annotated. if they are incorrectly annotated, then annotators should write the letter “x” in the fifth, tenth, or both columns. also, they should leave comments in the fourth, ninth, or both columns. for the thirteenth column, annotators should determine whether the relationship in the sentence is positive or negative. if the sentence contains a positive relationship, the weak and strong triggers should be written in the last two columns



in contrast with other existing corpora  <cit> , which annotate relationships at the abstract level, we collected the relationships at the sentence level using the above steps because we aimed to expand the diversity of plant names. in many plant-related abstracts or documents, the same plant terms appear multiple times, which may affect the quality of the corpus.

the candidate corpus units from candidate sentences selected in the sentence collection and preprocessing step were exported to an excel format as described in fig.  <dig> and then annotated by annotators according to the annotation guidelines described in the next subsection.

annotation guidelines
annotation guidelines are defined to support validating ner results extracted by ner tools for entity names and to determine class labels of plant–chemical relationships during the annotation process. the guidelines were continuously updated by the main annotator during the sentence collection and preprocessing step. because annotators need to check both ner results and relationships between two entities, the guidelines were categorized for the entity annotation and the relationship annotation.

guidelines for entity annotation
entity names in the corpus were first annotated by ner tools. however, due to inaccuracy of the ner tools, a fraction of annotated names might not be plants or chemicals, while actual plants or chemicals might be missed. although these mistakes were initially checked by the main annotator, the other annotators also examined entities of plants and chemicals based on the guidelines.

the general guidelines for both entities are as follows: 
annotators only examine a plant and a chemical for each corpus unit, colored in green and red, respectively .

because entity names were pre-annotated using ner tools, annotators should check whether there are missed or incorrectly annotated names and ids. ids are annotated as “na” when there are no proper ids.

acronyms should be annotated. when it is not clear whether an acronym indicates a plant or chemical name, an annotator annotates an acronym if original long words are found in the corresponding pubmed abstract.



for plant names, the guidelines are as follows: 
taxonomy and tcmid ids are allowed.

plant names whose actual contextual meaning do not represent plants should not be annotated .

plant names include specific plants and a family of plants.

unnecessary adjectives and nouns next to plant names should not be annotated unless they are included in the plant dictionary .



for chemical names, the guideline is as follows: 
mesh, chembl, and cas ids are allowed.

if multiple chemicals are linked together, annotators should consider them as a single name .

receptors, transporters, genes, and proteins should not be annotated as a chemical name .



guidelines for relationship annotation
annotators need to annotate positive and negative relationships between plants and chemicals, which are defined as follows: 
positive relationship: indicates that a plant contains a chemical; a chemical is derived from a plant, or the chemical is part of the molecular structure of the plant  is a sesquiterpenoid extracted from ginkgo bilobaleaves). in the example, we find a positive relationship between ginkgo biloba  and bilobalide .

negative relationship: indicates that a corpus unit does not specify that a plant contains a chemical .



the guidelines for the relationship annotation are as follows: 
annotators classify a sentence containing a plant and a chemical into a positive or negative relationship.

when a chemical name contextually indicates one of the extraction solvents for plant extracts, annotators should classify this case as “negative relationship.” 
– “chemicalextracts of plant”



metabolism is a process in a set of chemical reactions that modifies a chemical molecule into another molecule for storage or for immediate use in another reaction. according to the definition of metabolism, if a sentence represents that more than one chemical is involved in the metabolism process of a plant, annotators should regard all of them as ingredients of the plant. 
“chemical, identified as a metabolite of brassinolide in cultured cells of the plant, as well as 26-norcastasterone and 26-nor-6-deoxocastasterone were synthesized”



synthesis is a process that produces an organic compound in living things. by the definition of synthesis, if a sentence indicates a synthesis phenomenon between a plant and a chemical, annotators should regard this case as an ingredient of a plant. 
“synthesis ofchemical was detected only in plant”



if a sentence explains the positive relationship between a derived plant from an original plant and a chemical, annotators should consider that both the derived plant and the original plant contain the chemical. 
“plantin tomatocontainschemical”

“snapdragon in plantcontainschemical”



annotators should consider grammatical structures for deciding relationship types. in the example sentence below, there are two chemical names  and three plant names . as positive relationships, the former anthocyanin belongs to tomato and the latter anthocyanin belongs to blackberries and blueberries. 
“chemicalaccumulation inplantand at concentrations comparable to the anthocyanin levels found in blackberries and blueberries”

“anthocyanin accumulation in tomato and at concentrations comparable to the chemicallevelsfound inplantand blueberries”

“anthocyanin accumulation in tomato and at concentrations comparable to the chemicallevelsfound inblackberries and plant”



annotators should annotate both a weak trigger term and a strong trigger term when a corpus unit has a positive relationship. the weak trigger can be more than one term representing a plant–chemical relationship. on the other hand, the strong trigger should be a single word that is thought to be the most representative word explaining a plant–chemical relationship. in the example of the sentence “the chemicalcontentswere highest inthe plant,” “were highest in” and “in” are the weak trigger term and the strong trigger term, respectively.



annotating the corpus
this subsection describes the annotation process for plants, chemicals, and their relationships in all the candidate corpus units as shown in fig.  <dig>  the annotation task for the corpus was performed by three annotators with a basic knowledge of biology and traditional chinese medicine. the main annotator performed sentence collection and preprocessing, built the annotation guidelines, and carried out the first annotation of the corpus. two assistant annotators participated in the corpus annotation.

the corpus annotation work went through two phases  because we divided the three annotators into two groups . based on the guidelines, annotators in group  <dig> and group  <dig> manually annotated the different sets of candidate corpus units. a corpus constructed through the two phases is the main corpus in our work and is called “the primary corpus” hereafter to distinguish it from an additional corpus developed as described in the next section, constructing a rule development corpus and a rule-based model. the annotation task was conducted by manually filling in fields of the excel file as shown in fig.  <dig>  where “plantname,” “p.id,” and “p.off” represent plant name, its identifier, and offset of the plant name in the text, respectively, and “chemname,” “c.id,” and “c.off” represent chemical name, its identifier, and offset of the chemical name in the text. details about other fields are also explained as follows: 
p.check: write the letter “o” when all of the contents in “plantname,” “p.id,” and “p.off” shown in fig.  <dig> are correctly annotated and write the letter “x” when any of them are incorrectly annotated.

p.note: leave comments about incorrectly annotated contents in “plantname,” “p.id,” and “p.off.” this field is optional.

c.check: write the letter “o” when all of the contents in “chemname,” “c.id,” and “c.off” shown in fig.  <dig> are correctly annotated and write the letter “x” when any of them are incorrectly annotated.

c.note: leave comments about incorrectly annotated contents in “chemname,” “c.id,” and “c.off.” this field is optional.

label: write “pos” or “neg” according to the relationship type between a plant, colored in red, and a chemical, colored in green, in the “sentence” column. “pos” indicates that a plant includes a chemical while “neg” means that there is no positive relationship between them.

weak trigger: write trigger terms, which represent the positive relationship between a plant and a chemical, in as broad a range as possible. for example, the weak trigger in the first corpus unit in fig.  <dig> can be “were the highest in,” whereas annotators write “na” when the “label” column is denoted as “neg.” this field is required only when the sentence contains a positive relationship between plant and chemical. leave this field empty when the “label” is annotated as “neg.”

strong trigger: unlike the weak trigger, the strong trigger should be the single word regarding by the annotators as the most meaningful word that represents the positive relationship between a plant and a chemical. for example, the strong trigger in the first corpus unit in fig.  <dig> can be “in,” whereas annotators write “na” when the “label” column is denoted as “neg.” this field is required only when the sentence contains a positive relationship between plant and chemical. leave this field empty when the “label” is annotated as “neg.”



after all annotators completed the annotation task, the main annotator collected annotation results to classify agreements or disagreements.

constructing a rule development corpus and a rule-based model
we developed a rule-based model to extract plant–chemical relationships from articles. for this task, the main annotator additionally constructed “a rule development corpus,” which is not a duplicate of the primary corpus described in the annotating the corpus subsection. then, the performance of the rule-based model was tested against the primary corpus.

to build the rule development corpus, the main annotator performed the same procedures described in the sentence collection and preprocessing section and followed the annotation guidelines. the rule development corpus was then used to generate key rules for the model. to infer general grammar rules, we analyzed dependency parse trees , which were obtained by applying the stanford dependency parser to corpus units in the rule development corpus.
fig.  <dig> an example of the result of the stanford dependency parser. a tree represents dependency types of each token when applying the stanford dependency parser to the following sentence: “about  <dig> mg of fb <dig> were obtained from  <dig> g cultured corn.” in the dependency parse tree, words in square brackets express dependency types of the linked tokens below. for instance,  means a passive nominal subject, and it is a noun phrase that is the syntactic subject of a passive clause, “about  <dig> mg of fb1”. detailed descriptions of the various dependency types are available in the stanford typed dependencies manual provided by the stanford nlp



for example, the tree in fig.  <dig> shows the dependency structure of a passive sentence, “about  <dig> mg of fb <dig> was obtained from  <dig> g cultured corn.” the noun phrase, “about  <dig> mg of fb <dig> ” is connected with “nsubjpass” type, which is a passive nominal subject of a passive clause. the noun phrase, “ <dig> g cultured corn,” is connected with “pobj” type, which is an object of a preposition. then, we can observe that there is a positive relationship between the noun phrase containing a plant name  and the noun phrase containing a chemical name  through the trigger, “were obtained from.” based on such observations, we define a verbal trigger rule when the trigger type is a transitive form, which is defined below. for new inputs that may have a similar dependency structure with fig.  <dig>  the rule-based model compares the dependency tree of the new inputs with the verbal trigger rule by checking the following:  if there is a noun phrase containing a chemical name, which is connected with “nsubjpass” type;  if there is a noun phrase containing a plant name, which is connected with “pobj” type that is an object of a preposition; and  if the root term “obtained,” which is linked with “nsubjpass” and “prep,” belongs to one of trigger words defined in our trigger dictionary.

based on observing dependency parse trees of the rule development corpus like the example above, our rule-based model contains six types of rules:  a verbal trigger rule;  a prepositional trigger rule;  a relative trigger rule;  an apposition trigger rule;  a copula trigger rule; and  a compound noun trigger rule. to clarify the rules, we constructed rule specifications that explain the rules in detail . here, we review each of the rule specifications. note that np <dig> means a noun phrase containing a plant name and np <dig> specifies a noun phrase in which a chemical name appears.
n
p
0
v
tr
n
p
1
[
pomegranate
derived from the tree punica granatum] [
contains] [anthocyanins
]. 
n
p
1
v
tr
pp
n
p
0
tr and n
p
0
[about  <dig> mg of 
fb1
] [
were obtained
] [
from
] [800g cultured
corn
]. 
n
p
0
v
tr
pp
n
p
1
tr and n
p
1
[the volatile oil  of
ginger
] [
consists
] [
of
] mainly [mono and
sesquiterpenes
]. 
n
p
0
p
p
tr
n
p
1
[
switchgrass
] [
as
] [a sole
carbon
 source]. 
n
p
1
p
p
tr
n
p
0
[
saponins
] [
from
] [the flowers of
panax notoginseng
]. 
n
p
1
r
tr
pp
n
p
0
tr and n
p
0
[
anthocyanins
] [
isolated
] [
from
] [
black soybean
seed coat]. 
n
p
0
r
tr  n
p
1
with [thermally degraded
feverfw
 powder] [
containing
] [less contents of 
parthenolide
] no built-up antiserotonergic responses were observed after one month. 
n
p
0
a
p
tr
n
p
1
p
 <dig> and n
p
whereas that in pd is [
soybean oil
][
,
] [a source of unsaturated 
fatty acids
p
 <dig> and n
p
[
delta9-tetrahydrocannabinol
 ][
,
] [the major active component of 
marijuana
]. 
n
p
0
c
tr
n
p
1
p
 <dig> and n
p
[
haematococcus pluvialis
] [
is
] [one of the potent organisms for production of 
astaxanthin
]. 
n
p
1
c
tr
n
p
0
p
 <dig> and n
p
[the
calcium
 contents] [
were
] the highest in [the 
papaya
]. 
n
p
0
c
n
tr
n
p
1
to study the protective effect of [
panax notoginseng
] [
saponins
 ]. 
the rule-based model consists of six types of rules. the first column shows the specification name. each specification has more than one rule structure shown in the third column. in the rule structure, n
p
 <dig> means the noun phrase containing a plant name, and n
p
 <dig> represents the noun phrase in which a chemical name appears. the component marked with “tr” represents a trigger word described in the fourth column. we also defined several constraints if necessary



a verbal trigger rule: as shown in table  <dig>  the specification for the verbal trigger has three types according to the trigger type. the first rule structure is defined as np0vtrnp <dig>  where the trigger type of vtr is a transitive active form such as “contain” and “include.” the second rule structure consists of np1vtrppnp <dig>  in this case, the trigger type is a transitive passive form such as “be contained” and “be extracted.” thus, a preposition denoted as “pp” is required to be located between vtr and np <dig>  which is the constraint. in the third rule structure, vtr should be an intransitive verb such as “consist.” therefore, any preposition such as “of” should be placed next to vtr in the rule structure, np0vtrppnp <dig> 

a prepositional trigger rule: the rule structure has the following two cases: np0pptrnp <dig> and np1pptrnp <dig>  both np <dig> and np <dig> are allowed to be located on the left and right side of the trigger. any preposition can be placed in pptr.

a relative trigger rule: this consists of two types of specifications according to the trigger type. the first rule structure is defined as np1rtrppnp <dig>  where rtr is the past participle form such as “isolated” and “extracted,” and any preposition must be located between rtr and np <dig>  the second rule structure is described as np0rtr  np <dig>  where the trigger type rtr is a gerund form such as “containing” and “having.” note that, in this case, the preposition such as “of” should be located between rtr and np <dig> when the trigger word is the gerund form of the intransitive verb such as “consisting.”

an apposition trigger rule: the rule structure has the following two cases: np0aptrnp <dig> and np1aptrnp <dig>  in this specification, triggers can be any token whose dependency type is apposition. for example, a comma between np <dig> and np <dig> can indicate that np <dig> is in apposition with np <dig> or vice versa. furthermore, we simply set a constraint that a token distance between np <dig> and np <dig> is less than ten to avoid the case that does not represent a relationship between them.

a copula trigger rule: the rule structure has the following two cases: np0ctrnp <dig> and np1ctrnp <dig>  in this specification, a trigger “ ctr” can be any verb regardless of tense if its dependency type is copula. to reduce false positives, we also set a simple constraint that there must be a token distance between np <dig> and np <dig> of less than ten.

a compound noun trigger rule: the rule structure is np0cntrnp <dig>  where the trigger cntr is a single white space between np <dig> and np <dig>  for example, “aloe emodin” indicates that emodin is one of the ingredients in aloe.



we manually created a list of trigger words for each of the six types of rules that express a relationship between plant and chemical . the list of trigger words is also available to download at the corpus web site.
see trigger words in the passive form section above 


overall process for extracting plant–chemical relationships
in fig.  <dig>  we describe the overall process of the rule-based model when new texts are given to the system. when biomedical abstracts are input to the model, for example, ner tools including chemspot  <cit>  and the lingpipe  <cit>  dictionary chunker are applied to annotate plant and chemical names in the new texts, respectively. then, annotated abstracts are split into sentences using the lingpipe sentence splitter. next, the stanford dependency parser is applied to each split sentence to obtain dependency parse trees . the dependency parse trees are then used to check whether the structure of each of the dependency parse trees matches one of the rules defined in our model  and also whether there is a trigger word that belongs to our list . finally, our system predicts a class label that represents the relationship type  between the identified plants and chemicals.
fig.  <dig> the overall method for extracting plant–chemical relationships from abstracts. to extract plant–chemical relationships from biomedical articles, our model annotates plant and chemical names in the articles using lingpipe and chemspot, respectively. then, the system splits annotated abstracts into sentences using the lingpipe sentence splitter to apply the stanford dependency parser, which provides dependency parse trees for each sentence. finally, the rule-based model checks the grammar structure of the dependency parse trees and the trigger words in sentences to extract relationships



RESULTS
by applying the steps in the “sentence collection and preprocessing” subsection, we accumulated a total of  <dig>  candidate corpus units from  <dig> candidate sentences, which were obtained from  <dig> abstracts. the candidate corpus units were divided into phase  <dig>  containing  <dig> corpus units, and phase  <dig>  containing  <dig> corpus units, and then annotators in group  <dig> and group  <dig> annotated the phase  <dig> units and phase  <dig> units, respectively. as a result,  <dig> corpus units out of  <dig>  candidate corpus units were agreed upon by the annotators. the remaining  <dig> corpus units were disagreed upon. the annotators discussed these disagreement units in order to reach consensus about the annotation of entities, relations, and triggers. after the discussion,  <dig>  corpus units consisting of  <dig> positive relationships and  <dig> negative relationships were finally obtained. the corpus includes  <dig> plant names and  <dig> chemical names. for easy access and use, we converted the corpus into bioc xml format . the corpus provides information about the gold-standard sentences with annotated plant and chemical names along with their ids, locations of entity names, weak/strong triggers only for positive relationships, and class labels indicating whether the sentence includes a positive or negative relationship.
fig.  <dig> example of our corpus units in bioc xml format. the corpus contains information about gold-standard sentences with annotated plant and chemical names along with their ids, locations of entity names, trigger terms only for positive relationships, and class labels . the corpus data we provide in our web site are currently divided into three types:   <dig> primary corpus units from annotation phases  <dig> and 2;   <dig> later-annotation corpus units after harmonizing disagreements; and   <dig> rule development corpus units



inter-annotator agreement 
to assess the accuracy of the corpus, we calculated the iaa scores using simple percent agreement and cohen’s kappa statistic. the simple percent agreement is calculated as follows: × <dig> %. cohen’s kappa is the most frequently used method for measuring the overall agreement between two annotators, and it is generally regarded as a more robust measurement than the simple agreement calculation. according to  <cit> , kappa values within the range  <dig> to  <dig> % are considered as “substantial” agreement, and values between  <dig> and  <dig> % constitute “almost perfect” agreement.

tables  <dig> and  <dig> show overall iaa scores for annotations. in table  <dig>  using the simple percent agreement, the overall agreement scores were  <dig>  and  <dig>  % for the annotated entities and triggers, respectively. although entity names for plants and chemicals were pre-annotated using ner tools and checked by the main annotator, annotators additionally checked whether pre-annotated entity names, their ids, and locations of entity names were correct in case of any remaining ner errors. when the annotators agreed on entity names, their ids, and locations of entity names, it is considered as an agreement between annotators. we also checked whether annotators selected the same weak and strong triggers explaining the positive relationship for a given plant–chemical pair. in addition, we measured the degree of agreements for annotations of the relationship between plant and chemical that are positive or negative. when the  <dig>  candidate corpus units from  <dig> candidate sentences were given to annotators,  <dig> out of  <dig> annotated relationship labels were agreed upon by the annotators. using the cohen’s kappa statistic, the overall iaa score was  <dig>  % for the annotated relationship labels, which can be considered “substantial” agreement according to  <cit> . table  <dig> shows the iaa scores for the case where the same annotation indicates that annotators are in agreement on both entities and relationship labels for each corpus unit. the overall iaa agreement score for this case was  <dig>  % using the cohen’s kappa statistic.


disagreements
after the annotation tasks,  <dig> out of  <dig>  candidate corpus units were disagreed upon among the annotators due to the following reasons: subjective interpretation of sentences, misunderstanding of the origin of ingredients, and disregarding guidelines. to harmonize opinions among annotators, annotators performed an additional annotation phase for the disagreed-upon corpus units and specified reasons for their decision. then, the main annotator collected only the discrepancies that were still in disagreement even after the additional annotation phase, and annotators again discussed the discrepancies to reach consensus on the annotation. as a result, we reached agreement on  <dig> corpus units from  <dig> disagreements, and they were added to our plant–chemical corpus dataset. three types of major disagreement cases are introduced in the following. 
example  <dig>   chemical  is  trigger several plants of the family plant that are commonly used as food. 
for the corpus unit in example  <dig>  one annotator assigned a negative relationship due to misinterpreting the meaning of the sentence. actually, the sentence includes a positive relationship between the plant “cruciferae” and the chemical “allyl isothiocyanate” because they are closely linked with the trigger “a constituent of.”



example  <dig>   <dig> -dichloropropene  was evaluated as a potential alternative for the widely used soil fumigant  chemical   trigger  plant crops in china. 
for the corpus unit in example  <dig>  one annotator interpreted the chemical “methyl bromide” as one of the ingredients originating from the plant “cucumber.” however, the chemical “methyl bromide” is a powerful pesticide for cultivating cucumber crops, not an original component of the plant. as such, misunderstanding of the origin of ingredients can induce disagreement cases.



example  <dig>  the authors studied the changes in subjective symptoms of menopause in  <dig> hungarian women who had been treated with an  chemical extract  trigger  plant . 
for the corpus unit in example  <dig>  one annotator annotated it as a positive relationship between the plant “cimicifuga racemosa” and the chemical “isopropanol.” in fact, as described in the guidelines, the chemical “isopropanol” is used in a common extraction method for deriving active ingredients from plants. in this case, annotations between annotators were different due to disregarding the guidelines.





evaluating the rule-based model
we constructed the rule development corpus consisting of  <dig> corpus units  from  <dig> sentences, and this corpus is also provided at corpus website. the rule-based model was developed based on the rule development corpus. we measured the performance of the rule-based model using  <dig> corpus units in the primary corpus. the  <dig> corpus units that are inputted to the rule-based model already contain annotation information for entity names, triggers, and their locations in the texts. then, the model performs the following steps for a given input corpus:  apply the stanford dependency parser to the corpus units to obtain dependency parse trees;  check whether there are dependency parse trees that are structurally matched to one of rules defined in the model;  seek trigger words from the sentence only if dependency parse trees of corpus units are matched to one of the rules in the previous step; and  if the trigger word is detected, the system recognizes that there is a positive relationship between plant and chemical for the corpus. finally, we obtained predicted class labels  of  <dig> corpus units and compared them with the originally annotated class labels.

as a result, as shown in table  <dig>  the rule-based model achieved an overall f-measure of  <dig> %. the f-score for phase  <dig> was relatively lower than that for phase  <dig> because corpus units in phase  <dig> included more diverse variations of grammar structures that were not defined in the rule-based model. of  <dig> corpus units, we found that there were  <dig> false positives and  <dig> false negatives. false negative errors were mostly due to two reasons:  the absence of rules in the model and  the absence of trigger words in the model. for instance, consider “tobacco-specific nitrosamines.” in this case, the rule-based model could not identify it as positive because our model did not contain a grammar structure that can represent “plant-specific chemical,” and also, the trigger word  was not defined. in another example, “3-propanal ,” a grammar structure that allows a plant–chemical relationship through brackets was not defined in our model. false positive errors were mainly attributed to misunderstanding of semantic meaning in the rule-based model. for example, consider the following phrase: “dichloromethane extract of feverfew.” in this case, the model predicted it as positive by the prepositional trigger rule. however, dichloromethane is one of the methods for extracting active components from plants but not an ingredient of feverfew. for the next example: “ammonia treatment of rice straw,” the model syntactically predicted it as positive although the semantic meaning is that ammonia was used to store rice straw at high moisture content and to kill weed seeds, indicating that ammonia was not contained in rice straw.


we performed an additional evaluation of the rule-based model by applying it to  <dig> randomly selected pubmed abstracts. the abstracts contain a total of  <dig> co-occurrence sentences containing both plant and chemical names. two annotators manually annotated  <dig> corpus units from  <dig> co-occurrence sentences. when we applied the rule-based model to the  <dig> newly annotated corpus units, it achieved an f-score of  <dig>  % . this new corpus contains  <dig> positive and  <dig> negative relationships. because the new corpus was constructed at the abstract level, the ratio of positive and negative sentences is different from the primary corpus in our work, where the numbers of positive and negative relationships are similar. although it contains more negative relationships, the performance of the rule-based model is similar to that of phase  <dig> in the primary corpus, showing the rule-based model can be used for a corpus at the abstract level as well as a corpus at the sentence level.

discussion
in this study, we constructed a plant–chemical corpus that can facilitate the development of a relationship extraction system for collecting plant–chemical relationships from texts. thus, we have introduced guidelines for annotating sentences that represent relationships between plants and chemicals and also described how we constructed the corpus. as a result, we have identified a total of  <dig>  plant–chemical corpus units from  <dig> gold-standard sentences that were selected from  <dig> pubmed abstracts.

in recent nlp studies, machine learning approaches are more dominantly employed and frequently perform better than rule-based approaches for many nlp tasks  <cit> . however, the rule-based approach has some advantages; for instance, it is easy to incorporate domain knowledge and to fix the cause of errors although it requires extensive manual labor  <cit> . in addition, in the process of constructing general rules by analyzing sentences, domain knowledge can be accumulated while machine learning approaches usually work as a black box. in our work, with a relatively small number of  <dig> corpus units in the rule development corpus, we developed the rule-based model for extracting plant–chemical relationships. its performance achieved an f-measure of  <dig> % on  <dig> corpus units. for comparison, we employed the turku event extraction system   <cit> , which is a support vector machine based text mining system. although tees was originally developed for extracting relationships between genes and biological events, it can be modified for extracting any binary relationship. we trained tees with the same  <dig> corpus units included in the rule development corpus. because tees requires a development set, the  <dig> corpus units that are agreed upon among annotators after resolving the disagreements, was used for the development set. we applied  <dig> corpus units in the primary corpus to the model. this resulted in an f-measure of  <dig>  % on the corpus units, which is poor compared to the rule-based model. this is because the training set was small. hence, we again trained and evaluated the tees model using a ten-fold cross validation on a larger set of  <dig>  corpus units, including the following:   <dig> corpus units from the primary corpus;   <dig> corpus units that are agreed upon among annotators after harmonizing the disagreements; and   <dig> rule development corpus units. note that  <dig>   <dig>  and  <dig> corpus units were used as training, development, and test sets, respectively, for the performance measurement in the ten-fold cross validation. as a result, it achieved an f-measure of  <dig>  %. in this respect, it is possible to apply our corpus data to various machine learning methods to achieve better performance.

CONCLUSIONS
our future work is to develop and apply a text mining model to the prediction of plant–chemical relationship in all the abstracts in pubmed based on the corpus developed in this work. this is challenging work because we need to improve ner models and the relationship prediction model by combining the rule-based model and a machine learning approach. it also requires validating the final accuracy of plant–chemical relationships predicted from all abstracts. when this future work is successful, we expect that we can obtain a large number of plant–chemical relationships. with the increasing importance of natural products, knowledge about active compounds in herbs has become significant. numerous diseases can be treated by herb compounds, and various medicines, cosmetics, and other products have widely used herbal compounds as their main components. thus, we believe that our research provides an important step related to herbs or natural products in text-mining studies.

