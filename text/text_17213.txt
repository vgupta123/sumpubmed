BACKGROUND
to address functional requirements or interact with other biological molecules, proteins undergo structural changes of variable degree, varying between distinct overall conformations, of which only some are usually determined experimentally . this is caused by the difficulties in the obtention of x-ray quality diffracting crystals, and consequently, it limits the knowledge on the dynamic behavior of the biomolecular machinery in important biological processes. accordingly, the comprehension of the intermediate steps is crucial to overcome these difficulties, and provide a useful tool to fill the gaps that escape to bench-dependent experimental approaches so far. however, protein motion simulation has always been a troublesome problem, mostly because of its high demanding computational requirements. precise simulations based on molecular dynamics are usually limited to small molecules or to the use of supercomputers or distributed networks  <cit> . however, other procedures such as ab initio or rosetta methods do not provide information related to protein kinematics. this information is essential if we want to understand the mechanisms that proteins use to exert their motion and hence, their functions  <cit> .

recently, and thanks to the information available related to protein science, new approaches have been proposed in the literature  <cit>  to simulate protein motion. these approaches are not based on either quantum mechanisms, or biology related roots, but deal with mechanism and robot kinematics principles  <cit> . one of the main advantages of these new methodologies is their small computational cost. one of the first applied methods is probabilistic roadmap method   <cit> . this method consists in discretizing the protein configurational space. then, each position is evaluated against a scoring function  and it is considered either correct or incorrect. once every position has been checked it is possible to trace a path connecting neighboring positions to obtain the protein motion. the prm is used on a wide variety of protein motion studies. in  <cit>  it is proposed to use this approach to the simulation of ligand-protein interaction. in those works, it is proposed to consider the degrees of freedom of the ligand, as well as some degrees of freedom of the protein . in  <cit> , a similar approach, considering only the ligand degrees of freedom, is proposed. in  <cit> , it is studied how restrictions to the possible motions of the protein backbone affect the search algorithms used for prm. although this approach yields quite good results, the need of computing all possible configurations of the protein structure makes this procedure computationally costly, especially for big proteins.

one important approach used for protein simulation, is related to the normal mode analysis  implemented in mechanisms and robotics. this analysis provides information related to vibrational modes of mechanisms, useful for the dynamic analysis of their structure  <cit> . this approach, computationally much less expensive than prm, may be applied to protein structures  <cit> . using this methodology, information related to possible movements of a protein structure around its current configuration is obtained. thus, although computationally less expensive, the information provided is not complete. new procedures combine both nma and prm to obtain large conformational changes in proteins  <cit> . in this approach nma results are used to guide the prm algorithms and reduce their computational cost. kinetostatic compliance method  <cit>  makes use of several kinematic theories to simulate protein motion. firstly, it takes advantage of zero notation  <cit>  to simplify protein structure definition during the procedure. secondly, it also implements ball and rods modelization, considering both bond lengths and angles as constant. to execute the simulation process the protein potential energy field is transformed into equivalent forces and torques applied to the protein chain. basing on the applied torques, it calculates the dihedral angle increments for the next step of the simulation.

in this paper, we present a new methodology based on our previous works  <cit>  for protein motion simulation. the objective of the procedure is to morph a protein from one known configuration to another known one, providing reliable and quick information in relation to protein kinematics and movement with a very low computational cost, . the simulation procedure presented in this paper is composed of four independent strategies. the first one consists in a normalization procedure aimed to homogenize equivalent bond distances and angles in the protein structure  <cit> . the second one is a main simulation procedure entrusted to advance in the simulation obtaining valid structures  <cit> . a third strategy is a procedure intended to reduce protein’s potential energy by changing side chains orientation. and the final one detects secondary structures among the protein chain. the novelty of the proposed procedure consists, on the one hand, in the implementation of the side chain orientation strategy and the secondary structure detection method, and on the other hand, in the simultaneous combination of the aforementioned four strategies. consequently, the approach provides a computationally efficient simulation tool for protein motion simulation. to validate the results, three indicators are measured through the simulation process:  backbone atom root mean square deviation to compare obtained structures global similarity,  ramachandran plots, to ensure proteins biological nature and  protein’s potential energy to verify that no steric clashes have occurred during the simulation  <cit> .

methods
preparing protein structure for kinematics modeling
ball and rods models provide model structures valid to apply mechanism theorems for protein simulation  <cit> . most protein structure models whose target is protein simulation incorporate some simplifications. cα meshes are used in  <cit>  to produce a reduced model with an acceptable computational cost. rigid bond and angle approaches are used in the same way in  <cit> . normal mode analysis , usually mixes rigid bonds with springs to produce the structure needed for modal analysis  <cit> . side chains are also simplified in various ways to reduce the computational cost associated to them. in  <cit>  it is proposed to treat side chains as spheres filling an equivalent space. in  <cit> , the authors propose to adjust the size of side chains to reduce its influence on the simulation, and later on, resize them progressively.

in this paper we propose an all atom model, based on ball and rods approach, in which some simplifications are considered to reduce the overall computational cost. in particular, protein degrees of freedom are reduced to rotations around the dihedral angles. every other possible atom movement resulting from bond stretching or non-proper torsions is despised. besides the relative position among peptide plane atoms is maintained constant during the simulation process. the peptide bond angle ω value is also limited to 0° or 180°. regarding side chains, according to the proposed all atom model, every atom should be taken into account. in relation to side chains’ degrees of freedom, to reduce the computational cost of the process, only the rotation around the cα-cβ bond is considered.

as previously stated, the procedure simulates protein motion between two known structures. most structural data for protein simulation come from experimentation. thus, these data need to be compared with the proposed model to verify that all the hypotheses are fulfilled. one of the major drawbacks of trying to use kinematic theories to protein simulation is the difference between proteins and mechanisms structures. in mechanism kinematics the linkages do not change their structural form or characteristics during the movement, unless the objective of the mechanism lies precisely in that requisite  <cit> . however we must bear in mind that proteins are composed by atoms that atoms that are bonded by electromagnetic and covalent forces, thus, in the case of proteins, there is no need to maintain constant neither bond length nor bond angles during the conformational change.

therefore a normalization procedure is applied to experimental data with the purpose of homogenizing equivalent bond distances and angles in the protein structure. the approach is based on two different normalization processes, peptide plane normalization and bond length normalization.

peptide planes are normalized to get exactly 0° or 180° peptide bond angles. this complies with the proposed hypothesis of rigid peptide planes among the simulation  <cit> . the objective of normalizing the peptide planes is to assign to ω
i
 the angles 0° or 180°, as it is proposed in the kinematic model. to do this, cα
i
 and cα
i+ <dig> atoms’ coordinates are fixed. then, using the least square method, the mean plane is calculated using the local coordinates of cα
i
,c
i
,o
i
,n
i+ <dig> and cα
i+ <dig> atoms. fixing cα
i
 and cα
i+ <dig> atoms’ coordinates allows to maintain protein backbone continuity during the normalization process, as the normalization of one peptide plane does not alter the one that has been already normalized.

local reference systems to determine relative locations of amino acids atoms have also been used in  <cit> . here, cα
i
 is selected as the origin of the local coordinate system. the straight line connecting cα
i
 and cα
i+ <dig> defines u
i
 axis direction. w
i
 axis direction is defined by the perpendicular direction to the plane containing cα
i
 and c
i
 atoms and u
i
 axis. finally, v
i
 completes the right-handed reference system. the advantage of using this local reference system, is that the middle plane will always contain u
i
 axis, so the least square problem is reduced to the calculus of the slope of this plane. this is made by the following formula: 

  s=2+2+ <dig> 

where v
j
,w
j
 are the local coordinates of c
i
,o
i
,n
i+ <dig> atoms and a is the slope of the plane to be calculated. to find the value of a, eq.  is differentiated with respect to a obtaining the result in eq. : 

  a=wci·vci+woi·voi+wni+1·vni+1vci2+voi2+vni+ <dig> 

once the slope of the plane has been defined, atoms c
i
, o
i
 and n
i+ <dig> are projected onto it .

in a second stage, distance constraints are applied to ensure that every bond length is identical between two same type of atoms. to apply these distance constraints, we need to define standard bond lengths. for this matter, reference bond lengths from the amber force field are used  <cit> . distance constraints are sequentially applied from the fist atom of the protein chain to the last one. to apply the distance constraint, the formulation proposed in  <cit>  is used. thus, using j as a reference atom, the distance constraint is applied to the bond between j and i atoms according to the following expressions: 

  ri1-rj1=dji 

  ri0-rj1×ri1-rj1= <dig> 

where rj <dig> and ri <dig> represent the position vectors of the atoms j and i respectively before the application of the corresponding distance constraint, whereas ri <dig> is the vector determining the new position of atom i. d
j
i
 defines the theoretical mean value of the bond length. once the distance constraint has been applied to i atom, every subsequent atom of the protein chain is translated by ri1-ri <dig> 

as eq.  defines a sphere of radius d
j
i
 it is necessary another constraint to univocally determine the position of i atom. this new condition determines that the new position fo i atom must lie on the straight line defined by the actual positions of i and j atoms. in figure  <dig>  the application of the distance constraint to c
i
  and n
i+ <dig>  is represented.

to test the viability of the normalization process, type-c ppase protein from s. gordonii is used, which is supposed to suffer a conformational change from a “closed”  to an “open”  structure upon binding of pyrophosphate . sgppase exists as an homodimer in solution, in which each subunit is composed of two distinct domains. the n-terminal domain consists of a six-stranded parallel b-sheet flanked by extended loops on one side and a helical subunit on the other one. in the absence of ligands, the c-terminal domains occlude the corresponding active sites. binding of ppi or substrate analoges to the active site of the n-terminal domain presumably triggers a conformational change that liberates the inhibition imposed by the c-terminal region  <cit> . three strategies have been tried, applying distance, planes and sequential  normalization processes. the results for the normalization of the initial and final reference conformations of the movement are shown in the table  <dig> where they are compared against the protein before the normalization.

rmsd


l 

simulation procedure for dynamic dihedral angle increments adjustment
the main target of the methodology described in this paper is to simulate the protein motion between two known positions. to that aim, we have simulated the conformational changes suffered by three different proteins,  type-c inorganic pyrophosphatases;  troponin c; and  calmodulin, ranging from the displacement of an entire domain to the reorientation of few secondary structure elements. the proposed model of the protein structure permits considering only the dihedral angles as proteins degrees of freedom to produce the motion. this configuration resembles the protein with a very long serial robot. thus, the motion of the protein can be defined as a sequence of incremental steps applied on these dihedral angle values, from the initial to the final conformations. data structures of the proteins under study are taken from the protein data bank , which are used as input data for the procedure. the simulations were carried out using a software developed by our research group called gimpro  <cit> . several options are implemented in the software as it is stated subsequently. the software is able to read and save protein data with .pdb file format. it also produces text files with the evolution of both studied protein’s potential energy and rmsd evolution. finally the software creates a .pdb file containing the obtained simulation. this file is compatible with other visualization programs like pymol in order to produce higher quality renderizations of the protein movement.

the process uses dihedral angles increment data, Δϕ
i
 and Δψ
i
, to complete the simulation. this data is obtained by calculating dihedral angle values of the final conformation ϕifandψif and subtracting dihedral angle values of the initial conformation ϕi0andψi <dig> as stated on eq. . the total increment in each dihedral angle is divided by p, the number of intermediate conformations to be computed. for each dihedral angle, the direction that requires the minimum angular increment to reach the final position is defined as its starting rotation direction. 

  Δϕi=ϕif-ϕi0p;Δψi=ψif-ψi0p 

to assess the quality of the obtained structures, root mean square deviation , ramachandran plots  <cit>  and potential energy will be evaluated during the simulation process. regarding the root mean square deviation, backbone atoms are considered for its calculus. to evaluate proteins’ potential energy, amber potential force field, with the parameters proposed by cornell  <cit>  has been chosen. the use of the three indicators ensures the global similarity between the structures , the non-existence of steric clashes  and the biological sense of the obtained structures . intermediate data structures for rmsd comparison are obtained from the morph server  <cit> .

in figure  <dig> the flux diagram of the simulation procedure is shown. the first step is to calculate protein’s initial conformation potential energy e <dig>  to obtain the next protein’s conformation, the procedure starts rotating the dihedral angles of the protein in sequential order, from the first amino acid to the last one. one important characteristic of the process is that it stores the increment produced by each rotation on the protein’s potential energy as Δeik, where k is the actual step number. once the process has finished the actual step’s proteins’ potential energy is obtained .
k
-th step of the procedure.

to avoid steric clashes, the process checks if e
k
 has exceeded an admissible threshold. this energy threshold is defined by ε
k
 and the protein’s potential energy value e <dig>  in every iteration, e
k
 value must be below e0+e0·ε
k
. to calculate ε
k
 the following formula is used: 

  εk=k·εp 

where ε determines the maximum change percentage in the protein’s potential energy. as defined before, p is the total number of steps of the simulation. if e
k
 has exceeded the imposed threshold for the current step, the procedure detects the dihedral angle that has generated the higher energy increment. once detected, the applied rotation is rolled back. the procedure then applies a new rotation with a reduced increment value . again, protein’s potential energy is calculated and checked against the admissible threshold. if the threshold is exceded, the new reduced rotation is undone and the dihedral angle is blocked for the current step. this process is repeated for each dihedral angle of the protein chain.

during the simulation, the number of times each degree of freedom is blocked is saved. when this number reaches an m value , the procedure considers that the dihedral angle cannot rotate in its assigned direction, changing the rotation direction of this dihedral angle  for the next n steps . each dihedral angle is independently studied by the procedure, each one with its own record of m and n parameters.

as the procedure has the capacity to change both dihedral angle increment values and rotation direction, once per step, if a degree of freedom has been blocked, p is incremented by  <dig>  this is done with the purpose of better adjusting the energy tolerance of each step which is calculated as a function of p ).

procedure for side chain orientation
in the strategy on charge of orienting the side chains, the main objective is to achieve a low computational cost. therefore, in this first stage, only the rotational degree of freedom of cα
i
-cβ
i
 bonds will be considered .another target is to reduce the potential energy value of the protein. this objective may lead to an energy minimization algorithm that could produce an unacceptable increment on the computational cost. to avoid this problem, as it will be explained subsequently the proposed procedure is based on the guidelines shown in figure  <dig> 
c

α


i

-
c

β


i 

 bond rotational degree of freedom.

the procedure starts calculating the optimal rotation direction for each side chain. to do so, each side chain is rotated in both possible directions calculating the produced energy increments ei′ and ei′′ in the process. the selected rotation direction is the one that has produced the higher potential energy decrement, or if both rotation directions have increased the potential energy value, the direction that has produced the lesser energy increment is selected. accordingly the rotation direction for each side chain is independently defined.

once the rotation directions are defined, the procedure proceeds to rotate 2° each side chain in its optimal direction. the value has been defined to ensure that no displacement on the edges of long side chains produces steric clashes. after this rotation, it is checked that if the obtained protein’s potential energy ek′ is lower than the main simulation process produced structure’s one . on the contrary, the process undoes the rotations and new rotation of 1°. again, obtained protein’s potential energy ek′ is compared with e
k
. if again, ek′ is higher than e
k
, the process undoes the applied rotations and rotates only those side chains that have produced a decrement on the protein’s potential energy. after the last rotation the values of ek′ and e
k
 are checked again, and in the case that ek′ is higher than e
k
 last applied rotations are undone, leaving the structure in the initial stage before starting the side chains orientation procedure.

it could be considered unnecessary to validate the last check between ek′ and e
k
 since only those side chains that have produced a decrement on protein’s potential energy have been rotated. however, the latter verification must be done because each side chain rotation direction has been independently calculated, without considering the influence of neighboring side chains rotations. a decrement on the potential energy due to the rotation of a single side chain does not ensure that when every other side chain is rotated that decrement is maintained.

procedure for secondary structure detection by dihedral angle parameters evaluation
the procedure presented in this paper to detect secondary structures uses the dihedral angle values, which are obtained in any simulation program. a previous step to carry out this strategy is to perform a classification of each amino acid attending to their dihedral angle values as follows: 

• candidate: an amino acid is considered as a candidate when its dihedral angles are inside a zone of the ramachandran plot belonging to a secondary structure.

• stable: an amino acid is considered stable when the procedure has checked that it belongs to a secondary structure.

• unstable: an amino acid is considered unstable when it cannot be classified as candidate or stable.

to define an amino acid as a candidate, a tolerance has been incorporated with respect to the theoretical values of the dihedral angles. this tolerance has been adjusted to obtain the best possible results, obtaining a final value of 30° for each type of secondary structure.once the process has classified each amino acid as candidate, stable or unstable, it is possible to start searching for secondary structures. in an initial step, the first candidate amino acid of the protein chain is found and selected. after that, it is checked if the two subsequent amino acids are candidates of the same type of secondary structure. in this case, the three amino acids are classified as stable amino acids. the process continues checking if the next amino acids belongs to the same type of secondary structures, until an unstable amino acid or an amino acid of another type of secondary structure is found. this process is repeated until every amino acid of the protein has been checked. in figure  <dig> a diagram of the secondary structure detection process is shown.

the use of a high tolerance resulted in unsatisfactory results, specifically on coil parts of the protein structure. as stated, one of the conditions for an amino acid to be set as a stable amino acid is to be part of a chain of three consecutive amino acids of the same type of secondary structure.this condition reduces the detection of secondary structures on coils of the protein structure, allowing to maintain the tolerance value.

to test the results seven proteins have been analyzed. the proteins under study have allowed us to validate the procedure with different protein sizes and different secondary structure distributions. the obtained results have been compared with each proteins’ structural data, available on the protein data bank . the results are shown on table  <dig> 

α
β
α
β
it can be conclude that the strategy requires a very low computational cost, needing only 8ms to complete the secondary structure detection on the biggest protein, 3sza. thus, its implementation on the simulation procedure does not increase the overall computational cost.once both procedures have been explained, it is essential to assess how to implement them on the simulation process. the aim of developing both processes, side chain orientation and secondary structure detection procedures, is to keep them independent from the main simulation process. this way, if any of them fails to achieve its objective, i.e., detecting no secondary structure or not reducing the protein potential energy value, the main simulation process can continue. for this reason, the proposed sequence of the strategies is shown in figure  <dig> as it can be seen in figure  <dig>  the secondary structure detection procedure is executed prior to the main simulation process. this allows to extract the degrees of freedom already located on secondary structures, therefore, reducing the number of degrees of freedom from the first step. on the other hand, side chains orientation procedure is carried out after the main simulation process. in the simulation process it is required to obtain a valid structure prior to reducing its energy making use of the side chains orientation procedure. if the latter procedure successes on reducing the protein’s potential energy value, then the main simulation process has a higher amount of available energy for the next step.

RESULTS
each of the simulation strategies will be applied to three different proteins. the first protein, type c inorganic pyrophosphatase  from streptococcus gordonii protein, pdb entry 1k <dig> . with the proposed modelization, the protein has  <dig> atoms with  <dig> degrees of freedom. the next protein is the troponin c protein, pdb entry 1zac . again, applying the proposed modelization the protein has  <dig> atoms and  <dig> degrees of freedom. finally, the last protein is the calmodulin protein, pdb entry 3cln  with  <dig> atoms and  <dig> degrees of freedom. to test the aforementioned strategies the following type of combinations are proposed: 

• type 1: general simulation procedure and the side chain orientation strategy will be applied.

• type 2: the three simulation strategies are applied.

• type 3: the same as type  <dig> but with one exception: the degrees of freedom of side chains located on secondary structures will be blocked.

to select the parameters, the results obtained in previous simulations made with the main simulation process  <cit>  have been considered. in particular, the simulation parameters have been set as follows: p= <dig>  ε=10%, m= <dig>  n= <dig>  simulations are run in a pc under windows xp, with a pentium core  <dig> duo  <dig>  ghz making use of a single core.

in table  <dig> the results for 1k <dig> protein are shown. as it can be observed we obtain a minimal rmsd value of  <dig>  Å with the type  <dig> simulation strategy. the ramachandran plot values indicate that the biological meaning of the protein has been ensured in all simulation strategies. energy values also indicate the non-existence of steric clashes on the protein structure. regarding the computational cost of the process, it needs  <dig> minutes on both type  <dig> and type  <dig> simulation strategies and  <dig> minutes on the type  <dig> simulation strategy to obtain each intermediate structure of the movement. it can be concluded that the computationally most expensive procedure is the side chain orientation one. this fact is corroborated with the results of type  <dig> simulation. in this simulation strategy, the degrees of freedom of side chains located on secondary structures are extracted from the main simulation. in table  <dig> it can be seen that the computational time is reduced by 38% for each intermediate structure. in figure  <dig> several snapshots of the simulation are shown.

results for 1zac protein are shown in table  <dig>  in this protein minimum rmsd error is obtained on type  <dig> simulation strategy with  <dig>  Å. again ramachandran plot values confirm the biological meaning of intermediate structures. energy values also indicate that steric clashes have been avoided during the simulation procedure. lastly, regarding the computational cost of the simulation for this protein, the procedure has needed about  <dig> minutes to obtain each intermediate structure of the motion, completing the simulations in about  <dig> minutes.

finally, the results for 3cln protein are shown in table  <dig>  the simulation procedure obtains a rmsd error of  <dig>  Å on type  <dig> simulation strategy. again the ramachandran plot value ensures the biological meaning of the obtained intermediate structures and energy values indicates that no steric clashes have been produced. as it can be seen, neither type  <dig> nor type  <dig> simulation strategies are able to achieve a valid simulation. in this particular protein morph, secondary structures degrees of freedom  are needed to form the central α-helix. this fact causes the failure of the aforementioned simulation strategies.the superpositions between obtained final structures  and data structures  are presented in figure  <dig> 

discussion
the molecular mechanisms underlying the activity of many proteins involve conformational transitions by hinge-bending, which involves the movement of relatively rigid parts of preserved geometry about flexible joints. the detection of both, the rigid domains and the ginger regions, has been largely studied during the last decades  <cit> . the graphical representation of these dynamic events is not only essential to understand how the processes take place, but it helps to unravel mechanistic aspects that are difficult to visualize by less intuitive indirect approaches.

one of the main limitations on the simulation of these conformational transitions is the huge computational cost of actual simulation strategies. actual approaches struggle to obtain morphs that fulfill both biologic and kinematic requisites. the procedure presented in this paper satisfies both requirements with a good cost-error relation in the studied proteins.

all the procedures presented in the paper make use of the same protein model. in this model bonds are considered as rigid links and the degrees of freedom have been limited to rotations around dihedral angles and each side chain’s first bond rotation. these hypothesis produces a computationally very efficient model of the protein structure with the sufficient mobility to simulate conformational changes.

current work is focused on the simulation of conformational changes on dimers which posses similar hinge-bending mechanisms. the low computational cost of the presented procedures may be enough to deal with these types of molecules.

CONCLUSIONS
a recurring question in the analysis of molecular mechanisms underlying the regulation of a protein deals with the possible structural routes that let it evolve between two different conformations. the identification of these pathways sets the structural basis for the rational design of molecules that act as modulators  of the proteins activity, becoming an essential tool for the development of new drugs in the pharmaceutical industry.

few alternatives arise at the time of simulating protein motions. low computational cost methodologies offer fast results but usually with kinematically senseless trajectories with impossible backbone movements between consecutive positions of the simulation. these methods are based on restrained interpolations of atoms coordinates  <cit> , and rely on intermediate energy minimization processes to solve the steric clashes produced during the simulation. on the other hand, simulation procedures based on molecular dynamics need huge computational resources to complete successful simulations in an acceptable spam of time. software packages like gromacs  <cit> , namd  <cit> , amber  <cit>  etc. do not only require shared computing architectures, but due to their complexity its use is limited.

the procedure proposed in this paper offers a fast and reliable method to obtain the motion of the protein. the procedure runs on a single processor and is fond for further improvement by implementing simple distributed computing algorithms. this procedure maintains the kinematic continuity of the movement and ensures the biological sense of the obtained structures.

the presented procedure has been implemented in a new bioinformatic package with the aim of facilitating the comprehension of the processes by which biological machines perform their function. the simulation strategies described herein help the user to understand the behavior of these mechanisms. the described procedures require, at least partially, the availability of the initial and final conformations adopted by the biological machine under analysis. in this regard, the validation indicators implemented in the proposed simulation processes, help to overcome the lack of knowledge in protein structures by providing a modeling tool to reconstruct the fold of a target protein from homologous molecules in other organisms. moreover, it may also help in deciphering the molecular mechanisms underlying metabolic processes, signaling pathways or transport events, as well as in mapping specific “conformational routes” that characterize the dynamic behavior of a promiscuous protein motif  domains), that undergoes different structural changes upon binding distinct types of ligands . it should not be neglected the capacity of our software to improve structural search models in molecular replacement methods during the elucidation of novel crystal structures by x-ray diffraction techniques.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
md and vp have developed the algorithms; ah has incorporated the kinematic background of serial robots; md has performed the simulations; md, vp and lam-c have analyzed the results; lam-c has incorporated the biological background for proteins; and md and lam-c have written the paper. all authors read and approved the final manuscript.

