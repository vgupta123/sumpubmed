BACKGROUND
biological and chemical projects often generate large amounts of chemical data, ranging from percent yields to docking scores to in vivo drug activities. sharing these data sets effectively is a common task that is greatly enhanced when images of the relevant molecular structures are incorporated into collaborative reports. there is a need for a simple, free, open-source program that can automatically generate data files viewable on any computer, regardless of the operating system and without requiring the installation of additional software. to this end, we have created a program called webchem viewer with unique capabilities currently lacking in similar software packages. the program can be downloaded from http://nbcr.ucsd.edu/webchemviewer and is released under the freebsd license.

by default, webchem viewer inserts images of molecular structures into user-provided data sets using the open babel software package  <cit> . however, to simplify the user experience we also created an online web application  called “smiley2png  <dig> ” that can generate these images remotely, thus eliminating the need for a local open babel installation. we encourage the use of this remote service independent of webchem viewer, both directly through its web interface and programmatically as a component of other software packages. the service can be accessed through the national biomedical computation resource’s web services opal dashboard, which is directly linked to from the nbcr homepage at http://nbcr.ucsd.edu. tutorials describing how to use webchem viewer and simley2png can be found in the supporting information .

implementation
webchem viewer generates html-formatted output that can be viewed in any modern web browser without requiring the installation of additional software or plugins. collaborators need only open the output file in their browsers to view the chemical data sets with associated molecular representations. the data is sortable by any column  and is fully searchable . data columns can also be hidden/displayed as needed . these features are provided by the jquery  <cit>  and datatables  <cit>  javascript libraries, which are released under the mit and bsd licenses, respectively, as well as by custom javascript and html code created by the authors. the two-dimensional molecular images included in the output are programmatically generated from user-provided smiles strings.

to aid those generating these output files, we also kept the required dependencies of webchem viewer itself to a minimum. strictly speaking, the program requires only a python interpreter. python comes installed by default on os x and most linux distributions. simple-to-use installers are available for windows as well. we recommend the free anaconda python distribution provided by continuum analytics, inc. .

webchem viewer’s enhanced features may require some additional installations. for example, the program includes a graphical user interface  for those not comfortable using the command line. the gui requires that tkinter  <cit> , a python binding to the tk gui toolkit  <cit> , be installed. fortunately, as tkinter is included in the standard windows and os x python distributions as well as many linux distributions, we expect the majority of users will have access to the gui “out of the box.” further details can be found in the results and discussion section below.

webchem viewer also uses open babel  <cit>  and the accompanying cairo 2d graphics library to generate two-dimensional molecular images from smiles strings . most users will not need to install these programs on their machines either. webchem viewer automatically connects to a remote image-generating server  if open babel is not available locally. if users are concerned about posting their data to a public server, or if they wish to generate more than the server’s maximum permitted number of images , they can install open babel on their own machines. versions are available for all major operating systems.

RESULTS
a number of programs exist for sharing tabular lists of heterogeneous molecular data with associated structures. however, frequently molecular data sets must be shared with collaborators who don’t have the required software installed on their computers; some packages are not available on all operating systems; many of the relevant tools are prohibitively expensive; and many programs, feature rich by design, are excessively complex for simple data sharing. in order to address these challenges, we have created a program called webchem viewer capable of organizing molecular data sets in a visual and intuitive way.

webchem viewer input
webchem viewer accepts two types of molecular-data tabular input files. first, the user can specify a file where each data point is separated by a comma, with comma-containing entries placed in quotes . this is the standard comma-separated-values  format used by many programs such as microsoft excel. second, the user can specify a file where each data entry is separated by a tab character . we’ve found that we often generate tab-delimited files when using the unix paste command.

both comma-separated values  and tab-delimited data are accepted. the first row must contain data labels. subsequent rows contain the data associated with each molecule.

regardless of the specific format used, the first row of the input file must contain column labels, and subsequent rows must contain data listed in the same order. each row represents a single molecule; row entries might include any molecule-associated data, such as the molecular name, weight, smiles string, or a docking score.

next, the user provides webchem viewer with information about the input data set. first, the user indicates which of the data columns contains the required smiles strings, from which two-dimensional representations of each molecule are automatically generated. the user next indicates the column to use to initially sort the data, either in ascending or descending order. for example, we often wish to communicate the results of our virtual screens with collaborators. the docking scores associated with each molecule attempt to predict the free energy of binding; consequently, more negative scores represent better candidate ligands. a reasonable initial sorting, then, might be to order the data by the docking score, ascending from the lowest  value to the highest .

finally, the user can specify which columns to initially hide. in our experience, it is often helpful to include supplementary information about each molecule that is useful but not critical for understanding. this data can be initially hidden and subsequently viewed by collaborators only when specifically requested. for example, in presenting the results of a virtual screen, the molecule name, structure, and docking score are clearly paramount. associated data like the number of lipinski violations  <cit>  are useful but not necessarily critical, and so might be initially hidden.

webchem viewer output/portability
webchem viewer produces output that is html formatted. html is the same format used to create internet web pages; consequently, the output can be viewed in any modern web browser, on any computer operating system . in our experience, this degree of portability is critical for may projects. for example, computational chemists almost exclusively use unix-based operating systems, while most other researchers use windows. those research groups that have their own systems for sharing sets of molecular data  typically resort to programs that are expensive, excessively complex, or operating-system dependent. it is not always practical to tell collaborators that they need to buy perkinelmer’s chemdraw or download schrödinger’s maestro, especially given that these packages include many features not required for simple data sharing. by divorcing data sharing from any specific operating system or computer program and instead wedding it to the ubiquitous web browser, collaborators need only click an html file sent by email in order to visualize the data immediately.

these challenges are hardly unique to scientific sharing. they are the very issues driving the current broader interest in “cloud computing” . given the recent proliferation of available operating systems  and the potentially imminent ascent of a number of others , operating-system independence is more critical than ever.

given that webchem viewer’s output is so inherently portable, it is ideally suited for incorporation into existing cloud-based chemistry applications. as we expect most users will use webchem viewer to simply share data sets with colleagues, by default the program generates a single html file with all the required dependencies  embedded directly into the code. however, webchem viewer can also save its html and dependencies as separate files so that the relevant portions of the output can be more easily incorporated into existing web-app frameworks. indeed, in collaboration with the national biomedical computation resource, we are currently pursuing plans to incorporate webchem viewer into a number of online chemistry applications. we are hopeful that other organizations will similarly find that webchem viewer satisfies their cloud-based project needs.

smiley2png  <dig>  opal service
if required, users and software developers are also invited to access the remote smiley2png  <dig>  opal service that permits webchem viewer to generate images of molecular structures “in the cloud,” either directly through the national biomedical computation resource’s opal dashboard or programmatically through an opal client . the web interface accepts three parameters. first, the user must provide a text file, where each line represents a single compound and includes the name of the image file to generate as well as the associated smiles string, separated by a space. additionally, the user can specify the size of the square png image to generate, in pixels, as well as an email address for job-completion notification.

comparing webchem viewer to existing software packages
webchem viewer has a number of advantages over existing packages. 1) it is simple and easy to use because it is singularly dedicated to generating easy-to-interpret reports. the user need only provide the data set, specify a few output options, and click the “run” button to generate highly portable output files. 2) it is free for all users, including researchers working in industry, and is entirely open source so that knowledgeable users can modify the program according to their needs. 3) the program itself requires only a python interpreter and so can run on all modern desktop operating systems. 4) the output can be viewed in any web browser, including on mobile devices, without the need for additional plugins/programs. 4) the output is html formatted and so can be easily incorporated into existing websites to allow even broader data sharing if required.

table  <dig> demonstrates how webchem viewer compares to schrödinger’s maestro suite  <cit> , perkinelmer’s chemdraw  <cit> , and chemaxon’s instant jchem, three popular chemical-database management packages. like webchem viewer, all three of these programs have graphical user interfaces that allow the user to generate tabular chemical reports that include both structural images and associated molecular information. however, webchem viewer has a number of advantages that are worthy of mention.

webchem viewer compared to schrödinger’s maestro, perkinelmer’s chemdraw, and chemaxon’s instant jchem.

schrödinger’s closed-source maestro suite, the “unified interface for all schrödinger software,” includes many useful tools that facilitate computer-aided drug discovery and computational biology generally. however, when one wants only to generate a simple report to share with collaborators, these additional features adversely impact simplicity and usability. maestro’s complexity aside, schrödinger’s free version is capable of producing tabular reports that include images of chemical structures. if collaborators are willing to download maestro as well , they can search and sort any maestro-formatted molecular data shared with them. maestro runs under linux, windows, and older versions of osx, but is not currently compatible with osx  <dig> ; furthermore, maestro-formatted data files cannot be viewed on mobile devices or easily incorporated into existing web pages. given webchem viewer’s simplicity and portability, we believe it is better suited for the singular task of generating simple compound-library reports.

perkinelmer’s chemdraw is a chemical drawing program with myriad tools for conversion, enumeration, querying, etc. these features, while useful in many contexts, again adversely impact simplicity and usability when one wishes only to generate a simple report. furthermore, chemdraw is closed source and costly  and can only organize associated data in a tabular format via a microsoft excel plugin. neither chemdraw nor the excel plugin run under linux, and the plugin is incompatible with osx as well. furthermore, there is no easy mechanism for incorporating the output into existing web pages for broad data sharing.

finally, chemaxon’s instant jchem, like webchem viewer, is singularly focused on displaying and organizing the contents of molecular databases. unlike webchem viewer, however, instant jchem is closed source and expensive , though chemaxon does provide a free version for academics and a free viewer for all researchers. instant jchem can also export molecular data sets to pdf and microsoft excel files for collaborators who don’t wish to download chemaxon’s software. like webchem viewer, instant jchem runs on all modern desktop operating systems, and its pdf-formatted output is highly portable.

furthermore, recognizing the modern importance of being able to share molecular data over the web, chemaxon has also developed a version of instant jchem that runs through java web start. while the web-start version has its utility, webchem viewer’s html-formatted output is even better suited for web sharing. due to recent java security vulnerabilities, many users cannot run java applets in their web browsers. for example, an analysis of user data collected from  <dig>  people who visited the author’s personal website over the course of a recent month suggests that only 69% had browsers with java enabled. in contrast, webchem viewer’s output does not require a java installation.

distributed drug discovery: a test case
to verify webchem viewer’s utility in a real-life test situation, we recently used the program to further collaborations with the distributed drug discovery  initiative  <cit> . d <dig> is an educational initiative that allows undergraduate students to generate and test chemical compounds that could one day be developed into new drugs. our efforts have focused on using computer-aided drug-design techniques to guide future student synthesis. in this context, we’ve needed to share large amounts of chemical data with d <dig> collaborators.

webchem viewer has greatly facilitated d3-based efforts. our collaborators have specifically commented on the utility of the sorting, searching, and column-hiding features. additionally, because webchem-viewer output is html formatted, we have been able to modify its appearance according to our collaborators’ requests.

in the past, we used microsoft excel to tabulate our data when sharing with collaborators. as our particular operating system is not compatible with chemdraw’s excel plugin, we were forced to manually convert individual smiles strings to images on a compound-by-compound basis and to tediously copy the resulting images from chemdraw into excel. as good collaborations often involve back-and-forth feedback, a given project frequently required us to repeat this process many times as we modified our computational protocols in response to collaborators’ suggestions.

in contrast, with webchem viewer the d <dig> collaboration has been streamlined. structural images are incorporated into the reports automatically, thus lowering the barrier required to implement new suggestions. these benefits were obtained without requiring our collaborators, who are not computationalists, to install additional software.

stability
to test the stability of webchem viewer, we first obtained a list of  <dig>  smiles strings by downloading and processing the “clean fragments” subset of the zinc database  <cit> . we then generated  <dig> tabular input files by randomly selecting  <dig> smiles strings per file and associating  <dig> to  <dig> dummy variables with each compound. these dummy variables consisted of randomly chosen numbers ranging from  <dig> to  <dig> and/or randomly generated text sequences of  <dig> letters. webchem viewer processed the first  <dig> input files using a local copy of open babel to generate molecular-structure images. the last  <dig> input files were similarly processed, except the remote image-generating server  was employed. in all cases, webchem viewer produced the appropriate output files without any errors.

CONCLUSIONS
webchem viewer provides a simple and free way to share substantial quantities of heterogeneous chemical data. the program has been specifically tested on a number of operating systems, using several different versions of open babel and python . additionally, webchem-viewer output has been successfully visualized in a number of web browsers . sample data sets in both the csv and tab-delimited formats is provided with the download so that interested users can easily experiment with the program. tutorials are also included in the supporting information . we are hopeful that both webchem viewer as well as its associated web application for generating images of molecular structures will be useful tools for computational and medicinal chemists, as well as their collaborators.

webchem viewer has been tested on a number of operating systems, with various open-babel and python versions. we note that most users will not need to download and install open babel on their own machines.

webchem viewer’s html output files have been successfully visualized on many web browsers, running under several operating systems.

availability and requirements
project name: webchem viewer

project home page:http://nbcr.ucsd.edu/webchemviewer

operating systems: platform independent

programming language: python, html, javascript

other requirements: python  <dig> x , open babel 

license: freebsd license

any restrictions to use by non-academics: none

competing interests
the authors declare that they have no competing interests.

authors’ contributions
jdd served as chief programmer and drafted the initial version of the manuscript. rea critically revised the manuscript for important intellectual content. both authors read and approved the final manuscript.

supplementary material
additional file 1
webchem viewer tutorial.

click here for file

 additional file 2
smiley2png  <dig>  tutorial.

click here for file

 acknowledgements
this work was funded by the national institutes of health through the nih director’s new innovator award program dp2-od <dig>  and the nsf xsede supercomputer resources grant rac che060073n to r.e.a. in addition, this work was also supported by the national biomedical computation resource  p <dig> gm <dig>  we would like to thank nadya williams of nbcr for creating the smiley2png  <dig>  opal web service; profs. martin o'donnell and william scott for helping us test webchem viewer in a real-life collaborative setting; and cam farnell for developing rapyd-tk, a python-based program used to develop the webchem viewer graphical user interface.
