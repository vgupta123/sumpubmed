BACKGROUND
innovative proteomics technologies promise to chart protein degradation on a large scale  <cit> . the resulting data sets present an opportunity to further our understanding of metabolic protein stability through informed data analysis and the development and testing of computational models. the present study makes use of yen and colleagues’  <cit>  extensive data set which measures the metabolic stability of about  <dig> human proteins. we use this data set to  identify the underlying properties that appear to influence protein half-life,  develop a predictive model that integrates a number of different relevant data sets and is able to explain its predictions,  chart the metabolic stability of the full human proteome in silico, and therefore  infer what features influence stability on a global scale.

high-throughput methods for measuring protein degradation typically involve either metabolic labeling or protein tagging. of the four largest data sets currently available, three were generated in human cells, one using labeling  <cit> , and two using a tagging approach  <cit> , while the fourth data set was generated using protein tagging in yeast  <cit> .

doherty and colleagues used stable isotope labeling with amino acids in cell culture  coupled with mass spectrometry,  to measure the degradation rate of  <dig> proteins  <cit> . cells were grown in medium containing 13c6arginine before being transferred to 12c6arginine medium. ms was used to measure the shrinking abundances of 13c <dig> labeled proteins over several time points and a degradation rate was calculated by fitting the abundances to a single exponential curve. one advantage of this method is that metabolic labeling causes minimal cell perturbation. however, by nature of using mass spectrometry, the measurements will be biased to highly abundant, and theoretically more stable proteins  <cit> .

belle and colleagues used tandem affinity purification  tagging along with cycloheximide inhibition of transcription and western blotting to measure the half-life of over  <dig> yeast proteins  <cit> . the most recent tag-based method is called “bleach chase” and was used to measure the half-life of  <dig> proteins from h <dig> cells  <cit> . proteins were tagged with yellow fluorescent protein and their half-lives were inferred from “bleaching” some cells with a pulse of light and measuring the difference in fluorescent decay between bleached and non-bleached cells.

another tag-based approach implemented in human hek293t cells used a dual-fluorescent tagging method called global protein stability profiling   <cit> . the gpsp method uses two fluorescent proteins, enhanced green fluorescent protein  and discosoma sp. red , which are expressed on a single mrna transcript. the dsred protein acts as a control, while egfp is expressed as an n-terminal fusion with a protein of interest. coupling this approach with fluorescence activated cell sorting  and microarray analysis, the authors were able to measure the stability of approximately  <dig> human proteins, and it is this data set we use in our study.

an important consideration of n-terminal fusion is the interference that the egfp tag could have on the function of n-terminal signal sequences. a recent review on the use of fluorescent protein tagging points out that approximately one third of human protein-coding genes contain position-dependent sequence information  <cit> . in the case of proteins with n-terminal signal peptides, or signal anchors, the fusion of a fluorescent protein to the n-terminus is likely to interfere with normal localization. indeed, yen and colleagues  <cit>  found that unstable proteins contained an enrichment of membrane protein gene ontology  terms but remark that it is unclear what effect fluorescent tagging will have upon the measurement of global degradation rates.

huang and colleagues recently explored a range of predictive features in the gpsp data set and indicated that a simple associative model can classify protein stability with a reasonable accuracy – as evaluated using the same data set  <cit> . however, without paying attention to the potential bias caused by n-terminal tagging, a computational model may contain the same biases. therefore, our paper presents a protein stability model based on the largest of the present protein degradation data sets with emphasis on minimising experimental bias. indeed, it may be possible to discount the influence of experimental artefacts by first exploring and understanding their impact on models.

we created a method for classifying proteins as having a high metabolic stability  or low stability. we developed this method using the gpsp stability data set, which is by far the most extensive available, and thus easiest to cross-reference to other complementary data resources. we considered that this data set may contain a bias portraying proteins with n-terminal signal peptides and anchors as metabolically unstable due to interference caused by the experimental technique. consequently, we developed and tested models on two sets of proteins: a full set, and a trimmed set with secreted and transmembrane proteins removed.

using complementary resources, including the human protein reference database , a wide range of predictive features were explored. we identified groups of features that are statistically enriched in both stable and unstable proteins, ultimately to understand if they may be used to infer metabolic stability levels. we subsequently designed a model that explicitly recognizes and integrates known factors of the relevant processes and employed machine learning to optimise its ability to generalize to novel proteins. finally, to illustrate metabolic stability on a system scale, we used the model to score the stability of all proteins contained in the hprd.

features relevant to protein stability
protein degradation via the proteasome is mediated through poly-ubiquitination  <cit> . however, there are a number of other post-translational modifications  for which a role in either targeting proteins to or protecting proteins from the degradative machinery has been suggested. these modifications include phosphorylation, prolyl hydroxylation, glycosylation and small ubiquitin-related modifier  conjugation  <cit> . for example, phosphorylation can either promote or inhibit ubiquitination by regulating the e <dig> ligases responsible for ubiquitination  <cit> . glycosylation is used as a form of protein quality control in the endoplasmic reticulum, the folding location of most secreted and integral membrane proteins  <cit> , and this modification can act as a signal for misfolded proteins to be translocated to the cytosol for degradation.

a variety of features have been proposed to influence the targeting of a protein to the ubiquitin proteasome system. the n-end rule is one of the best documented examples of sequence-based degradation signals  <cit> . the rule originally stated that the in vivo half-life of a protein is associated with the identity of its n-terminal residue, causing high levels of binding selectivity for the e <dig> ligases that target proteins for ubiquitin-mediated degradation. the rule classified n-terminal residues as stabilizing, or belonging to one of three classes of destabilizing residues: primary, secondary or tertiary. recently, the rule was extended when it was discovered that n-terminal acetylation of most amino acids acts to create n-degrons  <cit> . now it is believed that all but two amino acids  can act as degradation signals upon acetylation, and are therefore considered “destabilizing”. however, the authors note that many proteins may still have a high level of metabolic stability despite the presence of an n-degron. it is possible that long-lived proteins are protected from degradation through complex formation or folding that makes the n-degron inaccessible.

it has been suggested that structural disorder is correlated with protein stability  <cit> . a bioinformatic study on yeast data found that structural disorder had a weak, but significant inverse correlation with protein half-life  <cit> . however, a separate study of protein structural disorder found that highly disordered proteins  had far greater metabolic stability than proteins with low structural disorder  <cit> .

a correlation between the frequency of certain amino acids has also been reported <cit> . one study demonstrated that the frequencies of tryptophan, cysteine, leucine and threonine were negatively correlated with protein stability, and conversely, that glutamic acid, aspartic acid, lysine and asparagine were positively correlated with protein stability  <cit> . the exact biological mechanisms underlying the relationship between amino acid composition and stability are unknown, though there are likely to be a variety of factors. for example, the pest hypothesis claims that short hydrophilic sequence segments enriched in certain residues are correlated with protein instability  <cit> . what mechanisms are behind this are unknown, and it has also been suggested that pest regions are actually sequence areas enriched in amino acids that confer phosphorylation modification sites  <cit> .

previous work on modeling protein stability
there are a number of ways to define metabolic stability. for example, one study presented a probabilistic method for classifying the metabolic stability in vitro of chemical compounds  <cit> . however, to the best of our knowledge there is currently only one published predictor for intracellular protein stability  <cit> . the contribution of this published work is two-fold: huang and colleagues identified optimized sets of features relevant to protein stability, and created a predictor that classifies protein stability based upon the “best” feature vectors. using the yen  <cit>  data set, the authors created four classes of protein stability : short , medium , long  and extra long . the authors went on to define a list of  <dig> possible feature components that are believed to contribute to protein stability. these included various biochemical/physiochemical attributes of proteins , protein subcellular locations, kegg enrichment scores, and the number of complexes a protein is involved in.

to determine what features distinguish between different classes of stability, the authors defined three 2-class problems based on their four stability classes:  short and medium vs long and extra long,  short vs medium and  long vs extra long. for each problem, they ordered the feature vectors according to the maximum relevance and minimum redundancy method, which ranks elements in a vector according to their relevance to a target, and redundancy against each other  <cit> . to optimise the elements in the feature vectors, they used incremental feature selection  with nearest neighbor   to classify proteins based on increasing feature vector sizes. for each vector size, they used jack-knife cross-validation to determine the accuracy of nn. for problem , they reported an overall accuracy of  <dig> % using  <dig> features; for problem , an accuracy of  <dig> % with  <dig> features, and for problem , an accuracy of  <dig> % with  <dig> features. on a cautionary note, the automated ifs scheme is likely to invoke a “selection bias”, whereby features are optimal for that particular data set, leading to inflated performance figures  <cit> .

the authors reported that localisation to the cell membrane was an important contributor to predicting protein stability. in our own analysis on the set of proteins used in their study, we found that proteins localised to the membrane or the cell surface were significantly over-represented in the “short” class compared to other proteins . furthermore, the most significant feature for problem  according to the optimal feature vector is the frequency of hydrophobic residues. we found that an average of 35% of residues in the “short” class proteins were classified as hydrophobic, compared to only 29% in the “extra long” class. considering the hydrophobic nature of transmembrane domains, this is likely a reflection of the “short” class proteins localised to the membrane. if the gpsp data is indeed biased towards membrane proteins, then it appears that the nn model shares that bias.

the nn method as employed by huang and colleagues  <cit>  simply classifies a query protein based on the class of the “nearest” protein. as a result, this method does not give us information on how given features influence stability – whether they correlate with stable or unstable proteins. however, the use of probabilistic machine learning methods such as bayesian networks can give a transparent and explainable model of protein stability. though huang and colleagues have presented the first attempt at computationally modeling protein stability, this work can be improved through the removal of potential experimental bias from the data, and the use of a computational method that can explain its predictions.

bayesian networks
we chose to use bayesian networks to model metabolic stability and the relationships between relevant features for several reasons. first, a bayesian network can represent a large number of different types of features to influence the outcome, recognizing only dependencies that we believe exist. second, by virtue of its probabilistic nature, uncertain observations can be incorporated, missing data can be managed, and flexible queries to probe and explain predictions can be entertained  <cit> . finally, though most observations are strictly “boolean” , we are able to integrate “continuous” scores produced by methods particularly suited to challenging though largely independent sub-problems, such as support-vector machines  applied to detect protein sequence similarity and position-weight matrices  applied to recognize ptm sites.

we represent observations about stability, presence of specific domains, sequence and structural features, ptms etc as random variables x1x <dig> …,xn, that may take values x1x <dig> …,xn. variables are organized “graphically” into a network, with pa representing the set of “parent” variables of x, thereby identifying what dependencies can be captured. the joint probability of all variables is given by 

  p=∏i=1np) 

 we discuss the selection of relevant variables and their relationships in section “data resources and feature identification”, including the use of latent  variables. parameters are set by using the expectation-maximization  algorithm on a training set  <cit> . we also separate out data used to parameterize pwms to score ptm sites and data used to train svms equipped with the 1-spectrum kernel to map a protein sequence to its stability class  <cit> .

RESULTS
we have described the three most large scale protein stability data sets available in human cell lines. however, each study has applied different technology to different cell types, with different units for measurement for protein degradation. a comparison of the data generated by the gpsp method  <cit>  and the metabolic labeling/mass spectrometry method  <cit>  showed very little correlation between the two data sets  <cit> . furthermore, our own comparison of these data sets  shows that there is no correlation between any of the three major data sets. we hypothesized that the potential bias caused by n-terminal tagging in the gpsp data could be resulting in the disparity, but removing secreted and transmembrane proteins did not improve the correlation . disparity amongst results does not necessarily mean experimental error, but could be a result of differing cell types, tuning a protein’s lifespan to the individual requirements of the cell. regardless of the causes behind the variability, an unfortunate side-effect is that integrating and analyzing data from multiple sources becomes much more difficult. therefore, the model presented in this study is based singularly upon the gpsp data generated by yen and colleagues  <cit> .

comparisons were made between the global protein stability profiling method  and the stable isotope labeling of amino acids in culture  method. this comparison was repeated with transmembrane and secreted proteins removed. the bleach chase data was also compared with gpsp and silac. all comparisons were made with a spearman rank correlation, as well as being fitted to a linear model.

identifying stability groups of proteins
the authors of the gpsp data divide cells into seven sub-populations based on increasing ratios of egfp/dsred as defined during facs . the distribution of cells across these r values  was used to infer the stability of the egfp-fusion protein they expressed. the authors defined a weighted mean, the protein stability index  for representing this information as a continuous variable. the psi is calculated by: 

  psi=∑i=17ri∗i, 

 where ri is the proportion of cells in bin i for a given gene. this metric for stability classification was also used by huang and colleagues  <cit> , as well as other studies that have employed the gpsp data  <cit> . however, the selection of psi classification thresholds is non-trivial. therefore, instead of using the psi, we first explored how proteins grouped based on the original weight distributions across the  <dig> bins . figure  <dig> shows a cluster dendrogram and a heat-map highlighting the r values that the proteins are enriched in. we noted in particular two distinct groups representing the extremes of protein stability. these two groups seemed a natural choice for investigating what features influence stability, as well as constructing a binary classifier. the bottom group, henceforth labelled “unstable”, contains proteins enriched in the highly unstable r <dig> and r <dig> bins. the “stable” group contains proteins that are enriched in the stable r <dig>  r <dig> and r <dig> bins. the remainder were classified as “non-assigned”. approximately 20% of the proteins fell into the unstable class, another 20% into the stable class, and the final 60% fell into the non-assigned class.

identifying features correlated with stability
we investigated five types of features believed to be related to protein degradation:  ptms,  domain and architecture types,  n-terminal residues,  structural disorder and  amino acid composition. for each feature  we used fisher’s exact test  to determine whether there was a significant over- or under-representation in the stable or unstable protein classes, relative all other proteins. the results from the statistical analyses on proteins in the unstable class are summarized in table  <dig>  and table  <dig> contains the results for proteins assigned to the stable class. phosphorylation and acetylation modifications were both over-represented in stable proteins while being under-represented in unstable proteins: 72% of stable proteins were phosphorylated compared to 30% of unstable proteins, and 36% of stable proteins were acetylated compared to only 4% of unstable proteins. the opposite trend was seen in glycosylation, where only  <dig> % of stable proteins were glycosylated, compared to 6% of unstable proteins.

feature types found to be significantly  over-/under-represented in the unstable protein class when compared to stable and non-assigned proteins. e-values for over-represented features are indicated with the symbol ‡, otherwise the e-value represents an under-representation. features include domain/architecture types, ptms, and disorder classifications based on three disorder types  and percentage of sequence containing the disorder type. lastly, the presence of a destabilizing n-terminal residue is shown, defined as the n-terminal residue of a mature protein being one of r, k, h, f, l, w, i or y. these results are from the full data set .

feature types found to be significantly  over-/under-represented in the stable class when compared to unstable and non-assigned proteins. e-values for over-represented features are indicated with the symbol ‡, otherwise the e-value represents an under-representation. features include domain/architecture types, ptms, and disorder classifications based on three disorder types  and percentage of sequence containing the disorder type. lastly, the presence of a destabilizing n-terminal residue is shown, defined as the n-terminal residue of a mature protein being one of r, k, h, f, l, w, i or y. these results are from the full data set .

the most significant outcomes of the domain and architecture analysis was the strong over-representation of transmembrane domains and signal peptides in the set of unstable proteins. these were over-represented in unstable proteins while being under-represented in stable proteins: 63% of unstable proteins contained transmembrane domains compared to 4% of stable proteins. these findings were supported by an analysis of go terms, which also showed that unstable proteins were significantly more likely to contain a transmembrane domain than were proteins from the stable or non-assigned class. signal peptides were present in 44% of unstable proteins compared to 3% of stable proteins.

the results for the n-terminal residue analysis were highly significant, with destabilizing n-terminal residues  being over-represented in unstable proteins while being under-represented in stable proteins. we found that approximately 50% of unstable proteins had a “destabilizing” n-terminal residue compared with a far lower proportion  in the remaining proteins. the opposite was seen in the stable class, where under 2% of proteins contained destabilizing n-terminal residues.

we grouped proteins according to their structural disorder using the disembl software  referring to the types used previously by linding and colleagues  <cit> . the disorder types are defined as “loops/coils” , “hot loops”  and “rem465” . a total of  <dig> classifications were used, based on the  <dig> disorder types as defined by linding and colleagues  <cit> , and  <dig> levels of disorder as used in an earlier study  <cit> . levels were classed according to the percentage of a sequence containing disorded residues of a given type. the levels were:  ≥ 0% and ≤ 20% of sequence containing disordered residues,  > 20% and ≤ 40%,  > 40% and ≤ 60%,  > 60% and ≤  <dig> %,  > 80% and ≤ 100%.

there were a number of disorder types found to be statistically significant. tables  <dig> and  <dig> show that in both stable and unstable classes there was an over-representation of the very low level disorder “hot loops: 0-20%” class. this disorder type was present in 44% of unstable proteins, and present in about 50% of stable proteins. the low level 20-40% disorder class for all disorder types were over-represented in the unstable protein class. the highly disordered class of 80-100% hot loops and loops/coils was over-represented in the stable set of proteins.

a predictive model of protein stability
we are interested in resolving what features have a causal relationship with the classification of metabolic stability. we are also interested in establishing dependencies between features relevant to stability. both these issues can be addressed using machine learning models. we tested the ability of a strawman svm trained on sequence data , a bn integrating the aforementioned features  excluding sequence features , and a complete model , to classify proteins into stable and unstable classes. the complete model incorporates the svm output as an additional continuous variable.

we evaluated model performance through receiver operating characteristic  analysis and calculating the area under the roc curve   <cit> . we evaluated the performance of three versions of the model: svm, bn, and bn+svm. models were first evaluated on a data set made up of  <dig> proteins from the stable protein set and  <dig> proteins from the unstable protein set using ten-fold cross-validation over five different data set splits. figure  <dig> shows the performance of the svm, bn and bn+svm models for this data set. all three models have aucs well above random , and the bn+svm model performs best. these results are consistent over multiple cross-validation runs with different data set splits. the mean auc of the bn+svm model was  <dig>  with a standard deviation of  <dig> . the mean auc of the bn model was  <dig>  with a standard deviation of  <dig> , and the mean auc of the svm model was  <dig>  with a standard deviation of  <dig> . to measure the performance of the models using a threshold, we took the threshold that occurs at the maximum f-score and calculated sensitivity, specificity and matthews correlation coefficient . these results including the aucs are summarised in table  <dig> 

various performance metrics for each of the models trained on the full data set, as well as the trimmed data set. for example, bn+svm refers to the bn+svm model trained on the full data set, while bn+svm refers to the same model trained on the trimmed data set. for each model we present the area under the curve  for a receiver operating characteristic analysis, and find the maximum f-score. the threshold from the maximum f-score was also used to calculate matthews correlation coefficient  as well as sensitivity and specificity. for each metric the mean  and standard deviation  is shown for five cross-validation runs.

we also did a performance comparison with huang and colleagues’  <cit>  ifs and nn model  in order to determine which method classifies protein stability most accurately. we took a subset of proteins that overlapped with their “extra long” class and our stable class, as well as a subset of proteins that overlapped with their “short” class and our unstable class. evaluating the nn model on this subset gave an auc of  <dig>  . we also evaluated the performance of our models on this data, and found that the bn+svm and bn models both had superior performance to the nn model with aucs of  <dig>  and  <dig> , respectively 

we created a trimmed data set with transmembrane/secreted proteins removed to test the models on proteins not affected by n-terminal fluorescent tagging. re-visiting the statistical analysis on this data set, we found that transmembrane domains, signal peptides and glycosylation were no longer over-represented in unstable proteins. we evaluated the performance of the three models with twenty five-fold cross validation due to a smaller number of observations. figure  <dig> shows roc curves for the  <dig> models trained and tested on the set that was cleansed from proteins that are potentially subject to experimental bias. all three models perform worse on the smaller data set, though performance is still well above random. the bn+svm model had an average auc of  <dig>  with a standard deviation of  <dig> . the bn model performed worse with an average auc of  <dig>  and a standard deviation of  <dig> . in contrast to the results obtained using the original data set, the svm model performed better than bn with an average auc of  <dig>  and a standard deviation of  <dig> . for each model we also calculated the sensitivity, specificity and mcc that occurs at the threshold corresponding to the maximum f-score .

classifying the stability of all human proteins
there are several uses for a global prediction of protein stability values. first, the predictions allow us to ascertain how well the model generalizes. secondly, we can measure the stability of all proteins through estimating how many proteins are classified as stable or unstable. finally, we can investigate what features are correlated with stability on a global scale, and compare the findings with experimental data.

we used the bn+svm model to predict the stability of  <dig>  protein isoforms catalogued in hprd. two predictions were made, one with the bn+svm model trained on the full data set , and one with the bn+svm model trained on the trimmed data set . additional file 2: figure s <dig> shows a density plot of p <dig>  and additional file 3: figure s <dig> shows a density plot of p <dig>  as the bn+svm model produces a probability representing the belief that the protein is stable, thresholds are required to classify protein predictions into stable and unstable groups. the thresholds can be modified according to a desired level of true positives / false positives, and are most likely be different between p <dig> and p <dig>  for our analysis of p <dig>  an unstable protein was defined as having a score less than  <dig> , while a stable protein scored greater than  <dig> . this resulted in 29% of proteins being assigned to an unstable class, and 26% to a stable class . when applying these thresholds to proteins from the gpsp training set, 60% of unstable proteins  are correctly classified as unstable, and 42% of stable proteins are correctly classified as stable.

the first row shows the number of proteins in each of the stable, unstable and non-assigned groups that were allotted based on the cluster analysis of the gpsp data  <cit> . this data was employed in all of the statistical analyses and the proteins in the stable and unstable classes were used for training and testing the models. the second and third rows show how the predictions made by the bn+svm model trained on the full data set  and the predictions made by the bn+svm model trained on the trimmed data set  can be assigned to stability classes when using thresholds to define predicted “stable” and “unstable” proteins. for p <dig>  a stable protein was defined as scoring above  <dig>  and an unstable protein had to score below  <dig> . for p <dig>  a stable protein was required to score above  <dig>  and an unstable protein to score below  <dig> . for both p <dig> and p <dig>  if a protein scored above the “unstable” threshold and below the “stable” threshold it was classified as “non-assigned”. these thresholds were set such that the number of proteins predicted to fall into the three different stability groups reflected the numbers from the cluster analysis on the gpsp data.

given these predicted stability groups we again tested for the presence of ptms and domain/architecture types. a full catalogue of statistically significant features is contained in additional file 4: data set  <dig>  and additional file 5: data set  <dig> . apart from the features already noted , ptms including methylation, s-nitrosylation and sumoylation were over-represented in stable proteins, and under-represented in unstable proteins. a number of new domain and architecture types were found as well. for example, nuclear localization signals , nuclear export signals,  and other nuclear related domains were over-represented in stable proteins and under-represented in unstable proteins. a similar result was found by yen and colleagues  <cit> , who noted that stable proteins were enriched in nuclear go terms.

for p <dig>  proteins scoring less than  <dig>  were assigned to the unstable class and those scoring greater than  <dig>  were assigned to the stable class. 14% of proteins fell into the unstable class, and 13% were assigned to the stable class. we found that signal peptides were under-represented in both stable and unstable proteins. transmembrane domains were under-represented in stable proteins, and though they were over-represented in unstable proteins, the significance level was greatly reduced to what was seen in p <dig> where we saw a highly significant over-representation of secreted and transmembrane proteins in the unstable class. it appears that when trained on the trimmed data set, the model is scoring secreted and transmembrane proteins such that they are largely falling into the “non-assigned” classification – an expected outcome given the lack of those proteins in the training data. this is supported by an under-representation of glycosylation modifications in the unstable class. these results indicate that when trained on the trimmed data set, the model is no longer making the counterintuitive decisions that may be a result of n-terminal tagging interference with protein localisation.

one useful feature of stability values is the ability to estimate the effect of global stability on specific groups of proteins. to that end, we investigated the global stability of signaling proteins using a list of approximately  <dig> proteins annotated with the biological process go term “signaling”. we found that signaling proteins were highly over-represented in the p <dig> unstable class . there was also a smaller, though still significant over-representation of signaling proteins in the original unstable class determined by cluster analysis . however, the opposite was seen in p <dig> where signaling proteins were significantly under-represented in the unstable class  and significantly over-represented in the stable class . we also noted several domain types such as sh <dig> and sh <dig> known to be involved in signal transduction that were over-represented in both the p <dig> and p <dig> stable classes  <cit> .

in summary, the two predicted sets of stability values have some shared, and some distinct features that govern whether a protein might be classified as stable or unstable. we have made the predicted stability values for p <dig> and p <dig> available in additional file 6: data set  <dig>  as well as svm scores for all proteins . the supplementary material also contains the feature vectors that were used for training/testing the models and generating the predicted values . while the stability values for p <dig> are reliable predictions for intracellular proteins without n-terminal signaling sequences, caution should be exercised when considering secreted and transmembrane proteins.

discussion
we have presented a model for classifying metabolic protein stability that combines five groups of features:  post-translational modifications,  domain types,  structural disorder,  the identity of a protein’s n-terminal residue and  amino acid sequence. the ability of the model to predict a protein’s stability is high, with an auc of  <dig>  for the bn+svm model. furthermore, at a low false positive rate of 20% the model exhibits a high true positive rate of 80%. we compared our approach with the ifs and nn method employed previously  <cit>  and demonstrated the superiority of our model. when evaluating our models on the subset of data used for comparison with the nn model, we found that at a 20% false positive rate, the bn+svm model performs with a true positive prediction rate of approximately 95%. meanwhile the nn model has just over an 80% true positive rate.

despite the improved performance, the bn+svm model relies on far fewer features than the nn model –  <dig> compared to  <dig> for the “short/medium vs long/extra long” classifier. this is an indicator that the features we have chosen for the bn+svm model have far more powerful predictive capabilities than those used by huang and colleagues  <cit> . furthermore the ifs method, while it can generate optimised vectors of features, cannot say how the features relate to protein stability. in contrast, we have found that post translational modifications such as phosphorylation and acetylation are significantly over-represented in stable proteins, that proteins with  <dig> – 100% structural disorder are also over-represented in stable proteins and that destabilizing n-terminal residues are over-represented in unstable proteins.

it must be acknowledged that there are potentially detrimental effects that fluorescent tagging could have on global protein stability measurements for some proteins, which could bias computational models. the results from our feature analysis are consistent with the hypothesis that fluorescent tagging of co-translationally translocated proteins  causes unnaturally quick degradation. the transmembrane domain was highly over-represented in unstable proteins with an e-value of  <dig> e- <dig> – a far more significant number than any other feature. this was consistent with a go term analysis, which found membrane go terms over-represented in unstable proteins. it has been noted before that there exist a class of short-lived transmembrane proteins that are degraded by the proteasome  <cit> , but there is no reason to think that transmembrane proteins are unstable in general. it is known that n-terminal fluorescent tagging of proteins with n-terminal signal peptides can interfere with correct localisation  <cit> , and also that protein quality control mechanisms can rapidly degrade misfolded proteins  <cit> .

in light of potential experimental bias, we have tested our model on non-secretory and non-transmembrane proteins, and have found that it continues to perform well with an auc of  <dig> . even though the model has decreased performance accuracy on the trimmed data set, the fact that the performance level remains high shows that bayesian networks are powerful tools for computationally modeling metabolic protein stability. furthermore, it is no longer making the unlikely inference that all membrane and secreted proteins are unstable.

while the models are quite successful at classifying proteins into the “extreme” groups of stable and unstable, there is a long way to go in understanding the individual determinants of protein degradation. consider the finding that phosphorylation and acetylation ptms are more prevalent in stable proteins than unstable proteins. it is likely that the functional role of unstable proteins is regulated by their continual synthesis and degradation, while longer-lived proteins are regulated by modifications such as phosphorylation and acetylation. indeed it has been suggested previously that combining a large-scale analysis of protein turnover with further ptm studies will shed insight onto key regulators of cellular responsiveness  <cit> . but there are variables other than ptms that need to be explored in conjunction with protein stability. for example, the potentially stabilizing effect of complex formation, or cell- and tissue-specific degradation.

the benefit of applying a computational model is the ability to extend our knowledge beyond what is explicitly documented in experimental data. in this work we have used our model to create two sets of stability values for the human proteome – one using a model trained on all our data , and one using a model trained on data cleansed from secreted and membrane proteins . the model is able to generalise quite well, as seen through the ability to create new global stable and unstable protein classes that are consistent with the experimental data. through analysis of these predicted values and classes, we were able to identify further features that are relevant for protein stability. for example, it appears that proteins containing nls/nes domains are more likely to be stable than unstable. similarly, our results are further evidence that protein modifications such as phosphorylation, acetylation and methylation are important regulators in protein degradation. we have also demonstrated how these predicted values, or the “stabilome” can be used to ask questions about the global stability of specific classes of proteins. as the predicted stability scores in p <dig> and p <dig> cover the human proteome and are made available in the additional files, interested readers can access the scores directly, obviating the need to use the predictor themselves.

a benefit of a computational model is its ability to be applied to different data sets. we have noted the disparity that currently exists between the major protein stability data sets . we hypothesised that if the problematic secretory and transmembrane proteins were removed from the data set used here, the correlation would improve at least slightly with the other data, though that was not the case. ideally we would have liked to test the model on a “blind” data set other than the gpsp data, but the lack of correlation between data sets brings into question the value of such a test. however, as more data becomes available, computational modeling of protein stability as applied here can be easily extended by retraining the model on new data. this will allow us to more effectively compare data sets and identify the common and distinct features that exist between them, to unravel the cell-specific and global features of the protein stabilome.

CONCLUSIONS
new experimental techniques coupled with powerful data integration methods have enabled us to not only investigate what features govern protein stability in general, but also to build a model that identifies what properties determine each protein’s metabolic stability. this study shows how several post-translational modifications, domain types, n-terminal residues, disorder and sequence data can be incorporated into a model to classify proteins as stable or unstable as defined by experimental data. bayesian networks are an ideal tool for such a task, with their ability to combine multiple forms of data and capture conditional dependencies that exist between features. at a 20% false positive rate, the model exhibits an 80% true positive rate, and outperforms the only previously proposed stability predictor. we have also considered the possibility of experimental bias within the data, retraining the model on a data set cleansed of secreted and transmembrane proteins. computational models of protein stability are important not only for classifying proteins of unknown stability, but for comparing various experimental data sets. furthermore, the use of the model to score all human proteins in the hprd will be a freely available resource for researchers who are interested in the stability of functionally related proteins.

