BACKGROUND
in  <dig>  darwin produced one of the first illustrations of a phylogenetic tree, notably this was the only figure included in the origin of species  <cit> . since, biologists have used trees to depict the relationships between organisms, genes and genomes. the number of studies depicting phylogenies exploded  with the development of the polymerase chain reaction technique and journals were created specifically for publishing the molecular phylogenies generated by researchers . whilst in the early years of morphological and molecular phylogenetics, embedding illustrations into manuscripts might have been the most appropriate way to disseminate knowledge, this has resulted in the locking up of phylogenetic hypotheses into the pages of journals and books without an easy way to access this information.

currently, the construction of the relationships between the  <dig>  million currently estimated species largely depends on the unprecedented growth of molecular sequence data  <cit>  and this makes genbank the most accessible source of comparative data for most taxa in the tree of life  <cit> . whilst more sequence data, more powerful computers and improved phylogenetic reconstruction algorithms will enable researcher to generate up-to-date phylogenies from the raw data in the future, past phylogenetic inferences will remain central to guiding researchers towards studying poorly supported relationships and under-sampled lineages. they are also central for studying the effects of new phylogenetic methodologies and new and larger datasets  <cit> .

not all phylogenetically informative data are confined to sequence databases. treebase is a very valuable repository as it holds morphological or genetic data with the associated published phylogeny  <cit> . however, as few publishers require submission to treebase as a pre-requisite for publication, a large number of phylogenies remain embedded as images in published articles. indeed, the rapid growth of published phylogenies is not matched by the availability of those trees in databases .

the idea of using a program to convert a tree image into a computer-readable representation of that tree was first implemented in treethief  <cit>  which required the user to trace a tree by clicking on each of its nodes in turn. the latter program is only available for the discontinued operating system mac os  <dig>  laubach and von haeseler  <cit>  provided a conceptual advance with a semi-automatic program called treesnatcher that has recently been updated  <cit> . treesnatcher uses image-processing methods to prepare a tree image and detect the tree structure, it works on rectangular and freeform trees . the user supervises the tree recognition process by making corrections to the image. for example, the user can modify the image in order to make the foreground dark and background light, fill gaps in lines and identify the foreground. the program then determines inner node and tip locations. the user can add or remove further nodes and delete or add branches. the user is then required to assign species names to the tips before the program can build the newick tree code.

here, we will review the way researchers present their phylogenies, demonstrate the feasibility of a fully automated tree recognition software and provide a dataset of tree images and associated tree files for training and/or benchmarking future programs.

implementation
the current version of treeripper opens tree-image files in the formats png, jpg/jpeg, or gif.

• the tree needs to have the root on the left and leaves on the right.

• horizontal branches.

• the tree constitutes a dark foreground on a light homogenous background .

• the tree must be bi- or multifurcating 

• the inner nodes are branching points between lines and have no circles, rectangles, etc. inscribed.

• tip branches must have branch lengths greater than  <dig> 

treeripper is written in c++ using a set of standard template library algorithms provided by magick++. the image is first converted to black and white and rescaled so that horizontal lines are on average  <dig> pixels thick. the image is cleaned by removing a series of patterns such as black pixels surrounded by a box of white pixels and horizontal lines that are not connected to vertical lines. lines and corners are then patched up before the contour is traced and the topology detected. the locations of branch tips are then used to crop the tip labels from the original image. tip labels are converted to text using the freely available tesseract-ocr program. the steps in the program are depicted in figure  <dig>  the web application written in php enables the visualization of the tracing and allows editing of the labels.

RESULTS
we downloaded  <dig> images which had phylogen* or supertree in their caption from  <dig> articles published in the open access journal bmc evolutionary biology between  <dig> and  <dig>  only eleven out of these  <dig> articles have submitted their alignment and tree files to treebase. all images were visually inspected to check whether the image met the prerequisites. twenty-four images were not phylogenies,  <dig> were represented as radial tree layouts,  <dig> as polar tree layouts and  <dig> as cladograms. of those represented with a rectangular tree layout,  <dig> had background boxes,  <dig> had lines intersecting branches or branches drawn with dotted or dashed lines,  <dig> had circles or boxes as nodes,  <dig> were illustrated over multiple pages,  <dig> had triangles as tip leaves,  <dig> had leaves with zero branch lengths. a further  <dig> would need some form of pre-processing . of the  <dig> images of phylogenies downloaded only  <dig>  met the prerequisites for this program, which are very similar to those of the original semi-automatic recognition software treesnatcher  <cit> . this small proportion of the total phylogenetic images illustrates the plethora of ways trees are currently represented in one journal alone. of the  <dig> phylogenies that meet the prerequisites, the topologies of  <dig> trees  were successfully recognized by treeripper without any prior processing. the proportion of successfully recognised images was higher for phylogenies with fewer leaves  and the largest phylogeny successfully recognised had  <dig> leaves. the average processing time was  <dig> seconds  using a macbook pro . we do not review the accuracy of the ocr here as it has been done elsewhere .

the successfully recognised tree images along with a further  <dig> images manually converted to tree files are provided as supplementary material in nexus, newick and phyloxml formats  <cit>   for training and/or benchmarking future programs.

CONCLUSIONS
although the program has a high failure rate, it is the first step towards an automated approach for optical tree recognition and proves the feasibility of an approach, which will allow us to defrost published phylogenetic hypotheses. we are unlikely to ever be able to create an application that recognises all possible trees due to the sheer diversity of ways phylogenies have been illustrated but at the very least, this program could be used for automating tree recognition of large sets of tree images before using manual conversion or semi-automated programs like treesnatcher for the trees that were not converted.

as phylogenetics enters a third phase of growth with the advent of next-generation sequencing, one hopes that the work of future phylogenetists will be published in a format that will enable the digital curation and preservation of their hard work.

availability and requirements
project name: treeripper 

webserver: http://linnaeus.zoology.gla.ac.uk/~jhughes/treeripper

project home page: https://code.google.com/p/treeripper/

programming language: c++ and php web interface

license: gnu gpl v3

prerequisites
tesseract-ocr licensed with the apache  <dig>  license except the tesseracttrainer.py, which is licensed with gpl: http://code.google.com/p/tesseract-ocr

imagemagick, license is compatible with the gpl: http://www.imagemagick.org/

authors' contributions
jh developed the idea, wrote the code, tested the software and drafted the manuscript.

supplementary material
additional file 1
tree images, associated newick file and example perl script for batch processing. set of images and associated nexus tree file as a zip file.

click here for file

 acknowledgements
i am very grateful to rod page for giving me the freedom to tackle this project, and for the useful comments, suggestions and debugging help during the project. jh is funded by the biotechnology and biological sciences research council  .
