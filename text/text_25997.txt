BACKGROUND
a major challenge for computational systems biology is the inference of gene regulatory networks  from high-throughput data such as gene expression time-series
 <cit> . this is particularly challenging when the available time-series are short  and multiple regulators interact through cooperative or competitive mechanisms. an important first step towards uncovering regulatory networks is the identification of the targets of regulatory factors, particularly transcription factor  proteins which control the transcription rate of their target genes through dna-binding associations. in this paper we develop a computational method to infer the targets of a set of co-regulating tfs using expression time-series data from a small number of conditions. our method is based on first learning the nature of the tf activities by focussing on a well-characterised subnetwork of targets and then performing genome-wide scans to locate other targets of the tfs. a flexible regulation model accounts for non-linear response, tf interactions and protein/mrna degradation. a bayesian model scoring procedure provides a principled framework for comparing alternative regulation scenarios for each putative target gene and determining the statistical support for direct regulator-target relationships.

an experimental approach to identifying tf targets might involve the design of mutant strains with the tf perturbed  and differences in the gene expression of all putative targets analyzed
 <cit> . when considering multiple regulators such experiments are difficult to design since all combinations of regulators have to be probed. it can also be very difficult to differentiate between direct and indirect regulation from perturbation data. an alternative or complementary experimental approach is to discover the binding sites of regulating tfs of interest through chromatin immunoprecipitation  experiments
 <cit>  . this provides an excellent means to identify direct tf regulation. however, not all binding events show a clear relationship with gene regulation
 <cit>  and bound enhancers that are not close to a promoter region may be difficult to assign to a particular target gene. to capture transient regulatory events it is necessary to carry out a chip experiment in time-series
 <cit>  and this may be prohibitively costly and time consuming for multiple tfs. gene expression time-series data therefore remain an immensely useful resource for uncovering the functional significance of regulatory interactions and to help confirm enhancer-target relationships.

many computational methods have been introduced to infer or “reverse engineer” grns from time-series expression data
 <cit> . many of the proposed methods focus on uncovering the regulatory network for a subset of regulatory genes that are assumed to form the core of a regulatory network. this subset is typically identified as a pre-processing step, e.g. all differentially expressed or periodic tfs. popular methods include state-space models
 <cit> , dynamic bayesian networks
 <cit>  and ordinary differential equation  models
 <cit> ; see
 <cit>  for a recent review and comparative assessment on real and synthetic time-series datasets. a related but more constrained problem than grn inference is the identification of the targets of one or a few tfs that are known to be of functional significance
 <cit> . such an approach can be applied to find targets genome-wide without very substantial filtering to reduce the set of putative targets. this target identification problem is often not aimed at identifying the full grn model since only a limited number of tfs may be considered. however, genome-wide target identification is very useful for identifying regulated pathways or processes, or for prioritizing targets for further analysis  or further experiments . an example is the work of barenco et al.
 <cit>  who used bayesian inference over a linear activation model to rank targets of a single tf. they considered the case of a tf activated by post-translational modification in which case a small set of known targets are required to learn the tf activity prior to ranking putative targets. in subsequent work by gao et al.
 <cit> , gaussian process inference techniques were developed for the same model and for non-linear generalisations 
 <cit> . honkela et al.
 <cit>  extended the gaussian process method for target ranking in the case of a tf under transcriptional control by including a model of tf translation. in this case a set of known targets is not required to fit the model.

the target identification methods of barenco et al.
 <cit>  and honkela et al.
 <cit>  are restricted to the case of a single regulating tf. this is a useful simplification when data are limited but often tfs interact to regulate their targets through cooperative or competitive processes. methods that ignore such interactions may have reduced accuracy in identifying targets and cannot be used to identify co-regulation of targets by multiple tfs. other methods have been developed which allow for regulation by multiple regulators. a popular method is the inferelator
 <cit>  which is based on fitting an ode model with a sigmoidal non-linear regulation function to all putative regulator-target interactions. sparse regression techniques are used to identify the regulatory network by setting the influence of unsupported links to zero. the inferelator was one of the top performing methods for grn inference in recent dialogue for reverse engineering assessments and methods  competitions for network inference
 <cit>  . unlike other grn inference methods for time-series data, such as state-space models
 <cit> , dynamic bayesian networks
 <cit>  and other ode-based methods
 <cit> , the inferelator can be used for the more limited target identification task since it models the single layer target-regulator network in a decoupled manner. the highly efficient methods for inference developed for the inferelator allows the model to be applied to large sets of regulating tfs, making this an attractive and highly practical tool for target inference from time-series data. the method is also quite general and can incorporate steady-state expression data from perturbation experiments.

in this contribution we show that combining the idea of a training set of known targets with a non-linear regulation model can provide a very effective method for target identification. a distinguishing feature of our work is the use of a well-characterised  subnetwork which is used to learn protein activities for the regulating tfs of interest . this builds on the work of barenco et al. who learned a model of tf activity from a set of known target genes
 <cit> . we show that our method allows useful predictions to be made with only a single wild-type developmental time-series of  <dig> time points, thereby providing a practical tool for identifying context-specific regulatory targets. our results show highly statistically significant enrichment for chip-confirmed bindings of the putative regulators in the same system and significantly better enrichment than competing methods.
 <cit>  and blue lines show model predictions and associated credible regions. in the top row we show the activity profiles for each tf which are inferred during the training phase by fitting a regulation model on a network of known structure. in the bottom row we show the model fit during genome-wide scanning for this target gene. we show the target mrna concentration profile inferred by fitted models of  regulation by bap only,  regulation by mef <dig> only and  regulation by bap and mef <dig>  the candidate gene is confirmed as a joint target by independent chip-chip studies
 <cit> .

a confounding aspect when applying target prediction models for a limited number of regulators is the presence of tfs that are unknown or other unmeasurable influences on the system. we show on simulated data that, despite the presence of such confounding influences, our model can reconstruct the influence of multiple regulators of interest. we also show how data from additional conditions can easily be incorporated to improve inference when available.

RESULTS
overview of the method
our approach is based on three main components: i) the use of odes to model transcription, translation and mrna/protein decay, ii) a known set of tfs that regulate transcription and iii) data-driven inference of the model parameters and network structures by using a fully bayesian statistical method
 <cit> . to infer tf activities over time, which can be considered functional parameters in our model, we extend previously developed gaussian process inference techniques
 <cit>  to the case of multiple tfs interacting through a non-linear regulation function. here we provide a brief description of the methodology and introduce notation that is useful for the presentation of the results. a detailed description is given in methods and the supplementary information.

consider the following dynamical models for the time-evolution of mrna and tf protein abundances driven by gene transcription and tf protein translation, 

  transcriptiondmjdt=bj+sjgp <dig> …,pi;θj−djmj. 

this ode model ties together the target gene mrna concentration mj, and the regulator tf protein activities pi. the translation model then relates the tf protein activities to the corresponding tf mrna levels fi, 

  translationdpidt=fi−δipi. 

in the transcription equation, the tfs can jointly modulate the mrna production rate of a target gene through the response function g . the equation also models mrna degradation with rate dj while bj represents a basal production rate and sj is a sensitivity parameter. the response function takes a sigmoidal form that non-linearly transforms the tf activities so that saturation effects are taken into account and the tfs can competitively or cooperatively activate or repress transcription
 <cit> . the response function also depends on parameters θj which determine the network structure and regulation model coefficients. these parameters include weights that can effectively model nth order reactions, thus approximating the effect of, for example, tf dimerisation. similarly, the translation equation explains the production rate of the active tf protein as a function of its mrna while accounting for the protein degradation with rate δi. we assume that the main rate-limiting step in production of active tf protein is transcription. thus the tf activity can be considered equivalent to the tf protein concentration. this is thought to be a reasonable assumption for tfs in the drosophila embryonic developmental system considered later
 <cit>  but in other systems tfs may be primarily regulated by post-translational modifications. in the drosophila system there is significant evidence for dimerisation of the tfs, see e.g.
 <cit> , but no evidence of regulation by other post-translational modifications. in systems where tf activity is actively regulated by post-translational modification, e.g. through phosphorylation by a signalling pathway, then the above translation model would not correctly model changes in the concentration of active tf protein in the nucleus. however, the modelling framework that we propose can still be applied by removing the translation equations and modelling the tf protein activity as a driving latent function; see
 <cit>  for examples of this approach to tf activity inference.

in many experiments the protein activities, pi, will be difficult or impossible to measure. these continuous-time profiles must be inferred along with the parameters θj,dj,bj,sj and δi. importantly, some individual parameters in θj quantify the interactions between tfs and genes and the estimation of their values allows us to infer the network structure, i.e. to identify the subset of tfs that regulate the transcription of each gene. the full continuous-time mrna functions mj and fi are also unobserved. a typical set-up is that we have noisy observations of these functions obtained at a set of discrete time points through gene expression analysis. fitting the dynamical models to a biological system is carried out by the following two phases :
 <cit> .  the prediction phase involves scoring all alternative regulation models for each putative target gene . during this phase we assume that tf activities have a probability distribution given by the posterior distribution inferred during the training phase. the bayesian evidence score is calculated for each regulation model and the posterior probability of any regulatory relationship of interest, such as tf–target gene associations, is determined by bayesian model averaging.

 <dig>  training phase: here, we use the dynamical models to estimate the tf activities, pi, by using a small set of training genes. the approximate structure of this sub-network is assumed to be given so that for these genes the regulating tfs are known to some degree. all other model parameters are unknown and are inferred from the data. in this phase both the transcription model and the translation model are used to estimate the tfs. observations associated with both the mrna of the training genes and the tf mrnas are required. the training phase could be carried out without the translation model in cases where tf protein activity is regulated by post-translational modification. extensive experimentation with artificial data reveals that, when appropriate, combining a translation model with tf mrna observations greatly aids in estimation of the tf activities.

 <dig>  prediction phase: once the tf activities have been estimated, each test gene  is processed independently and the parameters  are inferred. here, only the transcription model is needed while the translation model is irrelevant. this phase is applied on a genome-wide scale and aims to identify the regulating tfs for each test gene.

the above phases can be applied to a situation where prior biological knowledge provides information only about a small set of well-studied genes for which the regulating tfs are known to some degree. these genes are treated as the training data that are used to infer the activity profiles of the tfs. typically, a full genome-wide list of targets of the tfs is unknown. this is the motivation behind the second phase which applies the trained models for genome-wide prediction of network links between genes and tfs. an important property of the second phase is that it is trivially parallelizable which allows for fast computations. the algorithms for fitting the models are based on bayesian probabilistic inference and details are given in the supplementary information.

we will illustrate our methodology using mesoderm development in embryonic drosophila melanogaster. first, though, we create an artificial example that highlights the difficulties inherent in inference of transcription networks directly from data.

synthetic data
we consider an artificial gene network involving four transcription factors: ant, bee, car and unk. we will simulate data directly from our network, but when modelling the data we will only consider three of these transcription factors: ant, bee and car. this reflects a realistic scenario where there is an unacknowledged confounding transcription factor  affecting our system. we simulated data associated with two experimental conditions. the data are short unevenly sampled time-series of  <dig> time points. in our first experimental condition there is considerable overlap between the tf concentrations of ant and bee as shown in figure
 <dig>  while in the second experimental condition the overlap of bee with ant is far less ). in both experimental conditions there is considerable overlap between unk and the three acknowledged tfs.

the purpose of our experiment with simulated data is to predict the set of regulating tfs for each gene using artificially generated mrna measurements. since the ground-truth network links are known, we can make a rigorous assessment of the ability of the model to identify the target genes of each of the tfs, as well as an assessment of the ability to predict non-regulation. the modelling is split into two distinct phases as described in the previous section. in the training phase,  <dig> genes with approximately known connectivity were used for learning the tf profiles. specifically, to make the training phase more realistic we added 15% noise to the ground-truth network links in these  <dig> training genes. this resulted in  <dig> links between tfs and genes  to change so that some of these links falsely became active and others were removed . notice that this noise in the network links adds an extra model-mismatch in addition to the presence of the unk tf which is not part of the model. in the prediction phase these profiles were used to rank other potential targets of the tfs from the remaining  <dig> genes. full details on how the data have been generated are given in methods, while the dataset is provided together with software that is available online.

to assess the predictive ability of the model with respect to the amount of information present in the data, we consider three experiments. in the first experiment only data from the first experimental condition are used, in the second experiment only data from the second experimental condition are used, while in the third experiment all data from both conditions are considered.

using data from one experimental condition
here, we assume the synthetic mrna data are produced by a single experimental condition, i.e. either the first or the second condition mentioned earlier. when considering the first condition the true tf profiles for ant, bee, car and unk are shown in the left plot of figure
 <dig> and the corresponding tf mrna functions are shown in additional file
1: figure s <dig>  the remaining three plots in figure
 <dig> show the tf activities estimated in the training phase by using  <dig> genes with approximately known network connectivity and unknown model parameters. the coloured solid lines show the estimated means and the shaded areas represent 95% posterior credible regions around the estimated means. plots showing how the model fits the mrna data in the training phase are presented in additional file
1: figures s <dig> and s <dig> and all corresponding ode parameters are shown in additional file
1: figures s <dig> and s <dig> 

figure
 <dig> shows that ant and bee have very similar profiles. this is a realistic scenario, but this type of ambiguity can have a negative effect on the estimated tf activities and the predictive accuracy of the model. in particular, the estimation of these two tfs, shown in the second and third plot from the left in figure
 <dig>  is rather uncertain . moreover, the fact that the profiles of these tfs overlap significantly with each other yields poor performance when predicting the network links. the roc curves in figure
 <dig> show accuracy when predicting the individual tf links  and overall performance when predicting single links . in all panels the solid red line is the roc curve associated with the performance of the model when using the first experimental condition. notice that for ant and bee the performance is only slightly better than random . for car the performance is better since the profile of this tf overlaps much less with those of ant and bee.

from the above experiment we can conclude that it is rather difficult to accurately predict network links between tfs and genes from experimental data obtained under conditions that do not disambiguate sufficiently the functionality of the tfs during the transcription process. roughly speaking, the “similarity” of some tfs causes the observed mrna data to be well explained by alternative hypotheses associated with the presence/absence of these similar tfs and makes it hard to statistically identify which of those tfs were actually driving the regulation process.

we now consider a second series of observed mrna measurements associated with an alternative simulated experimental condition comprising a perturbation of the biological system that better disambiguates the two  tfs in terms of their influence in gene transcription. we first use only these new data instead of the data associated with the first experimental condition. this alternative perturbation changes significantly the protein activity for bee as shown on the left plot in figure
 <dig>  while ant, car and unk are assumed to behave similarly to the first experimental condition. the estimated tfs are shown in the plots of the remaining three columns of figure
 <dig> and model fits in the training mrna data for this second condition are plotted in additional file
1: figures s <dig> and s <dig> and all associated ode parameters are shown in additional file
1: figures s <dig> and s <dig>  the blue roc curves in figure
 <dig> show predictive performance when using this second experimental condition. as the blue curves indicate, the performance now improves compared to the results obtained by using the first condition . this is expected since the second condition disambiguates more efficiently the tf activities than the first condition. in the next section we will see that the performance can be further improved when the models are fitted simultaneously to data from both experimental conditions.

combining the data from both experimental conditions
in our third experiment we fit the models using all data from both experimental conditions. figure
 <dig> shows the tfs that generated the mrna data for both experimental conditions  and the estimated tfs . each row of figure
 <dig> corresponds to each of the two conditions. model fits in the training mrna data are plotted in additional file
1: figures s <dig> and s <dig> and all associated ode parameters are shown in additional file
1: figures s <dig> and s <dig> 

including data from both experimental conditions allows for a more confident estimation of the tf profiles. to see this, we can contrast the second up to fourth plots in the first row of figure
 <dig> with the corresponding plots of figure
3-. the credible regions when simultaneously using both experimental conditions are significantly smaller, which implies higher confidence.

furthermore, we obtain a significant increase in the predictive performance when identifying network links. as the green coloured roc curves in figure
 <dig> reveal, the performance when predicting single network links is significantly improved. finally, we can exploit the ability of the model to predict a simultaneous regulation of the target gene by two or more tfs. additional file
1: figure s <dig> displays the predictive roc curves for all three tf pairs in this example.

drosophila data
in this section we apply our method to a dataset of three independently repeated time-series of  <dig> time points collected hourly throughout drosophila melanogaster embryogenesis in wild-type embryos
 <cit> . for preprocessing of the data we followed
 <cit> . we study five tfs that are key regulators of mesoderm and muscle development in drosophila: tinman , biniou , twist , bagpipe  and myocyte enhancer factor  <dig> 
 <cit> . we identified an initial set of  <dig> genes from
 <cit>  associated with a curated subset of chip-bound enhancers that have well characterised effects on expression . many of these genes display expression profiles that cannot be fully explained using the five studied tfs. to remove these confounding targets, the training modelling phase  was robustified as follows. we first performed a preliminary fit of a robustified model using a noise model including both a component extracted from microarray preprocessing as well as an additive learned component. we then selected genes that had sufficiently small additive learned variance , resulting in  <dig> genes. these were then used in final training with only noise from preprocessing included in the model. figure
 <dig> shows the inferred profiles for all five tfs  together with the corresponding predicted tf mrnas  for the third replica of the time-series. the tf profiles and predicted tf mrnas for the remaining two replicas are shown in additional file
1: figure s <dig>  model fits in the training mrna target gene data are shown in additional file
1: figure s <dig>  and additional file
1: figure s <dig>  in the supplementary information while ode parameters are shown in additional file
1: figures s <dig> and s <dig> 

prediction of network connections
once the tf activities have been estimated, we use the model to predict the regulator tfs for a set of  <dig> test genes which exclude the  <dig> genes used in the training phase. a web-based browser that displays how the model fits the mrna data of test genes is available online at
 <cit> . full posterior probabilities of all alternative models for all test genes are included in additional file
 <dig>  this set includes all genes in the data that are not classified as weakly expressed according to the criterion explained previously
 <cit> . we followed an approach to evaluation of predictive performance similar to one described in
 <cit> . a number of predictions is evaluated by considering for each gene a predicted set of regulators correct if all tfs in the set had evidence of binding within  <dig> base pairs of the corresponding gene in the chip-chip data in
 <cit> . different methods can be compared based on the corresponding percentage enrichments. it should be noted that this validation is still far from perfect since bound enhancers can regulate transcription from a distance greater than the conservative limit considered here. we also perform similar evaluation using tf-gene links in the drosophila interaction database 
 <cit> . this database in not specific to development and may thus include links that are not active in our data. we only include the  <dig> test genes with some predicted tf regulators in the database. we compare two variants of our proposed method to a maximum-likelihood-based baseline method, the inferelator  <dig> 
 <cit>  and a simpler sparse regression approach .

in the plots of figure
 <dig>  we consider inferring single tf and tf-pair regulators with chip evaluation. the single-tf ranking is constructed by computing for each gene the marginal posterior probability of the event that a certain tf is a regulator. since we have five tfs, there are five probabilities of this type for each gene. we compute the posterior probabilities in two ways: either averaging over all models weighted by their marginal likelihood  or using just the selected and null models . the resulting  <dig> ×  <dig> probabilities are sorted in decreasing order and figure
 <dig> displays the enrichment results at different cutoffs of this list. the predictions of both these methods are significantly better than random  and clearly outperform the maximum likelihood baseline and the inferelator. we also carried out empirical bootstrap tests for each pair-wise comparison of methods which confirm that the proposed methods outperform the other methods statistically significantly in most cases .

the results of  <dig> -fold bootstrap resampling of the data set of observed genes to assess significance of differences in ranking method performance. the methods studied are: p <dig> = posterior- <dig> method, p <dig> = posterior- <dig> method, p <dig> = posterior- <dig> method, ml = ml baseline method, inf = inferelator. for each pair of methods, the marks in the tables show how often the method on the corresponding row dominated the one on the corresponding column. the marks are interpreted as follows: ‘.’: >80%dominance, ‘+’: >90%dominance, ‘*’: > 95%dominance, ‘**’: >99%dominance, ‘***’: > <dig> %dominance, ‘-’: comparison not applicable.

for the tf-pair regulator rankings, we compute the marginal posterior probabilities for all possible pairs of tfs for each gene. the counterpart of posterior- <dig> now includes four models: the pair, both partners individually and the null, and is denoted by “posterior-4”. otherwise the ranking lists are computed exactly as in the case of single-tf regulators but now for the 10× <dig> possible tf-pair models. figure
 <dig> displays the results. the figure again shows statistically highly significant enrichment of binding of predicted regulators near the corresponding target genes. the enrichment is lower than it was for single-tf predictions, which is expected since the task of identifying regulating pairs of tfs is harder but may also be partly due to an increased number of false negatives in the validation data. the bayesian methods based on posterior probabilities are consistently more accurate than the maximum likelihood baseline. in most cases the more restricted set of models seems to yield better results. nevertheless, there are some tfs for which the opposite is true, as illustrated by the corresponding results, broken down for each tf, that are shown in additional file
1: figures s <dig> and s <dig>  this may be because the more restricted posterior probabilities are less sensitive to misspecification of prior probabilities of network links. currently all tfs are assumed to regulate every gene with prior probability  <dig> , which is unrealistic. unfortunately it is nontrivial to construct better alternatives without significant extra information because the tfs are heavily correlated. we did not wish to use the chip data for constructing such a prior since this was required as independent data for validating the results.

we also compute the a posteriori most probable regulator model for each gene, which we refer to as the maximum a posteriori  model. figure
 <dig> shows results of the chip evaluation based on the map regulator configuration for every gene, ranked by the posterior probability of this most probable model. because there is no clear way to rank the genes with the inferelator, the accuracy is only shown for the complete list of all genes. additionally we compare the results against a more straightforward sparse regression method .

figure
 <dig> displays results for full validation of both positive and negative predictions. the results of the proposed method are statistically very significantly better than random, while the maximum likelihood baseline and the inferelator are no better than random guessing. the regression method does poorly at first but ends with a much higher accuracy than all others. the main reason for this is that it makes a higher fraction of negative predictions; all other methods make many fewer predictions for genes being unregulated by all tfs while such cases are fairly common based on our validation data. this behaviour is expected for the probabilistic method, which has a uniform prior over regulating tf combinations. under this prior, the prior probability for a gene to be unregulated is only 1/ <dig>  if a more sensible prior is used, for example, by considering the empirical prior from the binding frequencies in the validation data, the proposed method can attain even higher accuracy than the regression method . according to the bootstrap testing, the proposed method is statistically significantly better than the alternatives in all cases except regression with ≥ <dig> top predictions .

the results of  <dig> -fold bootstrap resampling of the data set of observed genes to assess significance of differences in ranking method performance. the methods studied are: map = map gp method, ml = ml baseline method, reg = regression baseline method, inf = inferelator. for each pair of methods, the marks in the tables show how often the method on the corresponding row dominated the one on the corresponding column. the marks are interpreted as follows: ‘.’: >80%dominance, ‘+’: >90%dominance, ‘*’: >95%dominance, ‘**’: >99%dominance, ‘***’: > <dig> %dominance, ‘-’: comparison not applicable.

because of frequent non-functional binding
 <cit> , it makes sense to ignore additional bound tfs. in this case negative predictions cannot be validated, only positive ones. figure
 <dig> shows the validation results in this case. genes with a map model with no regulation were ignored because they would all be judged as “correct” here, biasing the accuracy results. the figure again shows statistically significant enrichment of binding of predicted regulators near the target genes. the proposed bayesian method based on posterior probabilities is clearly more accurate than the maximum likelihood baseline and also more accurate than the regression method in all cases. according to the bootstrap testing, the proposed method is statistically significantly better than the alternatives in all cases except maximum likelihood baseline  <dig> top predictions . the computation times of the different alternatives are listed in table
 <dig> 

running computer times  of different methods for scoring all possible  <dig> models  in a single target gene  in the drosophila data.

similar evaluation for droid validation is shown in figures
 <dig> and
 <dig>  in figure
 <dig> the relative order of the methods is mostly the same as in figure
 <dig>  but the percentage enrichments of all methods are significantly lower. this may be due to incompleteness of the droid database. the number of annotated tf-gene interactions in droid is roughly similar to the number of genes with chip binding for twi, but much lower for all other tfs. the number of genes with more than one regulator is even more significantly lower in droid. as the chip data was gathered using the same protocol for all tfs, it seems more likely to contain balanced information for all tfs. nevertheless, the most probable regulator combination results in figure
 <dig> show very high accuracy for our map method, which is very clearly superior to all other methods, except regression when using the full list of genes. bootstrap testing results are presented in tables
 <dig> and
 <dig> 
 <dig> but using droid database tf-gene interactions instead of chip binding for validation.
 <dig> but using droid database tf-gene interactions instead of chip binding for validation.

same as table
 <dig> but for droid evaluation.

same as table
 <dig> but for droid evaluation.

parameter estimates
the protein degradation rates and the corresponding protein half-life estimates from the model are presented in table
 <dig>  the estimates are unusually short for proteins in general, but they are in line with recent research demonstrating that twist homologue has a very short half-life in the mouse
 <cit> . as other studied tfs are from the same protein family, it is plausible they could share similar half-lives. cell division also contributes to the effective degradation rate and it is also possible that diversification during development can lead to a higher effective decay rate since the proportion of cells with tissue-specific tf activity reduces over time. these effects will also increase the effective target mrna degradation rates.

inferred protein degradation rates  for the five tfs and the corresponding estimates for the half-life of each protein . recall that the formula for the half-life is
log/δ where δ is protein degradation rate. each triple  of values corresponds to 5% percentile, median and 95% percentile.

discussion
it may be thought that a typical short time-series expression dataset contains only very limited information about the structure of a grn. in a meta-analysis of methods proposed in the dream  <dig> competition
 <cit> , the authors in
 <cit>  found time-series data to be much less informative for network inference than data from a similar number of perturbation experiments. however, in the datasets considered there many of the time-series experiments are rather uninformative about expression changes given the level of noise in the data and uninformative selection of sampled time points. we would argue that the success of a method for analysis of time-series data will depend greatly on how informative the profiles of the regulatory species are. in our synthetic example we clearly demonstrated how inference is sensitive to confounding by highly similar temporal profiles of regulating tfs, so it is certainly desirable to have access to data from diverse experimental conditions where available. yet with an animal system the available perturbations may be severely limited and the wild-type under normal conditions is of great interest for understanding healthy function. methods for learning the structure of a regulatory network from one or a few short time course experiments are of great practical importance for uncovering a condition-specific grn.

many methods for the inference of grns from gene expression data require much more data, and data from a much greater diversity of experiments, than we consider here
 <cit> . however, several approaches have been proposed for identifying the targets of a specific tf given data from time-series experiments collected under one or two conditions
 <cit> . the methods in
 <cit>  and
 <cit>  rank targets by fitting simple linear activation differential equation models for a single regulating tf. these methods do not account for the more general and realistic scenario of non-linear regulation by multiple tfs. the method in
 <cit>  does allow for regulation by other unknown factors, modelled by fitting a sparse linear regression model, but assumes measurements of the tf protein are available. here we introduced a much more general method, where a model of non-linear regulation by multiple tfs is used to predict which set of tfs regulate each putative target on a genome-wide scale. bayesian inference methods provide a principled approach for  dealing with an underdetermined inference problem by bayesian parameter averaging,  scoring alternative networks by bayesian model selection and  predicting tf-target associations by bayesian model averaging. our results demonstrate that even with very limited time-series information the method is able to correctly identify which of the closely related tfs regulate the given target. this is clearly a more challenging task that is not addressed in
 <cit>  and
 <cit> . additional information, even just independent estimates of decay rates of different transcripts, would certainly make the task easier, as demonstrated in
 <cit>  and also our results on synthetic data.

the inferelator is an effective method for target identification which also uses a non-linear regulation model that accounts for regulation by multiple tfs
 <cit> . the inferelator is applicable more generally since it uses less prior information about the system than we are assuming. two important assumptions were made in the analysis of the drosophila data; we assumed knowledge of a well-characterised sub-network of the grn, which is used to learn the tf activity profiles during the training phase, and in the present application we restrict ourselves to models of activation. our results demonstrate improved performance over the inferelator but it should be acknowledged that we are solving a more restricted class of problem. our method is also much more computationally demanding ; it is applicable to genome-wide scanning for a small set of tfs but would not be applicable for a very large set of regulating tfs in the current implementation. nevertheless, our results demonstrate that the inclusion of additional domain knowledge or prior assumptions, where available, can improve performance over more general methods. probabilistic modelling provides a useful framework for the inclusion of such prior knowledge.

median value  across all mrna degradation rates of the  <dig> artificially generated genes. the exact values for the protein degradation rates used to simulate the data are also given.

inference of continuous-time tf activity profiles from short time-series is an ill-posed problem. we resolve this through introduction of a gaussian process prior that effectively assumes smoothness of the underlying functions
 <cit> . while this assumption appears reasonable for the tfs studied here, there are situations where the tf is activated very rapidly through signalling, e.g. in a sensory grn
 <cit> . in these situations an alternative model better suited for fast transitions such as that presented in
 <cit>  may be preferable. alternatively, the gaussian process could be transformed to provide a sharper switching behaviour by passing it through a sigmoidal non-linearity  and the current inference methodology would remain applicable.

carrying out bayesian inference over non-linear systems with functional parameters is very challenging. for parameter inference we have made use of state-of-the-art methods for markov chain monte carlo  over functional degrees of freedom
 <cit> . we have developed a novel fast method for calculating the bayesian evidence score that allows us to carry out genome-wide model scoring . our method is very easily parallelizable within the prediction phase and can therefore be considered a practical contribution to the functional genomics toolkit.

the data used here are very limited and therefore one must accept that the method will make many false predictions. to improve accuracy, predictions based on the analysis of expression data can be combined with evidence from complementary sources  to identify a confident regulatory network structure. for example,
 <cit>  show how the accuracy of model-based prediction improves greatly when additional evidence from spatial expression data is considered. the bayesian framework presented here provides a very natural means for integrating other sources of data or prior knowledge for network inference. for example, it would be straightforward to associate alternative regulatory structures ) with different prior probabilities derived from chip-chip binding patterns. these priors could be used to re-weight the bayesian model averaging scheme used to calculate the probability of network structures. we do not pursue this approach here because we want independent chip-chip validation of our method’s performance. alternatively, given time-series chip data, one could include binding observations directly in the model. this would have the advantage that one could model measurement errors for both the expression and chip experiments.

CONCLUSIONS
we have introduced a computational approach for genome-wide inference of the targets of multiple regulating tfs given time-series gene expression data. using a time course measuring changes in wild-type expression during the embryonic development of drosophila we were able to show that the method makes predictions which are significantly enriched for tf and tf-pair binding identified using chip-chip experiments on the same system. our method works by fitting and scoring differential equation models of transcriptional regulation. initially we use the model to infer the temporal pattern of tf protein activity given a small subnetwork of mostly known structure. subsequently we score alternative target gene regulation models to make genome-wide target predictions. by using a fully bayesian procedure we are able to automatically balance model complexity with data fit when scoring alternative models. our method is readily parallelizable in the prediction phase, making it a practical tool for genome-wide network inference. on artificial data we showed that our method is able to cope with the existence of unknown regulating tfs that are not modelled and we showed that data from more diverse experimental conditions can help disambiguate between tfs that have similar profiles in a single condition. however, as our drosophila example shows, even a single wild-type time course can be highly informative about the underlying regulatory network if the tfs of interest are changing over time. by combining the model predictions with other independent sources of evidence, e.g. from chip and spatial expression patterns, it will be possible to identify a confident condition-specific regulatory network.

availability
software and a web-based browser displaying results in the drosophila experiment are both available online at
 <cit> .

