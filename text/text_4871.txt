BACKGROUND
the generation of high-density data from microarrays designed to measure transcriptional changes on a whole-genome scale has significantly changed the landscape of biological-based research. experiments based on microarray technology are now commonplace in private sector, government and academic laboratories. this has been of great benefit to our understanding of biological systems but has introduced some problems related to the use and sharing of high density data. with microarrays the number of processing and quality assurance steps to be documented has increased and the amount of data to be stored, analyzed, and shared has increased exponentially. if microarray experiments are performed on a scale larger than just a few arrays, the need for computational-based solutions to allow for the effective documentation, storage, analysis and sharing of the data generated becomes necessary.

a number of commercial and non-commercial software solutions have been developed to address the problems associated with the scale of microarray data. some commercial options available to address the aforementioned problems of microarray data include genespring gx <cit> , rosetta resolver <cit> , nexus expression <cit> , partek <cit> , spotfire <cit> , and genesifter <cit> . for some researchers, these commercial options offer an excellent solution to their specific needs. however, a majority of these solutions do not address all of the problems mentioned in relation to the magnitude of microarray data and, if they do, they are, for some, cost prohibitive. additionally, as commercial software options they may have strict limitations on the number of users who can access the software and the software may only be available on certain operating systems. non-commercial options available include carmaweb <cit> , magma <cit> , gepas <cit> , asterias <cit> , arraypipe <cit> , midaw <cit> , mars <cit> , race <cit> , webarray <cit> , ezarray <cit> , and expression profiler/array express <cit> . these non-commercial options are viable solutions for some users and have greatly increased the ease in which microarray data analysis can be accomplished. however, none of these options encompasses a total solution that includes documenting the processing and quality assurance steps in the array generation process, as well as providing a means of storing, analyzing, and sharing microarray data specific to the agilent platform.

to address the problems of dealing with microarray data generated on the agilent dna microarray platform, we have developed a software tool, edge <dig>  an open-source, freely available, web-based software application that allows for the storage, analysis, and controlled sharing of transcription-based microarray data generated on the agilent dna platform. in addition, edge <dig> also provides a means for a lab or genomics core to manage rna samples and arrays during the hybridization process via a well-defined workflow that aims to aid in meeting or exceeding miame guidelines <cit> . edge <dig> has been designed with the assumption that methods for background correction and normalization have been designated within the agilent feature extraction software package. subsequently, the signal intensities and log ratios have been calculated using agilent feature extraction software-based algorithms.

edge <dig> is freely available for download at  with the source code distributed via a subversion  <cit>  repository or a compressed archive.

implementation
throughout the development process we have relied on a number of open-source software solutions. the software of edge <dig> can be thought of as consisting of four components separated into  <dig> layers of integration: a user interface layer, an interface and data generation layer, and a storage layer . the first component, user interaction, is the interactive, front-end interface and comprises the user interface layer. to access edge <dig>  the only software required of the end-user is an internet browser. we suggest utilizing firefox version  <dig> + as it conforms to a high degree with open standards and is available for use on most operating systems. the interface and data generation layer is composed of two components: a web server component and a data analysis component. the web server component of edge <dig> is the software utilized to generate the front-end interface. the generation of this front-end is accomplished by apache web server with php. edge <dig> has been tested extensively with apache version  <dig> . <dig> and php  <dig> .4- <dig>  the data analysis component encompasses the software utilized to perform the various data analysis functions. to that end, java version  <dig> + of the runtime compiler and the r statistical package version  <dig> +  <cit>  and bioconductor <cit>  are required for aspects of data analysis.

the storage layer is composed of the database component. the database component is the back-end relational database used for the storage of microarray data and associated information. mysql version  <dig> . <dig> is utilized as the back-end relational database. the database schema currently consists of  <dig> tables. see additional file 1: edge <dig> database schema. the mysql database server is not necessarily required, as the database schema of edge <dig> could be utilized with other database engines due to the use of the adodb database abstraction library for php <cit> .

RESULTS
two major functions of edge3
edge <dig> has been developed with two major functions in mind. the first function is to provide a means to manage and annotate microarray-based experiments utilizing a workflow for the generation of microarray data. this function is an administrative one and its implementation involved the development of a basic information management system to track the progress of user-submitted rna samples to our microarray facility for processing. the second function of edge <dig> is to allow for easy storage, analysis, and sharing of microarray data in a manner that is simple, accessible, and conducive to collaboration. the majority of the development of edge <dig> has been done within the context of integration with the agilent two color platform. from the standpoint of an end-user, the two different functions can be thought of as an experiment management section and an experiment data analysis section, respectively. in reality, the experiment management section can be decoupled from the data analysis section and serve as a means to archive array data and monitor quality control. however, the data analysis section is dependent on the back-end database and the server file system.

experiment management user interface
the experiment management user interface is composed of five main sections. the layout of the interface is intended to provide an intuitive and simple means to manage and monitor the progress of a microarray experiment created in edge <dig>  figure  <dig> gives a brief explanation of each section.

edge <dig> experiment-based object hierarchy
management of array processing utilizes three fundamental objects: 1) experiment, 2) array and 3) rna sample. see additional file 2: three main objects in edge <dig> experiment management. when an object is created, it is assigned a unique identifier allowing for the association with descriptive information and data. an experiment object is created to contain array objects. an array object can be a part of any number of experiments. an array object is created to contain rna sample objects. as an example, a two-channel array object consists of two rna samples, one for the cy <dig> channel and one for the cy <dig> channel. what makes an array object unique is the hybridization instance of its rna sample object components. a hybridization instance in this case can be thought of as a single instance of one rna sample hybridized with another rna sample on one distinct array. thus, technical replicates using the same rna samples labelled in the same or opposite manner are treated as unique arrays. an rna sample object is the most fundamental object in the experiment-based object hierarchy of edge <dig>  since rna sample objects are able to be associated with multiple array objects and, possibly, multiple experiments, rna sample objects require the most detailed information.

conforming to miame guidelines
utilization of the three objects composing the edge <dig> experiment-based hierarchy aims to provide a means to satisfy the objective of meeting miame guidelines. though the objects provide direction towards that objective, without adequate curation it is difficult to ensure the adherence to miame standards. initially, the onus of miame adherence falls on the end-user submitting rna samples. to facilitate compliance, error checking features during submission help to ensure that a detailed level of information is provided. however, array processing staff can review submissions and suggest changes that would aid in meeting annotation objectives. at the level of rna samples objects, edge <dig> is most stringent in its requirements for detailed information. this is due to the fact that the rna samples are the most important part of the assay. accurate information regarding the quality and source of the rna are paramount in determining whether or not the data generated are of any value, regardless of whether or not the hybridization process appears to be successful. edge <dig> provides the ability to store image or text files associated with the assessment of the quality and amount of rna within the context of an rna sample object. this information is also important for any rna samples that may be stored for later studies or repeated analyses . descriptive information required for rna samples include sample name, the various environmental conditions or exposures the originating tissue sample was subjected to, the organism the sample was derived from, the tissue/cell type of origin, etc.

at the level of array objects, each array image, data files, and the associated quality control files generated by agilent feature extraction software are associated with their respective array objects and archived within the file system of edge <dig>  the image and quality control files can subsequently be retrieved and assessed by the end-user to judge the quality of the hybridization results. see additional file 3: data and quality control.

at the level of an experiment object, information including the purpose or hypothesis under consideration and the experimental design are required. experiments represent the synthesis of the array and rna samples and the descriptive information associated with an experiment should be adequately represented.

edge <dig> administration workflow
the culmination of the object hierarchy coupled with the requirement of associated quality assurance data and experimental information resulted in the establishment of a microarray workflow. there are four main steps in the edge <dig> administration workflow . for an end-user to progress through the workflow, a series of forms are utilized to enter information and subsequently parse the information entered for errors and omissions. the workflow allows for tracking the status of arrays created and placed in the processing queue by end-users. during the workflow process, creation of an rna sample or an array by an end-user results in an email notification to the array processing staff to alert them of the impending arrival of rna samples. when an array has been completely processed the end-user is notified by email and at that point the end-user can assess the quality of the array hybridization. after the arrays are approved by the end-user, they can then associate the completed array with an already created experiment  and begin to analyze the data in the context of their predefined experiment.

the process of generating microarray data has a number of quality assurance steps. it is generally assumed that prior to labelling rna samples, the quality of the rna is assessed by either gel electrophoresis or a microfluidics-based instrument such as the agilent bioanalyzer  <dig>  additionally, in the case of agilent two-color arrays, measurement of the yield and specific activity after a reverse transcription-based labelling step is done to ensure successful labelling. it could be argued that the documentation of quality assurance steps such as these could be done utilizing traditional methods of documenting experiments such as the laboratory notebook. however, the need for computational-based resources to store, analyze, and share data suggests association of the quality assurance steps with the data for easy referencing when data quality questions arise. to this end, edge <dig> has the capability to associate these quality control data with microarrays during the processing steps allowing for a great deal of transparency in assessing the quality of data generated.

storing microarray data
microarray data are stored in two ways within edge <dig>  first, all files generated by the agilent feature extraction software are archived in the file system of the server edge <dig> is installed on. if necessary, the data files can be compressed to conserve hard disk space. these files are readily available for download in compressed format by authorized users/owners of the data. second, the files containing the feature extracted data are imported into a back-end relational database offering the ability for efficient querying during data analysis.

data analysis user interface
the data analysis user interface is very similar to the experiment management user interface. the data analysis user interface consists of three main sections designed to provide an intuitive and clean user interface. figure  <dig> depicts the layout of the interface.

data analysis objects
two objects are associated with the data analysis interface, the query object and the gene list object. a query object is built utilizing a series of html forms to enter the parameters required for the particular data analysis module chosen. when all of the query parameters for a selected module are entered the query is submitted for generation of the results. after a query has been completed and the results returned a temporary query object is created in the database. the end-user has the option to save this query for future use. once a query has been saved to the database, the end-user can then recall the query and either reissue the query without having to re-enter any of the parameters or modify the query's existing parameters. if changes have been made to a previously saved query the end-user has the option to update the query with the new changes or save the modified query as a new query.

the gene list object is used in a couple of ways. first, a gene list object can be used to store the lists of genes generated from a query result set. second, an end-user has the ability to build their own gene lists based on a number of criteria. the first method of utilization is based on the idea that a large number of microarray experiments are performed with the goal to obtain a set of differentially expressed genes between one or more groups. saving a gene list in this instance allows the end-user to generate new queries with the gene list in the selected clustering module or the ordered list module. these modules take a gene list as one of their input parameters and, instead of querying the entire set of probes printed on an array, apply any filtering criteria to that distinct set of genes. the second method of utilization allows the end-user to build a custom list of genes based on a number of specified criteria including official gene symbol, refseq and go terms. the end-user now has the ability to use their custom set of genes as an input parameter to the selected clustering module or the ordered list module.

data analysis methods implemented
edge <dig> has a number of built-in algorithms for microarray analysis and offers additional means of analysis via integration with r/bioconductor. the built-in algorithms are separated into different modules utilizing algorithms including unsupervised methods such as k-means clustering and hierarchical clustering and supervised methods such as k-nearest neighbors classification, similarity queries <cit> , and naive bayes classification. basic statistical methods such as student's t-test and anova can be utilized to identify differentially expressed genes with correction methods to account for the multiple testing problem. the built-in algorithms have been primarily designed to identify differentially expressed genes in experiments using a reference design.

some of the benefits of the built-in algorithms include a higher degree of interactivity with the results such as linking to external databases  and greater integration with the back-end database for easy access to quality control information and annotation. see additional file 4: identifying and clustering differentially expressed genes.

edge <dig> has been integrated with r/bioconductor to provide the ability for analyzing data with more robust statistical methods. the limma package is utilized to identify differentially expressed genes based on a moderated t-statistic and incorporation of empirical bayes methods to borrow information between genes <cit> . the limma package offers the flexibility to take into consideration multi-factor experimental designs and time course experiments when trying to elucidate differentially expressed genes. ancillary r/bioconductor packages are utilized to visualize the data and generate interactive result sets. benefits of using the r/bioconductor algorithms include a wider variety of algorithm choices and input parameters. additionally, in some cases, results are returned faster. see additional file 5: identifying differentially expressed genes using limma.

data sharing via user access control
although edge <dig> can be implemented as entirely open system it has a built-in user access control system. this control system is based on the two objects, users and groups. user objects are individual researchers registered within the database. group objects are composed of user objects. this structure allows for both collaboration and a moderate level of access control. users can create group objects and become the administrator of the group they create. group administrators can add users to a group they created and share administration rights by assigning added users as administrators. access rights to groups are granted at the level of experiment objects allowing for access to array objects and rna sample objects that compose the experiment.

discussion
edge <dig> has evolved from a previous iteration used to store, analyze and share data generated on a custom cdna array <cit> . edge <dig> has been developed with the intention to capture as much information as possible during the agilent array processing workflow and to take the data generated by the feature extraction platform software and make it amenable to efficient and effective storage, analysis, and sharing. these combined features help to set edge <dig> apart from other web-based microarray programs as well as most stand-alone commercial and non-commercial applications.

to aid the end-user, an extensive set of instructions is available. instructions detailing step-by-step written descriptions of the various data analysis methods are accessible via the 'welcome' page. additionally, a number of tutorials for the data analysis methods are available in adobe flash format.

comparing edge <dig> to currently available web-based microarray analysis allows for an understanding of how edge <dig> could be a viable option for labs or microarray facilities that conduct collaborative research with the agilent two-color microarray platform. see additional file 6: features comparison. one of the main differences between edge <dig> and a majority of currently available software packages is its integration of the entire microarray workflow process from the experimental planning and annotation stage to the point of data analysis and data sharing among collaborators.

future directions
though, in it its current state edge <dig> provides a powerful and coherent web-based software tool to manage the agilent array workflow process there are some features that would further enhance its utility. to that end, we plan on developing the edge <dig> software to include the ability to easily import data generated on the agilent platform from large microarray repositories such as the gene expression omnibus <cit>  and arrayexpress <cit> . additionally, edge <dig> is focused on two-channel microarray expression data, but we intend to extend the functionality to include data generated by utilizing single channel arrays.

currently, the user access control model used is fairly rudimentary and could be further improved by implementing a hierarchical structure where groups can be members of other groups. edge <dig> was developed in a setting where the security of data was not of paramount interest. in a clinical setting where patient data are being stored and analyzed it would be best to implement some form of encryption such as secure socket layers. this is a feature that could be implemented at the level of the web server.

CONCLUSIONS
in summary, edge <dig> is an open-source, web-based application that allows for the storage, analysis, and controlled sharing of transcription-based microarray data generated on the agilent dna platform. in addition, edge <dig> provides a means for managing rna samples and arrays during the hybridization process with the goal of adhering to miame guidelines. edge <dig> accomplishes this through the utilization of open-source software and an intuitive user interface. edge <dig> is a viable option for microarray facilities or research laboratories who are utilizing the agilent array platform.

availability and requirements
project name: edge3

project home page:  with source code hosted at  in a svn repository.

operating system: for the end-user elements, any operating system that can run mozilla firefox  <dig> +. for the server elements, any operating system that can run apache  <dig> x+ with php  <dig> x+, jre v <dig> +, r v.  <dig> . <dig>  and mysql v.  <dig> + .

disk space requirements: estimated space requirements are as follows: 63- <dig> megabytes  for edge <dig> web server files,  <dig> mb for default install of edge <dig> database without array data,  <dig> mb for each array in the database, and  <dig> mb for the feature extraction files per array.

programming language: java, html, php, r, javascript

other requirements: server with at least  <dig> gb of memory.

license: gnu general public license

any restrictions to use by non-academics: none

anonymous review of edge3: the data analysis aspects of edge <dig> can be accessed at  without having to install locally. the guest user account  provides access to one experiment consisting of  <dig> microarrays.

authors' contributions
alv and cab developed the main idea. alv drafted the manuscript, created the associated database, and coded the majority of edge <dig>  aas and mc developed portions of the edge <dig> software and helped to direct the writing of the manuscript. all authors read and approved the final version of the manuscript.

supplementary material
additional file 1
edge <dig> database schema. this figure represents the table structure of the edge <dig> database. information displayed includes the fields within the tables and their respective types, the primary key for each table , the indexes associated with each table, how the tables are interconnected, and how the conceptual objects  are defined/composed.

click here for file

 additional file 2
three main objects in edge <dig> experiment management. an example of the edge <dig> object hierarchy in the form of an experiment composed of six arrays and seven rna samples. this experiment utilizes a reference rna sample, rna sample c, and six non-reference samples. an experiment can be composed of any number of arrays and an array is composed of two rna samples. though arrays must be unique, they do not have to be derived from unique rna samples. the red rna samples in this figure represent the cy <dig> labelled samples and the green rna samples represent the cy <dig> labelled samples.

click here for file

 additional file 3
data and quality control.  for each experiment, the end user has the ability to download all of the raw data files of the associated arrays. the files are compressed to expedite the download process.  a screenshot of the array/info edit function. here the end user can download data and quality control files associated with an array.  for each individual array within an experiment the end-user owns or is associated with, the jpg image generated by feature extraction software generated is available for viewing and download.  an example of part of a quality control file generated by the feature extraction software allowing end-users to assess the quality of the array hybridization process.

click here for file

 additional file 4
identifying and clustering differentially expressed genes. a series of screenshots to identify differentially expressed genes between two groups  hybridized against a common reference sample. a) a screenshot of the standard clustering module with the desired parameters established for the six arrays chosen.  a screenshot of the form used to order or, as in this case, to group the arrays based on the number of groups chosen on the previous form. the groups are assigned by the end-user with corn oil control biological designated, "control", and the tcdd-treated biological replicates assigned to group "2". because the purpose of this query is to identify differentially expressed genes between two groups, we've chosen to do a t-test at a specified alpha of  <dig>  with rough false discovery rate correction.  this is a screenshot of the results page. the  <dig> probes determined to be differentially expressed based on the parameters of the query have been hierarchically clustered. from the results page the end user can obtain the associated data files including fold-change values, the processed signal values of the cy <dig> and cy <dig> channels for all of the returned probes, and the ordered p-values of the probes meeting the criteria chosen. additionally, the resulting heatmap is available in different output formats including scalable vector graphics , png, and jpg. the end user has the option to make the map "hot-clickable" such that each spot, gene name, and array name can be clicked on to obtain quality control information and annotation information. this query can also be saved for reuse or modification so the end-user doesn't have to re-enter the parameters.  a portion of a results table displaying  <dig> of genes designated as being differentially expressed.

click here for file

 additional file 5
identifying differentially expressed genes using limma. a series of screenshots giving examples of output where limma has been utilized to identify differentially expressed genes using the same two groups of arrays as those in additional file  <dig>   a list of differentially expressed genes where the calculated p-value of the moderated t-statistic is less than  <dig> . there were eighty-one genes that met the criteria.  a volcano plot representation of the distribution of the differentially expressed genes.

click here for file

 additional file 6
features comparison. a table comparing the features of edge <dig> with other non-commercial microarray analysis tools.

click here for file

 acknowledgements
this work was supported by the national institutes of health grants r01-es <dig>  t32-ca <dig> and p30-ca <dig>  the authors would like to thank the r and bioconductor communities for their efforts; especially dr. gordon smyth for his work on limma. additionally, we would like to thank the bradfield lab and others for aiding in the direction of this work.
