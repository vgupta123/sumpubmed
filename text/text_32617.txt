BACKGROUND
transcriptional gene regulation is one of the key mechanisms in living cells; the control of gene expression is crucial in processes as cell development, cell-cycle regulation, and response to external stimuli  <cit> . while the number of sequenced genomes is growing rapidly, it becomes more and more important to study genetic information on a higher level, i.e. to understand genes in their interdependence and to capture relations between regulatory genes, e.g. transcription factors  or signaling proteins, and regulated genes via the reconstruction of gene-regulatory networks .

direct experimental approaches to understand gene regulation are money and time consuming. therefore genome-scale regulatory networks are only known for e. coli  <cit>  and for baker's yeast, s. cerevisiae  <cit> . for higher organisms, the knowledge is restricted to intensively studied small functional modules, see e.g.  <cit> . some characteristic features of these grn are:

• directionality: regulatory control is directed from regulators to regulated genes.

• sparsity: each single gene is controlled by a limited number of other genes, which is small compared to the total gene content  of an organism.

• combinatorial control: the expression of a gene may depend on the joint activity of various regulatory proteins.

the last item is crucial, and it is the topic of very active and diversified research  <cit> . one example of combinatorial control in yeast is the case of transcription factors yrr <dig> and yrm <dig>  which compete for occupancy of the same promoter sequence  <cit> . many other types of combined control exist, such as the formation of hetero- or homo-dimers by tfs, or their post-translational modification by other proteins, which can entirely change their targets  <cit> . on the other hand, the hypothesis of sparsity has been experimentally checked in well-studied organisms, where it has been observed that the number of tfs is low compared to the total number of genes.

it is tempting to ask in how far grn can be reconstructed from gene-expression data. after the advent of the first generation of gene-expression microarrays, more than a decade ago  <cit> , we face an growing number of new high-throughput technologies capable of monitoring simultaneous concentrations of thousands of cellular components, in particular of mrnas. the improved quality of new generations of microarrays, the decrease of their cost, and the amount of experiments accumulated so far call for the development of large-scale methods of data analysis. different approaches to modeling have been proposed , from a coarse-grained description of co-regulated genes  <cit> , classification methods  <cit> , to boolean descriptions where genes are described in terms of logical switches with only on/off states of activity  <cit>  , or considering more realistic systems of differential equations describing the kinetic details  <cit> . also for grn reconstruction, approaches from different origins have been proposed: system control theory  <cit> , bayesian inference  <cit> , information theory  <cit> .

many limitations of the existing algorithms arise directly from the quantity and quality of data:

microarrays are noisy averages over cell populations, and the number of available arrays is normally much smaller than the number of probes measured in each array. moreover, microarrays measure mrna but not active protein concentrations . both may be uncorrelated in the cell  <cit> . but as proteomics data are even sparser than microarray data, this is not an easy-to-solve problem, and many modeling approaches use mrna concentration alone. another problem is the existence of combinatorial control in gene regulation: predicting such cases is a np-complete problem, and has therefore eluded many approaches due to computational complexity, although some recent and interesting progress has been achieved in  <cit> .

in this paper we introduce a novel algorithmic strategy, based on message-passing techniques, to infer the regulatory network of an organism based solely on genome-wide expression data, that specifically focuses on combinatorial control. our methodology is probabilistic and distributed, allowing for a fast exploration of the space of networks. we apply the algorithm to three yeast networks:  to test the efficiency of the algorithm, we first reconstruct an in-silico regulatory network for cell-cycle control from artificially generated data  <cit> .  we propose a large-scale reconstruction of the yeast regulatory network, using the classic gasch microarray dataset  <cit> , and analyze evidence for combinatorial control.  we use yeast expression data from the smd database  <cit>  to recover the regulations affecting genes involved in pleiotropic drug resistance . this network is now under intense scrutiny because of the more and more common nosocomial infections by candida yeasts  <cit> , which are able to resist to drugs by exporting them out of the cell. these resistance mechanisms are genetically regulated by the pdr network, which we aim to reconstruct. an detailed description of the algorithm is given in the methods section. an implementation in c can be downloaded at  <cit> .

RESULTS
reconstructing an in-silico yeast cell-cycle network
before coming to biological data, we test our approach on the network model of tang et al.  <cit>  for cell cycle regulation in s. cerevisiae. the cell cycle is regulated by cyclins/cdk complexes, which sequentially activate and inhibit each other, creating a periodicity which is the clock of the cell. recently sequential waves of transcriptional activation independent of cyclins activation have been discovered  <cit> , but they are not taken into account in the model. it anyway serves as an ideal starting point for the the performance analysis of our analysis, since the data generating network is explicitly known and can be compared to our inferred regulatory interactions.

in the model of  <cit> , the regulatory network consists of n =  <dig> genes/proteins, which are described by a binary state vector . interactions are encoded into a coupling matrix  with entries  in total the model of  <cit>  contains  <dig> activating and  <dig> repressing links. the definition of the network model is completed by the dynamical rule   

with   

our aim here is to infer the regulatory links of this network model based on the different state vectors st. the above in-silico dynamics shows  <dig> fixed points, i.e. stationary states of the dynamics. each fixed point can be characterized by the size of its basin of attraction, i.e. by the number of initial random initial conditions that end on it. tang et al. argue that the fixed point with the largest basin of attraction can be identified with the g <dig> phase of the cell cycle. if one perturbs the stationary g <dig> state by flipping the cln <dig> cyclin to its active value, the network passes trough  <dig> different states before reaching again g <dig>  the authors of  <cit>  argue that this trajectory robustly reproduces various aspects of the yeast cell cycle.

we test our algorithm on two different data sets:  the  <dig> states obtained by first flipping the cln <dig> cyclin to the active value, and letting the system evolve until stationarity as described before,  a larger dataset containing the configurations of data set  and additionally the trajectories obtained by evolving all configurations at hamming distance  <dig> away from g <dig> . in additional file  <dig> we include both data sets together with the links of the network.

in order to deal with time series, eq.  for the prior probability distribution is transformed into , to express the conditional probability of the target gene  <dig> at time t +  <dig> given the expression profile of the other genes at time t. for both data sets we fix the diluting field h to a value giving neff ~  <dig> according to eq. . for the original data set  we fix σd  <dig>  while for the larger data set , convergence of belief propagation  is ensured by σd =  <dig> .

in fig  <dig> we display the precision-recall curve for the network inferred using bp, for both cell-cycle and perturbed cell-cycle data sets . results are compared to the performance of a co-expression network which ranks links j → i according to the pearson correlation of  and . we see that on the original data set bp is able to correctly infer  <dig> links before making the first error, whereas pearson correlation fails already after two correctly predicted links. this result shows that bp correctly manages to take into account combinatorial control effects, which cannot be seen by purely local methods . increasing the data set improves the outcome of bp, the larger data set leads to  <dig> correctly predicted links before the precision drops down from one, and the precision stays always above the one obtained from the 13-state trajectory. it is also interesting to note that the first links inferred by our algorithm are those which where identified in  <cit>  as essential for reproducing the cell-cycle by a complete enumeration of the space of all networks.

fig  <dig> precision-recall curve for the cell-cycle inference. precision-recall curve for the network inferred using bp  and pearson correlation coefficient . in the case of bp-based inference we infer correctly  <dig> links  and  <dig> links  respectively before making the first error. in the case of the correlation based inference we make the first error after only  <dig> correct links.

yeast response to environmental stresses
for a second application of bp - at much larger scale - we use the data of gasch et al.  <cit> , which consist of  <dig> genome-wide microarrays of s. cerevisiae under different environmental conditions. we filter out all genes, which show little differential expression  or which miss more than  <dig> data points. thereby the gene number is reduced to  <dig> target genes, i.e. to roughly half of the entire genome. as putative regulators we consider  genes annotated as transcription factors or structurally similar to known transcription factors, and  genes involved in signaling  <cit> : their total number sums up to  <dig> putative inputs.

we run our algorithm with σ =  <dig>  which equals the minimal variance of a gene found in the full data set. bp giving probabilistic results, we kept regulatory links with more than 95% of confidence.

as the distribution of the marginal probabilities follows a power-law distribution , changing this threshold  has little effect on the final network. the network contains  <dig> regulatory links, giving an average of  <dig>  links per target; the in-connectivity has a distribution best fitted by an exponential law k = ce-γ with γ =  <dig> , a value very close to the reference one in  <cit> . only  <dig> target genes  have no predicted regulator. moreover,  <dig> targets  are regulated by at least  <dig> genes, providing a wealth of potential predictions in the field of combinatorial control. interestingly enough the finding of  <dig>  links per target can be confronted with the result of balaji et. al.  <cit> , based on a review of chip-chip experiments, reporting a comparable average value of  <dig>  regulators per target.

combinatorial control
in order to assess the relevance of the inferred network, we compare it first to a network based on pairwise correlations of expression data , which was constructed to have the same number of links as the bp network. selected links are those of highest absolute value of the pearson correlation between all input-output gene pairs. this is clearly an oversimplified model, but it allows to grasp the significant features of our model.

one advantage of our algorithm is the explicit inference of combinatorial control mechanisms by multiple transcription factors. indeed, the number of genes with multiple regulators inferred using our methodology is  <dig>  while it is only  <dig> in the case of the pairwise-correlation network. the average number of regulators per regulated gene  in our bp case is  <dig> , and has to be compared to  <dig>  from the work of balaji et al.  <cit> , and  <dig>  for the co-expression network. it is interesting to note that bp results are is closer to the experimental network as compared to the co-expression one. this feature shows how, for the vast majority of target genes, our algorithm is able to describe the behavior of the gene by combining few putative regulators.

another way of investigating combinatorial control is to compare expression profiles of different regulators. regulators having highly correlated expression profiles carry similar information to the target gene, whereas regulators having diverse profiles can be used to transmit much more information. this is directly incorporated in our model: the sparsity term introduced in eq.  <dig> reduces the effect of potential regulators whose expression profiles are highly correlated. as a limiting example let us consider two input genes with identical expression profiles, regulating one target gene. the sparsity term will select randomly only one of the two, and identify it as a regulator. in more realistic cases, no two genes shows exactly the same expression, and only the most explanatory gene will be chosen as a regulator out of a set of highly correlated potential tfs.

to quantify the independent information carried by each regulator we compute, as a simple measure, one minus the pearson correlation coefficient between any two regulators of common target genes, see fig  <dig>  one can see that the information content is much higher using our methodology than simply co-expression, because the latter tends to discover redundant information as displayed in the example of fig  <dig> for the target gene ydr518w. this specific example also shows that secondary regulators found by bp tend to correct discrepancies between the first regulator and the target gene.

fig  <dig> statistical independence probability distribution. plot of the statistical independence probability distribution  between pairs of tf regulating combinatorially the same target. red curve: co-expression network. blue curve: bp network. note that the statistical independence is much higher between tf inferred by bp, showing higher information content in combinatorial control.

fig  <dig> an example of combinatorial control. example for combinatorial control. top: three top inputs found by bp, with the prediction compared to the real output. the left bars are training, the right test data. bottom: three most pearson-correlated genes and corresponding prediction. over-  expression is depicted in red .

comparison to experimental tf binding data
in order to further investigate the significance of the bp inferred network, we compare it to the experimentally verified network presented by balaji et. al.  <cit> , as characterized by  <dig> tfs,  <dig> target genes, and  <dig> regulatory links between them. after filtering out genes with low variance in the expression data set, the set of analyzed genes consists of  <dig> targets, and  <dig> tfs. the number of experimentally verified links between these genes reduces consequently to  <dig>  again we run bp with σ =  <dig> , which equals the minimal variance of a gene found in the full data set, and we keep regulatory links with more than 90% of confidence. the resulting network has  <dig> directed edges. since these edges describe logical implications between gene expression levels, it is not clear in how far they reflect physical binding between the tf related to the input gene, and the promoter sequence of the target gene. it is easy to imagine that co-regulated genes are discovered as predicting each other, or secondary targets in regulatory cascades are recognized as direct targets.

in fact, the overlap with the experimentally verified network is only  <dig> edges . in order to give a statistical assessment of this number, we compare it to the overlap with a null model: we scramble the links in the bp network randomly preserving the in-degree of the inferred network. the overlap with the null model is  <dig> ±  <dig>  edges, implying a z-score of  <dig> , and a p-value of  <dig>  × 10- <dig> .

to check the effect of an increased number of experiments, we downloaded  <dig> microarrays from the stanford microarray database   <cit> . now  <dig> target genes and  <dig> regulatory genes pass the statistical test, and the coverage of the experimental network increases to  <dig> links. with respect to gasch's data set, we use a 6-fold higher number of arrays coming from different experiments, so we run bp at a higher noise value σ =  <dig> . the resulting bp network has  <dig> edges . the overlap with the experimentally verified network is  <dig> edges . the overlap with the null-model is  <dig> ±  <dig>  edges. thus we find a z-score of  <dig> , and a p-value of  <dig>  × 10- <dig>  as a comparison, we decided to analyze the same data set and the same set of  <dig> potential transcription factor with the aracne software  <cit> . to obtain statistically similar networks we set the data processing inequality threshold  to  <dig> : the resulting network has  <dig> directed edges . the overlap with the experimentally verified network is of  <dig> edges . the overlap with the null-mode is  <dig> ±  <dig>  edges, with a z-score of  <dig>  and a p-value of  <dig>  × 10- <dig> 

the sensible increase of statistical significance with respect to the results using gasch's data is encouraging: it indicates in quantitative form, that larger microarray numbers would allow for extracting substantially more information about regulatory processes from gene expression data.

inference of the pdr network
we finally apply our algorithm to a small dataset, to tackle an issue of direct medical relevance: drug resistance among yeasts. s. cerevisiae is able to resist many drugs, using an ensemble of genes connected in the "pleiotropic drug resistance" network. the basic mechanism is that these genes, regulated by the master regulator pdr <dig>  can export a broad range of substances out of the cell - drugs included. this general feature has been discovered in many organisms, and is considered a generic and robust mechanism of drug resistance, from bacteria to yeasts  <cit> . the precise regulations acting in this network are yet unknown, even if numerous works have already uncovered a part of them  <cit> . here we propose to look for combinatorial regulations in this network, in order to better understand how transcription factors dedicated to drug resistance collaborate to ensure cell survival in harsh conditions - that is, in the presence of drugs. we run our algorithm on  <dig> genes known to be involved in pdr processes as targets - selection was based on literature -, and use all  <dig> transcription factors annotated in the database yeastract  <cit>  as potential regulators. the expression data consist of  <dig> microarrays from smd  <cit> . due to its small size, the statistical properties of the inferred network  are quite different from the global one :  <dig> links were inferred at 95% confidence, giving a high average of  <dig>  regulators per regulated gene. all target genes had at least one regulator; in fact only one had a single regulator .

fig  <dig> the pdr network inferred. the pdr regulatory network inferred by bp, comprising  <dig> tf and  <dig> targets. targets are shown in grey.

again, as a comparison, we decided to analyze the same data set aracne. to obtain statistically similar networks, we set the data processing inequality to  <dig> :  <dig> links were inferred . both networks are provided in additional file  <dig>  as a first observation we note that  <dig> out of the  <dig> target gene appear not regulated in the aracne network. we can conclude that, at least in this case, aracne seems to produce links which are more concentrated to a smaller target number, with an in-degree of  <dig>  ±  <dig>  tf/regulated target .

compared to the latest version of yeastract, we find the following numbers of overlapping links:  <dig> in our case , and  <dig> if the direction is not taken into account. aracne, which produces an undirected network, has only  <dig> overlapping links. we also compared our findings with the network presented in the work of balaji et al.  <cit> : in the bp case we match  <dig> directed edges and  <dig> undirected ones, whereas aracne matches  <dig> undirected links.

moreover, a closer look to some predicted cases of combinatorial control gives interesting insights into the biology of drug resistance. in particular, we find rpn <dig>  a transcriptional regulator of the proteasome, regulated by both pdr <dig> and yap <dig>  this interaction between drug resistance and the proteasome was already hinted in previous works concerning global stress resistance  <cit> , and was recently proved experimentally  <cit> . this case is not found when running aracne on the same dataset, emphasizing the need for specially designed algorithms in order to uncover new cases of combinatorial control. another interesting case of combinatorial regulation predicted in this analysis is the cross regulation of yap <dig> and ras <dig> by pdr <dig>  pdr <dig> and rpn <dig>  this complex regulation could therefore link drug resistance and proteasome regulation to the processes of cell aging and proliferation, regulated by ras <dig>  however, to our best knowledge there is no experimental evidence of this link, which is to be confirmed.

CONCLUSIONS
in this work, we have presented an effcient method for genome-wide inference of regulatory networks, particularly designed to take into account cases of genetic combinatorial control. the method, based on message passing, was tested on a small in-silico model for the cell-cycle regulation in yeast, and then applied to both a large-scale and a small-scale dataset. the test shows the accuracy of the method in case of informative data, and the applications predict meaningful network structures.

one relevant feature of our algorithm is its capability of unveiling patterns of combinatorial control. even if the model of gene-regulation we used  is very simple, it allows for regulators which account only for part of the target expression, and which may be corrected for by other regulators under other conditions, cf. fig  <dig> 

from the algorithmic point of view, our methodology allows to explore combinatorially the full space of regulatory networks while keeping the computational time short. the flexibility of the approach allows for integrating other type of data: to give an example, information about putative transcription factor binding sites in the regulatory region of an output gene can be easily integrated via a transcription-factor dependent diluting field h.

finally, our method can be generalized to tackle a variety of issues in the field of gene regulation inference. one possibility is to try to discover new regulators, by a corrective methodology, starting with a known regulatory network and looking for the most relevant regulations to be added to this network. another possibility is to use the information of combinatorial control in conjunction with the nature of the expression data to explain which conditions allow which combinatorial controls, opening the door to a wealth of genetic experiments and to a better understanding of the complexity of gene regulation.

