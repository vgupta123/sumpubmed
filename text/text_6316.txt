BACKGROUND
the cell nucleus is a highly complex organelle that controls cell reproduction, differentiation and regulates cell metabolic activities. cell nucleus is subdivided into several sub-compartments, called subnuclear locations, where proteins are located to function properly. if mislocated, protein malfunction would cause cell disease. in-depth information about subcelluar localization may help a full understanding of genomic regulation and function. as compared to the general subcelluar localization, subcelluar localization is more challenging from biological viewpoints  <cit> . from computational viewpoints, the characteristic difference  among the proteins in nucleus is far less distinct than that among proteins from different macro cell compartments, thus making it hard to achieve satisfactory predictive performance. shen h et al.   <cit>  derived the psepssm feature representation from protein sequence by simply averaging the profile pssm and combined the pseaa feature representation to construct a knn ensemble classifier nuc-ploc. nuc-ploc divided nucleus into  <dig> subnuclear locations and achieved  <dig> % overall accuracy. lei z et al.   <cit>  directly used blosum <dig> to derive the similarity between the k-mers from two protein sequences, based on which an ensemble of svm was constructed with different k-mers to draw the final conclusion. the model divided nucleus into  <dig> subnuclear locations and achieved 50% overall accuracy. to further boost the performance, lei z et al.   <cit>  incorporated go information into the svm ensemble classifier and achieved  <dig> % overall accuracy. the unavailability of go annotation would restrict the model's applicability. for novel proteins or proteins with many missing go terms, the predictive performance would be rather poor, maybe still about 50%. we can see that the prediction for subnuclear localization is more difficult than general subcelluar localization.

machine learning methods for predicting protein subcelluar location should take into account two major factors, one is to derive protein feature information and the other is to design predictive model. state-of-art feature extraction is data- and model-dependent. we should guarantee that the features not only capture rich biological information but also should be discriminative enough to construct a classifier for prediction. high throughout sequencing technique makes protein sequence cheaply available. in computational proteomics, many computational models are based on protein primary sequence. on the other hand, data integration becomes a popular method to integrate diverse biological data, including non-sequence information, such as go annotation, protein-protein interaction, etc.

there are many models that extract features from protein sequence. amino acid composition  has close relation with protein subcelluar localization  <cit>  and is the most frequently-used features, usually used together with other information for protein subcelluar localization  <cit> . besides amino acid occurrence, pair-wise residue correlation and amino acid physiochemical properties are also incorporated to encode protein sequence, such as pseaa  <cit> , che-maa  <cit> , etc. window-based k-mer histogram is another approach proposed to extract biological information from protein sequence, such as gapaa, dipeptide  <cit> , and motif kernel  <cit> , etc. aa is a special case for k-mer histogram when the window size equals  <dig>  for k-mer histogram, the feature space expands exponentially with the window size k. to capture size-varying motif information and the context information around a specific amino acid residue, some approaches compress  <dig> amino acids into  <dig> groups according to amino acid physiochemical properties  <cit> . at both ends of a protein sequence, maybe there exists some sorting signal or anchoring signal for protein subcelluar localization. hoglund a et al.   <cit>  combined n-terminal signal, overall protein amino acid composition and emotif information into a unified profile vector representation , and used the feature vector to construct a hierarchical svm classifier for protein subcelluar localization. schneider g et al.   <cit>  gave a review on machine learning models using signal peptide for protein subcelluar location prediction as of  <dig> 

protein phylogenetic information is another source for protein subcelluar localization. edward m et al.,   <cit>  used blast to generate a protein's profile distribution over several reference species, and revealed that proteins in the same subcelluar location manifest similar phylogenetic profile distribution, while proteins in different subcelluar locations were distinctly distributed. several models extracted features from psi-blast profile such as pssm and psfm  <cit> . mak m et al.   <cit>  used psi-blast to generate the pro-file  for each query sequence, and derive a profile alignment kernel using dynamic programming to define two query sequences' similarity. rangwala h et al.   <cit>  used pssm & psfm to derive a string kernel for remote homology detection and fold recognition. the method calculated the profile similarity between all k-length fragments of consecutive amino acids to derive the similarity between two protein sequences, thus rather computationally intensive. kuang r et al.   <cit>  designed a profile kernel, a variant mismatch kernel  <cit> , which allowed a k fragment to match its corresponding k-mer if the fragment fell within the positional mutation neighbourhood defined by k-mer self-entropy. kuang r et al.   <cit>  extended the profile kernel by simple kernel fusion for prediction of malaria degradomes. besides profile information, domain is another source of evolutionary information that can be used for protein subcelluar localization. richard m et al.   <cit>  analyzed the domain co-occurrence pattern of eukaryotic proteins and found that proteins in the same subcelluar location have similar domain co-occurrence pattern. some other researches used flat binary domain vector to represent protein  <cit> . in such a sparse high-dimensional representation, the information about domain content and partition boundary is discarded. mei s et al.   <cit>  proposed a multiple instance learning model to make use of the domain boundary information along protein sequence, where domain is regarded as an instance and the protein sequence is regarded as a bag. ensemble learning is a commonly-adopted data integration method used to integrate heterogeneous data, such as go annotation  <cit> , ppi network  <cit> , etc. a little differently, lee k et al.   <cit>  concatenated the feature vectors from different data sources. the great challenge in those models is how to objectively estimate the model performance and how to predict a novel protein when neither go annotation nor protein-protein interaction would be available. the model estimation was conducted only in the optimistic scenario that both training set and test set had go or ppi information available. the published model performance may be overestimated. on the other hand, when go or ppi information is unavailable, some base classifiers of the ensemble classifier would fail to work and may contribute nothing to novel protein prediction. so, it is worth discussing whether ensemble learning is fit for heterogeneous data integration.

however, kernel method can be used to fuse the heterogeneous information  by kernel matrix summation, with  <dig> filling the matrix for missing information. the expensive information can be used to tune svm parameters, so that the knowledge contained in the expensively-acquired data can be transferred to the cheap data and the expensive information is not necessary for novel protein prediction. kernel method has witnessed successful applications in computational biology in recent years  <cit> , where k-mer based kernels  <cit>  can be seen as variant spectrum kernel and mismatch kernel that incorporated protein sequence profile information. k-mer feature representation can capture the contextual information around an amino acid residue and cover conserved motifs. alexander z et al.  <cit>  combined amino acid composition kernel and motif kernel using multiple kernel learning  to automatically optimize the weights of kernel matrices. the optimal weights were derived using semi-infinite programming instead of convex semi-definite programming to accelerate computation at the sacrifice of global optimum.

in this paper, we only use the amino acid information of protein sequence without any other information to design a widely-applicable model for protein subnuclear localization. we use k-spectrum kernel to exploit the contextual information around an amino acid and the conserved motif information. besides expanding window size, we adopt various amino acid classification approaches to capture diverse aspects of amino acid physiochemical properties. each amino acid classification generates a series of spectrum kernels based on different window size. thus,  window expansion can capture more contextual information and cover size-varying motifs;  various amino acid classifications can exploit multi-aspect biological information from the protein sequence;  amino acid classification approaches can compress  <dig> amino acids to a certain content, so as to allow larger window size and reduce the dimensionality of feature space. finally, we combine all the spectrum kernels by simple addition into one single kernel called spectrumkernel+ for protein subnuclear localization.

methods
spectrum kernel
kernel method  <cit>  maps data points into possibly high-dimensional feature space, where a linear hyperplane can be optimized using quadratic convex programming to separate two-class data with maximum margin. assume mapping function Φ, the computation of the inner product <Φ, Φ > in the high-dimensional feature space can be implemented in the original space using kernel trick, k  = < Φ , , > such that no explicit mapping function or even explicit feature representation is required. we need only the similarity between two data points to derive the semi-definite kernel function. many kernel functions have been derived to measure the similarity between two protein sequences. leslie, c. et al.   <cit>  defined a spectrum kernel function that computed the similarity between the k-spectrum of two protein sequences. k-spectrum is the set of all k-length consecutive sub-sequences . given a protein sequence x, amino acid set Σ, we define a feature map x → , Φ = , where ϕa  = number of occurrences of a in x, thus k-spectrum kernel is defined as kk  = < Φ , >. assume each k-mer is indexed as kmer, i =  <dig>   <dig>  ..., length  - k + <dig> by the position i where the k-mer sliding window is located, we can see that kmer contributes  <dig> to ϕa   = ϕa + 1) where a = kmer, a ∈ Σk. then, spectrum kernel is defined as spectrumkernelk = < Φ , Φ >, where Φ is sequence-to-feature mapping function. here, we use gaussian kernel instead:  

amino acid classification based spectrum kernel fusion
k-spectrum kernel can capture the contextual information around an amino acid residue and the k-mer occurrence patterns can reveal some conserved sub-sequences . to capture more contextual information and cover a variety of size-varying motifs, we expand the window size to generate a series of spectrumkernelk . since the feature space expands exponentially with window size |Σ|k, we should set upper limit for window size k for computational sake. on the other hand,  <dig> amino acids may seem redundant from a particular aspect of physiochemical properties , thus we can compress  <dig> amino acids into several groupings according to a certain criteria of amino acid classification. thus, we can further expand the window size for compressed amino acid set but also can exploit different aspects of amino acid properties. according to polarity and charge, amino acids can be divided into  <dig> categories ; according to the density-functional theory method b3lyp/6-31g and molecular modelling approach  <cit> , we can derive  <dig> categories . other amino acid classification methods ms, lesk, f-ic <dig> are taken from  <cit>  . the window limit for each amino acid classification method also is given in table  <dig>  it should be noted that the original k-spectrum kernel used  <dig> amino acids without adopting other amino acid classification approaches.


                              method
                              window limit
                              amino acid classification

                              4-cat

                              7-cat

                              20-cat

                              ms

                              lesk

                              f-ic4

                              f-ic2

                              f-iiic4

                              f-vc4
only one state-of-art k-mer histogram may not be enough to extract biological information from protein sequence and construct a discriminative classifier. we combine all the spectrumkernels based on different window size and different amino acid classification methods. when combining multiple kernels, the optimal weight vector w =  should be automatically derived from data. k = w1k <dig> + w2k <dig> + ... + wnkn, when ki ≥  <dig>  i =  <dig>   <dig> .., n, semi-definite programming can be applied   <cit> ; otherwise, semi-indefinite programming   <cit>  can be used to derive the optimal w. both methods have rather large complexity. here, we use simple weight vector wi =  <dig>  i =  <dig>   <dig> ., n, with the assumption that all feature representations have equal significance. thus, we define spectrumkernel+ as follows:  

RESULTS
dataset description
we choose nuc-ploc  <cit>  and lei benchmark datasets to evaluate spectrumkernel+ performance. the nuc-ploc dataset is collected from the swiss-prot database   <cit>  and divides cell nucleus into  <dig> subnuclear locations and the number of proteins in the locations is unbalanced, the largest nucleolus has  <dig> proteins and the smallest nuclear pml body has only  <dig> proteins. the dataset has total  <dig> proteins. the lei benchmark dataset  <cit>  is collected from nuclear protein database  <cit> , chiefly from human and mouse, and divides cell nucleus into  <dig> subnuclear locations and totals up to  <dig> proteins. this dataset is also unbalanced.

model evaluation and experimental setting
nuc-ploc  <cit>  and lei  <cit>  used leave-one-out cross validation  to estimate model performance. for simple classifier like knn, the training is not so time-consuming and loocv may be acceptable for small dataset in such a case. for complex model, loocv may take unendurable long time to train and predict. 5-fold cross validation is a commonly-accepted model evaluation approach in computational biology, so we use 5-fold cross validation instead to evaluate spectrumkernel+ performance. for 5-fold cross validation, the protein dataset is randomly split into five disjoint parts with equal size. the last part may have 1- <dig> more examples than the former  <dig> parts in order for each example to be evaluated on the model. one part of the dataset is used as test set and the remained parts are jointly used as training set. the procedure iterates for five times, and each time a different part is chosen as test set. we use four commonly-adopted measures: sensitivity , specificity , matthew's correlation coefficient  and overall accuracy. mcc is often used to evaluate the balance of model prediction. libsvm http://www.csie.ntu.edu.tw/~cjlin/libsvm/ is used together with spectrumkernel+, with the parameter setting "-s  <dig> -t  <dig> -c  <dig> -e  <dig> ".

comparison with baseline model
the performance comparison between spectrumkernel+ and thebaseline models is illustrated in table  <dig> & table  <dig> respectively, where better results are highlighted in bold and the winner is underlined.


                              subnuclear location
                              size
                              nuc-ploc

                              chromatin

                              heterochromatin

                              nuclear envelope
                               <dig> 

                              nuclear matrix

                              nuclear pore complex
                               <dig> 

                              nuclear speckle

                              nucleolus
                               <dig> 

                              nucleoplasm

                              nuclear pml body

                              overall accuracy
                               <dig> %

                              subnuclear location
                              size
                              lei svm ensemble

                              pml body

                              nuclear lamina

                              nuclear speckles

                              chromatin

                              nucleoplasm

                              nucleolus
                               <dig> 
                               <dig> 

                              overall accuracy
                               <dig> %
the experiment on nuc-ploc dataset adopts the amino acid classification set {cat- <dig>  cat- <dig>  cat- <dig>  ms, lesk, f-ic4}, referred to as spectrumkernel+i. as shown in table  <dig>  spectrumkernel+i performs much better than nuc-ploc, with overall accuracy  <dig> % against  <dig> %. the measure mcc reveals that spectrumkernel+i also achieves better performance on most subnuclear locations, except heterochromatin and nuclear matrix. nuc-ploc did not give the results of measure sp and se. according to the measures sp and se, we can see that spectrumkernel+i achieves satisfactory predictive performance on large-data subcelluar locations: chromatin, nuclear envelope, nuclear pore complex, nuclear speckle and nucleolus. the largest-data nucleolus has less misclassification from and to other locations . on small-data subnuclear locations: heterochromatin, nuclear matrix, nucleoplasm and nuclear pml body, spectrumkernel+i achieves rather poor performance, whereas nuc-ploc performed even worse. maybe it is much less training data that causes the poor performance. as to the second benchmark dataset, we first conduct experiment using the amino acid classification set {cat- <dig>  cat- <dig>  cat- <dig>  ms, lesk, f-ic4}. spectrumkernel+i achieves overall accuracy  <dig> %, much higher than 50% of lei svm ensemble  <cit> . see table  <dig> for details. to verify the assumption that more information about amino acid classification may further increase accuracy, we add three additional amino acid classification approaches: f-ic <dig>  f-iiic <dig>  f-vc <dig>  thus we further evaluate spectrumkernel+ using the expanded amino acid classification set {cat- <dig>  cat- <dig>  cat- <dig>  ms, lesk, f-ic <dig>  f-ic <dig>  f-iiic <dig>  f-vc4}, called spectrumkernel+ii. we can see from table  <dig> that spectrumkernel+ii achieves  <dig> % overall accuracy against  <dig> % of spectrumkernel+i with increase  <dig> %, and against  <dig> % of lei svm ensemble with remarkable  <dig> %. spectrumkernel+ii performs far better than lei svm ensemble on all subnuclear locations except pml body. the three additional amino acid classification approaches surely improve the performance in terms of both overall accuracy and all subnuclear locations according to the measures: sp, se and mcc.

spectrumkernel+i contains  <dig> spectrum kernels and spectrumkernel+ii contains  <dig> spectrum kernels, far less than  <dig> kernels combined in  <cit> . here, we don't compare spectrumkernel+ii with lei go svm ensemble  <cit> , which achieved  <dig> % overall accuracy. the reason is that go information will restrict the model's application, when go information is missing for those proteins to be predicted, lei go svm ensemble would degrade to the sequence-based lei svm ensemble. spectrumkernel+ii &spectrumkernel+i are based on the amino acid information of protein sequence only.

comparison with individual spectrum kernel
to validate the effectiveness of kernel fusion, we evaluate the performance of all individual kernels generated by different amino acid classifications and different window sizes on the same 5-fold cross validation training & test sets. as shown in figure  <dig>  the x-axis x <dig> x <dig> denotes amino acid classification  and window size . from figure  <dig>  the accuracy of individual spectrumkernels ranges between  <dig> % and  <dig> %. cat- <dig> ; cat- <dig> ; cat- <dig> ; cat- <dig> ; ms.4; lesk. <dig> and lesk. <dig> capture more information; f-ic <dig> second; cat- <dig> the worst. however, the kernel fusion spectrumkernel+i increases predictive accuracy steeply to  <dig> %, with accuracy increase against individual spectrum kernels between  <dig> % and  <dig> %.

in figure  <dig>  three additional amino acid classifications: f-ic <dig>  f-iiic <dig>  f-vc <dig> are added. the accuracy of individual spectrum kernel ranges between  <dig> % and  <dig> %, whereas the kernel fusion spectrumkernel+ii increases accuracy to  <dig> %, with accuracy increase between  <dig> % and  <dig> %. the result reveals that kernel fusion can combine multiple-aspect information of protein sequence to sharply increase the predictive accuracy.

discussion
this paper proposes a kernel method called spectrumkernel+ that defines diverse spectrum kernel functions on the basis of different amino acid classification approaches and different window sizes. different amino acid classification can capture different aspect of amino acid physiochemical properties, while varying window size can capture more contextual information and cover size-varying motifs. therefore, spectrumkernel+ can exploit diverse amino acid information from the protein sequence. spectrumkernel+ has an obvious advantage that only the amino acid information of the protein sequence is required for protein subnuclear localization, without go annotation, psi-blast profile, etc. kernel fusion by using expensive information such as go annotation, protein-protein interaction, etc. to tune svm parameters may be a more graceful design than lei's go svm ensemble, because parameters tuning can transfer expensive information to the model trained on cheap data, and the expensive information is allowed missing when predicting a novel protein. in addition, this paper first explicitly introduces various amino acid classification approaches for spectrum kernel design, to the best of our knowledge, which is useful to extract rich information from the protein sequence for data integration. experiments show that spectrumkernel+ steeply increases the predictive accuracy as compared against the single-aspect spectrum kernel.

actually, it may further improve spectrumkernel+'s performance by adding more amino acid classification information and using multiple kernel learning to optimally weigh the derived kernel matrices.

CONCLUSIONS
amino acid classification not only implicitly captures a certain aspect of amino acid physiochemical property, but also greatly reduces the dimensionality of k-mer feature space, allowing the model to cover longer motifs. multi-aspect amino acid properties are embedded into the k-mer patterns  by combining amino acid classification with spectrum kernel, which provides a novel analysis of protein sequence. combining all the derived kernels helps integrate multi-aspect information of protein sequence and boost the performance of predictive model.

competing interests
the authors declare that they have no competing interests.

authors' contributions
msy conducted the computational modelling. wf conceived and supervised the study. all authors read and approved the final manuscript.

