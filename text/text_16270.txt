BACKGROUND
potato  is the 3rd largest food crop in terms of human consumption  <cit> . it is therefore important for our food security, and understanding its genome is called for. examples of major challenges in potato research are its sensitivity to drought stress and its lack of resistance to certain diseases, e.g., the oomycete phytopthora infestans, which caused the irish famine in the 1840’s. farmers need to use large amounts of fungicides to protect their potato crops, thereby increasing the cost of cultivation and threatening the environment. for example, the global cost of protection and yield loss due to p. infestans has been estimated at €4800 m annually  <cit> .

recently, the potato genome  was sequenced by the potato genome sequencing consortium . the pgsc analysis of the genome reported gene models for  <dig>  representative transcripts, and  <dig>  including splicing variants  <cit> . in a later effort, the international tomato annotation group  produced new gene models by jointly analyzing the tomato and potato genomes  <cit> . these new gene models covered  <dig>  and  <dig>  predicted protein-coding genes for the tomato and the potato genomes, respectively. unfortunately, few experimentally validated genes  are available in newly sequenced genomes in which, unlike established model organisms, few genes have verified functions such as the case is for potato. comprehensive and accurate functional annotation of the genes in such recently sequenced genomes is a prerequisite to efficient exploitation of these genomic data.

a key tool for functional annotation is the gene ontology , which provides a structured set of defined terms representing gene properties  <cit> . the structure of gene ontology is composed of three major domains: cellular component , the parts of a cell or its extracellular environment; molecular function , the elemental activities of a gene product at the molecular level; and biological process , which describes a set of functionally related molecular events. thus, the complete go structure provides a unified vocabulary of biological terms, which can also be used to evaluate biological similarity of different terms  <cit> . annotating a gene means placing it within some or all of the three gene ontology domains.

recent advances in plant science are marked by the rapidly increasing availability and quality of high-throughput sequencing data. the most basic usage of these data is gene function prediction, wherein go plays a pivotal part. there are several computational suites like expander  <cit> , mapman  <cit> , mercator  <cit>  and amigo  <cit>  that enable biologists to run go enrichment analyses in several plant model systems. this is usually done by first identifying a group of genes that behave similarly in a given expression dataset, seeking ontology terms highly enriched in the group, and associating the highly enriched functions with unannotated genes that belong to the same group. this process is sometimes called “guilt by association”. automated gene function annotation is also relevant for well-investigated plant model organisms, such as arabidopsis thaliana, tomato, brachypodium and rice, wherein ~40% of the genes still do not have any known function  <cit> .

in order to assign functional annotation to sequenced plant transcripts, researchers can use several sequence-based annotation pipelines. for a comprehensive summary of methods and principles behind automated functional annotation see  <cit> . some recent efforts have been made to characterize the annotation quality of plant genomes. for example, jaramillo-garzón, et al.  <cit>  used sequence features and showed high predictability of mf and cc terms and lower predictability of bp terms. however, the analysis was limited to a small subset of the go terms . ramsak, et al.  <cit>  presented gomapman, a tool for visualization and analysis of gene annotation in plants. in potato, information from orthologous gene families across  <dig> sequenced plant genomes was analyzed in order to increase the number of potato genes associated with go terms  <cit> . still, a robust, automated approach to evaluate and compare genome-wide annotation pipelines is direly needed.

a typical genome-wide functional annotation of newly sequenced organisms starts by using a single ‘default’ pipeline. here, we analyzed the two sets of potato gene models, from the itag and pgsc. we compared six annotation pipelines: trinotate hmm, trinotate blast  <cit> , orthomcl-uniprot  <cit> , blast2go  <cit> , phytozome  <cit>  and interpro2go provided in biomart  <cit>  . these pipelines were chosen because they seek to provide a comprehensive annotation of the whole genome. some of these pipelines are based solely on sequence similarity , others rely on specific domains and some are based on clustering of groups of orthologous gene families. as we shall show, one clear conclusion of this work is that functional annotations of genomes should rely on more than one annotation pipeline.figure  <dig> 
overview of pipeline comparison, validation of accuracy and integration processes.  the pgsc and itag gene models were used as input for the six pipelines assessed.  the annotation from each pipeline was transformed into gene id – go term associations.  annotations were compared by the number of annotated gene models, the number of go terms associated per gene model, and go similarity.  the quality and comprehensiveness of the annotation of each pipeline were calculated by comparing their predictions to experimentally validated annotation . in addition, gene co-expression data were used to test if genes predicted to share the same go processes are significantly co-expressed.  an integrated annotation using the ensemble of results of all pipelines was created and validated using the same criteria in d. results of the ensemble annotations were compared to those of the individual pipelines.



by examining the go terms generated by these pipelines, we demonstrate that they predict very dissimilar annotations . to evaluate the performance of the pipelines we first created a set of potato genes , with known functional characterization, including genes from the well characterized biosynthetic carotenoids pathway. we show that pipelines may have rather low accuracy compared to the gold standard. since the size of the gold standard is rather modest , we used an additional validation scheme based on gene expression data. under the premise that genes participating in the same biological process should have more similar expression pattern than expected by chance, we evaluated the predictions of each pipeline based on its intra-process gene co-expression level. we show that while all pipelines provide much higher intra-process co-expression than expected by chance, there are large differences among the methods. we introduce a simple method to combine the results of the different pipelines into a single integrated annotation. compared to the single pipelines, it improved gene coverage, prediction precision, and the overall co-expression of predicted go processes. in addition to improved annotation of potato genes, our analysis provides generic tools that can be applied to improve the annotation of other newly sequenced plants.

RESULTS
a compendium of the state-of-the-art annotation tools
in this study, we tested automatic annotation pipelines on the potato genome. we used six state-of-the-art tools for go gene function prediction:  trinotate hmm,  trinotate blast  <cit> ,  orthomcl-uniprot  <cit> ,  blast2go  <cit> ,  phytozome  <cit> , and  interpro2go  <cit> . see methods and additional file 1: methods s1- <dig> for details. we note that every program has its own set of parameters and fitting the best parameter combination for a particular dataset is a substantial effort. the common practice in this area is to use published tools with the default parameter values , we excluded b. we call this step ancestor removal. note that after filtering, many genes were still associated with more than one go term, since a gene can have several associated annotations none of which is an ancestor of another. for the output of all pipelines, see additional file 2: table s <dig>  additional file 3: table s <dig>  additional file 4: table s <dig>  additional file 5: table s <dig>  additional file 6: table s <dig> and additional file 7: table s <dig> for pgsc, and additional file 8: table s <dig>  additional file 9: table s <dig>  additional file 10: table s <dig>  additional file 11: table s <dig>  additional file 12: table s <dig> and additional file 13: table s <dig> for itag. although gene ontology has its limitations as it is biased towards what is already known, it is still a universal key tool for functional annotation inferring functionality based on sequence identity, domains and structure, and literature studies.

disparity among pipelines
the output from each pipeline can be represented as a triplet  where p is the set of all predicted gene-go term pairs , g is the set of genes covered by p, and go is the set of go terms covered by p. we measured the pairwise similarity between the triplets obtained from the six pipelines used in the study. three different ways were used to compare the output of two pipelines a =  and b = . first, we measured the overlap between the predictions of the pipelines pa and pb. this was done by calculating the ratio between the size of the intersection of pa and pb and the size of the union of pa and pb. this measure is called the jaccard score  <cit> . second, we measured the similarity between the covered gene sets ga and gb of the pipelines by calculating their jaccard scores. these two scores are complementary: the first measures the overall similarity between a and b, whereas the second measures the tendency of a and b to cover the same genes. however, these scores ignore the go structure and thus they are oblivious to the functional similarity among different go terms. therefore, we also used a similarity score based on the semantic similarity of go terms  <cit> . given a specific go type gt , for each gene we measured the semantic similarity between its go terms in a and its go terms in b. we then took the average over all genes as the similarity of a and b in gt . as this score uses the structure of the go hierarchy, we call it structure-based.

an example of the structure-free similarity of the predictions is shown in figure 2a. the figure shows the pairwise jaccard score between the pgsc mf predictions of the pipelines. overall the similarity is low, averaging  <dig> . nevertheless, local patterns can be observed. for example, interpro2go, trinotate hmm, and phytozome were more similar . figure 2b shows the jaccard similarity between the pgsc genes annotated by the different pipelines. the mean similarity was a higher  <dig> , which is still quite low. this indicates that different pipelines tend to cover different genes and, even when covering the same genes, they often associate distinct annotations to them. even when re-computing the structure-free similarity restricted only for the genes shared by each pair of pipelines , the average score was only  <dig> .figure  <dig> 
comparison of annotations of the pgsc genes by different pipelines. each similarity matrix shows all pairwise similarities between the pipelines.  structure-free jaccard similarity of the mf predictions of the pipelines.  jaccard similarity of the gene sets covered by each pipeline.  structure-based similarity between the go mf predictions of the pipelines. unlike , the calculation here used the go hierarchy to quantify the similarity of the predictions .  structure-based similarity between the go bp predictions of the pipelines.



the structure-based mf and bp similarity of pgsc genes is summarized in figure 2c and 2d. similar matrices on itag data are shown in additional file 1: figure s <dig>  again, pipelines tend to be very different, with average similarity of  <dig>  in bp and  <dig>  in mf. the scores are higher than for the structure-free approach because the structure-based approach assigns higher scores when predictions are different but biologically similar. also, like in the structure-free scores in figure 2a, interpro2go, trinotate hmm, and phytozome formed a cluster both in bp and in mf. taken together, the discrepancies among pipelines show that pipelines differ in the sets of genes they cover, and the annotation of the same genes in different pipelines can be quite dissimilar.

ensemble of pipelines
the marked disparity in gene annotation by different pipelines calls for an integration of the different predictions in order to provide a unified potato gene annotation. we developed a simple ensemble algorithm inspired by previous studies  <cit> . our algorithm takes as input the predictions of all pipelines and for each gene merges its predictions into a vector of scores denoted as the gene’s combined profile . briefly, we first calculate the pipeline-specific gene profiles. for a specific pipeline that predicted the pair , where g is a gene and t is a go term, the t-th position of the profile is  <dig> if g is associated with t or at least one of its descendants, and otherwise it is  <dig> . the combined profile of each gene g is the sum of its pipeline-specific profiles . the value in the combined profile of a gene shows how many pipelines agree with each gene-go term association. given a threshold k, for each gene we report all go terms with a combined score ≥ k. this process produces a list of go terms for each gene. we call this variant ensemble-k. finally, we apply the ancestor removal filter described above. thus, each value of k produces a different variant of the ensemble algorithm. figure  <dig> shows a toy example of ensemble- <dig> and  <dig>  for clarity, in the next sections we use the name annotation method for both pipelines and variants of the ensemble algorithm. we also tested a more involved supervised ensemble method, which in addition ranks the pipelines by their average f-measure against a gold standard , but this did not improve the results .figure  <dig> 
a simple example of the ensemble algorithm. the input  is a set of go terms, the go graph, and association between genes and go terms. the example shows the ensemble process of a single gene g. first, the pipeline-specific gene profiles are calculated . a go term is assigned a value ‘1’ in the profile if g is associated with it or with at least one of its descendants and ‘0’ otherwise. second, the combined profile of g is the sum of its pipeline-specific profiles. the scores in the combined profile show how many pipelines agree with each of g’s go term association. given a threshold k, the go terms with a combined score lower than k are removed to provide a final list of go terms associated with g . each different value of k constitutes a different variant of the algorithm.



we compared the annotation methods in terms of gene coverage and the average number of go terms per gene, which we denote as ngpg. ideally, gene coverage should be as high as possible, while ngpg should be low  <cit> . the results are shown in figure 4a and 4b. one can observe marked differences between the different pipelines, and between itag and pgsc gene models. for example, based on pgsc data, interpro2go and orthomcl-uniprot have the highest gene coverage , and ngpg score . however, based on itag data, orthomcl-uniprot’s results were similar to those for pgsc, while for interpro2go the number of genes dropped under  <dig>  and the ngpg score increased to  <dig>  .figure  <dig> 
gene coverage and mean number of go terms per gene . for each annotation method  the gene coverage  and ngpg  are shown both for pgsc and itag gene models.



figure 4a and 4b also show the gene coverage and the ngpg of the ensemble algorithm. as expected, using either ensemble- <dig> or  <dig> increased the gene coverage compared to the single pipelines using both itag and pgsc gene models. for example, based on pgsc the number of covered gene models  was  <dig>   and  <dig>  . larger k values led to a sharp decrease in gene coverage, such that even single pipelines covered more genes. using ensemble- <dig>  the ngpg score was similar to the highest score obtained by a single pipeline, reaching a score of  <dig>  on pgsc data, and  <dig>  on itag data. ensemble- <dig> led to a sharp decrease in ngpg:  <dig>  on pgsc, and  <dig>  on itag.

in summary, our results show that the ensemble algorithm increases the gene coverage considerably without increasing the ngpg score. ensemble- <dig> increased gene coverage by more than  <dig> genes on both itag and pgsc data, while keeping the ngpg score similar to that of the highest single pipelines. ensemble- <dig> increased the gene coverage only moderately compared to the single pipelines but the ngpg score declined sharply compared to all pipelines , hence providing much more focused annotations. in the next sections we demonstrate that the aforementioned improvements were not achieved at the expense of precision.

validation using the potato gold standard
to evaluate predictions of the different annotation methods we compiled a gold standard of  <dig> and  <dig> gene-go term pairs based on pgsc and itag data, respectively, using manual annotation by experts . the number of genes included in the gold standard , is small, but in an organism such as potato it still contains the majority of genes with experimental evidence. we evaluated the annotation methods by calculating their go-based precision and recall. use of the go structure to calculate scores for gold standard validation has been previously suggested by  <cit> . the go-based recall of a gene measures the extent to which its terms according to the gold standard are covered by its predicted go terms. the go-based precision of a gene measures the extent its predicted go terms match the gold standard terms. for each pipeline we calculated the average precision and average recall  and report the f-measure, which is the harmonic mean of the precision and the recall  <cit> . see methods for a full description of these calculations.

the results of the validation based on pgsc and itag data are illustrated in figures  <dig> and additional file 1: figure s <dig>  respectively. figure 5a shows the f-measure for bp go terms. ensemble- <dig> and  <dig> reached f-measures of  <dig>  and  <dig> , respectively, while the top performing pipeline was interpro2go with only  <dig> . figure 5b shows the f-measure on the mf gold standard. ensemble- <dig> and  <dig> reached f-measures of  <dig>  and  <dig> , respectively, whereas the top performing pipeline was interpro2go with an f-measure of only  <dig> . thus, the results are in agreement with the bp validation: ensemble- <dig> and  <dig> performed best and improved upon the single pipelines. taken together, our results indicate that ensemble- <dig> and  <dig> provide a significant improvement in comparison to single pipelines.figure  <dig> 
validation of annotations based on gold standard. for each annotation method  the f-measure of the gold standard validation is shown on pgsc gene models, see methods for a full description of the scores. a score of  <dig> means perfect agreement between an annotation method and the gold standard. a score close to zero means poor concordance with the gold standard.  f-measure of the bp annotations.  f-measure of the mf annotations. the results show that both in bp and mf the ensemble algorithm improves the results considerably when used with k is  <dig> or  <dig> 



validation using gene expression data
an obvious disadvantage of any gold standard is that it is limited to experimentally validated genes and subject to the opinion of experts. consequently, we added an additional validation based on gene co-expression analysis, where we measured the ability of pipelines to predict the same go-term to highly co-expressed genes. our co-expression analysis is based on the gene expression of  <dig>  genes in  <dig> expression profiles from over  <dig> microarray studies. we used the pearson correlation coefficient to measure co-expression between genes.

we used the gene pairwise co-expression scores to validate predicted go bp terms. in order to reduce noise, we ignored terms with > <dig> genes, or with fewer than five genes. given a set of genes predicted to be associated with the same go term according to a specific annotation method, we tested if the level of co-expression among its genes is higher than expected by chance . thus, for each term in a specific annotation method we calculated a single p-value. to summarize these values when comparing methods we calculated two scores:  the number of go terms with p < <dig> , and  the percentage of go terms with p < <dig>  . the former is a measure of coverage of significant go terms, whereas the latter is a measure of quality of the predicted go bp terms. similarly to the gold standard, this analysis simply aimed to compare pipelines. future work can use similar approaches to select highly co-expressed go terms from different pipelines for subsequent analyses.

the results of the gene co-expression validation based on pgsc data are shown in figure  <dig>  see additional file 1: figure s <dig> for results of itag. the top two pipelines in terms of the number of significant go terms were interpro2go  and blast2go . the top two pipelines in terms of the percentage of significant go terms were interpro2go  and phytozome . the ensemble algorithm markedly improved the number of significant go terms: ensemble- <dig> achieved  <dig>  and ensemble- <dig> achieved  <dig>  however, the ensemble methods did not improve upon the single pipelines in terms of the percentage of significant go terms: ensemble- <dig> and  <dig> achieved 22% and 27%, respectively. nevertheless, the score of ensemble- <dig> was better than all pipelines except for interpro2go and phytozome. thus, the ensemble approach provided an improvement of at least  <dig> -fold in the number of significant go terms, at the expense of a drop of 8% in the percentage of significant go terms compared to the best pipeline. note that the co-expression and the go analyses are complementary, since the gold standard genes do not manifest unusually high co-expression .figure  <dig> 
validation of annotations based on co-expression. given a set of pgsc genes linked to a biological process by a specific annotation method  the average co-expression of the genes was compared to that of random gene sets. for each annotation method the number of go terms with p < <dig>  , and the percentage of go terms with p < <dig>   are shown. ensemble- <dig> has a lower percentage of significant go terms compared to the best single pipeline , but it has > <dig>  fold more significant go terms.



merging the different merits using a rank-based comparison
our analysis shows that the ensemble approach is beneficial according to most criteria. however, since we used multiple ways to score the methods, it is hard to decide which k value is best and which pipelines are better. to provide a clear unified view we used a non-parametric rank-based consolidation of the different scores  <cit> . in the previous sections, for each annotation method we calculated two f-measure scores in the gold standard analysis and two scores in the gene co-expression analysis. in addition, we compared the annotation methods by their gene coverage and ngpg. note that when ranking methods by their ngpg score, lower scores are better. in contrast, when ranking methods by their gene coverage, higher scores are better. to consolidate these different scores, we used six rankings: by gene coverage and the ngpg score, by the two f-measures of the gold standard validation and by the two scores of the gene co-expression validation. we reversed the scores when necessary so that rank  <dig> was the best for each method, averaged the rankings and ranked the methods by their average rank. we call this score rank-merge.

figure  <dig> displays the rank-merge results on pgsc  and itag  data. the top three methods are colored black. in both cases the top method was ensemble- <dig>  with an average rank of  <dig>  in pgsc and  <dig>  in itag. among the different pipelines evaluated, phytozome obtained the top score for pgsc data with an average rank of  <dig>  while blast2go obtained top score for itag data with an average rank of  <dig> . note that ensemble- <dig>   <dig>  and  <dig> were ranked consistently high in both tests. see also additional file 17: table s <dig> for pgsc and additional file 18: table s <dig> for itag. thus, we conclude that the ensemble approach, especially with k =  <dig>  is beneficial and can assist in integration of different gene function prediction pipelines. see additional file 1: method s <dig> for details on reproducing the results and applying the pipeline to new genomes.figure  <dig> 
rank-based consolidation of the different figures of merit. a non-parametric rank-based consolidation of the different scores of the annotation methods was used for a unified comparison. first, six rankings were calculated: by gene coverage, by ngpg, by the two f-measures of the gold standard validation, and by the two gene co-expression validations scores . to merge the different rankings we used the average rank. the results show that both for pgsc  and for itag , ensemble- <dig> has the best average rank.



note that using k =  <dig> is equivalent to assigning to each gene all its annotations from all pipelines  and then performing ancestor removal. while this method is the most intuitive ensemble, we show here that varying the k parameter can improve the annotation of genomes.

a seemingly natural test case for our approach is to evaluate it in predicting function of arabidopsis genes. however, it is not clear how this can be done in a rigorous and unbiased manner. tools for functional annotation of genes in newly sequenced plants are heavily dependent on sequence similarity to genes in model species such as arabidopsis. in order to test such tools in predicting arabidopsis gene functions, one has to exclude all the annotations directly – or indirectly – derived from arabidopsis. doing so would entail tracing indirect annotation sources, which often are not recorded in the pipelines. instead, we used the newly sequenced potato genome along with experimentally verified gene functions and rich gene expression data in our evaluation.

CONCLUSIONS
for recently sequenced, non-model organisms, automatic functional annotation of genes, which also mainly relies on sequence-based prediction, often suffers from low gene coverage and poor specificity. we confirmed that this is the case for the potato genome by analyzing six state of the art annotation pipelines.

we observed that the predictions of different pipelines for functional annotations of genes are markedly different, in spite of the fact that all pipelines are based on sequence analysis. we showed that combining predictions from several pipelines increases both the coverage and the accuracy of gene ontology predictions. the simple ensemble approach used here could be applied easily to other sequenced genomes and improve functional annotation by taking advantage of different go prediction tools. however, a comparison of the consistency among pipelines is not enough when the goal is to either select the best pipeline or to integrate the different predictions. the pipelines should also be evaluated based on the precision of their predictions. the most intuitive way is to compare the pipelines to a set of known annotations. however, in newly sequenced organisms such as potato, known annotations are scarce in the main public databases. to overcome this, we compiled a gold standard of experimentally-validated gene-go associations. although this gold standard is relatively small, we have found it useful for comparing pipelines. furthermore, to overcome the limited number of genes in the gold standard, we used a second validation method based on gene co-expression testing the ability of pipelines to predict co-expression of genes associated to the same go-term.

finally, we introduced an integrated annotation of the different pipelines that outperformed the single pipelines both in the gold standard validation and in the co-expression validation. our integration approach depends on selecting a parameter k that corresponds to the stringency by which we filter out gene-go associations. that is, when associating a gene to a go term, at least k pipelines must agree with this association. thus, we have implicitly assumed that each of the pipelines we used has meaningful predictions. moreover, all pipelines have the same weight in the integration process. future analyses can seek methods that give more weight to better pipelines, or add an initial step that filters out pipelines of exceptionally low prediction quality. the new functional annotations of the potato genome as well as for the probes on the jhi solanum tuberosum microarray are available with this paper . we also provide tools as open source r code for implementing the methodology with additional pipelines and for other sequenced organisms.

