BACKGROUND
prediction of protein complexes from protein-protein interaction  networks has become a key problem for revealing cellular function and organization of biological systems in post-genomic era. in a cell, proteins are central part of life activity. however, most of proteins are functional only after they are assembled into a protein complex which carry out almost all of the biochemical, signaling and functional processes in a cell. protein complexes are of great importance for understanding the principles of cellular organization and function .

with the development of high-throughput techniques, such as yeast two-hybrid and mass spectrometry, a large amount of ppi data has been generated  <cit> . as a result, large-scale ppi networks have been constructed for a wide range of organisms. over the past decade, great efforts have been made to detect protein complexes in these ppi networks through the computational methods . most studies on protein complexes prediction have been focused on the static ppi networks  <cit> . bader and hogue  <cit>  propose the molecular complex detection  algorithm that is one of the first computational methods to predict protein complexes. markov clustering   <cit>  can be applied to predict protein complexes by simulating random walks in ppi networks. liu et al.  <cit>  present a method called cmc  which identifies protein complexes based on maximal cliques. chen et al.  <cit>  propose a novel method using cliques as seeds and graph entropy to detect protein complexes. wu et al.  <cit>  present coach algorithm to identify protein complexes based on the core-attachment structural feature. since some proteins may belong to more than one protein complex, nepusz et al.  <cit>  propose clusterone algorithm to detect the overlapping protein complexes in a large ppi networks. in the past few years, some studies have integrated more biomedical resources, such as gene ontology  and gene expression data, to improve the performance of protein complexes prediction. for example, zhang et al.  <cit>  integrate go with ppi data to construct the ontology attributed ppi networks, and propose cso algorithm to predict protein complexes in large ontology attributed ppi networks.

however, these methods described above only focus on the static ppi networks. in reality, the ppi network in a cell is not static but dynamic, which is changing over time, environments and different stages of cell cycles  <cit> . generally, modeling biology systems as static ppi networks is a simple and efficient way to model biology systems. but static ppi networks loses all the temporal information which is critical to the understanding of the interaction between proteins in a cell. therefore, the shift from static ppi networks to dynamic ppi networks is essential to predict protein complex accurately.

there are mainly two ways to construct dynamic ppi networks based on gene expression data and high-throughput ppi data. one major methodology to construct dynamic ppi networks is based on gene expression variance of each protein. in general, if a protein is at active time point, the expression level of the corresponding gene is at the peak point. based on this assumption, wang et al.  <cit>  inject gene expression data into static ppi networks to construct dynamic ppi networks, and predict the protein complexes and the essential proteins. as an alternative, several studies have constructed dynamic ppi networks based on the differential co-expression correlations. for instance, taylor et al.  <cit>  observe multimodal distribution of correlation coefficients of gene expression using curated sources from the literatures. they analyze the human ppi networks and discover two types of hub proteins: intermodular hubs and intramodular hubs. similarly, lin et al.  <cit>  reveal dynamic functional modules under conditions of dilated cardiomyopathy based on co-expression ppi networks.

cellular systems are highly dynamic and responsive to cues from the environment  <cit> . both proteins and ppis are changing over different stages of cell cycles. therefore, not only the gene expression variance information but also the co-expression correlations information are necessary in the construction of an accurate dynamic ppi networks. in this study, we firstly integrate the two aspects to construct a dynamic ppi networks that can accurately model the dynamic processes in a cell. the active probability of both proteins and ppis are calculated based on gene expression data and high-throughput ppi data. we then propose a clustering algorithm to predict the protein complexes in dynamic ppi networks. finally, our method is compared with the state-of-the-art methods used for protein complex prediction. the advantages of the method, potential applications and improvements are discussed.

methods
construction of dynamic ppi networks
the gene expression data is very valuable to reveal the dynamic properties of proteins and ppis. we integrate gene expression data with high-throughput ppi data to construct dynamic ppi networks. based on gene expression data, we use both gene expression variance information and co-expression correlations information to calculate the active time point and active probability of each ppi in dynamic ppi networks.

since the gene expression level of a protein will decrease after the protein has completed its function, different peak time points of gene expression value may represent the dynamic changes of protien activities. in general, a protein is active at the time point, when its related gene expression value is at the high level. a simple idea is to use a single global threshold for identifying the active time point of each protein. if the gene expression value of a protein is higher than the global threshold at a time point, the protein is active in the time point. actually, it is very difficult to use a global threshold to identify the active time point of proteins. there are at least two reasons. on the one hand, the expression level of different protein in activity period is different. on the other hand, there is inevitable background noise in gene expression data. to solve these problems, wang et al.  <cit>  propose a three-sigma method to identify active time points of each protein in a cellular cycle. however, the active proteins with low expression values are likely to be filtered out even though using an active threshold for each gene. in this study, we calculate the active probability of each protein at different time points based on three-sigma method. we use equations  to calculate the k-sigma  threshold for each gene expression data p.  <dig> threshk=α+k⋅σ⋅) 

where α and σ are the arithmetic mean and the standard deviation  of the gene expression data p, respectively. threshk is determined by the values of α, σ <dig> and k . let x be a real random variable of normal distribution n. for any k >  <dig>  p{|x-α| < kσ} = 2Φ- <dig>  where Φ is the distribution function of the standard normal law. in particular, for k =  <dig> , <dig> it follows that p{|x-α| < σ} = p{α-σ < x < α + σ} ≈  <dig> , p{|x-α| < 2σ} ≈  <dig>  and p{|x-α| < 3σ} ≈  <dig> . similarly, in the equation , the larger k is, the higher threshk gets. a higher value of threshk indicates that using more strict rules to identify the active time point of a protein. let gi be the gene expression value of the gene p at the time point i. for instance, based on the three-sigma rules, when gi> α + 3 ⋅ σ, the probability that the protein p  is active at the i time point is  <dig>  %. but when gi> α + σ, the probability that the protein p  is active at the i time point is only  <dig>  %.

we use a column pri to represent the active probability of proteins at the time point i. based on the above empirical rules, the active probability pri of protein p at the time point i can be calculated as follows:  <dig> prip= <dig> ifgip≥thresh3p <dig> .680ifthresh3p>gip≥thresh2pifthresh2p>gip≥thresh1pifgip<thresh1p 

thus, we can use four levels  to represent the active probability of each protein at the time point i.if the value of gi is lower than threshk, the active probability is  <dig>  it indicates that the protein p is not active in the i time point, when pri is equal to  <dig>  this method not only identifies the active time points for each protein, but also distinguishes the active level of the protein by its active probability, which is more reasonable than both global threshold methods and active threshold methods. but we also note that, in some extreme cases, our method still cannot accurately identify the active time points of proteins. the whole activity ppi networks acti are built for each time point:  <dig> acti=priprit 

where pri is a column vector representing the activity of all proteins at time i and prit is the transpose of the column vector pri.

coexpression correlation coefficient is used as a measure of coexpressed genes having the same expression variance patterns across different conditions, which is a strong indicator of protein functional associations. zhang et al. use the pearson correlation coefficient  to calculate the coexpression correlation of gene expression data and build coexpression protein networks at different time points  <cit> . we use the same method to calculate the coexpression protein networks coe. coei denotes the coexpression protein networks coe at the time point i. calculation of correlation coefficient requires multiple sequential expression data that cover a period of time. we set a time window on the original expression data, which covers three sequential time points. when i is the current time point, the time window covers three time points including i- <dig>  i and i +  <dig>  we use a predefined threshold to filter the small value of correlation coefficient in coei as follows:  <dig> coeimn=p_correlationimnp_correlationimn≥pre_thresh0p_correlationimn<pre_thresh 

where p_correlation is the pearson correlation coefficient between the protein m and protein n at the time point i. pre_thresh is the predefined threshold, and we can choose the optimal value for pre_thresh by preliminary experiments. in our experiments, we set pre_thresh as  <dig> .

the high-throughput ppi data can construct a static ppi networks. let adj_spn denote the static ppi networks adjacency matrix. integrating act, coe and adj_spn, we can calculate the dynamic ppi networks adjacency matrix adj_dpn at the time point i as follows:  <dig> adj_dpni=acti∘coei∘adj_spn 

where ○ represents element-wise multiplication. equation  integrates the topology information of static ppi networks with the dynamic information of gene expression effectively. in respect of dynamic information, equation  takes into account the active probability of each proteins as well as the coexpression correlation of each ppi. based on equation , we can calculate an active probability for each ppi in the dynamic ppi networks at different time points. the value of active probability of each ppi takes ranges of  <dig> to  <dig> 

figure  <dig> shows an illustration example of the dynamic ppi networks construction. in fig.  <dig>  we construct static ppi networks based on high-throughput ppi data, which don’t contain any temporal or dynamic information. in fig.  <dig>  we exploit gene expression data to calculate the active probability of proteins and the pearson correlation coefficient of ppis, respectively. it can be seen that each protein in the static ppi networks is associated with the active time points and the active probability. based on the equation , the active probability of proteins only include three values  <dig> ,  <dig>  and  <dig> . for instance, the protein v <dig> has two active time points , and its active probability is  <dig>  at t <dig> active time point. a ppi in the static ppi networks  is active at the time point i, if the two proteins associated with this ppi are both active at the time point i. then, we calculate the pearson correlation coefficient between the two proteins at the active time point i. in fig.  <dig>  “ppi <dig> ” denotes the ppi between v <dig> and v <dig>  and “-” denotes the pearson correlation coefficient is lower than the predefined threshold. in fig.  <dig>  to construct dynamic ppi networks, we integrate the topology information  of static ppi networks with the dynamic information  calculated based on gene expression data. we use equation  to calculate the probability value of each ppi in the dynamic ppi networks .fig.  <dig> an illustration example of dynamic ppi networks construction. a construction of static ppi networks based on high-throughput ppi data. b calculation of dynamic information based on gene expression data. atp, ap and pcc denote active time points, active probability and pearson correlation coefficient, respectively. c construction of dynamic ppi networks



protein complex prediction from dynamic ppi networks
dynamic ppi networks can effectively represent not only the topology structure but also the dynamic information of ppi networks. a dynamic ppi network generally consists of a serial of active ppi subnetworks. for example, the dynamic ppi network in fig.  <dig> consists of three active ppi subnetworks. let dpn denote a dynamic ppi networks that includes tk active ppi subnetworks {dpnt <dig>  dpnt <dig>  …, dpntk}. {adj_dpnt <dig>  adj_dpnt <dig>  …, adj_dpntk} is the adjacency matrices of the dpn at t <dig> t <dig>  …,tk active time points. given a subgraph sg in an active ppi subnetworks dpnti, let vsg and esg denote the set of proteins and ppis in sg, respectively. the density of sg is defined as follows:  <dig> densitytisg=2×∑euv∈esgadj_dpntiuvvsg×vsg− <dig> 

given a subgraph sg in the active ppi subnetworks dpnti, a protein v in the active ppi subnetworks dpnti, and v∉vsg, the attached score between v and vsg in the dpnti, is given as:  <dig> attach_scoretivvsg=∑u∈vsgadj_dpntiuvvsg 

the edges in the active ppi subnetworks dpnti contribute differently for protein complex prediction. the cluster score of edge e in dpnti is defined as follows:  <dig> cluster_scoretieuv=adj_dpntiuv×2×nu∩nv+1nu+nv 

where nu and nv denote the neighbors of protien u and protein v respectively. |nu∩nv | denotes the common neighbors of u and v. in the respect of topology structure of an active ppi subnetworks, the more common neighbors u and v share, the closer the interaction of two proteins u and v is. cluster score can effectively balance the effect between the topology closeness and the active probability of each ppi in the active ppi subnetworks.

a protein complex is a group of proteins assembled by multiple ppis at the same time and place  <cit> . moreover, some analysis of protein complexes has revealed their core-attachment organization feature  <cit> . our method for predicting protein complexes from a whole dynamic ppi networks involves two phases. in the first phase, our method predicts candidate protein complexes from all active ppi subnetworks in turn. all candidate protein complexes are added into candidate_complex. in the second phase, our method filters the candidate complexes set candidate_complex to remove the highly overlapped protein complexes.

the description of subroutine for detecting possible protein-complex cores is shown in algorithm  <dig>  firstly our method calculates the cluster_score of all edges in dpnti based on equation . the edge will be added into seed_set, if its cluster_score is not less than complex_thresh that is a predefined threshold parameter. the effect of complex_thresh will be discussed in our experiments. secondly, we rank all seed edges of seed_set in descending order of their cluster_score value, denote as seed_list = . the top ranked seed edge s <dig> was then inserted into the temp_candidate_core set core and removed from seed_list. we augment the seed edge s <dig> to generate the core structure by adding the suitable neighbor proteins one by one at line 13- <dig>  if the density value of the core structure is not less than complex_thresh when adding the neighbor protein p, it will be added into the core structure. to ensure that the core structure are non-overlapping, the overlapped seed edges are removed from seed_list at line 19- <dig>  finally, the attachment proteins are detected for each core structure based on the attach_score that is calculated by equation . the attachment proteins are added into the core structure to form the candidate protein complex.

the candidate protein complexes in candidate_complex generally overlap with each other. the description of subroutine for postprocessing of overlapped protein complexes is shown in algorithm  <dig>  all candidate protein complexes are ranked in descending order of their density value ) at line 2- <dig>  the candidate protein complex associated with highest density value in candidate_list is added into complex_set and removed from candidate_list. for any other candidate protein complex cci ∈candidate_list, we check the overlapped degree between cci and cc <dig>  if the overlapped degree is larger than the overlap_thresh that is a predefined threshold parameter, cci is directly removed from candidate_list at line 9- <dig>  after preliminary experiments, the overlap_thresh is set as 2/ <dig> in our experiments. these steps are repeated until candidate_list is empty. consequently, the final protein complex set complex_set is generated.

RESULTS
in this section, the datasets and evaluation metrics used in the experiments are described. the impact of the complex_thresh parameter is assessed and discussed. then, our method is compared with current state-of-the-art protein complex prediction methods. finally, we present an example of predicted protein complex to illustrate the advantages of our method. this implement of our algorithm and the experimental datasets are avialable in the additional files  <dig>   <dig> and  <dig> 

datasets and evaluation metrics
in our experiments, we choose four high-throughput yeast ppi datasets including gavin dataset  <cit> , krogan dataset  <cit> , mips dataset  <cit>  and string dataset  <cit> , respectively. in particular, string dataset is now one of the largest ppi datasets, which integrates yeast ppi data from the four sources, including high-throughput data, co-expression data, genomic context data and biomedical literature data. the statistics of the four yeast ppi datasets is listed in table  <dig> table  <dig> the statistics of ppi datasets in experiments



the gene expression data used in our experiment is gse <dig>  <cit>  downloaded from gene expression omnibus . gse <dig> gene expression data is an expression profiling of yeast by array affymetrix, which includes the expression profiles of  <dig>  probes. the experimental design of gse <dig> is  <dig> time intervals per cycle, and approximately 25 min per time interval. therefore, there are  <dig> active time points  for each gene in a cycle. we construct four dynamic ppi networks to integrate high-throughput ppi data and gene expression data. dpn_gavin, dpn_krogan, dpn_mips and dpn_string are constructed by integrating gene expression data gse <dig> with the gavin dataset, krogan dataset, mips dataset and string dataset, respectively.

the benchmark protein complex dataset cyc <dig>  <cit>  includes  <dig> manually curated heterometric protein complexes, which is used to evaluate the protein complexes predicted by our method.

to assess the quality of predicted protein complexes, we match generated complexes with the benchmark complex set cyc <dig>  let p be a predicted complex and b) be a known complex. we define the neighborhood affinity score na between pand b) as follows:  <dig> napb=vp∩vb2vp×vb 

if na is  <dig>  it means that the identified complex p has the same proteins as a known complex b. on the contrary, if na is  <dig>  it indicates no shared protein between p and b. we considered p and b to match each other if na was larger than  <dig> , which is the same as most methods for protein complex identification  <cit> .

precision, recall and f-score have been used to evaluate the performance in most of previous complex prediction studies, which are defined as follows:  <dig> precision=nciidentified_set   <dig> recall=ncbbenchmark_set   <dig> f‐score=2precision⋅recallprecision+recall 

where nci is the number of identified complexes which match at least one known complex, and ncb is the number of known complexes that match at least one identified complex. identified_set denotes the set of complexes identified by a method and benchmark_set denotes the gold standard dataset. precision measures the fidelity of the predicted protein complex set. recall quantifies the extent to which a predicted complex set captures the known complexes in the benchmark set. f-score provides a reasonable combination of both precision and recall, and can be used to evaluate the overall performance. to keep our evaluation metrics as the same as the most studies, we choose f-score as the major evaluation metrics.

recently, sensitivity , positive predictive value  and accuracy  have also been used to evaluate protein complex prediction tools. acc represents a tradeoff between sn and ppv. the advantage of the geometric mean is that it yields a low score when either sn or ppv are low. a high degree of accuracy thus requires a high performance for both criteria. these definitions have been described in detail by li et al.  <cit> . in our experiments, we also report sn, ppv and acc of our method on different ppi datasets.

the effect of threshold parameters
in this experiment, we evaluate the effect of the threshold parameter complex_thresh for protein complex prediction task on different dynamic ppi networks. as described in algorithm  <dig>  the complex_thresh determines the number of seed edges in the seed_set, as well as the density value of the core structure. the range of complex_thresh is from  <dig> to  <dig>  we can choose the optimal value of complex_thresh by the experimental approach.

we first evaluate the effect of complex_thresh on dpn_gavin. the detailed experimental results on dpn_gavin with different complex_thresh are shown in table  <dig>  the highest value in each row is in bold. as shown in table  <dig>  the number of predicted protein complexes continues to decrease as the value of complex_thresh takes from  <dig> to  <dig>  when complex_thresh =  <dig>  our method can predict  <dig> protein complexes on the dpn_gavin. on the contrary, our method cannot predict any protein complexes on the same dpn_gavin when complex_thresh = <dig> . based on the equation , the cluster score is smaller than  <dig> in theory. in other words, it is impossible to generate any seed edge in seed_set if we set complex_thresh = <dig> . overall, with the increase of complex_thresh, the recall, sn and acc are decreased in table  <dig>  the precision achieves the highest value of  <dig>  when complex_thresh = <dig> , and the ppv achieves the highest value of  <dig>  when complex_thresh = <dig> . the major metrics f-score is ranged from  <dig>  to  <dig> . when complex_thresh = <dig> , the f-score achieves the highest value of  <dig> .table  <dig> the effect of complex_thresh on protein complex prediction performance on dpn_gavin


complex_thresh
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
-
f: f-score, p: precision, r: recall. the highest score of each row is shown in bold



then, we evaluate the effect of complex_thresh on the dpn_krogan and dpn_mips. the detailed experimental results with different complex_thres are shown in tables  <dig> and  <dig>  the experimental results of complex_thresh on the dpn_krogan and dpn_mips are similar to the experimental results on the dpn_gavin. when complex_thresh = <dig> , our method achieves the highest f-score of  <dig>  and  <dig>  on the dpn_krogan and dpn_mips, respectively. based on these experimental results on three dpns, it can be seen that our method can achieve high performance for protein complex prediction by setting complex_thresh =  <dig> .table  <dig> the effect of complex_thresh on protein complex prediction performance on dpn_krogan


complex_thresh
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
-
f: f-score, p: precision, r: recall. the highest score of each row is shown in bold


complex_thresh
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
1
1
-
f: f-score, p: precision, r: recall. the highest score of each row is shown in bold



comparison with other methods
in this experiment, we compare our method with the following established leading protein complex prediction methods: cso  <cit> , cluster one  <cit> , coach  <cit> , cmc  <cit> , hunter  <cit> , and mcode  <cit>  . these methods are used to compare the performance in most of recent complex prediction studies. in this experiment, we set complex_thresh = <dig> . to equally compare the performance, we test all comparison methods on the gavin, krogan and mips dataset, respectively, and choose the optimal parameters. the highest value in each row was shown in bold.table  <dig> performance comparison with other protein complex prediction methods

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
#complexes refers to the number of predicted complexes. f: f-score, p: precision, r: recall. the highest score of each approach is shown in bold



firstly, we compare these methods on the gavin dataset. as shown in table  <dig>  our method achieves the highest f-score of  <dig> , recall of  <dig>  and ppv of  <dig> , respectively, which significantly outperforms other methods. cso achieves a high f-score of  <dig>  and the highest sn of  <dig> , which exploits the go annotation data to improve the performance of protein complexes identification. hunter achieves the highest precision of  <dig> . but the recall of hunter is only  <dig> , which leads to a low f-score of  <dig> . cluster one achieve the highest acc of  <dig> . we also note that our method can predict more protein complexes than other methods. for example, our method can predict  <dig> protein complexes on the gavin dataset. in contrast, mcode and hunter only identify  <dig> and  <dig> protein complexes on the gavin dataset, respectively.

secondly, we compare these methods on the krogan dataset and mips dataset. on the krogan dataset, it can be seen that the results on the krogan dataset are similar to the results on the gavin dataset. on the krogan datasets, our method achieves the highest f-score of  <dig> , recall of  <dig> , sn of  <dig>  and acc of  <dig> . cso also achieves a high f-score of  <dig> , which is only inferior to our method. hunter and cluster one achieve the highest precision of  <dig>  and ppv of  <dig> , respectively. on the mips datasets, our method also achieves the highest f-score of  <dig> , recall of  <dig>  and acc of  <dig> , respectively. hunter, cmc and cluster one achieve the highest precision of  <dig> , sn of  <dig>  and ppv of  <dig> , respectively.

thirdly, we compared these methods on the string dataset. string dataset is much larger than other three ppi datasets, which contains  <dig> ppis. due to the complexity of the ppi network constructed by string dataset, it is much more difficult to predict protein complex on string dataset than other three datasets. from table  <dig>  it can be seen that the major metrics f-score of all comparison methods except for our method on string dataset are clearly inferior to the f-score on other three datasets. the compared experiments were conducted on a  <dig> ghz four-core intel i <dig> cpu and 8gb main memory. actually, cso and cmc methods cannot output the results on string dataset, because the clique mining algorithms used by the two methods are very memory and cpu cycle consuming in such large ppi networks. compared with other methods, our method firstly use string dataset and gene expression data to construct a whole dynamic ppi networks dpn_string which consists of  <dig> active ppi subnetworks, {dpnt <dig>  dpnt <dig>  …, dpnt12}. then, our method predicts the protein complexes from these active ppi subnetworks in turn. since each active ppi subnetwork is much smaller than the whole static ppi networks, our method is more suitable to deal with very large ppi dataset such as string than other methods. from table  <dig>  it can be seen that the computational time of our method is far less than other methods on string dataset. in particular, our method can also achieve the high f-score of  <dig>  and recall of  <dig>  on string dataset.table  <dig> performance comparison in computational time



in summary, our method not only effectively integrates gene expression data and high-throughput ppi data to construct dynamic ppi networks, but also makes good use of dynamic information of dynamic ppi networks to improve the performance of protein complex prediction. our method is competitive or superior to the current protein complexes identification methods, and achieves the state-of-the-art performance on different yeast ppi datasets.

examples of predicted complexes
figure  <dig> shows the rna polymerase i complex predicted exactly by our method on string dataset. based on the gene expression data and string dataset, our method firstly calculates the protein dynamic information, and then constructs the dpn_string. from fig.  <dig>  it can be seen that all proteins of rna polymerase i share the common active time point t <dig>  this indicates that all these proteins will be active in the active ppi subnetwork dpnt <dig>  eventually, our method exactly predicts the rna polymerase i complex from the ppi subnetwork dpnt <dig> rather than from the whole ppi network. furthermore, this result suggests that the life period of the rna polymerase i is at t <dig> time point. compared with other methods, our method can predict the rna polymerase i exactly from the very large ppi dataset string, as well as the active time point of the complex.fig.  <dig> rna polymerase i complex predicted by our method on string dataset



in fig.  <dig>  we present some examples of the predicted complexes which are not matched with the benchmark dataset. we evaluate the biological significance of these predicted complexes. in this experiment, we use sgd’s go::termfinder to calculate the p-value of each predicted complex, which is the statistical significance of the occurrence of an predicted complex with respect to go data. in general, an predicted complex is considered to be statistically significant if the p-value is less than  <dig> , and a smaller p-value generally represents higher biological meaning. from fig.  <dig>  it can be seen that the three ed complexes both have very low p-value and highly local density. therefore, the results provide clues for biologists to verify and find new protein complexes.fig.  <dig> examples of protein complexes predicted by our method



CONCLUSIONS
we integrate gene expression data and high-throughput ppi data to construct dynamic ppi networks. based on gene expression data, we calculate the active time point and the active probability of each protein and ppi. compared with static ppi networks, dynamic ppi networks can effectively represent both the dynamic active information and the topology structure information of ppi networks. using dynamic ppi networks, we develop a novel method for protein complex prediction. experimental comparisons on different ppi datasets show that our approach achieves the state-of-the-art ppi performance. in the future, we will cooperate with biomedical experts to further validate the protein complexes identified by our method. we will also attempt to apply our method to analysis other organisms.

additional files
additional file 1: source code for dynamic protein complexes identification. this implement of our algorithm runs under windows os. the main requirement is python  <dig>  or later and numpy. 

additional file 2: krogan ppi data. 

additional file 3: gse <dig> gene expression data. 



