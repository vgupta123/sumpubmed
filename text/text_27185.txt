BACKGROUND
single molecule real time  sequencing technology developed by pacific biosciences , can produce millions of long reads  per run. smrt sequencing is based on single molecule real-time imaging of the incorporation of fluorescently tagged nucleotides to a dna template molecule  <cit> . this technology has been successfully applied to a wide range of experiments and species such as the sequencing of dna amplicons  <cit>  and transcriptomes  <cit> . nevertheless the most popular application is whole genome sequencing. it has been used for the sequencing of bacterial genomes such as the plant pathogen xanthomonas oryzae  <cit> . pacbio reads have also been used for the sequencing of complex plant nuclear genomes, such as that of the adzuki bean, vigna angularis  <cit> , demonstrating the advantage of this technology for resolving repetitive regions during sequence assembly.

sequence assembly is the process whereby one or more consensus sequences are reconstructed from hundreds to billions of individual dna sequence reads. although there are dozens of programs to produce consensus sequences, they can be classified into two groups based on the algorithm they use: overlap–layout–consensus  and de bruijn graph . olc algorithms are best suited for low coverage long read approaches. the most popular pacbio assemblers such as hgap  <cit>  and falcon  utilize olc algorithms. a popular olc-based program, the celera assembler , has been updated to assemble pacbio reads  <cit>  . another option is the use of sprai  <cit> , a pipeline that employs the ca assembly algorithm. this pipeline pre-selects the best 20x coverage reads using blast searches  <cit> , then corrects and assembles them using ca. pacbio sequencing and olc assemblers have been successfully applied to the sequencing of yeast mitochondrial genomes  <cit>  and chloroplast genomes such as those of potentilla micrantha  <cit> , nelumbo nucifera  <cit> , and sugar beet   <cit> .

mitochondrial and chloroplast dna markers are the bridge between population genetics and systematics, primarily because they are maternally inherited and do not recombine; thus they can facilitate the reconstruction of maternal lineages  <cit> . mitochondrial genomes vary in size depending on the eukaryotic lineage. for animals, the lengths range from  <dig>  bp   <cit>  to  <dig>  bp   <cit>  with the average size being  <dig>  bp. conversely, mitochondrial genomes of plants and fungi can vary by almost three orders of magnitude, ranging from  <dig>  bp   <cit>  to  <dig>  mb   <cit> . chloroplast genomes, on the other hand, are typically much more conserved in their size and structure, ranging from  <dig>  bp   <cit>  to  <dig>  bp   <cit> , with an average size of ca.  <dig>  bp. at present, > <dig>  mitochondrial genomes have been sequenced, while comparatively fewer  chloroplast genomes have been sequenced .

the application of pacbio long-read dna sequencing technology to organelle genome sequencing will duplicate the numbers given above in the next  <dig> years. as previously described, there are several tools designed to assemble pacbio reads ; however, no single tool is available to assemble organelle genomes using total dna sequencing reads derived from the pacbio platform. we have developed a new perl-based tool, organelle_pba, designed expressly to reconstruct whole organelle genomes from pacbio data. first, the program selects the specific organelle reads by mapping raw reads to a reference organelle genome. then, it produces a de-novo assembly using sprai, a new re-scaffolding program, and removes the redundancy produced by the circular organization of these genomes. organelle_pba also resolves the inverted repeats found in chloroplast genomes. the tool is available at https://github.com/aubombarely/organelle_pba.

material and methods
pacbio reads from arabidopsis thaliana , mus musculus  and picea glauca  were downloaded from the sra repository using the prefech program from the sra toolkit. the sra file format was then converted to fastq format using the fastq-dump program in the sra toolkit.


sinningia speciosa pacbio reads were obtained by de novo pacbio dna sequencing. briefly, the s. speciosa variety ‘avenida niemeyer’  <cit>  was grown under fluorescent lighting at room temperature . dna was extracted from young flower buds using the qiagen dneasy® extraction kit. dna was quantified using a nanodrop® nd- <dig> spectrophotometer, and its integrity was evaluated by agarose gel electrophoresis. dna was sent to the duke center for genomics and computational biology facility, where a smrtbell™ long insert pacbio library  was prepared and then sequenced using a pacbio rsii system . pacbio reads were used directly in organelle_pba without any extra processing.

organelle reference genomes were downloaded from the ncbi nucleotide database. the downloaded references were m. musculus, nc_ <dig> ; mus carolis, nc_ <dig> ; rattus norvegicus, nc_ <dig> ; marmota himalayana, nc_ <dig> ; a. thaliana, nc_ <dig>  and nc_ <dig> ; brassica napus, nc_ <dig> ; vitis vinifera, nc_ <dig> ; p. abies nc_ <dig>  and boea hygrometrica nc_ <dig> .


for organelle genome coverage evaluation, the pacbio reads were mapped using blasr  <cit>  with the sam output format parameter. the result was piped into samtools for filtering of the unmapped reads  <cit> . coverage was calculated using bedtools  <cit> , and variants, snps, and indels were called using freebayes  <cit> .

implementation
organelle_pba is a program written in perl constructed as a single file script. it uses the following perl  <dig>  modules: getopts::std , file::spec , file::basename , file::copy , file::path , ipc::cmd , math::bigfloat , bio::seqio  and bio::tools::run::standaloneblastplus . additionally, it uses the following programs: blasr  <cit> , samtools  <cit> , blast  <cit> , sspace-longread  <cit> , sprai  <cit>  and bedtools  <cit> . the executable files are passed to the script as environmental variables if they are not accessible from the path. upon initial run, the script checks that all of the executable files are available prior to initializing any processes. the subprograms are run using the ipc::cmd perl module.

the program is divided into the following steps : <dig>  argument check and analysis of the input stats such as organelle reference size and number of reads.

 <dig>  mapping of the pacbio reads to the organelle reference genome using blasr.

 <dig>  parsing of the blasr results and selection of the pacbio reads that map to the organelle reference. the percentage of the read length aligned to the reference can be used to filter these hits.

 <dig>  read correction and assembly using sprai using the reads selected in the previous step. reads can be filtered by length before the assembly using the sprai arguments.

 <dig>  assembly evaluation comparing the total assembly size and the longest contig size with the reference sequence size. if the longest contig is longer than the reference genome, the script moves to step  <dig> , otherwise it continues to step  <dig> 

 <dig>  if the longest contig size is smaller than the reference, organelle_pba interprets the assembly as being fragmented. it then runs blasr and sspace-longread with the entire read dataset to find any reads that it could not select during the blasr mapping . after this, it evaluates the assembly again reporting the new sizes and then moving to step  <dig> 

 <dig>  circular assembly check by homology search  of the assembled sequence with itself. the program also checks for a possible origin based on the reference through a homology search . if it finds any of these, it will break the contig/scaffold, reorganizing the pieces to remove the redundancy from a circular assembly and orient the assembly based on the reference genome sequence.

 <dig>  check the completeness of the assembly. chloroplast genomes are composed of four parts: long single copy  section, short single copy , and two inverted repeats: ira and irb. the inverted repeats, ira and irb, are identical and sometimes are only partially assembled, so the assembly could appear to be complete with a size smaller than the reference. if this is the case, the program will move to step  <dig>  if it is not, it will move to step  <dig> 

 <dig>  inverted repeat evaluation and resolution. organelle_pba will map all the reads back to the assembly using blasr to calculate the coverage for each part of the assembly. inverted repeats appear with twice the coverage of the non-repeated region as a result of the multiple mapping sites reported by blasr . additionally, the program will break these regions looking for sequence homology using blast to analyze if they present a certain level of homology reported by blastn. if the script finds it, it will remove the redundancy and rebuild the assembly using sspace-longread.

 <dig>  final assembly analysis and assembly statistics report printing.




RESULTS
mus musculus mitochondrial genome assembly
sets of  <dig> ,  <dig> , and  <dig>  randomly selected pacbio reads from the house mouse, mus musculus , were used to test the mitochondrial genome assembly using different mitochondrial reference genomes; m. musculus, nc_ <dig>  ; mus carolis, nc_ <dig>  ; rattus norvegicus, nc_ <dig>   and marmota himalayana, nc_ <dig>  . results are summarized in the table  <dig>  the different read sets represented 26x, 42x, and 69x sequencing depth, respectively, for the m. musculus mitochondrial genome . organelle_pba produced a complete m. musculus mitochondrial genome assembly for the  <dig>  reads set  with all of the reference sequences except for the m. himalayana mitochondrial genome. the average running time for this process was 117 s. the pacbio read remapping showed that the assembly was fully covered  with no gaps . additionally, a comparison of the assembled mitochondrial genome with the m. musculus mitochondrial reference  showed a perfect alignment with  <dig> snps distributed across the entire assembly .table  <dig> summary of the m. musculus mitochondrial genome assembly

mus musculus
mus caroli
rattus norvegicus
marmota himalayana

athe mitochondria genome assembly was considered complete when the difference in size compared to the reference genome was < <dig> nucleotides


fig.  <dig> 
a- remapping of mus musculus pacbio dna sequencing reads to a mitochondrial genome reference assembly. each of the reads is represented by a darkgray line marking its position. b- coverage for the pacbio read remapping for m. musculus. c- alignment between the m. musculus reference mitochondrial genome  and the m. musculus assembly performed by organelle_pba. snps are represented by small horizontal blue lines. d- remapping of arabidopsis thaliana pacbio sequencing reads to a reference chloroplast genome assembly. each of the reads is represented by a darkgray line marking its position. e- coverage for the pacbio read remapping for a. thaliana. the inverted repeats are indicated by ~2x coverage relative to the lsc and ssc regions. f - alignment between the a. thaliana reference chloroplast genome  and the a. thaliana assembly performed by organelle_pba. snps and indels are represented by small horizontal blue and purple lines respectively. reversed alignments are represented by darkgray lines




to compare the performance of this approach compared with a whole dataset assembly and posterior identification of the organelle genome, we performed a whole dataset assembly using canu and sprai using similar configuration parameters. canu assembled the  <dig>  reads in 3970 s producing  <dig> contigs with a l50 =  <dig>  bp. we identified a  <dig>  bp mitochondrial genome contig by blastn homology search. sprai assembled the same dataset in 3660 s producing  <dig> contigs with a l50 = 5858 bp. none of the sprai contigs were identified as the mitochrondrial genome.

based on these results, we can conclude that >50x sequencing depth and a reference genome sequence from the same taxonomic family is recommended for the assembly of a full mammalian mitochondrial genome.

arabidopsis thaliana chloroplast genome assembly
sets of  <dig>   <dig> ,  <dig> ,  <dig> , and  <dig>  randomly selected pacbio reads from arabidopsis thaliana  were used to test the chloroplast genome assembly using different chloroplast references; a. thaliana, nc_ <dig>  ; brassica napus, nc_ <dig>  ; and vitis vinifera, nc_ <dig>  . results are summarized in table  <dig>  the different read sets represented 23x, 50x, 244x, 470x, and 771x sequencing depth for the a. thaliana chloroplast genome, respectively . the running time for the whole set  was 5234 s. the assembly was fully covered with no gaps , and showed coverage ranging from ~50x to ~600x. the inverted repeats showed twice the average coverage of the lsc and ssc regions . the comparison with the a. thaliana reference  showed  <dig> snps,  <dig> insertions, and  <dig> deletions in the lsc and ssc regions .table  <dig> summary of the a. thaliana chloroplast genome assembly

arabidopsis thaliana
brassica napus
vitis vinifera

athe chloroplast genome assembly was considered complete when the difference in size compared to the reference genome was < <dig> nucleotides




additionally we performed the whole dataset assembly and posterior chloroplast identification by blastn sequence homology to compare with our approach where the read identification is performed before the assembly. canu produced  <dig> contigs in 6040 s with a l <dig> of  <dig>  bp. we identified three chloroplastic contigs with lengths of  <dig> ,  <dig> ,  <dig>  bp respectively. sprai produced  <dig> contigs in 8591 s. the longest sequence represented the complete chloroplast genome with a length of  <dig>  bp including a redundant region of 9133 bp caused by the circularity of the chloroplast genome.

based on these results, we conclude that it is necessary to have at least 200x sequencing depth to obtain a fully assembled chloroplast genome. considering the taxonomic distance of the reference sequence, we can suggest that almost any chloroplast genome from a species in the same subclass should be usable in selecting the chloroplast reads. we did not test the use of chloroplast reference genomes from other subclasses  because there are enough reference genomes from the same subclass publically available. the use of a whole dataset assembly with sprai and posterior identification delivered the complete chloroplast genome sequence, although this approach used 64% more time without counting a final result curation to remove the redundant region.

arabidopsis thaliana mitochondrial genome assembly
sets of  <dig>   <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> , and  <dig>  randomly selected pacbio reads from arabidopsis thaliana  were used to test the mitochondrial genome assembly using the a. thaliana mitochondrial reference sequence . the results of the assemblies are summarized in table  <dig>  no complete mitochondrial genome assembly was obtained using this methodology. the mapping of the full a. thaliana dataset srr <dig>  to the a. thaliana mitochondrial genome nc_ <dig>  selected  <dig> reads  but a close inspection showed an average coverage of 9x with  <dig>  non-covered positions; thus, the selection of mapped reads for this dataset does not represent the full mitochondrial genome. increasing the number of reads to  <dig>  and  <dig>  also increased the effective coverage to 33x and 64x, but there were still  <dig> and  <dig> non-covered positions, respectively, that produced incomplete assemblies.table  <dig> summary of the a. thaliana mitochondrial genome assembly

arabidopsis thaliana

athe mitochondrial genome assembly was considered complete when the size difference compared to the reference was < <dig> nucleotides




novel organelle genome assemblies
to test the ability of organelle_pba to assemble new plant organelle genomes, we performed chloroplast genome assemblies for two species picea glauca  and sinningia speciosa . for p. glauca, a read dataset with  <dig>  reads was downloaded from the sra repository . for sinninigia speciosa, a set of  <dig>  reads was selected from the s. speciosa whole genome sequencing project . there is no chloroplast genome assembly available for p. glauca, but there is a chloroplast genome reference from a species in the same genus, p. abies . the p. glauca chloroplast assembly produced a  <dig>  bp contig with  <dig> nucleotide insertions,  <dig> nucleotide deletions, and  <dig> snps compared with the p. abies chloroplast genome. for the s. speciosa chloroplast genome assembly we used the boea hygrometrica chloroplast genome . the s. speciosa assembly produced a  <dig>  bp contig with  <dig> nucleotide insertions,  <dig> nucleotide deletions, and  <dig> snps compared with the b. hygrometrica chloroplast genome sequence.

discussion
organelle_pba is a script designed to assemble organelle genomes from long-read whole genome sequencing data by selecting the organelle reads and then mapping them to a closely related reference sequence. animal mitochondria and plant chloroplast genomes are generally highly conserved across different lineages, so the use of a reference sequence from the same family is usually enough to select reads and then perform a focused assembly, thereby reducing the use of computational resources. our results indicate that coverage between  <dig> and 200x is usually enough to obtain a full organelle genome assembly. our analysis shows that an average whole genome sequencing project contains ~ <dig> % of animal mitochondrial dna and ~20% of plant chloroplast dna, which, in most cases, is enough to reach >50x organelle genome coverage. mapping of these reads shows that they are equally distributed across the organelle genome such that the mapping strategy employed effectively captures the full representation of the organelle genome. nevertheless, the assembly of plant mitochondrial genomes can be difficult because they are more variable in size and genomic composition, and they are usually poorly represented in whole genome sequencing datasets. the assembly of the a. thaliana mitochondrial genome was incomplete, likely due to incomplete mapping to the reference genome. additionally, sprai selects only the best 20x coverage of the pacbio reads to perform the assembly, so unequal mapping could introduce bias into the sprai read selection. we also found, through coverage analysis, two peaks of high coverage  that probably represent highly repetitive regions, although a more detailed analysis needs to be performed to verify this hypothesis.

finally, even if assembly of an organelle genome is not the final goal of a whole genome sequencing project, there are some advantages to assembling the organelle genome prior to launching the nuclear genome assembly: 1) it can facilitate assembly of the nuclear genome by reducing the amount of data used in the whole genome assembly that in some cases can reach 25% or more ; 2) it can be used as a method to evaluate the relative quality of the pacbio sequencing data by assembling a small batch of reads.

CONCLUSIONS
organelle_pba is a program designed to assemble organelle genomes from pacbio whole genome sequencing data. pre-selection of the organelle dna sequencing reads using a mapping approach facilitates the organelle genome assembly and optimizes the computational requirements. it also removes the assembly redundancy caused by a circular assembly and resolves the chloroplast genome inverted repeats. organelle_pba performed successful assemblies of the mitochondrial and chloroplast genomes in model species such as m. musculus and a. thaliana respectively. the program was also used for the successful assembly of two novel chloroplast genomes from the species picea glauca  and sinningia speciosa . the tool is freely available at https://github.com/aubombarely/organelle_pba.

availability and requirements

project name: organelle_pba

project home page: https://github.com/aubombarely/organelle_pba


archived version: not applicable

operating system: linux 

programming language: perl

other requirements: perl , bioperl , seqtk , blastn , blasr , samtools , bedtools , sprai , wgs-assembler , sspace-long .

license: gnu general public license




additional file

additional file 1: figure s <dig>  chart flow for the organelle_pba software. reads are mapped to an organelle reference using blasr . the blasr output is parsed and the sequence ids are used to retrieve the reads from the input file . organelle identified reads are assembled using sprai . the program checks if the assembly is complete comparing its length with the reference . if it is not complete, it performs a scaffolding using sspace-long and the whole pacbio dataset . it is complete it moves to the new checking point where it check for circularity . if it detects circularity by a self-blastn, it trims the sequence corresponding to the circular overlap . finally it check for the repeat assembly  and if it finds it, it breaks in four parts, identify the complete inverted repeat , duplicate it  and re-assemble it will the long and short single copy  . 




abbreviations
dbgde bruijn graph

indelinsertion-deletion

irinverted repeat

lsclong single copy

olcoverlap–layout–consensus

smrtsingle molecule real time

snpsingle nucleotide polymorphism

sscshort single copy

