BACKGROUND
gene regulatory network , consisting of multiple regulators and their target molecules, plays critical roles in numerous biological processes by modulating the expression levels of rnas and proteins  <cit> . while remarkable successes in dissecting single genes that are responsible for certain biological functions, behavior or diseases have been achieved over the past few decades, it has been increasingly recognized that elucidating gene functions and interactions in the context of networks becomes more and more important to gain novel insight into mechanisms, effects and interventions of molecular, cellular or organ-level biological processes . clearly, one of the prerequisites for investigators to harvest the benefits of such systematic network approaches is whether the structures of gene regulatory networks can be accurately revealed from experimental data.

modern high-throughput experimental technologies such as next generation sequencing  <cit>  can generate time-course data at a much more affordable cost  <cit> , thus provide unprecedented opportunities for researchers to systematically investigate the temporal patterns of gene expressions and infer gene regulatory relationships. however, two well-known major obstacles have significantly hampered our ability to interrogate such data for novel scientific findings. first, limited by resources or technical and ethic issues, the sampling frequency of time-course gene expression profiling data is low , which renders the sample size far less than the number of unknown parameters in the context of grn structure identification. targeting at such scenarios, it is of significant importance to borrow information from additional sources . second, considering the fact that for complex eukaryotes like human, the number of protein-coding genes is approximately  <dig>   <cit>  so the problem dimension is ultra-high . the development of novel and more efficient algorithms that can scale to such high-dimensional networks is still necessary.

a number of modeling and computational approaches have been developed for gene network structure identification  <cit> , including information theory method , clustering method , boolean network  <cit> , bayesian network , state-space model  <cit> , regression model  <cit> , and differential equation model . the well-known methods for static expression data include the pearson correlation coefficient  and the mutual information  methods  <cit> , the aracne algorithm  <cit>  based on the data processing inequality concept  <cit> , the context likelihood of relatedness  approach  <cit>  that extends the relevance networks method  <cit> , the genie <dig> algorithm  <cit>  that uses tree-based gene ranking and ensemble, and the tigress algorithm  <cit>  that combines the least angle regression with stability selection. however, only a few algorithms were specifically developed for time-course data. zoppoli et al.  <cit>  proposed to calculate the time-delayed dependencies between gene expressions using mutual information, and developed and tested the timedelay-aracne algoithm on networks with less than  <dig> genes. yang et al.  <cit>  used the s-system  to model time-course gene expression data and validated their parameter estimation method using several small systems with six or less variables. our group introduced the concept of background network to confine the parameter space using prior biological knowledge and built the sitpr pipeline based on a dynamic bayesian network  model regularized by l
 <dig> norm  <cit> . more recently, huynh-thu et al.  <cit>  developed the jump <dig> method by combining the on/off stochastic differential equation model with decision trees, where the marginal likelihood of each node was used as the decision function.

the dream challenge  <cit>  makes it feasible to generate authoritative benchmark data for algorithm performance evaluation. to the best knowledge of our authors, none of the algorithms above have been evaluated on dream networks of a size greater than 100; actually, their performances all become unsatisfactory at a network size of  <dig>  as verified in several previous studies  <cit> . therefore, a breakthrough in algorithm development is necessarily needed to obtain accurate and reliable results for large-scale grn inference ). the work of liu et al.  <cit>  is one of the few studies that systematically borrow information from previous biological knowledge to deal with the low sampling frequency and the high dimensionality issues in grn inference; however, even after the incorporation of prior knowledge, the number of unknown parameters is still on the order of  <dig> so the high dimensionality issue remains. since grns are typical complex networks with structural sparsity  <cit> , it is common to impose sparsity on the inference problem formulation in previous studies  <cit> ; however, it turned out that sparsity alone cannot satisfyingly address the high dimensionality problem  <cit> . this observation leads us to the hypothesis that considering additional structural or topological properties of large-scale complex networks may result in novel scalable algorithms for grn inference that are not subject to the curse of dimensionality.

in this study, we adopt the background network approach developed in our previous study  <cit>  for parameter space confinement, and we modify other selected state-of-the-art algorithms to take the advantage of the same background network for fairness of algorithm performance comparison. more importantly, a breakthrough in algorithm performance is achieved by considering both structural sparsity and the existence of hub genes, which is a prominent topological feature of grns due to preferential gene attachment  <cit> . we describe the mathematical formulation and computational steps of the novel algorithm in “methods” section. we evaluate and compare the performance of our algorithm with other state-of-the-art approaches using dream <dig> benchmark data that are generated from networks of a size up to 2× <dig>  and we apply the proposed method to real temporal gene expression data from an influenza h1n <dig> virus infection study to illustrate its usage in practice and further validate the proposed algorithm using a large number of known interactions. the related computational settings and results are presented in “results and discussion” section. finally, we discuss the advantages and limitations of this work in “conclusions” section.

methods
background regulatory network
for ultra-high dimensional problems considered in this study, it is important to constrain the parameter space based on prior biological information to improve computing efficiency and avoid over-fitting, especially for datasets with limited sample sizes. for this purpose, the concept of background regulatory network was introduced in our previous work  <cit> , and we recently also developed a curated database called regnetwork for public use  <cit> . here we present the key features of the background network and describe how it is employed in this study for grn inference.

first, the background regulatory network is comprehensive so it contains not only experimentally-observed regulatory interactions but also physically, chemically or biologically feasible interactions. for this purpose, information from over  <dig> selected databases or knowledgebases  and target genes are predicted based on sequence motifs obtained from ensembl  <cit> . in this way, the background network also allows the discovery of novel regulatory relationships that have not been officially reported or documented. second, the background network is not cell type- or condition-specific but it allows the detection of cell type- or condition-specific regulatory relationships. the reason is that under different conditions , only certain regulatory interactions in certain types of cells will be activated in the background network, and an appropriately designed algorithm should be able to detect a reasonable number of activated interactions with the presence of the inactive ones. third, the background network is different from random networks  <cit>  in terms of certain properties like characteristic path length and node degree distribution  <cit> ; also, its node degrees are found to satisfy the power-law distributions so the background network is scale-free.

here we use the background regulatory network concept in both the simulation studies and the real data example. that is, our primary task is to identify the activated interactions in the confined parameter space specified by the background network. we recognize that some existing algorithms under comparison start with the full network structure; therefore, for fairness, we make necessary efforts to modify their computer codes to take the background network as the parameter space. also, it should be mentioned that the same weight is assigned to all the edges in the background network in this study for simplicity. that means, our algorithm will automatically determine the sparse structure and the hub gene structures without informing itself the potential location of such structures beforehand. the algorithm performance can be further improved if edge weights can be assigned based on evidence strength in, e.g., literature; however, even with a simple equal-weight scheme, our algorithm can already achieve a satisfying performance . finally, for simulation studies, the background network is introduced by adding additional random edges to the dream <dig> network structures; for real data example, the background network for human fetched from the regnetwork database is used, which contains  <dig>  nodes and  <dig>  edges.

model formulation of topological features of grn
while sparsity of grns has been extensively explored in previous studies, the hub gene structure has rarely been addressed in existing formulations of grn inference. this study suggests that in addition to sparsity, the hub gene structure is also of significant importance to the development of scalable algorithms that are not subject to the curse of dimensionality.

throughout this paper, the following notations are used: 

n denotes the total number of nodes in a network;


xt∈ℝn denotes the expression level of n genes  at time t;

⊙ denotes the hadamard product . for example, ⊙=.


∥·∥f is the frobenius norm of a matrix m: ∥m∥f=∑i,jmij2;

∥.∥ is the spectral norm ;


c
·j : jth column of c;


c
i· : ith row of c.




the dynamic bayesian network  model  <cit>  is considered in this study for grn inference. it has been shown by previous studies  <cit>  that under the normality and markov assumptions, the dbn model can be reduced to a vector autoregression  model as follows: 
  <dig> xt+1=pxt+wt,t= <dig> ⋯,t− <dig>  


where t is the total number of time points, and p∈ℝn×n is the coefficient matrix, characterizing the change from time t to the next time point t+ <dig>  p
ij≠ <dig> indicates the existence of regulatory relationship between regulator j and target i. also, for simplicity and robustness, uneven time intervals are treated as of equal length. we consider an equivalent form of eq. : 
  <dig> yt+ <dig> t:=xt+1−xt=cxt+wt, 


where c=p−i. our goal is to estimate the coefficient matrix c  given the time-course observations {xt}t=1t. the objective function can be formulated as follows 
  <dig> minc12∥y−cx∥f2=∑t=1t−1∥−cxt∥ <dig>  


where y:=∈ℝn× and x:=∈ℝn×.

since the total number of distinct time points are usually small, the solution obtained by directly solving  suffers from the overfitting issue. to overcome this problem, the commonly used strategy is to confine the model space using regularizations or constraints; for example, the ℓ
 <dig> norm regularization for imposing model sparsity. however, in addition to sparsity, there exist other prominent topological characteristics for complex networks like grns  <cit> . to illustrate this, we use the yeast gene network as an example. the top left graph in fig.  <dig> shows a typical substructure of the yeast gene network; the bottom left figure is the corresponding coefficient matrix c, where the blue dots indicate nonzeros  and the white areas indicate zeros  in c. sparsity is thus a clear feature to tell from fig.  <dig>  and we also consider the following network characteristics in our model formulation.
fig.  <dig> illustration of the hub gene structure separation and the corresponding coefficient matrices





hub gene structure separation: as suggested in fig.  <dig>  there exist a small number of gene nodes with a high degree, called the “hub” genes. if we define the hub gene structure as the set of outgoing edges from a hub gene node to its immediate neighbors, we can separate this structure from the original grn such that matrix c can be decomposed into 
 c=a+b,  where matrix a corresponds to the hub gene structure  and matrix b corresponds to the remaining edges .

it can be told from the lower middle plot of fig.  <dig> that matrix a for hub gene structure has a column group sparse structure , while the matrix b for the remaining edges shows a more uniform sparsity pattern. therefore, we consider the ℓ
 <dig>  norm convex regularization on a to enforce the group sparsity structure  <cit> , 
 ∥a∥ <dig> :=∑j∑i|aij| <dig>   and consider the commonly used ℓ
 <dig> regularization  <cit>  on b to enforce the uniform sparsity, 
 ∥b∥1:=∑i,j|bij|. 



small number of parent nodes: based on the real grn structures previously reported , we find that while one gene may directly modulate the expressions of many other genes, a single gene is usually co-regulated by only a few regulators. that is, in a grn represented by a directed acyclic graph, the number of parent nodes of a node is often small. this observation suggests the non-zero elements in any row of matrix c should be small . we thus can impose the following constraint on the rows of matrix c
 ∥ci·∥0≤ξi,i= <dig> ⋯,n,  where ξ
i is a predefined upper bound of the number of incoming edges to gene i .


background network: the mask of the background network can be denoted as Ω∈{ <dig> }n×n, where Ω
ij= <dig> corresponds to the non-existence of any regulatory interaction between genes i and j and Ω
ij= <dig> corresponds to the existence of a possible interaction between genes i and j that needs to be determined from temporal expression data. therefore, the background network constraints imposed on matrix c can be denoted as follows: 
 pΩ:=c⊙Ω= <dig>  


combining all the constraints above, the overall grn structure identification formulation is given below: 
  <dig> mina,b,c12∥x−y∥f2+α∥a∥ <dig> +β∥b∥1s.t.∥ci·∥0≤ξipΩ= <dig> pΩ=0a+b=c. 


where α and β are two penalty coefficients that balance the weights on group sparsity and uniform sparsity.

computing algorithm
existing solvers cannot deal with the proposed formulation above, so we introduce an efficient optimization algorithm, called decomposable multi-structure identification  , that can handle a network size greater than 20k on an average computer  <cit> .

we first define the augmented lagrangian function: 
  <dig> l=12∥x−y∥f2+α∥a∥ <dig> +β∥b∥1+ρ2∥a+b−c∥f2+〈u,a+b−c〉+𝕀∥ci·∥0≤ξi+𝕀pΩ=0+𝕀pΩ= <dig>  


where ρ is a positive real number, 𝕀condition denotes the function that gives  <dig> if the argument variable satisfies the condition and gives positive infinity otherwise, and u is a dual matrix of the same size as c introduced to solve the optimization problem.





more specifically, we can break the optimization problem into minimization w.r.t. a and b, minimization w.r.t. c, and minization w.r.t. u as follows.


minimization w.r.t. 
a
 and 
b
. since some terms in eq.  such as 𝕀∥ci·∥0≤ξi contain no a or b, the optimization problem can be simplified: 
  <dig> mina,b12∥x−y∥f2+α∥a∥ <dig> +β∥b∥1+ρ2∥a+b−c∥f2+〈u,a+b−c〉+𝕀pΩ=0+𝕀pΩ= <dig>  


which can be solved using the coordinate block descent method  <cit> . by taking partial derivatives of the objective function, we can derive 
 g=x⊤+ρ+u; 


and by applying the proximal gradient descent method  <cit> , the following update rules for a and b at each iteration can be obtained 
 a·i=proxγα∥·∥·i)=max <dig> −γα∥·i∥·i, 


and 
 b=proxγβ∥·∥1=sign⊙max, 


where sign= <dig> if a> <dig>  sign= <dig> if a= <dig>  and otherwise − <dig>  usually we choose γ=1∥x∥2+ρ as the safe step length for each update to guarantee the monotonic decreasing of the objective function . more details about the accelerated proximal gradient descent method are given in algorithm  <dig> 


minimization w.r.t. 
c
. similar to the objective function , some terms in eq.  like 𝕀pΩ= <dig> do not contain matrix c. hence, eq.  can be simplified as follows: 
  <dig> mincρ2∥a+b−c∥f2+〈u,a+b−c〉+𝕀∥ci·∥0≤ξi,∝12∥a+b−c+1ρu∥f2+𝕀∥ci·∥0≤ξi. 


we thus update c by the following rule 
  <dig> c=pξ, 


where pξ is a projection of ∥c
i·∥0≤ξ
i by retaining the largest ξ
i elements in the i-th row of c.


minimization w.r.t. 
u
. similar to the derivation of the objective function  above, we have 
  <dig> minu〈u,a+b−c〉. 


we update u using u=u+ρ for each iteration.

algorithmic complexity
let |Ω¯| denote the total number of zeros in the background network matrix Ω∈ℝn×n used in algorithms  <dig> and  <dig>  algorithm  <dig> is assumed to run j iterations to converge, and for each iteration of algorithm  <dig>  we run algorithm  <dig> for k iterations. therefore, the complexity of algorithm  <dig> is o, where x,y∈ℝn×, t≪n and |Ω¯|≪n <dig>  therefore, the complexity of dmi is o. note that matrix c is sparse, the complexity of our method mainly depends on the number of non-zero edges in the network, and thus indirectly depends on the number of nodes. on a regular pc , the proposed algorithm takes ∼ <dig> s, 3∼ <dig> s, 2∼ <dig> m
i
n, and ∼ <dig> h
r to finish  <dig> iterations for a network size  <dig>   <dig>   <dig>  and  <dig> , respectively. in most of the cases, we found that the dmi algorithm already converged after  <dig> iterations. see additional file 1: text s <dig> for the system requirements to run the proposed algorithm; also, the guideline for tuning dmi computing parameters is provided in additional file 2: text s <dig> 





RESULTS
in this section, we use both synthetic data and real data for algorithm performance evaluation, comparison and validation.

synthetic data: evaluation and comparison
network specification and simulated data
to evaluate and compare the proposed method with other state-of-the-art algorithms, we employ genenetweaver  <cit> , the official dream challenge tool for time-course expression data generation. more specifically, genenetweaver uses the grns from yeast  or e. coli  as templates to generate network structures with typical complex network properties, of a network size up to ∼4400; and then ordinary differential equation  models are built upon the previously generated network structures to produce time-course gene expression data at pre-specified time points.

in our simulation studies, we use genenetweaver to generate the network structures for a given network size n= <dig> , <dig>  or  <dig> , and we treat such networks as the ground truth. let m denote the number of edges in a ground truth network, we then randomly add m additional edges to the ground truth network to generate the background network with  <dig> m edges. consequently, the goal of grn inference algorithms in the simulation studies is to identify as many ground truth edges as possible from all the background network edges, with a controlled false positive rate. it should be stressed that networks of a size  <dig>  cannot be generated from the yeast or e. coli templates, so we supply the large-scale grns from the regnetwork database  <cit>  to genenetweaver as templates . for each simulated dataset, one data point is generated at each of  <dig> distinct time points, respectively, for a pre-specified noise level to match the observation scheme in the real data example in section real data: validation and findings.

fairness of comparison and evaluation metrics
since the state-of-the-art algorithms under comparison such as aracne  <cit>  start with a full matrix c, for fairness of comparison, the background regulatory network knowledge is used to confine the outputs of all other methods . all metrics  have been calculated based on the confined outputs. there are several reasons why we cannot completely re-implement the competing algorithms so they can also start with the prior network instead of the full network: 1) it demands prohibitive efforts to do so – essentially new algorithms need to be developed for the ultra-high dimensional problem, and it is out of the scope of this study; 2) the current design of the competing algorithms also partially justifies the necessity of appropriately using the prior network, which is one of the advantages of the proposed method.

the computing parameters used by existing algorithms are tuned as suggested in their original manuscripts . for our dmi algorithm, we set α= <dig> , β= <dig>  and ρ= <dig> for all the simulated datasets, where α and β are determined using cross-validation.

five commonly-used criteria are considered to measure algorithm performance, including sensitivity , specificity , accuracy , matthews correlation coefficient , and the area under roc curve : 
 sn=tptp+fn,sp=tntn+fp,acc=tp+tntp+fp+tn+fn,mcc=tp×tn−fp×fn,  where tp and tn denote the true positive and true negative, and fp and fn denote the false positive and false negative, respectively.

performance evaluation
the first set of experiments are conducted to compare our dmi algorithm with nine representative algorithms, including pcc, aracne  <cit> , clr  <cit> , minet   <cit> , genie <dig>  <cit> , timedelay-aracne  <cit> , tigress  <cit> , sitpr  <cit> , and jump <dig>  <cit> . specifically, sitpr  <cit>  is a multi-step pipeline with the ℓ
 <dig> norm penalty incorporated; to avoid manual intervention needed by certain sitpr steps, we simply compare the constrained lasso step in sitpr with dmi. in the simulated data, the noise level is fixed at 10%, and the networks size ranges from  <dig> to  <dig> because other competing algorithms cannot handle a network size of  <dig> .

for the second set of experiments, the noise level is increased from  <dig> to 30% to evaluate the robustness of our dmi algorithm against noise. the network size in the corresponding simulated data is  <dig>   <dig>   <dig> or  <dig> .

the two sets of experiment results are summarized in tables  <dig> and  <dig>  respectively. from table  <dig>  it can be clearly told that for network size ranging from  <dig> to  <dig>  our method significantly outperform other state-of-the-art methods; e.g., the aucs of our method remain  <dig>  or higher for all cases, but the aucs of all other methods are  <dig>  or less and they drop to  <dig> ∼ <dig>  for n= <dig> . from table  <dig>  one can tell that our dmi algorithm is robust against noise because its performance measured by auc is still greater than  <dig>  as the noise level increases to 30% for a network size of  <dig> . additional experiment results can be found in additional file 4: table s <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 
 <dig>  ± <dig> 




real data: validation and findings
data description and previous work
the real data example for illustrating the use of dmi in practice is from the recent study of loveday et al.  <cit> , where human a <dig> cells were infected with influenza h1n <dig> virus . illumina humanht- <dig> v <dig> beadchips and febit mirbase  <dig> geniom mirna biochips were employed to measure the mrna and mirna samples, respectively. six replicates of the expression levels were collected at each of six time points , but one sample at hour  <dig> was excluded due to degradation. the within-sample normalized dataset is available from ncbi geo . we further conducted between-sample normalization on the data across the six time points.

the original analyses in  <cit>  did not use all the time points; instead, a small number of regulatory relationships between functional mirnas and gene targets were inferred based on data on hr  <dig> and hr  <dig> only. the genome-wide regulatory landscape has not been revealed based on the entire dataset although liu et al.  <cit>  made an attempt to investigate the subnetwork structures of a size from  <dig> to  <dig>  in this study,  <dig>  genes and  <dig> non-coding rnas were identified to be differentially expressed  using the fpca method  <cit>  for a false discovery rate controlled at  <dig> . using the human background network in the regnetwork database, the dmi algorithm was applied  to identify  <dig> regulatory interactions between the differentially expressed genes or mirnas, as shown in fig. 2
b.
fig.  <dig> application of the dmi algorithm to the expression data from human a <dig> cells in response to influenza h1n <dig> virus infection. a example of differentially expressed genes, where the color bar values are the normalized gene expression levels; b overall grn structure ; c ‘atf2’ hub gene structure




network analysis
we conducted comprehensive network analyses on the topological structure and found that the a <dig> grn in response to influenza h1n <dig> infection is a typical complex network, evidenced by, e.g., its power law degree distribution and a large clustering coefficient . a close examination of the inferred grn by the dmi algorithm suggests consistency between the findings in this study and those in literature. for instance, ‘cebpb’  is a transcription factor  that plays an important role in immune and inflammatory responses  <cit> , and the subnetwork structure centered at ‘cebpb’ has been previously reported in  <cit> . our study also revealed a similar subnetwork structure around ‘cebpb’ ; however, some experimentally-verified interactions  were successfully identified in this study, but were missing in the work of liu et al.  <cit> . more interestingly, we found a number of hub gene structures, e.g., centered at the activating transcription factor genes  or the e2f transcription factor genes . more specifically, ‘atf2’ encodes a dna binding protein of the leucine zipper family that can perform distinct functions via different mechanisms. for example, it can form heterodimers with c-jun, both of which are activating protein- <dig>  family transcription factors. ap- <dig> is known to activate antiviral cytokines in cells as a defensive response against infection caused by influenza virus and other viruses  <cit> . therefore, our results reflect the known biological events. also, our results showed that ‘atf2’ interacts with more than  <dig> other genes, including ‘cebpb’ . although it has been previously reported that influenza a viral rna molecules can indirectly activate transcription factors like atf <dig>  <cit> , the importance of atf <dig> in the context of influenza infection has not been fully appreciated by previous experimental studies, considering the large number of target genes associated with atf <dig> in the hub gene structure. the proposed dmi algorithm thus provides us not only an opportunity to investigate the genome-wide regulatory landscapes but also a way to identify interesting subnetworks like hub gene structures. we defer the discussions on hub structures to the next section.

validation and findings
although the encode database  <cit>  is not used when constructing the background network,  <dig> tfs,  <dig> mirnas and  <dig>  target genes in the background network can also be found in encode. therefore, we used the tf-gene interactions verified by the encode chip-seq data as the ground truth for validating our analysis results, as suggested in  <cit> . it is impossible to list all the hub structures here, so we selected the  <dig> biggest hubs from the grn structure identified from real data by dmi if the centers of these hubs  are also included in encode. the first interesting finding we noticed is that all the five hub nodes are transcription factors, i.e., ‘atf2’, ‘cebpb’, ‘cux1’, ‘e2f6’ and ‘ebf1’. since dmi is designed to identify genuine regulator-target interactions, such an observation is expected. second,  <dig>   <dig>   <dig>   <dig>  and  <dig> tf-gene interactions were found in encode for the five tfs above, respectively. that is, a large set of known interactions  were considered here for result validation. third, according to table  <dig>  the top three algorithms are dmi, genie <dig> and sitpr  so we compared their performances here. as shown in table  <dig>  dmi’s performance is superior or comparable to that of genie <dig> and sitpr for all the five sets of known interactions. for instance, out of  <dig> encode interactions associated with ‘atf2’, dmi identified  <dig> interactions and thus achieved a precision ≜#ofpredictedinteractions#ofknowninteractions of  <dig> , which is the same as that of genie3; however, for ‘e2f6’, dmi identified  <dig> encode interactions while genie <dig> only identified  <dig>  we thus believe the proposed algorithm can more accurately identify the activated interactions than other competing algorithms.
7
4
0
.
7
6
2
9
4
9
0
.
9
4
2
3
2
4
0
.
6
0
0
0
7
9
0
.
9
2
9
4
4
2
0
.
8
9
3
6
7
4
0
.
7
6
2
9
2
4
0
.
6
0
0
0



motivated by the finding above, we further examined the top  <dig> hub structures and found that transcription factors are the center nodes of all such hubs; i.e., ‘atf2’, ‘e2f6’, ‘e2f7’, ‘atf4’, ‘cux1’, ‘cebpb’, ‘ebf1’, ‘xbp1’, ‘nfil3’, and ‘foxo4’. therefore, besides the roles of ‘atf2’ discussed in the previous section, it is also interesting to understand the roles of the rest hub tfs in the context of virus infection. for example, ‘cebpb’ also has a leucine zipper structure to interact with dna. it is capable of forming homodimers or heterodimers with atf <dig>  and previous studies showed that ‘cebpb’ is essential in immune responses due to its involvement in inducing macrophagic functions during inflammation  <cit> . the work by granberg et al.  <cit>  demonstrated that ‘cebpb’ has antiviral properties in the presence of adenovirus infection. however, further investigations are required to verify whether ‘cebpb’ retains these properties facing h1n <dig> infection. ‘cux1’ is a homeodomain family dna-binding protein, and it has been shown to regulate cell cycle, and previously identified as a tumor suppressor  <cit> . one study reported that ‘cux1’ is capable of repressing human cytomegalovirus infection by regulating the viral major immediate early  gene expression  <cit> . ‘e2f6’ is a member of the well-known e2f transcription factor family that regulates cell cycle. overexpression of ‘e2f6’ has been shown to stall cell cycle in s-phase by interacting with e2f target genes and reducing their expressions. the study by zhang et al.  <cit>  shows that ‘e2f6’ has abnormal expression in epstein-barr virus -associated nasopharyngeal carcinoma. early b cell factor  <dig>  is a transcription factor that is critical for specifying b cell identity and lineage maintenance  <cit> . and in turn, b cells produce antibodies that can help fight-off viral infection. although there is not much known link between ’ebf1’ and influenza viral infection, one study claimed that ‘ebf1’ has the function to regulate epstein-barr virus latent membrane protein  <dig>  expression so that tumorigenesis can be prevented  <cit> . the roles of ‘xbp1’, ‘nfil3’, and ‘foxo4’ have also been reported before , but their contributions to immune responses against influenza virus infection need to be elucidated by further experiments. in short, one can hypothesize that these hub tfs may show the same antiviral activities facing h1n <dig> as they do for other viruses, and the grn identified by our dmi algorithm could be a useful guide to biomedical researchers when they are choosing which gene functions in a biological process to validate by bench work.

we also found that a number of big hub structures centered at non-coding rnas such as ‘hsa-mir-30a’, ‘hsa-mir-30c-5p’, ‘hsa-mir-30d-tp’, ‘hsa-mir-543’, and ‘hsa-mir-26a’. even though studies on micrornas are rapidly expanding, functions of these dynamic molecules are hard to enumerate. therefore, discussing the relationship between these micrornas and influenza is beyond the scope of this article.

CONCLUSIONS
we proposed a novel scalable algorithm called dmi for large-scale grn inference from temporal gene expression data in this study. extensive simulation studies and real data application suggest the superiority of the dmi algorithm over other state-of-the-art approaches, and the success mainly relies on the incorporation of multiple topological characteristics of grns like sparsity and hub gene structures into our model formulation. using the gene expression data generated from iav infected human respiratory epithelial cells, our algorithm found that the top ten hub structure are all tfs. this finding is biologically reasonable, considering tfs’ central roles in regulating gene expression. some of these tfs have known association with virus infection but not with iav. therefore, the grn produced by our algorithm could reveal previously unidentified biological links, and guide researchers to choose target genes to investigate.

we also recognize several limitations of the current study: 1) dmi’s performance can be further improved if the background network edges can be appropriately weighted; 2) prediction of previously unseen interactions heavily depends on the background network preparation so further efforts need to be invested to the development of public knowledgebases like regnetwork; 3) this work mainly focuses on solving the ultra-high dimensional inference problems, and data heterogeneity and integration issues have not been tackled; 4) our real data analysis is based on only one data set, and more data is needed to establish more solid grn. we believe that it is necessary to address the aforementioned limitations in separate articles, and this study provides a solid basis for such future investigations.

additional files

additional file  <dig> 
text s <dig>  system requirements for running dmi. 





additional file  <dig> 
text s <dig>  parameter tuning guideline for dmi. 





additional file  <dig> 
table s <dig>  computational settings for the competing methods under comparison. 





additional file  <dig> 
table s <dig>  additional experiment results of algorithm performance evaluation of dmi on a real background network with  <dig> nodes. we retrieved the ucsc background network for human from the regnetwork database , and then selected the highly confident interactions as the activated edges . the number of such activated edges is about 1/ <dig> of the total number of edges. in this way, we avoid introducing or removing any random edge into the background network. 





additional file  <dig> 
figure s <dig>  in-degree distribution of the a <dig> grn. the power-law model fitting result is labelled in red. 





additional file  <dig> 
table s <dig>  basic network statistics of the a <dig> grn. 





additional file  <dig> 
figure s <dig>  subnetwork structure centered at ‘cebpb’. the subnetwork structure is identified using the dmi algorithm based on the time-course expression data from human a <dig> cells in response to iav infection. blue arrows stand for negative regulatory relationships, and yellow arrows stand for positive regulatory relationships. 




abbreviations
clrcontext likelihood of relatedness

dmidecomposable multi-structure identification

grngene regulatory network

iavinfluenza a virus

mimutual information

odeordinary differential equation

pccpearson correlation coefficient

sitprsystematic identification of transcriptional and post-transcriptional regulation

tftranscription factor

