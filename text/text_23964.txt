BACKGROUND
genetic variation is associated with the etiology of human disease and drug response . completely cataloguing the variants in individual genomes, which has been pursued largely through whole genome or whole exome sequencing effort, is essential in disease diagnosis and pharmacogenomics studies  <cit> . whole exome sequencing is widely used in clinical settings, owing to the lower cost compared to whole genome sequencing and the remarkable success in identifying causative mutations underlying mendelian diseases .

variants  in sequencing data are identified mainly through mapping-based approaches , in which raw sequencing reads are first mapped to a reference sequence and the sites differing between reads and the reference are then identified by variant calling  <cit> . several variant calling algorithms have been developed, such as samtools  <cit> , the genome analysis toolkit  unifiedgenotyper and haplotypecaller  <cit> , freebayes  <cit> , platypus  <cit> , atlas <dig> suite  <cit> , and the snp and indel callers in the short oligonucleotide analysis package   <cit> . of these, freebayes, gatk haplotypecaller and platypus are haplotype-based callers which implement de bruijn graph-based local assembly  <cit>  or construct haplotypes directly from mapped reads  <cit> .

as outlined in the gatk best practices  <cit> , some variant discovery pipelines perform post-processing of alignments prior to variant calling, with the expectation that this practice would improve variant calling accuracy  <cit> . the post-processing typically includes duplicate marking, local realignment around known indels, and base quality score recalibration   <cit> .

duplicates are pairs of reads that are mapped to the same genomic location and the same strand. they are prevalent in both whole genome and exome sequencing data  <cit>  and are believed to be artifacts from the polymerase chain reaction  amplification of the same dna molecule during library preparation  <cit> . the inclusion of duplicates more likely gives rise to erroneous calls because the presence of duplicates would alter the ratio of reads supporting one allele versus the other at heterozygous sites; duplicate reads might also carry errors introduced by the pcr amplification, thus further complicating the variant calling  <cit> . duplicates can be identified using picard command-line tool markduplicates , such that only one of the duplicates will be used in the subsequent variant calling. marking duplication is more effective for indel calling than for snp calling  <cit> , and in cases when the coverage is low  <cit> .

reads spanning indels have a high chance of being aligned incorrectly to the reference  <cit> . a previous study revealed that bwa mapping generated misalignment for over 15 % of the reads spanning known homozygous indels  <cit> . without correction, those misaligned bases in reads can be easily called as spurious variants.

finally, the confidence level in variant calling depends on the accuracy of both base calling and base quality score  <cit> . the latter measures the probability that a base is called incorrectly  <cit> , with a phred-scale quality score of q ideally corresponding to an error rate of 10- q/ <dig>  <cit> . however, the raw quality score does not truly reflect the base-calling error rate; instead, it varies with multiple factors including sequencing platform, the number of machine cycles at which a base is sequenced, and the sequence composition  <cit> . for example, the bases at the 3′ end of a read are typically more error prone than those at the 5′ end  <cit> . the gatk baserecalibrator and printreads commands can be used to recalibrate the quality score, thereby to improve variant calling accuracy  <cit> .

the effect of local realignment and bqsr has been assessed using both whole genome and whole exome sequencing data, mostly for bwa together with gatk unifiedgenotyper, gatk haplotypecaller and samtools  <cit> . however, the results are inconsistent. the earliest study revealed that local realignment corrected misalignments at approximately  <dig>  million sites in the whole genome data and over  <dig>  sites in the whole exome data from na <dig>  <cit> . they found that duplicate marking, local realignment and bqsr together removed about  <dig> – <dig>  % of the raw snp calls, of which the vast majority were false positives. using exome data from breast cancer patients, a similar effect was detected for local realignment but not for bqsr in gatk unifiedgenotyper and samtools calling  <cit> . furthermore, using high  coverage whole genome sequencing data in na <dig>  li  <cit>  found no effect from both local realignment and bqsr for the above three callers. as local realignment and bqsr were evaluated only for a few variant discovery methods, their effectiveness for other mappers and callers remains unexplored. local realignment is a computationally intensive process. in principle, haplotype-based callers apply local de novo assembly  or build haplotype directly from mapped reads , raising the question whether local realignment is indeed needed for these callers.

finally, in bqsr, the algorithm needs to identify a list of supposedly non-polymorphic sites that do not overlap with any known polymorphic sites  and that do not match the reference sequence either. it then builds a linear model taking into account the raw base quality score, base position in the reads , as well as the dinucleotide composition of those non-polymorphic sites, by which the recalibrated quality score is computed  <cit> . while it is relatively straightforward to identify non-polymorphic sites in ordinary genomic regions where sequence diverges at the level of only about  <dig>  %  <cit> , difficulty arises in regions of high divergence. in the latter case, a portion of the non-polymorphic sites likely represents true variants. in fact, there are over one hundred highly divergent regions in the human genome  <cit> , and some reach the level of 10–15 % divergence between haplotypes  <cit> . many are clinically important, including the well-known human leukocyte antigen  region on chromosome 6p <dig> that is implicated in more than  <dig> diseases . thus, the effect of bqsr on variant calling in such highly divergent regions needs to be assessed separately.

in this study, we sought to examine the impact of local realignment and bqsr across a panel of  <dig> variant discovery methods on simulated data and  <dig> methods on real exome data, taking into account both coverage depth and divergence level. we began with simulated data and extended to five public exome-seq data in na <dig>  which were generated using two exome capture kits on three illumina hiseq platforms. we found that local realignment mainly impacts indel calling and bqsr largely affects snp calling. in indel calling, noticeable effect of local realignment was restricted to only a few methods, with no effect on indel detection from novoalign alignment and minor effects on the three haplotype-based callers. in the latter, bqsr reduces snp calling sensitivity for many of the methods. thus, consideration should be given to both mapper and caller when applying post-processing to illumina exome data.

methods
simulation of exome-seq reads
simulation of reads provides an ideal approach for initial assessment of individual methods in a controlled situation where the “true” variants are predefined  <cit> . we focused on chromosome 6p <dig> , which contains the highly divergent hla region. to simulate exome-seq reads from this chromosome, we generated candidate regions by merging hg <dig> refgene exons  with regions interrogated by any of the four agilent sureselectxt human all exon kits .

simulation was done using dwgsim v <dig> . <dig>  at six mutation rates . illumina paired 100-base reads were simulated to an average per-base coverage of 100x, which were down-sampled to  <dig> and 5x coverage. dwgsim was run with the following parameter settings: snp-to-indel ratio of 9: <dig> per mutation rate, outer distance of 200 bp between paired reads, no error, no random dna and a random seed of  <dig>  instead of providing a list of candidate mutations , we generated random mutations by specifying a mutation rate  and the fraction of indels over the total mutations , with an equal probability of insertions and deletions and a geometric distribution of indel sizes. to enable the assessment of bqsr, rather than relying on the dummy base quality scores assigned by dwgsim, we instead gave each read a string of empirical base quality scores randomly taken from a pool of real illumina sequencing data. these came from our internal 100-bp exome-seq data in chronic lymphocytic leukemia patients. a similar approach was adopted by the sequence simulation tool art, which uses base quality scores from real sequencing data  <cit> .

mapping and post-processing of simulated reads
simulated reads were aligned to the hg <dig> human reference sequence using five mappers, including bwa-backtrack   <cit> , gsnap  <cit> , nextgenmap  <cit> , novoalign , and stampy  <cit> . unlike bwa, the other four mappers could map reads to highly divergent regions. the parameter settings for each mapper were provided in additional file  <dig>  alignments in the sequence alignment/map  format were converted into the binary alignment/map  format using samtools  <cit> , and sorted by coordinate using the sortsam command in the picard tools . alignments from all chromosomes were processed sequentially through duplicate marking, local realignment and bqsr.

duplicates were marked using the picard markduplicates command. we then performed local realignments around 90 % of all simulated indels using gatk indelrealigner command. we chose 90 % by considering the fact that, in real exome data, only known rather than all indels are used for local realignment. subsequently, the gatk baserecalibrator and printreads commands were used in bqsr using 90 % of simulated variants. to investigate how these two post-processing steps impact variant calling, variants were identified both before and after each step, as below.

variant calling from simulated data
we selected five popular variant callers, including gatk unifiedgenotyper and haplotypecaller  <cit> , freebayes  <cit> , samtools mpileup with bcftools consensus-caller   <cit> , and platypus  <cit> . the parameter settings for each of the callers were provided in additional file  <dig>  to increase the comparability among these callers, the multiple-nucleotide polymorphisms  reported by platypus and freebayes were decomposed into individual variants using gatk walker variantstoallelicprimitives. considering that the boundaries of indels are difficult to define precisely, overlap was inferred if an indel was called within five bases of a permuted indel.

variant calling sensitivity and precision rate were estimated using gatk walker genotypeconcordance, where sensitivity is estimated as “true positive/” and precision rate as “true positive/”. here, true positive refers to the number of true  variants identified by a method, false negative represents the number of true variants missed by a method, and false positive represents the number of called variants that do not overlap the true variants. the effect of local realignment was measured as the change in sensitivity and precision rate before and after local realignment; bqsr effect was measured similarly.

variant calling from exome-seq data in na12878
we further assessed local realignment and bqsr using exome-seq data from na <dig>  in which several call sets have been generated from whole genome and exome sequencing data. we first compiled a list of “true” variants  by combining the two variant lists below. those variants were identified through whole genome and whole exome sequencing, involving seven sequencing platforms, seven mappers and four callers. a high-confidence call set was generated through integrative analyses of  <dig> whole genome and  <dig> exome sequencing data   <cit> . to minimize bias toward a specific analytical pipeline, seven mappers together with three callers, cortex  <cit> , gatk unifiedgenotyper and gatk haplotypecaller, were used. the second list represents a union of three call sets, which were generated using cortex, discovar and gatk haplotypecaller from a pcr-free genomic library sequenced to  <dig> base pairs   <cit> . although we also used gatk unifiedgenotyper and haplotypecaller, the bias toward these two callers should be minimal because the public call set also used other callers and we assessed the effect of post-alignment processing based on the change of sensitivity rather than the sensitivity itself.

we downloaded five paired-end exome-seq data in na <dig> . the datasets were chosen to represent two different capture kits and three illumina sequencing platforms. the roche seqcap ez human exome kit has  <dig> megabases of capture regions, versus only  <dig> megabases interrogated by the illumina nextera rapid capture exome kit. for the two 150-bp datasets, only the first  <dig> bases were used. to understand how the effect of post-processing varies across different coverage depths, each full  dataset was down-sampled to  <dig>   <dig> and 10x coverage using samtools.

reads mapping, post-processing and variant calling followed the procedure used in the simulated data, with two modifications in local realignment and bqsr. first, local realignment was performed around the mills and 1000g gold standard indels . second, bqsr was conducted using known variants in dbsnp v <dig>  together with the mills and 1000g gold standard indels. in addition to the  <dig> callers and  <dig> mappers used for simulated data, we also assessed the effects of local realignment and bqsr for the bwa-mem algorithm  <cit>  and samtools/bcftools multiallelic-caller . released in february  <dig>  bwa-mem was developed mainly for aligning sequences from 70 bp up to  <dig> mbp. it outperforms the bwa-backtrack algorithm in mapping long  reads  <cit> . the earlier releases of samtools/bcftools  assume biallelic sites without handling multiallelic variants properly. they only take the strongest non-reference allele, which may not be optimal for more complex genomes, such as a cancer genome . the multiallelic calling model is recommended in the later release.

the grch <dig>  reference assembly presents a better representation of the human genome by filling many gaps and including  <dig> alternate loci across  <dig> regions . however, many of the mapping tools are not capable of handling the alternate loci; thus, the inclusion of alternate loci in the reference would cause more reads to have an “ambiguous” mapping status. in this study, we attempted to assess the effects of local realignment and bqsr on hg <dig>  the hg <dig> full assembly together with the hs38d <dig> decoy, the hla sequences and alts were downloaded from ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/grch38_reference_genome/. we mapped reads from na12878_ <dig> and na12878_ <dig>  to the hg <dig> reference using the alt-aware aligner bwa-mem . bwa-mem alignments were first processed using the script “bwa-postalt.js” available in the bwakit  software package . this script re-assigns mapping quality scores for reads with hits in the alt contigs. duplicates were marked by the picard markduplicates command. local realignment and bqsr were performed using the commands  available in gatk v <dig> - <dig>  the known indels used for local realignment were combined from two sources: ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/grch38_reference_genome/other_mapping_resources/all.wgs.1000g_phase <dig> grch <dig> ncbi_remapper. <dig> shapeit2_indels.vcf.gz and ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/grch38_reference_genome/other_mapping_resources/mills_and_1000g_gold_standard.indels.b <dig> primary_assembly.vcf.gz. the list of known snps used for bqsr was downloaded from ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/grch38_reference_genome/other_mapping_resources/all_ <dig> dbsnp142_human_grch <dig> snps.vcf.gz.

while post-processing was performed genome-wide across all chromosomes, variants were identified only from chromosome  <dig>  variants with a phred-scale quality of at least  <dig> were retained, which were separated into “known” and “novel” ones by intersecting with dbsnp v <dig>  or dbsnp v <dig> . the public call set was also split into “known” and “novel”. hg <dig> to hg <dig> liftover was performed using crossmap  <cit> . by treating the known snps in the above public call set as “true” positives, the sensitivity for known snps was estimated as “true positive/”. the true positive refers to the number of known snps identified by a method that are in the public call set; false negative represents the number of known snps missed by a method but are in the public call set. the sensitivity for known indels was estimated similarly.

RESULTS
we used both simulated reads from exonic regions of chromosome  <dig> and five exome data in na <dig>  we evaluated, for each of the variant discovery methods, how local realignment and bqsr might impact the outcome across different divergence levels and coverage depths.

impact of local realignment in simulated data
we assessed a total of  <dig> cases from five mappers, five callers, two coverage depths , and six divergence levels. bwa was excluded at 5–10 % divergence. local realignment had nearly no impact on snp calling sensitivity  and increased precision rate slightly  in  <dig> cases involving gatk unifiedgenotyper and platypus . next, we sought to understand to what extent local realignment might impact indel calling. we observed a  <dig> –1 % increase of precision rate in  <dig>  cases in indel calling . these cases used samtools or gatk unifiedgenotyper calling from stampy alignment . little or no effect was detected in the other cases, including all from the three haplotype-based callers . on the other hand, local realignment led to an obvious gain or loss of sensitivity  in approximately one-fifth of the cases . the change of indel calling sensitivity depended on multiple factors , which we described in detail below.table  <dig> effect of local realignment in indel calling

alignments were subjected to duplicate marking and then to local realignment. a total of  <dig> cases were evaluated, which represent combinations among five mappers, five callers, six divergence levels and two coverage depths , excluding  <dig> cases with bwa mapping at 5–10 %. in each case, the change of indel calling sensitivity is calculated as the sensitivity after local realignment using 90 % simulated indels, subtracted by that after duplicate marking. the change in precision rate is calculated in the same way

fig.  <dig> box plot showing the change of indel calling sensitivity after local realignment. a–e simulated datasets with 5x coverage. f–j simulated datasets with 40x coverage. local realignment was performed using 90 % of the preplaced indels. the change of indel calling sensitivity is calculated as the sensitivity after local realignment, subtracted by that after duplicate marking. for callers together with bwa, only datasets with  <dig> –1 % divergence were used. gatk hc, gatk haplotypecaller; gatk ug, gatk unifiedgenotyper



in indel calling, the impact of local realignment on sensitivity is mapper-, caller- and coverage-dependent. as for the mappers, nextgenmap was affected the most and novoalign the least . for novoalign, nearly no changes in sensitivity were detected at low divergence , likely reflecting the optimal alignments achieved by the underlying full needleman-wunsch algorithm. on the other hand, local realignment increased the sensitivity of nextgenmap with samtools  but decreased its sensitivity with platypus  and gatk unifiedgenotyper . a previous study showed that local realignment improved gatk unifiedgenotyper calling accuracy on bwa alignment  <cit> . we indeed found that it generally increased sensitivity for bwa with all the callers at low  divergence, more obvious at 5x coverage . for gsnap, local realignment increased the sensitivity at 5x but decreased the sensitivity at 40x coverage in gatk unifiedgenotyper calling . of the callers, overall gatk haplotypecaller, platypus and freebayes were less affected at 40x coverage and low divergence, compared to the other two callers . a similar finding was reported for gatk haplotypecaller in exome-seq data  <cit> . these haplotype-based callers are capable of alleviating alignment ambiguity around indels internally through local de novo assembly  <cit>  or direct construction of haplotypes from alignments  <cit> . for these callers, the benefit of applying local realignment in gatk best practices would be minimized.

the role of local realignment in indel calling also depends on divergence. at  <dig> –1 % divergence,  <dig> cases showed increase of sensitivity  after local realignment, versus only  <dig> cases  at 5–10 % divergence. whereas, of the  <dig> cases whose sensitivity decreased by > =1 %, about half were from 5–10 % divergence. in summary, local realignment mainly affects indel calling sensitivity, more conspicuous at low coverage. when the coverage and divergence are both low, local realignment tends to increase the sensitivity. at high coverage and low divergence, local realignment has nearly no impact on the haplotype-based callers. of the five mappers, novoalign is least affected, in contrast with bwa that generally shows an increase of sensitivity.

impact of bqsr in snp calling of simulated data
we evaluated the effect of bqsr by measuring the change in sensitivity and precision rate between bqsr and local realignment. to ensure meaningful comparison, we limited the analysis to a subset of the cases. in assessing the change in sensitivity, we required that the sensitivity prior to bqsr  should exceed 35 %, while in assessing the change in precision rate, we further required that the sensitivity should not be decreased by more than 15 % after bqsr.

the impact of bqsr on snp calling is striking at low coverage and high divergence . we observed a trend of decrease in sensitivity by bqsr following the increase in divergence. however, at low divergence and 40x coverage, of the five callers, only gatk unifiedgenotyper showed a small  decrease in sensitivity at  <dig> –1 % divergence . nevertheless, at 5x coverage the effect was more obvious for several callers . more specifically, bqsr largely increased the sensitivity at  <dig> – <dig>  % divergence; at  <dig> –1 % divergence, it increased the sensitivity for gatk haplotypecaller but decreased the sensitivity for gatk unifiedgenotyper and platypus. at 5–10 % divergence, bqsr reduced the sensitivity in vast majority of the cases ; at 5x coverage, sensitivity was decreased by  <dig>  % , versus  <dig>  % at 40x coverage .fig.  <dig> change of snp calling sensitivity after bqsr. a–c datasets with  <dig> – <dig> ,  <dig> – <dig> and 5–10 % divergence, respectively, at 5x coverage. d–f datasets with  <dig> – <dig> ,  <dig> – <dig> and 5–10 % divergence, respectively, at 40x coverage. the change of sensitivity is calculated as the sensitivity after bqsr using 90 % of the permuted snps, subtracted by that after local realignment using 90 % of the preplaced indels. for callers together with bwa, only datasets with  <dig> –1 % divergence were used. gatk hc, gatk haplotypecaller; gatk ug, gatk unifiedgenotyper

between  <dig> and  <dig> mapper-caller combinations were assessed at each of the six divergence levels and two coverage depths in simulation, excluding combinations with bwa at 5–10 % divergence. they were selected to have a sensitivity of at least 35 %; to estimate the change in precision rate, we also required that sensitivity should not decrease by more than 15 % after bqsr. div divergence, mdn median



there were only a few cases where bqsr altered the precision rate. overall the effect was negligible at  <dig> –5 % divergence . at 10 % divergence, we excluded  <dig> cases whose sensitivity was decreased by over 20 % after bqsr. in the remaining  <dig> cases, all at 40x coverage, only samtools and gatk unifiedgenotyper showed a  <dig> – <dig>  % increase and platypus  showed an 1– <dig>  % increase in precision rate.

impact of bqsr in indel calling of simulated data
compared to the three haplotype-based callers, gatk unifiedgenotyper and samtools are less sensitive in indel calling . in assessing the impact of bqsr on sensitivity, we excluded  <dig> cases from the two callers due to their low  sensitivity, mainly at 5x coverage. in two-thirds of the remainder, including all those at  <dig> –1 % divergence and 40x coverage, bqsr had little effect on sensitivity . in the other one-third, bqsr either increased  or decreased  sensitivity . the former was predominantly from 5x coverage and  <dig> –1 % divergence  and the latter from high divergence , which we discussed below.fig.  <dig> change of indel calling sensitivity after bqsr. a–c datasets with  <dig> – <dig> ,  <dig> – <dig> and 5–10 % divergence, respectively, at 5x coverage. d datasets with 5–10 % divergence and 40x coverage. datasets with  <dig> –1 % divergence and 40x coverage were not displayed, since there was nearly no change in sensitivity after bqsr. see fig.  <dig> legend for more information



for gatk unifiedgenotyper, the analysis was limited to the 40x coverage . for gatk unifiedgenotyper  and platypus, bqsr decreased the sensitivity only at 10 % divergence . freebayes and gatk haplotypecaller were similarly impacted; bqsr increased the sensitivity at 5x coverage and < =1 % divergence , but decreased the sensitivity at 5x coverage and 5–10 % divergence  and at 40x coverage and 10 % divergence . finally, for samtools, however, bqsr increased the sensitivity at 40x coverage and 5 % divergence  but generally reduced the sensitivity at 5x coverage and  <dig> – <dig>  % divergence . on the other hand, 95 % of the cases showed nearly no  change in precision rate .

impact of local realignment in na <dig> exome data
given the limitations in simulated data  <cit> , we further assessed local realignment and bqsr over five exome-seq data in na <dig>  to evaluate the impact of coverage in the post-processing, each full dataset  was down-sampled to generate three subsets with  <dig>   <dig> and 10x coverage, respectively. to take into account the sequence divergence, we limited the analysis to chromosome  <dig> and split it into the hla region  of high sequence divergence and the flanking non-hla regions with low sequence divergence.

in snp calling, the impact of local realignment on sensitivity is only marginal , as observed in the simulated data . in both hla and non-hla regions, over 97 % of the cases showed < = <dig>  % change in sensitivity. in indel calling, the effect of local realignment depends on mapper, caller and coverage. since the trend is highly comparable across all the five na <dig> datasets, only the results from na12878_ <dig> are displayed .fig.  <dig> change of variant calling sensitivity after local realignment and bqsr in na <dig>  a–b change of indel calling sensitivity after local realignment in the hla  and non-hla regions . c–d change of snp calling sensitivity after bqsr in the hla  and non-hla regions . na <dig> exome-seq data na12878_ <dig>  was downloaded from https://basespace.illumina.com/and down-sampled into  <dig>   <dig> and 10x coverage. change of sensitivity is calculated as the sensitivity after bqsr, subtracted by that after local realignment, or as the sensitivity after local realignment, subtracted by that after duplicate marking



of the six mappers, novoalign was impacted the least by local realignment. as for the callers, local realignment had little effect on the sensitivity of gatk haplotypecaller in indel calling, but a more obvious effect was observed using samtools and gatk unifiedgenotyper, consistent with our observation on simulated data. for these two callers, local realignment generally increases the sensitivity on the alignment from gsnap and nextgenmap. however, the two callers are less effective in indel detection . samtools/bcftools  provides two modes of variant detection: consensus-caller described above that assumes only biallelic sites in the genome and multiallelic-caller. we tested local realignment for samtools/bcftools multiallelic-caller. as shown in additional file 1: figure s2a, local realignment had similar effects on the two calling modes, with the change of indel calling sensitivity being highly correlated . further work is needed to test whether the same pattern will be observed in the cancer genome, where more complex structure variation would be generally expected.

indels are more difficult to detect and often under-reported  <cit> . on chromosome  <dig>  the ratio of known indels to snps is roughly 1– <dig> in the non-hla regions and 1– <dig> in the hla region based on the public call set  <cit> . thus, there are only small changes in the number of indel calls, with the exception of stampy + gatk unifiedgenotyper. this method showed the most striking increase in sensitivity across the full range of coverage. thus, the benefit of local realignment in indel calling is not universal but mapper- and caller-dependent.

impact of bqsr in na <dig> exome data
in snp calling from simulated data, we observed a general decrease of sensitivity at low coverage and/or high divergence . using the na <dig> exome-seq data, we found that bqsr decreased snp calling sensitivity  for majority of the methods, especially at low coverage . the pattern in the change of snp sensitivity across different methods was highly consistent across all five datasets, showing that bqsr had the greatest impact on samtools, followed by freebayes and platypus. at full coverage, the effect of bqsr was much reduced in both hla and non-hla regions; only samtools still showed a noticeable loss of sensitivity in the hla region. the two samtools/bcftools calling modes showed similar trends in the change of snp calling sensitivity after bqsr , with multiallelic-caller being slightly less affected than the consensus-caller. two previous studies also revealed little effect of bqsr in high-coverage whole genome and exome sequencing data  <cit> .

since bqsr tended to reduce snp calling sensitivity, we then ask whether loss of sensitivity would be compensated by an increase in precision rate. precision rate is difficult to estimate for real sequencing data as the false positives are not known. assuming that some of the novel snps represent false positive calls, if bqsr reduces novel snp calls, it should be an indication of improvement in precision rate. therefore, we assessed the impact of bqsr on the detection of known versus novel snps in all the five datasets. this analysis revealed two general trends, and we illustrated such trends on two of the datasets: na12878_ <dig>  and na12878_ <dig> .fig.  <dig> change of known and novel snp calls by bqsr in na <dig>  a snp calls from samtools in the non-hla regions. b snp calls from samtools in the hla region. c snp calls from platypus in the non-hla regions. d snp calls from platypus in the hla region. na <dig> exome-seq data na12878_ <dig>  was down-sampled into  <dig>   <dig> and 10x coverage. y-axis represents the difference in the number of snps, separated into known and novel, before and after bqsr. negative number indicates missed calls after bqsr, compared to local realignment. known snps are those that match dbsnp v138



for samtools  and freebayes calling  in the non-hla regions, bqsr resulted in a marked loss of both known and novel snps at  <dig> and 20x coverage, but less so at 40x and full  coverage. in the hla region, however, the loss was much more obvious for known snps than for novel ones across all the coverage depths . over 90 %  of the known snps missed by bqsr in the hla and non-hla regions overlapped the public call set, supporting the reliability of those missed calls. thus, in the non-hla regions, when the coverage is less optimal, bqsr increases the precision rate with sacrifice in sensitivity, indicating a trade-off between these two measurements. however, when the coverage is sufficient, the impact of bqsr becomes much less conspicuous. on the other hand, in the hla region, bqsr reduces the sensitivity but with little gain in precision rate. on the other hand, for platypus , gatk unifiedgenotyper and haplotypecaller , bqsr led to a much larger loss of known snps than novel snps, particularly at  <dig> and 20x coverage. for these three callers in snp detection, the role of bqsr is actually adverse rather than beneficial.

we also investigated the impact of bqsr on indel calling. a total of  <dig> cases were assessed, which represent combinations among  <dig> na <dig> exome data,  <dig> coverage depths,  <dig> mappers  and  <dig> callers. in each of the  <dig> cases, indels were first grouped into known  and novel, and both were then split into those that overlap the public call sets and others that are method-specific. for each of the four groups of indels in each case, we checked the change in the number of indels before and after bqsr . for freebayes, gatk unifiedgenotyper, platypus and samtools, the number of indels differed by no more than two in nearly all the cases in the hla region and in 95–100 % of the cases in the non-hla regions. slightly more changes were observed for gatk haplotypecaller in the non-hla regions, more notably  for novel ones that are unique  to this caller. overall, bqsr resulted in little or no changes in indel calls in both hla and non-hla regions.

taken together, our analysis suggested that the effect of bqsr depends on caller, coverage and sequence divergence. in both high and low divergence regions, bqsr reduced snp calling sensitivity for all the callers. however, it improved the precision rate only for freebayes and samtools in the lowly divergent regions when the coverage is insufficient. on the other hand, indel calling appears to be less impacted.

local realignment and bqsr in hg <dig> genome reference
human hg <dig> reference sequence includes  <dig> alt contigs from the hla region. to evaluate the effect of local realignment and bqsr in this new genome build, we mapped all na12878_ <dig> and na12878_ <dig> reads to hg <dig> using bwa-mem. we also tested novoalign , but it is very slow when alt contigs are included in the reference . the other four aligners are not able to map reads to hg <dig> if alt contigs are included. we found that the effect of local realignment on indel calling was not markedly different between the two references . for both references, in the hla region there was nearly no change  in the number of known indels after local alignment. in the non-hla regions, local alignment increased the number of known indels by 0– <dig> in hg <dig> and by 0– <dig> in hg <dig>  with a difference of < = <dig> between them. as revealed for hg <dig>  at the full  coverage bqsr mainly reduced the snp sensitivity of samtools when reference hg <dig> was used ; the effect was more obvious in the hla region.

CONCLUSIONS
post-alignment processing is frequently applied in current protocol of variant discovery. using exome data we revealed that local realignment and bqsr did not always enhance variant detection as one would expect. instead, their roles are mapper and caller dependent, often varying with coverage depth and level of divergence.

local realignment and bqsr mainly impacted indel and snp calling, respectively. local realignment overall increased indel calling sensitivity with nextgenmap alignment but had little impact on novoalign. on the other hand, compared with the haplotype-based callers, the effect was more obvious on samtools and gatk unifiedgenotyper that are less effective in indel detection. for majority of the methods, bqsr reduced the snp calling sensitivity, more obvious at lower coverage. in the low divergence regions, when the coverage is not sufficient, samtools and freebayes showed decrease in sensitivity but increase in precision rate by bqsr. in other cases, the loss of sensitivity was not associated with an increase in precision rate, which argues against the application of bqsr in those instances. our analysis offers a broad view about the impact of post-alignment processing in exome-based variant discovery. thus, consideration should be given to both mapper and caller when deciding whether to apply post-processing to illumina exome data.

additional files
additional file 1: figure s <dig>  change of indel calling precision rate following local realignment. figure s2: local realignment and bqsr for samtools/bcftools consensus-caller and multiallelic-caller. figure s3: bqsr changed variant calling sensitivity in na <dig>  figure s4: change of known and novel snps in na <dig> after bqsr. figure s5: change of known and novel indels in na <dig> by bqsr. figure s6: local realignment and bqsr with hg <dig> versus hg <dig>  

additional file 2: table s <dig>  five public exome-seq data in na <dig>  table s2: change of snp calling sensitivity and precision rate after local realignment. 



abbreviations
bpbase pair

bqsrbase quality score recalibration

gatkgenome analysis toolkit

hlahuman leukocyte antigen

indelinsertion and deletion

pcrpolymerase chain reaction

snpsingle nucleotide polymorphism

