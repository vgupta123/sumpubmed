BACKGROUND
metabolic pathway analysis
metabolism is the complete set of chemical reactions taking place in living cells. these chemical processes form the basis of all life, allowing cells to grow, reproduce, maintain their structure and respond to environmental changes. metabolic reactions are divided into groups called metabolic pathways, which are typically constructed heuristically according to their connectivity and presumed function  <cit> . each metabolic pathway is characterized by a set of chemical reactions that transform substrates into end products while generating intermediate byproducts. due to its importance in medicine and biotechnology, metabolic pathway research has become a highly active field of investigation  <cit> .

initially, the structure of metabolic pathways was examined by identifying their intermediate compounds. subsequently, the various biochemical reactions connecting these compounds were mapped. due to the success of this research, the topological structure of many metabolic pathways is nowadays fully documented  <cit> . the next step in the progression of metabolic pathway research involves quantification of the rates of these various chemical reactions, also known as "fluxes". the values of these rates are affected by various environmental conditions and can change rapidly in response to perturbations. nevertheless, if the environmental parameters are held fixed and stable, the network can attain a steady state in which the concentrations of all network metabolites are assumed constant over time. this, of course, implies that the rates of their input and output reactions must balance. the latter imposes a set of linear constraints on the metabolic fluxes, known as "stoichiometric balance equations"  <cit> . unfortunately, since the number of unknown fluxes typically exceeds the number of independent stoichiometric balances, these constraints are insufficient to completely identify the metabolic network. in order to overcome this lack of information, additional constraints must be provided to the stoichiometric mathematical model to estimate the values of the network fluxes  <cit> .

13c isotope labeling experiments
various experimental techniques have been developed to enable measurement of intracellular metabolic fluxes, either directly or indirectly. one of these approaches makes use of isotope labeling experiments. in this method, the metabolic system is administered a known amount of an isotopically labeled substrate . by measuring the resulting labeling patterns of intracellular metabolites after steady state has been achieved, additional flux information is obtained.

one major drawback of this experimental approach is the high complexity and computational intensity of the metabolic flux analysis  required to interpret these labeling measurements. in their series of articles, wiechert et al.  <cit>  constructed a systematic approach for performing this analysis. they show that measurements of the relative abundance of various isotope isomers, also known as "isotopomers", contain enough information to fully identify the metabolic fluxes of the network. formulating the problem using isotopomer variables , wiechert et al. posed the flux estimation problem as a non-convex least-squares minimization, assuming random error is added to their isotopomer measurements. the resulting high-dimensional non-convex problem suffers from various drawbacks, such as slow convergence and notable probability of attaining local minima. several optimization algorithms have been developed in order to address these drawbacks. early approaches used iterative parameter-fitting algorithms  <cit> , evolutionary algorithms  <cit>  and simulated annealing  <cit> . furthermore, several investigations have been conducted in order to assess the accuracy of these results  <cit> . recently, a novel method to decompose the metabolic network into elementary metabolite units  was introduced  <cit>  and implemented into the openflux software package  <cit> . this decomposition effectively reduces the size of the optimization problem by efficiently simulating only those isotopomers that contribute to the measurement residuals. nevertheless, all of these algorithms suffer from several major drawbacks due to the standard isotopomer-flux variables used in formulating the optimization problem:

• presence of unstable local minima: due to the non-convex nature of the objective function.

• complex mathematical representation and computational implementation. this results in the need for ad-hoc algorithms and mathematical analysis, and long running times are required for reliable convergence.

the openflux implementation, for example, may require several dozens of convergence iterations with various initial values in order to achieve acceptable probability of obtaining the optimal set of fluxes in any one of its attempts. in addition, due to the chosen objective function, it is also commonly required to estimate scaling factors for each isotopomer measurement, because of the fact that the available experimental techniques are only capable of measuring isotopomer fractions up to a proportional scaling factor .

our contribution
this article introduces a new set of variables for simulating 13c isotope labeling experiments. the main idea underlying this reformulation is that, instead of treating fluxes and isotopomer variables separately, we identify a set of "isotopically labeled fluxes" as our state variables of interest. we refer to these variables as fluxomers. fluxomers combine flux variables with isotopomer variables and consequently reduce the complexity and nonlinearity of the original isotopomer balance equations. in this article, we show that by reformulating the flux estimation problem in terms of fluxomer variables, it is possible to construct an algorithm that has the following key benefits:

• provides efficient computation of all isotopomers in a metabolic pathway

• is robust to measurement noise  and initial conditions

• eliminates the need for measurement scaling factor estimation

• poses the problem using simple mathematical expressions, allowing the use of generic optimization algorithms

the rest of the article is constructed as follows. the results and discussion section illustrates the advantage of our approach via simulation results comparing fluxomer variables to the commonly used cumomer approach and the more recently introduced emu approach. the methods section presents the detailed formulation of the fluxomers optimization problem and the fluxomers iterative algorithm  that provides a reliable and efficient method for solving it. all source code and executables for our algorithms are freely available at the author's website  <cit> .

RESULTS
we compared our fia algorithm to the widely used mfa software 13cflux  <cit> , which relies on the cumomer approach, and to the more recent open-flux  <cit>  software, which is based on the emu  <cit>  approach. in order to compare the methods, we conducted flux estimations for various well-studied metabolic pathways. our first example is based upon the tutorial which wiechert et al. provide with their 13cflux software: the embden-meyerhof and pentose phosphate metabolic pathways of escherichia coli  <cit> . this example compares the running time and robustness of both algorithms in response to input noise. our second example compares the results and performance of fia to both an adhoc method and the openflux algorithm for the analysis of lysine production by c. glutamicum, as described by becker et al.  <cit>  and quek et al.  <cit> .

fia vs. 13cflux comparison: embden-meyerhof and pentose phosphate pathways
in this section we examine a network representing the embden-meyerhof and pentose phosphate pathways of e. coli, which is based upon the tutorial supplied by wiechert et al. as part of their 13cflux software package. since our fia implementation natively supports 13cflux input files , the same input files can be used for both algorithms. . figure  <dig> shows the simple network used along with the nomenclature used in previous publications. in addition to the network structure, the models are provided with flux and isotopic measurements as shown in table  <dig> 

values are taken from the example input file included in the 13cflux demo. substrate enrichment values are considered as constants.

first, we examined the output of the two algorithms for the traditional "noiseless" input file. in order to run the analysis, 13cflux requires the user to define a set of "free fluxes" along with their associated initial values  <cit> . note that a bad choice of free fluxes or their associated values can result in poor algorithmic performance . in fact, under various initial guesses the algorithm did not converge at all. as for fia, none of the above is required. since the network along with the given measurements are well defined, in the noiseless case the two algorithms returned similar values for unidirectional fluxes, as can be seen in table  <dig>  some slight disagreements were observed for the bi-directional fluxes, which are more poorly identified.

comparison of estimated fluxes and mean-square estimation error using "noiseless" data.

we next compared the algorithms' sensitivities to noise. in a series of  <dig> experiments, white gaussian noise was added to all of the measured isotopomer values, and the outputs and computation times for both algorithms were recorded. as can be seen in figure  <dig>  unidirectional fluxes remain quite constant and hardly suffer from the added experimental error . however, the bi-directional fluxes are affected by the added noise. 13cflux suffers from a higher variance spread of the estimated values than fia . note that the difference arises not only due to the mathematical model used, but also due to the stability properties of the optimization method chosen.

we next examined the computational performance of the two methods. table  <dig> shows the algorithm running time for convergence . the average running time for 13cflux was  <dig> seconds, while for fia this time was  <dig> seconds. the running time ratio  for individual experiments varied between × <dig> to × <dig> 

running time is shown in seconds.

fia vs. openflux comparison: lysine production by c. glutamicum
in this section we examine the analysis of the central metabolism of two lysine-overproducing strains of corynebacterium glutamicum: atcc  <dig>  and its peftufbp mutant. both express feedback-resistant isoforms of the aspartokinase enzyme lysc, while the latter is additionally engineered to overexpress the glycolytic enzyme fructose- <dig> -bisphosphatase. the example is based upon the measurements provided by becker et al.  <cit> , who implemented an ad-hoc program to estimate the values of various metabolic fluxes. in their more recent article introducing the openflux software package  <cit> , quek et al. chose to compare their results to those of becker et al. therefore, we will expand upon their comparison using our fia implementation. the input file for fia was constructed using the measurements and pathway structure given in  <cit>  and  <cit> . as described in  <cit> , the published mass isotopomer fractions were modified for mass interference from non-carbon backbone isotopes using the molecular formula of the amino acid fragments. fia supports automatic generation of the naturally occurring isotopes correction matrix when the measured molecular formulas are supplied. this adjusts the measured fluxomers vector appearing in the objective function during the process of optimization. if necessary, it is possible not to use this feature but instead to directly supply the algorithm with the corrected measurement values.

when comparing the running times of fia with openflux, the different algorithmic approaches of the two must be kept in mind. while openflux requires the user to supply it with sets of free fluxes, fia requires no free fluxes nor initial values. open-flux rapidly evaluates dozens of different optimization cycles with random initial values and seeks the best fitting result among them, while fia uses only one single  run. as such, the convergence probability of openflux depends on the number of attempts and random values generated during its operation, while the fia results do not depend on any random value. furthermore, in its analysis, emu based algorithms evaluate only the fluxes necessary for measurement comparison, and thus their running time depends both on the metabolic network structure and the amount and location of the given measurements. fia, on the other hand, can supply the entire set of metabolic fluxes at any given time, with no additional computation requirement .

measured fluxes as constants
first, we ran the exact same simulation as quek et al. performed in their article. they supply very accurate  values for the label measurements, and used the given measured fluxes as if they were noiseless measurements . we start by comparing the simulation time for this simple case. according to  <cit>  and as validated by us using our computer, openflux required  <dig> iterations of about  <dig> seconds each in order to find a decent minimal point, hence about  <dig> seconds in total. while so, the fia analysis took  <dig> seconds for initial analysis and matrices creation, and  <dig> further seconds for convergence, thus  <dig> seconds as a whole. regarding the simulation results, as one can see in table  <dig> and table  <dig> the fluxes are very close to those calculated before, and the estimated fluxes fia returned had the lowest residual value compared to the other methods.

experimental and calculated isotopomer ms fractions. the experimental data and ad-hoc simulation results are taken from becker et al.  <cit> . the openflux results are taken from  <cit> . the simulated "non-normalized" data is generated by multiplying the given values after natural isotope correction by random factors. several fia estimations are provided: using the given fluxes as constants , as measurements , and when using the simulated non-normalized data . as can be seen, fia agrees with previous results . for the mutant case, better fits are achieved when allowing the supplied fluxes to change as well.

estimated metabolic fluxes values for the different approaches - the ad-hoc simulation results from becker et al.  <cit> , the openflux results  <cit> , and the fia results for its various simulated scenarios 

measured fluxes as measurements
we can also run the same optimization, but weight the given flux measurements by their variances. when running this optimization using openflux , the amount of time was greatly increased, and ended in around  <dig> minutes. for fia, on the other hand, the running time was the same as before, thus about  <dig> minutes. comparing the results of the algorithms, openflux suffered from severe convergence problems. most of its iterations ended without converging at all, while those that did converge yielded useless results, far from the measurements. fia, on the other hand, succeeded in converging for all scenarios. for the wildtype lysine producing pathway, the results were very close to the ones before . for the mutant example, which was less accurate, a reduction of the residual value was achieved by small changes to the measured fluxes. fluxes and residual values can be examined in table  <dig> and table  <dig> 

using non-normalized ms measurements
we now show that fia can easily use incomplete or non-normalzied measurements by examining its performance in the example above. the supplied ms measurements were normalized to the n + <dig> backbone carbon atoms of the measured metabolites. instead of using the supplied normalized data, we multiply each set of metabolite measurements by a random constant number. by doing so, we simulate the case in which only the first  <dig>  ms peaks were measured, and had not been normalized. the original and supplied non-normalized measurement values can be found in table  <dig>  note that the values were corrected by the molecular formulas of the measured fragments . in the absence of normalized data, fia gave estimated fluxes very close to the previous cases, with very low residual values, as can be seen in table  <dig>  the running time of the algorithm was not affected by the change.

CONCLUSIONS
the main contribution of this article is the introduction of fluxomers--a new set of state variables used to simulate 13c metabolic tracer experiments. the fluxomers approach allows the central optimization problem of mfa to be reformulated as a sequence of quadratic programs, which form the basis of the fluxomers iterative algorithm . both fluxomers and fia result in several important benefits compared to flux-isotopomer variables. among these advantages are  a reduction in algorithm running time required for simulation of isotopomer distributions and metabolic flux estimation,  reduced sensitivity to measurement noise and initial flux values and  availability of complete isotopomer information for a given network  without the need for user specification of free fluxes or initial flux values. additionally, the error model used by the fia algorithm has the advantage that it depends solely upon isotopomer ratios rather than complete isotopomer fractions, and therefore it eliminates the need to estimate a normalization factor for each measured isotopomer distribution. our current results show significant improvements even with regards to simplistic tracer experiments . it is important to note that the total time required to obtain an mfa solution is controlled both by  the time of each iteration and  the number of optimization iterations that are required to achieve a reliable solution. while a single openflux iteration is certainly faster than a single iteration of fia, the fia algorithm was expressly constructed to provide high reliability in achieving the optimal solution. therefore, fia was able to consistently find a better optimal solution in less total time in comparison to the other algorithms examined. furthermore, extending the fluxomers formulation to other global optimization techniques is straightforward. we expect that reformulating more sophisticated mfa problems--for example, involving optimal experimental design or large-scale metabolic networks--in terms of fluxomer variables will lead to dramatic enhancements of algorithmic efficiency and robustness.

