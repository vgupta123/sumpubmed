BACKGROUND
for a long time it is known that many organisms show alterations to the universal genetic code  <cit> . these codon reassignments could have happened under strong at or gc pressure, which might lead to the complete disappearance of the reassigned codon followed by a trna with a different amino acid identity taking over the decoding of the respective codon during its reappearance . in a mutually exclusive scenario, the codon is in a transitional state, in which it is decoded ambiguously by two trnas . an example for the latter scenario is the reassignment of the cug codon from leucine to serine in candida yeasts , which cannot be accomplished by a single mutation in the anticodon of a serine trna. indeed, candida species contain a single trna with a cag anticodon   <cit> .

the general time line of the switch in using the leucine cug codon for serine in fungi has already been investigated. shortly, the unusual ser-trnacag appeared about  <dig> million years  ago. however, the genera candida  and saccharomyces  separated from each other about 180 ma ago implying that the codon ambiguity remained for about 100 ma in the ancestors of the yeasts  <cit> . the ancestor of the saccharomyces lost the mutant ser-trnacag and retained the wild-type leu-trnacag, while the ancestor of the candida lost the leu-trnacag and maintained the mutant ser-trnacag changing the identity of the cug codon from leucine to serine. a whole genome comparison showed that only a minor fraction of the cug codons present in candida albicans have equivalent cugs in saccharomyces cerevisiae implying that almost all original cug codons disappeared in c.albicans <cit> .

however, the decoding cannot be derived unambiguously from the species names . in several taxonomically broad protein family analyses  we have observed that cug positions are conserved within many of these sequences, that many mapped to structurally conserved residues and can thus often unambiguously assigned to either leucine  or serine . these observations also suggest that the data can be used as reference for the assignment of the cug codon translation to further sequenced yeast species in the future.

here, we provide a tool with which it can fast and easily be determined whether a yeast species uses the standard codon usage or the alternative yeast codon usage . the tool is suitable for both data from whole genome projects and transcriptome analyses. the tool is also thought to provide a reference page for species using the aycu. in addition, the tool allows easy examination of the correct decoding of existing annotated genes by translating mrna using the standard or alternative yeast codon usage and by verifying the translation of a given protein sequence via gene reconstruction in the respective species. the tool closes an important gap in yeast research because the ncbi taxonomy does not reflect the latest phylogeny, and the assignment of the genetic code at the ncbi webpages is wrong for many species. e.g. lodderomyces elongisporus, hyphopichia burtonii, candida tenuis, and others are denoted as using the standard code instead of the aycu, which is known for e.g. lodderomyces <cit>  and c.tenuis <cit>  for many years.

implementation
technologies
the system has been developed to run on linux systems. the web application is implemented in the ruby programming language  using the ruby on rails framework , which has the advantage of rapid and agile development while keeping the code well organized. the site makes extensive use of ajax  in order to present the user with a feature rich interface while minimizing the amount of transferred data. the alignments and phylogenetic trees are visualized with the lucullus software, which is a plugin to pybiomaps  <cit> . performance is enhanced by parallelization of the prediction process. all technologies used are freely available and open source.

workflow
the implementation of the cug prediction workflow is shown in figure 1a. the uploaded yeast genome or transcriptome assembly data is searched with representatives of  <dig> proteins from  <dig> different protein families and classes using tblastn  <cit> . the protein reference dataset is updated from cymobase  <cit>  on a monthly basis. the genomic regions of the blast hits are extended by  <dig> nucleotides in both directions to obtain better and more complete ab initio gene predictions. subsequently, overlapping blast hits are combined because they presumably belong to the same gene. genes within these extended genomic regions are predicted by augustus-ppx  <cit>  with the options --genemodel=exactlyone to predict exactly one gene, --proteinprofile to integrate pre-calculated profiles for each protein family of the reference data, and --species_model to use species-specific parameters. subsequently, the augustus predictions are aligned to the reference multiple sequence alignments with mafft  <cit> , or to the reference sequence used for the tblastn search with c++ implementations of the needleman-wunsch  <cit> , gotoh  <cit> , smith-waterman  <cit>  or longest common subsequence  <cit>  algorithms, which are part of the seqan algorithm library  <cit> . cug positions within the predicted genes are then compared to the reference data with respect to amino acid conservation and, if existing, to the translations of cug codons at the same position in the reference data. optionally, the user can compute the phylogenetic grouping of the yeast query data to the reference data. for this purpose, five or ten of the predicted sequences are chosen randomly, the corresponding alignments of the gene predictions and reference data are concatenated, poorly aligned positions are removed with gblocks v. <dig> b  <cit> , and the phylogenetic tree is computed with fasttree  <cit> . in addition to this sequence-based prediction of the translation scheme, the identity of the trnacag is predicted . for this purpose, trnas and their secondary structures are predicted with trnascan-se under a general  or a eukaryote-specific trna model  <cit> . pseudogene checking is disabled with option –d to speed up the search process. the predicted trnacag is subsequently compared to reference data consisting of  <dig> leu-trnacag genes,  <dig> ser-trnacag genes, and  <dig> trna genes with other anticodons. for visual inspection, the predicted trnacag is aligned to the reference trna data with mafft.figure  <dig> 
workflow of the bagheera web application. a) upon uploading of the yeast genome or transcriptome assembly data homologous proteins to the reference sequences are identified using tblastn and subsequently predicted by augustus-ppx. the reference sequences used for the gene prediction are selected according to the species selected as model organism for augustus. the predicted proteins are aligned to the reference alignments  and the codon usage predicted based on the analysis of sequence similarity and cug codon conservation at cug codon positions. optionally, a phylogenetic tree can be calculated based on a randomly selected and concatenated subset of the predicted proteins. b) a gene reconstruction of the uploaded protein sequence is performed to obtain cdna sequence. the species encoding the uploaded protein has to be specified. the cdna sequence is then translated according to the translation scheme of the respective species.



the workflow for the verification of the cug translation in a given protein sequence is shown in figure 1b. shortly, a gene reconstruction of the query protein in the selected species is performed with webscipio  <cit> . optionally, the gene reconstruction can be performed with less stringent parameters, which include relaxed values for the parameters --minimal identity, −-maximal mismatches and --minimal score to allow prediction of less similar genes. this option is very useful if the respective query gene has not been derived from one of the reference species but a closely related one. the coding dna obtained from the gene reconstruction is re-translated into protein sequence using the translation scheme of the selected species, which is already implemented in webscipio.

for the translation of a provided mrna into protein, the mrna is first split into codons, which are then translated using the specified translation scheme. extra nucleotides are ignored.

identification and annotation of the reference data
fungal actin and actin-related proteins, dynactin proteins, myosins, kinesins, dynein heavy chains, tubulins, actin-capping proteins capz, coronins and wasp homologs have been extracted from previously published datasets . the sequences were updated based on newer genome assemblies if necessary. the reference data for the other proteins and the species not included in the published datasets have essentially been obtained as described in  <cit> . shortly, the corresponding genes have been identified in tblastn searches starting with the respective protein sequence of homologs of saccharomyces cerevisiae. the respective genomic regions were submitted to augustus  <cit>  to obtain gene predictions. however, feature sets are only available for a few species of the saccharomycetes clade. therefore, all hits were subsequently manually analysed at the genomic dna level. when necessary, gene predictions were corrected by comparison with the homologs already included in the multiple sequence alignments.

reference trnacag genes were predicted with trnascan-se in  <dig> yeast species. intron regions were removed and trnas aligned manually.

all sequence related data  and references to genome sequencing centres are available at cymobase . a list of the reference species and their abbreviations as used in the alignments and trees, as well as anamorph and alternative names can be accessed through the web server and as additional file  <dig>  additional file  <dig> also includes references to published genomes, and detailed information and acknowledgments of the respective sequencing centres. all gene structures for the reference dataset have been reconstructed with scipio/webscipio  <cit> .

RESULTS
the first step in gene annotation is gene prediction, which can be done in a genome-wide scan or for single genes. many gene prediction programs allow using different codon translation tables, but this option is not available in most of the gene prediction web interfaces. even then, it would require the user to know a priori, whether the target organism belongs to the species not using the standard codon table. especially the yeasts are confusing, as the “candida” species are well known to use the aycu in contrast to saccharomyces cerevisiae. but this has only been shown for a few candida species, including some of the most pathogenic, and many yeast species are called candida although there is no monophyletic “candida clade”. codon decoding schemes cannot unambiguously be derived from single-gene studies because the respective gene might not contain the codon in question at all, or the respective amino acids are not at meaningful positions. meaningful positions would be those that are strongly conserved in evolution and therefore in the core of the proteins or at conserved binding interfaces at the surface. in the course of our continuous efforts in identifying and annotating cytoskeletal and motor proteins  we have already assembled and annotated  <dig> sequences from  <dig> protein families in  <dig> yeast species. some of the data has already been used to evaluate the cug encoding in  <dig> completely sequenced yeasts . here, these data are used as reference dataset in a pipeline for the prediction of the cug codon translation, which can be accessed by users through a web interface.

the reference data
currently, cymobase  <cit> , a database for manually assembled and annotated cytoskeletal and motor proteins, contains  <dig> protein families with annotated proteins in  <dig> yeast species. all sub-families of these protein families, like for example the α-, β-, and γ-tubulins, already existed in the last common ancestor of the opisthokonts or even the eukaryotes and are therefore treated as independent proteins. not all protein families in cymobase have been analysed at the same depth, e.g. only two dynein light-intermediate chain proteins are available yet. also, some sub-families like the class- <dig> myosins or the class- <dig> kinesins are only present in early diverging yeast species and not in e.g. candida albicans or saccharomyces cerevisiae. these proteins do not provide the necessary statistical basis and taxonomic sampling for a cug prediction and were not included in the bagheera reference data. bagheera’s reference data thus consists of  <dig> protein families  comprising  <dig> sequences. these data will increase in the future in the course of our continuous efforts in annotating cytoskeletal and motor proteins. most of the reference proteins are considerably longer then the average yeast proteins like for example the myosins  and the dynein heavy chain proteins , and the reference data therefore comprises significantly more data than the sole numbers of proteins and sequences might implicate .

the web interface
great attention has been paid to a versatile yet easy to use web interface . we think that accessibility and high quality representation is key to a productive usage of the system. bagheera offers possibilities to analyse large-scale, whole genome and transcriptome assembly data, and to determine the correct cug translation for any single cdna or protein sequence.figure  <dig> 
screenshot of the web interface. the web interface is divided into three main parts: data upload and options section, results section, and phylogenetic tree section . a) example data were uploaded and processed with default parameters. b) the results section is split into a summary and a section listing each reference protein and a detailed analysis of each predicted protein down to single cug codons. for every reference protein, the predicted gene and, if applicable, the respective cug positions are shown. for every predicted cug position, which could be mapped onto the reference data, the amino acid composition and cug codon usage at the respective positions in the reference data are listed. the predicted actin related protein class  <dig>  contains one cug at position  <dig>  this position corresponds to alignment position  <dig> in the reference alignment. it is here indicated by a black box. all cug codons are noted as leucine in the predicted sequence, regardless the suggested codon usage.



regarding the prediction of the most probable cug translation in large-scale data, bagheera does the following: i) the user provides genomic data, e.g. a genome assembly, transcriptome assembly or long-read est data, or data from single to multiple gene analyses. ii) the tool predicts cytoskeletal and motor proteins and aligns the predicted sequences to the respective protein families. iii) the respective positions of the cug codons of the predicted sequences are compared to the reference data. iv) the tool predicts trnacag and performs a sequence similarity search and sequence alignment with reference leu-trnacag and ser-trnacag genes.

the verification of the translation of a single sequence depends on the provided sequence. the translation of a given cdna sequence is done as follows: i) the user provides an mrna sequence and specifies the translation scheme. ii) the tool translates the mrna into protein. for any given protein sequence the workflow is: i) the user provides a protein sequence and specifies the corresponding species. ii) the tool performs a gene reconstruction for the protein with webscipio and re-translates the coding regions using the corresponding cug translation scheme as provided by webscipio. iii) cug translations in the user-provided protein are compared to translations in the re-translated.

care has to be taken when using transcriptome assembly or long-read est data as input. transcriptome data do not represent all coding regions of a species, which might lead to wrong assignment of predicted proteins to the reference data. for example, actin and the actin-related proteins are closely related, or the α-, β-, and γ-tubulins, or the members of the other multi-gene protein families. in the case that only actin genes are present in the transcriptome data these would be identified as closest homologs and aligned to all of the actin-related proteins of the reference data. while key residues for folding and atp-binding are of course conserved between actin and all actin-related proteins, residues in loop regions are less or not at all conserved. within the same sub-family these regions could also contain valuable information, because loops might be conserved within the entire sub-family. by aligning proteins from different sub-families this information might at best be lost or in the worst case even lead to contradicting results.

in the first step of the prediction pipeline, homologs to the proteins of the reference data need to be identified. here, one gene is predicted for every protein family present in the reference data using tblastn  <cit>  and augustus-ppx  <cit> . we choose blast as search algorithm because it is very fast and not as restrictive in terms of sequence homology as for example blat  <cit> . to optimize the search and subsequent gene prediction the user can select one of the augustus feature sets, which contain species-optimized parameters and are available for a number of yeast species. the reference proteins used in the blast search are taken from the species, which had been selected for the augustus prediction. in most cases, the blast hits do not cover the entire genes but miss the n- and c-termini, and low complexity regions. in the latter case and in the case that genes are split into several exons, the search results in several blast hits belonging to the same gene. these partial hits are combined and extended in the 5' and 3' direction because augustus gene predictions are significantly better when intergenic regions are included in the genomic regions.

prediction of the cug codon translation
in the second step, the most probable codon usage in the predicted sequences is determined. to this end, the predicted sequences are aligned to the multiple sequence alignments of the respective protein families or, optionally, only to the reference sequence, which has been used in the blast search. we choose mafft  <cit>  as default alignment method, because it allows adding a new sequence to an already existing multiple sequence alignment. based on these alignments two features are analysed: cug position and amino acid conservation. the reference data contains  <dig> known cug codons , and it is determined whether cug codons in the query data match cug codons in the reference data. in addition, the amino acid compositions at alignment positions, where the query data contain cugs, are determined. the usage of reference genes and their encoding of cug codons are restricted to completely assembled genes, while the reference amino acid composition is also calculated on basis of incompletely assembled genes. based on these data, the most probable codon usage for every cug codon is predicted. here, the encoding of cug codons in the reference data as leucine and the presence of hydrophobic amino acids  at the respective alignment position are taken as indicator for the standard codon usage while cug codons encoding serine and a preference for the polar and small amino acids serine, threonine, cysteine, and alanine are taken as indicator for the yeast alternative codon usage. however, the predictive power of the cug positions is not equal. positions important for protein folding, which are usually in the core of the proteins, and those important for protein interactions and ligand binding have a higher significance as those in loop regions at the protein surface. therefore, we provide separate evaluations for the cug codon position conservation and the amino acid similarity at cug codon positions in the alignment. by analysing the genomes of yeast species with known cug translation schemes, yarrowia lipolytica, candida glabrata and saccharomyces cerevisiae using the standard code, and candida albicans, debaryomyces hansenii and lodderomyces elongisporus using the aycu, we found out that a simple majority rule is sufficient to predict the cug codon translation scheme. therefore, whatever the majority of the reference data is at a given cug codon position, this will count for either the standard or the aycu. as a third option, the result is termed ambiguous or indiscriminative if the majority of the residues at cug codon positions do not belong to either large hydrophobic residues  or small polar residues . the proposed cug codon translation for the query sequence  will be given for every single reference protein and in summary for all reference data.figure  <dig> 
number of cug codons in the reference data. the total number of cug positions for every set of reference proteins is shown together with the numbers of cug positions conserved in at least two and five genes. to account for different protein lengths , the total number of cug positions per  <dig>  amino acids is also plotted showing that cug codons are not particularly enriched in certain protein families. values for all species using standard codon usage  are contrasted with those for all species using alternative yeast codon usage . detailed numbers are available in additional file  <dig> 



prediction of the trnacag
independent support for the proposed translation scheme is provided by trna prediction, which is performed with trnascan-se. subsequently, a blast search against reference leu-trnacag and ser-trnacag genes indicates the most probable identity of the trnacag in the query data. in addition, the predicted trnacag is aligned with the reference data for visual inspection.

translation check
any given protein sequence can be checked for correct translation of cug codons. this is an important option for all users who obtained protein sequences from databases, which did not resolve the codon translation yet. for example, at species genome project homepages gene annotations are often provided with non-uniform translations. all cug codons are highlighted, differences between the correct and the given translation are indicated. if the given translation is partially incorrect, the correctly translated protein sequence can be downloaded in fasta-format.

case study
as example for the usability of bagheera we choose candida bracarensis, candida castellii, candida maltosa, candida nivariensis, nakaseomyces bacillisporus, and nakaseomyces delphensis because these are not yet included in cymobase's reference data . the genome assemblies were obtained from ncbi and uploaded into bagheera. at ncbi, c.bracarensis and c.nivariensis are still grouped to the candida branch  although a recent whole genome analysis showed their close homology to candida glabrata, which belongs to the saccharomycetaceae <cit> . therefore, we selected the "candida albicans" feature set for c.maltosa and the "saccharomyces cerevisiae" feature set for the other species for the gene prediction with augustus. in all six genomes, homologs of almost all of the  <dig> reference proteins from candida albicans and saccharomyces cerevisiae were predicted  supporting the completeness of the genome assemblies and similarity between the species. for c.maltosa  <dig> cug codons were identified in  <dig> proteins, which is in agreement with the average number of cug codons in the ctg clade . accordingly, the genes of c.bracarensis, c.castellii, c.nivariensis, n.bacillisporus, and n.delphensis contain slightly more cug codons . in all five saccharomycetaceae, about 75% of the cug positions are conserved within the reference data. in c.maltosa about 50% of the cug positions are conserved. together, these data propose the aycu for c.maltosa and the standard translation table for c.bracarensis, c.castellii, c.nivariensis, n.bacillisporus, and n.delphensis. aycu for c.maltosa has already been shown  <cit> .table  <dig> 
details of the cug codon prediction in the genomes of six yeast species



candida bracarensis cbs 10154

candida castellii cbs 4332

candida maltosa xu316

candida nivariensis cbs 9983

nakaseomyces bacillisporus cbs 7720

nakaseomyces delphensis cbs 2170


limits of bagheera
possible limits of the tool might be that the query genes do not contain cug codons and that the database contains only  <dig> protein families with  <dig> independent proteins. however, the proteins of most families of the reference data, e.g. myosins and dyneins, are very long and every of these proteins contains at least a few cug codons . a whole genome sequence analyse will therefore always provide enough data for unambiguous assignment of the codon usage. actins and tubulins also belong to the most widely used proteins for species phylogenies  and because of their high abundance in the cell it is highly likely that they are included in transcriptome assembly data and small-scale analyses. although the presence of a leu-trnacag or ser-trnacag gene is a very strong indication for the standard or aycu, these genes are often not present in the genomes  or might contain extremely long introns of more than  <dig> nucleotides hindering their identification and prediction.

CONCLUSIONS
with this software we demonstrated that the most probable codon translation scheme for a given yeast genome can be determined by predicting motor and cytoskeletal proteins and comparing them to reference data. in total,  <dig> sequences from  <dig> proteins belonging to  <dig> yeast species were included in the reference data providing a two-fold basis for the prediction of the most probable translation scheme: the amino acid composition at cug positions and the conservation of cug positions. the presence of hydrophobic amino acids in the reference data suggests the translation of the predicted cug codons as leucine, while polar and small amino acids suggest their translation as serine. in addition, matching of cug codons in the predicted genes with cug codons in the reference data provides further support for the standard or alternative yeast codon usage. this information was implemented into a cug codon prediction pipeline accessible via a web server called bagheera. the predictive power of this implementation was demonstrated by a case study of the genomes of six saccharomycetes species. in addition, the webserver offers the possibility to verify the translation of the cug codons in any given protein sequence. moreover, the webserver can be used as reference for the translation scheme used by individual yeast species.

availability and requirements
project name: bagheera – predicting cug codon translation in yeasts

project home page:http://www.motorprotein.de/bagheera

operating system: platform independent

programming language: ruby

other requirements: the current version of bagheera has extensively been tested with firefox version  <dig> or higher with javascript enabled, but should run on all modern browsers.

licence: the source code for the web application and a command line tool can be obtained upon request and used under a creative commons license.

any restrictions to use by non-academics: no.

electronic supplementary material
additional file 1: list of reference species. this file contains a table with detailed information about the species, including teleomorph, anamorph and alternative scientific names, the species abbreviations as used throughout the web server, credits for the sequencing centres, and references to published genome analyses. in addition, the number of genes obtained from cymobase is listed. 

 additional file 2: cug codon positions and amino acid composition of the reference data. this table lists the cug codon positions and the amino acid composition at respective alignment positions for every reference protein. the data are separated into two different sheets. in the first sheet, the positions of cug codons are listed for every reference gene. the amino acid composition at every cug position is included in the second sheet. 

 additional file 3: number of cug positions in the reference data and their conservation. the table lists the number of cug positions within each set of reference proteins in total counts and normalized to the protein lengths. in addition, the numbers of conserved cug positions in at least two and five genes are given. the data are separated by reference species encoding cug as leucine  and serine . these values are plotted in figure  <dig>  

 competing interests

the authors declare that they have no competing interests.

authors' contributions

sm and mk specified the requirements from a user’s perspective, defined the rules for data handling, and collected all the reference data. sm did the technical design and the programming. mk and sm wrote the manuscript. both authors read and approved the final manuscript.

