BACKGROUND
in a reductive way, computational biology is often assimilated to the study of genomes, genetic networks, or other subjects at intra-host level. in this field, a deep insight has been reached in phylogenetic reconstructions for instance  <cit> . however, oddly enough, computational biology is rarely associated with the study of larger systems such as ecosystem dynamics. more specifically, despite a huge amount of mathematical models which increasing complexity, little work has been done in computational biology to understand the transmission of disease agents in natural populations and communities of hosts. in the current context of disease emergence  <cit> , computational modeling could become the tool of choice for dissecting the complexity of mechanisms that can be at work to produce disease outbreaks.

so far, mathematical models have been mainly used for epidemiological modeling. the prolific development of mathematical models has been mostly caused by the existence of a standard model, the so-called sir  model. this "toy" model has been extensively studied and applied  <cit>  and it has proved to be particularly accurate for many different biological questions, both in epidemiology  <cit>  and evolution  <cit> . the strength of this model relies on its adaptability  <cit>  and simplicity of formulation, despite its current complexity in generated patterns  <cit> .

spatial modeling suffers of a dramatic lack of this type of reference models except for directly-transmitted diseases. these diseases, where pathogens are transmitted between individuals by close contacts, can be spatially analyzed using an implicit standard model based on cellular automata  <cit> . some more complex models exist for avian influenza  <cit> , but they have been done in a prospective way. other kinds of diseases have been poorly studied in a spatial context, especially vector-borne diseases. these pathogens are transmitted between reservoir individuals, which are generally vertebrate hosts, by the bite of one vector individual, which is generally an haematophagous insect, such as a tick or a mosquito. despite an huge literature in a non-spatial context  <cit> , spatial models are rare for vector-borne disease  <cit> . however, these models, built upon the framework of cellular automata, involve very simple systems with only one vector and one reservoir species, when typically vector-borne diseases can locally involve several vector and reservoir species  <cit> . hence, current approaches, i.e. mathematical modeling or cellular automata modeling, seems to be unable to study vector-borne diseases with a large host spectra within an heterogeneous environment. we thus develop a spatial model, based upon the framework of multi-agent systems  <cit> , for multi-host vector-borne diseases in realistic environments.

four main categories of spatial models can be distinguished  <cit> , depending on the kind of tools used and the biological questions considered. the first one is the reaction-diffusion system that is based on physical processes, and has been mainly used for vector-borne diseases and more specifically for vector spreading  <cit> . it assumes a continuous diffusion of vectors but it is likely to be not the most suitable for realistic environments. the second is a model based on the network theory  <cit> . this theory has supported studies on the impact of transport networks in disease dynamics  <cit>  and focuses on the properties of the network studied. the third method is based on metapopulation theory  <cit> . this conceptual framework has been widely used for the study of spatio-temporal dynamics of infectious diseases, especially childhood diseases  <cit> . however, despite that this theory has been widely applied in conceptual frameworks, it focuses mainly on a nation-wide scale  <cit>  or at least on large-surface areas. the last available tools are multi-agent systems  <cit> , that are based on cellular automata  <cit> , but that are applied in a more "cognitive" way. boundaries between multi-agent and cellular automata often seem mostly philosophical and semantic. an extensive literature on multi-agent systems exists, especially in social sciences  <cit>  and ecology  <cit> . in epidemiology, despite some individual-based models for directly-transmitted diseases  <cit> , multi-agent systems have not yet been used to study vector-borne disease dynamics in spatial contexts.

here, we describe a simple and robust multi-agent model which can be easily extended to the study of more complex situations. then, we show three extensions of our model in the section "examples of adaptability". the first one is the possibility to integrate a real landscape derived from a geographical information system  software. since this kind of input often requires highly-intensive computing, we have then developed a parallel version of our model. finally, we show how the evolutionary dynamics dimension of host-parasite systems can be integrated into our model.

methods
philosophy of this model
earlier individual-based systems  <cit>  were quite complex and used the computational framework to produce very complicated models. the main target of these models was to make predictions about possible future dynamics of a given disease. we followed a totally different approach in order to build a very simple model, and in this paper we will:  give a clear and detailed description of our simple spatial model to be used as a "reference" for vector-borne diseases,  define the core mechanisms of vector-borne diseases in a spatial context that, hopefully, will be used as reference for future studies  and  explain how this model could be easily adapted to other disease situations. the theoretical analysis putted in the supplementary informations has been done with an high  value of pathogen transmission to allow us an analysis without an huge number of host individuals, both vectors and reservoirs.

our epidemiological framework was inspired by the classical model proposed first by kermarck and mck-endrick  <cit>  and most popularized by anderson and may  <cit> . accordingly, we classified the two types of hosts, i.e. vectors and reservoirs, involved in disease transmission into four categories. individuals are born in a "susceptible", not infected, state. upon infection, individuals become "infected", but at this stage they are unable to infect other hosts. then, after a given "latency period", those individuals become "infectious" and can infect other subjects. finally, after an "infectious period", individuals become "recovered" and they are immune against the disease agent, with the exception of vector individuals which remain infectious until their death  <cit> . however, some vector-borne pathogen, like plasmodium falciparum, could develop an immunity in mosquito species. to remove this limitation, an adaptation of "step" function is needed. we assume that an immunity is developed into reservoir individuals despite that some pathogens do not lead to immunity for reservoir individuals  <cit> . to remove this immunity, the field "infectious period" could be filled with zero. it is important to note that this model has been developed to study, in its current form, a virus transmitted by mosquitoes species. however, our model is easily adaptable for other kind of vector-borne diseases as we discuss for different assumptions.

this model could be analyzed in both ways :  a conceptual way to study, for instance, the structure of spatio-temporal dynamics of vector-borne diseases and  an applied way by integrating real data, from a gis for instance, which allow us to track, and eventually to predict, the spatio-temporal dynamics of a given disease in a given environment, like west nile fever in southern france for instance.

from an ecological point of view, the present model is supported by a strong theoretical and empirical framework  <cit> . we assumed that host species were distributed spatially and clustered within different specific ecological habitats. hence, host species within a habitat could not leave their original habitat except within a given range of tolerance value. this important parameter will be further developed, especially in additional file  <dig>  section  <dig> .

we developed this model in order to be able to study dynamics of vector-borne diseases when multiple host species are involved ; however it might also be applied to assess other scientific questions with similar objectives.

components of the multi-agent system
we used an oriented-object approach in which a "class" is an abstract pattern of a physical representation and an "object" an instance of a class. each class could be linked to other classes by "attributes", which represent the properties of a class, or by "methods", which represent the different functions applicable to each object. our model was implemented with the support of the swarm platform  <cit>  and was developed in java language.

the structure of our model, i.e. the relationships among classes, is described in figure  <dig>  this uml  modeling shows the different parts of our model. a "host", which could be a vector or a reservoir individual, can host one "parasite" agent. all "host" objects are contained within a "world" object, which comprises the computing representation of that physical world. "parasite" agents are also contained within this "world" object. all these parts, and the most important functions and attributes used, will be detailed hereafter.

parasite
the "parasite" class includes different characteristics related only to the disease agent and the illness, such as "infectious period", "latency period" and "virulence". these features can be applied to both vector and reservoir species individuals. since disease characteristics are in reality a by-product of host and parasite life history-traits, this simplification leads to some limitations of the model, as we assume that parasite characteristics are exactly identical within vectors and reservoirs species. this approximation is acceptable for diseases with multiple vector and reservoir species if parasite's influences are similar among the different host species  <cit> . however, this approximation needs to be reduced if we want to address disease transmission by different strains of a given parasite. since the main goal of the current work is to deal with a simple disease system without evolutionary dynamics, this issue will be discussed in the final "examples of adaptability" section.

host
the "host" class is the most important class in our model and has different groups of attributes. the first one concerns the geographic localization of individuals. hence, host contains "x and "y" attributes that represent its geographical localization. for update purposes, we added also the "future x" and "future y" attributes, which contain future positions of a given host individual. these attributes will be dynamically updated over time. the second group concerns species characteristics that do not change over time. within this group, we can distinguish ecological life-history traits, such as "offspring size", "lifespan" and "biting rate", and spatial features, such as "moving capacity" and "habitat tolerance". "moving capacity" represents the area in pixels in which one host is allowed to move, and "habitat tolerance", a core parameter of our model, quantifies for each host species how far, in pixels, one host is allowed to diffuse outside its original habitat. to distinguish between vector and reservoir individuals, the "biting rate" attribute will be equal to "-1" for reservoir individuals and to the corresponding biting rate for vectors. this attribute is assumed to be constant for mosquito-borne pathogens, but it could evolve dynamically for tick-borne disease regarding the abundance of reservoir hosts involved. to study this kind of vector-borne pathogen, this attribute have to be replaced by a function involving the reservoir abundance.

we could have distinguished two different "vector" and "reservoir" classes which inherit from the "host" class. however, we think that new classes inheriting from a super-class should be created only in the presence of certain conditions. the first case is when the number of inheriting classes is high or could be high. this is clearly not our case since only two classes are definitively needed. the second case is when the number of functions, which have to be inherited from a super-class, is high. in our case, only the function "recovering" would have to be developed differently and the function "move" partly in a different way. moreover, many functions of the "model swarm" class use general properties of the host and do not need to know whether a given individual is a vector or a reservoir. therefore, we chose to integrate "vector" and "reservoir" particularities into a single "host" class.

finally, the "index habitat" and "index species" attributes are used for computational purposes. these different characteristics will be the same among all individuals within a given host species. however, a given "index species" could have links with different "index habitats" . as already said for the "parasite" class, host reactions  against the parasite are not considered here, and all host-parasite interactions are accepted as being static in the "parasite" class but not for the "competence" parameter. this parameter is integrated into the "host" class and represents the probability for a host individual to become "infectious" after a contact with an "infectious" individual.

landscape of habitats
finally, landscape will be simply an array with the size of the virtual world. this array will be contained into a class, "model swarm", which contains different functions that impact on the landscape. this is an array of integer values that correspond to indexes of habitats that will be linked to the host's "index habitat" attribute. thus, with these two parameters, we can characterize the whole spatial distribution of the host species, and will be able to address any landscape configuration. this array could be assimilated to a picture that describes the category of habitats occurring at each pixel.

dynamical interactions between components
so far we have defined the static part of our model. now we need to address the dynamic interactions among all these attributes. indeed, each object will interact with all the others both in space and time using simple dynamical functions. to keep our model as simple as possible, we have modeled only three functions that are scheduled by a main algorithm and are implemented in the "host" class.

host with landscape: moving function
there are two options in the moving function. the first one is a basic type of movement and each individual has a given "moving capacity" that will allow that subject to move from its initial position to  * 2) <dig> new locations. at each time step, a new position will be randomly selected. if it is not within the individual's habitat , the nearest position into the habitat will be then selected. we begin with movement with a square, but this function could be easily modified to take into account different behaviors.

the other option concerns only the vectors. each vector individual has a "biting rate" which is converted into the probability of biting at each time step and is equal to 1/bitingrate when "biting rate" is expressed with the time step used in simulations. when this event is selected, the number of available reservoir individuals in  * 2) <dig> possible positions is computed. a reservoir individual is then chosen randomly from a uniform distribution, and the vector will move to this selected position and bite the chosen reservoir individual for a potential transmission between vector and reservoir.

host with parasite: infection function
potential infection is the second function, and it could be involved at each time step. each individual, both from vector and reservoir species, has a "competence" value, which represents the probability that an individual becomes infectious after an infectious contact. hence, a random number will be generated according to a uniform law and, if this number is inferior to the "competence value", the "next parasite" field receives a "parasite" input. at each time step, "current parasite" has a 1/latencyperiod probability to receive the "next parasite" object if this object is not null. if successful, "next parasite" will receive a "null" value. similarly, at each time step, "past parasite" has a 1/infectiousperiod probability to receive a "current parasite" object. hence, the "next parasite", "current parasite" and "past parasite" fields will determine the infectious status as follows:  if the three fields are "null", that individual is in the "susceptible" status;  if "next parasite" is not null and the others are null, that subject is "infected", but not infectious  if "current parasite" is not null and the others are null, the individual is "infectious" and can transmit the disease agent, and finally  when "past parasite" is not null and the others are null, the individual is "recovered" and can not be infected again.

host: birth and death functions
the last important functions concern demography. each individual from a same species has an "offspring size" mean which represents the number of new hosts created at each birth event. to simplify, we assume that each "host" object has, on average, only one birth event during its life. hence, at each time step, there is a 1/lifespan probability that new "offspring size" "host" objects will be created for each individual. in the same way, individuals die with a probability equals to 1/lifespan at each time step. to keep our populations constant, as we assumed in the rest of this paper, we set "offspring size" to one. thus, on average, each host will produce one new host before its death. this assumption could be easily relaxed by adding a specific attribute representing a birth rate, which could be also a function to cope with dynamical demography.

main algorithm
finally, each individual has a main algorithm which schedules all the previously described different functions. this algorithm is split in two main functions: "step" and "update". the "step" function is called first. in this function, the "move" function will be applied for both vectors and reservoirs. for vector individuals, a search of available reservoir hosts will be launched only if the event "bite" is selected. only three fields can be modified during this function: "future x", "future y", and "next parasite". after "step" is done for all host individuals, the "update" function is applied to each individual. the "x" and "y" fields are filled by "future x" and "future y" respectively, the "current parasite" field by the "future parasite" value with a 1/latencyperiod probability. the "past parasite" field is filled by the "current parasite" value with a 1/infectiousperiod probability, and birth and death functions are called with 1/lifespan probability.

all functions are detailed in the pseudo-code shown in additional file  <dig>  section  <dig>  all objects re filled from relevant case-studies. data format is explained in additional file  <dig>  section  <dig>  the most important point of the data format features remains its capacity to quantify for each habitat a different moving capacity for each vector and reservoir species, leading to the integration of heterogeneous environments. all parameters used in this model are summarized in table  <dig> 

RESULTS
adaptability examples: outcomes for modifying system studied
to simplify the identification and modeling of the core mechanisms of our system, we have chosen a simple epidemiological context with only one vector species and one  reservoir species in a landscape with some classes. however the main idea of our model is to be as general as possible. hence, we developed the possibility to integrate real data coming from real epidemiological situations. in this section, we propose three main  additions to our basic model. the first one concerns the integration of maps from the geographical information system . this integration allows future studies to integrate real landscapes and to analyze how a pathogen agent can be transmitted within that landscape. however, often, landscapes from gis require very high resolution that could make impossible the computability of our model. to overcome this problem, we have integrated the implementation of a parallel behavior that transforms our model into a client/server software and allows us to distribute host objects to several computers. thus, the computability of our model will only depend on the number of available computers. parallelization makes our model suitable to be used to study disease transmission in really complex environments, and for that reason we can integrate also the last extension which concerns evolutionary dynamics. with the help of these three easy to implement additions, our model becomes a very adaptable tool for the analysis of a wide range of ecological and epidemiological situations.

integration of data from a gis
the way our model has been constructed allows data integration without additional developments. moreover, as most of the gis software integrate an output in raster format, we could fill in our habitats, which represent the "virtual world", with the values contained in the gis output file. this output should indicate values, in terms of habitat classification, for each pixel. then, as a last step, we would associate each habitat to each vector and reservoir species involved in our landscape.

outcomes for intensive computing: parallelization
when the number of individuals increases too much or when the space to be modeled is too detailed, like in the case of high-resolution maps, computing resources become quickly the limiting factor. to address this issue, we present here a parallel version of our model. this is a first version of parallelization which involves communication between different computers and does not accept a "resume" of the current simulation. thus different computers can be easily replaced by other chipsets just by substituting communication via "socket"  by communication via internal memory. the introduction of a "resume" function in a future version of our model should integrate also a better management of unexpected events. similarly, implementing different moving behaviors requires to adapt the parallelization algorithm.

this parallelization is quite simple and is based on a classical multi-thread client/server model. as all operations to access the "virtual world" are done by different functions in the "model swarm mother" class, we extended our model to two new classes which inherited from the first one .

in the "model swarm client" class, each client contains a given number of individuals. these clients have also one thread to receive requests from the server. there are four synchronization messages for clients :  "go step", which indicates that the client can launch the "step" function for each individual ;  "end step" which is sent by the client to alert the server when all its individuals have completed the "step" function ;  "go update" which is received by the client to launch the "update" function for all its individuals and  "end update" which is sent by the client to indicate to the server that a given time step is completed for that client.

in the "model swarm server" class, upon loading of a gis file, each new individual is assigned to the less busy client . afterward, a thread is created for communication with each client using the described synchronization messages. when clients need to know some characteristics about one neighboring host or about the habitat value of a given pixel, the server receives a message indicating which value is wanted. a communication protocol has been developed and it is described in additional file  <dig>  section  <dig> 

this implementation underlines the capacity of an oriented-object program. indeed, the "model swarm alone" class is used in the case of a non-parallel model. this class inherits from the "model swarm mother" class and it is filled only with "virtual functions" that allow accessing the virtual world or managing task scheduling. these virtual functions will be developed differently for a stand-alone execution, a server execution or a client execution. in this way, we know that the model behavior has not been modified upon parallelization because it is implemented in the host class and only functions of scheduling and space access can be modified in the parallel version.

integration of evolutionary dynamics
so far, evolutionary dynamics of host-parasite interactions in real landscapes have been poorly studied. however, our model could easily cope with this additional complexity. to integrate evolutionary insights, we have to relax the assumption that all disease characteristics are contained in the "parasite" class. therefore, we have to model the infection process as a by-product between the host and the parasite. to do that, we have integrated the theoretical framework proposed by girvan and collaborators  <cit>  to study pathogen evolution. accordingly, we represented the pathogen and host genomes as binary strings  with a length n for the pathogen genome and with a longer string for the host genome. we then computed the hamming's distance between the two strings to measure the adequation between host and pathogen, and hence the probability of infection. if we then integrate a mutation rate to the pathogen's genome, applied at each new infection, we can also study the evolutionary dynamics of pathogens in space and time. finally, if we apply also a mutation rate to the host's genome at each new birth, we can analyze the co-evolutionary dynamics as well. this last extension shows once again the adaptability of our model. just by modifying the "infection" function and with a conceptual representation of the host and parasite genomes, we can analyze a wide range of evolutionary dynamics in space and time, for and within different vector and reservoir species in a real landscape.

CONCLUSIONS
the model we describe in this paper is one of the simplest for vector-borne diseases. this simplicity, which leads to a model comparable to the classical seir stochastic model, allows us to analyze the core mechanisms involved in the spatial features of vector-borne disease dynamics. the analysis of these spatial features  show that the spatio-temporal dynamics of vector species are a crucial factor for disease understanding. moreover, to decrease the intensity of disease transmission, a drastic reduction of vectors' moving capacity has to be applied to produce a significant effect on disease patterns.

the high flexibility of our model allowed us to easily integrate data coming from gis, thus moving away from theoretical studies to handle real-life situations. however, since real situations need often high-resolution gis, we have developed a parallel version of our model to cope with all kinds of epidemiological situations. finally, to strengthen our model's adaptability, we integrated a simple way to study evolutionary and co-evolutionary dynamics.

of course, our model is not the "magic model" that could be used to model anything, any time and anywhere. nevertheless, the dramatic increase of vector-borne diseases  <cit> , such west nile fever, lyme disease, chickungunya or others, strongly justifies the generation of this kind of models for a better understanding of complex-system diseases. these theoretical developments have to be continued to fully appreciate the overall impact of spatial features on disease dynamics.

other spatial modeling methods could be applied as well. the most used model in vector-borne diseases is the reaction-diffusion framework that is really attractive for simple cases. however, when landscape is highly fragmented and the diversity of local habitats could impact on the moving capacity of vector species, tractability of this model could become a problem. moreover, if the disease studied involves several vector and reservoir species, the number of equations then becomes a critical issue. this limitation also exists for the metapopulation and network models. hence, the most generic model is probably represented by an individual-based model such as the one we have developed in the present work.

our main goal is to provide a generic and highly customizable model for vector-borne diseases. its structure could be applied on a wide range of vector-borne disease, but the different functions and attributes have to be updated to study specific cases. but our model opens new opportunities for the study of infectious diseases. as mathematical epidemiology builds on seir framework, we hope that our study has underlined how computational biology could be also well applied to the study of vector-borne diseases. our model, freely accessible on  under gpl license, is proposed as a first standard version. this model could, and should, be improved to increase the interest in the study of spatio-temporal dynamics of vector-borne diseases in realistic situations.

availability and requirements
project name: tinain

project home page: 

operating system: platform independent

programming language: java

other requirements: swarm platform 

license: gnu gpl

authors' contributions
br participated to study conception, carried out the model programming, carried out the analysis of the model and drafted the manuscript. jfg participated to study conception and improved the manuscript. fb participated to study conception, model analysis and improved the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary informations. biological analyses explained in the main text, all algorithms of the model, procedure for input files loading and communication protocol for distributed behavior.

click here for file

 acknowledgements
we sincerely acknowledge different colleagues which reviewed this manuscript and helped to its improvement. in particular, we thank roman biek, scott duke-sylvester, leslie a. real and marc choisy for their helpful comments. br and jfg are sponsored by the institut de recherche pour le développement and the centre national de la recherche scientifique, and are supported by the eden project . this publication is catalogued by the eden steering committee as eden <dig> . the contents of this publication are the sole responsibility of the authors and don't necessarily reflect the views of the european commission. fb is sponsored by the centre international de recherche agronomique pour le développement.
