BACKGROUND
the ctls of the immune system must be able to discriminate between healthy and infected cells, since only the infected cells are to be eliminated. to facilitate the discrimination, all nucleated cells present a selection of the peptides contained in their proteins on the cell surface in complex with major histocompatibility complex class i  molecules. the course of events leading to mhc class i presentation includes the ongoing degradation of the cell's proteins by the proteasome  <cit> . a subset of the generated peptides are then transported into the endoplasmatic reticulum  by transporter associated with antigen presentation  molecules  <cit> . once inside the er, the peptides may bind to mhc class i molecules, which are subsequently transported to the cell surface, where the complexes may be recognized by passing ctls. the most restrictive step involved in antigen presentation is binding of the peptide to mhc class i. it is estimated that only  <dig> out of  <dig> peptides will bind a given mhc class i allele with sufficient strength to elicit a ctl response  <cit> . however, also proteasomal cleavage and tap transport efficiency show some degree of specificity  <cit> .

reliable predictions of immunogenic peptides can minimize the experimental effort needed to identify new epitopes to be used in, for example, vaccine design or for diagnostic purposes. we have previously described a method, netctl , which integrates the predictions of proteasomal cleavage, tap transport efficiency, and mhc class i affinity to an overall prediction of ctl epitopes  <cit> . in the following, we describe an improved version of netctl, version  <dig> . several other groups have likewise attempted to generate methods that enable ctl epitope identification. on an independent evaluation dataset of known hiv ctl epitopes, netctl- <dig>  has previously been shown to have a higher predictive performance than the publicly available syfpeithi epitope prediction method  <cit>  and the bimas hla peptide binding prediction method  <cit> . here, we compare the performance of netctl- <dig>  to four other publicly available methods, which have been described within the last few years: mappp  <cit> , which combines proteasomal cleavage predictions with mhc class i affinity predictions, and epijen  <cit> , mhc-pathway  <cit> , and wapp  <cit> , which operate with predictions of both proteasomal cleavage, tap transport efficiency, and mhc class i affinity. even for skilled scientist within the field it is not straightforward to compare the performance of the various methods, since they do not necessarily have the same output format and do not cover the same output range. in addition, many different performance measures can be applied, but not all are equally well suited for every method. it is also important to keep in mind that some performance measures are not meaningful on their own. an example of the latter is the performance measure sensitivity. in the case of finding ctl epitopes among a large number of peptides, sensitivity is defined as the number of peptides correctly predicted to be ctl epitopes  divided by the total number of ctl epitopes in the dataset . a method, which finds all ctl epitopes, has a sensitivity of  <dig>  this performance can, however, easily be achieved if the method predicts every peptide to be a ctl epitope. obviously, such a method is totally useless. in this study, we have defined a number of performance measures, which together give an objective assessment of the methods. on all measures, we find that netctl- <dig>  has a higher predictive performance than epijen, mappp, mhc-pathway, and wapp, although when comparing netctl- <dig>  with epijen and mhc-pathway, the higher predictive performance of netctl- <dig>  is not statistically significant on all measures.

RESULTS
netctl- <dig> 
netctl predicts ctl epitopes by integrating predictions of proteasomal cleavage, tap transport efficiency, and mhc class i binding  <cit> . version  <dig>  is an improvement on several accounts. firstly, it predicts epitopes restricted to the a <dig> and b <dig> supertypes thus completing the list of  <dig> recognized supertypes  <cit> . secondly, it has an improved performance as compared to the older version  <dig> . this is partly due to the use of newer methods for predicting mhc class i affinity and proteasomal cleavage. furthermore, a larger dataset has been used to deduce the optimal weights on proteasomal cleavage, tap transport efficiency, and mhc class i affinity, respectively. when testing the performance of netctl- <dig>  versus netctl- <dig>  on the independent hiv evaluation dataset consisting of  <dig> known ctl epitopes, netctl- <dig>  has an average auc  per epitope-protein pair of  <dig> , while netctl- <dig>  has an average auc per epitope-protein pair of  <dig> . this difference in predictive performance between netctl- <dig>  and netctl- <dig>  is significant at p =  <dig>  . for comparison, netmhc- <dig> no_hiv, which is the mhc class i affinity predictor used in netctl- <dig> , has an average auc per epitope-protein pair of  <dig> . the difference in predictive performance between netctl- <dig>  and netmhc- <dig> no_hiv is significant at p =  <dig>  .

comparing different methods for ctl epitope prediction by using the auc value
we wanted to compare the performance of netctl- <dig>  to that of four other publicly available ctl epitope prediction methods: epijen  <cit> , mappp  <cit> , mhc-pathway  <cit> , and wapp  <cit> . for the comparisons, we use two evaluation sets containing experimentally verified hiv ctl epitopes and their source proteins: the hiv dataset, which we compiled ourselves, contains  <dig> epitope-protein pairs restricted to all  <dig> recognized supertypes. when comparing the performance of netctl- <dig>  to that of any of the other four methods, only the subset of supertypes also covered by the test method is included. the other dataset is called hivepijen. it was taken almost in complete from  <cit>  and contains  <dig> epitopes restricted to the a <dig>  a <dig>  or a <dig> supertypes. all five methods can perform predictions for these three supertypes.

in the above section, we used the auc value to compare netctl- <dig>  to netctl- <dig>  and netmhc- <dig> no_hiv. this measure is, however, not appropriate for the epijen and wapp methods. these methods do not produce a single, combined score for each peptide in the dataset. instead, the proteasomal cleavage and tap transport predictors act as filters that reduce the number of possible epitopes. in addition, the epijen server maximally outputs the 5% peptides, which have the highest predicted mhc class i affinity and at the same time pass the proteasomal cleavage and tap transport filters. the problem is exemplified in the roc  curve shown in figure  <dig>  for netctl- <dig> , mappp, and mhc-pathway, the combined score is used as the predicted value. for epijen and wapp, we used the predicted mhc class i affinity as the predicted value. the roc curves for the two last-mentioned methods come to an abrupt stop, since there are no predicted values for peptides that do not pass the proteasomal cleavage and tap transport filters. the roc curves also highlight the need for extracting sensitivity at comparable specificity levels and vice versa in order to achieve objective benchmark comparisons between different methods: any of the methods can be assigned the highest sensitivity, if the specificity is not set at a comparable level.

the rank measure
since the auc measure is not applicable to all methods, we designed a new measure, which we call the rank measure. looking at each epitope-protein pair separately for either the hiv or hivepijen dataset, we rank all possible  <dig> mers according to the prediction score of a given method. next, we compare two methods at a time: netctl- <dig>  and one of the four test methods . again, we use the combined score as the predicted value for netctl- <dig> , mappp, and mhc-pathway, and the predicted mhc class i affinity for epijen and wapp. we then count how often netctl- <dig>  ranks the epitope higher than the test method, and vice versa. to facilitate a fair comparison to the epijen and wapp methods, where predictions are limited to a subset of the peptides, only the top n of the netctl- <dig>  predictions are included, where n is the number of peptides assigned a prediction score by the test method . all peptides without a predicted value are assigned the rank  <dig> to put them at the bottom of the rank-list. in this way, all methods are compared on an equal number of peptide data. figure  <dig> shows the results. in figure 2a, it is seen that for all comparisons, netctl- <dig>  more frequently ranks the epitope higher than any of the four test methods on the hiv dataset. the difference is significant at p <  <dig>  . in figure 2b, the results are shown for the hivepijen dataset. also here, netctl- <dig>  more frequently ranks the epitope higher than the test method. for wapp the difference is significant at p <  <dig> , while for epijen, mappp, and mhc-pathway the difference is significant at p <  <dig>  .

specificity at a predefined sensitivity
when using the default settings at the netctl- <dig> , mappp, and wapp servers, thresholds are defined that separate the predicted epitopes from the predicted non-epitopes. at the epijen server, one can choose between defining the top-scoring 5%, 4%, 3%, or 2% peptides as epitopes. mhc-pathway does as yet not offer any thresholds for separating predicted epitopes from non-epitopes. these differences pose a challenge when comparing the performance of the methods as regards to sensitivity and specificity, since it is a prerequisite for the calculation of these measures that the predicted epitopes can be separated from the non-epitopes. furthermore, as mentioned earlier, it is generally problematic to distinguish which method has the highest predictive performance, if one method has the highest sensitivity, while the other method has the highest specificity. to overcome these problems, we chose to compare the specificity of the methods at a series of predefined sensitivity values. we chose three predefined sensitivities:  <dig> ,  <dig> , and  <dig> . for the hiv dataset, we again compared two methods at a time: netctl- <dig>  and one of the four test methods, in order to include epitopes restricted to as many supertypes as possible. for the hivepijen dataset, all methods can be compared simultaneously, since all methods can predict epitopes restricted to the a <dig>  a <dig>  and a <dig> supertypes. we first identified the prediction threshold values that result in the desired sensitivity when averaging over all epitope-protein pairs. we then used the same thresholds to find the average specificity. figure  <dig> shows the results for the hiv dataset. it can be seen that netctl- <dig>  has a significantly higher specificity than epijen, mappp, and wapp at all sensitivities . when comparing netctl- <dig>  to mhc-pathway, it can be seen that at an average sensitivity of  <dig>  and  <dig>  netctl has a higher specificity than mhc-pathway although this difference is not statistically significant. at an average sensitivity of  <dig> , netctl- <dig>  has significantly higher specificity than mhc-pathway .

when using the hivepijen dataset for the analysis, netctl- <dig>  has a higher specificity than all the test methods at all sensitivities, although for epijen and mhc-pathway the difference is not statistically significant at all sensitivities .

sensitivity among the 5% top-scoring peptides
for an experimentalist who wants to find epitopes in a specific protein, it is interesting to know how many of the actual epitopes one can expect to find if testing a certain top-fraction of the peptides. for this, we calculate the sensitivity among the 5% top-scoring peptides. for the hiv dataset, we made the calculations for netctl- <dig>  and one of the four test methods at a time. for the hivepijen dataset, all methods could be compared using the same dataset, since all methods can predict epitopes restricted to the a <dig>  a <dig>  and a <dig> supertypes. table  <dig> and  <dig> show the results. table  <dig> shows that when netctl- <dig>  is compared separately to either of the test methods using the hiv dataset, netctl- <dig>  has the highest sensitivity among the 5% top-scoring peptides with sensitivity values in the range of  <dig> – <dig>  depending on the evaluation dataset. when evaluating on the hivepijen dataset  netctl- <dig>  also achieves the highest sensitivity of  <dig> . on this dataset, mappp achieves the second highest sensitivity , closely followed by mhc-pathway . epijen achieves a sensitivity of  <dig> , while wapp only achieves a sensitivity of  <dig>  among the 5% top-scoring peptides.

the hiv dataset has been used for the analysis. to be able to include epitopes restricted to as many supertypes as possible, netctl- <dig>  is compared to each of the other methods separately. for each comparison, only predictions for supertypes covered by the test method are included.

the hivepijen dataset has been used for the analysis. all methods can be compared simultaneously since this dataset only contains epitopes restricted to the a <dig>  a <dig>  or a <dig> supertypes, which all methods cover.

discussion
reliable ctl epitope predictions can minimize the experimental effort needed to identify new ctl epitopes to be used in for example vaccine design or for diagnostic purposes. tong et al.  <cit>  comments on the reports of algorithms that integrate mhc class i predictions with tap and proteasomal cleavage specificities: "these techniques are still in their infancy and need to be further developed and thoroughly tested". here, we make a first attempt to test the performance of five of these methods on two evaluation sets of experimentally verified hiv ctl epitopes. it turned out to be a highly non-trivial task to design an objective benchmark. mainly because the prediction methods each generate epitope predictions in a specific format and potentially with different mechanisms that filter the number of prediction scores made available to the user. our final performance measures consist firstly of a rank measure that allows for an objective comparison of accuracy between the different prediction methods. for comparing prediction specificity, we define three levels of prediction sensitivity, so that comparisons can be performed at equal levels. finally, we compare the sensitivity among the 5% top-scoring peptides as obtained by each method.

using the defined performance measures, we performed a large-scale benchmark calculation comparing the predictive performance of a series of publicly available methods for ctl epitope prediction. the benchmark included the epijen, mappp, wapp, and mhc-pathway methods, and an updated version of the netctl method. the updated version of netctl, version  <dig> , can make predictions for the a <dig> and b <dig> hla supertypes thus completing the list of  <dig> recognized supertypes, and was shown to have a higher predictive performance than the old version  <dig> . we find that netctl- <dig>  has a higher predictive performance than epijen, mappp, mhc-pathway, and wapp on all measures. when comparing netctl- <dig>  with mappp and wapp, the higher performance of netctl- <dig>  is statistically significant on all measures. when comparing netctl- <dig>  with epijen, the higher performance of netctl- <dig>  is statistically significant for all measures except when comparing the specificities at the sensitivity values of  <dig>  and  <dig>  on the hivepijen dataset. when comparing netctl- <dig>  with mhc-pathway, the higher performance of netctl- <dig>  is statistically significant for all measures, except when comparing the specificities at the sensitivity values of  <dig>  and  <dig>  on either evaluation dataset. it is not surprising that mhc-pathway reaches almost as high predictive performance as netctl- <dig>  on some of the performance measures. these two methods have several features in common: firstly, the mhc binding prediction methods included in the mhc-pathway and netctl prediction methods, have recently in a large scale benchmark been shown to have comparable performance  <cit> . secondly, they use identical methods for predicting tap transport efficiency; namely the matrix method developed by peters et al.  <cit> . thirdly, they integrate the predicted values obtained from the separate proteasomal cleavage, tap transport efficiency, and mhc class i affinity predictors into one combined score. regarding differences it can be mentioned that the proteasomal cleavage predictor used for mhc-pathway is trained on in vitro data, while netctl- <dig> 's proteasomal cleavage predictor, netchop- <dig> , is trained on natural mhc class i ligands.

netctl- <dig> , mappp, and mhc-pathway integrates the predicted values into one, overall score, while epijen and wapp use a number of successive filters that step by step reduce the number of possible epitopes. doytchinova et al.  <cit>  has stated that the "combined score as used by smm  and netctl, obscures the final result, because a low  tap and/or proteasomal score could be compensated for by a high mhc score." we would here like to offer our interpretation of how the combined score can be understood in a biological meaningful manner: first of all, we see the predictive values as probabilities. secondly, one has to keep in mind that there is not just one copy of a given protein in the cell. this means that if for example a certain peptide has a low predicted cleavage score and will only be generated in  <dig> out of a  <dig> cleavage events, the peptide can still survive all the way to the cell surface and become a ctl epitope, if the tap transport efficiency and mhc class i affinity are sufficiently high.

we have throughout the analysis on the hiv dataset compared netctl- <dig>  to each of the other test methods separately. this was done in order to include epitopes restricted to as many supertypes as possible. had we chosen only to include epitopes restricted to supertypes that all methods had in common, we could only have included the a <dig>  a <dig>  and a <dig> supertypes. the shortcoming of this approach is that comparisons can not be made directly in between the test methods. for comparisons in between the test methods, we refer to calculations done on the hivepijen dataset, which only contains epitopes restricted to the a <dig>  a <dig>  and a <dig> supertypes.

lastly, we would like to note that the netctl method predicts ctl epitopes that are presented via a pathway that utilizes tap for peptide entry into er. additional pathways also exist as reviewed in  <cit> . their contribution to the total presentation of mhc class i ligands is, however, thought to be minor  <cit> .

CONCLUSIONS
using objective benchmarks and standardized performance measures, we have demonstrated that netctl- <dig>  has a higher predictive performance than epijen, mappp, mhc-pathway, and wapp, although when comparing netctl- <dig>  with epijen and mhc-pathway, the higher predictive performance of netctl- <dig>  is not statistically significant on some of the measures.

the benchmark datasets are all available and downloadable from the internet. together with the detailed description on how to perform the calculations and extract the different performance measures presented here, it is our hope that other researches readily can repeat the benchmark analysis, and in an objective manner compare novel methods for ctl epitope discovery to the five methods included here.

