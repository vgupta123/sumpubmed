BACKGROUND
constraint-based analysis of metabolic networks has become increasingly important for describing and predicting the behavior of living organisms  <cit> . while a growing number of metabolic network reconstructions have become available during the last years, the computational analysis of genome-scale networks with hundreds or thousands of reactions may still be very time-consuming. therefore, there is a need for more efficient algorithms and tools .

flux coupling analysis   <cit>  is a useful method for finding dependencies between fluxes of a metabolic network at steady-state. if a non-zero flux through a reaction in steady-state implies a non-zero flux through another reaction, then the first reaction is said to be coupled to the second reaction. several studies have used fca for exploring various biological questions such as network evolution  <cit> , gene essentiality  <cit> , analysis of experimentally measured fluxes  <cit>  or gene regulation  <cit> . having a time efficient implementation of fca is important in such studies.

in the rest of this section, we first recall some basic definitions. then we briefly review the previously proposed fca methods.

mathematical definitions
basic preliminaries
for a metabolic network with m  metabolites and n reactions, the stoichiometric matrix s is an m × n matrix, where element sij is the stoichiometric coefficient of metabolite i in reaction j. we denote by r = { <dig>  ..., n} the set of reactions and by m = { <dig>  ..., m} the set of metabolites.

there are two types of reactions in a metabolic network. irr is the set of irreversible reactions which are assumed to always have non-negative flux values. rev is the set of reversible reactions which are allowed to have positive, negative or zero flux values. if a reversible reaction has a positive  flux, we say that it is working in forward  direction. splitting a reversible reaction i means making reaction i irreversible and adding one more irreversible reaction i + n to the network, which works in the backward direction. without loss of generality, we assume that in the numbering of reactions, the first |rev| reactions are the reversible ones.

if v is the vector of metabolic fluxes through all the reactions, the steady-state condition holds for v if s · v =  <dig>  the steady-state flux cone is defined as c = {v ∈ ℝn | s · v =  <dig>  vi ≥ <dig>  for all i ∈ irr}. the lineality space of c is given by lin.space = {v ∈ ℝn | s · v =  <dig>  vi =  <dig>  for all i ∈ irr}.

if for some reaction r ∈ r, vr =  <dig> for all v ∈ c, then r is called blocked, otherwise r is unblocked. the set of blocked reactions will be denoted by blk. the set of unblocked reactions can be further partitioned based on the reversibility type of reactions  <cit> . we define irev as the set of all reactions that can work only in one direction, i.e., those reactions that take only non-negative or only non-positive flux values at steady-state. if i ∈ irev and vi ≤  <dig> for all v ∈ c, one can multiply by - <dig> the i-th column of the stoichiometric matrix, such that in the modified network, we have vi ≥  <dig> for all v ∈ c. without loss of generality, we assume that all reactions in irev are operating in the forward direction.

the set of reactions that can work in both directions at steady-state is further partitioned into two subsets:  prev, the set of pseudo-irreversible reactions, and  frev, the set of fully reversible reactions. a reaction i is in prev if it can work in both directions, and additionally, for all flux vectors v in the lineality space of the flux cone, we have vi =  <dig>  accordingly, we define frev as the set of those reactions, which can work in both directions, and additionally, can have a non-zero flux value if fluxes through all irreversible reactions are set to zero.

flux coupling relations between a pair of reactions  <cit> 
consider two unblocked reactions i, j ∈ r. if for all v ∈ c, vi ≠  <dig> implies vj ≠  <dig>  then i is directionally coupled to j. this will be denoted by i → j, or equivalently, j ← i. if for all v ∈ c, vi ≠  <dig> implies vj ≠  <dig> and vice versa, then we say that i and j are partially coupled, or i ↔ j. if i and j are partially coupled, and additionally there exists a constant k such that for all v ∈ c, vi ≠  <dig> implies vj/vi = k, then i and j are fully coupled, or i ⇔ j. if neither i → j nor j → i holds, then i and j are uncoupled, or .

elementary flux patterns
the set supp = {i ∈ r | vi ≠ 0} of reactions active in v is called the support of v. suppose v ∈ c is a flux vector and a ⊆ r is a subnetwork. the flux pattern of v for a is defined as a ∩ supp, which is the set of those reactions in a which have non-zero values in v <cit> . a flux pattern is called an elementary flux pattern  if it cannot be written as the union of other flux patterns. for studying efps, kaleta et al.  <cit>  assume that the network contains only irreversible reactions. to achieve this, every reversible reaction should be split into two irreversible reactions .

approaches to flux coupling analysis
in this subsection, we briefly recall existing approaches to flux coupling analysis. for additional information and the technical details on the implementation of these algorithms, we refer to additional file  <dig> 

flux coupling finder algorithm 
the most widely used method for fca is the flux coupling finder  algorithm  <cit> . this approach is based on solving linear programs , and therefore is an optimality-based method. after finding blocked reactions and splitting reversible reactions, for every pair of unblocked reactions i and j, two lps are solved. depending on the optimal values obtained, the coupling relation between i and j is determined. there is a post-processing step in fcf. since the reversible reactions have been split, flux coupling relations for these reactions have to be obtained from the coupling relations of the corresponding irreversible forward and backward reactions.

the fcf algorithm has been successfully used for finding coupling relations in a number of metabolic networks  <cit> . however, this approach is rather time-consuming for genome-scale metabolic networks with thousands of reactions, although it is still one of the fastest fca methods.

fca based on minimal metabolic behaviors 
larhlimi and bockmayr  <cit>  have proposed a different strategy for flux coupling analysis. in this approach, a minimal set of generating vectors of the flux cone is computed. then, the coupling relation for any pair of reactions is inferred based on the co-appearance of non-zero fluxes in the generating vectors.

fca based on elementary flux patterns 
recently, kaleta et al.  <cit>  introduced the concept of elementary flux patterns  for the analysis of minimal active reactions in a "subnetwork", which account for possible steady-state flux distributions in a  larger metabolic network. they also presented a method based on mixed-integer linear programming  to compute efps. kaleta et al. suggested that efps can be used for characterizing flux coupling relations . consider a subnetwork including two unblocked reactions i and j. if each of these reactions can have a non-zero flux independently of the other , {i} and {j} are the only efps in this subnetwork. on the other hand, if we assume  that i is directionally coupled to j, then the efps of this subnetwork are {i, j} and {j}. finally, if the reactions are partially coupled, we will have only one efp, which is {i, j}. with this method, it is not possible to distinguish between partial and full coupling, since flux patterns only contain the information about the activity or inactivity of the fluxes, but not the flux values.

further strategies for improving flux coupling analysis
in fcf, and some other fca approaches, every reversible reaction is split into a forward and a backward reaction. this splitting procedure results in an increase in the number of lps and also in the size of each lp to be solved. moreover, a complicated postprocessing step is required to infer the flux coupling relations of the original reversible reactions. for all these reasons, it might be better to perform flux coupling analysis without splitting the reversible reactions. an implementation of fcf without splitting is presented in additional file  <dig> 

additionally, larhlimi and bockmayr  <cit>  show that depending on the reversibility type of the reactions, only certain flux coupling relations can occur. two unblocked reactions i and j can be coupled only if one of the following  <dig> cases holds  would be possible):

 <dig>  i, j ∈ irev: in this case, i and j can be directionally, partially or fully coupled.

 <dig>  i ∈ irev and j ∈ prev: the only possibility is j → i.

 <dig>  i, j ∈ prev: in this case, we can only have i ⇔ j.

 <dig>  i, j ∈ frev: in this case, we can only have i ⇔ j.

therefore, it is enough to determine the reversibility types of i and j, and then check if the corresponding coupling relation holds. this will be referred to as "reversibility-type prunings" . rt-prunings were originally used in mmb-fca as presented in  <cit> .

after rt-prunings, a further improvement can be applied to lp-based fca methods. assume that in the stoichiomtric matrix s, the columns corresponding to the blocked reactions have been removed. according to proposition  <dig>  in  <cit> , for two reactions i and j such that i, j ∈ prev or i, j ∈ frev, the following two statements are equivalent:

• i ⇔ j

• for all v such that sv =  <dig>  vi =  <dig> implies vj =  <dig> 

this means that it is sufficient to solve only one lp:  

the two reactions i and j will be fully coupled if and only if in the above lp . note that the irreversibility constraints are not included in the above lp. therefore, not only solving one lp is sufficient, but also the lp becomes smaller. this improvement will be called prev/frev-based improvement .

an improved version of fcf, which takes into account all of the above-mentioned improvements, has been suggested in  <cit> . here we implemented this improved version of fcf and compared it with the other fca approaches .

goals of the present work
fca is a promising tool for metabolic network analysis. however, to perform fca most authors seem to use their personal implementation of the fcf algorithm  <cit> . only very recently, an implementation of fcf has been included in the latest versions of the fasimu software  <cit> . on the other hand, several approaches for fca have been proposed in the literature. it is not known which of these methods is the fastest in practice. in this paper, we present a novel "feasibility-based" flux coupling analysis method  and compare it to previously existing approaches. a corresponding software tool is freely available for non-commercial use.

RESULTS
ffca: feasibility-based flux coupling analysis
a linear programming problem maximize can be solved by enumerating a sequence of feasible solutions, i.e., solutions of the system of linear inequalities ax ≤ b such that at each solution x the objective function value ct x improves. accordingly, finding one feasible solution could be faster than computing an optimal solution .

in this section, we introduce a new approach for flux coupling analysis, ffca, which is based on feasibility testing. taking into account the previously mentioned strategies for improving flux coupling analysis, we propose the following procedure for ffca:

 <dig>  i, j ∈ irev: in this case, we check the feasibility of two systems of linear inequalities:   

and   

if  and  are both feasible, then i and j are not coupled to each other . if  ) is infeasible, then i → j . if  and  are both infeasible, then i and j are partially  coupled. to check whether they are fully coupled, one has to use other methods, e.g. computing enzyme subsets  <cit>  or solving two lps as in the fcf algorithm  <cit> .

 <dig>  i ∈ irev and j ∈ prev: the only possible coupling relation is j → i . hence,  will always be feasible, because feasibility of  means that i → j does not hold. however, we need to check the feasibility of . additionally, since j can take negative values, one more system should be checked for feasibility:   

it can be easily shown that if  and  are both infeasible, then j → i. otherwise, i and j are uncoupled.

 <dig>  i, j ∈ prev or i, j ∈ frev: in this case, the following system of linear inequalities should be checked for feasibility:   

if  is infeasible, then i ⇔ j  implies j → i, which in turn implies i ⇔ j based on proposition  <dig> in  <cit> ). if  is feasible, then i and j are uncoupled.

to perform ffca, a method is needed to check the feasibility of a system of linear inequalities. in practice this can be done by solving an lp constructed by the system of inequalities together with a constant objective function. any feasible solution will be an optimal solution of the lp, and therefore, the lp solver will finish after finding the first feasible solution. for example, for checking the feasibility of , one can solve the following lp:  

since vi is constant, the optimal value exists if and only if this problem is feasible. similar lps can be solved to check the feasibility of  and .

in table  <dig>  the characteristics of the ffca approach are compared to the other fca methods studied in this article. note that in all methods, blocked reactions are found and the possible irreversibility of initially reversible reactions is detected within the preprocessing step.

comparison of the four fca approaches
to compare the different approaches, namely fcf, mmb-fca, efp-fca and ffca, we implemented all of them in matlab . a benchmark set of six metabolic network models was used for the evaluation. the number of unblocked reactions in these models ranges from  <dig> to  <dig>  table  <dig> summarizes the running times, while table  <dig> reports on the resulting coupling relations. one can see that in all cases ffca is  <dig> to  <dig> times faster than fcf and orders of magnitude faster than efp-fca. table  <dig> also shows that ffca is more appropriate for fca in genome-scale networks. mmb-fca is the fastest method for the three smallest networks. however, for the middle-sized h. pylori network and especially for the large networks of s. cerevisiae and e. coli, ffca proves to be faster than mmb-fca. the computation time required for mmb-fca rapidly grows when the number of reactions increases. this is due to the possibly exponential size of the set of generating vectors which has to be computed before finding the coupled reactions . efp-fca, which is based on solving mixed-integer linear programs, turns out to be much slower than other methods. although the concept of elementary flux patterns is very useful in the analysis of subnetworks, its applicability in full fca seems to be limited. 

both the fcf algorithm and the current implementation of ffca solve lps for flux coupling analysis. one might ask why ffca is faster than the classical fcf method. there are at least five major differences between fcf and ffca:

• when an lp is solved in ffca, finding the first feasible solution is sufficient, while the lps should be solved to optimality in case of the fcf algorithm.

• in the fcf method, in contrast to ffca, every reversible reaction is split into two  irreversible reactions. this step slows down the procedure and increases the size of the lps to be solved.

• for computing the flux coupling relation between any pair of reactions, we always need two lps in ffca, while in fcf sometimes more lps have to be solved. for example, for computing the coupling relation between an irreversible and a reversible reaction , four lps are solved .

• the reversibility-type prunings  <cit>  to reduce the number of possible coupled reaction pairs are only considered in ffca.

• the pf-improvements are only considered in ffca.

one can think of implementing fcf without splitting reversible reactions and/or with the rt-prunings and/or pf-improvement. in order to assess the importance of these issues, three improved versions of fcf were implemented :  fcf was re-implemented without splitting reactions ;  fcf was re-implemented without splitting reactions and with the rt-prunings ; and  fcf was re-implemented without splitting reactions and with the rt-prunings and the pf-improvement , as suggested in  <cit> .

in table  <dig> the computational running times of these methods are also shown. as expected, the three versions of the improved fcf algorithm are better than the classical fcf algorithm, while they are still slower that ffca.

computational properties of ffca
flux coupling analysis of genome-scale networks can be very time consuming. only recently  fca has been used for some of the new genome-scale metabolic networks that contain more than  <dig> reactions. to further illustrate our approach, we have applied ffca to three of these very large networks. the results are reported in table  <dig>  we can see that ffca needs 37- <dig> hours for each of the networks to perform a complete fca. the numbers of the resulting flux coupling relations are also given in the table.

since ffca includes the rt-prunings and pf-improvement, it might be interesting to see how the number of coupling relations  depends on the number of reversible reactions in a network. this problem is studied in additional file  <dig>  briefly, the flux coupling relations have been computed for the original metabolic network of e. coli  <cit> , for the modified metabolic network of e. coli  <cit>  , and for some random networks in between. as expected, the numbers of uncoupled pairs increase  with the increase in the number of reversible reactions.

CONCLUSIONS
we introduced ffca as a new method for flux coupling analysis, and proved it to be faster than any other available approach. our implementation of ffca is fast enough to perform fca for every pair of reactions in s. cerevisiae and e. coli genome-scale networks in a few hours. a corresponding software tool is available for non-commercial use at http://www.bioinformatics.org/ffca/ and we recommend it for fca of genome-scale networks.

