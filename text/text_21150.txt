BACKGROUND
studying the composition and dynamics of microbial communities is a key problem in microbiome research and microbial ecology  <cit> . traditionally, these studies have been based on isolating and sequencing short subunits of the 16s and 18s genes, present in bacteria or archea, and eukaryotes, respectively. typically most studies now make use of amplicon sequencing to obtain such data from complex microbial communities  <cit> . the pcr amplicon technique was very useful when sequencing power was limited, however, with the increasing power and complexity of the new generation of sequencing technologies, the broad advantages of amplicon sequencing are starting to be balanced by major limitations, which include pcr primer selection and amplification bias  <cit> . in particular, no pcr primers are able to amplify all known bacterial taxonomic groups efficiently and uniformly  <cit> , which leads to biased rrna profiling analysis, and the use of short read technologies, notably illumina, results in a complex, interdependent chain of technical decisions, that can heavily influence the subsequent community profiling results  <cit> .

within microbiome research, there is increasing use of whole community gdna surveys , which offer, at theoretically, a less biased view of community composition than using from amplicon based methods, by eliminating dependency on 16s primers  <cit> . in practice however, the interpretation of shotgun metagenome data is heavily dependent on having access to reference genomes of community members, without which substantial limitations of interpretation may arise  <cit> . while the intended use of these shotgun data is typically to capture functional capacity of a community  <cit> , or to permit member genome recovery  <cit> , it has been recognized that whole commnuity shotgun surveys will of course contain a substantial number of reads derived from ssu-rrna genes, and these can be exploited for the purposes of community profiling . similarly, when using total rna metatranscriptome sequencing, rrna often account for 95% of reads sequenced, and thus provides coverage of ssu diversity to great depth. within this general area, a number of examples of this approach have been undertaken and several software implementations of this approach are now available  <cit> , mostly based on the use of hidden markov models to capture reads of ssu-origin from the total read population .

here we present a new open source software package, ribotagger,  to analyze rrna data from shotgun sequencing reads. the software takes raw metagenome or metatranscriptome sequencing reads in fastq or fasta files as input, and is able to process billions of illumina hiseq reads under an hour. ribotagger produces a biom formatted files for downstream analysis in standard packages like qiime  <cit>  or megan  <cit> . it is equally sensitive over all known bacterial and archaeal phyla and classes, and highly specific in not classifying non-rrna sequences as rrna.

implementation
we start with genomic dna or total rna from a microbial community that has been sequenced, then attempt to recover sequencing reads covering a particular region on 16s rrna gene using a short conserved recognition sequence . a short sequence adjacent to the rs is used as the tag sequence  to represent the origin of the 16s gene. for this strategy to be feasible with short-read sequencing technologies, by nature both rs and ts have to be short but informative and in particularly the rs must be conserved across all taxonomic branches, while the ts must be diverse with high taxonomic resolution. the boundaries of each hypervariable region are logical candidates for being rs, which we call ribotags from here on. after examining all bacterial and archaeal 16s sequences in the rdp database  <cit>  we designed a combination of probe patterns and position specific scoring matrices  to recognize the conserved site immediately outside a hypervariable region as rs, which we describe as a universal recognition profile . the short region in the hypervariable region adjacent to the rs is then considered as a candidate tag sequence for the hypervariable region . in this pssm-based detection, the rs sequences are  <dig> n.t. in length and the ts are typically  <dig> n.t. in length. the lengths of both rs and ts were empirically determined so as to achieve a good trade-off between sensitivity and specificity, while maintaining a total length that is smaller than a typical sequencing read. for each of the three domains of life and each of the most commonly used variable regions, namely v <dig>  v <dig>  v <dig> and v <dig>  we computed a universal recognition profile by analyzing the greengenes database  <cit>  . to improve sensitivity, our implementation provides and can utilize a set of 17– <dig> supplementary taxon-specific recognition profiles for each of the variable regions.fig.  <dig> schematic representation of ribotagger detection scheme. starting with shotgun sequencing reads from  ribotagger procedes as follows;  all reads are screened using pssms for the presence of a conserved recognition sequence  adjacent to v-regions using a cohort of pre-defined recognition profiles;  for reads that are positive for recognition sequences, the adjacent v-region tag sequence is extracted, assuming if sufficient length is available ; and  for related tag sequences, equivalent coordinates are defined, prior to counting and annotation


fig.  <dig> universal recognition profiles for each of the variable regions v4--v <dig> used to target bacteria , archaea  and eukaryotes , respectively, with corresponding observed sensitivities and false positive rates




RESULTS
validation analyses
application of our universal profiles to the greengenes database gave rise to a set of  <dig>  ribotags. each ribotag was assigned a taxon based on the set of ssu sequences that contain it, using the majority taxon in the case of discordance. the sensitivity of each of the profiles is over 95% percent , as established by applying the profiles to all ssu sequences in the silva database  <cit> . to test the false positive rate, we ran the profiles on  <dig>  billion faux reads, obtained by sampling all 80 nt non-overlapping fragments in the refseq database , calculating the false positive rate to be at most 2 × 10− <dig> in all cases . to address the problem of the extent to which sequencing-error can generate false ribotags, ribotagger estimates the expected frequency of each ribotag due to sequencing error, based on the observed frequencies of ribotags that differ by one letter and a simple probabilistic model.

to determine how well ribotags can differentiate between organisms at a given taxonomic rank, we computed the concordance of all ribotags obtained from an analysis of the greengenes database. we consider a ribotag as fully concordant  at a given taxonomic rank, if all database sequences that contain that ribotag have the same taxonomic assignment at the given rank. for example, the concordance is between  <dig>  and  <dig>  if between  <dig> and 100% of the database sequences that contain the ribotag all have the same taxon assignment. the percentages of v <dig> ribotags with a given range of concordance , [ <dig> , <dig> ), etc.) for different taxonomic ranks as annotated in the greengenes database are shown in fig. 3a. approximately 80% of all ribotags are fully concordant on the species level, while practically all reads are concordant at the phylum level. results are similar for v <dig> ribotags, while the number of fully concordant ribotags is about 5% lower for v <dig> and v <dig> . we also examined the degree of concordance against de novo otu clusters defined by greengenes over a range of percent identity thresholds, showing that for ribotags in clusters defined at 99% similarity, over 80% show no sequence differences .fig.  <dig> percentage of v <dig> ribotags with a given range of concordance for different taxonomic ranks as  annotated in the greengenes database and  as measured against greengenes de novo otu clusters as a function of cluster formation threshold




due to the short length of the 16s tags, we need to consider the possible influence of sequencing errors explicitly. pcr artifacts during library generation would lead to abnormally high numbers of reads with identical starting position and sequence content. therefore, simply counting sequencing reads with different starting position can detect possible pcr artifacts. using stringent quality value filtering for each nucleotide that covers 16s tags can also the impact of limit potential sequencing errors, which results extremely low error probability for each sequencing read considered. for example, with quality value threshold  <dig>  the probability of sequencing error is only  <dig> %. in addition, we also calculate the number of expected number of occurrence of any 16s tag, assuming the tag is not present at all. assuming the tag of interest is not present, given the observed average sequencing error probability at each nucleotide position along the tag and the abundance of all other tag sequences with one nucleotide difference in the data, we can calculate the expected abundance of the tag of interest by sequencing error. firstly, for the tag under study, all tag sequences with one nucleotide difference from the tag of interest are collected. each of the 1 nt neighbors will contribute e = n × e/ <dig> false positive counts to the tag of interest, where n is the number of reads covering the 1 nt neighbour and e is the observed error probability for the difference position on the tag of interest. the sum of e for all 1 nt neighbours gives the expected false positive tag of interest due to one sequencing error. multiple sequencing errors can be also considered in a similar fashion but due to the quality-value filtering step, we can consider the probability of observing multiple sequencing errors in ribotag sequences as negligible.

example
to illustrate the results obtained from ribotagger, we ran ribotagger against a coupled dna-seq and rna-seq dataset generated from an activated sludge community of an operational wastewater treatment , operated by the public utilities board, republic of singapore; samples obtained between 10/08/ <dig> and 17/08/2012). genomic dna and total rna sequencing were each performed on a hiseq <dig> rapid run using 250 bp paired end sequencing for dna samples, and 150 bp paired end read sequencing for rna samples. we observed a total of 4686 v4-region ribotags in the entire dataset. from the dna dataset, we can estimate whether the number of observed 16s tags is as expected using the following rough approximation: if we assume there are up to  <dig> genes in a typical free-living bacteria  <cit> , and if we neglect the likely variation in 16s copy number across the member species in the community, and assume that one of those is a 16s gene with roughly  <dig> equally sized v-regions and  <dig> equally sized conserved regions, then we would expect approximately  <dig> ,950/ =  <dig> reads to originate from a single v-region in our analysis, which is a conservative underestimate to our observed number. for the rna data, we report only results for one sample to for purposes of illustration, specifically with a total of  <dig> , <dig> rna reads available after qc filtering., we obtained a total of  <dig> tags, of which the top  <dig> accounted for 20%, 80% and 95% of community membership . collectively there are  <dig> unique genera detected,  <dig> families,  <dig> orders and  <dig> phyla, the majority of annotated tags at kingdom level  were attributable to bacteria, as expected in this community, with  <dig> and  <dig> tags being assigned to archaea and eukaryota, respectively. approximately  <dig> tags could not be assigned any annotation using silva v <dig>  <cit> , including  <dig> and  <dig> in the top 20% and 50% of the community, respectively. these latter results highlight the substantial numbers of unknown taxa residing in complex microbial communities.

comparison to related programs
using the rna dataset described above, we compared the computational time of ribotagger against two other existing search tools, riboframe  <cit>  and ssusearch  <cit> , which are designed for retrieval of 16s sequences from whole metagenomic sequencing datasets. the comparison was carried out on a standalone server with the following specifications— <dig> intel xeon x <dig>  cpus, 128 gb memory, internal 146 gb hdd and external 8 tb raid hdd. ribotagger took approximately 90 min to complete, and we observed ribotagger to be approximately  <dig> times faster than riboframe  and  <dig>  times faster than ssusearch . as ribotagger and ssusearch both used silva annotations, we compared the identity and relative abundance of detected phlya between both programs. in total  <dig> phyla were detected  of which  <dig> were common between the two methods. the number of unclassifiable sequences differed, with  <dig> % being called in ssusearch and  <dig> % in ribotagger, however, of the  <dig> common phyla,  <dig> accounted for 95% of community composition in each set of results. the overall correlation between relative abundance was  <dig>   and  <dig>  . we note that while some of these differences may be accounted for by different database versions  and/or handling of unclassifible sequences, these results suggest that further investigation of the differences between detection methodologies are warranted.

practical aspects
ribotagger is a implemented as a platform independent perl program. it can be executed in a single command in several modes with are briefly described here, along with their respective outputs. full details can be found on the ribotagger project page on github 

a. single input file mode
the most basic way to run ribotagger is using a single fastq file , which will generate an output file formatted as a table with the following fields:
tag: the tag sequence for the variable region


n: the number of reads that contains this tag


npos: the number of different locations of the tag on their source reads .


fp: the number of reads you would expect to see this tag due to sequencing errors alone


long.total.count: the number of reads containing a longer sequence of this tag 


long <dig> count, long <dig> count, long <dig> count: number of reads containing the most abundant variants of this tag’s long sequences 


long <dig>  long2: the most abundant long representive sequences of this tag




b. multiple input file mode
for multiple input files, ribotagger can return a series of files. data from paired end read data can also be combined into a single output. the.tab file returns a table of unnormalized read counts, with ribotags indexed in rows and samples indexed in columns. the.anno files contains qc, metadata and annotations, if available, for the same set of ribotags with the following columns fields:
tag: the ribotag sequence


use: “tag” or “long”, whether the annotation was based on the short tag or long representative sequence


taxon_level: taxa rank of this annotation of this tag


taxon_data: taxa rank of the most specific annotation appeared in the database  for this tag


long: the long representative sequence of this tag


long_total: the number of samples having any long representative sequence


long_this: the number of samples having this long sequence as its major representative of this tag


support: the number of database sequences having this tag or long sequence


confidence: the proportion of the database sequences agreed on this annotation


k, p, c, o, f, g, s: annotation for each of the taxa ranks, namely kingdom/domain, phylum, class, order, family, genus, and species




the *.xls file is an excel file combining data from the *.tab and *.anno files. using biom.pl, a *.biom file can be subsequently used by qiime  <cit> . we have implemented options for generating annotations to either silva  <cit>  or greengenes  <cit> . all  <dig> files types can automatically be generated if ribotagger is run in batch mode.

CONCLUSIONS
here, we have developed software for the fast recovery of ssu-rna sequences from shotgun nucleic acid surveys of complex microbial communities. our code is fast, completing an analysis of about 40 m reads within  <dig>  h, and will output an annotated matrix of read counts that can be used for downstream community profiling analysis with minimal further processing. our implementation executes in a single line, avoiding the complications and the lack of robustness inherent in combination-type pipelines and is at least  <dig> times faster than ssusearch  <cit>  and riboframe  <cit> . additional, we also note that our approach avoids the use of otu generation, which recent analyses suggest may carry significant advantages in resolving intra-community dynamics for some classes of experimental design, such as time series experiments  <cit> .

availability and requirements

project name: ribotagger


project home page: https://github.com/xiechaos/ribotagger



operating system : platform independent


programming language: perl


other requirements: none

license: gplv3


any restrictions to use by non-academics: none.

abbreviations
otuoperational taxonomic unit

pssmposition specific scoring matrix

rsrecognition sequence

tstag sequence

