BACKGROUND
gene regulatory networks encode those interactions among genes and proteins that regulate cellular processes, such as the expression of messenger rna . these interactions dictate the expression levels of genes as well as the production of particular proteins, and thus play a critical role in regulating biological functions, from metabolism to cell differentiation. such networks typically involve small copy numbers of the molecular species and large differences in the species reaction rates. because of these factors, the network interactions have a stochastic nature , i.e. they are unpredictable through the influence of a random variable. modeling the stochasticity of genetic circuits is an important field of research in systems biology, and can help elucidate the mechanisms of cell behavior, which in turn can be the basis of diseases. these models can further enable predictions of important phenotypic cellular states.

the computational study of stochastic properties in gene networks is, however, a challenging task. ordinary and stochastic differential equations methods may be inadequate in computing accurately the dynamic and steady state probabilistic behavior of gene networks  <cit> , while the gillespie stochastic simulation algorithm  <cit>  is exact, but can fail in capturing rare events . however, the formulation of the discrete chemical master equation  can be used to analyze the dynamics and stochastic nature of gene regulatory networks with low copy number of species. the cme framework can allow, for example, for the dynamics and stochasticity of a network with small copy numbers of molecular species to be fully described by probability distributions in both the state space and time space.

however, the analysis of these probability distributions is difficult due to their spatiotemporal and multidimensional nature, and due to the typically large number of simulations run under varying settings. moreover, stochastic network researchers often emphasize that what is of biological significance is often not of statistical significance — numerical analyses often miss small or rare events of particular biological relevance. a visual approach can help, in contrast, in mining the network dynamics through the landscape defined by these probability distributions. for example, visualizing the number, location, and behavior of probability peaks could indicate the number of stable states for a given network and set of model parameters. we note that the state of the art reports in stochastic network modeling only employ visualization post facto. our collaborators indicate that once the researchers know what they are looking for, they typically use a plotting software like r or matlab to generate explanatory projection images and animations of the peaks. however, no visual tools exist to support the exploratory analysis of simulated data.

in this paper, we introduce a web-based visual analysis tool for the exploration of time-varying probability landscapes over the state space in stochastic networks. prodigen  supports the exploration of probability distributions in both state and time space. prodigen captures probability distributions with projections at multiple levels, such as spaghetti plots for one dimensional projection and enhanced heatmaps for two dimensional projection. the main contributions of this work are as follows: 
we provide a description of the domain data and tasks in stochastic biological network modeling and analysis.

we propose several visual encodings to represent the probability landscape in multiple dimensions, including one dimension, two dimensions, and three dimensions.

we implement an interactive web-based visual explorer, prodigen, that combines these visual encodings to enable the exploration of probability distributions across both state and time.

we evaluate the visualization system through case studies and report a summary of the feedback provided by domain experts.




related work

stochastic network modeling. the discrete chemical master equation  provides a fundamental framework for studying stochasticity in molecular-level networks. because of the multi-scale nature of many networks, directly solving dcmes is intractable due to the exploding size of the state space. to address this limitation, the acme  algorithm  <cit>  was introduced as an optimal algorithm for the exhaustive enumeration of discrete microstates. the algorithm is based on the decomposition of stochastic reaction network into multiple independent components called buffer queues, each governed by its own birth-death process. the approach has the advantage of more effective usage of the overall finite state space, rapid estimation of errors, and estimation of required buffer size in order to maintain pre-defined error tolerance.

several systems have been tested with the acme method, which we also employ in this work. the steady state and time-evolving behavior has been previously computed for several biologically important networks, including the genetic toggle switch model, the phage-lambda epigenetic circuit, and the 16-node mapk cascade . the same method has been used for modeling important stochastic network motifs such as single input and coupled toggle switch modules  <cit> .


probability distribution visualization. currently, there are only a few systematic ways of visualizing probability distributions at every location and time. the distribution data in 2d space is typically encoded by a 2d color map. kao et al.  <cit>  present a number of methods for visualizing 2d probability distributions. they color a scale field to provide an overall impression of distribution data sets over a 2d spatial domain. luo et al.  <cit>  extend existing visualization methods, such as pseudocolor, to support such distribution data. potter et al.  <cit>  present a visualization system called probvis for exploring differences between distributions across a spatial domain. they also use a color map to encode the distance measure. 3d projections suffer however from overlap problems. to circumvent this problem, in this work we color-encode probability values on a 2d map, respectively as height.


heatmaps in biostatistics. heatmaps have been traditionally used to display statistical data, from gene expression and metabolomics to urban and network evolution data . in general, heatmaps are used to describe the variables which can be considered as a function of two inputs represented by the rows and columns. we use similar heatmaps representations, in which both rows and columns represent the location in each dimension, and the cell shows the probability value at a particular location in two dimensions.


spaghetti plots in ensemble visualization. the computation process used in this biology problem generates spatial distribution datasets across multiple time steps. by extension, these datasets can be regarded as ensemble data — a collection of multiple related but different datasets, such as simulations in general. several techniques have been proposed for ensemble visualization. spaghetti plots, overlaying plots of individual ensemble members, are a well-known technique for visualizing system flows, including flows in biology, medicine, and meteorology. obermaier and joy  <cit>  state that spaghetti plots, as a feature-based visualization, provide an overall impression of the whole ensembles and allow comparisons between ensemble members. luo et al.  <cit>  present the use of spaghetti plots in meteorology. potter et al. present ensemble-vis  <cit> , a framework to support the visual analysis of ensemble space data. sanyal et al. propose noodles  <cit> , a coordinated-view visualization tool, for visualizing weather ensemble uncertainty. in addition to novel uncertainty visualization techniques, they implement spaghetti plots for observing the model uncertainty. wu and zhang  <cit>  introduce spaghetti plots for visualizing ensemble uncertainty. ferstl et al.  <cit>  present a new approach that extends spaghetti plots to extracted ensemble flows. similar to these works, we adopt spaghetti plots, but in a new context.

methods
in this work we follow the nested visualization design model  <cit> , beginning with the domain characterization step.

data and task analysis
stochastic network modeling
the study of stochastic gene regulatory networks is a challenging topic, as the system modeled may be large in both the state space and time. recent developments of the acme method  <cit>  enable reduction of the state space from o to ∏jb+njnj, ∑j=1mnj=n, where n is the number of species, m is the number of molecular equivalence groups — the number of molecular species subgroups in the network, such that member species of a subgroup can be transformed into each other through one or more mass-balanced reactions, n
j is the number of species belonging to group meg j, and b is the maximum number of molecules in meg j. a buffer of size b is assigned to each of the megs involved in the model. these developments allow optimal enumeration of the state space for the system.

we briefly discuss the state space over which we visualize the probability landscape. assume a system contains n molecular species x
i, and m buffers of size c. the acme method assigns a buffer of size c to meg j. the state space size is then equal to the product of m combinations of c+n1n1×c+n2n2×⋯×c+nmnm, where × denotes a simple multiplication.

a microstate
s
k of the system, where k∈, is defined by the combination of numbers of molecules  of every species , n
k,… n
k). the state space is formed by all the possible microstates that the system can visit from a given initial condition. the state space table  displays a microstate as a single row, for a total of n microstates.j and n microstates s
i. n
i denotes the copy number of molecular species x
j at state s
i


x
1
x
2
x
n
s
1
n
n
n
s
2
n
n
n
s
n
n
n
n



each row of the probability matrix shown in table  <dig> contains the probability values of the corresponding state  in the state space table  over time. p
ij represents the probability value of state s
i at time t
j, and p
ij is a float value between  <dig> and  <dig>  the sum of the probabilities of all the microstates at any particular time is equal to  <dig> 
t
1
t
t

s
1
p
11
p
12
p
1t

s
2
p
21
p
22
p
2t

s
n
p
n1
p
n2
p
nt



the combination of data stored in tables  <dig> and  <dig> represents one simulation of a system that consists of m molecular species with the state space size of n across t time steps.

in this multidimensional probability space, the biology researchers are interested in identifying both global and local probability peaks. global peaks are in general easily detected. however, local peaks are difficult to notice, when they exist, because they have low probability values. the number of peaks and their probability values can be computed analytically; however, analyzing the locations of peaks requires visualization.

the domain experts have been working with systems that may contain at most  <dig> molecular species, but over  <dig> million microstates across thousands of time steps. a system may feature tens of parameter settings, which in turn produce tens of simulations. in this work we use two stochastic network models: a toggle switch system and a transcription regulation network. the toggle switch system features two genes, each expressing one protein, with  <dig> respectively  <dig> maximum copy number. the transcription network contains three genes which express each one protein. both proteins and genes  are reactants in the reaction systems of biomolecules.

task analysis
through multiple interviews and observation sessions with the domain experts, we identified a set of four task groups related to the exploration of the time-varying probability landscape in a stochastic system. given a simulation run of a stochastic gene regulatory network, the identified tasks are as follows: 
t1: display the overall plots of probability distributions at multiple dimensional levels: for example, for each molecular species in one dimensional projection and for the combination of any two molecular species in two dimensional projection.

t2: discover peaks in multiple dimensional projections. identify the number of peaks and their probability values. observe and inspect small, local peaks.

t3: identify the locations of peaks at multiple dimensional levels. the “location” denotes a collection of corresponding states in the state space.

t4: track temporal changes of the system. observe the probability landscape changes over time, including the number of peaks and their locations.




based on the visual data analysis taxonomy  <cit> , we match these task groups with four taxonomy categories: present: t <dig>  t <dig>  discover: t <dig>  t <dig>  explore: t <dig>  t <dig>  and identify: t <dig>  t <dig> 

in addition to the functional requirements outline above, we also identified nonfunctional requirements, such as scalability of the system, learnability, and availability of the system on the web.

data acquisition and preprocessing
the simulation results from domain experts are stored in groups of text files: one state space text file in the format shown in table  <dig>  and t  probability files. each probability text file, shown by each column in table  <dig>  encodes the probability distribution over the state space at a particular time step. the size of a single probability file in a system with a state space size of  <dig> is roughly  <dig> mb.

because the probability distributions can be high-dimensional while still having a spatial distribution, we preprocess the data through dimensionality reduction to a lower space which can be used for visualization. furthermore, due to the importance of peaks to the user tasks, we explicitly compute and detect these structures. due to the large-scale of the data, we pre-process the data offline when reducing the dimension of the state space for visualization. in contrast, peak detection is computed online.


dimensionality reduction. because the probability distributions of stochastic networks can be potentially defined over a space higher than  <dig> dimensions, we explore dimensionality reduction via aggregation and projection. to map the data visually, we compute projections to one dimension and to two dimensions, which is commonly done and accepted in the target domain; an additional projection to three dimensions and visualization using volume rendering was attempted and discarded during the prototyping stage.

to project the landscape defined by the probability distributions to one dimension, we aggregate the microstates with the same copy number of a particular protein to form a new state space in one dimension. we repeat the aggregation process for each species of proteins. for example, in the 2-gene toggle switch system, we obtain two probability distributions over two 1d state spaces: one for protein a and the other for protein b.

to project the probability landscape to two dimensions, we aggregate the microstates for which the combinations of the copy numbers of any two proteins are the same. for example, consider a 3-protein example with only two states possible in the case of  <dig> copies of protein  <dig> and  <dig> proteins for protein 2: state  of probability  <dig>  and state  of probability  <dig> . the new aggregated state  will have probability  <dig> . we repeat the process for all possible combinations of any two proteins in order to obtain multiple 2d state spaces. for example, the 2-gene toggle switch network only has one 2d state space, while a regulatory gene network with three genes consists of three state spaces projected to 2d, and a network with four genes would include six 2d state spaces.


peak detection. to detect the peaks, we use a gradient estimate approach. we compare all the states to their neighbors, as projected to one dimension. if a state has higher probability value than both its neighbors and its value is above a threshold of 1e- <dig> , the state is defined as a peak. since the probability distribution along each species dimension is independent, the number of peaks in the entire system is multiplied by the numbers of peaks in each dimension. the peak locations in the system are all the combinations of species locations. the process of peak detection is completed online.

visual design
we have designed the visual analysis tools through a parallel prototyping approach, during which multiple low to mid-fidelity prototypes were sketched in parallel, and presented for feedback to the domain experts. the domain experts are particularly attuned to surface plots of probability distributions, as indicated by their use of “landscape” terminology. however, such plots do not capture directly temporal features: time series of 3d surface plots are usually generated as a movie to display the temporal changes. thus, visual representations with temporal features embedded were of particular interest. as part of this process, we explored multiple potential visual designs, including star plots, small multiples, animation, space-time-cubes, volume renderings and variations of topographic maps, and converged towards those encodings which best preserved features of interest  while avoiding occlusion.

the final prototype of prodigen  consists of a multi-view design with several visual components: 1) a spaghetti plot view that shows the temporal changes of probability values for every gene; 2) a small multiple 1d heatmap view; 3) a small multiple enhanced 2d heatmap view which displays the probability distributions over the state space projected to two dimensions; 4) a peak glyph view which represents the corresponding states of all the probability peaks detected in the system; and 5) a small multiple 3d surface view. the information shown in the heatmaps and peak glyphs changes according to the user-selected time step, as the user drags a time slider. we describe in detail each visual component below.
fig.  <dig> the prodigen interface consists of several visual components:  the ensemble spaghetti plots view shows the probability distribution over time, for all the proteins in a system;  the 1d heatmap view shows a per-protein view of the probability peaks;  the peak glyph view  represents all the probability peak states in the system;  the 2d heatmap view is enhanced with time-curves, and shows the probability peak correlation between protein pairs over space and time;  the animated 3d surface view describes the shapes of peaks over space and time




ensemble spaghetti plot view
spaghetti plots have been traditionally used to visualize ensemble data; each single plot represents an individual ensemble member. color-coding may also be used to differentiate members. in this work, we extend the spaghetti concept to specific simulations over time: by extension, each “ensemble” member represents the probability behavior at a particular time point. the horizontal axis represents the copy numbers of molecules, while the vertical axis represents the probability value. thus, an individual plot describes the probability distribution over the states with the copy number from zero to the maximum copy number for that protein.

we use color to encode different species of proteins, and the intensity of the color to encode the probability distribution of the corresponding protein at different time steps. the plot intensity from lighter to darker represents the time from the beginning of the simulation to the end.

in our early prototyping stage a third dimension was used to encode time, in the style of space-time cube representations  <cit> . in practice, however, the encoding suffered from occlusions which made difficult the tracking of temporal peak changes, and was later discarded. the domain experts specifically stated that the 2d ensemble spaghetti plots yielded better performance than the cube representations.

in fig.  <dig> , the protein a of spaghetti plots represents the temporal probability distribution of protein a. in this representation, the peak changes can be easily tracked in terms of both peak location and value. we notice that protein a has only one peak, whose location shifts to the left in time towards the state with a lower copy number, and whose probability value increases over time. protein b also has one peak, which stays at the same location without too much change in the probability value. protein c has three peaks. the locations of these three peaks do not change over time. however, the probability value of one peak in the middle increases as the other one on the right decreases over time.
fig.  <dig> spaghetti plots  show the probability distribution of each gene and the changes in distributions over time. the spaghetti plots view on the bottom displays the probability distribution of each gene at a user selected time step




in most cases, the peaks either increase or decrease over time, and thus do not cause overlaying or crossing issues. rare plot overlays and crossings bear in fact meaning, by encoding frequent peak location changes  or peak changes in both directions .

however, it is not easy to detect the probability distribution at a particular time step from the spaghetti plots. to this end, a checkbox filter allows the users to draw the plots at an interactively-selected time step. figure  <dig>  displays the probability distributions of these three proteins at the 10th time step.

enhanced heatmaps
to show the lower-dimensionality projection of probability landscapes we chose as a basis a heatmap encoding, due to their efficiency in visualizing distribution data. our domain experts, like most bioinformaticians, were familiar with heatmap representations, compared to other visual representations. we employ both one-dimensional heatmaps and an enhanced version of two-dimensional heatmaps, displayed each time in a small multiples view. the spaghetti view uses a categorical color scheme for the different species, while the aggregated views described below employ a non-overlapping qualitative color scheme to encode probability. the 1-dimensional heatmaps described below  help bridge the two color schemes. the domain experts did not report or experience during testing any issues related to this dual use of color intensity.
fig.  <dig> three 1d heatmaps represent probability distributions projected to one dimension of three proteins a, b and c. a and b have one peak each, while c has three peaks





1d heatmaps. 1d heatmaps display the probability distribution over the state space projected to one dimensional space. the 1d state space is represented by the horizontal direction in the heatmap. the color intensity of each state represents its aggregated probability value. the heatmaps are stacked up vertically, and each heatmap has a border color-linked to the spaghetti plot for that protein.


2d heatmaps. similar to 1d heatmaps, 2d heatmaps display the probability distribution over the state space, but projected to two dimensional space. the horizontal and vertical axes represent the copy numbers of molecules for any two protein species in the system. the cell at the intersection of two molecule copy numbers represents the state that aggregates the microstates with those copy numbers. the intensity of the cell encodes the probability value. figure  <dig> indicates there is only one peak located at  in the 2d state space projected to pa and pb. the 2d heatmaps are arranged in a small multiple display, using identical axes mappings to support comparison of the peaks. per our collaborators’ request, the heatmap can also be colored using a qualitative colormap , similar to the rainbow maps they had used before in numerical software packages; the qualitative map is derived from colorbrewer  and allows the users to highlight different peak classes and thus presumably better identify small peaks.
fig.  <dig> the 2d heatmap displays the probability distribution over the 2d state space projected for the pair of pa and pb. time curves overlaid on the 2d heatmap indicate how the probability values in the 2d state space change over time


fig.  <dig> 2d heatmaps using a qualitative colormap





overlaid time curves. heatmaps are able to provide an overview of the probability distributions over the state space in one and two dimensions. however, it is hard to track temporal changes from this aggregated visual representation. since the changes in probability values over time can be displayed as a line plot, we create an extended heatmap representation by overlaying such line plots on each cell  in the 2d heatmaps. the time curves show the dynamics of the system, which include the changes in probability values and peak locations over time. a flat curve means no obvious change, while a steep curve means a big change in the probability value. the user can check the time-curves checkbox to display these curves.

in fig.  <dig>  two groups of steep curves indicate that the peak in the state space projected to pa and pb moves in the direction in which pa has lower copies at the early time, and stays there during the rest of the simulation time. the probability value of the peak increases as the location of the peak changes.


details-on-demand. since the 2d heatmap can display state spaces that contain thousands of states, it may be difficult to observe how the probability of a specific state changes over time. to support detailed inspection of a particular state, we enlarge on demand the size of the cell corresponding to a user-selected state. when the user clicks on an interesting cell, a detail window is overlaid, showing the time curve for that state. figure  <dig> is an example of the detail view of the state , in which pa has  <dig> molecule copies and pb has  <dig> copies. we notice that there is a steep and large increase in the probability value during the first two time steps. later, the probability decreases in the following four time steps, and keeps roughly constant for the rest of time.
fig.  <dig> probability temporal distribution on a user selected state in which pa has five copies of molecules and pb has eight




peak glyphs
although the heatmaps view can provide an overview which indicates the location of peaks, users often wish to identify the location accurately. furthermore, the heatmap representations can make small peak detection difficult. to indicate the peak location, we have experimented with a number of existing multidimensional encodings, including star plots. however, since a stochastic gene system consists of a large number of microstates and each microstate is represented by the combination of copy numbers of multiple molecular species at different scales, existing encodings failed to provide the location information of states in the system.

instead, the end-result of the prototyping phase was a glyph to display the detailed information of a peak state, such as the combination of copy numbers. the peak glyph is composed of a stack of horizontal bars filled with darker or lighter intensities according to the probability value . the number of bars represents the number of proteins, while the length of each bar represents the number of molecule copies of the corresponding protein. when displayed as a small multiple, the peak glyphs show all the peaks in the system. because very small probability peaks are typically due to numerical error in the simulation, suspect peaks are displayed in gray. the view is controlled by the user selected timestep. hovering over a glyph displays the detailed information about the peak.
fig.  <dig> a small multiple of peak glyphs with eight peak states, out of which only three are authentic peaks. the remaining five states, shown in gray, were identified as computational errors




3d surface view
similar to the 2d heatmaps, the 3d surface plots also display the probability distributions over the 2d state space, but represent the probability value as height  instead of encoding it by the color intensity . as indicated above, the domain experts are particularly receptive to 3d surface plots, which reflect their understanding of probabilistic landscapes. in contrast, the complementary visual encodings were novel to our domain experts, and thus benefited from scaffolding through the familiar surface encodings. compared to the 2d heatmaps, the advantage is that the surface plots can show the shapes of peaks in a manner similar to existing representations of probability landscapes. both representations, extended heatmaps and surfaces, capture well the extent of peaks and the relative location of peaks with respect to one another.
fig.  <dig> a 3d surface plot displays the probability distribution over the state space projected to a and c. three peaks are distinguishable




we use the library plotly.js for plotting the 3d surface of probability distribution; the library allows users to rotate and zoom in/out the surfaces. hovering over the surface displays the location of the state and its probability value. we implement an animation option for playing the probability distributions across the entire time period as a movie, in which the dynamics of peaks including numbers, locations, relationships, values, and shapes can be easily detected. similar to the heatmaps, the 3d surface plots are also displayed as a small multiple across the potentially multiple projections.

prodigen is implemented as a web-based tool in javascript and uses the data visualization libraries d <dig> and plotly.js.

RESULTS
we evaluate the effectiveness of prodigen through two case studies completed with two experts, who are co-authors on this manuscript. one expert is a senior bioinformatics researcher with over thirty years of experience in the field, and the other is a junior researcher in bioinformatics who specializes in stochastic gene network modeling.

these two case studies demonstrate how our visual approach can assist domain experts in the exploration of probability landscapes in stochastic gene networks, and allows them to track the temporal changes as well. the first case study is an exploration of a transcription regulation network with three genes, and the second one studies a toggle switch system with two genes.

case study i: transcription regulation network
we illustrate the performance of prodigen using the example of a transcription regulation network. a detailed description of the model architecture will be published by our collaborators. the system consists of three genes genea, geneb, and genec, which express proteina, proteinb, and proteinc, correspondingly. c is the output of the system, and it is regulated by both b and a. transcription regulations motifs such as this are common in studies of biological systems as, for example, e. coli  <cit> , yeast  <cit> , and mammals  <cit> . their detailed modeling in principle can answer important biological questions such as the existence of multiple phenotypes corresponding to different numbers of stable states, adaptability of the systems to the change in one of the components  <cit> . these phenomena may be relevant for the study of important biological events, such as differentiation of the cell to a new cell type, tumor suppression, hiv latency versus replication, and cell adaptation to a stress. in this simulation, the domain expert decreased the expression level of a by a factor of approximately  <dig>  the goal of the visual analysis was to observe how c responds to this change in the expression level of a.

the spaghetti plot in fig.  <dig>  indicates that even a significantly decreased level of a does not affect significantly the behavior of the system. the spaghetti view clearly shows that a has one peak state, b has also one peak state, while c, which is regulated by both a and b, has three peak states. as simulation time advances, the peak-state corresponding to a shifts towards the left along the horizontal axis as the expression level of a decreases. in the same spaghetti plot, the peak corresponding to b is very stable; its clear signature in the plot shows very little change in either location or probability value. the three peaks of c also stay constantly in the same locations, and show little change in probability values over time. the spaghetti plot can be used to detect the number of peaks , and track their temporal changes in one dimension .

the 1-dimensional set of projections  captures, as expected, the same number of peaks. the smaller and fainter peaks in the c projection caught the interest of the investigators, who remarked again on the biological significance of small peaks. small peaks are important since they can correspond to a diseased state of the cell, which could be non-prevalent or rare in the organism and as such have a small number of molecules. it was easier to detect small peaks in the one dimensional view than in 2d, because in 2d the information gets distributed over a larger number of states. the value and location of the peaks are represented in both the spaghetti and 1-dimensional view in a qualitative way.

a step further, the peak glyph view  captures the accurate locations and probability values of the peak states . the peaks with different values at different locations can correspond to different physiological conditions of the cell, e.g., healthy vs. diseased state or pluripotent vs. differentiated in stem cells. the gray glyphs show the pseudo peaks that are due to numerical errors. as simulation time advanced, the experts noticed an increase in numerical errors. with this observation in mind, the users moved back to exploring relatively more complex visual representations, such as the 2d heatmaps overlaid with the time curves and the 3d surface plots.

next, we investigate the probability distributions over the entire state space of the transcription regulatory network , and again focus on the same small peak. the distributions are displayed through three 2d heatmaps which are the projections of the three possible combinations of the original three components. the time curves overlaid on the heatmaps further capture the trace of peak movements . for example, based on the shapes of time curves, we can conclude that the peak moves down in the heatmap projected to a and b. last but not least, the surface plot animation  confirms the smooth trajectory of the peaks. the 2d enhanced heatmap outperform other visual designs when the user focuses on tracking the temporal changes of probability distributions in 2d state spaces over time.

in conclusion, while the steady state probability landscapes of proteina and proteinb are monostable, proteinc has three peaks at steady-state. the decrease of the expression level of proteina drives the evolution of the system to a new steady state, which has decreased level of proteina, with the expression patterns of proteinb and proteinc both altered.

case study ii: toggle switch system
the stochastic network module we study here is a genetic toggle switch system consisting of two genes, a and b. figure  <dig> shows the network topology. in this second model, single copies of gene a and gene b express protein products a and b. gene a and gene b can repress the transcription of each other through binding the dimers of their protein products a and b on the promoter sites of the other gene b and a to form protein-dna complexes  <cit> . thus, this genetic network includes six molecular species, which are described in detail in table  <dig>  the genetic toggle switch network with two genes has four distinct stable states: “on-on” representing a state at which both gene a and gene b are unbound, “on-off” representing a state with unbound gene a and bound gene b, “off-on” for a state with bound gene a and unbound gene b, and “off-off” for a state with both bound gene a and gene b. in this work, the domain experts computed the state spaces under the initial condition of  <dig> copies of protein a and protein b,  <dig> copy of unbound gene a,  <dig> copy of unbound gene b, and  <dig> copies of bound gene a and bound gene b. by using the finite buffer method to solve the dcme of this system, we obtain a state space of size  <dig> . after that, we directly compute the probability value of each state at each time point, which forms the probability landscape, and currently output for visualization the first  <dig> time steps.
fig.  <dig> the genetic toggle switch network  <cit> 





the toggle switch system is known to have four peaks in the stable state, as captured by the peak glyphs . however, at the early time, the system has only one peak, at the state . the enhanced heatmaps  and the animation offer an opportunity to observe how the peaks move in the state space in both the 2d heatmap and the 3d surface plot . in addition to tracking the location changes, the surface plot shows efficiently the changes in probability values . as simulation time advanced, we noticed three more peaks appear, as the early peak was getting smaller and transitioned to states with higher copy numbers of both protein species. figure  <dig> displays the four peaks in the 3d surface plot at different time steps. later on, the system becomes more stable. these peaks stay in a roughly fixed location with only small changes in the probability value. thus, we can confirm that the system reaches a steady state.
fig.  <dig> peak glyphs for the toggle switch network showing four detected peaks and their exact coordinates


fig.  <dig> toggle switch 2d enhanced heatmap. the heatmap displays the probability distribution over the 2d state space projected for the pair of pa and pb. time curves overlaid on the 2d heatmap indicate how the probability values in the 2d state space change over time


fig.  <dig> probability landscape of the toggle switch system at three different time steps, showing four peaks; the least noticeable peak is located at 




the peak glyphs successfully identified the largest peak . we see one of the three late peaks become the largest peak, at last. although the toggle switch has more states in the 2d state space, compared to the transcription regulatory network discussed in the case study i, the time curves overlaid on the heatmap, which includes nearly thirty thousand map cells, can still provide an overview of the temporal probability distributions . however, we can only see three peaks according to the curves shapes. the fourth peak is actually a spike at the location , which can be seen in the surface plot, and as such was dismissed from the analysis.

informal feedback
over multiple discussion sessions, the domain experts provided positive feedback. the junior researcher pointed out that the visual approach would be beneficial to experts working in the field when exploring the data. in particular, the lower-dimensional plots and encodings go beyond current approaches to showing the data, especially for exploring the dynamics of the system. the feature that generated most excitement for both domain experts was the ability to track the temporal changes of the probability distributions. the senior expert specifically commented on the potential of the tool to assist in deriving new hypotheses, beyond the post-hoc abilities of explanatory visualization. in addition to tracking the peak trajectories in the transcription regulatory network and the toggle switch system, the senior expert also indicated the potential use of the visual approach to systems with potentially oscillatory peak states, or to track the peak trajectory for other types of stochastic networks.

discussion and 
CONCLUSIONS
the two case studies and expert feedback demonstrate that prodigen is an effective visualization tool for the exploration of the probability landscape of stochastic gene regulatory networks. the system successfully allowed stochastic network researchers to perform the t <dig> through t <dig> tasks we had identified in the domain characterization stage, while handling gracefully the large scale of the data. in particular, the domain experts were able to: 1) visualize probabilities of stable states, 2) explore the temporal aspect of probability distributions, and 3) discover and analyze small peaks in the probability landscape that had potential relation to specific diseases. in both case studies they were able to identify new findings  as well as replicate previous findings. the web-based implementation of the system makes it potentially available to a wide audience. furthermore, the case studies performed with domain experts indicate the interface is user-friendly and easy to learn.

with respect to the visual design of the system, the overall design successfully supports the exploration of probability distributions in both state and time space. while some of the individual visual encodings employed are not new, the enhanced 2d heatmaps and the peak glyphs are novel contributions. the combination of visual encodings to explore data in multiple dimensions is also novel. as shown by the case studies, the visual encodings proposed were able to capture probability distributions in multiple dimensions and at multiple levels. the spaghetti plots and heatmaps overlaid by time curves are able to display the temporal probability distributions over the state space. in addition to these overviews, detail views embedded in the heatmaps provide the ability to track the probability dynamics of a user selected state. when combined together with the peak glyphs and the animated surfaces, these visual encodings satisfy the requirements from experts for detecting the number of peaks, the locations of peaks, the values of peaks, and their dynamic changes. because the peak values vary significantly, the experts required we do not normalize axis or color; instead, we clearly indicate each scale in the interface. for example, the fourth small peak in the center plot in fig.  <dig> is not perceivable when using normalization.

in terms of limitations, the system currently requires a copy of the data to be created locally and loaded for processing and visualization. prodigen can only be used as a post simulation analysis tool, due to this data pre-processing load. a direction of great interest to our collaborators, although beyond the scope of this work, is the ability to run the system directly in situ, on the cluster where the simulations are computed.

in terms of scalability, the tool can handle with no issues models whose size in terms of species is on par with the ones developed by our collaborators, and was built with visual scalability in mind. furthermore, we have tested the system on a variety of state space size and timestep configurations. as discussed in the task analysis section, the systems modeled typically contain few molecular species. however, the system modeled may be large in both the state space and time. our visual approach scales well, in this respect, in either state space or time dimension. the entire system behaves well for stochastic networks with a relatively large state space size of  <dig> states, which is roughly 18mb, as long as the simulation of these systems stays below several hundred timesteps. this last limitation is related to the d <dig> library limitations regarding loading large datasets. for practical purposes, to circumvent this limitation, simulations can be split into chunks of time and loaded and analyzed sequentially. the time-curve heat maps can further suffer from scalability issues for very large state space sizes, which can lead to small tiles and aliasing. on lower resolution displays, this issue becomes visible for large state spaces with long runs of close to a thousand timesteps, as indicated in fig.  <dig>  context+focus techniques  <cit>  may help address aliasing issues.

in conclusion, we have presented a novel web-based visual approach for the systematic exploration of probability distributions over simulation time and state space in stochastic gene regulatory networks. we provided a description of the domain data and tasks in stochastic biological network modeling and analysis, and designed a visual solution to meet the domain analysis challenges. our visual approach combines visual encodings that consist of spaghetti plots over 1d projection, heatmaps over 2d projections, enhanced with time curves to display temporal changes, peak glyphs displayed as small multiples, and animated probability surfaces. we implemented an interactive web-based visual explorer, prodigen, that combines these visual encodings to enable the exploration of probability distributions across both state and time, and we evaluated the visualization system through two regulatory networks case studies with domain experts. the case studies and the domain expert feedback indicate the effectiveness of this visual approach in helping biologists to explore the probability landscape of stochastic gene regulatory networks.

additional file

additional file  <dig> biovis16-121-prodigen.mp <dig>  a video demo shows how to use the application. 




abbreviations
acmeaccurate chemical master equation

cmechemical master equation

not applicable.

declarations
this article has been published as part of bmc bioinformatics vol  <dig> suppl  <dig>  2017: proceedings of the symposium on biological data visualization at vis  <dig>  the full contents of the supplement are available online at http://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-18-supplement- <dig> 

funding
this work, including publication costs, have been supported by national science foundation grant nsf career iis- <dig>  by the university of illinois, and by national institutes of health grant nih gm <dig>  tim luciani is supported by the nsf graduate research fellowship program.

availability of data and materials
the datasets used and/or analysed during the current study available from the corresponding author on reasonable request.

authors’ contributions
cm and tl co-designed and co-wrote the implementation of the explorer interface. at and jl provided expert systems biology feedback and helped to direct the design of the tool and case studies. gem conceived and directed the design, implementation, and testing of the tool. all authors listed contributed to and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
