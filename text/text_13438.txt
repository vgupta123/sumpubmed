BACKGROUND
given the burgeoning wealth of knowledge in molecular biology, including the ever more rapidly accumulating quantitative high-throughput data, and with more than a hundred complete genomes now at hand, the grand challenge of what we might call "the post-genome era" is to obtain a system-level understanding of the dynamic behavior of the mechanisms of life. however, the dynamic behavior of biological systems, a result of the diverse nonlinear interactions of multiple molecular components possessing various properties, is complex and unintuitive. an integrative systems biology approach is therefore required to complement traditional reductionism, and computer simulation has proven to be an invaluable tool for system-level analysis  <cit> . simulation-based research facilitates the understanding of the complex underlying structure of a system, and detailed models can be used to help generate testable predictions and hypotheses for experiments.

several simulation studies of large-scale biological systems have been reported, but most are achieved by manual modeling of the cellular networks and simulation of network models by the use of approaches such as biochemical systems theory  <cit>  and flux balance analysis  <cit> . investigations of dynamic behavior thus far have been limited in scale, focusing on minimized models  <cit>  or specific pathways  <cit> . this is mostly because dynamic modeling for biosimulation requires a multitude of parameters, and collection and organization of the information required is extremely time-consuming, labor-intensive, manually precise work. the modeling procedure usually involves three major steps:  qualitative modeling, where the network structure or the pathway map including all the necessary inhibitors, activators, reversibility, and feedback regulation is constructed from established biological knowledge and hypotheses;  quantitative modeling, where quantitative data such as the metabolite and enzyme concentrations, accurate rate equations, and kinetic parameters are incorporated so as to formulate a mathematical system model; and  cell programming, where the above information is translated into a machine-readable modeling language such as the systems biology markup language   <cit>  ready for simulation software, with specifications for simulation such as the type of integrators, integration step size, and simulation procedures  <cit> . the manual modeling process is the most serious bottleneck in systems biology, and an intelligent environment with both sophisticated data and knowledge bases is necessary for the next step in the evolution of computational cell biology. for example, the biochemical simulator gepasi/copasi  <cit>  provides an intuitive graphical user interface to aid the cell programming process in modeling, yet the users are required to obtain the qualitative and quantitative information manually, and current biochemical simulation software suites do not provide the automatic qualitative and quantitative modeling components.

although quantitative modeling currently requires a thorough bottom-up approach with expert knowledge and a large amount of public kinetic information, a substantial part of qualitative modeling can be automated by integrating information from numerous databases. although not intended for generating simulation models, several software tools for the reconstruction of the pathway database from the genome exist, including metashark  <cit> , identics  <cit> , and the pathologic program in the biocyc pathway tools software suite  <cit> . however, pathologic, for example, heavily relies on text-based annotation of the genome, and sometimes requires another pipeline such as the genequiz system for annotation beforehand  <cit> . since all three software tools contain no stoichiometric information and lack the cell programming step, they all require considerable time and effort in order to use the results for simulation. in contrast, a system dedicated to the prototyping of pathway simulation models can be highly optimized for speed and ease of use.

here we describe a novel database-driven intelligent software system named the genome-based modeling  system, which automatically generates a cell-wide metabolic pathway simulation model suitable as a draft model to build upon for computer-based studies. the model is based on complete genome sequence data, and the software provides an environment that allows analysis of the system-level behavior of the organism of interest.

RESULTS
approach
a traditional modeling approach scales up from a basic model by adding new information by hand, but because our aim is to provide a draft model to reduce the labor-intensive qualitative modeling steps, we take an opposite, top-down approach of automated modeling. a rough image of the entire metabolic network is extracted from genome data and modeled on the basis of genetic information, and then more specific information is later added from expert knowledge with minimal manual work. another merit to this approach is that the process starts from the genome sequence. in whole-cell modeling, integration of different biological databases is a challenging task, because the target field is broad and the scheme of each database differs. moreover, the names of genes and proteins are often ambiguous and thus difficult to match. however, most databases contain a link to the genome sequence regardless of the subject, so by modeling from the genome as the starting point, it becomes possible to link a large amount of biological information by an automated method.

qualitative modeling
the gem system takes the complete genome database, both annotated and unannotated data, as input, and automatically goes through several steps to produce a simulation model of the organism in a flat-file format that can be readily converted to standard sbml suitable for simulation with various simulation software systems   <cit> . when an unannotated genome is given, the system predicts genes with glimmer  <cit> , which produces a high false-positive rate and a low false-negative rate. alternatively, users may use existing sophisticated pipelines such as gendb  <cit> , genequiz  <cit> , and ensembl  <cit>  to identify the coding regions and for the functional annotation to be used in the following steps.

the second step matches the genes to the product protein through a combined method of annotation reference, homology search, and orthology search. the system first checks for a direct external database link  to swiss-prot and trembl  <cit>  in the annotation frequently provided in the embl complete genome database  <cit>  to find the ec number of the protein product of a gene. if annotation is not available, the system performs a blastp search  <cit>  against the swiss-prot database with a default cutoff value of e- <dig>  which is also configurable, and the swiss-prot entry with the best e-value is used as its homolog. homology searching is a powerful technique for conserved proteins, but sometimes is insufficient in functional genomics  <cit> . if there is no hit above the cutoff e-value, an orthology search of the amino acid sequence of the gene by using the cognitor program provided with the cogs database  <cit>  is then performed with a cut-off value at  <dig> clades. this step can alternatively be carried out by direct reference to the annotated cog entry given in the ptt database distributed in the genbank genome flat-file  <cit> . the obtained cog entry is matched to the corresponding ec number by reference to the kegg orthology database  <cit> .

when the swiss-prot and trembl entries match with the annotation and the homology search does not contain an ec number, there is an additional search in the ortholog entries in the same wit cluster  <cit>  category. the wit cluster provides a list of orthologous genes identified under strict criteria; therefore, the genes in the same wit cluster are expected to have identical functions. because the gem system keeps track of the enzymes by the ec number, when the swiss-prot and trembl entries are not annotated with an ec number, the system looks through all orthologous genes in the same wit cluster to find entries annotated with an ec number, and uses those for annotation. when multiple entries with ec numbers are found, the entry with the lowest e-value is used. currently, the gem system cannot account for any enzymes that are not ec-encoded, and unspecific or incomplete codes are treated the same as complete codes. this is a limitation of the system, but since the kegg database that the system uses to check the pathway is also mostly based on ec numbers and treats unspecific or incomplete codes similarly, our system follows this approach.

the gem system holds information on enzymes extracted from the major enzyme and pathway databases  <cit>  and curates it for consistency of nomenclature in the form of an internalized database, and the ec numbers obtained are matched to the corresponding stoichiometric enzyme reaction equation. here each gene is assumed to have a one-to-one enzyme relationship, so the system cannot distinguish between isozymes and heteropolymeric enzymes. to resolve this problem and to recover false negative matches, the stoichiometric reaction list undergoes a pathway check that compares the extracted list with the general reference pathway of the kegg and metacyc databases  <cit> . for the problem of many-to-many relationships between reactions, firstly the multiple rows with the same stoichiometry  are collapsed to a single row. this procedure is equivalent to resolving the problem of heteropolymeric enzymes and ignoring the presence of isozymes. with this new stoichiometric matrix, where all rows represent unique reactions, each reaction is searched in the reference pathways, and the row is duplicated when the reaction exists in multiple pathways, to recover the necessary isozymes. then for the pathway connectivity check, when fewer than "y" steps of a gap exist between more than "x" connected steps upstream and downstream of the pathway, the gap is filled from the information in the pathway databases. x and y are configurable, but are set to  <dig> and  <dig>  respectively, by default. for example, when there is a continuous pathway containing  <dig> enzymes such as a-b-c-d-e-f-g exist, and when the consecutive sets of three enzymes a-b-c and e-f-g are identified by functional annotation, the gap enzyme d is filled in. all  <dig> enzymes in this example must be consecutive reactions, but they are not required to be in linear order or to belong in the same pathway. gap filling in pathway reconstruction is a challenging task, and the filled gap would be better to be reconfirmed by sequence alignment. although only the most straightforward method is currently implemented, the filled gap is clearly marked as such in the model, therefore enabling the users to easily take out uncertain reactions. this gap-filling process is useful for flux-based analysis where pathway connectivity is essential, but since the data is uncertain, these reactions are not included for the following validations. a graphical user interface allows the configuration of options and optimal execution of the system.

to summarize the procedures described so far, let us follow the workflow taking fumarate hydratase  and glutamate synthase  in e. coli as examples. firstly, the coding regions are identified by glimmer unless an annotated complete genome is available, and the nucleotide sequences are translated into amino acid sequences. if database reference to swiss-prot is available in annotation, this reference is used to identify the gene and the ec number of enzyme coded by the gene, and if the reference is not available, blast similarity search matches the amino acid sequence to the corresponding swiss-prot entry. in this case, gene located on the complementary strand of position  <dig> to  <dig> is identified to be fuma_ecoli that is  <dig> . <dig>  in ec number with complete identify , and likewise, fumb_ecoli  is also identified to be  <dig> . <dig> . similarly, two genes gltb_ecoli  and gltd_ecoli  are identified to be  <dig> . <dig> . even when the homology search fails, orthology search identifies fuma and fumb genes to be both cog <dig> , and the majority of genes belonging to the orthologous cluster is identified to be  <dig> . <dig>  in wit cluster. likewise, gltb is identified to be cog <dig>  and gltd to be cog <dig>  and subsequently to be  <dig> . <dig>  with wit cluster. fuma is an aerobic isozyme and fumb is an anaerobic isozyme, whereas gltb and gltd are subunits of glutamate synthase. this is correctly identified by pathway check, because  <dig> . <dig>  occurs both in aerobic citrate cycle and in anaerobic reductive carboxylate cycle pathways, but  <dig> . <dig>  only occurs in glutamate metabolism pathway . reaction for  <dig> . <dig>  is a reversible reaction of -malate = fumerate + h2o, and that of  <dig> . <dig>  is an irreversible reaction of  <dig> l-glutamate + nadp = l-glutamate + 2-oxoglutarate + nadph + h. taking account of the existence of isozymes , the stoichiometric matrix is derived as follows :

where the first four rows represent two sets of reversible reaction of  <dig> . <dig>  and the fifth row represents the irreversible reaction of  <dig> . <dig> , and the columns represent -malate, fumerate, h2o, l-glutamate, nadp, 2-oxoglutarate, nadph, and h, respectively. for gap-filling, the reaction connecting 2-hydroxy-ethyl-thpp and acetaldehyde, namely  <dig> . <dig>  is suggested from the connectivity of upstream reactions  and downstream reactions  in the glycolysis pathway.

validation of the qualitative modeling step
stoichiometric simulation models of all available complete annotated bacterial genomes have been generated by using the gem system with the default parameters. complete genome flatfiles were obtained from the embl database, and corresponding ptt files were used for cog annotation. using these inputs, the blast searches were limited to the genes that did not contain direct external database link  to swiss-prot or trembl, and cog searches were replaced with data integration of ptt file with embl data. in this way, functional annotation process was optimized and therefore the calculation speed was remarkably fast, finishing the entire process in a few hours on a dual-processor pc server . statistics describing the scale of computer-based cell models with over  <dig> enzymes are shown in table  <dig> . here the kegg coverage is calculated as the percentage of correctly extracted enzymes in the corresponding organism-specific pathways in the kegg database. the model organism e. coli k <dig> mg <dig> yielded the best numbers, with  <dig> reactions of  <dig> enzymes and  <dig> metabolites in the computer-based model with an accuracy of 100% kegg coverage, in other words, without any false negatives. organisms that are not well understood are limited by this database driven approach, but even the model with lowest coverage, in this case mycobacterium leprae, achieved over 90% coverage.

accuracy comparison with e. coli specific entries of kegg pathway and swiss-prot data for pathways with unidentified genes or genes that have no ec number assigned are shown in table  <dig>  since the overall kegg coverage is 100% in e. coli, the ec coverage is obviously 100% for all pathways. however, there are several reactions that cannot be ec coded in some metabolic pathways, and a large fraction of reactions for pathways other than metabolism. although the reactions that are not ec coded is not included in the stoichiometric model since they are beyond the purpose of this work to create metabolic pathway models, gem system correctly identified all genes except for  <dig> cases in comparison with swiss-prot entries, so that the information can easily be incorporated for future applications. three misidentified genes were actually correctly identified but the homology search identified them in different organisms or strains, namely, gpma_ecoli was identified to be gpma_shifl , isph_ecoli and upk_ecoli were identified to be isph_eco <dig> and uppp_eco <dig> .

the e. coli model was further compared with the genome-scale metabolic flux model of reed et al.   <cit>  and the ecocyc database  <cit> . ec numbers are directly compared, and all of the  <dig> enzymes that are not included in the e. coli specific entries of kegg or swiss-prot are manually checked through ecocyc and ijr <dig> as shown in table  <dig>  there were  <dig> possible mis-annotations by the gem system, but the majority of the enzymes were mis-identified due to the inconsistencies of the ec notation among databases. after correction of obsolete or deleted ec numbers, ijr <dig> contained  <dig> out of  <dig> ec numbers in common , and ecocyc had  <dig> out of  <dig> ec numbers in common .  <dig> enzymes that were assigned different ec numbers between the swiss-prot database and the ijr <dig> model, although the genes were correctly identified, so our model has overall  <dig> % accuracy compared with the ijr <dig> model. five enzymes out of the  <dig> false negatives in comparison with ijr <dig> and  <dig> out of the  <dig> false negatives in comparison with ecocyc have no corresponding genes as of now. this fact emphasizes the importance of manual refinement, but since this process is required for less than 5% of the model in e. coli, our automatic modeling system should keep the manual effort to a minimum. obviously e. coli is the most well studied organism, and the manual procedure required for other organisms would be greater than 5%. however, most of the other models also yielded over  <dig> reactions at 90% or more kegg coverage, and since the models are provided with pathway-wise accuracy table similar to table  <dig> at gem system web-site  <cit>  the user can easily identify which pathway is incomplete and thus requires manual checking.

the number of ec numbers extracted from the ijr <dig> model,  <dig>  may seem small compared with the total number of reactions,  <dig>  however, ijr <dig> contains  <dig> transporters that cannot be ec-coded, and it contains many enzymes without ec numbers that are ec-coded in kegg database. moreover, since many enzymes have multiple reactions, the total number of ec-coded reactions in ijr <dig> is  <dig>  it is worth noting that ijr <dig> selects the pathways to include in the model, whereas the gem system takes a greedy approach where every possible enzyme that is predicted to exist in a genome is included, regardless of the types of pathway the enzyme belongs to, leading to greater number of enzymes than in the ijr <dig> model. to summarize, the generated model has very high coverage  compared to kegg, ecocyc, and ijr <dig>  and the overall accuracy is also high, with false-positives of  <dig> entries  and possible false-negatives of less than  <dig> entries .

database of generated models
our web site  <cit>  makes publicly available all genome-scale models with enzyme or metabolite lists with reactions, gene lists with matched product and blast e-values, stoichiometric matrices for static simulation and metabolic flux analysis, interactive pathway maps generated with a java applet for visualizing protein-protein interactions  <cit> , and a tool to view the extracted enzymes mapped on the kegg pathway database by using kegg api.

discussion
we have developed the gem system, automated software for the rapid construction of draft simulation models of cell-wide metabolic pathways from genome sequence information by integration of public biological databases. automatic generation of the models is currently limited to metabolism in bacteria, and depends on the availability of ec numbers in public databases, but we have shown that qualitative models of the metabolic pathways of bacteria can be generated with low false positives and negatives, as validated by the comparison with kegg, ecocyc, and reed et al.'s model. although the generated models are draft models and thus still require expert curation to ensure the accuracy of simulations, manual involvement is minimized.

there are, however, several limitations of this approach. firstly, although ec numbers are generally effective for enzyme data representation for well known pathways, certain number of reactions have no ec number assigned, and therefore majority of the transporters are identified as genes but not included as reactions in gem system, making a large fraction of the model different from ijr <dig>  secondly, some ec numbers are incomplete and therefore ambiguous, and some become quickly obsolete, being assigned to new ec numbers. this resulted in more than  <dig> inconsistent enzyme assignments in gem system. thirdly, since the gem system identifies enzymes and the corresponding reactions based on the genome information, it cannot identify reactions that are experimentally observed but with no corresponding gene found. to overcome these problems, more general nomenclature for enzymes should be used in addition to the ec numbers and integrate necessary information that have no link to the gene sequences.

the system generates a stoichiometric simulation model in sbml format, which is readily applicable to flux-based analyses on a number of simulation platforms. the stoichiometric models can be used for metabolic flux analyses by supplying experimental data for exchange fluxes as reported elsewhere  <cit> . one potential application of gem system using this stoichiometric matrix is for dynamic large-scale simulation of metabolic pathways with hybrid dynamic/static simulation method  <cit> . using this method, quasi-dynamic simulation is achieved by subdividing the model into multiple "static modules" connected by "dynamic modules", and by calculating the flux distribution of static modules using the stoichiometry and boundary flux of the dynamic module that is modeled with traditional enzyme kinetics methods. in this way, necessary kinetic equations and parameters are significantly reduced while maintaining simulation accuracy. most reactions with high elasticities can be included in the static module, for which the stoichiometric matrix generated by the gem system is directly applicable.

the gem system can generate models automatically from public databases, but can also utilize private databases if such experimental data becomes available. mining of high-throughput data by bioinformatics may facilitate the quantitative modeling step; for example, it should be possible to take advantage of recent progress in "metabolomics". once genome-wide metabolome data becomes available via high-throughput techniques such as the capillary electrophoresis – electrospray ionization – mass spectrometry  method, metabolome data can be used to add unknown pathways, to supply the initial values of the metabolites, and to optimize kinetic parameters. parameter fitting of time-series metabolite concentration data to general dynamic equations such as generalized mass action is a possible substitution for accurate kinetic modeling, at least in the given time frame of the data set used for parameter optimization.

our next step is to model the gene expression layer, including transcription, translation, and degradation processes. the gem system is a powerful platform for this purpose, in no small part because the genome-based approach enables a link to databases of different fields based on the nucleotide sequences already described. because the gem system has been based on a generic bioinformatics workbench, that is, the g-language genome analysis environment  <cit> , the system can directly access genome sequences and perform computational genome data-mining. required parameters or information such as the structure of a promoter can be directly obtained from the genome sequence as the simulation takes place. in this respect, gem system can be extended to be applicable for the modeling of eukaryotes, by identifying protein subcellular localizations from database reference and with predictable methods  <cit> . although the parameters in the functional annotation process should be revised to cope with the information availability and the existence of a multitude of duplicate gene paralogs, by selecting tissue specific gene expression pattern with expressed sequence tags  or microarray data, the general approach of the gem system should also be applicable for tissue specific cellular models of higher eukaryotes. in sum, the rapid accumulation of biological information now allows the realization of integrative systems biology, but at the same time makes manual modeling unrealistic; therefore, a genome-based automatic modeling procedure is a crucial step forward for the grand challenge to construct life in a computer.

CONCLUSIONS
the gem system facilitates systems biology research by prototyping a metabolic pathway simulation model from a genome. given a complete genome, all modeling procedures are automated with configurable options, generating stoichiometric models in sbml format that are readily usable by cell simulators. in comparison with the kegg organism-specific databases, the qualitative modeling step has high accuracy, with few false positives and negatives. more than  <dig> models generated from complete bacterial genomes are available for download online, with visualized pathway maps and gene lists.

authors' contributions
ka conceived the system, developed the software, carried out the validations, and drafted the manuscript. yy and ks participated in the design of the software. yn and mt supervised the work. all authors read and approved the final manuscript.

