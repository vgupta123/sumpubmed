BACKGROUND
introduction
not so long ago, the cooperation of medical science and informatics was not so common, but nowadays, collaboration of scientists from completely different fields of science is not unusual. moreover, the cooperation of scientists from different domains initiated the formation of intermediate and interdisciplinary scientific fields; those which can combine knowledge and experience from apparently distant research areas. it appears that without the cooperation across boundaries resulting from differences between the various fields of science, the current image of scientific work would look quite different.

several years ago, medicine and life sciences began to generate a huge amount of data. this unimaginably large amount of data had to be processed and stored in some way. various research centers around the world began to create data repositories trying to solve the problem of collecting and processing large volumes of biological information. the solutions and techniques, which focus on storing medical data, are increasingly fine-tuned, due to the fact that the amount of information is constantly growing. one of the major reasons for the creation of biological databases is the very large amount of genetic information, including nucleotide sequences. since  <dig>  when the sanger sequencing method was invented, the problem of storing genetic information has been prevalent. genbank
 <cit>  is one of the most famous databases in the world that stores genetic information. genbank and also other biomedical databases are maintained by the national center for biotechnology information . the ncbi not only hosts the databases, but also provides a uniform system for data retrieval and additional programming tools that allow software developers to create specialized applications for biomedical data integration.

retrieving information from ncbi databases
the most commonly used system for searching and retrieving information from databases that are maintained by the ncbi is entrez
 <cit> ; the entrez system is also a tool for indexing records in ncbi databases. the first version of the system was distributed on cd-rom . at that time, entrez provided data on nucleotide sequences from the genbank, amino acid sequences from the protein database
 <cit> , which stored protein sequences corresponding to nucleotide sequences in the genbank, and also scientific abstracts from the pubmed database
 <cit> .

functioning of the entrez system is based on the connections between nodes that correspond to specific databases. these nodes and the structure of connections between them in the entrez system are presented in figure 
 <dig> 

the system is constantly being developed and improved; the number of nodes supported by the entrez is increasing all the time. the original system, which contained three nodes, i.e. genbank , proteins and pubmed, has evolved in recent years, adding new nodes, including
 <cit> :

• taxonomy
 <cit> , organized around the names and phylogenetic relationships between organisms;

• structure
 <cit> , organized around the three-dimensional structures of proteins and nucleic acids;

• genome
 <cit> , representing completely sequenced organisms and those for which sequencing is in progress, together with links to genomic data available for these organisms;

• popset
 <cit> , a set of dna sequences that have been collected to analyze the evolutionary relatedness of a population;

• omim
 <cit> , which is a database of all known diseases with a genetic basis;

• snp 
 <cit> , the single nucleotide polymorphism database – a public-domain archive for a broad collection of simple genetic polymorphisms.

access to these resources can be achieved by a graphical user interface of the ncbi entrez system or by using ncbi web services.

web services
a web service is a software system designed to support interoperable machine-to-machine interactions over a network
 <cit> . web services provide a way in which we can build distributed web-accessible programs that are key components for the implementation of different types of software applications in the service-oriented architecture 
 <cit> . unlike traditional client/server applications, web services do not provide the graphical user interface . they provide their programmatic interfaces across the network in order to share processes, data and operational logic. descriptions of these interfaces are published by the web services creators and can be discovered and then used by web services consumers, i.e. software developers. software application developers can enrich their programs by using functionality that is available through the particular web service.

web services are widely used in business software applications
 <cit> . what decides on their popularity is the fact that they provide the interoperability between different software applications, running on a variety of platforms and/or frameworks
 <cit> . this is achieved by the use of several technologies, including: xml , which allows a structure to be described and assigned to the transferred data
 <cit> , wsdl , which is used to describe the functionality offered by a web service
 <cit> , soap , which allows the exchange of messages and data between client applications and web services and also to call operations shared by the web service
 <cit> , and uddi , which is a mechanism to register and locate web service applications
 <cit> .

web service orchestration and choreography
the availability and popularity of web services supported by the development of associated standards, protocols and technologies, like xml, soap, wsdl and uddi, provided the opportunity for building complex processes that are based on the message flow between many distributed web services. however, the construction of such systems requires the appropriate coordination of all components taking part in the composite process. orchestration and choreography permit this task. orchestration
 <cit>  refers to a process of coordination regarding how component web services will be invoked, what information they will receive and what information they will return. the interaction between the coordinating service and web services is carried out using messages. a central middleware service, called an orchestration engine or orchestrator, coordinates the flow of messages during the process and models various communication paths. it maintains complete control over the running process and mediates the exchange of data. choreography
 <cit>  is similar to orchestration, but the main difference is that there is no central coordination between calls of particular web services. choreography is not described from the view of the single participant , but from the global perspective of the cooperating participants
 <cit> . the use of a particular coordination method depends on the situation and the complex process that is modeled.

there are several tools that allow the development of complex workflows and the coordination of information flow between web services, including taverna
 <cit> , sadi
 <cit> , altova mapforce
 <cit> , and others. taverna is a universal, open-source tool for designing and running scientific workflows. these workflows combine different web services, local services and scripts that can be used to access various biological databases and to perform different analyses in molecular biology and bioinformatics. sadi is a framework for the discovery of, and interoperability between, distributed biological data and other bio-oriented analytical resources
 <cit> . sadi adds semantics to descriptions of interfaces of existing web services in order to simplify and automate service design and deployment. altova mapforce is a domain-independent, visual data mapping tool for advanced data integration projects. it allows the user to design the flow of data between various data sources, transform the data and generate the code of the transformation. web services can be one of the data sources and mapforce allows the construction of complex pipelines combining these web services. mapforce is a commercial tool. microsoft sql server integration services 
 <cit>  is another commercial product allowing the integration and transformation of data from various data sources, including web services. workflows similar to those built in taverna may contain many component tasks accessing web services that can be invoked in the planned sequence.

in this article, we present a new tool for the efficient and dynamic exploration of data in genbank and its allied databases. we have designed and developed a special search genbank system and web portal, which enables searching for information in genbank and also in other ncbi databases through the interactive orchestration of ncbi web services. moreover, by using macros, users transparently design their own choreography of the web service utilities, extending the possibilities of standard data searching of the ncbi entrez.

implementation
while exploring biomedical databases in the face of the growing number of bio-resources available worldwide, we have to answer one fundamental question: whether to integrate the available data or use existing systems through the shared endpoints? since the integration of biological data resources and tools requires investments in computer infrastructure and its maintenance, in our solution we adopted the latter approach. search genbank uses web services and a set of available utilities in order to explore biomedical databases of the ncbi.

search genbank provides three paths of data exploration:

- simple searching based on the specified user’s query,

- advanced searching based on the specified user’s query, and

- advanced exploration with the use of macros.

each of the above mentioned paths starts with the initial query, which is specified by a user. this query can be given as a single word or phrase, which usually takes place in the simple searching mode, or can have dedicated syntax specified by ncbi, which is typically used in the advanced searching mode. advanced exploration with the use of macros allows not only the submission of a query to one particular database, but also traversing a predetermined path between various databases and discovering related information. from a technical point of view, we can treat simple and advanced searching modes as a special case of the advanced exploration with the use of macros, wherein we use a single database for the exploration.

query syntax and construction, how phrases provided by users are automatically broken into terms and how they are mapped to appropriate fields that are searched by the ncbi search engine are described in the following subsections. these are internal features of the ncbi entrez search engine. however, we describe them here because they are implicitly used while invoking ncbi web services by search genbank. we also present the architecture of the search genbank system and the flow of information in various paths of data exploration. before we go deeper into functional details of the system, we will consider the following scenario.

motivating use case
this scenario shows one of possible exploration paths when diagnosing diseases based on the analysis of a patient’s dna. changes in the dna sequence may be spontaneous or caused by chemical or physical factors. when they occur at a frequency of less than 1% of the population they are identified as a mutational change – genomic mutations. these changes in the nucleotide sequence can cause changes in the protein sequence, structure, and function, such as loss of function, or less frequently, the acquisition of a new function. unfortunately, while recognizing the change in the dna sequence, we can rarely clearly answer the question of how it affects the function of the protein. if a change in the dna causes the emergence of a stop codon that ends the translation process, we can clearly state that there is a change of the protein function due to the truncated amino acid chain produced or complete loss of function if the cell degrades truncated protein. any other change in the dna can affect the structure and function of the protein, but the identification of the effect of the nucleotide change is primarily based on the evaluation of the patient’s phenotype or evaluation of how the presence of a disease correlates with the presence of mutation in members of the studied family. such an analysis is typical when diagnosing many diseases which have their origin in dna mutations.

for example, mutations in the hepatocyte nuclear factor -1alpha gene  are the most frequent cause of mody 
 <cit> . when examining patients suspected of having diabetes, a diagnostician, biologist or medical doctor verifies whether there are changes in the hnf1a gene, and if so, what the type of change is – whether it is a mutation or a polymorphism, and whether the change has been described and is known to be pathogenic. in addition, when this change has not been previously described in a database, how it affects the protein sequence and structure, and whether there are any publications in this field that must be considered. such analysis requires repeated access to a number of biological databases and searching links between different types of data. this example is illustrated in figure 
 <dig> 

the analysis presented in this scenario may generate various, shorter or longer exploration paths depending on the conclusions drawn from the investigation. search genbank provides various exploration modes for such scenarios, and each of them begins with an initial query to particular database.

query syntax and construction
while searching the ncbi databases, users usually input key words or search phrases to the search box and submit them to the ncbi entrez search engine. the strings entered into entrez are converted to queries with the following format
 <cit> :

term1opterm2opterm3op…

where: term, specifies the query phrase, field is a searched field , and op is one of the available logical operators: and, or or not .

example: breast cancer and human

entrez divides the query into a series of elements, which were separated in the original query by a space. if the query includes logical operators, the system will divide the query into a series of elements, first, with respect to the logical operators, and then with respect to the space symbol
 <cit> . each element of the query is processed separately, and search results are then merged according to the operators used in the query . the default logical operator is and.

in the situation where the query consists only of a list of uids  or accession numbers, entrez will return only those records to which given identifiers refer. therefore, no additional query processing will occur.

automatic mapping of phrases in queries submitted to entrez
while processing queries, the entrez system automatically searches the database for each phrase of the query taking into account the following criteria:

 <dig>  taxonomic node – each phrase is limited to the  field or . for example, for the mouse phrase, the system automatically maps the phrase to: “mus musculus” or mouse.

 <dig>  names of journals – the database is searched against the names of journals, e.g.: science → science.

 <dig>  name of the author – the result of the query is narrowed to  field. not every phrase can be mapped to the name of the author field, because the correct name of the author can only be the word, followed by one or two letters. for example: mrozek d → “mrozek d”.

if the system does not return results after the auto-mapping process, then the rightmost phrase of the query is removed and mapping process is repeated until the system returns results. if, despite this, system still does not return the results, all query phrases are limited to the all fields field, and they are joined by the logical operator and.

in table 
 <dig> we show examples of queries before and after the automatic mapping process.

entrez programming utilities
entrez programming utilities 
 <cit>  is a set of eight programs running on the ncbi server side. these utilities provide a stable interface to the ncbi entrez and ncbi resources. we can use eutils in two ways. the first way is that our application can send a properly composed url address to the server, which makes the tools available so that it can receive the response from the tool in the xml format. the second, more elegant way, is to use web services that guarantee the interoperability across platforms, applications, and programming languages, and rely on standardized protocols . on its website, the ncbi makes available links to the wsdl files with a description of the web services
 <cit>  that provide the access to eutils.

in table 
 <dig> we present a list of all eutils tools with a brief description of their function
 <cit> .

interactive orchestration of eutils
orchestration allows the user to combine various utilities in order to create a composite exploration process. search genbank is a kind of interactive orchestrator allowing various exploration paths to be modeled. it allows users not only to submit queries to particular databases and receive results; users are also able to browse related records in other databases. working interactively with the search genbank, they translate their own logic of the analysis process into the flow of information from the search genbank to the ncbi web service and opposite. actually, it is search genbank that makes the translation of user’s navigation paths to a set of commands sent and received to and from the ncbi web services and coordinates the compound analysis process. this interactive orchestration is available in all three modes of data exploration, which will be discussed in more details in the results section.

for example, the basic combination of the tools included in the eutils package is
 <cit> :

esearch → efetch/esummary
this combination allows the user to search the specified database and retrieve adequate records that satisfy the criteria contained in the given query. the esearch program is responsible for generating a list of record identifiers  in a given database, for those records that satisfy the given query . the efetch or esummary programs retrieve records from the specified database with identifiers according to the given list of uids. calls of appropriate programs are coordinated by the search genbank.

the list of uids can be explicitly entered on the id input of the next tool  or can be implicitly passed to the next tool from the entrez history server using a pair of webenv-querykey parameters . the first of these methods is very useful when users interactively choose records through the graphical user interface  and traverse between data sources passing uids of these records on to the next program in the pipeline. the second method allows the list of uids to be stored outside of the search genbank, at the entrez history server, which is a valuable feature when there is a full navigation path, i.e. pipeline, already prepared and predetermined  or when dealing with huge amounts of data. in the latter case, the use of the entrez history server makes it feasible to limit the number of data transferred to and from the search genbank between successive invocations of web services.

in figure 
 <dig> we present the architecture of the system and sample information flow when searching in the simple or advanced searching modes. in this case, a user specifies a query as a free text or in the structured form described in previous subsections. he/she also specifies a database, against which the query will be executed . the search genbank calls the appropriate tool available through the ncbi web service, the esearch in this case, and passes the name of the database, the user’s query and any additional parameters as input arguments. the esearch tool returns only basic information  on the records that satisfy the user’s query; therefore, in order to present useful data, the search genbank calls the esummary tool, which is parameterized by messages provided by search genbank, the esearch tool, and the explored database.

now, let us suppose that the user decides to see the full details of the presented records. in this situation, he/she interactively triggers an invocation of the efetch tool  through the search genbank web page. if the user wants to see related records in other database , he/she uses dedicated links, which implies an invocation of the elink tool followed by the invocation of the esummary tool again, passing appropriate parameters to each of the tools.

in other words, if the objective of the user is to retrieve records from one database and then find associated records in another database , the following combination of tools must be used to accomplish this task:

esearch → elink → efetch/esummary
in this pipeline, the elink is responsible for generating a list of uids for records from a destination database, which are related to the records from the source database, against which the user’s query was executed. it is worth noting that the destination database can be the same as the source database, so that links can be followed between records of the same type, often called “neighbors”, in sequence and structure nodes
 <cit> .

navigation paths are described in more details in the results and discussion section. however, we have to be aware that they involve interactive orchestration behind the scenes; that is the role of search genbank as an orchestrator.

ad-hoc choreography in advanced data exploration
when the exploration path is predetermined , the search genbank system minimizes the coordination between calls of particular tools of the ncbi web services applying choreographies. in our system, choreography defines:

- what tools will be used during data exploration,

- what resources and databases will be involved in the process,

- what is the order of using resources and tools,

- and, indirectly, what will be the message flow between components taking part in the process.

in search genbank, users implicitly create choreographies by designing macros. in figure 
 <dig> we can see the architecture of the system and a sample flow of information during advanced data exploration using macros. in the example, a user defines a macro by specifying: 1) the initial query to be executed against the first of the chosen databases, 2) all databases that he/she wants to explore in order to find related information he/she is interested in, and 3) the order of database access. on the basis of the information provided by a user, search genbank translates the macro into the choreography of calls of appropriate tools available through the ncbi web services. an appropriate pipeline of successive calls is created, including esearch, elink and esummary tools. in figure 
 <dig>  the esearch component is shown running the query provided by the user against the nucleotide database. results of the query execution are passed to the first elink, which searches related records in the protein database, and again, returned records  parameterize the call of the second elink component, which finds related articles in the pubmed database. finally, the summary of articles is returned by the esummary component in the form of the xml document. this document is sent back to search genbank, which presents it to the user in a friendly format.

similarly, if we are interested in a wider spectrum of relations, for example, our goal is to find the amino acid sequences associated with genes that are, in some way, related to nucleotide sequences from the population set of sequences belonging to the mouse, then the number of calls to the elink tool is three:

esearch → elink → elink → elink → efetch
for such a case, the esearch returns a list of uids for all of the population sets of sequences for the mouse retrieved from the popset database. the first call of elink finds a list of uids of nucleotide sequences from the nucleotide database, which were included in the found population sets. the second call of elink generates a list of genes from the gene database, which are linked to these nucleotide sequences. the result of the last call of elink is a list of uids of proteins from the protein database that are associated with the previously obtained list of genes.

similarly to the interactive orchestration in the simple and advanced searching modes, the destination database can be the same as the source database if we want to find neighbors in sequence and structure nodes.

RESULTS
search genbank provides a web portal that allows users to search and retrieve information from ncbi databases. in the beginning, it was designed to display only nucleotide sequences of the genbank database, hence the name of the portal. at that time, we cooperated with the department of internal diseases, diabetology and nephrology, medical university of silesia, zabrze, poland, as we needed referential sequences for the comparison of dna samples obtained from patients’ serum in order to find mutations while diagnosing different types of diabetes mellitus. however, since this time we have redeveloped the entire system and the web portal, extended its functionality towards more sophisticated searching, which includes queries and macros and the involvement of other ncbi databases. however, for historical reasons, the name of the portal remained unchanged.

the web portal has been tested for the following databases :

- nucleotide – the main database of nucleotide sequences ,

- dbest <cit>  – the database of est sequences ,

- dbgss <cit>  – the database of gss sequences ,

- genome – representing completely sequenced organisms and those for which sequencing is in progress,

- popset – the database of sequences from a single population study,

- taxonomy – the taxonomy database,

- gene
 <cit>  – the database of known genes,

- omim – the database of all known diseases with genetic components,

- snp – the database of single nucleotide polymorphisms,

- pubmed – the database of citations and abstracts for biomedical publications,

- pmc
 <cit>  – the database of free full-text biomedical and life sciences journal literature,

- journals
 <cit>  – the database of scientific journals,

- protein – the database of amino acid sequences.

the web portal allows the exploration of resources from the databases mentioned above in the same manner, as it is resolved in the ncbi entrez service . apart from the standard search method, in which a user manually enters a query to the search box, we also made available an advanced search module, which allows the user to define appropriate limits and constraints restricting the results of the query.

the search genbank internet portal is also equipped with a module for building macros. macros are used in order to automate searching other databases for records which are related to those that are the result of the initial query. this module is an innovative part of search genbank and we did not find any equivalent software that would offer the same functions.

the application interface was designed and composed taking into account the expectations of modern users of internet services and is compatible with the accepted principles of transparency in presenting information on web sites.

the program allows registered users to utilize the simple system for saving entered queries and built macros. this amenity introduces to the service the possibility of reusing saved elements, without remembering the configuration of built macros or writing a complex query again.

the web portal is available at: http://sgb.biotools.pl. in the following sections we will present the functionality of the search genbank system.

quick and simple data searching
simple searching is available on each site of the search genbank exploration service. there is a text field at the top of every page , where users can enter a single word or a phrase that they want to find. additionally, from the drop-down list on the right side of the query field, they can select the name of the database to which they want to submit the query. in figure 
 <dig> we present the results for searching genetic data in the nucleotide database for the sample phrase human hepatocyte nuclear factor.

it is worth noting the form into which the given phrase human hepatocyte nuclear factor has been transformed. the following query enhancement blocks may appear on the left side of the results pane:

- result for query – shows the user’s query translated to the form accepted by ncbi entrez search engine, together with the number of records satisfying the query, and gives also the possibility to save queries ;

- other variants – shows the list of suggested alternative queries together with the expected number of results;

- did you mean? – is optional and points to possible errors in the spelling of the provided query.

in fact, the simple search mode in search genbank is similar to the standard search method used in ncbi entrez, providing similar functionality, but organized differently on the website. records that have been returned as a result of a query can be browsed and added to the clipboard . when we browse a single record or the content of the clipboard, it is also possible to check whether there are any records in other databases that are related to the browsed record . for example, if we want to search genetic data from the nucleotide database, we can also link this data with protein sequences from the protein database or with bibliographic data from the pubmed database. this is done through a series of links that are made available to the user on the left-hand side of the application window .

it is also possible to find neighbors  by using available links. for example, browsing a genetic record from the nucleotide database we can find highly similar sequences  to current records or genomic sequence records that have the current mrna record as an annotated feature marking the exons of genes.

advanced data searching
terms extracted from the phrases entered by a user are not always mapped to the database fields, which the user would expect . as a result, the list of returned records can often be too large or may contain inappropriate records. advanced searching in the search genbank portal allows for the precise composition of queries, using search fields that are specific for the selected database and additional limiting elements. queries are constructed according to the rules presented in the section query syntax and construction, typically combining many simple filtering criteria by the use of boolean operators. for example:

“hnf1a” and “human” and “mody”

in this example, a user wants to find all nucleotide sequences in the nucleotide database that correspond to hnf1a gene in human organism and are involved in the maturity onset diabetes of the young . the search genbank portal provides an appropriate query builder, which allows the construction of complex queries. the query builder is presented in figure 
 <dig> 

briefly, the advanced searching process can be completed in the following steps:

 <dig>  choose the database from the main query form .

 <dig>  create your own complex query:

a. choose a logical operator combining appropriate phrases of the query.

b. choose the search field.

c. enter the search phrase.

d. click add to search box button.

e. repeat steps a through d, if necessary.

 <dig>  press the search button, which is located at the top of the web page, next to the drop-down list with the names of databases.

moreover, the module of advanced searching also allows users to enter additional information in order to limit the number of query results. constraints can be imposed on the range of publication dates or modification dates for records in the specified database. to use this feature, appropriate fields of the search form should be completed in the query builder .

results of the constructed query are presented in the same way as results of the simple searches. the clipboard options and links are also available, and work in the same way for the results of queries made using the advanced search form.

creating macros
macros allow users to discover more biological information about particular data by following the links defined between databases. they automate the search for records which are related to records from another or from the same database. for example, starting with nucleotide sequences of the hnf1a gene returned from the genbank, we can automatically follow all single nucleotide polymorphisms  mapped to the current records and then, all scientific articles from pubmed related to these snps. such macros can be created by using the appropriate form available in the search genbank service. this form is presented in figure 
 <dig> 

in order to construct a macro, it is necessary to specify the name of the initial database in which to search records that match the entered query. then, from a shared list, the user chooses additional links that allow traversing to other databases or the same database, when looking for neighbors. after the macro is completed, it can be executed and saved in the dictionary of macros, provided that you are logged in as a registered user.

it should be noted that macros do not show records from the initial and intermediate databases and do not require reviewing and selecting any records. users obtain a list of records from the last of the linked databases. theoretically, the number of links entered into the macro is infinite, but we should take into account the fact that not all of the records in the ncbi databases have annotations linking related items in other databases. however, over time, the number of links between the ncbi databases will grow. therefore, we can be optimistic that, in the future, macros will prove to be a great alternative to the laborious, manual exploration between databases.

other examples of macros are shown in table 
 <dig> 

discussion
construction of the search genbank and possibilities provided by the system confirm that the role of web services in the integration and exploration of various biological resources is important. it also shows how the coordination of the complex workflows over web services can be achieved by orchestration and choreography.

depending on the exploration mode, the search genbank serves as an interactive orchestrator or choreographer executing various exploration paths. comparing the search genbank system to other tools that orchestrate web services, like taverna and sadi, and also commercial mapforce and sql server integration services, we can say that these tools have a universal purpose and provide the possibility to explore a broader range of resources and web services. sadi gives even more by adding semantics to the discovery of distributed data resources. however, the above mentioned tools have different target users. these can be, for example, specialists in bioinformatics and data flow architects, whereas search genbank is dedicated, e.g. to biochemists, biologists and medical doctors. users of search genbank do not have to take care of the implementation details, web service interfaces, domain specific query languages, and how to connect inputs and outputs of particular tools. these details are hidden under the search genbank web gui that our system provides. in search genbank, exploration paths can be constructed dynamically and users are able to traverse between various data sources whilst still having an open door to take another step. on the other hand, while working with macros, users construct predefined traverse paths that are similar to workflows in the taverna and sql server integration services, although with limited possibilities, but in a simpler manner through the friendly graphical user interface that is appropriate for them.

search genbank is still extendable. similarly to other tools, search genbank also allows the addition of new wsdl files describing new web services. however, this is only possible for administrators of the system through the special web form that is presented in figure 
 <dig> 

in the future, we plan a further development of the system by extending its capabilities in accessing biomedical resources available world-wide. we want search genbank to provide an integrated access to distributed tools and biological data from various scientific repositories, hiding the implementation details of a particular set of functionality under a friendly graphical interface.

CONCLUSIONS
search genbank provides an internet portal that allows simple and advanced data searching in genbank and other databases which are maintained by the national center for biotechnology information. furthermore, the possibility of creating macros allows for cross-database exploration of related data. this is a unique feature of the search genbank system. currently, the strength of this solution may not be fully utilized, due to the fact that the current relationships between records of different databases are not very complex. however, we believe that the potential of the idea that lies in the automation of finding useful information in biomedical databases will grow with the increasing density of relationships between data stored in particular databases.

the search genbank system has been designed for people involved in the analysis of biological data, including biochemists, molecular biologists, medical doctors, staff of genetic laboratories and molecular pathologists. registered and logged in users of the system can save queries and macros in the special dictionaries, so that, in the future, when conducting similar studies, they can reuse them.

search genbank complements the capabilities of the ncbi entrez portal. it concentrates largely on genetic data, based on the assumption that genetic data are currently the most frequently used data in life sciences. however, it also allows data searching and data exploration in other ncbi databases.

availability and requirements
project name: search genbank

project home page:http://zti.polsl.pl/dmrozek/science/sgb/sgb.htm

operating systems: platform independent

programming language: php

other requirements: apache  <dig> . <dig> or higher, mysql  <dig> . <dig> or higher, php  <dig> . <dig> or higher with the following extensions: com_dotnet, ctype, session, filter, ftp, hash, iconv, json, odbc, pcre, date, libxml, standard, tokenizer, zlib, simplexml, dom, spl, wddx, xml, xmlreader, xmlwriter, apache2handler, curl, gd, mbstring, mysql, mysqli, pdo, pdo_mysql, soap, sqlite

license: free for academics

any restrictions to use by non-academics: licence needed

competing interests
the authors declare that they have no competing financial interests.

authors’ contributions
as and dm were developers of the search genbank system. dm was the manager and supervisor of the project. he defined functional requirements for the system and designed possible architectures. as was a main software implementer. bmm was an advisor in designing and testing the system. bmm, dm and as equally contributed to the paper. all authors have read and approved the manuscript.

