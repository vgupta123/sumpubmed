BACKGROUND
alternative splicing  is the process by which a single gene can generate multiple transcripts, and therefore different proteins, through the alternative use of exons. as our knowledge of the structure and organization of genomes increases, as is being increasingly recognized as a fundamental process at the basis of the molecular diversity and complexity within the cell, of gene regulation, and of a number of critical biological processes ranging from development to disease  <cit> . alterations of as are linked to human diseases ranging from cancer to muscular dystrophies, from neurodegenerative diseases to obesity  <cit> . a better understanding of the mechanisms that regulate as and of the relationships between as and pathological states will provide new, important insights into these diseases, leading to advances in their diagnosis, and opening the way for the development of novel molecular therapies.

high-throughput rna sequencing technology  provides a very large amount of information about transcriptional state, averaged across a population of cells, under the form of short reads that map to genomic regions corresponding to gene transcripts  <cit> . reads mapping to the exons of a gene indicate that the corresponding gene is likely expressed. exons and junctions that are specific to a single isoform of a gene make it possible to identify the particular splicing isoform or isoforms that are expressed  <cit> , while more accurate isoform reconstruction can be achieved by analyzing reads that map to exon-exon junctions. finally, the number of reads aligning to a gene region, when normalized to the length of the region, provides an estimate of the expression level of that gene  <cit> . the results of an rna-seq experiment can therefore provide a snapshot of the rna landscape in a population of cells in a given state, ranging from a catalog of all rna molecules represented in it, to their exact structure, to their relative expression levels  <cit> .

we are developing an innovative computational pipeline for the analysis of alternative splicing through rna-seq, called pasta . the pipeline is composed of three modules, dealing with splice junction detection, isoform reconstruction, and expression level estimation, respectively. here we describe the first module of the pipeline, whose purpose is to identify all exon-exon junctions that can be inferred from aligned short reads. this is accomplished through a highly accurate splice-junction identification algorithm combined with heuristic methods to score junctions on the basis of biologically relevant features.

implementation
the first step in running pasta consists in aligning short reads obtained from rna sequencing to the reference genome. this step is usually performed using an existing, fast alignment tool such as bowtie or bowtie <dig>  <cit> . since the reads are aligned against the genomic sequence, reads that are entirely contained within exons will align correctly, while reads falling over the junctions between two exons will, in general, fail to align. the main task performed by pasta is to infer the exact location of exon-intron boundaries using the unaligned reads.

in contrast to the seed and extend method used by the majority of similar programs, pasta relies on patterned alignments combined with a logistic regression model. patterned alignments allow pasta to identify the position of putative splice junctions with high accuracy. the logistic regression model is used to score putative splice junctions according to their biological “context”: for example, the presence of canonical splice signals  <cit>  and of regulatory elements such as the branch-point sequence , and the expected distribution of intron sizes.

patterned alignments
the pasta algorithm considers each unaligned read in turn and generates two sets of “patterned” subsequences from it, by splitting it at different cutoff points. if we denote the read length with n and we choose a stepping distance s and a minimum fragment size m, each patterned pair will consist of the sequence from the start of the read to position p and of the sequence from position p to the end of the read, where p ranges from m to n-m in steps of s. all these fragments then undergo a second round of alignment. fragments longer than a set minimum size are again aligned to the reference sequence with bowtie, while each remaining short fragment is aligned to the region around the other fragment in the pair, using a local alignment procedure. for example if n= <dig>  the minimum alignment size is  <dig> and the step size is  <dig>  patterned pairs ,  and , as well as single fragments ,  and ,  will be aligned to the reference genome . to identify exon-intron boundaries, pasta first looks for alignment matches from all patterned pairs ,  and . if alignment matches are reported for both the left and right fragment in a given patterned pair , pasta will optimize the exon-intron boundary adjusting the fragments by  <dig> or  <dig> nucleotides in both directions around the cutoff point. for example, if alignment matches are found for patterned pair , pasta will also test the alternative patterned pairs ,  and , , to identify the patterned pair that minimizes sequence alignment mismatches. its position will be used as the putative exon-intron boundary.

the alternative case occurs when there is no double match for a given read; in other words, there is no pair of fragments whose left and right components have a unique alignment to the genome. in this case pasta will pick the fragment with the longest aligned match from individually aligned fragments, and perform a local alignment step in order to determine the location of the other half of the pair.

suppose for example that the left fragment  is the longest fragment observed to have an alignment match. pasta will search the chromosome region adjacent to its position to locate the optimal position of the remaining right fragment of length  <dig>  the size of the region analyzed by the local alignment procedure can be configured by user, with a default of  <dig>  base pairs. this step obviously increases the computational cost of the algorithm, since each short read gives rise to a large number of fragment pairs; on the other hand all these fragments are relatively short and can therefore be aligned very efficiently. on average, the second round of alignment takes  <dig> to  <dig> times longer than the initial one, but this performance penalty is compensated by a large gain in accuracy, as shown below.

a logistic regression model for splice junction prediction
because of the uncertainty involved in identifying the precise location of splice junctions from short rna-seq reads, pasta employs a logistic regression model to assign a score to each putative intron produced by a pair of junctions. the model takes into account several factors that characterize the intronic context, such as the presence or absence of canonical splicing signals, the posterior probability of the intron size from the pareto distribution, the alignment mismatches  <cit> . in particular, intron sizes can be modeled by a pareto distribution whose parameters are organism-dependent, since the intron size distribution in a specific organism follows a characteristic curve .

the logistic regression model can be written as f = ß <dig> + ßz + ε, where f is the logistic regression value, ß <dig> and ß are coefficient vectors and z is a vector containing the values of regression factors described above. the coefficients of the logistic regression model and of the pareto distribution are estimated from existing splice junction annotations for the species under consideration  <cit> . the pasta package provides pre-computed models for many commonly studied organisms.

individual explanatory variables contribute differently to the logistic regression model as shown by regression coefficients . in general, sequence alignment similarity and intron pareto score contribute most significantly in the organisms under study. in addition, the coefficient of the same explanatory variable is also different by organisms. for example, intron size contributes more to the logistic regression model in maize compared with mouse. this is consistent with the fact that there is a more stringent preference for shorter introns in maize compared with mouse.

whenever a set of reads gives rise to multiple putative junctions, the logistic regression model is applied to the resulting introns to generate a score for each. the score is computed as 1/) which returns a value in the range  <dig> to  <dig>  with large negative values of f producing probabilities close to  <dig>  and large positive values producing probabilities close to  <dig>  the putative junction that produces the highest-scoring intron is then chosen as the predicted junction.

junction identification
the procedure described above is used to determine the location of a putative splice junction given a single short read. in general, a predicted junction will be supported by multiple short reads aligning to the same general region. therefore, pasta will cluster putative splice junctions based on their positions. if a cluster contains a single putative junction , pasta will directly report its position as a predicted junction. if instead the cluster contains several putative junctions, the putative junction with the highest value of the logistic regression model will be used to determine the position of the junction, and the number of putative junctions in the cluster will be reported as the junction coverage.

it is important to note that, although the process here described does not explicitly look for canonical splicing signals, the presence or absence of the canonical splicing signal is one of the variables included in the logistic regression model. by assigning different weights to this variable, the user can therefore determine how strong the preference for canonical splicing junctions should be.

paired-end rna-seq reads
when working with paired-end reads, pasta applies the patterned alignment procedure described above to the reads in each pair for which no full alignments were found. reads in a pair are aligned independently, but information regarding the position of one of the reads can be helpful in aligning the second one. for example, assume that the leftmost read in a pair  has a full-length match to the genome, while the rightmost read  requires a patterned alignment. if it becomes necessary to perform local alignment on the left fragment of read b, the region to be scanned will be delimited by the position of read a.

software description
pasta is distributed as a command-line tool for gnu/linux systems, and is specifically designed for inclusion in automated rna-seq analysis pipelines. pasta can take advantage of multiple cores by parallelizing operations whenever possible. the program takes as input a file containing short reads in fastq format , and an argument indicating the organism being analyzed, in order to load the correct parameters for the logistic regression model. the output consists of a file listing all identified junctions in bedgraph format, and a file containing the positions of all matched reads in sam format. in addition, pasta generates optional output files containing alignment details for each predicted junction and overall alignment statistics, such as the splice site signal and the probability score of the predicted junction from the statistical model. pasta requires approximately 10 gb of ram and a runtime of 5 hours to process  <dig> million paired-end rna-seq reads of 50 bp using  <dig> parallel threads. the program is highly configurable through command-line arguments or a configuration file, and an integrated help system provides extensive documentation for all available options. the download package provides sample files that can be used to test the program and experiment with the different options.

RESULTS
we have tested pasta both on simulated rna-seq data, to measure its sensitivity and specificity in identifying known splice junctions, and on two real mouse rna-seq datasets, in order to assess the program’s ability to identify splice junctions inferred from ensembl annotations and to estimate the number of novel potential junctions discovered. in both cases, the performance of pasta was compared to that of tophat , one of the most widely-used programs for splice junction detection  <cit> .

comparison of pasta and tophat on single end simulated data
as a first test of the performance of pasta, we compared its ability to detect known splice junctions against tophat. we generated four simulated datasets of 50nt single-ended rna-seq reads from mouse transcripts appearing in ensembl gene annotations, corresponding to average depths of coverage ranging from  <dig> to  <dig> reads per nucleotide, and we introduced random sequencing errors at a frequency of 1/ <dig> basepairs and single nucleotide polymorphism  at a frequency of 5/ <dig> basepairs. after running pasta and tophat on the four datasets, we measured each program’s sensitivity and specificity. the results are reported in figure  <dig>  as read depth increases, sensitivity increases  but specificity also decreases . the results show that pasta consistently exhibits a lower false negative rate than tophat, especially at low coverage level. sensitivity is consistently higher than tophat , especially for transcripts expressed at a low level. pasta is therefore well-suited for identifying “rare” splicing events, reducing the risk of missing splicing events critical for as analysis.

this indicates that the use of pasta may lead to a reduction in sequencing costs, for example by multiplexing more samples in the same run, since it is able to produce reliable results even at low sequencing depths.

comparison between pasta and other pipelines on paired-end simulated data
we also compared pasta with several other splice junction detection pipelines using simulated datasets of  <dig> nt paired-end reads provided by grant et al.  <cit> . two different datasets were generated on the basis of different polymorphism frequencies and error rates. the first datasets contains simulated reads with an indel rate of  <dig> %, a sequencing error rate of  <dig> %, and a substitution rate of  <dig> %. the second datasets has an indel rate of  <dig> %, a sequencing error range of 1%, and a substitution rate of  <dig> %. in both cases, pasta performed significantly better than mapsplice, splicemap or tophat, and achieved performance comparable to gsnap or rum, as shown in figure  <dig> 

overall, simulations with various sequencing depths show that pasta is highly sensitive in identifying splice junctions even when the sequencing depth is relatively low. pasta is able to identify splice junctions with reads of small to medium size  and rare transcripts that result in low coverage levels. on the other hand, pasta achieves results similar to other comparable tools on longer reads and higher sequencing depths, as demonstrated by the second simulation study.

analysis on mouse rna-seq data
we have performed two rna-sequencing runs on illumina genome analyzer 2x using mouse samples in order to generate initial validation data for pasta . run <dig> produced two lanes of rna-seq data from control mouse samples and four lanes from mutant mouse samples, while run <dig> produced three lanes from control mouse samples and four lanes from mutant mouse samples. the mutant samples were obtained from mbnl <dig> knockdown mice provided by the swanson laboratory at the university of florida. mbnl <dig> encodes a protein belonging to the muscleblind family of cys3his zinc finger proteins, and is known to have a widespread effect on splicing. the disruption of normal mbnl <dig> function may therefore induce changes in the splicing pattern of many downstream genes regulated by it  <cit> . in the following we provide a description of the experiments and we present our preliminary analysis of the results.

in order to evaluate the performance of pasta in detecting splice junctions, we ran tophat on the same data, and we compared the number of known junctions identified by the two programs. since we do not have an independent way of confirming the predicted junctions, we used the set of junctions derived from the validated gene models in the ensembl genes database as the “gold standard” against which to measure performance. tables  <dig>   <dig> and  <dig> contain the results of the comparison between pasta and tophat on data from the two sequencing runs. the results show, first of all, that pasta detects a higher number of junctions than tophat, especially with shorter read lengths, and the difference increases with the number of reads. table  <dig> focuses on known junctions: we computed the number of predicted junctions appearing in ensembl that are identified by both programs, and reported the ratio between the common known junctions and the number of predictions from each program, respectively, as a percentage. the resulting value, that indicates the percentage of tophat junctions that pasta correctly identifies, is consistently at 96% or higher in both run <dig> and run  <dig>  additionally, pasta identifies an extra 50% or higher of known junctions in run  <dig>  and 20% or higher of known junctions in run  <dig> that are completely absent in tophat predictions. the number of known junctions identified by tophat is significantly lower in run  <dig> in comparison with run  <dig>  as a result of the smaller number of reads and shorter read size in run  <dig> compared with run  <dig>  in contrast, pasta is able to recover a similar number of splice junctions in run  <dig> and run  <dig>  some of these extra known junctions identified by pasta map to exons that are sequenced at low levels or are supported by very few junction-spanning reads; these reads are therefore crucial in reconstructing correct gene structures.

this table displays the total number of reads, the total number of junctions identified by both programs, and the ratio between these two numbers for run  <dig> and run  <dig> respectively.

this table displays the number of junctions in ensembl known gene models identified by pasta and tophat for run  <dig> and run  <dig> respectively.

the third part displays the number of additional junctions  identified by pasta and tophat for run  <dig> and run  <dig> respectively.

table  <dig> reports the number of additional junctions  identified by both programs. although it is impossible to know whether these junctions are real or are false positives without performing a large-scale validation experiment, a substantial number of them are identified by both programs, especially in the case of longer read lengths and higher sequencing depths. in addition, a significant fraction of the new junctions is covered by more than one read, which increases the likelihood that they are indeed biologically real. the average coverage of new junctions ranges from  <dig>  in run  <dig> to  <dig>  in run  <dig>  and the percentage of junctions with coverage higher than the average ranges from 8% in run  <dig> to 16% in run  <dig> 

table  <dig> displays the average probability score and the frequency of canonical  junctions as a function of the coverage level  on junctions identified by pasta. the results show that higher coverage is usually a strong indicator of real junctions, characterized by high probability scores and presence of canonical splice signals. these results are further supported by table  <dig>  using ensembl known genes, we can see that pasta predicted junctions that appear in the known genes exhibit higher average probability scores and higher coverage. in addition, table  <dig> shows that canonical junctions have significantly higher average scores and coverage than non-canonical one. finally, in order to see the average coverage for pasta predicted junctions that appeared in ensembl know genes, we compute the total number of reads that fall on these junctions. these results suggest that pasta predicted junctions that appear on ensembl genes are mostly canonical junctions , and are normally supported by high probability scores and high coverage as shown by table  <dig>  finally, we compared pasta with rum in splice junction prediction using the rna-seq datasets from run  <dig> and run  <dig>  results  shows that pasta and rum predictions are very closely correlated with each other in detecting known junctions.

known junctions indicates predicted junctions appearing in ensembl known genes, and unknown junctions indicates predicted junctions not appearing in ensembl known genes. only junctions with a maximum coverage of  <dig> were considered.

canonical junctions indicates predicted junctions with a canonical splicing signal, while non-canonical junctions indicates predicted junctions without the canonical signal. only junctions with a maximum coverage of  <dig> were considered.

pcr validations on minor splice sites
in order to validate pasta’s ability to detect splice junctions including minor splice sites, we selected a total of nine splicing junctions in a third rna-seq dataset from the mouse forebrain and tested them experimentally. five of these candidate targets contained the minor splice site signal at-ac, while the other four candidate targets contained the minor splice site signal gc-ag .

pcr assays confirmed the presence of all gc-ag signals and at-ac signals tested, demonstrating pasta’s potential to accurately discover minor splice sites. in particular, we investigated at-ac signals, which are excised by a new class of splicesome, as they are known to be present in genes with critical cellular functions  <cit> . ensembl annotations only contain a total of  <dig> at-ac signals, which may be an underestimation due to bias towards canonical junctions in gene-finding algorithms. pasta identified on average  <dig> at-ac signals per sequencing run in mouse rna-seq datasets, and approximately 30-50% of these signals are present in ensembl annotated junctions . the remaining 50% or more at-ac signals may come from novel junctions.

the number of minor splice sites  from pasta predictions compared against ensembl mouse annotations.

CONCLUSIONS
pasta is an easy to use and efficient tool to identify splice junctions from rna-seq data, intended as the first module in a complete computational pipeline for as analysis. compared to similar tools, pasta offers an increased ability to detect real splice junctions especially at low coverage levels and short sequence size, due to several heuristic strategies it employs. it does not rely on the presence of canonical splice junctions, and it uses an organism-specific statistical model to evaluate predicted intron-exon junctions. junction positions are determined through a highly accurate procedure based on patterned alignments. moreover, pasta enables the prediction of trans-splicing events from patterned alignments identified in different chromosomes. it allows prediction of splice junctions in less well-studied non-model organisms using information learned from closely-related model organisms. in addition, experimental validation demonstrates pasta’s high sensitivity in discovering minor splice sites .

finally, pasta does not filter predicted junctions on the basis of their coverage, but retains high-scoring junctions even when they are supported by a low number of reads. the reason is that the final result we are interested in is not the presence or absence of an individual junction, but which isoform structures can be inferred from a set of junctions in the same locus. it is therefore a better strategy to retain low-coverage junctions  and evaluate the isoform they participate in when information about all the other junctions in them is known. the resulting high sensitivity in discovering splice junctions, including minor splice sites, was demonstrated by experimental validation of a subset of pasta predictions.

availability and requirements
project name: pasta

project home page:http://genome.ufl.edu/rivalab/pasta


operating system: linux, os x

programming language: common lisp

other requirements: bowtie package

license: gnu gpl

abbreviations
as: alternative splicing; rna-seq: rna-sequencing; snp: single nucleotide polymorphism

competing interests
the authors declare that they have no competing interests.

authors’ contributions
st conceived the algorithm, developed the pasta software, and performed in-silico and experimental validation. ar supervised the entire project. both authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary materials.

click here for file

 acknowledgements
the authors wish to thank dr. maurice swanson for his help with the generation of the rna-seq datasets and dr. mark ck young for his assistance on the statistical analysis.

funding
this work was supported by the uf genetics institute, under the “interdisciplinary rna research” project. publication charges were paid by the uf department of molecular genetics and microbiology.
