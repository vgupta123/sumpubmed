BACKGROUND
it is well known that conservation of proteins at the structure level can be much higher than at the sequence level  <cit> . recognizing similarities in protein structures and classifying them into folds, families, etc. is therefore an important task in biology, and is often used as a basis for designing experiments for gaining further knowledge. unfortunately, most formulations for comparing protein structures have turned out to be np-hard  <cit> . this has led to the development of many heuristic approaches, e.g. ssap  <cit> , dali  <cit> , cα-match  <cit> , lock  <cit> , ce  <cit> , ssm  <cit> , etc.

however, it is clear from many experiments, e.g. those in  <cit>  or results reported in the section on validation using benchmark datasets , that the existing algorithms produce sub-optimal results in many practical cases. for example, dali and ce are not capable of detecting non-topological similarities. the current article reports a protein structure comparison scheme that improves upon existing algorithms in terms of quality of alignments and ability to detect non-topological similarities.

most protein structure comparison algorithms can be broadly classified as either distance matrix based or transformation based. this article proposes a new scheme which compares protein structures by comparing small and compact sub-structures, called neighborhoods. neighborhoods spanning the entire protein are calculated for both the proteins. all pairs of neighborhoods from the two structures are aligned and resulting transformations are used to calculate the optimal alignments between the two proteins. thus, alignments between protein structures are calculated by growing neighborhood alignments. this leads to a middle approach of comparing the neighborhoods using distance matrix based methods and calculating actual alignment using transformations obtained from neighborhood alignments .

following the scheme, two new algorithms based on two different kinds of neighborhoods, namely sequence and structure neighborhoods, are proposed. the structure neighborhood is a more natural concept, and gives better alignments. however, the algorithm for comparing structure neighborhoods is slow and scales exponentially with the size. the algorithm based on comparison of sequence neighborhoods is designed to be faster. for this reason, a novel and fast technique for comparing sequence neighborhoods, based on spectral graph matching  <cit> , is developed. a more detailed description and explanation of the techniques developed is given in the methods section .

the techniques thus developed have been implemented, and are available for public use at  <cit> . the implementations were used to compare proteins from fischer's  <cit>  and novotny et. al.'s  <cit>  benchmark datasets. results show that the current programs find similar or better alignments than dali  <cit>  and ce  <cit>  in almost all cases. the current programs also show a better overall performance than ssm  <cit> . on the benchmark datasets. results from comparison of proteins with large number of indels and internal repeats, show that the current algorithms detect the similarities correctly.

the sequence neighborhood based program was used in extensive fold and non-topological similarity detection experiments. for detecting fold level similarity, a new measure of significance, based on the ratio of length of alignment to the average size of the two proteins, was used. this is contrast with the normally used measures, e.g. z-scores of some property of the alignment. the new measure is expected to work because the rmsd of the alignments have been constrained below a threshold . the accuracy of fold detection with this new measure of similarity was found to be similar or better than that of the standard algorithm ce  <cit> .

finally, the current methods ability to detect non-topological similarities was tested using a circularly permuted pair of proteins. the results show that the current programs detects the full alignment, even in presence of non-topological similarities. next section describes results from the experimental validation of the developed scheme. the scheme is described in detail, in the methods section.

RESULTS
the algorithms developed in this article were implemented in c using gcc/gnu-linux system. the programs thus developed were used to test the correctness of the concepts used in developing the algorithm on real protein structure data. this section reports the results from the experiments conducted for validating the current algorithms. validation has been done by comparing the results from the current programs with those from the state of the art protein structure comparison programs dali  <cit> , ce  <cit> , and ssm  <cit> . it may be noted that a recent survey  <cit>  mentions ssm as the top performer in protein structure comparison programs.

section  <dig> , presents a systematic evaluation of the programs on two benchmark datasets containing more than  <dig> protein structure pairs. section  <dig> , reports tests using critical cases of proteins having multiple domains  and internally repeating subunits. in section  <dig> , we explore one of the applications of protein structure comparison, i.e. the program's ability to detect proteins having the same fold as a given query protein. in section  <dig> , the method's ability to detect non-topological similarities is explored.

the protein structure data was taken from pdb  <cit>  and the scop  <cit>  domains were obtained from the astral database  <cit> . rasmol  <cit>  was used to generate the molecular graphics. the programs were tested on hundreds of protein structure pairs and the optimal values of the parameters were determined so as to cater for a wide range of protein structures with varying levels of similarities. detailed results and default parameter values are available in additional file .

 <dig>  validation using fischer's and novotny's benchmark datasets
the first experiment was to validate the idea of comparing the proteins by comparing the various neighborhoods. for this, we tested the algorithms developed in this article on two benchmark datasets : fischer  <cit>  and novotny et. al.  <cit> . fischer's dataset was developed for testing the performance of fold recognition methods, and contains  <dig> pairs of protein structures having low sequence similarity. table  <dig> shows the alignments generated by the two algorithms developed here and the  <dig> standard algorithms dali, ce and ssm, for the  <dig> difficult pairs  <cit>  of protein structures in the fischer's dataset. it is clear that all three standard programs generate similar or worse alignments than the programs developed here on the  <dig> difficult protein pairs. for example, dali generates worse alignment for the protein pairs:  – , while ssm generates worse alignments for protein pairs:  – ,  –  and  – . all the other alignments generated by current programs are similar to those by their standard counterparts. this clearly demonstrates that the current programs perform competitively to the other state of the programs.

novotny et. al.  <cit>  compared  <dig> fold comparison servers using pairwise comparisons for  <dig> proteins taken from  <dig> different cath  <cit>  topologies. both the algorithms developed here were used to calculate the alignments for all  <dig> pairs of proteins in novotny's dataset. tables  <dig>   <dig> and  <dig> report a summary of comparison of results obtained from the two programs on both fischer's and novotny's datasets with dali, ce and ssm, respectively. an alignment is said to be better than other if it has both higher length and lower rmsd. two alignments are said to be level if one has both higher length and rmsd than the other. tables  <dig>   <dig> and  <dig> show the number of protein pairs, for which the current method gives better/worse/level alignments than dali, ce and ssm, respectively.

for fischer's dataset, the sequence neighborhood based method performs similarly to dali, whereas the structure neighborhood based method performs slightly better. however, for some cath classes in novotny's dataset , the current methods perform significantly better than dali. on fischer's dataset, the current methods consistently perform better than all the three standard programs. on novotny's dataset, for cath classes  <dig> . <dig>   <dig> . <dig> and  <dig> . <dig>  the current programs perform better than dali and ssm, and for cath classes  <dig> . <dig> and  <dig> . <dig>  the current programs perform better than ce. for cath class  <dig> . <dig>  the current programs did not give good alignments as compared to ce and ssm. however, the overall performance of the current programs is better than all the three state of the art programs. also, it was observed  that the structure neighborhood based method performs slightly better than the sequence neighborhood based one.

 <dig>  testing on proteins with multiple domains and internal repeats
one of the important features of proteins is the noise in the residue positions and insertions and deletions  of residues. one extreme case of indels is the case when a protein has multiple domains and only one of the domains are there in the other structure. in order to test the current programs' ability of detecting such similarities, we tested them for detecting the  <dig> individual domains in  <dig> multi-domain proteins, e.g.  and , taken from  <cit> . the individual domains were obtained from the astral database. table  <dig> shows the results for one of the protein . the domains were perfectly detected by both the programs developed here and all the standard programs. we also chose random fragments of length  <dig> residue from each of the  <dig> domains in , and concatenated them to form a new structure, called "mixed" . we compared this new structure with the original protein. while both the current programs and ssm detected the match correctly, dali and ce did not detect the correct match.

the current algorithms rely on similarity of neighborhoods to detect global similarity between proteins. however, many proteins have repeating subunits which can provide many similar looking neighborhoods. in order to ascertain whether the current programs are fooled by such internal repeats, we tested them on  <dig> pairs of proteins showing high degree of internal repeats. the results, reported in table  <dig>  show that the correct alignments were detected in all the cases. thus, we conclude that the current programs perform well, even in presence of high indels and internal repeats.

 <dig>  testing accuracy in detecting fold similarity
one of the applications of a protein structure comparison program is to compare the folds of two protein structures, or fetch all structures from a database, having the same fold as a query structure. many programs for searching databases and comparing folds have been developed. recently, novotny et. al.  <cit>  performed a comparison of fold comparison servers, and rated ce  <cit>  as the topmost. we compared the performance of the sequence neighborhood based program  with ce, using  <dig> randomly selected proteins from  <dig> prominent scop classes.

given an alignment between  <dig> proteins, most programs use a statistical significance  to decide the level of similarity between the two proteins. in the current case, the rmsd of the alignments found by programs is upper bounded by the parameter t . for t =  <dig>  the rmsd is found to be less than  <dig> Å. thus, the free parameter is the length of the alignment. we used the percentage of residues aligned as a fraction of the average number of residues to decide the level of similarity. thus for each alignment, we calculate percent aligned as: percalign = lenlav
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadawcaaqaaiabdygasjabdwgaljabd6gaubqaaiabdygasnaabaaaleaacqwghbqycqwg2bgdaeqaaaaaaaa@3522@ ×  <dig>  where lav = / <dig> 

 <dig>  determination of non-topological similarities
non-topological similarities between proteins is an important phenomenon, from both scientific and practical applications points of view  <cit> . in this section, we explore the capability of the current programs to detect non-topological similarities. the current programs were tested with the well known circularly permuted pair of proteins  – , showing very high structural similarity. figure  <dig> reports the alignments and superpositions from the current programs  and dali. the current programs give a  <dig> residue alignment with rmsd  <dig>  Å. whereas dali reports  <dig> residue alignment with rmsd  <dig>  Å. it is clear from figure  <dig> that dali detects only a portion of the actual similarity. ce detects a  <dig> residue alignment with  <dig>  Årmsd and ssm detects a  <dig> residue alignment with  <dig>  Årmsd. thus it is clear that none on the three programs used to benchmark the current programs detect full alignment in presence of non-topological similarities.

in order to find out more naturally occurring circularly permuted pairs of proteins, we compared all possible pairs of proteins, showing less than 40% sequence similarity, from the scop fold b. <dig>  there are  <dig> domains in the b. <dig> fold of 40% non-redudant astral dataset. out of all the  <dig> pairs,  <dig> pairs showed circular permutations. table  <dig> shows  <dig> circularly permutated pairs of proteins having low structural similarity. in  <dig> of the  <dig> cases, the current program detects a better alignment than dali, and in one case dali doesn't detect any significant alignment. a detailed study of these circular permutations will be reported elsewhere. thus, it is clear that the current programs can be useful as a tool for detecting circular permutations occuring in nature.

scopid1
CONCLUSIONS
biology, in its present practice, is effectively a relational science. decisions made with one system being heavily influenced by the knowledge obtained from other systems. it is quite understandable therefore, why recognizing similarities and deriving relationships are crucial for all further knowledge. in this context, protein structure comparison is an important yet complex problem.

the current article proposes a new scheme for comparing protein structures, relying on efficient techniques available for comparing smaller sub-structures , having equal number of residues. this reduces the problem of comparing protein structures to that of searching over at most o transformations, under the assumption that at least one of the neighborhoods from the first protein has a match in the second protein.

the scheme leads to two specific algorithms, by using two types of neighborhood definitions. the structure neighborhood is the most intuitive, and is seen  to give better alignments in many cases. however, the algorithm based on structure neighborhoods is seen to be approximately 2– <dig> times slower than the sequence neighborhood based algorithm. also, with sequence neighborhood larger neighborhood sizes could be explored . this is possible due to a novel technique developed  for comparing sequence neighborhoods. a web interface to the programs developed is available at  <cit> .

the algorithms reported here overcome some of the drawbacks seen with other approaches, such as the detection of non-topological similarities. also, with the current approach, the alignment quality has been found to be superior to the state of the art programs, e.g. dali, ce and ssm, in a number of cases. so, as demonstrated in the results, the proposed algorithms will aid in identifying structural similarities that may have been missed out with other approaches.

the current article also simplifies detection of folds by using ratio of length of alignment and the average length of the two sequences, as opposed to z-scores of some quantity used by other programs. this is done by constraining the rmsd to be below a cutoff. the program uses simple rules based on rmsd and length of alignment to hit upon the best alignment. such simplification makes the hits returned by the program easier to interpret . even with the simplified measures, the accuracy of fold detection for the current program was found to be better than ce  <cit>  in some cases.

