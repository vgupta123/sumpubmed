BACKGROUND
cell image segmentation  is an essential part of quantitative imaging of biological cells, which is critical to fields such as high content screening, live cell tracking and analysis, and the analysis of subcellular structures . segmenting cells from fluorescent microscopy images for image-based cell assays in cytometry requires the design and development of algorithms that are optimized for a particular set of images. the performance of a cis algorithm can affect the quantitative results derived from an image analysis pipeline.

in order to use the well-established statistical approach to evaluate and compare cis algorithms  <cit>  so that the statistical significance of the performance differences between cis algorithms can be determined, besides designing a novel cis performance measure, the standard error  of the measure and the correlation coefficient of measures between two cis algorithms must be solved. these three issues are all dealt with in this article.

in this study, only supervised evaluation is carried out. cells segmented manually by experts are treated as the ground-truth  cells, whereas cells segmented using an algorithm are named as the algorithm-detected  cells. the set-theoretic relationship between a gt cell and its related ad cell, as shown in fig.  <dig>  consists of three regions: 1) the intersection region, the pixels of the gt cell identified by the algorithm; 2) the false negative  region, the pixels of the gt cell missed by the algorithm; 3) the false positive  region, the pixels of the ad cell that are mistakenly picked up and do not belong to the gt cell.fig.  <dig> a schematic diagram showing the set-theoretic relationship between a gt cell and an ad cell where the sizes of regions are shown in terms of pixel numbers




the numbers of pixels of the gt cell, the fn region, the ad cell, the fp region, and the intersection region are denoted by n
g, n
g, n
a, n
a, and n
i, respectively, which are subject to the constraint condition n
g – n
g = n
a – n
a = n
i. the fn rate is n
g / n
g, and the fp rate equals n
a / n
a. in this article, it is assumed that all ad cells are counted as one ad cell taken on the level of pixels if they are related to one gt cell; and all gt cells are treated as one gt cell taken on the level of pixels if they are associated with one ad cell.

some cis algorithms may perform better than others for cells with some specific characteristics. many measures and methods have been proposed and implemented to evaluate the performance of segmentation methods, such as the jaccard index, the rand index, the kappa statistic, and others as shown in the literature <dig> . however, computing the ses of the measures and their correlation coefficient is not described, although the uncertainty of the kappa statistic was computed only for very small sizes of samples  <cit> .

in this article, it starts with defining the misclassification error rate  for segmenting a single cell in a fluorescent microscopy image. two mers are discussed: the average mer r
a that is an arithmetic mean of the fn rate and the fp rate, and the weighted mer r
w that is a weighted sum of these two rates using themselves as weights. the latter is more conservative than the former. thus, the weighted mer r
w is recommended. then, the total error rate , which is a novel performance measure for segmenting all cells, is defined to be a weighted sum of all mers, and thus statistically aggregates all mers. the weight is the size of a gt cell divided by the total size of all gt cells in the population. hence, the penalties on the result for an algorithm are higher if larger gt cells are not segmented correctly.

weight is widely employed in scientific research. in our research, as stated above, error rates are used as weight in the definition of the weighted mer, and the sizes of gt cells are used as weight while defining the ter that is a consequence of using the formula of the total probability in statistics . in different applications, weight may have different concepts, for instance, in ref.  <cit> .

many factors can affect how accurately a cis algorithm detects the boundary of a cell. the cell size is one major factor. many approaches have taken account of the size factor, but in different contexts such as the unsupervised objective evaluation methods  <cit> .

the ter is supported by the pairwise comparisons of mers using  <dig> manually segmented gt cells with different sizes and seven cis algorithms obtained from imagej  <cit> . the cis algorithms are ij_huang, ij_renyientropy, ij_li, ij_maxentropy, ij_intermodes, ij_minimum and ij_triangle, numbered by  <dig> through  <dig> according to their performance levels in descending order.

the  <dig> cells were taken from the a <dig> rat smooth muscle cell line. the raw image data and manual segmentation mask data are stored at the national institute of standards and technology semantics for biological data resource: cell image database  <cit> . the imaged cells were stained txred c <dig> maleimide   which labels sulfhydryl groups present on cellular proteins. fluorescence images were acquired with an olympus ix <dig> inverted microscope  equipped with an automated stage , automated filter wheels , a xe arc lamp fluorescence excitation source, a  <dig> x apoplan  <dig>  na objective , and a coolsnap hq ccd camera . the filter conditions for imaging the txred stained cells were a 555 nm notch excitation  and a 630 nm notch emission filter . in fig.  <dig>  nine fluorescent microscopy images illustrate the data used, where the cell sizes vary .fig.  <dig> nine fluorescent microscopy images of representative a <dig> rat smooth muscle cells selected from  <dig> manually segmented cells




the results derived from the ter are also consistent with the qualitative observations from the histograms of mer . more importantly, the ter method is more effective than the bivariate approach using the scatter plot of the fn and fp rates, and the approach using cumulative distribution function  of mer. it is challenging to compare the performance of two cis algorithms while the two scatter plots overlap or the two cdf curves of mer cross each other.

then, the issue is how to estimate the se of the ter. in this article, the se and 95% confidence interval  of the ter for cis algorithms are computed based on the se of mer. the calculation of the se of mer was accomplished by using the nonparametric bootstrap method under the constraint condition shown above.

to do so, dummy scores are assigned to pixels in different regions. for a gt cell, score  <dig> is assigned to all ni pixels in the intersection region and score  <dig> is assigned to all ng pixels in the fn region. for its related ad cell, score  <dig> is assigned to all ni pixels in the intersection region and score  <dig> is assigned to all na pixels in the fp region. and a threshold is assigned to be  <dig> 

as a result, the score distributions of a gt cell and of its related ad cell are similar to those in the receiver operating characteristic  analysis . indeed, the fn rate and the fp rate with respect to the threshold  <dig> in the cis are exactly the same as the cumulative probabilities of type i error and type ii error in roc analysis, respectively. and in roc analysis, the ses of statistics of interest can be computed using the nonparametric bootstrap method.

our bootstrap scheme is carried out under the constraint condition n
g – n
g = n
a – n
a = n
i during bootstrap resampling, which is particular required for the cis in the supervised evaluation involving gt cells and ad cells, as depicted in fig.  <dig>  in the meantime, the stochastic nature of the bootstrap method is explored in this article.

the bootstrap is applied in many areas such as evaluating stability of clusters  <cit> . for different applications with different statistics of interest under different circumstances, there are many different bootstrap schemes about how to resample the original data. due to our cell sizes, nonetheless, it is computationally prohibitive to generate the exact bootstrap distribution formed by all possible bootstrap replications of the statistic of interest  <cit> .

in this article, moreover, it demonstrates how the correlation coefficient of ters between two cis algorithms is computed using the synchronized resampling algorithm. without the correlation coefficient of ters, the two-algorithm hypothesis testing cannot be conducted  <cit> .

all these are very useful and important in the practice of cis. the error bars of the ter displaying the 95% ci can be used to determine whether the difference between the performance level of a cis algorithm and a hypothesized value is statistically significant in evaluation of cis algorithms. this is related to the one-algorithm hypothesis testing, which can simply be judged by observing whether the 95% ci of the ter contains, below, or above the hypothesized value  <cit> .

the error bars of the ter can also be used to classify cis algorithms into different classes in terms of performance accuracies in comparison of cis algorithms. when the cis overlap within the same class, because the se of ter and the correlation coefficient can be computed, the two-algorithm hypothesis testing can be conducted to determine the statistical significance of the performance difference between two cis algorithms. in this article, only the two-algorithm hypothesis testing will be detailed.

methods
the mer for segmenting a single cell
the design of a novel performance measure in the cis data analysis starts with defining the mer for identifying a single cell in a fluorescent image in the supervised evaluation. as stated above, the numbers of pixels, n
g, n
g, n
a, n
a, and n
i, must satisfy the constraint condition,  <dig> ng−ng=na−na=ni. 


the fn rate r
fn and the fp rate r
fp are  <dig> rfn=ngngandrfp=nana. 


several mers can be defined in terms of the fn rate r
fn and the fp rate r
fp. besides “simplicity and ease of understanding”  <cit> , conservativeness is also a criterion for defining mer in this article. hence, two mers are discussed as follows,  <dig> ra=rfn+rfp <dig> rw=rfn2+rfp2rfn+rfp. 


the average mer r
a is an arithmetic mean of r
fn and r
fp, and the weighted mer r
w is the one using r
fn and r
fp themselves as weight so that the larger error rate pays more penalties. as r
fn and r
fp approach to zero, r
w goes to zero as well. both r
a and r
w vary in the region  <cit> :  <dig> stands for the best segmentation when an ad cell is identical to the related gt cell, and  <dig> means the worst classification when an ad cell and the associated gt cell are disjoint.

first, it is trivial to prove that the arithmetic mean of the fn rate r
fn and the fp rate r
fp is greater than or equal to the geometric mean rfnrfp, which is subsequently greater than or equal to the harmonic mean 2r
fn
r
fp /   <cit> . these three means are all equal if and only if r
fn = r
fp. so, the arithmetic mean leads to more conservative  estimates for the error rates.

further, when either fn rate rfn or fp rate rfp approaches zero, both geometric and harmonic means go to zero, which indicates perfect segmentation in the supervised evaluation, no matter how much the other error rate is. under such circumstances, however, the arithmetic mean approaches half of the other error rate.

second, the weighted mer r
w is compared with the average mer r
a. both of them are simple and easy to understand. however, as stated above, the weighted mer r
w does penalize errors because of using the error rate as weight  <cit> . moreover, it is trivial to prove from eq.  that r
w = r
a if and only if r
fn = r
fp; otherwise, r
w > r
a. this can also be seen in fig.  <dig>  where r
a is a plane in green and r
w is a surface in red as functions of r
fn and r
fp. the red surface is above the green plane except they are tangent along a straight line in blue. in other words, the weighted mer r
w is a more conservative measure than the average mer r
a.fig.  <dig> the average mer r
a is a plane  and the weighted mer r
w is a surface  with respect to the fn rate r
fn and the fp rate r
fp. they are tangent along a straight line 




if an algorithm segments a small gt cell completely with a relatively very large ad cell, then r
fn =  <dig> and r
fp →  <dig>  if an algorithm detects a large gt cell with a relatively very small ad cell located completely inside the gt cell, then r
fp =  <dig> and r
fn →  <dig>  they all imply that r
w →  <dig> but r
a → 1/ <dig> due to eq. . these two cases can also be seen from fig.  <dig>  indeed, under these two circumstances, the mer should be much larger than 1/ <dig> and close to  <dig>  it indicates that the weighted mer r
w can deal with these special cases better than the average mer r
a, although in reality such special cases occur quite rarely.

both r
w and r
a can be expressed as functions of the size of the intersection region n
i so that a simulation can be carried out. the former is a linear function with negative slope. the latter is a more complicated function that decreases first and then increases as n
i increases if n
g ≠ n
a; but is the same function as the former if n
g = n
a. both functions are symmetric with respect to n
g and n
a. all these imply that r
w and r
a behave differently when n
i varies. that is, when an ad cell approaches to the related gt cell, r
w decreases first and then increases if n
g ≠ n
a, but r
a always decreases. one may ask: why cannot a cis algorithm segment a gt cell completely when the ad cell is getting so close to it?

based on these analyses, the weighted mer r
w rather than the average mer r
a is recommended. thus, in this article, only those results computed using the weighted mer r
w will be shown. nonetheless, as far as computational results are concerned, qualitatively speaking, there is not too much discrepancy between the two mers. these will be mentioned in the following text.

figure  <dig> shows the histograms of the weighted mers generated using algorithms  <dig>   <dig>  and  <dig> to segment  <dig> cells . these three histograms overlap each other. however, they shift towards larger mer from algorithm  <dig> to  <dig>  suggesting that algorithm  <dig> may be better than algorithm  <dig> that in turn may be better than algorithm  <dig>  if the average mers are employed, the relationship of the three histograms remains the same.fig.  <dig> histograms of the weighted mers generated using algorithms  <dig> ,  <dig> , and  <dig> 




the ter for segmenting all cells
as pointed out in section background, in this article, it is assumed that all ad cells are counted as one ad cell taken on the level of pixels if they are related to one gt cell; and all gt cells are treated as one gt cell taken on the level of pixels if they are associated with one ad cell. hence, generally speaking, segmenting a cell in fluorescent microscopy images is an exclusive event with respect to detecting other cells. then, to measure the performance level of a cis algorithm, based on the formula of the total probability in statistics  <cit> , the ter ε is defined to be a weighted sum of all mers,  <dig> ε≡prcis=∑i=1nprcis|ciprci=∑i=1nmeri×si∑j=1nsj, 


where n is the total number of gt cells, pr stands for the total probability of making misclassification errors while using an algorithm to detect all cells in a fluorescent image, the conditional probability pr means the mer while segmenting the i-th gt cell in the image which is denoted by meri, and pr is the probability of the occurrence of the i-th gt cell that is assumed to be the ratio of the size of the i-th gt cell s
i to the total sizes of all gt cells. hence, the ter ε statistically aggregates all cells’ mers,

it can be proven that the ter ε varies in the region  <cit> , where  <dig> stands for the best performance of the algorithm and  <dig> means the worst performance. as shown in eq. , the cell sizes are used as weights. so, it can ensure that it penalizes errors and the penalties for misclassifying cells are proportional to the sizes of cells  <cit> .

the se and 95% ci of ter
first, the se of mer is computed using a bootstrap method. second, based on that, the se and 95% ci of ter are calculated. third, the variation of the se of ter is explored due to the stochastic nature of the bootstrap approach.

the se of mer for segmenting a single cell
the mer for segmenting a single gt cell consists of the fn rate and the fp rate, and these two rates are formed by the numbers of pixels in different regions as shown from eq.  to eq. . based on the assignment of dummy scores  <dig> and  <dig> described in section background, the score set for a gt cell is expressed as,  <dig> g=gi=0i= <dig> …,ng;gi=2i=ng+ <dig> …,ng, and the score set for its related ad cell is denoted as,  <dig> a=ai=2i= <dig> …,na;ai=0i=na+ <dig> …,na, where the constraint condition eq.  must hold true.

there are five possibilities regarding the set-theoretic relationship between a gt cell and its associated ad cell:  <dig>  the two cells are disjoint,  <dig>  they are completely overlapped,  <dig>  the gt cell completely contains the ad cell,  <dig>  the ad cell completely contains the gt cell,  <dig>  they are partially overlapped. case  <dig> occurs most often in this study.

in the following, the bootstrap algorithm for computing the se of mer is presented in a way to deal with cases  <dig> and  <dig>  in which both n
a and n
i = n
a – n
a are positive. thus, the bootstrap random resampling with replacement  can be legitimately applied to the score set of an ad cell in eq.  . here is the nonparametric one-sample bootstrap algorithm of computing the sÊ of mer for segmenting a single cell.





where m is the number of bootstrap replications. as shown from step  <dig> to  <dig>  this algorithm runs m times. in the i-th iteration, there is an endless while loop from step  <dig> to  <dig>  in this loop, n
a scores are randomly selected wr from the original score set a in eq.  to form a new score set a'
i, which contains n'a i score  <dig> forming a new fp region and n
a - n'a i score  <dig> forming a new intersection region, as shown in step  <dig>  then, the constraint condition eq.  needs to be checked. if the size of the new intersection region is less than or equal to the size of the gt cell in step  <dig>  the size of the new fn region, n'g i, is determined in step  <dig> and the while loop breaks in step 6; otherwise, the endless while loop continues.

after the while loop breaks, the i-th estimated mÊri can be obtained in step  <dig> from the new sizes of fp region and fn region, n'a i and n'g i, and the original sizes of the ac cell and the gt cell, n
a and n
g, using eqs.  and . finally, after m iterations, in step  <dig>  a bootstrap distribution is formed by the bootstrap replications of the mer, i.e., {mÊri | i =  <dig>  …, m}, and then the standard error sÊb can be estimated using the sample standard deviation of this distribution.

algorithm i can be easily converted to handling case  <dig> in which there is no pixel in the fp region, if the score set of the gt cell in eq.  is resampled. so, the scores and sets related to an ad cell should be replaced by the scores and sets related to a gt cell in step  <dig>  and the statements in steps  <dig> and  <dig> should be changed to “if
n
g - n'g i ≤ n
a
then” and “n'a i = n
a - ” accordingly.

in case  <dig>  both r
fn and r
fp equal  <dig> and thus both r
a and r
w are  <dig>  in case  <dig>  both r
fn and r
fp equal  <dig> and thus both r
a and r
w are  <dig>  in these two cases, the estimates of ses of both r
a and r
w are assumed to be  <dig>  meaning that there is no variation associated with such mers. so, the output of algorithm i for cases  <dig> and  <dig> is assumed to be zero.

the remaining issue is to determine how many iterations this bootstrap algorithm needs to run in order to reduce the bootstrap variance and ensure the accuracy of the computation. the appropriate number m of the bootstrap replications was determined to be  <dig> based on our empirical bootstrap variability studies in roc analysis .

the se and 95% ci of ter for segmenting all cells
after the bootstrap estimated sÊ of mer for segmenting each gt cell is computed, assuming that detecting and segmenting different gt cells in fluorescent microscopy images are mutually independent, the estimated variance of the ter ε for detecting all gt cells can be obtained based on eq. ,  <dig> varε=∑i=1nsi∑j=1nsj2×se^merbi <dig> 


where n is the total number of cells, s
i is the size of the i-th gt cell, and sÊb i stands for the bootstrap estimated sÊ of mer for segmenting the i-th gt cell.

then, the estimated sÊ of the ter ε is defined to be the square root of var . again from eq. , generally speaking, if no independent random variable dominates the others, the distribution of the ter can be assumed to be approximately normal because of the central limit theorem  <cit> . thereafter, the estimated 95% cÎ of the ter ε can be obtained by adding and subtracting  <dig>  times the estimated sÊ.

the variation of the se of ter
the nature of the bootstrap method is stochastic. each execution of the bootstrap algorithm may result in different sÊs of mers and thus different sÊs of a ter. it is necessary to investigate how much the estimated sÊ of the ter varies. hence, a distribution of such estimates needs to be generated. here is the algorithm to create such a distribution.





where m is the number of bootstrap replications, n is the total number of cells, l is the number of the monte carlo iterations, and step  <dig> is the while loop in algorithm i from step  <dig> to  <dig> 

from step  <dig> to  <dig>  algorithm i is employed to compute the sÊ b of an mer for segmenting a single gt cell. from step  <dig> to  <dig>  algorithm i is used to compute sÊs of mers for all n gt cells. thus, at step  <dig>  an estimated sÊ b of the ter ε for detecting all gt cells is calculated using eq. .

such a process is executed in l times from step  <dig> to  <dig>  after l iterations, at step  <dig>  l estimated sÊ b i of the ter ε are generated and constitute a distribution. thereafter, the estimated sÊb and the 100% cÎ , q^b) at the significance level α of the distribution can be computed.

the estimated α/ <dig> 100% and  100% quantiles of the distribution are calculated using the definition  <dig> of quantile in ref.  <cit> . that is, the sample quantile is obtained by inverting the empirical distribution function with averaging at discontinuities. if 95% cÎ is of interest, then α is set to be  <dig> .

finally, the number of the monte carlo iterations l needs to be determined in order to guarantee the accuracy of the monte carlo computation. based on our previous studies, to create a stable distribution, it is enough that the repeated process described above be executed  <dig> times, i.e., l =  <dig> .

significance testing
the two-algorithm hypothesis testing is carried out by the z test, since the ter can be assumed to be normally distributed as pointed out above  <cit> .

two-algorithm hypothesis testing
let ta and tb denote the ters for cis algorithms a and b, respectively. then, the null and alternative hypotheses are  <dig> ho:ta=tbha:ta≠tb 


based on the normality assumption, the general z statistic for two-algorithm hypothesis testing is  <dig> z=t^a‐t^bse2t^a+se2t^b‐2ρset^aset^b 


where t^a and t^b are two estimated ters, se and se stand for their ses, respectively, and ρ is the correlation coefficient between t^a and t^b.

an algorithm for computing the correlation coefficient
this algorithm is based on the synchronized resampling approach. the two algorithms segment the same set of gt cells. the mers of two cis algorithms due to segmenting cells with the same ordinal number in the set of gt cells co-vary. as a result, the two ters of any two cis algorithms are correlated. the tendency of obtaining higher or lower mers for segmenting the same gt cell could be different. therefore, the correlation between the ters of any two cis algorithms may be positive or negative.

using the notations in eqs.  and , a score set that an algorithm a segments the i-th gt cell with size n
g i in the set of n gt cells and generates n
a
g i, n
a
a i, and n
a
a i accordingly is denoted by  <dig> ca=ngi,nagi,naai,naai|i= <dig> …,n, from which a ter can be computed using eqs.  through . all cis algorithms segment the same set of n gt cells. thus, the size of the i-th gt cell, i.e., ng i, is the same for all cis algorithms. this correlates ters of different algorithms.

an algorithm for computing the correlation coefficient of the ters for cis algorithms a and b is as follows.





where s
a
k, γ
a
j, s
b
k, and γ
b
j are members of the score sets s
a, Γ
a, s
b, and Γ
b, respectively. based on our bootstrap variability studies, the number of iterations m is set to be  <dig> .

from step  <dig> to  <dig>  this algorithm runs m iterations. in step  <dig> of the i-th iteration, the synchronized wr random resampling is carried out on the two score sets c
a and c
b of algorithms a and b to generate two new score sets Θ
a
i and Θ
b
i.

from step  <dig>  to  <dig> , during the resampling iterations, if a member with index k in s
a is wr randomly selected, then the member with the same index k in s
b is also selected. that is, a gt cell with the same ordinal number k in the set of n gt cells is selected. thus, such synchronized selections guarantee that all co-varying members in score sets between the two cis algorithms are selected simultaneously. hence, the correlation of the ters between the two algorithms is preserved.

after resampling, in step  <dig> , the i-th estimated ter ε^ia  of algorithm a  is computed from the new score set Θ
a
i . finally in step  <dig> after m iterations, the correlation coefficient ρ
ab of the ters of algorithms a and b is computed from the two sets of correlated ters.

a synchronized random resampling is involved here. thus, this algorithm needs to run multiple times to reduce the computational fluctuation, if the p-value is not considerably different from the critical values, such as 5%, 1%, etc. to be more conservative, in this article, the average out of  <dig> runs was taken to be the resultant correlation coefficient for significance testing.

RESULTS
the dataset consisted of  <dig> cells with different sizes, which were manually segmented as gt cells. figure  <dig> shows the histogram of the cell size. the sizes ranged from  <dig> up to  <dig>  pixels with the mean size at 6062 pixels. the variation of cell sizes was quite large. thus, the cell sizes must be taken into account while evaluating cis algorithms.fig.  <dig> the histogram of the sizes of all  <dig> gt cells




the seven cis algorithms in imagej were implemented. as stated above, the estimated sÊs of mers in cases  <dig> and  <dig> are zero, which can lower the estimate of the se of ter for detecting all gt cells. only algorithm  <dig> created one case  <dig> and algorithm  <dig> produced three; and no algorithm generated case  <dig> 

pairwise comparisons to support the ter
two cis algorithms generate two weighted mers while segmenting the same gt cell, and these two weighted mers are compared. table  <dig> shows the relationship in terms of the numbers of “less than” , “greater than” , and “equal to”  between such two weighted mers while using two algorithms to segment all  <dig> gt cells. for instance, comparing algorithms  <dig> with  <dig>  for  <dig> gt cells, the weighted mers generated using algorithm  <dig> are less than those created using algorithm 2; and for only  <dig> gt cells, the “greater than” occurs otherwise. this indicates that the performance of algorithm  <dig> is better than the performance of algorithm  <dig> table  <dig> comparisons of the weighted mers generated using two algorithms for all  <dig> cells in terms of the numbers of inequalities and equalities




further, in table  <dig>  the relationship of “better than” is transitive. for example, the performance of algorithm  <dig> is also better than the performance of algorithm  <dig>  and so on. indeed, while comparing algorithms  <dig> with  <dig>  there are  <dig> “<” and  <dig> “>”. as a result, the test of pairwise comparisons of mers in this article was conducted between any two out of seven cis algorithms. table  <dig> shows that the performance is degraded in the ascending order of the cis algorithms.

if the average mers are employed, qualitatively speaking, the relationship among these cis algorithms in terms of numbers of “<”, “>”, and “=” stays the same.

the ter and its se and ci
table  <dig> shows the estimated tÊrs, sÊs  and 95% cÎs of ters for the seven cis algorithms, when the weighted mers are employed. the smaller the estimated tÊr ε is, the better the performance is. the order of the algorithms in table  <dig> is consistent with the one in table  <dig>  it indicates that the ter constructed on all mers and using the cell sizes as weights is fully supported by the results derived directly from the pairwise-comparison test of mers using  <dig> gt cells with different sizes and seven cis algorithms taken from imagej.table  <dig> the estimated tÊrs, sÊs  and 95% cÎs of ters for the seven cis algorithms, in which the weighted mers are employed




moreover, regarding algorithms  <dig>   <dig>  and  <dig>  their estimated tÊr ε shown in table  <dig> are qualitatively consistent with the observations in fig.  <dig>  where the histograms of the weighted mers for these three algorithms shift gradually towards larger mer.

the relative error of the ter can be defined as “ <dig>  × sÊ / tÊr”, where  <dig>  is the z score corresponding to 95% ci. thus, the ranges of relative errors are between  <dig> % and  <dig> %. most importantly, fig.  <dig> shows the error bars of the ter displaying the 95% cÎs along with estimated tÊrs for six cis algorithms, when the weighted mers are employed. algorithm  <dig> is not included due to large tÊr.fig.  <dig> the error bars of ter displaying 95% cis along with estimated ters for six cis algorithms, in which the weighted mers are employed, with two criteria set at  <dig>  and  <dig>  that statistically classify cis algorithms




if the average mers are employed, the corresponding estimated tÊrs are smaller, which is consistent with what was discussed in sections “the mer for segmenting a single cell” and “the ter for segmenting all cells” . but qualitatively speaking, except that the 95% cÎ of ter of algorithm  <dig> contains the one of algorithm  <dig>  everything else stated here remains the same.

the variation of the estimated sÊ of the ter
the nature of the bootstrap method is stochastic. algorithm ii was used to deal with this issue. table  <dig> shows the means, sÊs , and 95% cÎs of the estimated sÊs of tÊrs for the seven cis algorithms, when the weighted mers are employed. the relative error is defined as “ <dig>  × se / mean” to take account of all estimates occurring in the estimated 95% cÎ. all 95% cÎs are quite narrow. the largest relative error is  <dig> %.table  <dig> the means, sÊs , and 95% cÎs of the estimated sÊs of ters for the seven cis algorithms, in which the weighted mers are employed




figure  <dig> shows the histograms of the estimated sÊs of ters for cis algorithms  <dig> ,  <dig> ,  <dig> , and  <dig> , when the weighted mers are employed. the histograms of other three algorithms are too narrow to draw. the widths of all distributions are very narrow, demonstrating that the results are quite stable.fig.  <dig> the histograms of the estimated sÊs of tÊrs for four cis algorithms  <dig> ,  <dig> ,  <dig> , and  <dig> , in which the weighted mers are employed. the black circle stands for the estimated mean of the distribution




taking algorithm  <dig> as an example whose tÊr in table  <dig> is the smallest and relative error is the largest, and using algorithm 1’s estimated 95% cÎ of sÊs of ters in table  <dig>  it can be calculated that the relative errors of tÊr may vary between  <dig> % and  <dig> %.

it is worth mentioning that in table  <dig>  all estimated sÊs of ters were calculated by a random execution of the stochastic bootstrap method while computing the sÊs of mers. however, they all correspondingly fall in the 95% cÎ of the estimated sÊs of ters shown in table  <dig> 

again, if the average mers are employed, qualitatively speaking, nothing stated here is changed. for instance, the relative errors of tÊr for algorithm  <dig> varies between  <dig> % and  <dig> %, which is also very narrow.

significance testing
cis algorithms may be statistically classified into different classes in terms of performance accuracies using the error bars. this provides a basis for identifying algorithms that are quantitatively similar to one another. for instance, as shown in fig.  <dig>  if the criteria of performance accuracies are set to be at  <dig>  and  <dig> , respectively, then algorithms  <dig> and  <dig> are classified to be in the first class, algorithms  <dig> and  <dig> are in the second class, and algorithms  <dig> and  <dig> are in the third class. this is because their error bars, i.e., the 95% cÎs of ter, do not cross the criteria. otherwise, the one-algorithm hypothesis testing needs to be taken. certainly, the criteria are set depending on the circumstances being dealt with.

when two error bars do not overlap, for example, for algorithms  <dig> and  <dig> as depicted in fig.  <dig>  the performance level of the cis algorithm corresponding to the lower error bar is better than the other one. when two error bars overlap, for example, for algorithms  <dig> and  <dig>  the two-algorithm hypothesis testing is necessary to determine the statistical significance of performance difference.

to demonstrate, the hypothesis testing is conducted on algorithms  <dig> and  <dig>  as well as on algorithms  <dig> and  <dig>  the corresponding correlation coefficients of ters computed using algorithm iii are  <dig> , and  <dig> , respectively. then, using the ters and their ses shown in table  <dig>  the z-test two-tailed p-values are 0%, and  <dig> % accordingly.

using 5% as a critical p-value, these p-values show that the performance level of algorithm  <dig> is better than the performance level of algorithm  <dig>  even though they are in the same first class. however, the difference in terms of performance accuracy between algorithms  <dig> and  <dig> is not statistically significant.

if the average mers are used, it is pointed out above that the 95% cÎ of ter of algorithm  <dig> contains the one of algorithm  <dig>  this is consistent with the result of conducting the hypothesis testing. the p-value is  <dig> %, which shows that the performance difference between algorithms  <dig> and  <dig> is not statistically significant. this is the only difference qualitatively speaking between using the weighted mers and the average mers on our cis datasets. nonetheless, as analyzed in section “the mer for segmenting a single cell”, the weighted mer is recommended.

discussion
the mer for segmenting a single cell in the supervised evaluation can be defined in several ways. it is hard to find one without any disadvantages  <cit> . simplicity, ease of understanding, penalizing errors, conservativeness, and dealing with special cases are the criteria of choosing mer in this article. based on our analyses, the weighted mer r
w is recommended. certainly, those special cases, in which either r
fn =  <dig> and r
fp →  <dig> or r
fp =  <dig> and r
fn →  <dig> presented in section “the mer for segmenting a single cell”, may occur quite rarely in practice.

for the seven cis algorithms employed in section “the ter and its se and ci”, if the average mer r
a is used, the estimated tÊrs are  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> , and  <dig> . as expected, they are correspondingly smaller than those if the weighted mer r
w is employed .

for the sake of discussion, if the mer is defined to be “the proportion of objects which it misclassifies”  <cit> , r
3 =  /  =  / , which is a function of three independent variables under the constraint condition eq. . here are three observations. if n
g =  <dig>  n
a =  <dig>  n
g =  <dig>  and n
a =  <dig>  then r
w =  <dig> , r
a =  <dig> , and r
3 =  <dig> , where r
 <dig> is very close to r
a but almost half of r
w. if n
g =  <dig>  n
a =  <dig>  n
g =  <dig>  and n
a =  <dig>  then r
w =  <dig> , r
a =  <dig> , and r
3 =  <dig> , where r
 <dig> is in the middle of r
w and r
a. if n
g =  <dig>  n
a =  <dig>  n
g =  <dig>  and n
a =  <dig> , then r
w =  <dig> , r
a =  <dig> , and r
3 =  <dig> , where r
 <dig> is close to r
w but about twice as large as r
a. hence, the mer r
 <dig> is not discussed further in this article.

the se of the average mer r
a may be estimated analytically, because the correlation coefficient between the fn rate r
fn and the fp rate r
fp in the cis application is  <dig> as proven in the following.

for a gt cell and its related ad cell, assuming they are not disjoint, once the size of the fn region increases or decreases by one pixel, the size of the fp region will increase or decrease by one pixel accordingly due to the constraint condition eq. . using the notations in section “the mer for segmenting a single cell”, the correlated pairs of the fn rate rfn and the fp rate rfp are  <dig> rfni,rfpi=ng+ing,na+ina,i=−m,…,− <dig> , <dig> …,n where the constraints are n
g – m ≥  <dig>  n
a – m ≥  <dig>  n
g + n ≤ n
g, n
a + n ≤ n
a, and n
g – n
g = n
a – n
a.

the averages of the fn rate and the fp rate are,  <dig> r¯fn=1m+n+1∑i=−mnng+ing=ngng+1ng×n−m2r¯fp=1m+n+1∑i=−mnna+ina=nana+1na×n−m <dig>  


hence, the correlation coefficient is,  <dig> ρ=∑i=−mnrfni−r¯fnrfpi−r¯fp∑i=−mnrfni−r¯fn2∑i=−mnrfpi−r¯fp2=∑i=−mni−n−m2i−n−m2∑i=−mni−n−m22∑i=−mni−n−m22= <dig>  


further, using the first formula of eq. , the se of the average mer r
a turns out to be sÊa =  /  <dig>  in which sÊfn and sÊfp may be estimated using sÊ = sqrt , where r^ = r
fn and n = n
g for sÊfn, and r^ = r
fp and n = n
a for sÊfp.

however, such an analytical approach generally underestimates the se of mer, and thus the se of ter ) as opposed to the bootstrap method. for the seven cis algorithms, if the bootstrap method is employed, the estimated sÊs of ter, in which the average mer r
a is used, are  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> , and  <dig> , respectively. if the analytical approach is used, they are  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> , and  <dig> , respectively.

CONCLUSIONS
our novel performance measure ter comes with se and 95% ci without restrictions on data size, and the correlation coefficient of ters between two cis algorithms is also solved. thus, the well-established statistical approach can be carried out to evaluate and compare the performance levels of cis algorithms with statistical confidence. significance values for differences in cis algorithm performance in combination with other factors such as computational execution time, etc. can be used as a basis for selecting algorithms.

no matter which mer is chosen and no matter which cis algorithms and datasets are employed, the approaches of designing the ter using the total probability in statistics based on mer, computing se and 95% ci of ter based on using the bootstrap method to estimate the se of mer, and conducting hypothesis testing, etc. explored in this article remain intact. the ter ε aggregates all mers weighted by the size of a cell divided by the total sizes of all cells so that the algorithm pays more penalties if making errors while segmenting larger cells.

the ter ε is supported by the pairwise-comparison test of mers using  <dig> manually segmented gt cells with different sizes and seven cis algorithms taken from imagej. it is also qualitatively consistent with the observations from the mer histograms. the ter approach is more effective than the bivariate approach and the cdf approach.

the se and 95% ci of the ter are computed using eq. , based on the se of mer that is calculated using the bootstrap method under a constraint condition for cis during bootstrap resampling. the nature of the bootstrap method is stochastic. however, our studies reveal that the variation of the estimated sÊ of ter is small. moreover, in our studies, all estimated sÊs of ters obtained by a random execution of bootstrap method while computing the sÊs of mers fall in the 95% cÎ of the estimated sÊs of ters correspondingly.

the error bars of the ters can be used to evaluate the performance level of a cis algorithm against a hypothesized value, and classify cis algorithms into different classes in terms of performance accuracies based on the criteria of performance accuracies. while the error bars overlap, the two-algorithm hypothesis testing can be employed to compare two cis algorithms and determine the statistical significance of their performance difference. the z test in eq.  involves not only the ses of ters but also the correlation coefficient between the ters of two cis algorithms, which are all investigated in this article.

abbreviations
adalgorithm detected

cdfcumulative distribution function

ciconfidence interval

ciscell image segmentation

fnfalse negative

fpfalse positive

gtground truth

mermisclassification error rates

rocreceiver operating characteristic

sestandard error

tertotal error rate

wrwith replacement

 <dig> certain commercial entities, equipment, or materials may be identified in this document in order to describe an experimental procedure or concept adequately. such identification is not intended to imply recommendation or endorsement by the national institute of standards and technology, nor is it intended to imply that the entities, materials, or equipment are necessarily the best available for the purpose.

acknowledgment
not applicable.

funding
this work was funded entirely by the national institute of standards and technology.

availability of data and materials
the software and test data is available at https://github.com/usnistgov/cell-imaging.

authors’ contributions
jcw contributed to conception, designing algorithms, developing formulas, computer programming, and manuscript preparation. mh contributed to acquiring the data, writing an imagej macro code for computing gt areas, ad areas, fps and fns in fluorescent microscopy images, and manuscript preparation. rnk contributed to initiation of the project, and manuscript preparation. jte contributed to acquiring the data, and manuscript preparation. alp contributed to initiation of the project, and acquiring the data. all authors have read and approved the final version of this manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
