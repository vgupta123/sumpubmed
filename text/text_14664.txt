BACKGROUND
structural comparison between proteins is a fundamental and common practice in structural biology with many applications, such as the identification of new domains, the classification into structural families and the detection of evolutionary relationships between protein structures that cannot be found by sequence comparisons. for example, the homology between prokaryotic and eukaryotic cytoskeletal filaments  or the paralogy between proteins such as hemoglobin and myoglobin where only revealed once the 3d structures of these proteins were solved and compared  <cit> . since the determination of the first structures in the 1970s to the present day, the number of solved protein structures in the protein data bank  has continued to grow at an exponential rate, with more than one hundred thousand structures available today. to facilitate the organization and analysis of this large amount of information, different structure comparison methods and tools have been developed  <cit> . however, the rise in number of known structures makes the comparison of query structures against the database increasingly costly  using existing tools.

depending on the representation of proteins, current structural alignment methods use two main approaches: methods based at the level of residues or cα atoms   or based on secondary structure representations  . one of the major advantages of methods based on secondary structure representations is that they are generally faster, as there is typically at least one order of magnitude fewer secondary structure elements than residues within a protein. however, residue-based methods are generally more accurate  <cit> .

structure comparison methods are increasingly successful at detecting more divergent relationships  <cit> . significant improvements have also been achieved in terms of speed when searching against large databases  <cit> . despite this success, current structural comparison tools have a few major drawbacks that limit their utility for detecting cases of remote homology where protein structures might have diverged considerably. first, they treat proteins as rigid bodies and cannot accommodate the large structural variations observed over long evolutionary divergence, for example, the relationship between the nucleoporins and vesicle coats  <cit> . additional structural variations that might be due to protein flexibility or allosteric transitions are difficult to detect with the current methods. finally, they are usually restricted to the comparison of individual domains and do not consider multi-domain proteins. how many distant structural relationships remain undetected because the tools are not sensitive enough? our goal was to detect protein structure similarities that are beyond the reach of current tools based on rigid body superposition and, at the same time, to be able to do it efficiently and with competitive accuracy.

to that end, we have developed an efficient flexible aligner tool to compare protein structures based on matrices that contain a simple description of the geometrical arrangement of secondary structure elements. arthur lesk was the first to describe a tabular representation, which comprises the information about the relative orientation of the elements of secondary structure  using a coarse-grained and discrete double quadrant codification  <cit> . the concept is that the sequential order of secondary structure elements and the geometry of interacting pairs capture the essence of the protein fold. the secondary structure elements and their respective angles and distances can be encoded in a matrix. the secondary structure elements are recorded in order of appearance along the main diagonal of the matrix. each off-diagonal position contains the angles and distances between the pairs of secondary structure elements. the comparison of these matrices allows a faster structural matching than when using a protein representation at the residue/atomic level. however, secondary structure geometry matrices comparison is an np-hard problem. various implementations to solve this problem have been presented, including quadratic and linear integer programming  <cit> . those methods are very precise at extracting maximally similar sub-matrices, but this is at the expense of speed when comparing against a large number of matrices such as the complete pdb database. in  <dig>  konagurthu proposed the tableausearch method to detect similarities between matrices using two steps of dynamic programming  <cit> . tableausearch is faster than previous methods, but this comes at the expense of accuracy and of lacking the ability to find local matches as compared to global ones  <cit> . this method is not limited to element pairs that are in contact and uses the scheme previously proposed by lesk described above  <cit> .

we present and release here a new computer application called moma . this tool relies on a new algorithm that incorporates several innovations, which are: 1) it considers the continuous value of the angles instead of the discrete and coarse-grained quadrant codification proposed by lesk and implemented in tableausearch; 2) the incorporation of a user-defined maximum distance cutoff to consider contacts between secondary structure elements, 3) a modified two-step dynamic programming algorithm that allows for the maximization of the rigid union of several local and compatible structural matches and 4) a new procedure to solve the integration of several rigid and globally incompatible local matches into a flexible and global solution. this new algorithm, as implemented in moma computer application, results in a fully automated and highly efficient global flexible structural aligner, which is able to find structural similarity between distantly related proteins with high accuracy.

RESULTS
overview of the new method
this article describes a fully automated and highly efficient method for the flexible comparison of two protein structure chains. the method relies on the matching of secondary structure elements between the protein chains, based on a two-step dynamic programming algorithm that combines local and global matching procedures. the results obtained when applying this method consist on a single and global structural alignment that integrates all rigid local matches found between the two input protein structures. a general overview of the method is provided in fig.  <dig>  a detailed description of each step of the method is provided in methods section.fig.  <dig> flowchart of the method as implemented in moma. a example of structure of mara  and the matrix representation of its folding pattern. the relative orientation of any two secondary structural elements  is specified by the angle  between the vectors along their axes . this is recorded only for those sse pairs found in close proximity , as measured by the distance  between midpoints of the vectors . b these matrices are built for the query  and the target  structures. after that, row-wise matrices containing all possible sse pairs in each structure are also built. query and target proteins render matrices of  and  pairs, where m and n correspond to the total number of sses found in the query and target structures, respectively. c a first step of global or semi-global dynamic programming  algorithm is executed to build dp matrices for each query row against each target row, thus generating a total of mxn dp matrices. in this step, scoring rules and restraints based on angular and distance information of all sse pairs in each structure are used . from each dp matrix, only the maximum score value is selected and recorded into a new scoring matrix that is going to be used in a second and final step of a dynamic programming algorithm. in the case of a global alignment, this value is obtained from the bottom right cell of the dp matrix. in the case of the semi-global alignment, this value is obtained from the most right column or the most bottom row of the dp matrix. d a local dynamic programming algorithm and the previously built scoring matrix are now used to align the secondary structure elements of the query and the target structures. e unaligned sse elements from the query and target structures are removed from the initial 2d matrices, thus rendering two matrices of identical dimensions, which can now be compared directly. a delta sub-matrix is built and from it a global matching score calculated . f finally, a new algorithm  is used to infer the list of all incompatible rigid local matches , which are independently superposed with the kabsch algorithm. in this particular and simple example only one local match or block is found. details of the algorithm for finding local matching blocks are provided as supplemental material . the resulting superposition is represented with aligned elements in red  and orange . residues not aligned are displayed in grey color



calibration of parameter values
the results of our method, as implemented in moma, strongly depend on the value of three parameters, which are the constant that limits the score calculated from the angular difference  and the gap-opening penalties for the two steps of dynamic programming . by optimization of the different combinations of these parameters, we found that the best results were obtained with a c constant value of  <dig> and a gap-opening penalty of − <dig> for both steps of dynamic programming . with these parameter values, only  <dig> out of  <dig> alignments from homstrad database have a qs index smaller or equal to  <dig>  and the average qs index was  <dig>  . the failure of moma to correctly align the corresponding sse pairs in these two cases is due to an inaccurate assignment of secondary structure elements by dssp computer program. in some cases, dssp does not assign the exact start and end points of sses. in other cases, long helices and strands with some bending are split into two or more non-contiguous sses  <cit> .

another relevant parameter in the matrix comparison step of our method is the distance cutoff  used to define sse pairs in contact  <cit> . we tested different values of distance thresholds in the homstrad set to define the best performing one . if the distance cutoff value was smaller or equal than  <dig> Å, several matrices could not be aligned because too few sse pairs were considered . most of the information required to identify a folding pattern is contained in adjacent positions near the main diagonal in the matrices  <cit> .

on the other hand, if the distance cutoff was set to values greater than  <dig> Å, the average qs index decreased . therefore, a value of  <dig> Å was finally used as the maximum distance cutoff to define a contact between two sses.

after fixing the previous parameter values, and to evaluate if the raw score reported by moma was better than the relative similarity score, we then carried out searches using the seven most common folds as a query against a subset of  <dig>  domains from astral  <dig>  . the roc curve analysis of these two scores showed that the relative similarity is slightly better than the raw score . thus, we defined relative similarity as the measure to be used for fold assignment by default in our method, as implemented in moma.

testing the new method
as a first test of our method with the fixed parameter values described above, we used as a query the seven most common folds and searched against the  <dig>  domains in astral 95 % sequence identity dataset. roc analysis of structure similarity matching results shows that, irrespectively of the query, the method has an excellent performance in terms of accuracy at the fold, family and superfamily levels . execution time increases exponentially with the total number of sse elements assigned in the structures .

benchmarking with other methods
the representative set of  <dig> protein queries was compared against the astral  <dig>  40 % sequence identity dataset  with sheba, yakusa, qp tableau search, gangsta+, structal, topmatch and moma computer programs. the performance of these methods was assessed by roc curve analysis based on the normalized scores reported by each of them and adopting the scop classification as the gold standard  <cit> . we also measured the execution time required by these computer programs to perform a search against the full astral dataset of  <dig>  domains with the  <dig> query structures.

in terms of auc and maximum accuracy values, both at the fold and superfamily levels, structal, topmatch and moma are the best performing methods, followed by gangsta+, qp tableau search, sheba and yakusa . in terms of accuracy, at the fold and superfamily levels, moma has the best performance among methods that use a geometric secondary structure representation of 3d protein structure such as qp tableau search and gangsta+, or when compared to currently the fastest methods for 3d structure matching such as yakusa and sheba. moma requires a variable amount of time to complete the search, which depends on the number of sses present in the matrix , but in this large benchmark set moma is much faster than all tested methods  .table  <dig> performance benchmark analysis of moma with different methods

area under roc curve , maximal accuracy , false positive  and true positive  rates for each method are reported . the execution time needed to compare the  <dig> queries against the  <dig>  domains in the astral scop 40% sequence identity dataset is shown in the last column of the table. execution times are reported in seconds , minutes , hours  and days  



a detailed analysis of roc curves reveals that sheba is a more specific classifier than moma, gangsta+ and qp tableau search, exhibiting a very low rate of false positives at the fold and superfamily levels. however, these methods have a higher sensitivity when compared to sheba. gangsta+ has an excellent performance and is better than qp tableau to search for proteins with the same fold, but qp tableau search is better than gansgta+ at a rate of false positives > <dig>  for the superfamily level.

at the fold level, yakusa is always worst than sheba, qp tableau search, gangsta+ and moma. however, yakusa has a slight advantage than sheba at a rate of false positives > <dig>  for the superfamily level.

the statistical analysis of the auc curves reveals that the difference observed in the performance of moma with other computer programs is statistical significant at the 95 % confidence level .

as for the running time of each method, moma is the fastest of the methods tested. for example, it takes only 8 min and 28 s to search the  <dig> queries against the whole astral  <dig> %, while all other methods take more than 45 min, hours or even days of execution time . we note that structal, gangsta+, qp tableau search, and sheba are infeasible to run queries on very large datasets, such as the pdb database, which was one of the goals that motivated us to develop this method. although qp tableau search can calculate the exact solution of the comparison of two matrices and gangsta+ can generate non-sequential protein structure alignments based in sses, moma has a better performance and is much faster than these two methods.

biological applications
rigid body shift caused by a rearrangement of domains
a well-known case that illustrates an example of rigid body movement between two structural domains is provided by the comparison of structures of calmodulin with and without ca2+ ion . both structures have  <dig> ef-hands, which consist of a helix-loop-helix motif that interact with ca2+and are organized into two distinct globular domains   <cit> . these two domains are connected by a linker that is unstructured. this specific case is difficult to align due to the flexibility of the  <dig> loops and of the central linker. in the calmodulin-ca2+structure, the two calcium-binding domains are wrapped around a binding peptide in a “close” conformation while in the ca2+free structure, a rotation around the axis of the linker leaves the two domains in an “open” conformation. other flexible aligners such as flexprot  <cit>  and fatcat  <cit> , required the introduction of four or more rigid-body movements  around pivot points  to obtain a good superposition of these two structures. in a single step, moma is able to automatically detect the conserved n-terminal and c-terminal domains, as shown in the matrix alignment, despite the different relative orientation of the two domains .fig.  <dig> example of a rigid body shift caused by the rearrangement of two structural domains upon ligand binding. structure superposition generated with moma of the calmodulin-target peptide complex  and the calcium-free calmodulin . top panel: the conserved domains are shown in the alignment of sses and the respective sub-matrices surrounded by grey and red blocks. bottom panel: the two structures and the superposition of their aligned domain pairs are shown respectively in rainbow color representation  and with the sse pairs structurally aligned in red and orange colours . non-aligned residues are shown in grey. the alignment of sse elements is also represented with aligned blocks highlighted . the structural superposition of these two domain pairs required different rotation matrices and translation vectors. in this example moma was executed with the following parameters: g1 = − <dig>  g2 = − <dig> and c = 90



simple but significant structural rearrangement
the case of two functionally unrelated proteins illustrates the capacity of moma to obtain the global alignment of two structurally similar domains whose relative orientation is not conserved. the putative oxidoreductase from pseudomonas putida  and the human cytokine-like nuclear factor n-pac  share two almost identical structural domains, which are separated by a connecting linker . this linker is composed by two or three helices in bacterial and human proteins, respectively. the differential number of helices present in the linkers orients the two domains differently in the bacteria and human proteins. this simple structural rearrangement is a challenging problem for structural similarity detection methods, because the orientation of the two domains is different in both proteins. rigid structure comparison tools can only identify the matching of these domains as two separate solutions, in the rare cases where more than one solution is reported .fig.  <dig> example of a simple but significant structural re-arrangement. structure superposition of the putative oxidoreductase from pseudomonas putida  and the human cytokine-like nuclear factor n-pac  generated with moma. the conserved domains are shown in the alignment and the sub-matrices remarked by grey and red blocks . the two structures are rainbow colored  and the resulting sse pairs aligned are shown in red and orange colours . the alignment of sse elements is also represented with aligned blocks highlighted . each superposition was carried out with different rotation matrices and translation vectors. in this example moma was executed with the following parameters: g1 = − <dig>  g2 = − <dig> and c = 45



the power of moma resides in the fact that the structural similarity between both structural domain pairs is automatically detected and reported in a single step. in addition, the source of the conformational difference is also readily detected and highlighted in the alignment matrix .

complex structural rearrangement
a more impressive example of structural rearrangement detection occurs in the case of sec <dig> subunit from the copii coated vesicle complex and the nucleoporin nic <dig>  despite a lack of detectable sequence similarity  <cit> , it is now generally accepted that coated vesicles proteins and nucleoporins have a common origin  <cit> . however, considerable divergence has occurred since the event of gene duplication, up to a point that sequence similarity cannot be detected any longer, even by the most recent and powerful methods  <cit> . this sequence divergence has had important consequences on the structural conformation, interactions and cages formed in these two proteins  <cit> . this is the type of structural divergence that we aimed to detect efficiently and automatically, and thus the main motivation behind the development of the new method reported here. nic <dig>  and sec <dig>  are mainly composed of pairs of α-helices that are stacked on each other, hence termed spah domain . both proteins adopt a roughly linear shape that can be divided into three sections of conserved local structure . however, those three conserved sections are preceded, followed and separated by other sections that exhibit considerable structural deviation. sections  <dig> and  <dig> are separated by a compact globular u-turn in nic <dig>  while this linker is unstructured in sec <dig>  the linker between sections  <dig> and  <dig> is composed by  <dig> α-helices in nic <dig>  but only by  <dig> α-helices in sec <dig>  these substantial structural modifications imply that section  <dig> is interacting only with section  <dig> in nic <dig>  while in sec <dig> section  <dig> interacts almost exclusively with section  <dig>  the relative orientation between the three blocks is also very different in both proteins. despite these considerable global structural differences, the local structural similarity of the three blocks is clear and represents a legacy of their common ancestry  <cit> . to the best of our knowledge, moma is the only existing tool that is able to readily detect this intricate structural conservation in an automated fashion, which was the initial motivation of this work. the result obtained for this example case with moma clearly illustrates the power and potential for biological discovery of the new method reported here.fig.  <dig> example of a complex structural re-arrangement. structural superposition with moma of proteins sec <dig> of the copii complex of coat vesicle  and the nucleoporin nic <dig> . top panel: the structure matching domains are shown in the alignment of sses and the respective sub-matrices surrounded by red, blue and green colored boxes. bottom panel: the three independent protein structure sectors that match between the two proteins, identified by moma, are highlighted by green, orange and blue colored boxes . the alignment of sse pairs and the independent structural superposition of the three matching block pairs are shown in red-orange, cyan-blue and light–dark green colours . in this example moma was executed with the following parameters: g1 = − <dig>  g2 = − <dig> and c = 45



strengths and weaknesses of the method
the speed, accuracy and flexible alignment capability of the method described here are their distinctive strengths. the method, as implemented in moma computer tool, is able to detect distant structural relationships in proteins in an automated fashion and efficiently, which makes it suitable to search the complete pdb for biological discovery. among the weaknesses is the fact that moma is a single chain and topology-dependent protein structure alignment tool . few other tools, such as topmatch and structal have the capability of aligning protein structures in a topology-independent manner, but this comes at the cost of a longer execution time . topmatch is the only tool currently available that is capable of aligning multiple protein chains, but the alignments are rigid and not flexible, which is a drawback in order to find domain movements or significant structural re-arrangements as exemplified here.

structal was the most accurate tool in our benchmark . a detailed analysis of the benchmark differences observed between structal and moma shows that out of the  <dig>  and  <dig>  positive cases reported by structal and moma, respectively, a total of  <dig>  positive cases are common to both methods. there are  <dig> and  <dig> positive cases reported only by structal and moma, respectively. out of the  <dig> positive cases that structal reports and moma fails to detect,  <dig>  % is because of topological re-arrangements and  <dig>  % is because there are too short or very few sses in the structures. in  <dig> % of the cases, moma fails to detect the positive cases because of large differences in secondary structure definitions between the target and the query structures. it is noteworthy to mention that the use of stride  <cit>  or dssp to assign sses produced, in a general basis, no significant difference on the performance of moma in our benchmark test . however, the accuracy of our method does depend directly on the assignment of sses, as well as on its use to represent protein structures and on its intrinsic topology-dependency. on the other hand, this simplified representation translates into a significant gain of speed without an important loss in accuracy . finally, it is important to mention that the method described here produces structural alignments of secondary structure elements and not structural alignments at the residue-level. therefore, if required, moma could be used in a first stage for fast database search on the task of fold or superfamily assignment and then, afterwards and only for positive matches, a more sophisticated software tool able to incorporate topology re-arrangements and to provide residue-level structure alignment, could be executed in a nested and sequential manner.

it is noteworthy to mention that this new method is not only restricted to protein structure comparison and could be implemented for many other applications that require the maximization of global shape matching between two three-dimensional objects with significant conformational variation, provided that those objects can be represented with vectors of different types which are relevant to describe the shape of the object, but with the limitation that vector order is a constraint of the method .

CONCLUSIONS
we have developed a new structural comparison algorithm based on the spatial arrangement of secondary structure elements and shown that it allows the efficient retrieval of similar folding patterns in database searches. moma exhibits a high sensitivity to detect distant structural similarities without compromising its performance at identifying proteins that share a common fold.

in this regard, the development of a new combined global/semi-global and local structural alignment method that relies on a two-level nested dynamic programming algorithm and involves a new scoring scheme based on the continuous angular difference of sse pairs close in 3d space instead of the previously used discrete quadrant codification, significantly improved the accuracy to find global similarities based on local matches in protein structures.

