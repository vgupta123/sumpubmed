BACKGROUND
as sequencing technologies continue to improve, the number of transcriptome projects derived from species without a reference genome is increasing  <cit> . however, the absence of a reference genome makes identification and annotation of assembled transcripts challenging  <cit> . a typical rnaseq experiment will yield millions of reads, and after de-novo assembly the contig count is typically many-fold higher than the expected number of genes. one approach to reduce this number is to identify the subset of contigs containing an open reading frame . these protein-coding sequences can then be further analysed, for example by building phylogenetic trees, assessing rates of substitution and comparing levels of gene expression  <cit> . many of these bioinformatics experiments, particularly phylogenetic tree building, require an accurate protein-coding dna sequence. this is vital for codon-based models of substitution, which require an in-frame sequence, and are more effective than either dna or protein-based models  <cit> . for species without a reference genome this is problematic as est sequences and those assembled from next-generation techniques are known to contain sequencing errors leading to frame-shifts  <cit> . indeed, a recent non-model vertebrate transcriptome project identified  <dig> / <dig>   transcripts to contain a frame-shift  <cit> , while a planarian transcriptome assembly identified an estimated frame-shift rate of between  <dig>  %-13 %  <cit> . there is therefore a clear requirement for orf finding software to accurately correct frame-shifts and produce a dna sequence from transcripts, irrespective of their sequencing or assembly origins. this is particularly important when the provenance of available transcripts is unknown or the raw reads are unavailable.

there are many programs available that identify putative open reading frames within assembled transcripts but cannot correct frame-shifts, such as transdecoder  <cit> , orfpredictor  <cit>  and getorf  <cit> . many other methods, such as blastx  <cit>  and estwise  <cit> , can correct frame-shifts but do not produce a dna sequence and as such are unsuitable for subsequent phylogenetic analysis. one method that does produce a dna sequence is estscan  <cit> , which is designed to identify orfs and correct frame-shifts using a hidden markov model . this requires a large quantity of known protein coding sequences, preferably from the same species  <cit> , which is often unfeasible for species without a reference genome. prot4est attempted to solve this problem by building an hmm based on a modelled transcriptome  <cit> , however one of the dependencies, decoder, is now unavailable. it therefore relies on estscan, which we show below to be inaccurate, producing false positive results. some alignment programs such as genewise  <cit>  and macse  <cit>  can be used to correct frame-shifts but these require a homology wrapper to assess if the transcript is protein coding as well as to identify putative homologs. although homology wrappers are provided with genewise they require deprecated bioperl modules. as we show below, with appropriate homology wrappers genewise perfectly corrects a frame-shift only 60 % of the time. furthermore, both genewise and estscan produce multiple orfs per transcript with no prioritisation as to which orf is the most reliable. we also noted several potential improvements in homology based recognition that could be exploited and so developed a program that would produce a single orf per transcript, accurately correct frame-shifts with minimal false positives and output a dna sequence suitable for subsequent phylogenetic analysis.

alignwise uses homology to identify contigs representing biologically relevant protein-coding sequences, and correct frame-shifts using two algorithms, alignfs and genewise. the alignfs method uses a combination of blast searches  <cit>  and multiple alignments using muscle  <cit> . here we describe the methodology behind alignfs, and assess it’s ability to identify orfs and correct frame-shifts in comparison to other software. we show that by combining alignfs and genewise we achieve fewer false positives than alternative methods or either approach alone. alignwise also corrects frame-shifts with high accuracy, irrespective of evolutionary distance. alignwise is designed to work on transcript sequences from any source, regardless of the method of generation.

implementation
the alignfs algorithm functions by identifying homologs, constructing a multiple alignment, and then correcting any identified frame-shifts . an initial blastx search is used to identify putative protein-coding regions. if the top hit has an e-value less than or equal to 1e- <dig> then the transcript is considered protein coding, others are discarded. for top hits with multiple high-scoring segment pairs , the putative orf is considered to go from the earliest start point, to the furthest end point even if the hsps are non-overlapping. to assess whether the orf contains a frame-shift, the whole nucleotide sequence is run through blastn against a coding sequence database to identify homologs with an e-value less than 1e- <dig>  by default, alignfs searches for three homologs but this can be increased in the program settings. the identified homologs and whole nucleotide sequence are then globally aligned together using muscle.fig.  <dig> alignfs workflow. the flowchart depicts the running order and logical progression within alignfs



the multiple alignment is examined for gaps consistent with the presence of a frame-shift, i.e. not divisible by three. ‘n’s are added to replace transcript gaps . for single or double spaced gaps the appropriate number of bases are added . four base gaps are treated as single and in-frame 3 bp gaps . for longer gaps each end is processed individually according to the frame of one of the aligned coding sequences . in these cases a frame-shift correction could be made at either or both ends of the gap. for gaps conserved in all homologs  bases are removed from the transcript following the same logic as deletions. this accommodates situations where one of the aligned homologs contains a frame-shift as it will be ignored. furthermore, any gaps that are less than 3 bp away from the start or end of the protein-coding region are skipped. if all the gaps not divisible by three are skipped then the transcript is considered as not having a frame-shift and the entire putative orf returned.fig.  <dig> demonstration of how alignfs corrects frame-shifts caused by deletions. for each alternative situation the original sequences are shown aligned to a homolog, how they are altered and the final orfs in frame. sequence  <dig> has a single gap, which is corrected by adding an ‘n’. sequence  <dig> shows a 2 bp gap, corrected by adding  <dig> ‘n’s. sequence  <dig> has a 4 bp gap, which is treated as a single gap followed by an in-frame deletion, as such it is corrected as in sequence  <dig>  the final example shows a longer gap where each end is treated in accordance to the reference frame , as such the first codon is treated as in sequence  <dig>  and the end section is deemed in-frame. alternating codons are shown in different shades of blue



if insufficient homologs can be identified or the alignment fails to pass thresholds on minimum alignment identity, maximum length of a gap or maximum percentage of gaps, no frame-shift corrections are attempted. instead, the region from the top blastx hsp is selected as the putative orf . this is less likely to contain an unidentified frame-shift than an orf based on multiple hsps. as a consequence, for low quality alignments where a frame-shift may be ambiguous or poorly corrected, alignfs will most likely provide a truncated in-frame sequence and not attempt a frame-shift correction. the running decisions made by alignfs can be observed using the verbose option and the final decision per transcript is output to a log file.

after running the alignfs algorithm, alignwise will run genewise using the same protein sequence identified in the blastx. genewise is set to use the estwise algorithm and so does not search for introns within the transcript. the output from genewise is parsed to stitch together each orf, and then the longest orf is selected. the protein sequence derived from this putative transcript is then compared against the alignfs protein and the sequence with the best blastp result against the original blastx hit is selected. this decision process selects proteins aligned across their full length where possible, ensuring that alignwise does not select sequences containing non-coding regions. the choice of output  is written to the log file. additionally, the choice of algorithm can be fixed within the running options to force use of either alignfs or genewise alone.

alignwise can be run in parallel, which considerably speeds up the time to completion. further speed improvements can be obtained by altering the blastx parameters to favor speed over sensitivity. alignwise will optionally save all blastx results in an xml file, suitable for further analysis and annotation of sequences with packages such as blast2go  <cit> . it can also use previously identified orthologs, skipping the blastn step. further options and information on the running parameters can be found in the release documentation. alignwise is designed to be a flexible addition to most annotation and analysis pipelines.

blast databases
alignwise is provided with a small, vertebrate database, which is suitable for analyzing a range of species. this dataset contains protein-coding transcripts from the following ensembl species : ciona savignyi, danio rerio, gallus gallus, homo sapiens, latimeria chalumnae, lepisosteus oculatus, mus musculus, oryzias latipes, pelodiscus sinensis, taeniopygia guttata and xenopus tropicalis. this dataset was processed to remove the  <dig>  coding sequences not beginning with an atg codon, leaving  <dig>  protein-coding sequences. a larger database is additionally supplied via figshare , and comprises all vertebrate refseq mrna sequences from the ncbi nucleotide database using taxid  <dig> , excluding those with ‘variant’ in the title . the  <dig> , <dig> protein sequences were reduced to  <dig>  using cd-hit  <cit> . to analyze how evolutionary distance affects alignwise we subdivided this database . other blast databases can be used for alignwise, and it is not required that the nucleotide and protein databases contain the same set of sequences. however, any nucleotide database must contain only coding-sequences in frame and both databases must be indexed using the ‘-parse_seq’ makeblastdb parameter.table  <dig> summary of the subdivided blast databases

the minimum evolutionary distance is according to timetree  <cit> 



RESULTS
alignwise is sensitive and able to reliably identify orfs
we assessed the speed and sensitivity of alignwise at identifying biologically relevant protein-coding sequences using four datasets, human ests, protein-coding rat cdnas , randomly generated dna sequences from fabox, constrained to a 50 % gc ratio  <cit> , and randomly generated dna sequences with no gc constraint. each of these contained  <dig> sequences. these acted as a model dataset with potential frame-shifts, a positive control and two negative controls respectively. these results were compared against other orf finding software, namely estscan, orfpredictor, and transdecoder, as well as the alignfs and genewise algorithms on their own. required dependencies for estscan are difficult to obtain for modern platforms, indeed, we were unable to install estscan on a recent mac osx platform. therefore each program was compared on an intel core2- <dig> within an ubuntu  <dig>  lts environment compatible with all programs. transdecoder was trained using  <dig> human coding sequences and estscan was set to use a human hmm, otherwise all parameters were left as default. alignfs, genewise and therefore alignwise were all set to use the default blast database provided, which contains human cdnas but not ests or rat cdnas. we attempted to compare the macse aligner, but this program proved too slow to use, taking more than 3 days to analyse 29/ <dig> rat sequences.

alignwise took the longest time to run using the standard settings, however, decreasing the blastx sensitivity and allowing alignfs to make use of multiple cores considerably improves the runtime . alignwise, alignfs and genewise identified the same number of orfs in the human and rat datasets and neither program identifies any orfs within the randomly generated sequences. in contrast, although estscan ran fastest, it identified 835/ <dig> of the fabox randomly generated, 50 % gc sequences as having putative open reading frames. analyzing random dna sequences with no gc constraint shows estscan to identify putative orfs within the negative control, but at a reduced rate. overall, estscan does not differentiate between randomly generated dna and biologically relevant protein-coding regions but is affected by gc bias. orfpredictor requires running blastx, which is reflected in a longer run time. however, it still attempts to generate putative orfs for those sequences with no blastx result, and therefore identified  <dig> random sequences, irrespective of gc content, as being protein-coding. transdecoder was trained using human coding sequences and so did not find any orfs within the randomly generated sequences, however it found the fewest orfs within the rat and human datasets, even when using a pfam search. it is surprising that transdecoder finds so few orfs in the human ests given it is trained on human cdna data. we presume this is a consequence of transdecoder not considering frame-shifts in its algorithm.table  <dig> comparing alignwise and other orf finding software

alignwise  was set with the options ‘-a –t 2’, alignwise  was run on a mac  <dig> x  <dig>  ghz 6-core intel xeon using the option ‘-a –t 20’ to demonstrate the speed gains on a machine with more available cpus. only the longest orf per starting transcript was counted in the transdecoder and estscan outputs. the orfpredictor run time includes running blastx



although homology approaches are sensitive and have very few false positives, these methods will have high false negative rates if the orfs are unique. we have assessed this by isolating the coding sequence of human genes with no known ortholog from ensembl. these  <dig> genes were processed with alignwise using databases with increasingly divergent sequences, and compared against  <dig> highly conserved genes with known orthologs in zebrafish. using a non-human database identified 96 % of the unique orfs, demonstrating that homology methods are capable of finding species-specific protein-coding genes . the number of identified orfs drops when using a blast database containing increasingly divergent species, but even at a minimum distance of  <dig> mya, over 85 % of the unique orfs were identified. this compares to the control dataset of  <dig> genes with an ortholog in zebrafish, which showed that more than 99 % of the orfs were identified, irrespective of the database.fig.  <dig> alignwise can identify unique orfs. the proportion of orfs identified within unique and non-unique protein-coding sequences is shown for increasingly divergent databases



alignfs is highly accurate at correcting frame-shifts
in-frame sequences are vital for phylogenetic analysis, and so we compared the accuracy of frame-shift corrections for alignwise and estscan as well as alignfs and genewise individually. each program analysed  <dig> human protein-coding sequences artificially altered to include a random one-base frame-shift. none of the programs recaptured all  <dig> orfs from these sequences. alignfs identified  <dig> orfs, of which  <dig> were a perfect match to the coding sequence using the default database . using this same protein database, genewise produced  <dig> orfs that were a perfect match to the cds. alignwise selected  <dig> of the alignfs results and  <dig> of the genewise orfs; the remaining  <dig> sequences were identical between alignfs and genewise. alignwise therefore identified  <dig> orfs, of which  <dig> were aligned perfectly to the original cdna, a higher value than alignfs or genewise achieved independently. only  <dig> sequences were lost when using the faster and less sensitive blastx option. using a large database based on the ncbi refseq collection, alignfs identifies more orfs  of which  <dig> are accurate while genewise identifies  <dig> orfs that are a perfect match to the cds. alignwise selected  <dig> of the alignfs results and  <dig> of the genewise results based on their blastp alignments. in total,  <dig> of the  <dig> orfs were a perfect match to the cds, a marginally worse result than alignfs. estscan, using a human hmm, produced 259/ <dig> accurate orfs, with both estscan and genewise tending to extend the orf beyond the known coding region .fig.  <dig> four alternative orf sequences. the cdna with artificial frame-shift  is shown along with four possible orfs, all of which are aligned to the known cds sequence. the first orf has accurately corrected the frame-shift, producing an in-frame result. the second orf has not made any changes to the input sequence and so is not in frame. the third orf excludes the frame-shift position, but the resulting sequence is in-frame. the final orf excludes the frame-shift position, but a frame-shift correction has still been made. finally we show which of the orfs are accurate, and then which of the sequences with an attempted fsc  are accurate. alternating codons are shown in different shades of blue



identifying orfs from assembled transcripts of non-reference species would require using databases or hmms containing dissimilar sequences. to simulate this we divided the refseq database into smaller databases containing increasingly divergent sequences, for example a database excluding humans, or one excluding all primates . the results in fig. 5a show how the accuracy of alignfs and genewise decreases as the databases diverge, with alignfs more accurate at shorter distances. notably genewise produces accurate orfs 60 % of the time, irrespective of the underlying database. thus, alignwise is not as affected by evolutionary distance as alignfs, and out-performs both alignfs and genewise using more diverged databases. to assess how estscan responds to evolutionary distance we used the publically available hmms from human, mouse and zebrafish. although the number of models available is a limitation, only 25 % of orfs processed by estscan perfectly align to the original coding sequence. as databases diverge, alignfs and genewise orfs decrease in length, with alignfs consistently finding shorter sequences . this highlights the alignfs algorithm, designed to find accurate sequences at the expense of length. in contrast orfs identified by estscan are consistently longer than the actual protein-coding regions.fig.  <dig> measuring the affect of database divergence orf quality. a the accuracy of orf frame-shift correction is shown for the four methods using increasingly divergent databases. b the mean coverage of the cds is shown using those same databases, a line is drawn at 100 % since no software should be finding orf sequences longer than the known protein-coding region



many identified orfs will not contain a frame-shift correction  and instead be truncated. we therefore analysed the quality of orfs containing a fsc, identifiable from the log files. using the whole refseq database, alignfs accurately fixes 98 % of  <dig> frame-shift corrections . excluding human sequences from this database alignfs perfectly corrects 95 % of the  <dig> fscs. when using a blast database excluding all eutherian sequences this drops to 51 % . genewise made  <dig> fscs using the whole refseq database, of which only  <dig>  were accurate. however, this value is unaffected as the reference sequences diverge demonstrating genewise is insensitive to evolutionary distance. by combining alignfs and genewise in alignwise, we maximize the benefits of each of these approaches. using a database that excludes all eutherian sequences, alignwise makes  <dig> fscs of which 58 % are accurate. estscan, using a human hmm, attempted  <dig> fscs, of which only 16 % were correct. thus at close evolutionary distance alignfs is the most accurate method of correcting frame-shifts. as evolutionary distance increases, combining these results with genewise produces the best outcome.fig.  <dig> the accuracy of frame-shift corrections drops using divergent databases. for those orfs with a frame-shift correction, the proportion that can be perfectly aligned to the original cds are plotted. the accuracy of alignfs drops as the minimum distance between the database and target species increases. by combining these results with genewise, the drop is not as severe and remains above genewise used individually



we next assessed whether alignwise is affected by the relative position of the frame-shift within the orf . using the whole refseq database, alignfs, genewise and alignwise show approximately the same proportion of accurate orfs independent of the frame-shift location. estscan, using the human hmm, shows a small increase in accuracy when the frame-shift is located at the end of the coding-region.fig.  <dig> the accuracy of the orfs is independent of frame-shift location. for those sequences with a frame-shift correction, the proportion of accurate orfs is shown according to the relative location of the frame-shift within the cds. alignfs, genewise and alignwise were run using the refseq database, and estscan used the human hmm



running alignwise on real data
to compare alignwise and estscan on real data from a non-reference species we ran both programs on  <dig> acipenser sinensis ests; estscan found  <dig> orfs using a zebrafish hmm, alignwise identified  <dig> using the default blast database and  <dig> using the larger refseq database. estscan altered the sequence of  <dig> ests, while alignwise corrected frame-shifts in  <dig> ests using the default database and  <dig> using the refseq database. individually, alignfs made  <dig> fsc using the default database and  <dig> using the refseq database, while genewise made  <dig> and  <dig> fsc respectively. to compare the resulting orfs we selected those sequences where at least one program made a frame-shift correction. we compared these orfs against their putative zebrafish homolog by a distance matrix using the gy <dig> codon substitution model in hyphy  <cit> . we excluded those where orfs were identical, as well as those with a minimum distance greater than  <dig>  as in  <cit> . using the default database, alignwise, alignfs and genewise behave similarly with  <dig>   <dig> and  <dig> of the orfs having the shortest distance to zebrafish respectively. comparing the distance matrices produced using the refseq database, alignwise outperforms the other programs as  <dig> of its orfs have the shortest distance to zebrafish. this compares to  <dig> orfs produced by genewise,  <dig> alignfs orfs and  <dig> orfs produced by estscan. thus alignwise out-performs alignfs and genewise individually as well as estscan using real est data.

finally we tested the ability of alignwise to identify and correct frame-shifts within a de-novo assembled newt transcriptome generated by looso and colleagues  <cit> . using mass-spec proteomics the authors suggested  <dig>  transcripts contain a putative frame-shift and confirmed this for a single sequence. we therefore asked how many of the original  <dig>  transcripts were identified as protein-coding and containing frame-shifts using either alignfs, genewise or alignwise. using the refseq database, alignfs identified  <dig>  orfs, of which  <dig>  featured a fsc . genewise identified the same number of orfs but made more fscs, while alignwise selected fewer frame-shift corrected sequences than either program made independently. for the  <dig>  sequences previously identified as containing a putative frame-shift  <cit> ,  <dig> had no blastx result and so no orf in either alignfs, genewise or alignwise. alignfs made a fsc in  <dig>  of these sequences , a further  <dig>  used the top blastx hit as the alignment quality was not high enough to make a frame-shift correction. genewise, which made more fscs, altered  <dig>  of the  <dig>  transcripts. in the absence of a known reference it is impossible to determine which of these fscs are accurate. however genewise made more fscs than alignfs in our analysis of human cdnas . in this analysis with a known reference we show the proportion of perfectly corrected fscs is higher for alignfs than genewise  with genewise making erroneous fscs . it follows that the large proportion of genewise fscs made in the newt transcriptome, for which alignfs is not making a fsc , may be incorrect. indeed, for those sequences where genewise makes a fsc, alignwise typically selects the alignfs protein without a fsc . thus the final sequences selected by alignwise maximize the percent identity to the reference protein demonstrating the ability of alignwise to exploit the best performance of genewise and alignfs .table  <dig> analysing the newt transcriptome

fig.  <dig> comparing fscs made by alignfs, genewise and alignwise in human cdnas and newt transcripts. a, b and c) show results from the human cdnas, using the refseq database, as shown in table  <dig> and fig.  <dig>  d, e and f show results from the newt transcripts. a venn diagram of the number of fscs made by alignfs and genewise. b the number of perfect fscs made by alignfs and genewise. c venn diagram of the number of incorrect fscs made by alignfs and genewise. d venn diagram of the number of fscs made by alignfs and genewise intersecting with the putative frame-shifts identified previously  <cit> . e illustrates the decisions made by alignwise for each of the  <dig>  sequences that genewise made fscs in. identical : genewise and alignfs make identical fscs, genewise : the genewise fsc is selected, alignfs: the alignfs fsc is selected, alignfs: the uncorrected alignfs sequence is used.f for the proteins in , the percent identity against the original top blastx hit is compared for alignfs and genewise. colours as in 



furthermore,  <dig> of the newt frame-shifts identified by mass-spec are thought to contain multiple frame-shifts  <cit> . of these, alignwise selects  <dig> of the alignfs sequences,  <dig> of which contain multiple fscs. alignwise selects  <dig> genewise sequences,  <dig> of which contain multiple fscs. a further  <dig> sequences were identical in both alignfs and genewise,  <dig> of which featured multiple corrections. thus, alignfs and genewise are individually capable of identifying multiple frame-shifts within a single transcript. however, alignwise continues to select a larger proportion of alignfs than genewise proteins. along with our previous analyses, this demonstrates that alignwise is capable of identifying and correcting frame-shifts within real de-novo assembled transcriptomes.

CONCLUSIONS
alignfs is a conservative frame-shift correction algorithm designed for large-scale phylogenetic analysis where high accuracy is preferable over a full length orf. by combining this algorithm with genewise, alignwise is capable of producing accurate orfs with low false positives across a wide range of evolutionary distances . increasing compute power and providing larger databases further improves the run time and accuracy of alignwise. in our tests, alignwise out-performs estscan at identifying biologically relevant protein-coding sequences and accurately correcting frame-shifts. furthermore the alignfs algorithm is accurate at short distances, and is able to improve genewise orfs using more distant homology. alignwise thus exploits the best performance of alignfs and genewise to generate orf nucleotide sequences corrected for potential frame-shifts from assembled transcripts, irrespective of their origin, and ests.table  <dig> a summary of orf finding programs


awe have indicated that macse was unable to find orfs as it was unable to complete any analysis within a reasonable time frame



availability and requirements
project name: alignwise

project home page:www.github.com/looselab/alignwise

operating systems: unix and linux

programming language: perl

other requirements: bioperl, blast+, muscle

license: freebsd

any restrictions to use by non-academics: none

abbreviations
orfopen reading frame

fscframe-shift correction

competing interests

the authors declare that they have no competing interests.

authors’ contributions

te designed and wrote alignfs and alignwise and also drafted the manuscript. ml conceived the idea and helped draft and edit the manuscript. all authors have read and approved the final version of the manuscript.

