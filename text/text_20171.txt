BACKGROUND
the complex gene expression programs in living cells are moderated by regulatory proteins called transcription factors   <cit> . in the context of a transcriptional regulatory network , a tf may act independently or collaboratively with other tfs  <cit> , leading to complex regulatory interactions that influence the transcription of target genes  <cit> . a regulatory interaction includes target genes and all the tfs that control their transcriptional activities. an individual-tf regulatory interaction has been defined in terms of two properties: the tf's functional role as an activator or a repressor, and its logical role as being necessary or sufficient   <cit> . the categories in the tf's functional and logical roles are combinable; they can be activator necessary , activator sufficient , or activator necessary and sufficient . for example, pheromone response elements are necessary and sufficient for basal and pheromone-induced transcription of the fus <dig> gene of yeast  <cit> . similarly for tfs that are repressors, they can be rn, rs or rns  <cit> . in a multiple-tf regulatory interaction, a group of tfs collaborate to control the expression levels of the same target genes. the directions of all the tfs in the group, therefore, form a transcriptional regulation pattern of the target genes. recent developments in biotechnology  have been applied to uncover tf-target binding relationships  <cit>  to reconstruct draft regulatory circuits at a systems level  <cit> . furthermore, to identify regulatory interactions in vivo and consequently reveal their functions, tf single/double knockouts and over-expression experiments have been systematically carried out  <cit> . however, the results of many single or double-knockout  experiments are often non-conclusive  <cit> , since many genes are regulated by multiple tfs with complementary functions  <cit> . for example, in yeast , 47% of genes are bound by at least two tfs  <cit> , and approximately 73%  of the known genes are non-essential  <cit> , suggesting that higher order genetic variations are needed for precise inference of transcriptional regulations.

considering the prohibitive costs and the tremendous number of possible combinations of higher-order gene knockouts, it is currently impossible for researchers to examine all of possible gene knockout combinations experimentally. one solution to this problem is to select only the tf groups that are most likely to bring about the phenotypic change. in order to accomplish this, we need to understand the interactions employed by multiple tfs  to regulate their common target genes. however, this is a difficult task, because when multiple tfs simultaneously or sequentially control their target genes, a single gene responds to merged inputs, resulting in complex gene expression patterns  <cit> . the exhaustive approach requires enumerating all tf combinations, which, given the high complexity of combinatorial, is simply impractical at the whole genome level.

in our previous research  <cit> , a hidden markov model was developed to relate gene expression patterns to regulatory interactions, in order to solve a relatively simpler sub-problem that considers only two tfs. to predict regulatory interactions for all possible collaborative tfs, we propose an algorithm called "mtrim"  in this paper. by uncovering the regulatory interactions in terms of their directions  and corresponding logical roles  from gene expression and tf-dna binding data, mtrim identifies tf groups that are collaboratively responsible for target gene expressions. such inferences may provide high-quality candidate sets for further experimentally detecting the collaborative functions of gene regulations that are largely unknown  <cit> . yeang and jaakkola  <cit>  attempted to characterize the combinatorial regulation of multiple-tf regulatory interactions using a heuristic approach to measure how well a regulatory module fits the associated binding and gene expression data with a log-likelihood function. the regulatory module's likelihood is maximized with a greedy approach by incrementally adding genes to the module and monitoring the predictions of the regulatory interactions for optimality. however, this incremental approach does not study the functions of the tfs simultaneously because of the scalability issue introduced by the greedy search. this method also uses a probability-based approach to calculate the significance of the combinatorial property of tfs, determined by the gap of likelihood scores between their model and a model built on randomized data in the entire time frame. however, as stated in  <cit> , a tf usually functions at specific "activation time points" instead of throughout the entire time course, meaning that the identification of regulatory interaction modules should be focused on activation time-points rather than the entire time frame.

to derive dynamic regulatory networks that associate tfs with target genes at their activation time-points, an algorithm called drem was proposed  <cit> . drem integrates time-series gene expression data and protein-dna binding data to build a global temporal map, in order to uncover transcriptional regulatory events leading to the observed temporal expression patterns and the underlying factors that control these events during a cell's response to stimuli. the method mainly works by identifying bifurcation time-points where the expression of a subset of genes diverges from the rest of the genes. the bifurcation points are then annotated with the tfs regulating these transitions, which result in a unified temporal map. the method can therefore facilitate the determination of the time when tfs are exerting their influence, and assigns genes to paths in the map based on their expression profiles and the tfs that control them. unlike the method by yeang and jaakkola  <cit> , drem's ability to derive dynamic maps that associate tfs with the genes they regulate and their activation time-points has indeed led to better insights for the regulatory module being studied. however, drem does not infer the logical roles of the tfs . such knowledge is extremely useful for designing high-order genetic variation experiments to understand the complex regulatory mechanisms of biological processes.

trim is an hmm based model which was developed to infer the collaboration of at most two tfs that regulate the same target genes. in the hmm, the functions of a tf are hidden states. the model starts with random priors, and then is iteratively trained using em till convergence. since each possible function of a tf is a node in the hmm, there are four nodes  for each tf. with the design of hmm , the number of tfs trim can handle is limited.

the enumeration of all tf combinations is clearly a np problem. therefore, we focused on the most important biological problem  and therefore "hardcoded the problem in trim. in this paper, we solve the efficiency problem by developing an association rule mining algorithm which is capable to handle a large amount of data with high-level combinations.

in this paper, we propose a new model mtrim for inferring regulatory interactions for multiple tfs with an em-based bayesian inference approach  <cit>  and a modified bottom-up association rule mining method. experimental results evaluated with yeast genetic interactions, tf knockouts and a synthetic dataset shows that our algorithm is significantly better than the existing ones.

methods
mtrim is developed to efficiently infer regulatory interactions for all possible collaborative tfs in a trn. the feasibility is achieved in two steps. first, an em-based bayesian inference approach is developed to identify all the significant individual tf regulatory interactions, meaning that individual tfs that can regulate the target genes independent to the existence of other tfs. for the tfs which require collaborations with other tfs to drive the target genes, or are actually non-deterministic , their p-values are insignificant. they are considered as the inputs of the second step.

second, in order to identify the collaboration of k tfs , i.e., k-tf regulatory interaction, a bottom-up association rule mining approach is developed. while the significant tf groups are reported to the users, the insignificant ones are joined with each other to mine -tf regulatory interactions. it should be noted that unlike the conventional association rule mining which seeks the longest possible patterns, mtrim outputs the shortest significant results, in that the goal of mtrim is to discover the smallest group of tfs that can regulate the target genes, so that biological experiments with high-order genetic variations can be subsequently carried out for the understanding of the behavior of trns. in terms of time complexity, consider a candidate k-tf regulatory interaction i=<htf <dig> ...,htfk>⇒hg. the algorithm computes afnscore and p-values of all of the subsets, i - {tfj} . if one of them is significant, i is immediately pruned. hence the time complexity is o for each candidate k-tfs regulatory interaction. every merging operation requires at most k -  <dig> equality comparisons. in the best-case scenario, it produces a viable candidate k-tf interaction. in the worst case, the algorithm merges every pair of infrequent -tf candidates. therefore, the overall cost of merging candidates is between ∑k=2|tf||pk|and ∑k=2|tf||pk-1| <dig>  where pk is the candidate set of k-tf regulatory interactions. to improve the algorithm efficiency, a hash tree is constructed for the storage and quick access to all of the candidates. because the maximum depth of the hash tree is k, the cost for populating the hash tree of candidates is o. during candidate pruning, it is required to verify whether the k -  <dig> subsets of every candidate k-tf regulatory interactions are significant. since the cost for looking up an item in a hash tree is o, the time complex of candidate pruning step is o|pk|).

concepts
a trn can be represented as a directed graph in which each node is a tf or a gene, and each edge pointing from a tf to a gene represents a regulation relationship between them. in many organisms, in-depth transcriptome analysis has revealed the modular architecture of gene expression  <cit> . a regulatory module is a self-consistent regulatory unit r representing a set of co-expressed genes g = {g <dig>  g <dig>  ..., gn} regulated in concert by a group of tfs in tf = {tf <dig>  tf <dig>  ..., tfm} that govern the target genes' behaviors via regulatory interaction i  <cit> . an example of the regulatory module is shown in figure 1b.

a regulatory interaction i=<htf <dig> …,htfi,…,htfm>⇒hg  is defined as a set of tfs {tf <dig>  ..., tfm} co-regulating a set of genes {g <dig>  ..., gn}, where htfi is the behavior of tf i; hg is the behavior of all the target genes in r, and hx ∈ {↑, ↓, -}, meaning up-express, down-express and no change respectively. for example, if tf <dig> ↑ and tf <dig> ↓ always cause the target genes g <dig> and g <dig> to be up-regulated, the regulatory interaction is <tf <dig> ↑, tf <dig> ↓> ⇒ g ↑. for individual regulatory interactions, i ∈ {an, as, rn, rs, ans, rns}. in this work, we assume that a regulatory interaction is consistent in the context of transcriptional control as long as the experimental conditions are unchanged. note that binaries gene expression values are used in mtrim, since tf activity is not always proportional to its mrna abundance  <cit> .

mtrim step  <dig>  inferring individual regulatory interactions
to solve a relatively easier problem of inferring the regulatory interactions for each individual tf and to prepare input for multi-tf regulatory interaction inference, an em-based bayesian inference algorithm has been developed  <cit> .

to define the probabilities in eq.  <dig> and eq.  <dig>  we followed the definitions in  <cit> . eq  <dig> represents the prior probability of the interaction model im, and eq  <dig> represents the probability of gene expression correlation between tfs and targets given the interaction model im. in the bayesian model, the training dataset is a matrix that contains gene expression levels of tfs and their targets, from which Γ is estimated using eq  <dig>  and then, the likelihood is calculated using eq  <dig>  the prior probabilities are randomly assigned initially. in each iteration, the posterior probabilities and the frequency of im are updated. the iteration will continue till the posterior probabilities converge.

let pos be the posterior probability of a tf tfm to have a specific regulatory interaction im in regulatory module rk, where im ∈ {an, as, rn, rs} . to infer pos, both the prior probabilities pri and the likelihood lk of the same tf need to be computed, given that:

  pos=pri×lk 

where pri is the prior probability of regulatory interaction im  and the likelihood lk is defined in eq  <dig> 

the prior probability pri captures how likely a given interaction im exists given the background of all of the other tfs:

  pri=fre|r|×|tf| 

where fre is the frequency of regulatory interaction im in all of the regulatory modules, |r| is the number of the regulatory modules, |tf| is the number of tfs, and im ∈ {as, rs, an, rn}.

given the definition of a regulatory interaction, the likelihood lk indicates how likely tfm in rk has regulatory interaction im, which is defined by the expression level changes of the tf and its targets:

  lk=∑t=1t-1∑n=1|g|Γ∑r=1|r|∑m=1|tf|∑t=1t-1∑n=1|g|Γ 

where t is the number of time-points in the training data, |g| is the number of genes in regulatory module rk, and Γ is defined as:

  Γ=1ifim=asand,orifim=rsand,orifim=anand,orifim=rnand0otherwise 

an expectation-maximization  algorithm is adopted to maximize the posterior probabilities pos. the em model is initialized with each tf assigned a random regulatory interaction. in the expectation step, we compute the likelihood of each tf to be a specific interaction using eq  <dig>  consequently, the posterior probabilities of interactions for every tf is updated with eq  <dig>  as a result, each tf is assigned with the regulatory interaction with the highest posterior probability. in the maximization step, we maximize the scoring function s= ∑m=1|tf|∑n=1|g|Γ for each regulatory module rk, which measures how the interaction of each tf in rk matches the target gene expression changes. note that in the iteration the priors are updated but the likelihoods are constant.

finally, in order to determine whether im is "necessary and sufficient"  or "no decision", the following strategy is adopted: if none of the posterior probabilities are significant, the output is "no decision"; if the probabilities of both n and s states are significant, and there is no significant difference between them, the output is ans or rns depending on the target gene expression direction; otherwise the output is the regulatory interaction with the highest posterior probability.

an illustrative example is shown in figure 1b, in which tf <dig>  tf <dig> and tf <dig> regulate target genes g <dig> and g <dig>  and they all belong to the same regulatory module rk. with the gene expression changes in table  <dig>  we start with equal prior probabilities, i.e., pri = pri = pri = pri =  <dig> , so lk = 12/ <dig> =  <dig> , . after  <dig> iterations, in the expectation step, pri is updated to  <dig>  , hence pos =  <dig>  ×  <dig>  =  <dig>  . in the maximization step, we have <tf <dig> ↓> =>g ↓, because the maximum posterior probability is assigned to an with p-value  <dig>  .

t
0
t
1
t
2
t
3
t
4
t
5
t
6
t
7
t
8
t
9
t
10
t
11
afnscore
mtrim step  <dig>  mining multiple-tf regulatory interactions
besides the individual tf regulatory interactions, a significant portion of tfs collaboratively work together to regulate the same target genes. in order to identify these multiple-tf regulatory interactions, a new association rule mining approach has been developed. instead of using the concepts of support and confidence that are commonly used in a conventional association rule mining application  <cit> , we define an affinity scoring function  according to the gene expression agreement between the tf groups and their target genes, to meet the biological meaning of a multiple-tf regulatory interaction . mathematically, afnscore of each candidate regulatory interaction i=<htf <dig> htf <dig> …,htfm>⇒hg is calculated with:

  afnscore=p*pp 

where p is the number of times that x appears in the given time series gene expression dataset divided by the product of the total number of time points and the total number of target genes. the p-value of each candidate regulatory interaction is computed by considering the distribution of afnscore for the regulatory interactions with the same number of tfs. only the candidate interactions with p-values smaller than  <dig>  are reported to the user. specifically, if all the tfs in i are up-regulated, the tfs are "sufficient"; if they are all down-regulated, the tfs are "necessary"; otherwise, each tf acts differently to drive the target genes to the same direction.

to identify all the significant k-tf regulatory interactions, the new association rule mining algorithm starts with an empty set qk and all the insignificant -tf interactions saved in pk- <dig> . for interactions i1=<htf <dig> …,htfk-1>⇒hg and i2=<htf1′,…,htfk-1′>⇒hg′in pk- <dig>  we combine them and compose a new interaction i <dig> , if i <dig> and i <dig> are combinable. we define that i <dig> and i <dig> are combinable if and only if they satisfy the conditions that hg=hg′,htfi=htfi′  and htfk-1≠htfk-1′. if none of the -tf subsets of i <dig> is significant , i <dig> is added to candidate set c and its afnscore is computed. finally, we compute p-values for all of the k-tf candidates in c using t-test, report all of the significant regulatory interactions to the user, and save all the insignificant ones pk to for the identification of the -tf regulatory interactions .

for an illustrative example, there are  <dig> possible multiple-tf regulatory interactions in the regulatory module shown in figure 1b. using the time-series gene expression data in table  <dig> all the 2-tf regulatory interaction candidates are screened and their p-values are computed . since none of the 2-tf regulatory interaction candidates is significant, a 3-tf interaction i <dig> =<tf <dig> ↑, tf <dig> ↑, tf <dig> ↓>=>g ↑ is generated by merging i <dig> and i <dig>  the afnscore of i <dig> is  * )/) =  <dig>  and its p-value is  <dig>  . based on i <dig> and i <dig>  we conclude that the target genes g <dig> and g <dig> are induced by the up-expression of tf <dig> and tf <dig> and the down-expression of tf <dig>  and the same target genes are repressed by the down-expression of tf <dig> 

experimental 
RESULTS
mtrim was applied on two independently-constructed yeast transcriptional regulatory networks  to identify regulatory interactions. for performance comparison, drem v <dig>   <cit>  and trim  <cit>  were both applied on the same datasets. we did not compare mtrim with yeang's method  <cit>  because the latter's objective is to build a reliable trn instead of predicting regulatory interactions. we evaluated these methods systematically with three independent sources: single tf knockouts  <cit>  for individual regulatory interactions, genetic interactions   <cit>  for 2-tf regulatory interactions and synthetic data for high-order regulatory interactions.

using the em-based bayesian inference approach,  <dig> significant individual regulatory interactions were mined in the harbison dataset and  <dig> significant ones were mined in the reimand dataset . the results show that while many individual tfs drive target genes' behaviors, it is clear that most of them  are "no decision". it indicates that a large proportion of tfs need to work collaboratively with other tfs.

multiple-tf regulatory interactions were inferred with a new association mining algorithm. in total,  <dig> regulatory interactions with multiple tfs were discovered . the results show that at most  <dig> tfs collaboratively regulate the same target genes. all the tf combinations with more than  <dig> tfs are either insignificant or have a significant subset. the whole experiments finished in  <dig> minutes on a high performance computer cluster.

data preparation
yeast chlp-chip binding data  <cit>  was downloaded from http://younglab.wi.mit.edu/regulatory_code, and a p-value cutoff of  <dig>  was applied  to obtain the harbison dataset. it contains  <dig> tfs,  <dig>  target genes and  <dig>  tf-dna bindings. next we applied the same statistical approach as in  <cit>  to filter the union of the yeast chlp-chip binding data  <cit>  and the binding-site predictions  <cit>  to generate the reimand dataset with  <dig>  tf-dna binding relationships between  <dig> tfs and  <dig>  target genes. to obtain the regulatory modules in the trns, all the target genes were clustered based on their gene expression values with cluster  <dig>  , which uses pearson correlation coefficient for gene similarity metric  <cit> , resulting in  <dig> clusters. the clusters are then evaluated with gene ontology enrichment analysis using bingo  <cit> , and unenriched clusters are discarded. to construct regulatory modules from the clustering results, the target genes that are regulated by the same tfs were partitioned if they are not in the same cluster. finally,  <dig>  and  <dig>  regulatory modules were obtained in the harbison and reimand networks respectively. the distribution of genes and regulatory modules  reveal that many genes are bound by multiple tfs.

to identify the individual and collaborative regulatory interactions in the above datasets, three widely used time-series microarray datasets  from yeast cell cycle studies were collected  <cit>  as training data. these datasets contain  <dig> time points in total. in these experiments, yeast cells were first synchronized to the same cell cycle stage, released from synchronization, and then the total rna samples were taken at even intervals for a period of time . in order to decide whether a gene is significantly up or down regulated, a gene expression change cutoff of  <dig>  was applied .

to evaluate the individual regulatory relations, single-tf knockout microarray data were collected  <cit> , and a p-value cut-off of  <dig>   was applied to determine whether a gene is significantly affected by a tf knockout. to evaluate the 2-tf regulatory interactions, we downloaded the sga genetic interaction dataset  <cit> , which is composed of  <dig>  queries crossed to  <dig>  array strains. of the  <dig>  queries,  <dig>  are deletion mutants of non-essential genes and  <dig> are essential gene alleles. the sga dataset contains  <dig>  genetic interactions. two genes are genetically interacted if mutations in both of them produce a phenotype that is significantly different to each mutation's individual effects. in a 2-tf regulatory interaction, if tfs collaboratively regulate the same target genes, the down-regulation of both tfs should have a significantly different phenotype as the down regulation of each individual tf. therefore, such tf pairs should have a significant p-value in the gi dataset. to evaluate the high-order multiple-tf regulatory interactions, a synthetic binding network were built, which contains  <dig> tfs,  <dig> target genes and  <dig> regulation/binding relationships. the network also contains two feed forward loops. corresponding time-series gene expression data containing  <dig> time-points were randomly generated with 10% or 40% noise rate.

evaluation  <dig>  single tf knock-outs
we used the single tf knockout microarray data to evaluate the performance of mtrim on individual tf regulatory interaction predictions in terms of the identification of "necessary" tfs . for the harbison dataset, the prediction precision of mtrim is  <dig> %, higher than the results of trim . using the reimand dataset, mtrim has a precision of  <dig> %, significantly higher than the results of trim . drem is not compared since it does not predict "necessary" tfs.

evaluation  <dig>  genetic interaction
in a regulatory module with two tfs, if both tfs collaborate to regulate the same target genes, the down- regulation of both tfs should have significantly different phenotypes from the down-regulation of each individual tf. therefore, such tf pairs should have a significant p-value in the gi dataset. to this end, for the pairs of tfs that are predicted by mtrim to work collaboratively, we adopted the gi dataset  <cit>  for evaluation. figure  <dig>  and  <dig>  shows the receiver operating characteristic curve  of mtrim, trim and drem on harbison dataset and reimand dataset respectively. for harbison dataset, the area under curve  of mtrim is  <dig> , much higher than the auc of drem  and trim . for reimand dataset, the auc of mtrim is  <dig> , higher than drem  and trim . in addition, to explore whether the performance of mtrim is sensitive to parameter settings, we altered its parameters systematically. for the harbison dataset, figure s <dig> in additional file  <dig> shows the auc values with different gene expression cutoffs, gi cutoffs, and p-value cutoffs of afnscore respectively. similarly, for reimand dataset, figure s <dig> in additional file  <dig> shows the varying of the auc values using different thresholds. these show that our method is robust with the gi cutoff and p-value cutoff of afnscore, although its performance gradually decreases with the increase of gene expression cutoffs.

evaluation  <dig>  synthetic transcriptional regulatory networks
a synthetic transcriptional regulatory network was generated to evaluate the performance of mtrim in detecting high-order multiple-tf regulatory interactions . the synthetic network has  <dig> nodes  and  <dig> edges, in which the solid line represents a real transcriptional regulation and  <dig>  dotted lines represent tf-dna bindings but no regulation. the dotted lines were added to the network in order to test the precision of mtrim. for the synthetic network, two time series gene expression datasets with  <dig> time-points were generated. in order to test the robustness of mtrim, we repeated the simulation test twice with different rates of noises added to the simulated gene expression data sets.

a comparison between all the three algorithms  indicates that the performance of mtrim is constantly the best on precision, specificity and sensitivity . precisely, the precision of mtrim is  <dig> %, while the precisions of drem and trim are  <dig> % and  <dig> % respectively. the recall of mtrim is significantly higher than trim because it identified  <dig> out of  <dig> regulatory interactions with more than two tfs, while trim, because of the scalability issue, cannot find any regulatory interactions with more than two tfs. it also shows that mtrim is less sensitive to the change of the noise rates from 10% to 40% in the gene expression data than the other two algorithms.

case studies
in figure 6a, a 2-tf regulatory interaction that controls  <dig> target genes were found in the harbison dataset. the yellow colored nodes are tfs and the green colored nodes are their target genes. the red boxes of the dotted lines represent the time points when the tfs collaborate with each other to regulate the target genes. ste <dig>  activates genes involved in mating or pseudohyphal/invasive growth pathways. dig <dig> is the map kinase-responsive inhibitor of ste <dig>  the target genes are enriched in "response to pheromone" , "growth"  and so on. the collaboration between ste <dig> and dig <dig> on cell growth was captured by mtrim successfully. another interesting result found in the same dataset is a 6-tf regulatory interaction . all the six tfs are well-characterized in yeast but are considered to function in different pathways. our finding connects the distinct biological processes, revealing potential tf collaborations at the transcription level.

CONCLUSIONS
revealing the mechanisms of the transcriptional regulatory programs in trns is essential for understanding the complex control by which genes are expressed in living cells. the inference of collaborative protein-dna functions helps paving the critical path for new drug development. in this work, we identify the regulatory interactions between tfs and target genes with mtrim, an integration of an em-based bayesian inference and a new association rule mining approach built on a set of basic constraints that relate gene expression patterns to regulatory interactions. mtrim is not limited by the number of tfs. the experimental results show that mtrim is clearly better than the existing algorithms. since it is difficult to obtain the ground truth for algorithm performance evaluation on real data, we generated two sets of synthetic data and used them to validate the results of our algorithm. in our future work, we will use third-party biological evidences including multiple tf knockouts, metabolic pathways, protein-protein interactions, etc., for biological validation. in our future work, we would like to extend this work by including extra data in addition to wild-type gene expression datasets. for example, since mirna can degrade the genes induced by certain tfs  <cit> , we will consider mirna-target bindings and mirna expressions, aiming to understand how mirnas and tfs collaborate to regulate target gene expressions.

competing interests
the authors declare that they have no competing interests.

authors' contributions
jc conceived the project. sa and jc designed the algorithm and experiments. sa implemented the algorithm and finished the experiments.

supplementary material
additional file 1
supplementary materials for awad et al. figures si, s <dig>  table si, and s <dig>  this file contains figures si, s <dig>  tables si and s <dig> 

click here for file

 acknowledgements
this project has been funded by the egyptian government gm  <dig> 

declarations
the publication costs for this article were funded by the corresponding author's institution.

this article has been published as part of bmc systems biology volume  <dig> supplement  <dig>  2014: selected articles from the twelfth asia pacific bioinformatics conference : systems biology. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcsystbiol/supplements/8/s <dig> 
