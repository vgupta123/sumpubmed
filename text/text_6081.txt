BACKGROUND
variable selection in high-dimensional clustering analysis has drawn attention recently in a variety of fields, including statistics, machine learning, pattern recognition and bioinformatics. generally, variable selection algorithms can be categorized as either wrappers or filters. in the context of clustering, the wrapper approach searches for variables best suited to a specific clustering algorithm aiming to improve the clustering performance
 <cit> . the wrapper approach has been shown to be effective on low dimensional data. however, one problem for these methods, when applied to large data sets, is the increase in computational complexity as the search space exponentially increases over the number of variables. furthermore, the wrapper method lacks robustness and is biased towards the clustering algorithm used
 <cit> . in contrast, the filter approach is more efficient in dealing with these drawbacks. filter-based algorithms do not involve clustering algorithms for the evaluation of variable subsets. rather, the variables are evaluated according to certain criteria . the filter approach is considered faster and more efficient than the wrapper method in high-dimensional data analysis.

dna microarray datasets are examples of high-dimensional data characterized by low sample sizes and high dimensionality of variables. clustering microarray data can be very useful for biological and medical studies. for example, based on the gene expression profiles, interesting cluster distinctions can be found among groups of samples, which may correspond to particular phenotypes, such as different types of cancer
 <cit> . in addition to the sample clustering, selecting the informative genes that best define the clusters of samples is also important. therefore, many variable selection approaches have been proposed for the clustering analysis of microarray data, including the nonparametric density-based methods
 <cit>  and the parametric mixture model-based approaches
 <cit> . in this context, pan and shen
 <cit>  employed an extra l- <dig> penalty term of mean vectors in the likelihood function to simultaneously perform variable selection and maximize the penalized likelihood
 <cit> . recently, a new sparse clustering method achieved variable selection by optimizing a weighted within cluster sum of squares , subject to constraints on the weights, in the framework of k-means clustering
 <cit> . however, the results from these methods are limited and might not be able to capture the sheer complexity of gene regulation processes. while all these methods tend to identify the informative genes that contribute most to a single sample clustering solution, this clustering solution may not capture the meaningful sample partition corresponding to some phenotypes of interest. as gene expression can be influenced by many factors, such as cell type, cell differentiation, microenvironment, and external perturbation, the microarray dataset is the result of all these factors mixed together. the same set of samples can undergo different partitions according to different subsets of variables. therefore, a good variable selection algorithm should select informative features that best preserve all the possible clustering structures in the data.

in this study, we propose a novel network-based method to achieve variable selection for microarray clustering analysis. network analysis plays an increasingly important role in the exploration of information communication and has been used to study the information on the relationship between genes or proteins
 <cit> . here, we construct a gene co-expression network, in which nodes and edges represent genes and their expression similarity, respectively. our proposed method is based on the assumption that each gene may induce a specific partition of the sample space in the absence of a priori information about the variable space. therefore, given the thousands of genes in the microarray dataset, there might be thousands of distinct sample clustering solutions on the same set of samples. in this context, the imminent task is to combine these multiple partitions into a single consensus clustering, which should share as much information as possible with the given pool of sample partitions. this notion of integrating multiple clustering solutions is in line with the framework of cluster ensembles
 <cit> , which tend to reuse the existing knowledge and minimize the information loss incurred in the process of cluster assembling. based on the premise that higher correlated gene expression profiles tend to produce more similar partition structures, we propose to assemble genes according to their expression similarity rather than their sample partitions. the objective of our work is two-fold based on the level of gene organization: first, to select a list of individual genes that shares the most amount of similarity with other genes, so that the final sample partition based on this gene list is a high-quality combination with the most consensus information among the partitions inferred by each individual gene. intuitively, a good informative gene will have a large number of directly connected genes in the co-expression network, such that it has a strong ability of representing others. therefore, we propose to assess genes on their connectivity in the co-expression network and to select the genes with top connectivity. the second objective of our study is to identify co-regulated subsets of genes, known as modules, which may represent different biological processes or pathways. the genes in each module are expected to be highly correlated and exhibit a coherent expression profile across samples, while others exist as background noise. here the gene connectivity is used to further evaluate the gene topological similarity. the genes with high topological similarity with each other are identified as a gene module and should lead to a biologically meaningful sample partition. with simulation and real data analysis, we show that the gene connectivity, which measures the importance of the genes in term of their expression similarity with others in the co-expression network, is an appropriate criterion to select informative genes for sample clustering.

methods
gene co-expression network analysis
to define a measure of similarity sij between the expression profiles of genes i and j, we use the absolute value of the pearson correlation sij = abs), where xi and xj represent the gene expression profiles for genes i and j, respectively. therefore the similarity matrix can be denoted by s = [s
ij
], where the values of s
ij
 lie between  <dig> and  <dig>  however, since microarray gene expression data are typically quite noisy, directly employing the similarity matrix for gene co-expression network analysis may not be appropriate. we find it useful to employ the following transformations that map a similarity matrix into an adjacency matrix. the first transformation is the signum function which implements hard thresholding. specifically,

  aij=signumsij,τ=1ifsij≥τ0ifsij<τ 

here aij is an element of the adjacency matrix and sij is an element of the similarity matrix. in hard thresholding, the value of the parameter τ determines the number of genes and edges included in the resulting unweighted network. typically, an arbitrary value of τ is chosen to exclude spurious edges, but this may lead to a loss of information. to address this issue in hard thresholding, a “soft” power transformation function has been proposed
 <cit> :

  aij=sijβ 

with a single parameter β, where β > = <dig>  soft thresholding results in a completely connected network with each edge being assigned a weight.

gene connectivity and variable selection
with the n × n symmetric adjacency matrix, the connectivity  k
i
 of gene i is define by

  ki=∑j≠iaij 

for the hard thresholding transformation, the connectivity of gene i simply equals to the number of genes that it is directly connected to in the unweighted network. for the soft thresholding transformation, the connectivity of gene i equals the sum of weights between gene i and all other genes in the weighted network. to select the relevant genes for microarray clustering analysis, we first rank the genes according to their connectivity. for the hard thresholding transformation, the genes with connectivity of  <dig> are removed from the original network. therefore, the gene connectivity ranking is only applicable on the set of genes included in the resulting unweighted network, which is of a reduced size depending on the value of the threshold τ. in the weighted network, the ranking can be obtained for all the genes. finally, the genes with low ranks are filtered out, while the genes with top ranks are considered to have high degree of connectivity and are selected for clustering analysis.

module identification
our module identification method is based on the node similarity measure of their relative interconnectedness coupled with the hierarchical clustering method. instead of using the gene correlation coefficients directly as the similarity measure, we calculate the jaccard similarity coefficient j
ij
 based on the gene connectivity in the transformed network.

  jij=hijki+kj-hij 

where h
ij
  =   ∑ 
u
a
iu
a
uj
, which equals the number of genes to which both i and j are connected in the case of hard thresholding, and the total interconnectedness of genes i and j in the soft thresholding transformation. and k
i
  =   ∑ 
u
a
iu
 is the node connectivity as defined in equation . therefore, the similarity measure will be affected by the selection of the transformation parameters. in our implementation, we adjust the hard thresholding parameter τ or the power function parameter β to explore their effects on the results of module identification. once the topological similarity measure matrix is obtained, we re-order it by hierarchical clustering of each row and column to put similar genes in an adjacency zone
 <cit> . since the similarity measure matrix is symmetric, these highly similar genes would form “hot” blocks along the diagonal and can be identified as a module by visual inspection. the genes in the resulting modules are expected to be highly co-expressed.

evaluate the performance of variable selection
the performance of our method for variable selection is evaluated by the f-score, where f = 2*precision*recall/. the precision is the proportion of selected variables that are truly relevant, and the recall is the proportion of truly relevant variables that are selected by our method, also known as the true positive rate. the f-score ranges between  <dig> and  <dig>  and can be interpreted as a weighted average of the precision and recall.

based on the selected genes, we cluster samples using the k-means algorithm with  <dig> iterations. the sample clustering performance is evaluated by the classification error rate . the derived sample clustering  is compared to the true clustering  to assess the performance. the cer is defined as

  cerp <dig> p2=∑i>i'1p1i==p1i'-1p2i==p2i'n <dig> 

where n is the sample size. note that smaller cer values reflect more accurate clustering results. a cer of zero indicates that the clustering results p <dig> and p <dig> agree perfectly.

simulation data setting
we used a simulation setting similar to that in witten and tibshirani
 <cit> . a simulated dataset contains  <dig> samples from three classes c <dig>  c <dig> and c <dig>  and each sample x
i
 is a d - dimensional vector that follows n and is independent of other samples. thus, the clustering structure is determined by the specification of μi’s that are defined as

  μij=μ1i∈c1‒1i∈c\1ifj≤10μ1i∈c\1‒1i∈c1if10<j≤20μ1i∈c2‒1i∈c\2if20<j≤30μ1i∈c\2‒1i∈c20if30<j≤40otherwise 

where μ is a positive constant and set to  <dig> in the experiment. this configuration of μ sets the first  <dig> genes as informative genes and the other genes as noise. we take ∑ 
d
  =  diag  where fc σ <dig>  …, σ
d
 are set such that the population variance of each variable is one. in the simulation, the first  <dig> genes together can be considered as a module since their expression profiles are highly correlated and this module differentiates samples in class c <dig> from the others. whereas the next  <dig> genes form another module that differentiates samples in class c <dig> from others. therefore, these two sets of genes exhibit different sample partitions.

RESULTS
variable selection performance with simulation dataset
we describe herein the performance of our method with two network inference methods on a simulated dataset. in the hard thresholding transformation, we considered the effects of two parameters on the performance of variable selection: the hard threshold τ that determines the number of genes and edges included in the unweighted co-expression network, and the percentage of genes to be selected based on their connectivity in the resulted network, determined by equation . with a greater value of τ, the resulting network will have a smaller number of genes and edges, but the connection strength  between paired genes will be higher. we reported the average f-scores and cer values based on  <dig> simulated datasets for two different dimensionalities .

it is not surprising to observe that selecting all of the  <dig> genes in the dataset can only lead to a low f-score  and a high cer , as shown in figure 
1a and b, simply because too many noninformative genes were included without the variable selection step. when we varied the threshold τ to generate a network with reduced size but kept all the genes in the resulting network regardless of their connectivity , the performance evaluated by the f-score was improved but still poor, regardless of how many genes were in the resulting network. however, both the f-scores and cer were shown to improve further with an additional step of gene filtering by the gene connectivity rank. generally, the more stringent the gene connectivity rank filtering, the lower the number of genes selected. to compare the performance of different gene connectivity ranks with the same number of genes selected, we had to decrease the threshold τ to achieve a large network size when the gene connectivity rank was more stringent. as shown in the figure 
1a and b, the gene filtering with the top  <dig> percentile connectivity resulted in the highest f value and the lowest cer when  <dig> genes were selected. however, this was not always the case. when  <dig> genes were included, the top 40% percentile rank achieved best performance among all these filtering scales. this indicates that the performance of variable selection is affected by both the connection strength and the connectivity of the selected genes. we observed similar results in both simulated datasets with different dimensionalities .

as shown in above analysis, the network variable selection based on hard-thresholding transformation was influenced by both the network size and the gene connectivity filtering. it may be challenging to optimize both of these two factors in real data analysis. to resolve this problem, we used a soft thresholding transformation for gene selection that is only dependent on the power function parameter β. it not only takes into account the information of all the genes, but also reduces the effect of noise induced correlation by the power function, assuming that the noise correlation occurs more likely at smaller values than the correlation associated with true gene relationships.

in the soft thresholding transformation, we varied the value of β to construct a series of gene co-expression networks. results in figure 
1c and d demonstrated that the power transformation significantly improved the performance of variable selection and led to a higher f-score peak and lower cer than the original non-transformed one . we further found the performance was not a monotonic function of β. among the four power functions with different parameters β, the optimal value of f-score and cer were achieved when β was set to  <dig>  which may result in the optimized state for emphasizing the correlation associated with true gene relationships by diminishing the noisy effects in this simulation setting. we observed similar results when d= <dig> .

in comparison with other feature selection methods
to further demonstrate the effectiveness of our proposed network based analysis for variable selection, we compared it with two other classic filter algorithms, the laplacian score
 <cit>  and the max-variance. as a special case of a spectral feature selection algorithm, laplacian score selects those features that can best preserve the local manifold structure . in the comparison, we set up the parameter β with the optimized value obtained in the aforementioned simulation result . the genes selected from each method were used for clustering samples with the k-means algorithm. our proposed network algorithm consistently outperformed the other two methods, particularly at a low dimensionality , where all of these methods reached their best performance . the laplacian score method achieved an optimal cer value of  <dig> , close to that of the network without a power transformation. similar results were observed in the comparison of the f-scores . this indicates the effectiveness of our variable selection method in clustering analysis.

selecting genes that support a common clustering structure by module identification
the gene co-expression network analysis captures the relationships among the genes so that it can help identify a small number of sets of highly correlated genes, each of which tends to assemble into a functional module that can be involved in biological pathways or molecular complexes. also, these genes together assure a specific clustering of samples, which might be different from other sets of correlated genes. the genes selected by a module usually have greater intramodular connectivity than those that do not belong to the module. therefore, module analysis not only captures the connectivity information of individual nodes as what we did in the variable selection, but also reveals the higher order organization of gene topological similarity in the entire gene space.

we applied both the hard-thresholding and soft-thresholding transformation on the gene co-expression network for module identification. note that the sensitivity of this method varies depending on the co-expression network size and the composition of variable space. in the analysis, we assigned the value of μ to  <dig>  in the simulation setting to demonstrate a clear module structure. for hard thresholding transformation of network , we varied the threshold τ to retain the top 1% of correlation coefficients for calculating the jaccard similarity coefficients between genes. this cutoff is roughly consistent with our simulation setting where there are  <dig> informative genes and 40* <dig> informative gene pairs among 500* <dig> total number of gene pairs . we also tested the performance on the top 5% of correlations. figure 
3b and c showed the discovered modules in the network when the top 1% and top 5% of correlations were kept in the transformed network, respectively. two ‘hot blocks’ can be clearly identified along the diagonal, each of which corresponding to the original defined module in the simulation setting with only a few missing genes. due to varying numbers of edges included, the boundaries between blocks exhibited distinctive sharpness in figure 
3b and c, but the module structure and the genes included in each module were the same. therefore, this simulation result can serve as a guideline for determining cutoffs. for a hard threshold of 1%, we are assuming that roughly 10% of the genes are informative and 90% are not. this assumption is of course not optimal for every dataset. fortunately, this simulated example suggests that module identification is not very sensitive to this parameter. therefore, in a real dataset, if we use a hard threshold, we will first set the threshold to select the top 1% of edges, and also vary the threshold slightly, while checking whether the hot block appears to be consistent with respect to small changes of the cutoff.

we also performed soft thresholding transformation and obtained similar results , indicating the relative robustness of our method in module identification. furthermore, each of the blocks induced a unique bipartitioning of the sample space that is equivalent to the sample partition inferred by the corresponding modules in our simulation setting . we observed similar results when d= <dig> .

application in real datasets
along with simulations, we applied our method to two real experimental datasets: leukemia
 <cit>  and colon cancer data
 <cit> .

the leukemia dataset consists of  <dig> patients with two subtypes of acute leukemia: acute myeloid leukemia  and acute lymphoblastic leukemia . the latter is composed of two subclasses, b-cell and t-cell types. therefore there could be two possible biologically meaningful clustering solutions including one with two-clusters of samples  and the other with three clusters .

following dudoit and fridlyand
 <cit> , three pre-processing steps were applied to the original data matrix and a final  <dig> x  <dig> data matrix was obtained. because the pre-processing steps included thresholding the gene expression values with a floor and a ceiling boundaries, many artificially high correlations were introduced. we filtered out these genes whose medians equal the boundary values and obtained  <dig> genes totally. we first studied the module organization of the gene space and the associated sample partition in the leukaemia dataset. in the implementation, the value of τ was chosen to include only the edges corresponding to the top 1% of paired correlation coefficients in the network. as shown in figure 
4a, the topological similarity matrix exhibited a sharp separation of modules from its neighboring genes. we evaluated the sample clustering performance of modules by using the gene set included in each module for sample partitioning. we found that most of them induced a meaningful partition of the sample space. specifically, the first module at the bottom right corner rendered a dichotomy of the samples according to the known classification, all/aml, with the cer value equalling  <dig> , whereas the second module tends to distinguish b cell all patients from the rest with a cer value of  <dig> , indicating the unrecognized similarity between t cell all samples and aml samples in the dataset. the other modules also imposed a potential novel partition of samples. these results confirmed multiple possible clustering solutions in the leukemia dataset. we also performed variable selection to select individual genes based on their connectivity in the transformed network using soft thresholding transformation. for the three-cluster solution, the  <dig> genes selected from the network-based analysis yielded the sample partition coinciding almost precisely with the known classification  with cer equalling to  <dig> , when the parameter β reached  <dig> or above . in figure 
4c, we also compared the performance of our network-based method with other filter methods. results showed that our approach achieved a comparable optimal cer value with the laplacian and the max-variance methods, when more than  <dig> genes were selected. out of the top  <dig> informative genes selected from our method,  <dig> and  <dig> genes were found by the laplacian and the max-variance method, respectively . the genes selected from our method may also represent new sample partitions. this is supported by the observation that our method achieved better separation of b cell aml samples from the rest compared to other methods . we further examined the gene lists selected from soft thresholding transformation with varied β, and found that the overlap among the gene lists increased as β became larger. after β reached  <dig>  the selected gene lists were almost unchanged. this is consistent with their similar clustering performance as shown in figure 
4c. however, recall that in our simulation studies the optimal cer was achieved when β was small , reflecting possibly different variable compositions between the simulated dataset and the leukemia data. as shown in figure 
5a and b, these implications became clear. in figure 
5a, the correlation of  <dig> informative genes in the simulated dataset followed a uniform distribution. unlike the  <dig> informative genes in simulation, the correlation of the  <dig> selected informative genes from the leukemia data followed a mixture distribution with two components, one at the high end of the distribution and another close to zero . this is reasonable for real datasets given the assumption that gene expression data are influenced by many active biological processes, where genes within each of the processes tend to be highly correlated with one another, but may not be well correlated with those participating in other biological processes. therefore, the correlation values between genes corresponding to different biological processes will be small, located in the low end of the correlation distribution. since the component in the high end was well separable from the other for the full gene space, the corresponding highly connected genes tend to be always selected as informative genes disregarding the value of β. therefore, the selected genes should not be sensitive to β when β is above a certain threshold that aims to remove the noisy correlations. however, this was not the case for the simulated dataset, where the correlation of the informative genes followed a uniform distribution while that of the full set of genes was close to zero, so a small value of β should be able to remove the noise induced correlations.

we also analyzed the colon cancer data by alon et al.
 <cit> , which contains two classes of samples based on disease status:  <dig> tumor samples and  <dig> normal samples. in addition, an independent study reported that there was a difference in the experimental protocols used to process the samples
 <cit> . there are  <dig> samples processed by protocol  <dig>  and the other  <dig> samples were processed by protocol  <dig>  taking the different protocols into consideration, the study has at least three different possible sample partition structures based on disease status, sample protocols, and their combination. in the analysis, we first employed the module analysis on the dataset, followed by variable selection for the clustering analysis. as we did with the leukemia dataset, the edges corresponding to the top 1% correlation were kept for module analysis. as shown in figure 
4b, dozens of modules were identifiable along the diagonal of the similarity matrix. each module exhibited a distinctive partition of the sample space. among the first three modules at the bottom right, module  <dig> had strong tendency to partition the samples according to the normal versus tumor classification with a cer value , whereas module  <dig> was informative for the partition based on different protocols . also the number of genes included in these two modules differed. module  <dig> was the largest in terms of the number of genes included. these results indicate that the classification of tumor versus normal samples is a more dominant factor in the sample clustering compared to the different sample protocols. it was interesting to observe that the number of genes in module  <dig> was similar compared to module  <dig>  however their clustering behaviours differed, suggesting that module  <dig> may inform a novel sample partition of the colon cancer dataset. the aforementioned module analysis reinforced the idea that the colon cancer dataset has at least three clustering solutions. here, a soft thresholding transformation was implemented to select the feature genes. as shown in figure 
4d, in a four-cluster solution that combines the disease status and the sample protocol changes, the clustering performance of our method based on different values of β is similar given a β value of  <dig> or above. here, the cer value was higher than that obtained from the leukemia dataset, possibly due to mislabeled samples
 <cit> . nevertheless, our approach achieved a better performance than the other methods. in figure 
4d, when β was  <dig> or above, our method had a cer value equal to  <dig>  with  <dig> genes selected, whereas laplacian and max-variance obtained the cer values of  <dig>  and  <dig> , respectively. only  <dig> and  <dig> genes selected from our approach were also obtained from the laplacian and the max-variance method, respectively . for the other clustering solution based on different experimental protocols, our method outperformed others as well . we also plotted the distribution of correlations for full gene space and the  <dig> selected informative genes respectively . similar to the leukemia dataset, the gene set has two well-separated components of correlations at two ends, which may explain their saturating behaviour of clustering performance when β reaches a certain value.

CONCLUSIONS
variable selection for clustering is never a trivial problem. this is particularly true in high dimensional data analysis, where few dozens of informative variables are often dispersed over a noisy background with thousands of noninformative variables. traditional approaches to filtering out the irrelevant features are based on certain criteria that do not account for potential interactive influence from other individual variables. motivated by ensemble clustering, we propose a new filter score, the gene connectivity in the co-expression network, which takes into account all of the information gained from other nodes in the network in terms of expression similarity; therefore, the selected genes are expected sustain a consensus sample partition that populates through the partition pool induced by individual genes.

to obtain the connectivity of each gene, we have applied two network inference methods based on a hard thresholding and a soft thresholding adjacency function. in the first method, we use a hard threshold parameter τ to infer the gene network, followed by filtering the nodes based on their connectivity rank. therefore, the resulted feature gene set is affected by the resulting network size and the stringency of the connectivity rank. the marginal gene connectivity obtained from hard thresholding transformation is estimated solely based on the given gene and its neighbourhood in the network with reduced size. therefore, to retain more information of the entire network, we employ the soft thresholding transformation to build a complete network including all genes, where each gene is connected to all the other genes in the network with weighted connection strength. our simulation results showed that soft thresholding is more effective and provides better clustering results compared to the hard thresholding method in terms of clustering error rate and variable selection. we realize although the connectivity obtained from a soft thresholding network preserves more information of the entire network compared to the hard thresholding transformation, the gene connectivity calculation is still based on the gene and its edges to all the genes in the network, and it does not consider the edges among its neighbors. there are other network related metrics, such as the betweenness centrality of a node that requires knowledge of the entire network topology and indicates how important the node is within the context of the entire network. these network metrics will be evaluated in our future studies. in this work, considering the fact that gene connectivity is easy to calculate and the derived gene hubs represent a large number of other genes in the network well, we use gene connectivity as our evaluation criteria for variable selection.

the parameter setting in variable selection methods renders a crucial influence on the performance of the feature genes selected. however, tuning parameter selection in the unsupervised setting is always a challenging problem
 <cit> . in real data analyses, we showed the relative robustness of our method when the parameter β was above a threshold value in the soft thresholding transformation. further analysis of these informative genes demonstrates a mixture correlation distribution with two components in the profile. the component in the high end comes from paired gene correlations within the same biological processes, so they will be preferentially selected by the high power transformation parameter β compared to other genes. therefore, we propose to pick the value of β for a given dataset so that the selected genes are not sensitive to β if it is above this threshold value. alternatively, we can evaluate each set of feature genes with other criteria, such as the purity and efficiency of clustering results, or within/between class distance of induced sample partitions.

furthermore, we developed a module identification method by measuring the node interconnectedness in the co-expression network. our module identification is based on using a node similarity measure in conjunction with a clustering method. in this study, we chose to use the jaccard similarity coefficient based on the gene connectivity instead of using the gene correlation coefficients directly. jaccard similarity takes advantage of the co-expression network information assuming that two nodes having a higher degree of overlapping neighbors are more likely to be in the same functional class than nodes having a lower topological overlap. this is particularly useful when high background noise divert the real network information. we performed a comparison of module structures based on two similarity measures: the pearson correlation coefficient and the jaccard similarity coefficient. as shown in additional file
1: figure s <dig>  there is a clear difference before and after the jaccard similarity was computed on the gene correlation coefficients. the jaccard similarity coefficient led to more distinct gene modules than the correlation coefficient which resulted in a highly noisy background on its module structure. once the node similarity measure is obtained, we applied hierarchical clustering to resort the rows and columns of genes. there are alternative clustering procedures such as k-means clustering, but hierarchical clustering is more straightforward, and does not require specification of the number of modules. the genes corresponding to each module clearly form squares along the diagonal so that the modules can be easily identified by visual inspection.

the focus in our module analysis is on the high order organization of gene space, rather than their specific corresponding sample partitions. it is particularly useful for discovering unanticipated sample partition structures in data. unlike the previous methods
 <cit> , our method does not need the partitioning and merging steps of the gene space; alternatively, we use the co-expression network, which is capable of recovering biologically meaningful modules amongst a noisy background, that putatively represent pathways or cellular processes. such information can be used to establish causal models connecting the informative feature sets with known phenotypes such as disease symptoms, which will facilitate discovery of new and hidden patterns in datasets.

competing interests
the authors declare that they have no competing interest.

authors’ contributions
zw carried out the simulation studies and real data application and drafted the manuscript. fas participated in the data analysis and results discussion. qp participated in the design of the study and helped to draft the manuscript. yl conceived and coordinated the study and helped to draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1: figure s1
variable selection performance in the simulated dataset . the averaged f-scores  and the cer curves  in hard thresholding and soft thresholding transformation, respectively. the horizontal line in each plot represents the performance based on all genes . figure s <dig>  module structure in the gene co-expression network from the simulated dataset of d= <dig>   and : in hard threshold transformation, with top 1% and 5% correlations were included in the network, respectively.  and : in soft transformation, power function with β= <dig> and β= <dig>  figure s <dig>  comparison of module structure recovery using different similarity measures. the rows and columns of genes have been reordered according to the hierarchical clustering of similarity matrix. . pearson correlation coefficients of  <dig> genes, no transformation.  jaccard similarity coefficients of  <dig> genes, no transformation.  pearson correlation coefficients with power transformation with β= <dig>  . jaccard similarity coefficients derived from power transformation with β= <dig>  figure s <dig>  comparison of lists of genes selected from different methods. network refers to our network-based variable selection method.  leukemia dataset and  colon cancer dataset. figure s <dig>  clustering performance based on new partition structures identified by our module analysis. the cer curve with various power functions in co-expression network transformation for new partition structures of the leukemia dataset  and colon dataset .

click here for file

 acknowledgements
this work is supported in part by nih grant r <dig> lm <dig>  r <dig> ca <dig> and the seed grant from the university of texas health science center at houston.
