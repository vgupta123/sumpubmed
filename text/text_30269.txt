BACKGROUND
side effects are unwanted responses to drug treatment. some side effects are adverse, while others are more tolerable. many side effects are detected during clinical trials, and adverse side effects are often responsible for the high attrition rate of drug candidates. for example in  <dig>  the french department of industry estimated that only  <dig> drug out of  <dig> was approved by the fda  <cit> . beside toxicity, it is not desirable to prescribe for a long period drugs having side effects like nausea or headache. moreover, not all side effects are detected during clinical trials. for example, the cardiotoxicity of benfluorex was only recently highlighted  <cit>  even though benfluorex was approved in the 1970’s. thus, early recognition of side effects is an important issue for drug development and safety.

to support side effect exploration, two main resources reporting their association with drugs have been developed. the fda adverse event reporting system  stores the observed side effects reported directly by health care professionals and consumers. the sider database stores side-effect information mentioned on drug package inserts  <cit> .

two groups of studies have been conducted on side effects. on the one hand, side-effect information has been exploited for drug repositioning. for example, campillos et al.  <cit>  used a corpus-based side-effect similarity approach to show that pairs of drugs sharing similar side effects can have common targets. thus, they use side-effect similarity to predict new targets for a drug. in a similar spirit, takarabe et al.  <cit>  used faers to define pharmacological drug-drug similarity and to predict unknown drug-target interactions from the integration of the pharmacological similarity and genomic sequence similarity of target proteins. at the disease level, yang and agarwal  <cit>  proposed an approach based on the hypothesis that drugs sharing side effects could be indicated for the same disease. drug side-effect associations and drug-disease relationships were used to develop a systematic drug repositioning method and to suggest, for instance, an antidiabetic effect for drugs causing porphyria.

on the other hand, other studies focus on understanding how side effects occur. as described above, relationships may exist between side effects and drug targets. moreover, the link between chemical structure and side effects was shown by scheiber et al.  <cit> . from a more mechanistic point of view, lee et al.  <cit>  showed that side effects can be correlated with the biological processes in which the drug targets are involved. for instance, they showed that nausea is correlated to an up-regulation of the deaminase activity. a very recent paper aims at predicting the side-effect profiles of molecules based on their chemical structures  and the information of their target proteins   <cit> . the so-called side-effect profile of a molecule is simply defined as its binary fingerprint with respect to the side-effect terms. however, such earlier studies have several limitations. for example,  they consider only individual side effects, and ignore the fact that often more than one side effect is associated with a drug,  the biological space is over-simplified, and  the resulting prediction models are “black boxes” which do not provide any explicit and reusable knowledge.

here, we study in a systematic way drug side-effect associations, and we propose a method for identifying and characterizing side-effect profiles  shared by several drugs.

our approach is composed of five main steps, as illustrated in figure  <dig>  the first step  consists of grouping the terms used for side effects in sider using a semantic similarity measure in order to build term clusters  corresponding to groups of semantically related ses  <cit> . in parallel, drugs from sider are mapped to drugbank in order to retrieve information about drugs themselves and their targets . then, tcs and drugs are associated in order to represent each drug by a side-effect fingerprint . seps are extracted as maximal frequent itemsets from side effect fingerprints . the aim is then to characterize each sep in terms of drug and target properties. this can be addressed as a supervised classification task. two machine-learning methods are chosen for this task: decision trees  and inductive logic programming  . these two methods provide easily readable results which can then be exploited for understanding seps. decision trees use a single table as input in which each row corresponds to a drug and each column to a drug descriptor. inductive logic programming uses relational descriptors to learn a first-order-logic concept definition from observations. relational descriptors encoding characteristics of both drugs and their targets are retrieved from our “networkdb” integrated database, which is built from several data sources including drugbank, uniprot, kegg, and go. the models obtained for a set of selected seps with these two machine-learning methods are then evaluated by cross-validation and tested directly with new drugs. finally, some elements are provided for model interpretation.

methods
the networkdb resource
networkdb is a relational database which integrates data about molecules and their targets. these data are collected from various public data sources mentioned in the following sections. figure  <dig> shows the conceptual model of the database.

chemical space: drugs and their properties
the sider database contains drug side-effect relationships  <cit> . drugbank is used to collect data such as categories and targets  <cit> . the join between sider and drugbank is based on the pubchem compound identifier given by sider and drugbank. a total of  <dig> drugs from sider are referenced in drugbank v <dig> .

each drug is described by its category and a set of clusters it belongs to. in fact, various structural representations and associated similarity measures were used to cluster drugs. the first similarity measure is based on smiles representation. the smiles codes are converted thanks to open babel program into fingerprints which allows linear and ring substructures to be identified  <cit> . then, the structural similarity between two molecular fingerprints is calculated using the tanimoto measure. in addition, we calculated three other similarity scores using spherical harmonics representation of molecules. this parametric representation of macromolecular surface was originally proposed and applied by ritchie and kemp  <cit>  and cai et al.  <cit> . the proprietary program hpcc  supports three variants of the spherical harmonic representation. hpccgeo uses spherical harmonic coefficients  to calculate similarity between drugs, hpccchem is based on chemical properties mapped on the spherical harmonic representation, and hpcccombo combines shape and chemical information. ward’s method is used to perform four hierarchical clusterings of drugs  <cit> . the optimal numbers of clusters is determined by the method of kelley and al.  <cit> . thus,  <dig> clusters are obtained with tanimoto,  <dig> with hpccgeo,  <dig> with hpccchem and  <dig> with hpcccombo measures.

drug categories are retrieved from drugbank. these categories are mapped on the descendants of three mesh concepts, namely “molecular mechanisms of pharmacological action” , “physiological effects of drugs”  and “therapeutic uses” .

biological space: proteins and their properties
drug targets are extracted from both drugbank and pdb  <cit> . the outer join between pdb and drugbank  is based on smiles code identity. drug targets are associated with their uniprot accession numbers. thus,  <dig> targets are collected, representing an average of four targets per drug. then, target annotations are retrieved from different databases. protein-protein interactions are retrieved from the intact database  <cit>  and  <dig> interactions were collected which correspond to  <dig> new proteins. for all the proteins ,  <dig> pathway names are extracted from the kegg database and the pathway interaction database which integrates data from nci-nature, biocarta and reactome  <cit> . for the same proteins, go terms are also collected from quickgo database  <cit> . thus,  <dig> go terms annotating the  <dig> proteins are stored in networkdb. moreover, the “is_a” and “part_of” relationships between go terms are stored in networkdb. finally,  <dig> protein domains associated with the targets and their interactants are retrieved from interpro  <cit> .

grouping side-effect terms into term clusters
side effects are extracted from sider. as shown previously  <cit> , the use of all terms describing side effects in sider  impairs the execution of data mining programs and produces numerous and redundant patterns which are inappropriate for expert interpretation. as sider side effects terms belong to the medical dictionary for regulatory activities  <cit> , a semantic similarity between these terms can be calculated based on the structure of meddra  <cit> . next, a hierarchical clustering method is applied to obtain  <dig> term clusters  which are then validated by experts  <cit> . for instance, tc named 65_dermatitis is the 65th tc and has dermatitis as representative term.

datasets
association of drugs with side effects
the association between drugs and tcs is an important step for the characterization of drugs sharing side effects. as the tc size varies from  <dig> to  <dig> terms, it seems consistent to use a heuristic procedure depending on the tc size. let ki be the number of terms in tci and ni be the minimal number of side effects required for assigning tci to a drug. considering ni =  <dig> for any tci results in a very loose association yielding a very dense binary table hampering further computation, whereas considering ni = ki for any tci results in a very stringent association which might skip over important drug side effects. in fact a trade-off between these two extreme solutions is required. grouping the ki values into 5-range intervals with the last interval from  <dig> to  <dig> allows to set up a simple association procedure ranging ni from  <dig> to  <dig>  the resulting association between drugs and tcs is shown in figure  <dig> where each row represents the side-effect binary fingerprint associated with a drug. this binary table  is then used to discover interesting side-effect profiles defined here as the longest combinations of tcs shared by significant sets of drugs.

single-table datasets
single table datasets designed for dt learning represent each drug by an attribute-value vector. four types of descriptors retrieved from networkdb are used to generate these attributes: the first is the class information, i.e. the studied sep, the second one includes drug categories, the third one lists all drug targets with for each target, three attributes referring to the type of action of the drug  and the fourth concerns clusters of similar drugs according to the four similarity measures described above. because of target and category multiplicity, the total dimension of this dataset varies between  <dig> and  <dig> depending on the sep.

relational datasets
relational datasets designed for inductive logic programming  consist in a set of tables extracted from networkdb describing drugs properties and background knowledge. drugs properties are the same as in the single-table dataset, i.e. categories, targets and clusters. background knowledge includes go annotations, domain composition, interactants and pathways of each drug target. relationships between go terms constitute an additional table.

data mining
maximal frequent itemsets
in a binary table , a frequent itemset is a group of attributes shared by a number of objects greater than a threshold support. a frequent itemset is considered as a maximal frequent itemset  if all its proper supersets are not frequent  <cit> . it follows that two maximal frequent itemsets  cannot be shared by a number of objects greater than the threshold support. in our case, mfis are the largest combinations of tcs shared by a number of drugs greater than  <dig>  this threshold was chosen as a trade-off between high values yielding short mfis limited to one or two tcs and low values yielding numerous mfis covering only a few molecules. mfis are extracted from the binary table  using the coron program  <cit>  after excluding tcs which cover more than 50% of the molecules.

decision trees
decision tree  construction is a machine-learning method which uses  table to classify objects. results given by this method are easily readable. decision trees are built here with the j <dig> implementation of c <dig>  tree learner in the weka toolbox using single table datasets converted into the arff format  <cit> . we use the default parameters except for two of them: we use minnumobj =  <dig> and binarysplits = true.

inductive logic programming 
ilp is a machine-learning method which uses relational data as input and has been successfully applied to various areas including bioinformatics  <cit> . it allows us to learn a concept definition from observations, i.e, a set of positive examples  and a set of negative examples , and background knowledge   <cit> . the ilp experiments produce theories as sets of first-order logic rules. they where conducted here with the aleph program  <cit> . many parameters can be tuned for theory construction. the three main parameters are the min-pos, the noise and the induce-type. the min-pos parameter is the minimal number of positive examples that a rule must cover. the noise corresponds to the maximal number of negative examples that an acceptable rule may cover . the third parameter is induce-type which directs theory construction. when this parameter is set to induce-cover, overlapping rules are produced . based on previous experience  <cit> , we used the following settings: min-pos =  <dig>  noise =  <dig> and induce-type = induce-cover.

model evaluation
cross-validation
both ilp theories and decision trees are evaluated with  <dig> runs of a 10-fold stratified cross-validation. dt cross-validation is performed with the weka experimenter interface. for ilp, we took advantage of our recent integration of aleph into the knime platform  <cit> . knime cross-validation meta-node is adapted for theory evaluation. an example is predicted as positive if it is covered by at least one rule. each cross-validation assay yields a confusion matrix counting true and false positives, as well as true and false negatives. each assay is then evaluated by the calculation of accuracy , specificity  and sensitivity .

direct test
theories and decision trees are also evaluated by direct test. drugs used for testing are those present in sider  <dig> and drugbank  but not present in sider. for these drugs all descriptors are retrieved and stored in the networkdb. furthermore, the reports of faers from  <dig> to  <dig> were imported as a database and used as an external information source for checking the false positives predicted by our models. we consider that a molecule is associated with a sep in faers if for each tc of the sep there is at least one report that states that the molecule is the primary suspect of an observed side effect belonging to the tc. our checking procedure is just an anticipation as it relies on the fact that updating the package insert of a drug  requires that sufficient amount of adverse effect incidents occur .

RESULTS
overall distribution of side effects
a drug is associated with a tc  if it is annotated by a minimum number of side effects of this tc . the resulting binary table is shown in figure  <dig>  where each row represents the side effect fingerprint of one of the  <dig> drugs considered here, and each column represents one of the  <dig> tc. in this representation, drugs and tcs have been grouped by distribution similarity. on the right part of the figure, we can see tcs associated with a limited number of drugs, whereas highly represented tcs are on the left. in the same way, drug fingerprints involving few tcs are on the top of figure  <dig> and drugs with high number of tcs are on the lower part. zooming on adjacent columns reveals that some tcs seem to be frequently associated with the same drugs as for example the pair tc 39_stevens-johnson_syndrome and tc 100_erythema_multiforme.

however, apart from providing a general idea about the complexity of tc association with drugs, this visualization cannot be exploited easily. more precise information can be retrieved by querying networkdb. for example, the maximal number of tcs associated with a drug is  <dig> for the ropinirole . conversely,  <dig> drugs are associated with only one tc. for instance, bretilium  is only associated with tc 110_shock. from the tc point of view, the number of drugs associated with a tc ranges from  <dig> to  <dig>  the  <dig> tcs covering more than 50% of the molecules are excluded in the rest of the study.

side-effect profiles
the overall intuition provided by figure  <dig> is that groups of tcs shared by drugs exist and should be extracted. in fact, extracting patterns from such binary table is the purpose of itemset search algorithms  <cit> . we thus perform mfi extraction and we define side-effect profiles  as maximal groups of tcs covering at least 20% of the drug set . the resulting  <dig> seps are listed in table  <dig>  regarding length,  <dig> seps have only one tc,  <dig> combine  <dig> tcs,  <dig> combine  <dig> tcs, and only one combines  <dig> tcs. these  <dig> seps concern  <dig> molecules  and involve  <dig> distinct tcs of which the most frequent are 99_headache and 90_feeling_abnormal which appear  <dig> times each, whereas  <dig> tcs appear in only one sep. these  <dig> most frequent seps are considered in the rest of the study. by construction, although two seps can have common tcs, they cannot cover more than  <dig> molecules in common.

avg overlap: average of overlap size between the sep and other seps.

characterization of frequent seps
our hypothesis is that a sep shared by a large number of drugs can be explained in terms of drug properties and background knowledge. thus, two machine-learning methods, decision trees and ilp, are applied on the drugs associated with each sep. for both methods, the positive examples are taken to be all the drugs associated with a sep, and those drugs that are not associated with any of the tcs composing the sep are taken as negative examples. negative examples represent 60% of the learning set.

for each profile, classification efficiency is evaluated using a  <dig> × <dig> cross-validation by accuracy , specificity  and sensitivity . the results presented in table  <dig> show that for both methods, generated models are good classifiers with an average accuracy of 67% for dts and 65% for ilp. for 23/ <dig> seps, accuracy is better for dts than with ilp mostly reflecting the higher specificity values obtained with dts. on the contrary, sensitivity values are always higher with ilp than with dts with only one exception for sep_ <dig> where ilp sensitivity value is  <dig>  lower than dts sensitivity. thus, ilp provides more sensitive theories whereas dts provide more specific models. in fact, sensitivity is probably more important than specificity for drug development as it is for medical diagnostic. indeed, low sensitivity means that some seps can be skipped over, although they are truly associated with the tested drug. thus, ilp theories display attractive qualities for sep prediction. five seps  are particularly well characterized with ilp since sensitivity values are greater than 60%. the amount and quality of available data may explain the observed differences of results between seps. it should be noted that comparison with other reported methods is uneasy due to the fact that we aim to characterize and predict seps rather than isolated side effects. in fact the closest study is the one of yamanishi et al.  <cit>  whose objective is to predict isolated side effects using multi-class statistical methods. therefore these authors do not produce comparable accuracy values.

acc: accuracy, spec: specificity, sens: sensitivity.

positives: number of positive examples in the test set according to sider, tp/fp: number of predicted true/false positives, faers: number of fished out molecules based on faers data.

interpretation of decision trees and theories
quantitative characteristics of dt models and ilp theories for the  <dig> selected seps are presented in table  <dig> .the first observation concerns model coverage. we can see that in average 83% of the drugs are covered by at least one rule in an ilp theory whereas dt models cover in average only 58% of the drugs composing the learning set. the second observation is the use of almost all descriptor types in each dt model or ilp theory. the most represented descriptors are drug categories and clusters for dts, respectively drug targets and go terms for ilp theories. this illustrates the importance of using background knowledge about drug targets and go semantic relationships for the characterization of seps.

model coverage is the percentage of positive examples covered, averaged over the  <dig> dt models and  <dig> ilp theories. avg: average. model size corresponds to the average number of nodes in a dt model or of rules in a ilp theory. occurrence of each type of descriptor is estimated by counting the number of nodes  involving them .

it is worth noting that some rules contained in theories were confirmed using peer-reviewed literature. for example, considering the sep_ <dig>  theory, rule  <dig> says that a drug is associated with this sep if its target interacts with a protein belonging to the kegg pathway “focal adhesion” and to the pid pathway “signaling events mediated by focal adhesion kinase” . by searching the list of genes implied in dermatitis  <cit>  and confronting them to the  <dig> pathways, we extract  <dig> genes  dysregulated in dermatitis which belong to the kegg pathway “focal adhesion”. in the same way, two genes  are known to be dysregulated in dermatitis and belong to the “neuroactive ligand-receptor interaction” kegg pathway mentioned in rule  <dig>  finally, if we consider rule  <dig> we could verify that the gene erbb <dig> belonging to the “endocytosis” kegg pathway is indeed down regulated in dermatitis.

the condition parts of the  <dig> rules contained in sep_ <dig> theory are given with the number of positive  and negative  covered examples. the  <dig> rules confirmed using peer-reviewed literature are in bld. rules are ordered by number of positive covered examples. the  <dig> predicates are defined as follows: drug_has_target : drug a activates/inhibits protein b; goterm: protein b is annotated by go term g; go_relation : the relationship between go terms g <dig> and g <dig> is r; interact: protein b interacts with protein; pathway: protein b is involved in pathway p; drug_cluster: drug a is member of cluster k obtained using method m; category: drug a belongs to category t; domain: protein b is composed of domain d.

finally, from a more global point of view the drugs can be represented according to the rules they satisfy resulting in a drug ×rule binary table. this table constitutes a kind of abstraction of the initial drug ×tc binary table  based on extracted knowledge. interestingly this new representation leads to improved clustering results for the drug set  and could be further exploited for prediction studies of particular seps.

CONCLUSIONS
our study proposes an integrative machine-learning approach for predicting side-effect profiles  and understanding their mechanisms. we integrate drug characteristics and background knowledge such as functional annotation, interactions and pathways in a relational database. an extensive learning set is built by associating drugs with clusters of side effects  according to sider information. our first contribution consists of extracting seps from this complex table of fingerprints as the longest groups of tc shared by more than one hundred drugs. we also set up two machine-learning methods, namely decision trees and inductive logic programming in order to learn which combination of properties of drugs and their targets leads to a given sep. after evaluating the learning models, our general observation is that ilp models have a higher sensitivity than dt models. because higher sensitivity means predicting fewer false negatives, this means that ilp predicts seps more often than decision trees. this was confirmed on a small test set including a checking procedure using faers as external and complementary information source. indeed, more sophisticated prediction procedures can be designed integrating faers and based on selected rules. this should improve the prediction accuracy at least for specific seps displaying good quality data. the results obtained with ilp also show that background knowledge is well exploited during rule induction. thus, in addition to targets, chemical structure and biological process annotation already studied by other groups  <cit> , we show that information about pathways, protein-protein interaction and to a lower extent protein domains also plays an important role in side effect characterization. further experiments may include other types of background knowledge such as clinical data and/or polymorphisms.

in our approach we characterize seps instead of individual tcs. indeed as drugs are frequently associated with more than one tc, studying separately each tc implicitly assumes that side effects occur independently one from the other. this likely corresponds to a simplified view of side-effect occurrence and the existence of seps shared by more than 20% of the drug set strongly suggests that side effects are correlated. moreover our approach can be applied to any user-defined sep or tc of interest.

we believe that our approach represents a valuable methodology for understanding and predicting side-effect profiles. our results suggest that the first-order logic theories can already be used during the drug discovery process in order to early anticipate side-effect apparition and thus decrease the attrition rate.

availability of supporting data
all decision trees and ilp theories are available at http://plateforme-mbi.loria.fr/side-effect-profiles.

abbreviations
acc: acccuracy; dt: decision tree; ilp: inductive logic programming; mfi: maximal frequent itemset; sens: sensibility; se: side effect; sep: side effect profile; spec: specificity.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
eb participated to the conception and design of the study and acquisition of data. he carried out the machine learning experiments. rg designed and developed programs for automatizing machine learning experiments and cross validations. gm carried out the clustering experiments on molecules. ask and ms participated in the conception of the study and the interpretation and critical analysis of the results. mdd and mst conceived the study and carried out its design and coordination and helped eb to draft the manuscript. all authors read and approved the final manuscript.

