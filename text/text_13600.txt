BACKGROUND
microarrays have become common tools in many life-science laboratories. despite their diffusion, it is still not easy to analyze the huge amount of data generated by this powerful technology. microarray data analysis is in fact a multi-step procedure, and an overwhelming amount of different published methods exist for each step. while the research community has yet to agree on a golden standard, some methods have already been shown to be more appropriate in some situations  <cit> . on one hand, biologists that need to analyze their own microarray dataset may lack the necessary computational and statistical knowledge to address all aspects of a typical analysis work-flow. on the other hand, service providers that provide data analysis support to their user, have to face the challenge of transferring all the generated results in a comprehensive way and explaining the data analysis methods used at each step.

many commercially or freely available tools exist to perform the common steps for analyzing microarray data. some tools were developed for a particular or a very limited set of tasks  <cit> , other tools try to cover many of the most important steps in data analysis  <cit> . the former rely on dealing with tool-specific input and output data formats, the latter do not provide an automated pipeline. in both cases multiple decisions are required and little documentation is provided to help interpret the results. thus specific expertise are strongly recommended for a meaningful analysis. in addition, some client-server tools exist  <cit> , that allow for visual composition of bioinformatics tools, plus internet searches of publicly available components . however the price to pay for such high flexibility and computational power is the complexity of software installation and maintenance, which practically require information technology specialists.

the only solution currently available to address most of the above issues is genepublisher  <cit> . unfortunately, it is only available as a web accessible service and it has a strong limitation on the number of samples that can be analyzed simultaneously. to date, input data must be included in a public database to get access to a server without input size restrictions.

none of the above mentioned methods allow the user to tailor the selection of differentially expressed genes  based on the experimental design and on the number of available replicates, while both criteria must be considered for a well-advised choice of the methods to use. moreover, none of the above methods allow for the comparison of the results obtained with different deg selection methods. in addition, none of them give the opportunity to incorporate a priori biological knowledge, e.g. in the form of user-defined gene lists, with the exception of expression profiler  <cit> . nevertheless the tool implemented in expression profiler is based on the assumption that the genes belonging to the submitted families are co-expressed. indeed genes that do not meet this prerequisite are removed while other co-expressed genes may be added in the original list. finally, none of them, with the exception of genepublisher  <cit> , guide the user towards the interpretation of the results.

for all these reasons, we developed an r package that performs a fully automated microarray data analysis, in which the choice of the applied methods depends on the number of samples, on the experimental design and on the number of available replicates. it is based on standard or widely accepted methods  <cit>  and relies on their r implementation. it allows a researcher with minimal computational skills to easily analyze his/her own data or data present in public repositories. this tool can be efficiently used to generate a first draft analysis, that could guide a more refined, specific analysis on relevant findings.

implementation
amda is a package entirely written in the r language  <cit> . the r/bioconductor project  <cit>  is becoming the reference open source software project for the analysis of genomic data. moreover, r/bioconductor is easy to install on the most common operating systems .

bioconductor developers created specific classes and methods for storing and dealing with microarray data . the amda package widely uses bioconductor classes, therefore more experienced users can easily invoke other r/bioconductor components in amda and vice-versa. in particular, the exprset object is used for storing the expression intensities and it is strictly associated to the phenodata object used to document the experimental design.

every function of the amda library is available as a stand-alone r tool and detailed help is available according to the standard format of r documentation. moreover, the widget manual shows the few steps necessary for performing a complete analysis from image files via widget interface. finally, a vignette  is available to dynamically show a possible application of several functions contained in the amda package. it briefly shows how experienced r users can customize the pipeline, based on the order in which the different functions are applied and the setting of their parameters.

RESULTS
the test dataset
amda was tested on a subset of a previously analyzed and published microarray dataset  <cit> . the report obtained with amda is available in an additional pdf file that can be downloaded from the genopolis website  and some of its figures have been commented on the present paper. briefly, the test dataset is the result of two time-course experiments. mouse dendritic cells have been infected with two different forms of the leishmania mexicana parasite. the first strain  is the wild-type promastigote parasite, the second one  is the same parasite knocked-down in the lpg <dig> gene necessary for the biosynthesis of one of the most important proteins expressed on the parasite surface . four time points were obtained, nevertheless in this example only the first two were considered . the first experiment includes untreated dendritic cells  and the samples harvested after infection for  <dig> and  <dig> hours with the pro parasite . the second experiment includes the same baseline nt and samples harvested after infection for  <dig> and  <dig> hours with the ko parasite .

the results obtained with amda are briefly discussed in the next sections compared to the findings previously published with in vitro and in vivo validation  <cit> .

the wrapper function and the widget interface
the wrapper function provides support to execute a specific work-flow. this function coordinates the set of available tools based on the required tasks  and available data.

the easiest way to run the analysis is to use the tcltk widget interface. a basic and an advanced widget interfaces are available. if the former is chosen a very limited amount of inputs is prompted . otherwise it is possible to use an advanced widget interface allowing the definition of almost all of the possible settings, in a user-friendly way .

the analysis can start from affymetrix  <cit> cel image files, that will be analyzed generating the expression indexes, i.e. the expression values for each probeset. alternatively, the expression indexes can be stored and passed to amda functions through an exprset object.

data preprocessing
once the starting data are loaded some preprocessing functions are applied to perform quality checks, normalization and filtering. this part of the pipeline is also based on the affy and gcrma bioconductor libraries.

the applied methods depend on the provided data. for example, quantile array normalization  <cit>  is used if cel image files are provided and the rma algorithm  <cit>  is required. however, if the number of samples is small, the affymetrix algorithm is applied and the qspline method  <cit>  is used for the normalization of arrays. the reason for this choice is that the widely used quantile method is very useful if it is applied on probe-level data, but it makes the array distributions artificially similar if it is applied on summarized probeset data. in the latter case, a smoother normalization such as the qspline method is more indicated  <cit> .

quality checks are performed for affymetrix datasets to summarize global intensities of arrays and 5'/3' ratios of house-keeping control genes. the former data are useful to evaluate the average quality of the hybridization and the latter to assess the efficiency of in vitro crna synthesis reactions.

filtering of data is optionally performed to eliminate data that are likely to be noisy. probesets that are always called absent are eliminated. moreover a threshold is determined as the 95th  percentile of the overall distribution of expression values called absent. probesets whose maximum value is below this threshold are also removed.

experimental design and selection of deg
four types of experimental design are considered:

 <dig>  common baseline: each treatment is compared to a common baseline;

 <dig>  time-course: each time point is compared to the previous one in the provided order;

 <dig>  comparison of two common baseline experiments: in each of the two experiments deg are selected as in  <dig>  additionally, the selection of deg differently modulated between the two experiments is performed;

 <dig>  comparison of two time-course experiments: in each of the two experiments deg are selected as in  <dig>  additionally, the selection of deg differently modulated between the two experiments is performed.

four method are available for the selection of deg, according to the chosen experimental method and number of available replicates: limma, sam, plgem and empirical fold change.

limma  and sam  can be applied only if replicates are provided for every condition. limma can be used for all experimental designs while sam can be applied only in the first two. plgem  can be applied only with experimental design  <dig> and it is useful when none or few replicates are available for every condition except one. the empirical fold change method can be applied in case no, or few, replicates are available for every condition.

the wrapper function can autonomously choose the most appropriate method to use, based on the experimental design and the replication scheme. in this case the significance level of the selection is set by default depending on the chosen method. this is not a common feature in software where alternative methods are provided. nevertheless, it is possible to force this setting and choose one of the available methods. in this case the significance level has to be set too, according to the selected method. for the sam method it represents the target false discovery rate . in reality, sam does not allow direct control of the fdr but it provides a table containing an estimated fdr for each tested parameter delta. amda uses this table for determining the delta value, giving the estimated fdr that is closest to the target, a feature not implemented in the siggenes package.

finally, it is possible to select more than one method. in this case only deg identified by each one of the chosen methods would be considered.

we would like to point out that the automatic decision of the most appropriated method for the deg selection, and the possibility to use a combination of more than one method are novel features for this kind of software.

in the test analysis a comparison between two time courses was required. the limma method was used for the selection of deg in each time course and genes differently differentially expressed between the two time courses. the overall deg universe is represented in a heat-map and the genes differently modulated in the two time courses are highlighted in gold .

clustering of arrays and genes
hierarchical clustering of arrays is performed to evaluate quality of replicates and qualitatively asses the degree of differential expression. for this purpose standard agglomerative complete-linkage hierarchical clustering algorithm is used  similarly to the work of eisen et al.  <cit> . pearson's correlation is chosen as the similarity measure.

in addition, the overall set of genes that are differentially expressed in at least one condition is clustered with a partition algorithm to a number of clusters fixed by the user or automatically decided. in the latter case, the optimal number of clusters is estimated using the average silhouette scores method  <cit> . amda searches for a compromise between quality of clusters  and ease of biological interpretation , accordingly to an adjustable parameter as described in more details in the documentation of the function silpam. finally the normalized expression profiles of selected genes are clustered, according to the selected number of clusters, using the permutation around medoids method . the supplemental figure shows the clusters obtained with the test dataset, a subset of a previously analyzed and published dataset  <cit> . the results obtained agree with the findings of this publication, since two main classes of genes are expected without any more complicated gene expression pattern, i.e. genes up- and down-regulated during the time-course.

using a partitioning algorithm allows the user to easily deal with cluster gene-lists, in contrast to hierarchical algorithms. this can be easier for the user and simplify the functional evaluation of clustering results. in addition, the use of silhouette scores, although not new, is not a common feature in this kind of software.

functional evaluation
all generated lists of deg and all the obtained clusters of co-regulated genes are subsequently functionally evaluated, based on geneontology  and kegg pathways  annotation terms. the hyper-geometric distribution is used to compute p-values for assessing their over-representation in the gene lists. the terms are ranked based on their p-value and top ranking terms are selected.

in addition, go terms can be filtered to eliminate redundancy. this is achieved by eliminating a go term if one of its children maps to a set of genes overlapping more than 80%  to its parent's one. this allows to maintain only the most specific functional terms and to limit the amount of information to be reported in the figures.

it is also possible, and strongly suggested, to incorporate user-defined gene lists in the analysis. this allows the user to evaluate groups of genes that are a priori expected to be involved. sets of deg for each condition are functionally classified by generating figures where the statistic of differential expression for the probesets annotated with each significant annotation terms are reported. the results indicate several highly significant go terms that are fully compliant with the expected functional response for the pro4h sample of this dataset. in fact, up-regulation of immune response  and cytokine activity  families is well described in aebischer et al.  <cit> .

in addition, a graphical summary is produced where all the relevant annotation terms, identified in each set of deg, are reported. a heat-map is generated based on the p-value of each term in each condition. with this representation it is possible to easily select terms specific for some condition and biological processes, as well as molecular pathways/complexes, that are similarly affected under many experimental conditions. also in this case the results are in full concordance with those published in aebischer et al.  <cit> .

for example, many go terms linked to the inflammatory response  are mainly specific for pro4h samples  indicating the lack of pro-inflammatory response in the cells infected with the lpg-knock-out parasite.

we would like to emphasize that the use of custom gene families and this method of summarizing the results of a functional enrichment analysis are novel features for a microarray data analysis pipeline.

correspondence analysis
if more than two experimental conditions are provided, the overall set of genes that are differentially expressed in at least one condition is used to perform a correspondence analysis . briefly, this technique allows to reduce the multi-dimensionality of a microarray dataset from both the point of view of the samples and the genes. it results in a bi-dimensional plot where sample labels and gene labels are separated according to their similarity. thus, it is possible to select genes that are likely to be very significant for a particular set of samples, not necessarily foreseen during the experimental planning phase. a function is provided for selecting set of genes based on their coordinates in this plot. the selected set of genes is for instance suitable for a functional evaluation.

the report and other resulting data
most of the tools implemented in the amda pipeline produce some outputs by means of images, tables and/or annotated gene lists. a dynamically generated latex report embeds these outputs together with proper text explanations. we have chosen latex, because it is easy to handle, it is quite common in scientific literature production, and a number of converters to other formats exist . the text embedded in the report is based on a series of templates and aims to guide the user through the interpretation of the results.

many figures reference to files where annotated list of genes allow for a deeper investigation. these lists were generated by means of tools available in the bioconductor library annaffy. for example, among the deg differentially responsive in the first time-point of the two test experiments, the  <dig> probesets annotated with the inflammatory response go term  can be retrieved in the file ./deg/go/4hko-4hpro_go <dig> txt. this tab delimited file contains annotations as well as raw data and detection calls for the selected genes.

finally, the latex document can be automatically converted in a pdf file that can be easily zipped with the gene lists and sent by e-mail .

moreover, the main intermediate results obtained at each step are automatically saved as r objects and can be loaded into the r environment for further computation with the additional functions available in the amda package or in other r/bioconductor packages.

comparison of functionalities among amda and other software that perform a full microarray data-analysis
expression profiler and gepas include numerous tools but require adjustment of many parameters. finally, while expression profiler allows the transfer of generated data from a tool to another, gepas is more demanding. indeed it provides many independent tools, not conceived to be in a work-flow.

CONCLUSIONS
the amda package is one of the few free tools allowing a complete and fully automated analysis of an affymetrix microarray dataset. it is suitable to all researchers who want to easily and quickly obtain a preliminary analysis from their own or publicly available datasets, no specific training is required. therefore amda can be useful for either service provider or scientists without specific training in microarray data-analysis. moreover, since amda is fully integrated in the bioconductor environment, it can be used in conjunction with other bioconductor packages as part of a wider analysis. for the same reason, the wide and growing number of available tools are easy to integrate in amda.

availability and requirements
amda is freely available as an r gpl package in the services/bioinformatics section of genopolis 

software and hardware requirements are almost all the same of r/bioconductor, with the exception of system tools necessary for the conversion of the latex report into pdf in case of the installation in windows systems . the overall analysis does not require particular hardware. the time needed to terminate a wrapper function invocation depends on the choice of tools and on the dimension of the dataset. for example the test dataset referred to in the user manual consisting of  <dig> arrays and  <dig> experimental conditions can be analyzed starting from the image files and using all the provided tools in  <dig> minutes with a pc equipped with p <dig> processor and 2gb ram. the results of this example analysis are available on the web site and are in full concordance with the findings reported in the original publication  <cit> .

authors' contributions
mp conceived the software, wrote the code and the manuscript. np contributed in conceiving the software, writing the code and revising the manuscript. mf participated in conceiving the software and revising the manuscript. prc coordinated the study. all authors read and approved the final manuscript.

supplementary material
additional file 1
amda example report. pdf file containing the analysis report obtained by running amda on the test dataset described in "the test dataset" section; some of its figures have been commented in the present paper. this file can be downloaded from the services/bioinformatics section of the genopolis .

click here for file

 acknowledgements
we would like to thank ottavio beretta, marco brandizi, manuel mayhaus, filippo petralia and andrea splendiani for their support and useful discussions. we would like to also thank the developers and maintainers of r and bioconductor packages, which are extensively used in amda.

this work was supported by grants from the european commission 6th framework program, the italian ministry of education and research , the italian ministry of health, sekmed, the foundation cariplo and the genopolis consortium.

figures and tables
