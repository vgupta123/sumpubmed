BACKGROUND
next-generation sequencing  technologies have dramatically changed genomic research. ngs instruments, the so-called second-generation sequencers, generate large volumes of data compared with conventional sanger sequencers. before  <dig>  although the cost of reading a whole genome was rapidly decreasing, the use of ngs technologies was still limited to large genome sequencing centers because of technical and logistical difficulties associated with the operation of the instruments and requirements for computer hardware and data analysis. the advent of benchtop sequencers has accelerated sequencing efforts in small centers and laboratories. for example, the  <dig> gs junior , released by roche in early  <dig> as the first benchtop sequencer, uses the same emulsion pcr technology
 <cit>  as the roche gs flx. the life technologies ion pgm  benchtop sequencer, which was launched at the beginning of  <dig>  utilizes semiconductor technology
 <cit> . the illumina miseq  benchtop sequencer became available at the end of  <dig> and employs the same sequencing-by-synthesis technology
 <cit>  as the illumina gaii and hiseq sequencers. with the annual emergence of new ngs instruments, experimental procedures such as library preparation and analysis methods require continual improvement.

second-generation sequencers generate massive amounts of short reads, which differ in throughput and length from reads produced by sanger sequencers. to assemble massive amounts of short reads, a new type of algorithm using de bruijn graphs has flourished, as illustrated by a series of genome assemblers including abyss
 <cit> , allpaths-lg
 <cit> , velvet
 <cit> , and soapdenovo
 <cit> . although these algorithms
 have been developed to produce high-quality finished-grade genomes, it remains a challenge to assemble long contigs spanning an entire genome. one of the important factors in successfully obtaining finished genomes is resolving repetitive regions scattered across the genome. it is problematic to reconstruct long repetitive regions by assembling reads shorter than the repetitive regions. paired ends and mate pairs have been used to tackle this problem. mate pairs improved scaffold length, but the results using mate-pair assembly have usually been far from finished grade
 <cit> .

to address this issue, reads longer than repetitive regions may offer a solution to the assembly problem. the recently launched third-generation pacific biosciences rs sequencer  system
 <cit>  generates long reads with a mean length of  <dig>  kbp and with randomly distributed sequencing errors. this evolutionary technology demands a new algorithm to process sequence reads because of the different nature of its reads, whose nucleotide-level accuracy is only 85%
 <cit> . therefore, several algorithms first correct sequencing errors in reads and then assemble the error-corrected reads
. pacbio has the advantage of generating long reads but at a throughput lower than that of the second-generation sequencers. one of the disadvantages of pacbio is that the initial installation is more expensive than that of benchtop second-generation sequencers . combining second- and third-generation sequencing data may be an option
 <cit> ; however, these hybrid methods offer limited efficiency because they require more labor and consumables costs for additional library preparation.

given that various sequencing instruments and software are available for genome sequencing and are evolving, selecting the best one or the best combination is difficult. performance comparisons of ngs instruments, including that of a third-generation sequencer, have been previously published
; however, considering the rapid improvement of ngs technologies, frequent comparisons are valuable for selecting the platform providing the best results. therefore, we performed an updated comparison study of second- and third-generation sequencers using the bacterial genome of vibrio parahaemolyticus, consisting of two chromosomes. because of the presence of two chromosomes with higher copy numbers of rrna operons than found in other bacteria, it was difficult to finish the genome sequence
 <cit> . in this study, we demonstrated the reconstruction of the v. parahaemolyticus genome using current sequencers.

RESULTS
a summary of sequence run data and their assembly results is shown in table 
 <dig>  and the distribution of the sequence read quality of each sequencer is shown in additional file
2: figure s <dig>  the assembler for each sequencer was selected on the basis of a previous study and our experiences
 <cit> . to evaluate the accuracy of the generated contigs, we compared them with the v. parahaemolyticus reference genome
 <cit>  using quast v <dig> 
 <cit> . table 
 <dig> shows the result of the accuracy evaluation.table  <dig> 
data statistics for sequence run and assemblies



assembler
newbler
newbler
clc
sprai
gs jr, ion pgm, and miseq data are based on a single run. pacbio data are from three cells. the upper part of the table shows read statistics and the lower part shows the statistics of the best assembly. *number of reads of pacbio is the number of subreads longer than 500 bp.
accuracy of assembled contigs with respect to the reference genome


generated contigs were compared with the reference genome using quast v <dig> 
 <cit> . the number of indels is the total number of insertions and deletions in the aligned bases. the number of relocations, inversions, and translocations are classified as misassemblies. a relocation is defined as a misassembly in which the left and right flanking sequences both align to the same chromosome on the reference but are either >1 kb apart or overlap by >1 kb. an inversion is a misassembly in which the left and right flanking sequences both align to the same chromosome but on opposite strands. a translocation is a misassembly in which the flanking sequences align on different chromosomes. genome coverage is the percentage of bases aligned to the reference genome.



genome assembly using gs junior
a single sequencing run of gs jr yielded  <dig> mbp with  <dig>  reads, corresponding to 9× coverage of the v. parahaemolyticus genome. the mean length of the gs jr reads was 418 bp. we selected the newbler assembler
 <cit> , which is optimized for roche  <dig> chemistry
 <cit> . the newbler assembly consisted of  <dig> contigs with maximum length  <dig>  bp. the total length of the contigs was  <dig> ,921 bp. long reads are usually superior to short reads for the reconstruction of long contigs; however, this fragmented assembly suggested that low-coverage reads are insufficient for building a small number of long contigs.

the generated contigs were evaluated by comparison with the v. parahaemolyticus genome. the contig coverage of the v. parahaemolyticus genome was  <dig> %. the total number of mismatches was  <dig>  and the number of mismatches per  <dig> kbp was  <dig> . the total number of insertions and deletions  was  <dig>  and the number of indels per  <dig> kbp was  <dig> . these higher rates of errors compared with the other sequencers were largely because of the homopolymer error of  <dig> chemistry
 <cit> .

genome assembly using ion pgm
a single run from ion pgm using the ion  <dig> chip generated  <dig>  gbp with  <dig> , <dig> reads. the mean length of the reads was 290 bp. the read coverage of the genome was 279×. we selected newbler for ion pgm because it is known to produce longer contigs for ion pgm as well
 <cit>  because of the similarity of its sequencing chemistry to that of roche  <dig> 

we employed random sampling to reduce the number of input reads
 <cit>  and attempted to find the best amount of input data size for assembly
 <cit> . six sets of  <dig> inputs were prepared. the size of the inputs in each set was  <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig> mbp, respectively. these sizes correspond to 19×, 39×, 58×, 77×, 96×, and 116× coverage, respectively. the maximum contig length and n <dig> contig length of all results are shown in additional file
3: figure s <dig>  the best subset contained  <dig> contigs with maximum contig length of  <dig>  bp in the  <dig> mbp data set . the number of reads used for the assembly was  <dig> , <dig>  corresponding to 77× genome coverage. the n <dig> contig length was  <dig>  bp, and the total length of the contigs was  <dig> ,085 bp.

subsequently, the accuracy was evaluated as that for the gs jr contigs. the contig coverage of the genome was  <dig> %. the total number of mismatches was  <dig>  and the number of mismatches per  <dig> kbp was  <dig> . the total number of indels was  <dig> , and the number of indels per  <dig> kbp was  <dig> . homopolymer error has often been reported for ion pgm
 <cit> , and we could confirm this effect in the assembled contigs, as exemplified in additional file
4: figure s <dig> 

genome assembly using miseq
a single run of the miseq sequencer generated  <dig>  gbp with  <dig> , <dig> reads in pairs. the read coverage of the genome was  <dig> ×. the mean length of the reads was 251 bp. we used clc assembly cell as the assembler, which is known as a short-read assembler and has been used for a benchmark sequence comparison
 <cit> . we performed random sampling to find the best subset of reads for assembly. the best subset yielded  <dig> contigs with a maximum contig length of  <dig>  bp. the number of reads used for the assembly was  <dig> , <dig>  corresponding to 58× genome coverage. the total length of the contigs was  <dig> ,771 bp and n <dig> contig length was  <dig>  bp.

the contigs contained  <dig> mismatches in total and  <dig>  mismatches per  <dig> kbp. there were  <dig> indels in total and  <dig>  indels per  <dig> kbp. miseq has a different error profile than ion pgm. miseq errors are known to occur in ggc motifs
 <cit> , and we confirmed this error in the generated contigs. the examples of errors are shown in additional file
4: figure s <dig> .

evaluation of random sampling
we used random sampling for the assembly of ion pgm and miseq data and selected the best subset. for comparison, additional file
5: table s <dig> shows a summary of assemblies generated by the complete set of reads. assembly using all 279× coverage reads generated by ion pgm resulted in  <dig> contigs that were much more fragmented than the  <dig> contigs using the sampled reads. likewise, the n <dig> contig length using all reads is  <dig>  bp, a number much smaller than the  <dig>  bp obtained with randomly sampled reads. miseq generated coverage of  <dig> × in a single run and  <dig> contigs were generated using all reads by a single run of miseq, whereas the number of contigs assembled from the sampled reads was  <dig>  these results suggest that an excessive number of reads does not help and can even harm genome assembly. widely used assemblers do not assume excess coverage, suggesting that the number of reads fed to assemblers should be optimized by random sampling. the optimized sequencing coverage was reported to be <100
 <cit> .

to determine the factors that improve assembly by random sampling, we compared the best subset with the worst. the subset yielding the fewest contigs was considered the best. the best and worst sampled reads were mapped to the reference v. parahaemolyticus genome. on a closer examination of the junction regions, where reads from the worst sampled reads were unable to connect contigs , we found that the high-quality reads perfectly matching the reference genome were uniformly distributed in the gap regions of the best sampled reads . in contrast, the distribution of the high-quality reads from the worst sampled reads was not uniform, suggesting that nonuniform coverage causes a disconnection of contigs. random sampling enables us to generate different combinations of read sets, some of which contain high-quality reads that uniformly span the genome and aid in constructing long contigs. this finding indicates that random sampling would be a simple and effective procedure for finding the optimum coverage and best combination of reads for de novo assembly when excess reads are available.

genome assembly using pacbio
three cells of pacbio data yielded  <dig>  subreads longer than 500 bp, amounting to  <dig> mbp in total and corresponding to 73× coverage of the v. parahaemolyticus genome. several assemblers have been developed for pacbio data. pacbiotoca is a program that corrects sequencing errors using other sequencers’ reads
 <cit>  or using pacbio reads themselves. hgap does not require other sequencers’ reads to correct errors
 <cit> . we employed sprai
 <cit> , a new tool for correcting pacbio sequencing errors without other sequencers’ reads using multiple alignments of raw pacbio reads. the sprai algorithm and its performance are shown in additional file
 <dig>  the assembly by sprai generated  <dig> contigs using three-cell data, showing better assembly performance than that by hgap. the results are shown in additional file
8: table s <dig> and additional file
9: figure s <dig>  the maximum length of the contigs was  <dig> ,561 bp, and the second longest contig was  <dig> ,537 bp. the lengths of these two contigs are almost equal to those of the v. parahaemolyticus genome chromosomes  <dig> and  <dig> . the other  <dig> contigs were all < <dig> kbp. the contig length distribution is shown in additional file
9: figure s <dig>  the two chromosomes of v. parahaemolyticus were reconstructed without gaps by pacbio reads alone, without using reads from other sequencing platforms or jumping libraries.

to further validate these two contigs, we evaluated their accuracy along with all  <dig> contigs . the coverage of all  <dig> contigs was  <dig> %, whereas that of the longest two contigs was  <dig> %. the  <dig> contigs contained a total of  <dig> mismatches, whereas the longest two contigs contained  <dig>  the number of mismatches per  <dig> kbp was  <dig>  for the  <dig> contigs and  <dig>  for the longest two contigs. the numbers of indels were  <dig> and  <dig>  and the numbers of indels per  <dig> kbp were  <dig>  and  <dig> , respectively. the majority of pacbio sequencing errors were indels, a characteristic known to be a shortcoming of pacbio
 <cit> .

comparison of assembled contigs
all contigs from gs jr, ion pgm, miseq, and pacbio were aligned to the v. parahaemolyticus genome, as summarized in figure 
 <dig>  the contig length distributions are shown in additional file
10: figure s <dig>  the sequence assembled using the pacbio sequencer was the highest in quality and genome coverage . the sprai assembler corrected the sequencing errors of pacbio and successfully assembled the reads into two contigs corresponding to the two chromosomes. miseq, ion pgm, and gs jr all left gaps across contigs. we found that these gaps often fell into rrna tracts in the genome.figure  <dig> 
contig alignment against the
v. parahaemolyticus
genome. a alignment of contigs to v. parahaemolyticus chromosome  <dig>  pacbio, miseq, ion pgm, and gs jr contigs are aligned to chromosome  <dig> and visualized with circos
 <cit> .

from outer to inter rings: forward cds, reverse cds, trna, rrna, pacbio contigs, miseq contigs, ion pgm contigs, gs jr contigs, %gc plot, and gc skews. b alignment of contigs to v. parahaemolyticus chromosome  <dig> pacbio, miseq, ion pgm, and gs jr contigs are aligned to chromosome  <dig> and visualized using a circos plot. from outer to inter rings: forward cds, reverse cds, trna, rrna, pacbio contigs, miseq contigs, ion pgm contigs, gs jr contigs, %gc plot, and gc skews.



the power of pacbio to generate long reads shows great promise for the assembly of bacterial sequences without hybrid assembly
 <cit> . previous studies concluded that the accuracy and length of the contigs using pacbio alone surpassed those using second-generation sequencers. however, these studies analyzed bacterial genomes with a single chromosome. in contrast, the present study examined a more complex genome comprising two chromosomes containing  <dig> copies of rrna operons. the lengths of 23s rrna and 16s rrna sequences are approximately  <dig>  kbp and  <dig>  kbp, respectively, and the mean read length obtained using pacbio was  <dig>  kbp, making it possible to correctly determine the absolute positions of multiple rrna coding regions . the difficulty of the v. parahaemolyticus genome assembly is caused by these rrna repetitive regions and by similar regions between chromosomes  <dig> and  <dig>  which may be the cause of misassembly . these complications made assembly difficult for the second-generation sequencers.

previously, the v. parahaemolyticus genome was sequenced by the sanger method using multiple libraries with different insert sizes
 <cit> . libraries with long insert size  were used to construct the scaffolds. however, repetitive regions such as rrna operons required to be independently sequenced to identify the absolute positions. from this experience, we know that jumping libraries would not be useful for accurate reconstruction of the repetitive regions. long reads that cover not only entire repeat regions but both ends of each repeat region are necessary to determine their absolute positions.

CONCLUSIONS
we compared the abilities of currently available sequencers to assemble a bacterial genome. the use of random sampling improved the assembly of the sequence data from the second-generation sequencers. in the course of upgrading the performance of the second-generation sequencers, the best-subset selection of sequencing data would be more important to make a good assembly of bacterial genome. as described in previous reports
, pacbio achieved a long continuous, finished-grade assembly of a complex bacterial genome. sequencing technology and chemistry are evolving at a dramatic speed. future chemistry and instrument updates will bring further improvements, such as support for the sequencing and assembly of higher organisms with multiple chromosomes and the coexistence of multiple genomes in symbiotic organisms. several challenges in assembling the genomes of higher organisms using pacbio have been published
, although hybrid assembly is required because of the limitations of current pacbio technology including low throughput, high cost, and the amount of dna required. our study and these recent challenges reinforce the importance of performing frequent evaluations of the rapidly improving hardware and software for determining genomic sequences.

