BACKGROUND
the process description language
figure
 <dig> shows the process description  language reference card. this section gives an overview of the different graphical elements of pd. detailed descriptions, the grammar, and layout rules of pd can be found in the specification of the language
 <cit> .
 <cit> .

entity pool nodes 
an entity pool is a population of entities that cannot be distinguished from each other. for example, all molecule entities that fulfill the same role in a given process form an entity pool. an entity pool can represent different granularity levels, such as all the proteins or only certain forms of a protein. there are several types of epns: unspecified entities, simple chemicals, macromolecules, nucleic acid features, and complexes. in addition, there are glyphs for multimer representation . pd also has three conceptual entities: source, sink, and perturbing agent. biochemical networks can be affected by external influences represented by the perturbing agent glyph. source and sink represent the possibilities to acquire or remove entities.

auxiliary units
auxiliary units are glyphs that enhance or decorate other glyphs and provide additional information. examples are annotations , state information , or duplications of epns . units of information and state variables may be added multiple times to a glyph.

process nodes 
process nodes represent processes that transform one or more entity pools into one or more entity pools. types are 

• process: a generic process which transforms a set of entity pools into another

• omitted process: a process which exists but is not shown on the map in detail

• uncertain process: a process which may not exist

• association: a non-covalent binding of objects

• dissociation: a rupture of a non-covalent binding of objects

• phenotype: a process which generates phenotypes.

logical operators
sbgn pd contains the three logical operators and, or, and not.

other nodes
sbgn pd contains some nodes which cannot be assigned to the previous categories. 

• compartment: a logical or physical structure that contains epns

• submap and tag: a structure to encapsulate processes and handle references to substructures

arcs
arcs are edges that connect epns and pns. the symbols attached to their extremities indicate their semantics. 

• consumption: the entity pool is consumed by the process

• production: the entity pool is produced by the process

• stimulation: the flux of the process is positively affected

• catalysis: a particular case of stimulation

• inhibition: the flux of the process is negatively affected

• necessary stimulation: stimulation that is necessary for a process to take place

• modulation: the flux of the process is affected positively, negatively or even in both ways

• logical arc: represents the influence of an epn to the outcome of a logic operator

• equivalence arc: equivalence between epn and tag

the activity flow language
figure
 <dig> shows the activity flow  language reference card. this section gives an overview of the different graphical elements of af. detailed descriptions, the grammar, and layout rules of af can be found in the specification of the language
 <cit> .
 <cit> .

activity nodes 
an activity node represents the activity of an entity or an entity pool but not the entities themselves. sbgn af uses one glyph to represent activities from all biological entities. the nature of the molecule that the activity comes from, such as simple chemical or macromolecule, can be encoded in the units of information. a biochemical network can generate phenotypes or affect processes which are represented by the phenotype glyph. it can also be affected by external influences which are represented by the perturbation glyph.

auxiliary units
for biological activities the nature of the entity where the activity originates can be represented using units of information. different symbols which are identical to the entity pool node symbols in sbgn pd are used.

logical operators
sbgn af contains the four logical operators and, or, not, and delay .

other nodes
sbgn af contains some nodes which can not be assigned to the previous categories.

• compartment: a logical or physical structure that contains epns

• submap and tag: a structure to encapsulate processes and handle references to substructures

arcs
arcs are edges that link ans together. the symbols attached to their extremities indicate their semantics. 

• positive influence: an action that produces a positive/activating effect from one activity to another

• negative influence: an action that produces a negative/inhibiting effect from one activity to another

• unknown influence: used when the effect exerted from one activity to another is not well understood

• necessary stimulation: influence that has to be present for the target activity to take place

• logical arc: used to indicate that an entity influences the outcome of a logic operator

• equivalence arc: used to indicate that all entities marked by a tag are equivalent

methods
translation from pd to af
there are many ways to translate a pd map to an af map, depending on the level of granularity or different aspects of the map. therefore a semi-automatic concept for the translation process was designed.

the two languages have several common glyphs. this includes compartment, phenotype, perturbating agent, submap, tag, and, or, and not as well as logical arcs and equivalence arcs. these glyphs can be directly translated because they exist in both languages and have the same meaning. hereby the logical operators represent a special case. in pd the target of a logical operator is always a process node . as a result from a straightforward translation there could be multiple outgoing modulating arcs from the logical operators. this is not allowed in sbgn and hence the translation must generate multiple logical operators with the same ingoing arcs and exclusive outgoing arcs .

translation of nodes
sbgn pd also contains glyphs which have no corresponding glyph in sbgn af and therefore have to be translated in a different way. the translation of entity pool nodes is straightforward. as a pendant for these in af there are only the activity nodes, but epns have auxiliary units which are equal in shape and meaning to the entity pool nodes. figure
 <dig> shows how each entity pool node is translated. at this point some information may be lost because multimers cannot be represented in af . furthermore the auxiliary units of the pd nodes are lost.

the pd language allows nodes with the same label and different auxiliary units in one compartment. in af the activity nodes have only one auxiliary unit which defines the nature of the entity from which the activity comes. there are two options for translating nodes with the same label and different auxiliary units. either they can be fused into one activity node and the old auxiliary units are discarded , or they are translated independently and the labels of the auxiliary units are concatenated to the label of the nodes . the two possibilities are depicted in figure
 <dig> 

sink and source nodes can not be translated as there are no corresponding glyphs in af. however, this translation is also unnecessary as af depicts the flow of activities and not the flow of the molecules themselves.

another entity pool node glyph is the complex. in pd complexes can be defined with a label and/or with other entity pool nodes as decorations  of the complex. af does not allow such complex decorations for activity nodes. if the pd node has a label, this is used as a label for the activity node, otherwise the label of the new af node is created by concatenating the labels of the decorations of the pd complex .

furthermore, nodes with clonemarkers increase the complexity of the translation process. in pd clonemarkers are used to represent entity pool nodes which occur several times in a compartment. the concept of clonemarkers is not available in af. there are several possibilities for translating nodes with clonemarkers to af . first, it is possible to fuse the nodes and to bundle all of their arcs into this new node , but the graphical representation could become confusing or unclear depending on the size and the density of the map. second, the nodes with clonemarkers may be deleted . in many cases co-factors, such as atp, appear several times on a map and therefore have clonemarkers. these co-factors are not always necessary for the flow of information and may be deleted for reasons of clarity. the third possibility for the translation is to number the nodes serially and to add the number to the label of the node . this method should only be used when the map is edited afterwards and the labels are changed manually since the grammar of the af language would be disregarded. the translation of nodes with clonemarkers is shown in figure
 <dig> 

translation of arcs
logical arcs and equivalence arcs can be translated directly. the translation of other arcs is not straightforward. these arcs are connected to the different types of process nodes . these process nodes are central glyphs of pd maps as they represent all reactions which take place in the biological system. process nodes always have at least one incoming consumption arc and one outgoing production arc or, in case of a reversible reaction, at least one production arc incoming and outgoing. this implies that a relation can be set between both sides of the reaction. in addition one or more modulating arcs can be connected to each process node. the modulating arcs affect the reaction and therefore they are also in relation to both sides of the reaction but they do not affect each other.

how these relations appear in the sbgn pd language and how they might be translated is shown in figure
 <dig> . in addition figure
 <dig> shows two further translation possibilities. translation p <dig> can be used to show the relations between neighbouring modulations which share a common substrate/product, and translation p <dig> can be used to represent the fact that all substrates and modifiers are needed for this process.

each kind of modulating arc has a specific translation. in many cases the translation is straightforward, i. e., a stimulation should be translated into a positive influence, but there are other cases in which it is not quite clear. a catalysis can be translated into a positive influence, but sometimes it could also be seen as a necessary stimulation, because under normal conditions most reactions do not process without the appropriate enzyme. the relation modulation ↔ consumption might be translated into a negative influence, but also the translation to an unknown influence is worth considering. different possibilities for the relation modulation ↔ production are shown in figure
 <dig> 

table
 <dig> contains some recommendations on the translation of the different modulating arcs.

translation algorithm
in the first step the entity pool nodes of the pd map are translated to the corresponding activity nodes for the af map. nodes with the same label and different auxiliary units will be translated according to the choices made by the user. depending on the chosen method, nodes with a clonemarker will be either combined into one biological activity, or numbered serially, or deleted completely.

the second step of the translation algorithm is the translation of the arcs. here the process nodes are the central nodes of pd maps, hence they are traversed and tested as to whether a translation rule has to be applied.

in the last step it may be necessary to revise the created af map for invalid or redundant glyphs. for example, logical operators might have multiple outgoing modulating arcs because their target process node has multiple incoming and outgoing arcs. in these cases the logical operator with all its incoming arcs is multiplied so that each has exactly one outgoing modulating arc. furthermore, the logical operators and and or might have only one incoming arc. this can happen because nodes were deleted from the map during the translation. these logical operators are invalid and are deleted from the map during the revision, and the source glyph and target glyph of their arcs are connected directly.

translation templates
in the previous sections several rules for the translation of sbgn pd maps to sbgn af maps have been described. these rules provide the possibility for a dynamic translation which can be adapted to the required results. however, four translation templates have been defined which combine translation rules for common use cases of sbgn pd to af translations. these templates will be presented in the following subsections using the pd map in figure
 <dig> as an example.

enzyme activities template
the enzyme activities template shows the influences which the enzymes have on the metabolites.

in case of irreversible reactions this template produces a modulating arc in af corresponding to the modulating arc in pd in the production direction of the process  and an unknown influence in the consumption direction.

in case of reversible reactions the same rule is applied in both directions of the process as for the production direction of irreversible reactions.

figure
 <dig> shows the af translation of the map in figure
 <dig>  the map in the middle of figure
 <dig> demonstrates how the glycolysis would look when the enzyme activities template is applied for the translation.
 <dig> 

metabolite activities template
the metabolite activities template focuses on the consumption and production arcs in the network. it shows how the metabolites are converted into each other without taking into account potential modulating arcs in the system. this is the template of choice for translation if the purpose is to show only the material flow in the network. the map at the bottom of figure
 <dig> shows how the glycolysis would look when the metabolite activities template is applied for the translation. figure
 <dig> shows the top left part of this map which corresponds to the map in figure
 <dig> 
 <dig> 

combined activities template
the combined activities template is a combination of the two templates described above. for this template the translation rules lead to an af map which is very similar to the pd map since process nodes are basically replaced by the logical operator and. the only disadvantage is that logical operators are only allowed to have one outgoing arc. if a process node has more than one production arc, for each a logical operator and is added to the af map. if a process node has more than one incoming modulating arc, all modulating arcs of the same type are connected to a new logical operator or which is then connected to a logical operator and. figure
 <dig> shows the af translation of the map in figure
 <dig>  the map in the middle of figure
 <dig> demonstrates how the glycolysis would look when the combined activities template is applied for the translation.
 <dig> 

simple enzyme activities template
the simple enzyme activities template is the complementary template to the metabolite activities one. it shows how enzyme activities affect other enzymes without going into detail about the underlying processes. figure
 <dig> shows the af translation of the map in figure
 <dig>  the map at the bottom of figure
 <dig> shows how the glycolysis would look when the simple enzyme activities template is applied for the translation.
 <dig> 

RESULTS
implementation
the translation of sbgn pd maps into sbgn af maps is implemented as a tool in sbgn-ed  .

configuration
a number of translation rules were defined earlier describing different alternatives for the translation of pd maps to af maps. a configuration dialogue provides the user with the possibility to set up particular translation rules to create the desired af map from a pd map.

the default configuration dialog is shown at the top of figure
 <dig>  here the user can choose one of the translation templates . with a click on "more details" the user can expand the configuration dialog to set up a translation in more detail as shown at the bottom of figure
 <dig>  the detailed configuration dialog shows all the defined translation rules which can now be changed/combined manually to achieve the desired result.

graphical representation
if the user would translate, edit and layout the af map manually, it would be a very time consuming and intensive process. automatic translation and layout can speed up this process. however, a problem with automatic layout is that changes of the map during the translation can disturb the layout in some manner. for example, an added arc may now cross existing arcs or two nodes may overlap. straightforward application of an existing layout algorithm to the map for the purpose of eliminating these overlaps may totally change the layout, thereby destroying the user’s "mental map"
 <cit> . the mental map can be imagined as the imprint of the map in the mind of the user. if the map is changed too much, it no longer corresponds with this mental imprint and may cause confusion. therefore we do not apply a layout algorithm to the map but try to preserve the mental map of the pd map within the af map.

in principle the described translation algorithm adopts all nodes in the af map in size, position and colour as they appear in the pd map to maintain the mental map during translation. nevertheless some exceptions exist for the positioning of nodes in the af map. when nodes are combined to one node the average position of these nodes is calculated as the position for the new node. another exception is the necessary duplication of logical operators with more than one outgoing arc. the duplicated nodes are arranged spirally around the position of the original node.

interaction between a pd map and the corresponding af map
after the translation has been finished both the original pd map and the new af map are shown in a linked view in sbgn-ed. thus a user can select on one or more elements in the one map and obtain the corresponding elements highlighted in the other map, a method called linking & brushing. since the translation of a pd map into an af map is always associated with a loss of information the linked view together with the linking & brushing provides a possibility to the user to evaluate the translation result and to adapt the translation rules if necessary.

figure
 <dig> shows interactive highlighting between a pd map and its corresponding af map. in the first row none of the graph elements is selected. after selection of node "s" in the pd map this node and the corresponding node "s" in the af map are highlighted. in the third row the possibility to select more than one graph element is shown and in the fourth row the possibility to also select arcs is demonstrated.

it is possible that a pd map has links to multiple af maps at the same time. if this pd map is translated more than once into an af map without closing any of the af maps, all links are preserved, and therefore linking & brushing between multiple views is possible.

examples
we present two examples: the translation of a metabolic network , and the translation of a signalling pathway .

the metabolic network in pd is shown in figures
 <dig> and
 <dig>  and is also provided as additional file . the pd map has been translated to an af map applying the "enzyme activities" template , applying the "metabolite activities" template , applying the "combined activities"template , and applying the "simple enzyme activities" template .

the signalling network in pd is shown in figures
 <dig> and
 <dig>  and is also provided as additional file . the pd map has been translated to an af map applying the "combined activities" template , and setting the translation rules manually .

another example for a large regulatory network is provided as additional file 
 <cit> .

CONCLUSIONS
in this paper we presented methods for translating sbgn pd maps into af maps and for interacting between these maps. as shown the complex pd maps become much smaller and more manageable when translated into af. to navigate easily between these maps the brushing method is the tool of choice. with this highlighting it is very easy to see which part of one map corresponds to which part of the other map. these methods are integrated in sbgn-ed.

the translation of pd into af is an important but also only an initial step in translating between different sbgn languages. we hope that our work inspires research on translation methods between other sbgn languages.

endnote
a for a list of sbgn supporting software see
http://www.sbgn.org/sbgn_software.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
tv implemented the pd to af translation in sbgn-ed. tc advised about the implementation. fs supervised the project. all authors contributed to the intellectual design of the described techniques and contributed to writing the paper. all authors read and approved the final manuscript.

supplementary material
additional file 1
example file glycolysis. this file provides the sbgn pd map for glycolysis used for the pd to af translations shown in figures
 <dig> and
 <dig> 

click here for file

 additional file 2
example file mapk cascade. this file provides the sbgn pd map for mapk cascade used for the pd to af translations shown in figures
 <dig> and
 <dig> 

click here for file

 additional file 3
translation of the "lec1/afl-b <dig> factors and maturation gene control" map from the rimas database  <cit>  . top: initial pd map, bottom: translated af map. the translation rules were based on the rules provided by the "enzyme activities" template. additionally the option "fuse all marked nodes to one node" was activated.

click here for file

 additional file 4
example file "lec1/afl-b <dig> factors and maturation gene control". this file provides the sbgn pd map for "lec1/afl-b <dig> factors and maturation gene control" used for the pd to af translation shown in additional file
 <dig> 

click here for file

 acknowledgements
this work has been supported by the german ministry of education and research  .
