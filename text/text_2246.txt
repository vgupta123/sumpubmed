BACKGROUND
combinations of genetic variants occurring on the same dna molecule are known as haplotypes. the term haplotype was first used in  <dig> in conjunction with the human leukocyte antigen  system, a set of genes located close together on chromosome  <dig>  this system of genes is important for determining tissue compatibility for transplants  <cit> . when studying haplotypes one distinguishes phased haplotypes and unphased genotypes. for a phased haplotype both the maternal and paternal alleles are known, either by directly inferring the information or using haplotype phasing tools. in contrast to that, for unphased genotypes the chromosomal origin for each allele is unknown.

especially collecting and comparing single nucleotide variations  between different human populations has become of central interest. abecasis et al. showed that human individuals have around 4× <dig> variants on average  <cit> . these variants can have great influence on genes, leading to malfunction or even complete loss of function and consequently to genetically related diseases such as cancer. to fully understand the mechanisms leading to disease, a catalog of all existing variants, especially of rare ones that are only seen in a single or very few individuals is required  <cit> . in addition, humans are diploid organisms, which means that they have two copies of each chromosome. genes or other non-coding sequences constituted by two homologous chromosomes can be genetically very different.

often the term haplotype is also used to refer to clusters of inherited single nucleotide polymorphisms . by examining haplotypes, researchers wish to identify patterns of genetic variation that are associated with descent, phenotype or disease state. however, studying diploid, omni- or even polyploid organisms requires additional phase information, linking a specific genetic variation to its respective chromosome. only by including such information one is able to understand the impact of genetic variations.

furthermore, a widely used strategy in this context is to compare samples from several populations and to identify genomic loci or regions with significant genetic differentiation between these populations.

many studies that genotype individuals have already been and are currently performed. the international hapmap project  <cit>  for example is an international consortium of scientists who catalog the complete genetic variation in the human genome. as of today more than  <dig>  million snps have been listed in hapmap.

another example is the collaborative oncological gene-environment study  which tries to understand the genetic susceptibility of different hormone-related cancers  <cit> . most haplotypes do not span more than one gene, so studying local relationships of snps is the most common use case.

genome-wide association studies  have been used successfully for dissecting the genetic causes underlying certain traits and diseases. work by the wellcome trust case control consortium  has identified variations-associated phenotypes ranging from malaria  <cit>  to myocardial infarction   <cit> . typically, gwas data are displayed using manhattan plots, a type of scatter plot to display dense data, usually with non-zero amplitude. in gwas manhattan plots, genomic coordinates are displayed along the x-axis, and the y-axis represents the negative logarithm of the associated p-value for each polymorphism in the data set. because strong associations have very small p-values, their negative logarithms will be the largest and visibly most prominent  <cit> . a number of tools or even whole suites are specifically designed to visually investigate variants, either separately or in their haplotype contexts. the snp & variation suite  <cit>  is a collection of analytical tools for managing, analyzing and visualizing genomic and phenotypic data. however, only well-established visualizations for snp data are provided, most do not scale well with big data. flapjack offers interactive visualization of large-scale genotype data with a focus on plant data  <cit> . its emphasis is put on real-time rendering of the data and combining genotype data with phenotype or qtl data. some genome browsers also offer additional visualization modes that allow visualization of genotype cohort data by agglomerating data from many individual genomes. savant  <cit>  in its latest version offers visualization for multi-individual genotype data sets by agglomerating snps from larger genomic regions and linking them with a linkage disequilibrium  plot as originally introduced by haploview  <cit> .

while all described genotype and haplotype visualization tools so far mostly focus on showing raw data, haploscope visualizes haplotype cluster frequencies that are estimated by statistical models for population haplotype variation  <cit> . another example in this area is ixora  <cit> , which is a framework for inferring haplotypes from genotyped population data and for associating observed phenotypes with the inferred haplotypes. it features statistical tests, such as fisher’s exact test, and visualization methods that help to study parental haplotype distributions or to spot unexpected distortions. these visualizations basically include line charts for haplotype frequency distributions as well as bar plots for haplotype visualization. the user can easily observe haplotypes, missing data, position of the markers on chromosome maps and co-localization with qtl.

in general, the analysis of haplotype data is a challenging scientific endeavor, since it involves the scalable processing of very large, heterogeneous, incomplete, and potentially conflicting data. clearly, visualizing the data has been shown to aid in gaining better understanding of it. furthermore, researchers wish to view all facets of haplotype data, including the spatial distribution of the loci along a chromosome, the specificity of the genotypes, the different frequencies of haplotypes in different subgroups, and possibly also correlation of occurring haplotypes. for this, static visualizations are insufficient, since such complex data needs to be addressed on many different levels, and here in particular interactivity is of utmost importance.

the challenges of visualizing haplotype data could be exacerbated when it comes to analyzing phased haplotype data that are for example derived from studies  <cit>  such as the  <dig> genomes project. until today an interactive tool for the visualization of phased haplotype data has been missing. to fill the gap, we implemented inphap, short for . inphap can be used in several ways, ranging from the investigation of phased haplotypes or unphased genotypes on the single nucleotide level to the visualization of the data in a more general way showing the similarities and dissimilarities between several subject groups of interest. in the following, inphap and its features are presented, accompanied by a proof of concept application to data from phase  <dig> of the  <dig> genomes project.

methods
this section presents the general framework and the design choices we made for inphap.

inphap is an interactive visualization tool written in the java programming language. it makes use of the general idea of ihat  <cit> , our previously published tool for the visualization and analysis of genome wide association  data. in ihat we introduced the concept of interactive aggregation of subsets of the data in order to reveal hidden patterns that are not clearly visible when displaying the whole data set at once. based on the concept of aggregating the information content of data based on meta-information, we implemented inphap, a new interactive visualization tool which is capable of visualizing unphased genotypes as well as phased haplotypes.

in the following the design of the inphap tool itself, as well as its features are described in detail.

the inphap graphical user interface
one of the key features of inphap is that it supports a broad range of interaction with the data. therefore, we implemented a graphical user interface  which consists of six components : the haplotype visualization panel, the subject meta-information panel, the single nucleotide variation  meta-information panel, the overview panel, the settings panel, and last but not least the summary panel. the largest and most important component is the haplotype visualization panel located in the center of inphap. it consists of a heatmap-like haplotype visualization, together with row and column headers showing subject and the snv identifiers, respectively. detailed information on the visual representation of haplotype data is given in the general visual encoding section. the second component is the subject meta-information panel, which displays numerical and categorical meta-data of the subjects. each meta-information type is represented as a single column in the subject meta-information panel and different color gradients for numerical data or maps for categorical data can be chosen by the user to distinguish sub-groups in the data. the snv meta-information panel is used to enhance the haplotype visualization by displaying meta-information for variants. in the case of phased data for example, variants on the paternal and maternal chromosome can be distinguished. this information is then used to automatically create a meta-information row below the haplotype view with “p/m” as identifier to enhance identification of paternal and maternal alleles in the haplotype visualization panel. the fourth component in the upper left is the overview panel, an interactive zoomed out representation of the whole haplotype visualization. it shows the current view of the user in the haplotype visualization panel and gives an estimate of the proportion of the visualized data using a rectangle as visual clue. the settings panel on the right allows for quick changes of the most often needed settings. here the user can change the way the data is presented. amongst others, colors can be adjusted according to the users’ needs and different visual representations for haplotype data are available. the last component is the data set summary panel. it provides general information for the current data set, including the number of subjects and snvs in the data set as well as the number of different meta-information  types, separated into “mi columns” and “mi rows” for subject and snv meta-information. these panels are complemented by a button bar at the top of the gui that provides convenient access to further useful and often needed functions, such as filtering, changing the subject or snv mi color gradients or the export of the haplotype visualization. additional functionality that is not available in the settings panel or the button bar is provided in the inphap menu bar. furthermore, an information bar at the very bottom shows the last change made by the user. thereby, it provides information on what has been changed and how this change affected the underlying data. a complete log of all interactions performed on the data is also available in the help menu located in the inphap menu bar.

data formats and structures
data can be imported in inphap in two different formats: the vcf file format containing haplotype information for different subjects as separated columns and the impute <dig> format, the default haplotype text file format used by the impute <dig> program  <cit>  to encode genotype information from the  <dig> genomes project. the example files that have been used in our paper to demonstrate inphap have either been generated using shapeit <dig>  <cit>  or beagle  <cit> , which can both be used to infer phased haplotypes and are able to output the results in the impute <dig> or vcf file format. since such files can get very large, implementation of the underlying data structures has been performed with respect to the overall memory consumption. in general, haplotype data consist of two different characters from the alphabet Σ={a,t,c,g}, one character for the paternal allele and one for the maternal allele. in some cases also the character “ −” is allowed, to indicate that no second allele is present. this is for example the case for many snvs for the human x chromosome, especially for males. encoding these characters as character primitives in java would require  <dig> bytes per character. for a dataset consisting of around 4× <dig> snvs and about  <dig> subjects this would lead to a memory consumption of 2×4×106×103×2= <dig> gbyte just for storing allele combinations. state of the art computers currently have between 8− <dig> gbytes of ram installed. to allow users to use inphap on their desktop computers, it was necessary to introduce a binary encoding of the haplotype data in order to reduce the amount of consumed memory. in inphap each character c∈Σ is encoded using only two bits. with this strategy only  <dig> bits are needed to store the paternal and maternal allele for one snv and subject. as a result inphap consumes for  <dig> × <dig> snvs and  <dig> subjects only /2= <dig> gbyte for storing the raw allele combinations, which is  <dig> times less than using a naive memory storage approach.

to keep interactions smooth even on the lowest zoom level, where each cell of the haplotype visualization is 1× <dig> pixel in size, only those data that are needed for the currently visible submatrix are decompressed from their binary form. all other data is kept in the compressed form in memory. furthermore, the visualization of the subject specific haplotypes has been optimized to perform very fast repainting. for this, each base c∈Σ is rendered as a colored image in memory. when drawing the visible submatrix only already pre-rendered images are drawn, decreasing calculation and painting time to a minimum. to allow for smooth interaction with the visualization, selection boxes as well as different saturation values have also been implemented as pre-calculated images that can be drawn on top of the nucleotide images. with this strategy typical interactions, such as resorting the matrix, moving the sliders, or selecting specific columns or rows, do not require recalculating the pre-rendered images but only repainting them in the current view. changes that require a recalculation of the images, such as changing the color for the bases, then only requires to recalculate  <dig> images, which can be used multiple times for a single repaint event. altogether, these mechanisms enable instantaneous updates of the haplotype visualization panel and smooth interaction in inphap.

in addition to haplotype data, meta-information data can be imported for subjects and for snvs. currently inphap accepts only tab-delimited text files with two header lines, with column names in the first header line and declaration of the type of data  for each column in the second header line, and subject and/or snv identifiers in the first column.

on aggregated data, inphap utilizes a further visualization method to provide the user with feedback on the relative frequency of a certain nucleotide for the aggregated group of individuals in form of displaying a height of a bar within the respective cells. this can be changed by selecting the “saturation” based visualization, which visualizes the most common snv within the group by changing the color saturation from very low  to very high , providing useful feedback as well for the user.

general visual encoding
in the haplotype visualization panel there are two different visualizations available, one for phased data and one for unphased data. for phased data, each snv is represented by two different columns, one for the paternal allele and one for the maternal allele. this design choice is motivated by the  <dig> genomes data from abecasis et al. who used two rows for each allele in their publication  <cit> . for unphased data only one column per snv is needed. in addition, inphap offers two different color encodings for phased data and one for unphased data. in the default visual representation for phased data, each base is assigned a unique color. by default green is used for a, blue for c, red for t and yellow for g. missing nucleotides, as it might be the case for males on the x chromosome are colored white. this encoding allows the user to compare different snvs as well as to spot differences between the maternal and paternal allele quickly. the second visual representation for phased data is more convenient for visualizing differences to the reference base. if for one of the snvs either the maternal or paternal allele differs from the respective reference base, then yellow color is used in the haplotype visualization panel, otherwise the respective cell is painted in blue. the third visual representation is more focused on unphased data, but can be applied to phased data as well. here only one column is required for each snv. if the phase is unknown, only three different cases can occur, namely homozygous and heterozygous snvs as well as snvs for which both alleles are equal to the reference base. homozygous snvs are colored red, while heterozygous snvs are shown in yellow. if both alleles are equal to the reference the respective cell is colored green. for each of the three visual encodings, the default colors are selected based on colorbrewer color maps  <cit> , such that differences as well as similarities in the haplotype visualization panel can be spotted quickly. however, all colors can easily be changed in the settings panel to fulfill user specific needs. in case of a user defined selection of subjects of snvs a colored border is drawn around cells in the haplotype visualization panel and the respective column or row identifiers are overlaid by a colored box. the default selection color is black, but it can also be changed by the user if needed.

in contrast to haplotype data, meta-information data is encoded in a different way. here, for each meta-information the user can choose the appropriate color encoding. for numerical meta-data, the values are mapped directly to a color from the chosen color gradient. for categorical meta-data, first each category is assigned a unique numerical value. then these numerical values are used for the selection of colors from the chosen color map.

interaction possibilities
general interaction features
inphap is a highly interactive tool, allowing the user to change the current view on the data in various ways. interaction possibilities include the navigation along the subject  axis as well as along the snv  axis using the navigation bars. furthermore, navigation is also possible using the overview panel. there, the current view is indicated by a red rectangle. this rectangle can be dragged to the desired location inducing a change in the position of the navigation bars in the haplotype visualization panel. further interaction possibilities are zooming in two different dimensions, i.e. the width and height of each cell in the haplotype visualization panel can be adjusted. in addition, width and height of the meta-information cells can be changed separately from the visualization panel, allowing the user to see the meta-information assigned to subjects or snvs even for very small cell sizes in the haplotype visualization. width and height changes can be made either by using the settings panel or via the mouse wheel if the mouse is placed above the haplotype visualization panel or one of the meta-information panels, respectively. subjects as well as snvs of interest can be selected with the click of a mouse button on the respective identifier or via dragging over a series of identifiers. selection thereby also affects the meta-information panels and the corresponding meta-information cells are highlighted as well. furthermore, rows and columns in the haplotype visualization panel can be sorted according to the provided meta-information by double-clicking on one of the meta-information identifiers. for the sorting we use a stable sort. if the user for example chooses a meta-information group for sorting, the order of the elements that belong to the same sub-group in the chosen meta-information group is preserved. this allows users to sort according to different meta-information groups consecutively. these general interaction possibilities are assisted by several interactive filtering and aggregation methods, which will be explained in the following.

filtering
filtering is a crucial step in the analysis of large data since it allows reducing the overall amount of data that has to be investigated by displaying only those variants that are of interest to the user. consequently, data that is currently not of interest is removed from the view. if for example the user is interested in the variants that are shared by whole population groups rather than by only very few individuals, using a frequency filter can help in the selection of the respective snvs and thereby reduce the overall amount of data that has to be visually assessed. to enable filtering in inphap, we implemented several different filter methods for single nucleotide variants. filtering based on chromosomal location allows the user to concentrate on those snvs that are located in a specific region on a chromosome, e.g. a gene or promoter region. if a list of interesting snvs is already available, i.e. the user is interested in a specific haplotype, this list can be passed to inphap. then only the intersection of snvs in the given list with snvs in the data set will be shown in the haplotype visualization panel. in addition, filtering based on snv identifiers can also be done by providing a regular expression for the snv identifier. we also included a frequency based filter, to show only those snvs where the respective genotype frequency lies above or below a user-defined threshold. this is especially useful when the user wants to concentrate on rare variants only for example.

aggregation
using visualization to identify patterns in large data such as those from the  <dig> genomes project is a challenging task, since structures often remain hidden when visualizing them on a global level. therefore, methods to reduce the overall complexity of the data are needed to improve visual assessment of underlying patterns. in ihat  <cit>  we have demonstrated that aggregation is a rich technique when it comes to revealing hidden structures in the data. inphap allows the user to aggregate rows interactively, where for example meta-data can be used to guide this process. especially for genotype as well as haplotype data where differences between whole populations or subgroups of populations are hard to compare, aggregation can help to unravel the hidden structures and thereby help to interpret the genetic differences. in inphap several different aggregation methods have been implemented, such as maximum, minimum or mean. a typical use case of aggregation of haplotype data would be to take subjects from a common group, e.g. from the same population, and look for differences in the haplotypes of these populations possibly revealing recombination events on a global level. in inphap the user can combine subjects of interest into subject groups by aggregating the corresponding haplotypes. these subject groups can either be based on user selection or on meta-information that has been additionally assigned to each subject. the aggregation of haplotypes is performed on a per snv base. for each snv the base with the highest frequency among the selected subjects is chosen as the consensus and the respective frequency is stored as an indication of how representative this base is given the underlying base distribution. in the haplotype visualization panel, aggregations can be encoded in two different ways, depending whether more attention shall be drawn to the consensus base itself or to the differences in snv frequency in the combined subject group. if one is interested in the consensus base itself rather than in the differences in frequency between aggregated snvs, aggregations can be represented as colored boxes where their saturation is adjusted based on the frequency of the consensus base. this visual representation is the default representation that was shown to work well on genotype data  <cit> . however, in a study conducted by mackinlay it was shown that positioning along a common scale is more effective than saturation when comparing quantitative values  <cit> . inphap therefore offers an alternative way to represent aggregations. instead of filled boxes, bars are drawn, whose color represents the consensus base and the height of the bar displays the underlying consensus base frequency. with this second visual encoding, differences in frequency stand out more clearly, which is especially useful for the comparison of maternal and paternal allele frequencies. aggregated individuals are assigned a new identifier in the haplotype visualization panel constructed from the prefix “agn” followed by a number. this number corresponds to the number of individuals included in the aggregation.

the aggregation of haplotypes is accompanied by the aggregation of corresponding meta-information values. meta-information can also be aggregated based on a user defined aggregation method which may differ from the method chosen for the haplotype visualization. in figure  <dig> snvs for the mld associated gene arsa are shown. figure 2b shows the data after applying the minimum aggregation method to subjects that belong to the same population. this view is compared to a non-aggregated version showing the same data . after aggregation it becomes clearer, which snvs are rare for specific populations, and how rare variants differ between the populations.

typical inphap workflow
an example workflow, showing how data is loaded into inphap, how filtering is applied to snvs of interest and how aggregation is used to enhance visualization using meta-information is shown in figure  <dig>  this figure is split into four sub-figures showing the different stages of a typical inphap workflow. the quick button bar provides helpful features for processing the data. first data can be loaded into inphap with the “new” button. this opens up the settings dialog, from which the user can select what type of data he wants to load . as soon as data has been loaded , the user can interact with it, for example by sorting the rows based on meta-information. this can easily be done by double-clicking on one of the meta-information identifiers. to concentrate on snvs of interest several different filters can be applied. via the “filtering” button in the quick button bar, the user gets access to the filter settings dialog, from which a filter of choice can be selected and parameters for the filter can be set . data can be explored at any time, by navigating through the visualization using the corresponding navigation bars or by zooming in and out either with the mouse wheel or using the settings panel on the right of the graphical user interface. if needed, aggregation, e.g. based on meta-data, can be performed to obtain an aggregated view where individual subjects are grouped together based on the selected subject meta-information column and consensus values are calculated. this can be achieved by clicking the “aggregate rows” button from the quick button menu and setting up the corresponding aggregation parameters in the aggregation settings panel that shows up . the calculations for the aggregations are performed in the background, keeping the visualization usable at any time. a resulting view on the data after filtering, sorting, aggregation and zooming is shown in figure 3d.

export
with inphap the user can generate graphics in publication ready quality as either bitmapped images  or as scalable vector graphics . during the export the user is provided with a preview of the resulting image as well as further options to adjust the image size. furthermore, the user can decide whether to export the full visualization or just the region of the visualization currently visible in the inphap gui.

RESULTS
visualization of genetic variation between populations
we applied inphap to haplotype data as generated by the  <dig> genomes project. in the phase  <dig> publication, abecasis et al. provide a detailed view of the variation across several populations  <cit> . during their analysis they highlighted a 100-kb region on chromosome  <dig> spanning the genes alms <dig> and nat <dig>  variations in those genes have been associated with kidney disease in earlier studies  <cit> . as a proof of concept we used inphap to generate a similar visualization as figure two in  <cit> . we first loaded the complete vcf file of chromosome  <dig> as provided on the ftp site of the  <dig> genomes project website. we then filtered only the respective  <dig> kb chromosomal region of the two genes. next we applied two snv filters: one for variants with a frequency > <dig> % across all individuals and one for rare variants with a frequency < <dig> %. the resulting inphap visualizations are shown in figure  <dig> for variants with a frequency > <dig> % and in figure  <dig> for rare variants with a frequency < <dig> %. as in figure two of abecasis et al. differences in common single nucleotide variants between different populations are clearly visible. especially in the african  super population there are substantially more snvs in the alms <dig> region than for the other populations. this effect is even more pronounced after aggregation . interestingly, for the asian  population only very few variants are found in the central part of the alms <dig> gene, while these are more likely in europeans  and americans . in contrast to all the other populations variant locations in this 100-kb region are more uniformly distributed, while for the other population groups variants are located mainly across two different sub-regions, namely the first part of the alms <dig> gene and an approximate 20-kb region at the end of the selected 100-kb region spanning the genes nat <dig> and alms1p. these observations correlate well with the findings of abecasis et al., who showed that highly frequent variants in the 100-kb region are differently distributed across several populations.

taking a closer look at the rare variants with a frequency < <dig> %, one can see that the african population  again shows a higher number of variants than the rest . in addition, the degree of rare variants varies between different populations, even for those from a common super population. for example, the iberian population in spain  shows only very few rare variants in this region  whereas the numbers are much higher for the other european  populations. interestingly, variations in the ibs population usually are limited to a single chromosome, which means that the snv can either be found on the paternal or on the maternal chromosome, but rarely on both. this leads to the assumption that those variants have been introduced only recently, which correlates with the findings by abecasis et al., who argue that recent events, such as clan breeding structures or admixture of diverged populations are the main reason for rare variants in the spanish  and finnish  population  <cit> .

visualization of mld variations
especially of interest for researchers are not common variants, that can be easily found in haplotype data, but rather rare alleles that can only be found in smaller subsets of populations or individuals. finding such rare alleles can be difficult, due to the total number of subjects in common haplotype datasets, that might not include individuals with such rare alleles and furthermore the difficulty to filter out common alleles that are not as alluring as rare ones. inphap provides different methods in order to ease the search for rare alleles in large haplotype datasets, such as the frequency filtering feature together with the powerful aggregation methods included in the tool.

metachromatic leukodystrophy  is an inherited disorder, that directly effects the growth and development of myelin, which is a crucial insulator around nerve fibers in human central and peripheral nervous systems  <cit> . the disease is caused by several missense mutations on chromosome  <dig>  causing defects of the enzyme arylsulfatase a   <cit> . one of the snps with dbsnp id rs <dig> that is the supposedly responsible mutation for mld, is a c → g substitution, leading to an amino acid change of threonine → serine in the corresponding protein arsa. using inphap we aggregated the dataset of chromosome  <dig> according to the population and then compared the resulting aggregations with respect to their super populations. interestingly, as can be seen in figure  <dig>  there exist differences between super population groups, for example the asian  and african  super populations show low pathogenic allele counts for mld, whereas the european  and american  super populations show significantly higher total counts of pathogenic alleles, most pronounced is the puerto rican  population group in the american super population. on the single individual level the variations between subgroups are difficult to spot, as the allele patterns themselves in populations look entirely random without the aggregation. after aggregation in inphap the pattern becomes nicely visible. furthermore, with this visualization the origin of the corresponding  allele can be distinguished, as both maternal and paternal allele frequencies can be observed in our visualization. for example for this snp it seems to be of mostly maternal origin for mexican individuals living in los angeles , as can be seen in figure  <dig> .

performance
the inphap tool has been designed in a way to keep the performance on a high level throughout the whole analysis. as an extreme use case, we tested inphap with the vcf file of chromosome  <dig> from phase  <dig> of the  <dig>  genomes project with  <dig>  mio snvs and  <dig> gbyte file size . inphap needs about  <dig> gbytes of ram, which can be explained by the fact that besides the raw allele data, all images are held in ram as well. inphap still remains interactive and reacts smoothly when users switch between views, or apply functions such as filtering or aggregation.

discussion
we have designed inphap as a tool following ben fry’s computational information design approach to understand large and complex data  <cit> , which consists of the following seven main steps: acquire, parse, filter, mine, represent, refine and interact. with inphap, data can be loaded from different files formats, several filters can be applied, aggregations can be calculated, different representations for the underlying data are available, data can be sorted according to meta-information and interaction is possible at every stage of the analysis.

inphap can visualize phased haplotype data in order to study the influences of certain alleles. this is achieved by introducing two columns for snvs, one for the maternal and one for the paternal allele. this design choice was motivated by the  <dig> genomes data from abecasis et al. <cit> . although, inphap is designed for diploid organisms, its visualization concept can easily be extended to more complex genomes, as for example from omniploid organisms, by extending the number of columns used for single variations. furthermore, the decision to split snvs that are located on different homologous chromosomes into two different columns in the visualization has several further advantages. first of all, visual clarity is maintained throughout the whole analysis and comparisons between snvs on homologous chromosomes can easily be made, by placing them next to each other in the haplotype visualization. additionally, reordering of snvs based on meta-information, such as the affiliation with a chromosome, enables the user to study single haplotypes without getting confused by the information from other homologous chromosomes. this would for example not be possible by adding two rows for each subject, as it was done in figure two from abecasis et al. <cit> , rather than adding two columns for each variant in the case of a diploid organism. in addition, comparison of haplotypes on homologous chromosomes is much easier, when the corresponding variations can be placed into chromosome based groups. the drawback of this approach is that comparison between patterns on the paternal and the maternal chromosome can become difficult, when the haplotype regions are large. in order to identify patterns on the paternal or maternal allele one would have to sort the snvs according to their allele affiliation. however, this places maternal and paternal haplotypes far away from each other in the inphap visualization panel. due to a limitation in the users screen size displaying both, the maternal and paternal haplotype, at the same time would be impossible. this could be overcome, by allowing the user to split the haplotype visualization panel in such cases into two parts, one for the maternal and one for the paternal allele, which is however currently not possible. although inphap was designed for phased data, it is not limited to those and can easily be applied to unphased data as well. then of course, only a single column in the haplotype visualization panel is needed.

the possibility to decide whether specific allele combinations have an influence on an individual phenotype, is of great advantage and may lead to more precise interpretations. for this, we have shown that aggregations are a valuable tool to assess hidden patterns in the data and thereby help the user to draw better conclusions. however, aggregation techniques also bear risks. depending on the aggregation method that is used, valuable information is potentially lost. during the analysis of the abecasis et al. data set we have shown how aggregation can be used to display specific patterns hidden in whole populations. however, using a single aggregation technique did not allow us to reveal all the hidden information. using the maximum aggregation technique, for example, enabled the comparison of common features, but has the disadvantage of loosing information on rare variants. in order to concentrate on rare variants, we had to apply the minimum aggregation technique. therefore, the question whether to use aggregation for data exploration and which aggregation method is applicable, largely depends on the data and the question one wants to solve. for the visual encoding of aggregations we have implemented two different alternatives, a saturation based approach and the possibility to display nucleotide frequencies by using bars of different height. using bar heights has the advantage that aggregated frequencies are much easier to compare between specific snvs of interest. however, for a more general overview, e.g. over a whole genomic region, using saturation is more suitable, because depending on the number of snvs and aggregated sub-groups in the overview, nucleotide boxes can become very small.

the application of different visualization strategies requires to be able to switch between data transformations and visual representations interactively. since visualizing too much information in a single view easily leads to unnecessary clutter, which exacerbates the process of making decisions on the data, we follow a different strategy in inphap. by offering the user a variety of visual encodings and interaction techniques to process the data, he can generate different views on the data and switch between them in a fast and interactive way. in inphap we provide two different visual encodings for phased haplotype data, a reference based encoding where only similarities with and differences to the reference nucleotides are displayed and a nucleotide based representation that provides detailed base information. only by the interplay of these two representations one is able to locate snvs of interest and get nucleotide information at the same time. again, in order to compare different representations, it would be of advantage to place them next to each other, which is currently only possible by exporting the visualized data using one of the available image formats in inphap. however, with that approach interactivity would be lost.

in addition to the visualization of phased haplotype or genotype data, meta-information, such as gene affiliation of snvs or population information for individuals can provide further insight into the data. so far inphap supports numerical and categorical meta-information for snvs and individuals. due to the generic design of meta-information for subjects, inphap can also handle quantitative meta-information, enabling the study of qtls  or eqtls . however, more complex meta-information, such as snv associations, structural variations or individual relationships, can currently not be visualized without larger modifications of the tool itself.

future work
an important step to evaluate and improve inphap will be the execution of a user study, which we will conduct next. furthermore, we plan to improve inphap by adding more features. first of all we will add an additional component to the gui showing the location of variations on the chromosome. this helps to identify snvs in close proximity to each other which is of interest, since those variants are more likely to be in linkage disequilibrium. a further step in this direction would be to include additional visualizations in inphap, as for example an interactive ld-plot that can be linked to the haplotype visualization panel to improve identification and assessment of ld blocks. but also statistically motivated visualizations, such as charts that display the snv frequencies for specific subgroups can largely improve inphap’s efficiency, by making it easier to estimate differences between these groups.

in the current version of inphap we concentrated primarily on single nucleotide variations. however, also insertions and deletions  are important variations that can lead to changes in gene function and consequently to disease. in future versions, we plan to extend inphap to be able to visualize indels together with snvs, by adding a separate visual encoding for indels. since indels can also differ between the maternal and paternal chromosome, the general concept of representing phased variations in different columns does also apply.

to improve interactivity with the visualization we also plan to add the possibility to keep user-defined regions in the visualization fixed, such that those regions are presented to the user at any time. in this, one would be able to navigate through the visualization in order to compare structures at different locations to the fixed region more easily. another possibility would be to allow the user to split the haplotype visualization panel and link the resulting two sub-panels to each other, such that navigating in one panel would also change the view in the other panel. with this strategy interactivity would be maintained at any time.

CONCLUSIONS
we have presented inphap, a tool for the visualization and interactive exploration of phased haplotype data for large scale genome projects. through a variety of different interaction and data transformation possibilities, inphap allows the user to study the influences of variants either on the individual level or on a more general level that can for example be defined by meta-information. since identical genotypes may have different impact, depending on their phase, visual assessment of the phase information can help researchers to make well-informed decisions. to our knowledge inphap so far is the only available interactive visualization tool capable of visualizing phased haplotype data.

abbreviations
arsa: arylsulfatase a; cogs: collaborative oncological gene environment study; eqtl: expression quantitative trait locus; gui: graphical user interface; gwa: genome wide association; gwas: genome wide association study; hla: human leukocyte antigen; indel: insertion/deletion; mi: meta-information; mld: metachromatic leukodystrophy; snp: single nucleotide polymorphism; snv: single nucleotide variation; qtl: quantitative trait locus.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
gj and kn extended the general idea of ihat to phased data and developed the concept of inphap. gj designed the graphical user interface of inphap and the different visual encoding strategies. gj and ap implemented inphap in the java programming language. gj, ap, and kn analysed the abecasis et al. data set. ap, and kn investigated the genetic variations at the arsa gene locus. all authors wrote, read and approved the final manuscript.

