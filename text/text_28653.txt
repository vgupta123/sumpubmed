BACKGROUND
a ddi occurs when one drug influences the level or activity of another, for example, raising its blood levels and possibly intensifying its side effects or decreasing drug concentrations and thereby reducing its effectiveness. the detection of ddi is an important research area in patient safety since these interactions can become very dangerous and increase health care costs. although there are different databases supporting health care professionals in the detection of ddi, these databases are rarely complete, since their update periods can reach three years  <cit> . drug interactions are frequently reported in journals of clinical pharmacology and technical reports, making medical literature the most effective source for the detection of ddi. thus, the management of ddi is a critical issue due to the overwhelming amount of information available on them  <cit> .

information extraction  can be of great benefit in the pharmaceutical industry allowing identification and extraction of relevant information on ddi and providing an interesting way of reducing the time spent by health care professionals on reviewing the literature. moreover, the development of tools for automatically extracting ddi is essential for improving and updating the drug knowledge databases. nevertheless, no approach has been carried out to extract ddi from biomedical texts.

most research has centered around biological relationships ) due mainly to the availability of annotated corpora in the biological domain, a fact that facilitates the evaluation of approaches. in general, current approaches can be divided into three main categories: linguistic-based, pattern-based and machine learning-based approaches.

the general idea of linguistic-based approaches is to employ linguistic technology to grasp syntactic structures or semantic meanings that could be helpful to discover relations from unstructured texts. pattern-based approaches design a set of domain-specific rules  that encode and capture the various forms of expressing a given relationship. as opposed to the previous approaches, which need a laborious effort to define grammars or a set of rules, the machine learning methods allow to automatically acquire and code all the necessary knowledge. table  <dig> shows some of the main works for biomedical relation extraction.

the comparison among different works is not always possible because many of them have been evaluated on different corpora. therefore, it is risky to draw conclusions on the performance of the different techniques. in general terms, the linguistic-based approaches perform well for capturing relatively simple binary relationships between entities in a sentence, but fail to extract more complex relationships expressed in various coordinate and relational clauses  <cit> . we believe that the performance of linguistic-based approaches is strongly influenced by the shortage of biomedical parsers. general purpose parsers, which have been trained on generic newswire texts, are not able to deal with the complexity of the biomedical sentences that tend to cause problems due to their length and high degree of ambiguity  <cit> .

pattern-based approaches usually achieve high precision, but low recall. they are not capable of handling long and complex sentences, so common in biomedical texts. furthermore, these approaches are limited by the extent of the patterns, since relations spanning several sentences cannot be detected by them. linguistic phenomena including modality and mood, which can alter or even reverse the meaning of the sentence, have hardly ever been studied by the pattern-based approaches. thus, pattern-based approaches are not able to correctly process anything other than short and straightforward sentences  <cit> , which, on the other hand, are quite rare in biomedical texts.

in general, machine learning-based approaches have achieved better performance than linguistic-based and pattern-based ones, as demonstrated in the last biocreative challenge  <cit> . one important advantage of these approaches is that they can be easily extended to new set of data or a new task or domain. however, machine learning-based approaches depend heavily on the annotated corpora for training and testing. corpus annotation is an expensive work, usually involving an extensive time and labor.

although many approaches have been proposed to extract biomedical relations, only a few of them achieve successful results. one important reason is that only a few approaches have dealt with the issue of the complexity of biomedical sentences  <cit> . however, language structures such as apposition, coordination and complex sentences are very common in the biomedical literature. we think that the detection of these linguistic phenomena is essential to successfully tackle the extraction of biomedical relations, in particular, ddi.

in this work, we propose a hybrid method that combines shallow parsing and pattern matching to extract relations between drugs from biomedical texts . a pharmacist defined a set of domain-specific lexical patterns to capture the most common expressions of ddi in texts, based on her professional experience and the corpus observation. our method is based on the approach described in  <cit> , which proposes a set of syntactic patterns to split the long sentences into clauses from which relations are extracted by a pattern matching algorithm. this approach works on the detection of appositions, coordinate constructions and relative clauses. our contribution extends this approach dealing with any kind of subordinate and coordinate clause. appositions and coordinate structures are interpreted based on shallow syntactic parsing provided by the umls metamap tool   <cit> . subsequently, complex and compound sentences are broken down into clauses from which simple sentences are generated by a set of simplification rules. finally, the lexical patterns are matched with the generated sentences in order to extract ddi.

methods
the drugddi corpus
most biomedical corpora  have focus on describing genetic or protein interactions, but none contains ddi. while nlp techniques are relatively domain-portable, corpora are not  <cit> . for this reason, we have created the first annotated corpus that studies the phenomena of interations among drugs.

the drugddi corpus consists of  <dig> documents describing ddi. these documents were randomly selected from the drugbank database  <cit>  and analyzed by the umls metamap transfer  tool  <cit>  that performs sentence splitting, tokenization, pos-tagging, shallow syntactic parsing, and linking of phrases with unified medical language system  metathesaurus concepts. thus, mmtx allows to recognize a variety of biomedical entities, including drugs. the drugddi corpus consists of  <dig>  phrases from which  <dig> %  are drugs. it contains  <dig>  sentences with two or more drugs, although only  <dig>  sentences have at least one interaction. a total of  <dig>  ddi were annotated at sentence level with the assistance of a pharmacist. the average number of interactions per document is  <dig>  and per sentence  <dig> .

detecting coordinate structures
coordination is an extremely common grammatical phenomenon in biomedical texts. since coordinate constituents are semantically close and usually they play the same syntactic and grammatical roles in a sentence, it is necessary to assemble them together  <cit> . for example, the following sentence contains three ddi:

â€¢ aspirin may decrease the effects pp, np, and np

in order to extract them, it is necessary to interpret the coordinate structure in it: probenecid, sulfinpyrazone, and phenylbutazone, in which the conjunction and coordinates the conjunct probenecid with sulfinpyrazone and with phenylbutazone.

although a wide variety of structures can be conjoined, not all coordinations are acceptable. coordination of likes constraint   <cit>   asserts that syntactically different categories cannot be conjoined. however, based on the corpus observation, this constraint is too restrictive for the kind of parsing provided by mmtx. for example, the above sentence demonstrates that being of the same syntactic category is too strong requirement for conjuncts in a coordinate construction, since a prepositional phrase, of probenecid, can be conjoined with two noun phrases: sulfinpyrazone and phenylbutazone. in fact, we have observed in the corpus that coordinate structures involving constituents with different syntactic categories are very common. sometimes it is due to the fact that mmtx is not able to determine the syntactic type of a phrase, classifying it as an unknown phrase .

identifying appositions
there are divergent views within linguistics with regard to what is or is not an apposition .  <cit>  and  <cit>  restrict the category of apposition to coreferential noun phrases  that are juxtaposed and refer to the same extralinguistic entity.  <cit>  and  <cit>  expand this definition with the inclusion of constructions such as clauses and sentences as possible elements of an apposition.  <cit>  admits as apposition only those constructions which can be linked by a marker of apposition.

although the above approaches provide insights into the category of apposition, they provide either an inadequate or an incomplete description of apposition. the objective of this work is not to provide formal and complete description of apposition, but rather to identify appositions, in particular, those that contain drugs. thus, we only deal with appositions that are linked by a marker of apposition since this kind of apposition appears frequently in the sentences that contain ddis. markers are helpful clues for detecting these structures. the markers of apposition that we have used in this approach are: such as, like, including, for example, e.g. and i.e.. appositions that are not linked by any marker are also frequent in scientific texts, however, the lack of markers makes the detection of this kind of apposition extremely difficult. moreover, we have observed they hardly ever occur in expressions describing ddi.

we have defined a set of syntactic patterns in order to identify the appositions . appositions comprise at least two contiguous phrases, the second of which is marked by clues such as parentheses or markers. this second phrase may be a coordinate structure. the appositive pattern allows to recognize the intervening elements in an apposition, that is, their appositives. this pattern matches a phrase type  or another apposition. in this way, the pattern is able to recognize nested appositions. regarding the phrase types, it has not considered types such as vp, conj, adv, or, adj, since our main focus is to recognize appositions containing drugs . the apposition pattern is used to recognize appositions. this pattern matches an intervening element appositive followed by a marker and by one or more intervening elements expressed by coordinate phrases. parentheses are also included in the pattern. two different ddi can be extracted from the sentence:

â€¢ np, such as np, may have an additive effect when given pp

 catecholamine-depleting drugs with beta-blocking agents, and  reserpine with beta-blocking agents.

thus, it is essential to detect and resolve the appositions occurring in sentences, prior to the application of the lexical patterns responsible for ddi extraction. the appositions are firstly encapsulated and then unfolded when the relation is obtained by any lexical pattern.

clause splitting
biomedical texts usually consist of extremely long sentences. long sentences are usually complex or compound-complex sentences, that is, contain two or more clauses. for example, the following sentence contains two independent clauses .

â€¢ coadministration of crixivan and other drugs rel clause <dig> and clause <dig> 

both clauses have the same subject: coadministration of crixivan and other drugs that inhibit cyp3a <dig>  this subject includes a relative clause  whose subject is other drugs.

parsing-based and pattern-based approaches are inefficient to deal with complex and compound sentences. parsers are usually trained in common english text corpora and are difficult to extend to new domains. for this reason, they usually fail particularly in biomedical complex sentences. regarding the pattern-based methods, relations are possibly extracted incorrectly when patterns are matched beyond the scope of one clause or other kinds of grammatical units  <cit> . for example, the previous example contains a relative clause , which hinders the matching between the sentence and the p <dig> pattern . this section proposes an algorithm for clause splitting that aims to reduce the complexity of sentences in biomedical texts, in order to improve the performance of our pattern-based method for ddi extraction. clause splitting is the task of dividing a complex or compound sentence into several clauses. the algorithm exploits syntactic and lexical information provided by mmtx. once sentences have been split into clauses, a set of simplification rules is used in order to generate new independent sentences from the clauses. finally, the lexical patterns defined by the pharmacist can be applied to the generated sentences in order to extract ddi.

we now explain how the sentences are broken into clauses. first of all, it is necessary to ensure that the sentence is actually a compound or a complex sentence. it is not enough to check that there is some coordinator or subordinator in the sentence since sometimes they do not function like connectors between clauses, but as prepositions, adverbs, etc. a possible heuristic is to count the number of verb phrases included in the sentence. to give a definition of verb phrase is not an easy task. in fact, linguists have not even reached an agreement on what the verb phrase should include: only the words that are verbs, or also the complements of the verb. while the generative grammarians propose that a verb phrase consists of various combinations of the main verb and any auxiliary verbs, plus optional specifiers, complements, and adjuncts , for functionalist linguists the verb phrases consist only of main verbs, auxiliary verbs, and other infinitive or participle constructions  <cit>  . we have decided to adopt the last definition, that is, we define a verb phrase as a syntactic structure that is composed of a main verb and, optionally, of auxiliary and modal verbs, but the complements are excluded of this structure. unfortunately, mmtx offers an even simpler definition of verb phrase, because mmtx labels each verb as a vp. forms of to be are labeled as v/be. in order to group the main verb, its auxiliary or modal verbs, as well as its adverbial complements in the same verb phrase, we define the vp-pattern as:  ? ? ? ? ?. the vp-pattern is applied to sentences in order to merge their adjacent verb phrases into an extended verb phrase. if a sentence contains two or more extended vps, then we can conclude that it is a complex or compound sentence. however, if a sentence only contains an extended vp, it is a simple sentence despite containing any conjunction. first column in table  <dig> shows some sentences parsed by mmtx, while the second column shows the result of applying our vp-pattern to them.

once it has been determined that the sentence contains two or more clauses, the following step is to determine the type of sentence. such information will be very useful in detecting the clause boundaries. in the english language, a compound sentence is composed of two or more independent clauses joined by a conjunction that can be a coordinator , a correlative conjunction  or an independent marker word . semicolons and commas can also function as conjunctions. if an independent marker occurs at the beginning of the sentence, then a semicolon or a comma should separate the clauses. if the second independent clause starts with an independent marker, then a semicolon or a comma is needed before the marker  <cit> . the independent markers can also occur in simple sentences, as in the following sentence: however, initial dose modification is generally not necessary.

a complex sentence has an independent clause joined with one or more subordinate clauses. subordinate clauses contain both a subject and a verb, but do not express a complete thought. a complex sentence always has a relative pronoun  or a subordinator  that links the clauses. if the complex sentence begins with a subordinator, that is, the subordinate clause is at the beginning of the sentence, then the subordinate clause should end with a comma. on the other hand, if the independent clause is attached at the beginning of the main sentence and the subordinator is in the middle, then no comma is required  <cit> .

taking into account the above clues, we initially defined a set of lexical patterns for detecting clauses boundaries in compound and complex sentences . relative clauses are a especial case, since, they often appear in the middle of a main clause, splitting it into two parts. if a sentence matches some of these patterns, then its clauses can be easily extracted from the matching.

however, these patterns are not always enough. determining where a clause ends is not always a trivial task, since there might be commas or conjunctions internal to the clause. moreover, some conjunctions can also function as prepositions  or as adverbs . the problem regarding adverbs is easily resolved  because mmtx labels them as conj phrases when they function as coordinators . the previous identification of appositions and coordinate structures allows to reduce the number of commas and conjunctions internal to a clause. however, for each comma or coordinator not included in any apposition or coordinate structure, it is required to know whether the clause ends or not in it. therefore, the above patterns have been replaced with a set of heuristics based on the observation of fifty compound and complex sentences. these heuristics are encoded in algorithm  <dig>   

in a few words, the algorithm works as follows. the input of the algorithm is the sentence in which its verb phrases have been joined by the vp-pattern. first of all, the algorithm must check that the sentence contains two or more clauses. then, the sentence is reviewed while it contains any separator marker. a separator marker can be a coordinator, a independent marker, a dependent marker, a semicolon or a comma. the coordinators and subordinators must be labeled by mmtx as conj phrases, otherwise, they are not considered as conjunctions. then, the algorithm iteratively finds candidate clauses, that is, a substring of the sentence between markers. if the candidate clause contains a verb phrase, then it is considered as clause. the algorithm is able to decide the kind of clause, that is, independent or subordinate.

rules for sentence simplification
once appositions and coordinate propositions have been recognized, and compound and complex sentences have been split into clauses, it is possible to apply a set of rules for sentence simplification. these rules allow to simplify the complex and compound sentences in simple sentences. then, the pattern-based approach for ddi extraction will be applied to these simpler sentences.

we have adapted some of the simplification rules presented in  <cit> . this work also recognized relative clauses, apposition, coordination and subordination, however its goal was not relation extraction, but to provide syntactic simplification of sentences for improving the performance of nlp applications such as text summarization or machine translation.  <cit>  proposes seven simplification rules to generate new simplified sentences from the clauses of the complex and compound sentences. table  <dig> presents the rules adapted in our approach and some sentences broken up into simpler sentences by these rules. the following list shows examples of how the simplification rules split complex and compound sentences:

â€¢ marker clause <dig> clause <dig> 

â€¢ marker clause <dig>  clause2

â€¢ clause <dig> marker clause2

the following sentence  is transformed into the two simpler sentences  and :

â€¢ since the excretion of oxipurinol is similar to that of urate, uricosuric agents, which increase the excretion of urate, are also likely to increase the excretion of oxipurinol and thus lower the degree of inhibition of xanthine oxidase.

 <dig>  since the excretion of oxipurinol is similar to that of urate, uricosuric agents are also likely to increase the excretion of oxipurinol and thus lower the degree of inhibition of xanthine oxidase.

 <dig>  uricosuric agents  increase the excretion of urate.

lexical patterns for ddi extraction
despite the richness of natural language expressions, in practice, ddi are often expressed by a limited number of constructions. this fact favors the use of patterns as an excellent method for their extraction. based on her professional experience and the corpus observation, our pharmacist defined a set of lexical patterns  to capture the various language constructions used to express ddi in pharmacological texts. moreover, the pharmacist provided a set of synonyms for the verbs that can indicate a possible ddi .

RESULTS
this section explains in detail the experiments that we have carried out to evaluate the performance of the ddi extraction. we consider as baseline system, so called allddis, the case in which every pair of drugs that co-occur in a sentence are assumed to interact. this baseline yields the maximum recall, but low precision  and a baseline f-measure of 19%. the most basic experiment in which neither coordinations, appositions nor clauses are tackled, that is, the lexical patterns are directly applied to the text of sentences. first of all, sentences are parsed by mmtx and drug names are identified by the drugner system  <cit> . then, only those sentences that contain two or more drug names are selected and the drug names are replaced by the label drug.index, where index shows the order of each drug in the list of drugs that occur in sentence. finally, the set of lexical patterns is applied to the text of the sentence.

when a sentence has been correctly matched with a pattern, it must be checked if the matching string includes the negative adverb . if it is not included, then a possible interaction has been found. drug names that occur in the matching are retrieved, and the pair of drug names is proposed as a ddi.

in the second experiment, appositions and coordinate structures are identified in text by the set of syntactic patterns above described. the lexical patterns were modified to consider these structures, that is, they are extended for including the labels apposition and coord as possible elements participating in the interactions. thus, for this experiment, drug:= . the procedure of matching pattern for this experiment is explained in algorithm  <dig>   

therefore, the detection of these structures achieves to improve the recall  with a significant decrease in precision of almost 19%. this decrease can be attributed to the errors introduced during syntactic processing.

                           Î²
                           Î²
                        =
                           
                           Î²
                        =
                           
the last experiment combines the detection of appositions, coordinate structures, clause splitting and simplification rules. first of all, appositions and coordinate clauses are detected by applying the previous described procedure  step by step until the sixth step. then, the algorithm  <dig> is applied to sentences in order to split the complex and compound sentences into their clauses. new sentences are generated from these clauses by the simplification rules. finally, the previous procedure of matching pattern  is applied to these new sentences from the seventh step.

as a preliminary step we performed an evaluation of linguistic structures resolution on a set of fifty sentences, which were randomly selected and manually tested with the assistance of a linguist. results are shown in table  <dig>  we observed that most of the errors were due to tagging and parsing mistakes made by mmtx. both the error analysis and the improvement of mmtx are two issues that are out of scope of this work. clause splitting is a very complex task, which consists of three tasks: identifying clause starts, identifying clause ends, and finding complete clauses . the nesting of clauses is very common in biomedical texts. our method mainly fails to deal with the resolution of nested clauses. however, though it obtains lower results, we believe that it is a good initial approximation for clause splitting in the biomedical domain.

results on ddi extraction are shown in table  <dig>  while the inclusion of appositions and coordinate structures achieved to improve the recall, and therefore, the f-measure, the detection of clauses did not improve overall performance.

although we are aware that the syntactic simplification evaluation is quite shallow to reach definite conclusions about performance it seems to point out that the chaining of errors may have a larger impact. in addition, many interactions occurring in complex sentences often span several clauses . the lexical patterns are not able to capture these interactions that would require a more complex semantic interpretation.

CONCLUSIONS
in this paper, we have proposed a hybrid method that combines the resolution of complex linguistic constructions and pattern matching.

regarding the resolution of the linguistic constructions, as it was pointed out in the results section, most of the errors are due to mistakes introduced in the mmtx level and the difficulty of resolving nested clauses, so frequent in biomedical texts. also, we are aware that our clause splitting method is too simplistic to deal with the complexity of biomedical sentences.

another shortcoming of our current approach is that negation has been only slightly addressed. although the following sentence matches the pattern p <dig>  it does not represent any interaction:

â€¢ while studies have not showndrug1interact with drug <dig>  caution should be exercised.

a deeper treatment of negation should discover that the phrase studies have not shown have a larger scope that includes the interaction.

future directions include trying to identify and resolve the errors of mmtx and analyzing the effect on the ddi extraction performance, improving our clause splitting algorithm, proposing new suitable simplification rules to regenerate the simple sentences from clauses, checking what occurs if the resolutions are applied in a different order, studying the utility of other corpora such as genia-gr  <cit>  or penn treebank  <cit>  and other parsers such as stanford  <cit>  or minipar  <cit> , and increasing the size of the corpus and annotating it with these linguistic constructions. in addition, we will carry out a more exhaustive treatment of negation and modality in sentences. we will also study the overall contribution of our anaphora resolution approach  <cit>  to the broader task of ddi extraction.

concerning the performance in the extraction of ddi, the variability of natural language expression makes it difficult for our method to accurately detect all semantic relations occurring in text since sentences conveying the same relation may be composed lexically and syntactically differently. inversely, sentences that are lexically common may not necessarily convey the same relation. thus, our lexical patterns are not enough to identify many of the interactions. future work will include the application of bootstrapping techniques to find additional patterns like the spindel system  <cit> . continuing the work presented in  <cit> , we also plan to apply advanced machine learning techniques to extract ddis.

competing interests
the authors declare that they have no competing interests.

authors' contributions
is carried out the study of the related work, developed the design and implementation of the system and participated in its evaluation. pm carried out the study of the related work, participated in the design and coordination of work, and helped draft the manuscript. cp designed the arquitecture of the system, and took part in the implementation and evaluation of the system. all authors read and approved the final manuscript.

