BACKGROUND
simulated sequence data are widely used for hypothesis testing  <cit> , for evaluation of phylogenetic methods under different parameter settings  <cit> , for testing the effect of model misspecification on tree reconstruction  <cit> , for development of new models and methods  <cit> , and for approximate bayesian inference  <cit> . for these applications, it is important that the processes used to produce the simulated data closely model the underlying biological processes. commonly used phylogenetic sequence generators employ homogeneous, time reversible, stationary models of molecular sequence evolution. these phylogenetic models assume that the overall rate of substitution is the only parameter that may change along the tree and do not allow changes in other parameters, such as the rate matrix, the distribution of rates across sites and the proportion of variable sites.

it is known, however, that as sequences diverge they can acquire independent properties. in particular, the proportion of variable sites can evolve in a lineage-specific manner due to changes in evolutionary constraints  <cit> . the proportion of variable sites in a lineage will affect its estimated substitution rate  <cit> . failure to account for changes in the proportion of variable sites can result in erroneous rate estimates that may affect tree estimation  <cit> . indeed, change in the proportion of variable sites is thought to be one of the main causes of long-branch attraction  <cit> .

in addition to the possible shift in the proportion of variable sites, it is known that sites can switch between variable and invariable states due to drift. note that invariable sites  are sites for which the probability of character substitution is zero; as opposed to invariant sites for which the probability of character substitution is greater than zero but for a certain group  of taxa no substitution is found. the strict covarion model  <cit>  allows sites to switch between variable and invariable states; however, at equilibrium the proportion of variable sites is constant over the different lineages. several extensions of the covarion model  <cit>  are implemented in the sequence generator seq-gen-aminocov  <cit> . however, to date, there is no model that allows for change in the proportion of variable sites.

using partitions , lineage-specific proportions of variable sites have been simulated with sequence generators such as seq-gen  <cit> , seq-gen-cov  <cit> , and seq-gen-aminocov  <cit> . these simulations have proven to be very useful in facilitating our understanding of the process of lineage-specific evolution. however, the use of these programs for the purpose of simulating changes in the proportion of variable sites is limited to trees with very few 'events', where an event is defined as a position on the tree where a change in the process of evolution occurs, e.g. a change in the proportion of variable sites. this is because different proportions of variable sites are generated using pre-defined partitions, where each partition is simulated on a tree with different branch lengths . for two events, in which the proportion of variable sites changes, there are  <dig> partitions  <cit> . in general there are  <dig> partitions , so creating the input for such simulations becomes a difficult task. furthermore, in seq-gen, invariable sites can be incorporated into sequences by either simulating on different partitions , or specifying a proportion of invariable sites  using the -i option. intuitively, one might expect the processes of evolution simulated by these two methods to be equivalent, but this is not the case. in seq-gen and its modifications published to date, branch lengths are defined as the mean expected number of substitutions per site. when sequences are simulated with a specified proportion of invariable sites, the branch lengths specified by the user are rescaled  by the program to compensate for the proportion of invariable sites. hence, increasing the proportion of invariable sites  forces a greater substitution rate on the variable sites. for example, with 80% invariable sites and an expected mean number of substitutions of  <dig> , the mean number of substitutions of the variable sites will be rescaled to  <dig> . although this branch rescaling is consistent with the definition of branch lengths as the mean expected number of substitutions per site, we found that many researchers are not aware of it. moreover, using partitions does not allow changes in the on/off switch rate of the covarion model. we have developed a program that allows the user to simulate sequence data containing changes in the proportion of variable sites, and changes in the covarion switch rate, without the need to specify partitions or rescale branch lengths.

implementation
lineagespecificseqgen is a command-line controlled program written in c. the program uses, as much as possible, the code from seq-gen and its derivatives  <cit> . given a rooted tree, specified events , and a set of parameters, the program generates a user-specified number of datasets . an example workflow of the program is illustrated in figure  <dig>  the input is two text files – a tree file and a parameter file. the tree file contains one or more trees in a format which is based on the newick format. events on the tree are marked using a $ sign and are given names. lengths are specified for all branches of the tree; for branches with events, the length before and the length after the event must both be specified. the parameter file contains the changes in the proportion of variable sites, and/or the switch rate of the covarion process, at each event. any number of events can be specified. a change in the proportion of variable sites is specified using two parameters; the proportion of sites that were invariable and became variable at the event, and the proportion of sites that were variable and became invariable at the event.

for each input tree, the program will generate n subtrees , with each event on the tree defining a cutting point . for each input tree and each dataset, sequences are first simulated on the subtree under the root and then on the subtree under each event in an iterative manner. an array holding the state  of each position is updated at each event according to the change in the proportion of variable sites specified by the user. events can be specified as correlated, although by default they are non-correlated. for correlated events the positions of sites that switch state are identical, for non-correlated events these positions are independent. an array holding the hidden states of the covarion model is also passed down the tree. for each site, along each branch, exponential times for switches are generated; the hidden states array is updated at the internal nodes of each subtree according to the specified covarion model and the switch rate for each event. the sequence at each event is used as the ancestral sequence for the subtree beneath it. the output is an alignment of the resulting tip sequences.

for the reasons described in the background, we added a default option where branch lengths are defined as the mean expected numbers of substitutions per variable site. this definition allows the substitution rate across variable sites to be independent of the proportion of invariable sites. when branch lengths are defined as the mean expected numbers of substitutions per variable site, the processes of evolution simulated by both specified partitions and specified pinv are equivalent.

RESULTS
example  <dig> – generating data containing a change in the proportion of variable sites
to demonstrate the use of the program for generating datasets containing a change in the proportion of variable sites, the jukes-cantor  model was used to generate sequences of length  <dig>  bp on the 16-taxon rooted balanced tree shown in figure  <dig>  this tree is input as:

: <dig> ,: <dig> ): <dig> ,: <dig> ,: <dig> ): <dig> $1st_event: <dig> ): <dig> ,: <dig> ,: <dig> ): <dig> $2nd_event: <dig> ,: <dig> ,: <dig> ): <dig> ): <dig> );

in this example, the proportion of invariable sites  at the root was set to  <dig> . at each of the two events  <dig>  of the invariable sites were "switched on" . the two events were set to be correlated so that the positions of sites that are turned on in the two events are identical. the expected proportion of variable sites in groups  <dig> and  <dig> is thus  <dig> , and the expected proportion of variable sites in groups  <dig> and  <dig> is  <dig> . consequentially,  <dig>  of the sites are invariable across all four groups, and  <dig>  of the sites are variable in groups  <dig> and  <dig> and invariable in groups  <dig> and  <dig>  for comparison, two control datasets were generated on a 16-taxon rooted balanced tree without the two events; the same branch lengths were used as before, and pinv was set to either  <dig> or  <dig> . for each group, and each pair of groups, the number of sites that varied in each of the three simulated sequence alignments is shown in table  <dig> 

two correlated events
example  <dig> – testing tree reconstruction accuracy for data containing a change in the proportion of variable sites
to demonstrate the use of the program for testing tree reconstruction accuracy for datasets containing a change in the proportion of variable sites, the jc model was used to generate  <dig> datasets of length  <dig>  bp on the 4-taxon rooted balanced tree shown in figure  <dig> 

this tree is input as:

: <dig> ,: <dig> );

as in the former example, pinv at the root was set to  <dig>  and the two events were set to be correlated. at each of the two events pvar+ =  percent of the invariable sites were "switched on". the program mrbayes  <cit>  was used to reconstruct the trees, assuming a jc model with invariable sites and a covarion process . the number of times with which each of the three possible 4-taxon trees was reconstructed with the highest proportional frequency in the bayesian analysis were compared to determine tree reconstruction accuracy. as shown in figure  <dig>  the higher the increase in the proportion of variable sites in lineages b and c, the lower the tree reconstruction accuracy. these results suggest that, at least for some parts of the parameter space, a covarion model which assumes a constant proportion of variable sites is not adequate for tree reconstruction from data containing changes in the proportion of variable sites.

CONCLUSIONS
lineagespecificseqgen is a sequence generator that allows simulation of changes in the proportion of variable sites, a biochemically realistic process of evolution. it is useful for testing current models of evolution on sequences that have undergone lineage-specific evolution, developing methods to identify such processes in real data, and developing means to account for such processes.

availability and requirements
• project name: lineagespecificseqgen

• lineagespecificseqgen, including the source code and documentation, can be downloaded from http://awcmee.massey.ac.nz/downloads.htm.

• operating system: the program can be compiled and run on unix, linux, and mac os.

• programming language: ansi c.

• other requirements: none.

• license: gnu gpl.

• any restrictions to use by non-academics: none.

• lineagespecificseqgen is provided with no guarantee or warranty of any kind, although the authors are happy to provide assistance if needed.

authors' contributions
lsg has developed and implemented the code for the program, and had written the first draft of this manuscript. dp, mdh and brh supervised the project. all the authors contributed to the writing of this manuscript.

