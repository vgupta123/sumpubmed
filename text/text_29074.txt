BACKGROUND
imagine the following situation. your search engine at the ncbi site finds out that in addition to the  <dig> medical documents that match your query, another  <dig> are also relevant, but they are just one of the  <dig>  genes at your favorite microarray chip. imagine now that you have a sophisticated software that will automatically extract the most useful information from all the documents and summarize it for you in sentences so that you don't have to read the entire documents!

abundant information about gene products is stored in online searchable databases such as annotation or literature. to efficiently obtain and digest such information, there is a pressing need for automated information-summarization and functional-similarity clustering of genes. a growing number of researchers have attempted to annotate gene products via controlled vocabularies in gene ontology , given that gene ontologies are central to most biological processes and key footnotes of protein functions  <cit> . at the same time, current depictions of the relationships of cross-referencing are done manually, and cellular interactions and functional roles of molecules are not being captured in a single clear global snapshot, a hindrance to efficient knowledge discovery.

some work has been done on discovering new and potentially meaningful relationships between medical concepts by searching and analyzing the annotation databases  <cit> . we believe it would be useful for biologists to have well-organized up-to-date information about their genes of interest when they want it. therefore, the aim of our research is to offer researchers an electronic and self-generating reference-search system of functional associations, and to provide automatically updated summarized information embedded in pubmed abstracts for any given group of genes.

implementation
in this study, we constructed two main modules in the genelibrarian system. the first one, genecluster, was developed to help users understand the functional distribution of a certain set of genes by visualizing the degree of semantic similarity between their go annotations. the other one is a text mining-based gene information summarization module, which extracts useful information about gene products from pubmed abstracts, such as related genes, functions, and diseases. figure  <dig> shows a schematic flow diagram of the method, which consists of two modules in the genelibrarian system: the genecluster and the genesum. genelibrarian integrates the applications of genecluster and genesum. genecluster is applied to provide a functional relationship graph of annotations in abundant gene list as reference which helps users to focus on functional related group of genes. genesum, moreover, extracts relevant information regarding the specific gene list that user selected from the result of genecluster. cooperating with these two modules, genelibrarian facilitates users to refine the gene list and effectively collects relevant information as more as possible. in addition, genelibrarian provides an enhanced information retrieval agent, which submits queries to ncbi pubmed according to the combination of user specified keywords and selected genes and then displays results in ranked pmids by counting the appearance of user specified information.

genecluster – visualization of functional relationship among genes
brief descriptions of the genecluster follow. to quantify the degree of semantic similarity between go annotations, we propose a novel sequence-alignment-based measurement to determine how similar two annotated concepts are. because every go term has a different biological meaning, it is pivotal to assign each term a weight that reflects its information content as well as the research activities. for each go term t, the annotating frequency, p, is determined from the human genomic annotations of entrez gene  <cit> . this value indicates, as a percentage, how many genes each node or any of its children annotates. here the weight of a go term is defined by its information content:

weight = -ln)       

such a strategy assigns lower weights to go terms with more annotations and wider semantic meaning and that are closer to the root. similarly, it assigns higher weights to go terms with the opposite attributes. a path from a certain go term toward the root of the ontology is treated as a sequence . suppose there are two such sequences, goseqi and goseqj, with lengths i and j, respectively. the similarity sseq between them is defined as

sseq=∑k=1max⁡ss={weightt1=t2−t1≠t2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqabegabaaabagaem4uamlaem4uamlaemyzaumaemycaenaeiikagiaee4rackaee4ta8kaee4uamlaeeyraukaeeyuae1aasbaasqaaiabdmgapbqabagccqggsaalcqqghbwrcqqgpbwtcqqgtbwucqqgfbqrcqqgrbqudawgaawcbagaemoaaogabeaakiabcmcapiabg2da9maaqadabagaem4uamlaeiikagiaemivaq1aa0baasqaaiabdugarbqaaiabdmgapbaakiabcycasiabdsfaunaadaaaleaacqwgrbwaaeaacqwgqbgaaagccqggpaqkasqaaiabdugarjabg2da9iabigdaxaqaaigbc2gatjabcggahjabciha4jabcicaoiabdmgapjabcycasiabdqgaqjabcmcapaqdcqghris5aagcbagaem4uamlaeiikagiaemivaq1aasbaasqaaiabigdaxaqabagccqggsaalcqwgubavdawgaawcbagaegomaidabeaakiabcmcapiabg2da9maaceqabaqbaeqabigaaaqaaiabdeha3jabdwgaljabdmgapjabdeganjabdigaojabdsha0jabcicaoiabdsfaunaabaaaleaacqaixaqmaeqaaogaeiykakcabagaemivaq1aasbaasqaaiabigdaxaqabagccqgh9aqpcqwgubavdawgaawcbagaegomaidabeaaaoqaaiabgkhitiabcicaoiabd2eanjabdggahjabdiha4jabdcfaqjabgkhitiabbcfaqjabbkhayjabbwgaljabb2eanjabbggahjabbsha0jabbogajjabbigaojabcmcapaqaaiabdsfaunaabaaaleaacqaixaqmaeqaaogaeyiyikraemivaq1aasbaasqaaiabikdayaqabaaaaagccagl7baaaagaaczcaiaaxmaadaqadiqaaiabikdayagaayjkaiaawmcaaaaa@9886@

where ti and tj are go terms in goseqi and goseqj, respectively. maxp is the maximum penalty score, and prematch is the weight of the last matched term. this method is characterized by the penalty/reward schema in which mismatched go terms receive fewer penalties, while matched ones receive more rewards as they move more deeply into the hierarchy when comparing two paths. this accurately reflects the semantic similarity within the go structure. the similarity between go terms ti and tj is defined as:

sim=max⁡goseqi∈ti,goseqj∈tjsseq.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwgpbqacqwgtbqbcqggoaakcqwg0baddawgaawcbagaemyaakgabeaakiabcycasiabdsha0naabaaaleaacqwgqbgaaeqaaogaeiykakiaeyypa0zaacbeaeaacyggtbqbcqgghbqycqgg4baeasqaaiabdeeahjabd+eapjabdofatjabdweafjabdgfarnaabaaameaacqwgpbqaaeqaasgaeyici4saemidaq3aasbaawqaaiabdmgapbqabawccqggsaalcqwghbwrcqwgpbwtcqwgtbwucqwgfbqrcqwgrbqudawgaaadbagaemoaaogabeaaliabgigiolabdsha0naabaaameaacqwgqbgaaeqaaawcbeaakiabdofatjabdofatjabdwgaljabdghaxjabcicaoiabdeeahjabd+eapjabdofatjabdweafjabdgfarnaabaaaleaacqwgpbqaaeqaaogaeiilawiaem4rackaem4ta8kaem4uamlaemyraukaemyuae1aasbaasqaaiabdqgaqbqabagccqggpaqkcqgguaglcawljagaaczcamaabmgabagaeg4mamdacagloagaayzkaaaaaa@71df@

based on this measurement, go annotations of selected genes could be organized by applying the hierarchical agglomerative clustering  algorithm in hopes of appropriately grouping them according to the closeness of their functional annotations, as shown in figure  <dig>  we then exhibit the clustering results in a colorful 2d array in which hotter color indicates higher similarity, and vice versa.

genesum – text mining-based summarization module
in addition, the genesum tackles the issues of literature information summarization. the algorithm of genesum proceeds as follows:

step 1
document preprocessing. the purpose of the preprocessing step is to collect relevant documents and filter out those sentences without mentioning keywords according to a customized lexicon for later stages. each sentence is regarded as a transaction and these candidate terms are items in transactions.

step 2
large itemsets mining. after detecting those candidate terms, the apriori association mining algorithm  <cit>  is employed to find corresponding large items sets for summarization. those large items are candidate genes or functions or diseases. figure  <dig> shows an instance of mining candidate items from sentences. in order to confirm that large items mentioned in the same sentence are really relevant, sentences containing large items are then passed to next processing step.

step 3
sentence structure simplification. large itemsets mining is a statistical method to identify candidate items which may be relevant. in order to confirm the accuracy of their relationships, the evidence in original sentences mentioning these large items should be extracted. but the complex structure of sentence is an obstacle for computer to extract the relationships of items. therefore, we used natural language processing  technology such as part-of-speech  tagging and phrase chunking to simplify the structure of candidate sentences in order to improve the accuracy of extraction of critical information for summarization. we use following three steps to achieve the goal:

 <dig>  pos tagging: part-of-speech information is essential for genesum to analyze the sentences. before further analysis, we employ brill's pos tagger <cit>  to annotate text with part-of-speech.

 <dig>  noun phrase chunking: in biomedical text many proper nouns are complex, such as "breast cancer" or "tumor supressor gene" etc, and their pos tags usually lead to confusion in information extraction. here, we've developed chunking rules, shown in table  <dig>  to identify these proper nouns and reduce the complexity of sequence of pos tags.

 <dig>  adjacent phrases merging: sometime the desired information may be described as "<gene a> interacts with <gene b> and <gene c>". this sentence mentions two relationship: "<gene a> interacts with <gene b>" and "<gene a> interacts with <gene c>". in order to extract this kind of relationship, we first merged phrases connected by conjunction, such as and/or, and regarded them as a single noun tagged with nn. thus, the sentence structure is further simplified and this benefits recognizing piece of text that does describes the desired relationships.

the simplified sequence of pos tags is the input of the finite-state-automata machine described below. hence correct simplification of sentence structure will improve the accuracy of extracted information.

step 4
summary generation. we designed a 9-state finite-state-automata machine <cit>  to recognize piece of text describing relationships of genes and functions and diseases according to the sentence structures, i.e. sequence of pos tags. in this step each set of candidate genes, functions and diseases obtained in step  <dig>  and the sequence of pos tags of corresponding sentence are inputs, and outputs are those pieces of sentences that describe the relationships of candidate these items. the fsa is illustrated in figure  <dig>  the states are numbered from  <dig> to  <dig>  state  <dig> and state  <dig> are terminal states, and the others are not. transition from state to state is trigged by tags of four major classes: nn, vb, in, cc. tags not belonging to any of the four classes will be ignored, such as "determiner" tag, dt. once the fsa encounters a tag belonging to one of the four major classes but current state can not switch to adjacent states, system will check current state to determine whether the corresponding pieces of sentence describes the desired information or not. if current state is terminal states, state  <dig> or state  <dig>  system will output the previous segment that contains candidate items and meets the rules; otherwise the sequence will be ruled out.

we use an example to illustrate how the fsa works. given a pos tagged sentence: "overexpression/nn of/in myc/nnp induces/vbz expression/nn of/in the/dt prohibitions/nns ./.", the state transition of the pos sequence is 1→ 2→ 1→ 2→ 3→ 4→ 5→  <dig>  because of the positions of myc and prohibitin in sentence and structure meets the rules defined in fsa, the system will report that myc is related gene of prohibitin.

using this approach described above genesum is able to summarize genes according to extracted information of related genes and functions and diseases. and genecluster can offer a visualization of functional relationships among genes. integrating these two modules, genelibrarian is a functional screening and information summarization platform that facilitates users to quickly review their interested genes.

RESULTS
this section investigates the effectiveness of the genelibrarian system by summarizing the related gene information and visualizing the annotation result.

questing the genelibrarian
users normally retrieve relevant articles by keywords such as genes or other diseases at the pubmed. with genelibrarian, users can obtain not only relevant articles, but also a visualized representation of annotation analysis and summarized information of these genes. before submitting any query about user-specified genes to pubmed, this system organizes them according to annotated semantic similarity computed by the method described above. a well-organized viewgraph will help users to determine the major functions or processes of these genes. similar work is done by biorag <cit> , but it ranks annotations according to the frequency of genes annotated by such terms. in contrast, genelibrarian groups them according to their semantic similarity and clusters analogous terms to form warm-colored blocks in the diagonal of an array. for instance, in figure  <dig>  dnapk was annotated "double-strand break repair" and atm, atr, gadd <dig>  pcna were annotated "dna repair". according to the count of genes, these two terms would be separated but they indeed share a similar concept; therefore, our system clustered them properly. in our clustering viewgraph, each warm block represents a major function or process. with the help of the text-mining module, users can expand their gene list with the information extracted from the literature. specifically, users provide a group of genes, and the genelibrarian system summarizes the information of related genes, functions, and diseases. to this information, users can add some of the extracted genes into their list for the next annotation analysis. moreover, users can also select specific genes and place in a query window whatever terms they want information about. the system will then use these genes and terms to retrieve relevant articles from pubmed and provide users with an absent/present list. users then can validate the result or any idea inspired by it using these articles.

the genelibrarian system offers users not only a convenient platform to gather summarized information about their genes of interest, but also the potential for discovering associated genes, functions, or diseases that may have never been considered.

visualizing the genecluster
in order to validate the significance of the resulted viewgraph from our approach, we use human cell cycle related genes set downloaded from the kegg as the test data. the cell cycle gene list contains  <dig> genes. we employed the biological process, a recognized series of events or molecular functions, in the go annotation as the basis for clustering purpose. the genecluster produced  <dig> major clusters and several minor clusters according to the similarity of corresponding annotations, as exhibited in figure  <dig>  for the two major clusters, we display the degrees of similarity, go annotations, and corresponding gene names in detail. it can be seen that the 1st and 2nd groups of genes involves two of the most important cellular processes, "dna repair" and "dna replication", respectively  <cit> .

furthermore, we reconstruct a new clustering viewgraph based on only those  <dig> genes shown above . two distinct clusters were obtained from clustering the annotations again, as illustrated in figure  <dig>  genecluster is able to extract different genes as several groups which with similar molecular function, biological process or cellular location by their gene ontology terms. hopefully users may need to re-cluster repeatedly until they find some interested results in the gene discovery and microarray analysis.

evaluating the abilities of information summarization
a convincing well annotated corpus is essential for evaluating performance of a system. but to annotate such corpus manually is not an easy job and it requires domain experts' participation. three genes, which experts are familiar with, and the related articles were used to evaluate performance of genesum. the number of obtained abstracts of prohibitin, tradd, and tsg <dig> are  <dig> and  <dig> out of  <dig> and  <dig>  respectively. the experts annotated these abstracts and examine the results manually, the results are shown in table  <dig>  in genesum, we divide the result into two confidence levels: "highly linked" and "linked" for the purpose of providing evidence information to users for reference. the results belonging to former level are more confident than those belonging to later one. table  <dig> indicates the ability of genesum to extract related information of "highly linked" level from the corpus for those genes mentioned above.

discussion and 
CONCLUSIONS
in omic era researchers are able to generate a large number of experiment data by many high-throughput techniques such as microarrys. consequently, how to efficiently review candidate genes is the pressing task that we focus on. in this study, we've developed a platform, genelibrarian, which facilitates users to screen functional relationships and summarize their interested group of genes. it is consist of two modules. genesum is a text-mining based module, it can summarize genes according to extracted information of related genes and functions and diseases. and the other module is genecluster, which are able to offer a visualization of functional relationships among genes. genelibrarian concentrates on providing well organized information to users and we believe that will be useful in their researches.

availability and requirements
project name: genelibrarian;

the genelibrarian is web-accessible at ; operating system: platform independent;

programming language: java;

license: gnu gpl;

any restrictions to use by non-academics: none.

authors' contributions
jhc conceived of the study, participated in its coordination, and drafted the manuscript. jws participated in benchmark study, and prepared the evaluation materials. clc designed and implemented prototype of the genelibrarian system. hhl refined and improved the system and wrote the manuscript. all authors read and approved the final manuscript.

