BACKGROUND
molecular docking tools are routinely utilised to predict the binding pose as well as the binding affinity of a ligand, usually a small organic molecule, bound to a target protein of interest. on one hand, the predicted pose suggests putative intermolecular interactions that can be helpful to understand the mechanism of protein-ligand binding. on the other hand, the predicted affinity prioritizes strong-binding ligands over weak-binding ones from a large library of compounds to evaluate.

a typical docking program implements a sampling algorithm to generate possible binding poses and a scoring function to estimate their binding affinity. the former operation is known as pose generation, and the latter is known as scoring. for example, modern docking tools such as autodock vina  <cit>  and idock  <cit>  are currently capable of generating near-native poses with a redocking success rate of over  <dig> % on three diverse benchmarks  <cit> .

recent years have seen the emergence and prosperity of a new class of scoring functions that use machine learning techniques to increase the accuracy of binding affinity prediction . rf-score  <cit>  was the first machine-learning scoring function introducing a substantial improvement over classical scoring functions. since then, several enhancements have been introduced, thereby resulting in rf-score-v <dig>  <cit>  and rf-score-v <dig>  <cit> , and other relevant studies  <cit> . rf-score has been utilised  <cit>  to successfully discover a large number of innovative binders of antibacterial dhqase <dig> targets, demonstrating its practical utility. to promote its use, rf-score-v <dig> has been incorporated into a user-friendly webserver called istar  <cit> , available at http://istar.cse.cuhk.edu.hk/idock, for large-scale docking-based prospective virtual screening. furthermore, recent study  <cit>  has investigated the benefit of training machine-learning scoring functions with low-quality structural and interaction data.

in prospective structure-based virtual screening  <cit> , scoring of the docked poses of a molecule is required because the experimentally determined pose is not available in most cases. therefore, accurate prediction of binding affinity of docked poses, rather than co-crystallised poses, is required for ranking compounds from screening libraries.

pose generation error is typically measured by comparing the geometry of the pose generated by the docking software and that of the same molecule co-crystallised with the considered protein . the impact of this error on binding affinity prediction is yet to be systematically analysed across diverse protein-ligand complexes. in this study we investigate the impact of pose generation error on the predictive performance of both classical and machine-learning scoring functions, and propose a novel approach to correct such error. furthermore, we release free software implementing these improvements.
fig.  <dig> example of pose generation error. top: crystal structure of pi3k α in complex of a tetrahydropyrazolopyrazine codenamed 3k <dig> . bottom: re-docked pose of 3k <dig>  generated by idock  <cit> . hydrogen bonds are rendered as dashed cyan lines, and π stackings are rendered as dashed pink lines. the rmsd  between the co-crystallised pose and the re-docked pose of 3k <dig> is  <dig>  Å, which is a quantitative measure of pose generation error. these two plots were created by iview  <cit> , an interactive webgl visualizer that circumvents the requirement of java, yet supports the construction of macromolecular surface and the display of virtual reality effects and molecular interactions. iview is freely available at http://istar.cse.cuhk.edu.hk/iview/




methods
this section introduces and motivates the use of four scoring functions building upon autodock vina, two benchmarks to evaluate and compare performance of these scoring functions, the performance metrics, and the experimental setup.

model  <dig> - autodock vina
autodock vina  <cit>  was chosen as a baseline scoring function because of its popularity among the research community. vina’s popularity roots in its substantial improvements on both the average accuracy of the binding pose prediction and the running speed. its remarkable performance in pose generation as well as its open source nature are other appealing aspects of this widely-used tool.

like all classical scoring functions  <cit> , vina assumes a predetermined functional form. vina’s score for the kth pose of a molecule is given by the predicted free energy of binding to the target protein and computed as: 
  <dig> ek′=ek,inter+ek,intra−e <dig> intra1+w6nrot 

where 
  <dig> ek,inter=w1·gauss1k+w2·gauss2k+w3·repulsionk+w4·hydrophobick+w5·hbondingk 

  <dig> w1=− <dig> w2=− <dig> w3= <dig> w4=− <dig> w5=− <dig> w6= <dig>  

ek′ is the predicted free energy of binding reported by the vina software when scoring the kth docked pose. ek,inter and ek,intra are the inter-molecular and intra-molecular contributions, respectively, which have both the same functional form described in eq.  <dig> but are summed over different atom pairs. the values for the six weights were calculated by ols  using a nonlinear optimisation algorithm as it has been the case in related force-field scoring functions  <cit> , although this process was not fully disclosed in the original publication  <cit> . nrot is the calculated number of rotatable bonds. the predicted free energy of binding in kcal/mol units was converted into pkd units with pkd=− <dig> e so as to compare to binding affinities in pkd or pki units. mathematical expressions and further explanations can be found in  <cit> .

unlike our previous study  <cit>  on scoring crystal poses, where k= <dig> because only the crystal pose was considered, this study aims at training and testing on docked poses, so k will range from  <dig> to  <dig> depending on the specific pose to use for each molecule . thus ek,intra and e <dig> intra do not necessarily cancel out. as a result, the five terms from ek,intra were considered as additional features in models  <dig>   <dig> and  <dig> 

model  <dig> - mlr::vina
this model retains the  <dig> unweighted vina terms  as features, but changes the regression method to multiple linear regression , a regression model commonly adopted by classical scoring functions, such as empirical scoring functions. the use of mlr implies an additive functional form and therefore mlr::vina is a classical scoring function  <cit> .

vina’s scoring function is not exactly a sum of energetic terms because w6≠ <dig>  on the test set.

model  <dig> - rf::vina
this model also retains the  <dig> unweighted vina terms as features, but changes the regression method to random forest   <cit> , so as to implicitly learn the functional form from the data. hence this model circumvents the modelling assumption of a predetermined functional form and thus allows to investigate the impact of such modelling assumption by comparing rf::vina to mlr::vina. besides rf, other machine learning techniques such as svr   <cit>  can certainly be applied to this problem, although this is out of the scope of this study.

a rf is an ensemble of different decision trees randomly generated from the same training data via bootstraping  <cit> . rf trains its constituent trees using the cart algorithm  <cit> , and selects the best data split at each node of the tree from a typically small number  of randomly chosen features. in regression applications, the rf prediction is given by arithmetic mean of all the individual tree predictions in the forest.

for each value of the mtry parameter from  <dig> to all  <dig> features, we built a rf model with  <dig> trees, as we and others  <cit>  have not observed any substantial gain in performance by training rf with a higher number of trees on this class of problems. the selected model was the one that led to the lowest rmse on a subset of training data of each tree collectively known as the oob  data. because rf is stochastic, this process was repeated ten times with ten different random seeds. the predictive performance was reported for the rf with the best seed that resulted in the lowest rmse on the test set. further details on rf model building in this context can be found in  <cit> .

model  <dig> - rf::vinaelem
this model retains rf as the regression method, but expands the feature set to  <dig> features by adding the  <dig> rf-score  <cit>  features. like in the training process of rf::vina, the same ten seeds were used, and for a given random seed, a rf model for each mtry value from  <dig> to  <dig> was built and that with the lowest rmse on oob data was selected. the predictive performance was reported for the rf with the best seed that led to the lowest rmse on the test set.

rf-score features are defined as the occurrence count of intermolecular contacts between elemental atom types i and j, as shown in eqs.  <dig> and  <dig>  where dkl is the euclidean distance between the kth protein atom of type j and the lth ligand atom of type i calculated from a structure; kj is the total number of protein atoms of type j  and li is the total number of ligand atoms of type i ; ℋ is the heaviside step function that counts contacts within a neighbourhood of dcutoff Å. for instance, x <dig>  is the number of occurrences of ligand nitrogen atoms  hypothetically interacting with protein oxygen atoms  within a chosen neighbourhood. full details on rf-score features are available in  <cit> . 
  <dig> xij=∑k=1kj∑l=1liℋ 

  <dig> x={xij}∈n <dig> 

pdbbind v <dig> benchmark
we adopted the pdbbind v <dig> benchmark  <cit> , arguably the most widely used  <cit>  for binding affinity prediction of diverse complexes. its test set comprises  <dig> diverse complexes from the core set, whereas its training set comprises  <dig> non-overlapping complexes from the refined set. both the test and training sets come with measured binding affinities spanning more than  <dig> orders of magnitude. this benchmark has the advantage of permitting a direct comparison against the same four models that were trained and tested on crystal poses  <cit>  of this benchmark.

pdbbind v <dig> blind benchmark
we also adopted the pdbbind v <dig> blind benchmark  <cit> , a recently proposed new benchmark mimicking a blind test to provide a more realistic validation than the pdbbind v <dig> benchmark. its test set is composed of all the complexes in the pdbbind v <dig> refined set that were not in the v <dig> refined set, i.e. those  <dig> complexes that were newly added in the v <dig> release. its training set is simply the v <dig> refined set, which contains  <dig> complexes. by construction, this benchmark can be regarded as a blind test in that only data available until a certain year is used to build the scoring function that will be used to predict the binding affinity of future complexes as if these had not yet been measured. consequently, the test set and training set do not overlap. again, this benchmark has the advantage of permitting a direct comparison against the same four models that were trained and tested on crystal poses  <cit>  of this benchmark.

in addition to the above training set, three more training sets were added in order to study how the performance of the four models would vary given different number of training complexes. the refined sets of pdbbind v <dig> , v <dig> , v <dig>  and v <dig>  were chosen so that there is approximately the same number of complexes between consecutive releases. complexes containing metal ions not supported by vina were discarded. more details about this benchmark can be found in  <cit> .

performance measures
as usual  <cit> , predictive performance was quantified by the root mean square error , standard deviation , pearson correlation  and spearman rank-correlation  between predicted and measured binding affinities. their mathematical expressions are shown in eqs.  <dig>   <dig>   <dig>  and  <dig>  given a scoring function f and the measured binding affinity y and the features x⃗ characterising the nth complex out of n complexes in the test set, p=f) is the predicted binding affinity, {p^} are the fitted values from the linear model between {y} and {p} on the test set, whereas {yr} and {pr} are the rankings of {y} and {p}, respectively. note that sd was calculated in a linear correlation, but rmse was not. lower values in rmse and sd and higher values in rp and rs indicate a better predictive performance. 
  <dig> rmse=1n∑n=1np−y <dig> 

  <dig> sd=1n−2∑n=1np^−y <dig> 

  <dig> rp=n∑n=1npy−∑n=1np∑n=1nyn∑n=1n)2−∑n=1np2n∑n=1n)2−∑n=1ny <dig> 

  <dig> rs=n∑n=1npryr−∑n=1npr∑n=1nyrn∑n=1n)2−∑n=1npr2n∑n=1n)2−∑n=1nyr <dig> 

the root mean square deviation  measures how geometrically different the redocked pose is from the corresponding co-crystallized pose of the same ligand molecule, i.e. the pose generation error. suppose na is the number of heavy atoms, xc,yc,zc and xd,yd,zd are the 3d coordinate of the nth heavy atom of the crystal and docked poses, respectively, the pose generation error is calculated as: 
  <dig> rmsd=1na∑n=1naxc−xd2+yc−yd2+zc−zd <dig> 

experimental setup
to generate docked poses, each ligand in the two benchmarks was docked into the binding site of its target protein using vina with its default settings. this process is known as redocking. the search space was defined by finding the smallest cubic box that covers the entire ligand and then by extending the box by 10Å in x, y, z dimensions. water molecules were removed, while metal ions recognized by vina were retained as part of the protein. this preprocessing procedure is commonly adopted in the development of both classical scoring functions  <cit>  and machine-learning scoring functions  <cit> .

redocking a ligand into its cognate protein resulted in up to nine docked poses. thus, the question arises of which pose best represents its molecule for calculating the values of the features. here we evaluate different schemes referring to the specific pose from which the features are extracted. in scheme  <dig>  the chosen pose is the crystal pose. in scheme  <dig>  the chosen pose is the docked pose with the best vina score, i.e. the one with the lowest vina score in terms of estimated free energy of binding in kcal/mol units. we trained the four models on both crystal and docked poses , and tested them also on both crystal and docked poses .

to make our experiments comprehensive, we also evaluated additional schemes. in scheme  <dig>  the chosen pose is the docked pose with the lowest rmsd. in scheme  <dig>  the chosen pose is the docked pose with a vina score closest to the measured binding affinity. in scheme  <dig>  the chosen poses are all the  <dig> docked poses, which hence results in a  <dig> times larger feature set . for ligands with less than  <dig> docked poses returned, the features extracted from the pose with the lowest vina score are repeated as many times as poses are missing. in scheme  <dig>  the chosen poses are the  <dig> docked poses with the lowest and the second lowest vina score, which hence results in a double-sized feature set . for ligands with less than  <dig> docked poses outputted, the features extracted from the pose with the lowest vina score are repeated. the rationale of introducing these schemes is that, schemes  <dig> to  <dig> help to determine which particular pose would be useful for improving predictive accuracy, while schemes  <dig> and  <dig> help to examine the effect of pose ensemble instead of a single pose.

hereafter whenever we mention the docked pose, we implicitly refer to the one with the best vina score , if not specified otherwise.

RESULTS
pose generation error slightly worsens binding affinity prediction
this question was analysed by using schemes  <dig> and  <dig>  after redocking by vina, we used rmsd to quantify the pose generation error, i.e. how different the 3d geometry of the redocked pose is from the corresponding crystal pose of the same ligand molecule. a rmsd value of 2Å was used as a commonly accepted threshold for a correctly reproduced crystal pose.  <dig> out of the  <dig> ligands  in the pdbbind v <dig> benchmark and  <dig> out of the  <dig> ligands  in the pdbbind v <dig> blind benchmark had their best-scoring docked pose with rmsd < 2Å. when all the docked poses of the molecule were considered, the redocking success rate of the two benchmarks increased to  <dig> %  and  <dig> % , respectively. these results are consistent with the previous results obtained in  <cit> , where vina managed to predict a pose sufficiently close to that of the co-crystallized ligand as the best-scoring pose in over half of the cases.

tables  <dig> and  <dig> show the predictive performance of the four models trained on crystal and docked poses and tested also on crystal and docked poses on the pdbbind v <dig> benchmark and the pdbbind v <dig> blind benchmark, respectively. figures  <dig> and  <dig> visualize the same results using boxplots, as rf models are stochastic. note that vina  was trained on crystal poses and used out-of-the-box without re-training, so its results for training scheme  <dig> are simply a duplicate of its results for training scheme  <dig> 
fig.  <dig> box plots of performance of the four models trained on crystal and docked poses and tested also on crystal and docked poses of the pdbbind v <dig> benchmark. model  <dig> is autodock vina, model  <dig> is mlr::vina, model  <dig> is rf::vina, and model  <dig> is rf::vinaelem. in the x axis, trn: <dig> means the four models were trained in scheme  <dig>  i.e. on crystal poses, and trn: <dig> means the four models were trained in scheme  <dig>  i.e. on docked poses. likewise, tst- <dig> and tst- <dig> mean the four models were tested on crystal and docked poses, respectively. model  <dig> was executed out-of-the-box, so its results for training scheme  <dig> were repeated for training scheme 2

fig.  <dig> box plots of performance of the four models trained on crystal and docked poses and tested also on crystal and docked poses of the pdbbind v <dig> blind benchmark. the same notations are applied here as in fig. 2




from these results, several interesting observations can be made. first, for model  <dig>  its performance tested on docked poses was always better than its performance tested on crystal poses . particularly, the rmse error was greatly dropped from  <dig>  to  <dig>  on the pdbbind v <dig> benchmark and from  <dig>  to  <dig>  on the pdbbind v <dig> blind benchmark. the result that vina made better prediction of binding affinity from docked poses than from crystal poses is possibly due to the fact that docked poses are by construction optima of the objective function spanned by the vina score, which may favor prediction of docked poses over unoptimized crystal poses.

second, for models  <dig>   <dig> and  <dig> trained on crystal poses, their performance tested on docked poses was always worse than their performance tested on crystal poses . this is well anticipated because of the presence of pose generation error. for instance, on the pdbbind v <dig> blind benchmark, model  <dig> trained on crystal poses obtained rs= <dig>  when tested on crystal poses . its performance degraded when tested on docked poses of the same molecules with rs= <dig>  . the impact of pose generation error on binding affinity prediction is thus quantified by Δrs=- <dig> .

third, for models  <dig>   <dig> and  <dig> tested on docked poses, their performance was better when they were trained on docked poses than their counterparts trained on crystal poses . in other words, a substantial part of the pose generation was corrected. for instance, on the pdbbind v <dig> blind benchmark, model  <dig> trained on docked poses obtained rs= <dig>  when tested on docked poses . hence the impact of pose generation error on binding affinity prediction is reduced in a  <dig> % . this means that a way to improve performance on docked poses is to train the model on docked poses instead of on crystal poses. indeed, test set performance after this error-correcting procedure is much closer to that of predicting the binding affinity in the absence of pose generation error, i.e. on crystal structures. in practice, different scoring functions can be built depending on whether one wants to score crystal poses or docked poses.

fourth, for models  <dig>   <dig> and  <dig> tested on crystal poses, the models trained on docked poses  did not outperform their counterparts trained on crystal poses. this is also well anticipated due to the impact of pose generation error, and suggests that it is not feasible to improve the predictive performance on crystal poses by using docked poses for training. to sum up, if the desired application is to score a crystal pose, it would be better to train the scoring function on crystal poses; and if the desired application is to score a docked pose, it would be better to train the scoring function on docked poses.

lastly, regardless of the training or test schemes, model  <dig> consistently outperformed model  <dig>  which in turn outperformed model  <dig>  which in turn outperformed model  <dig>  it is remarkable that the best scoring function, model  <dig> , when trained on docked poses, achieved the highest performance in the literature on the pdbbind v <dig> benchmark in the more common application of re-scoring docked poses, as it is required when carrying out docking-based prospective virtual screening  <cit> . here we denote this version of rf::vinaelem as rf-score-v <dig> specifically for the purpose of binding affinity prediction given a docked pose from vina. importantly, since vina and rf::vina used the same features and were trained on the same data, rf::vina performed much better in predicting binding affinity than the widely-used vina software while having the same applicability domain.

training with more complexes on docked poses still improves predictive performance
in a previous study  <cit> , with the help of the pdbbind v <dig> blind benchmark, we showed that training rf models with larger datasets greatly improved their predictive performance on scoring crystal poses, while the performance of mlr::vina nearly stayed flat. here we observe similar results when the models were trained on docked poses and tested also on docked poses. as shown in fig.  <dig>  when more complexes were used for model training, rf::vinaelem consistently increased its predictive accuracy in terms of rmse, sd, rp and rs. in contrast, for mlr::vina, its accuracy improvement obtained from larger training sets was just marginal, if not negligible. the performance gap between mlr::vina and rf::vinaelem is not only substantial, but grows as more data is available for training, thus increasing the importance of employing rf in scoring function development. more importantly, the availability of crystal poses is limited by the number of experimentally resolved structures, whereas docked poses can be generated by docking tools if their binding site is known. this means that, by using docked poses for training, the training data size can be remarkably larger than limiting the training data to crystal poses only, and therefore even higher performance could in principle be achieved by incorporating more training complexes produced by docking.
fig.  <dig> box plots of performance of the four models trained on docked poses and tested also on docked poses of the pdbbind v <dig> blind benchmark, with four incrementally-sized training sets. model  <dig> is autodock vina, model  <dig> is mlr::vina, model  <dig> is rf::vina, and model  <dig> is rf::vinaelem



correlation between pose generation error and binding affinity prediction error is low
we analyse how different rmsd values affect binding affinity prediction by comparing the rmsd of the docked pose with the individual absolute error in its binding affinity prediction by the four models . it is widely believed that the higher the pose generation error, the larger the error on predicting the binding affinity of that pose will be. nevertheless, this is actually not the case.

figures  <dig> and  <dig> plot this information for each of the four scoring functions trained and tested on docked poses of the two benchmarks, respectively. strikingly, the four scoring functions are particularly robust to pose generation error, with reasonably accurate prediction still being obtained in poses with rmsd of almost 15Å. the rp and rs values stated at the top of these plots quantify how little the pose generation error generally correlates with the binding affinity prediction error, regardless of whether a classical or machine-learning scoring function is being considered. this is likely to be connected to uncertainty associated to relating a static crystal structure of the complex with its measured binding affinity which is the outcome of the dynamic process of binding, as discussed in  <cit> . to the best of our knowledge, these behaviour has not been communicated yet for classical scoring functions, which is highly surprising given the intense research that has been carried out over the years in this area. on the other hand, it is noteworthy that, while the binding affinities of some complexes are very well predicted , some others have errors of more than  <dig> pkd units .
fig.  <dig> correlation plots of predicted binding affinity absolute errors achieved by the four models trained on docked poses and tested on docked poses of the pdbbind v <dig> benchmark against the rmsd values from redocking the  <dig> test set complexes by vina. model  <dig> is autodock vina, model  <dig> is mlr::vina, model  <dig> is rf::vina, and model  <dig> is rf::vinaelem

fig.  <dig> correlation plots of predicted binding affinity absolute errors achieved by the four models trained on docked poses and tested on docked poses of the pdbbind v <dig> blind benchmark against the rmsd values from redocking the  <dig> test set complexes by vina. model  <dig> is autodock vina, model  <dig> is mlr::vina, model  <dig> is rf::vina, and model  <dig> is rf::vinaelem



using multiple docked poses for training does not improve predictive performance
in addition to using crystal and docked poses  for training and testing, we further evaluated several strategies , aiming to see if using another docked pose of a molecule, or even multiple docked poses, could possibly increase the predictive performance of the resultant models. remember that scheme  <dig> uses the docked pose with the lowest rmsd, scheme  <dig> uses the docked pose with a vina score closest to the measured binding affinity, scheme  <dig> uses all the  <dig> docked poses, and scheme  <dig> uses the two top-scoring docked poses. in practice, schemes  <dig> and  <dig> cannot be used for testing purpose because neither the rmsd nor the measured binding affinity of the test set complexes are known. hence, models trained in schemes  <dig> and  <dig> had to be tested in schemes  <dig> and  <dig> instead. on the other hand, models trained in schemes  <dig> and  <dig> can only be tested in schemes  <dig> and  <dig>  respectively, because the same set of features must be used in both training and testing.

the results of schemes  <dig> to  <dig> on the two benchmarks are shown in tables  <dig> and  <dig>  interestingly, when tested on crystal poses , none of the models trained in schemes  <dig> to  <dig> outperformed their counterparts trained in scheme  <dig>  similarly, when tested on docked poses , none of the models trained in schemes  <dig> to  <dig> outperformed their counterparts trained in scheme  <dig>  either. the interpretation of such results is two-fold. first, training with the docked pose with the lowest rmsd  or the docked pose with a vina score closest the measured binding affinity  did not help to improve predictive performance on the test set. second, training with multiple docked poses of a molecule, instead of a specific single docked pose, did not help to improve predictive performance either. taken together, these results suggest that a novel way to improve predictive performance on docked poses is to train the scoring functions on docked poses, i.e. those with the best vina score.


discussions and 
CONCLUSIONS
this is the first study that systematically investigates the impact of pose generation error on binding affinity prediction for both classical and machine-learning scoring functions. our comprehensive results show that pose generation error only introduces a small degradation in the accuracy of scoring functions. to minimize this negative impact, we found that re-training the scoring functions on docked poses, instead of crystal poses, corrects a substantial part of this degradation. machine-learning scoring functions are almost always trained on crystal poses and tested on crystal or docked poses without changing composition of training or test sets. here we still tested the scoring functions on docked poses, but now trained them on docked poses, which has been shown to improve test set performance with respect to the scoring functions trained on crystal poses. in short, one straightforward approach to enhancing predictive accuracy on docked poses is to re-train the scoring function on docked poses.

we have also found that training rf::vinaelem on docked poses with more complexes substantially increased its predictive accuracy, whereas it was not the case for mlr::vina. their performance gap will become larger given that more and more structural and interaction data will be available for training in the future. importantly, whereas the availability of crystal poses is limited by the number of experimentally resolved structures, docked poses of the many known ligands of these targets can be generated by docking tools if their binding site is known. this means that, by using docked poses for training, the training data size can be remarkably larger than limiting the training data to crystal poses only, and therefore even higher performance could in principle be achieved by incorporating more training complexes produced by docking.

furthermore, we investigated the dependency of rmsd of test set complexes with binding affinity prediction. in contrast to the commonly-held view that the higher the pose generation error, the larger the prediction error of the binding affinity of that pose, we actually observed that the correlation between pose generation error and binding affinity prediction error is low. this indicates that predicting the binding affinity of a docked pose having a large pose generation error is not necessarily more difficult than predicting the binding affinity of a docked pose having a small pose generation error.

meanwhile, we studied the effect of using docked pose ensemble of a molecule, in addition to merely a single pose, for training scoring functions. this is worth doing because until now existing scoring functions all use just one pose per molecule for training. although our presented schemes  <dig> to  <dig> did not succeed in increasing predictive performance, further analysis of the influence of the number of poses on the error in binding affinity prediction might lead to better performance.

another contribution of this study is the release of free software implementing rf::vinaelem trained on docked poses, named rf-score-v <dig>  so that it can be directly used by the large number of vina users . with this purpose, we have trained the best of rf-score-v <dig> on the most comprehensive set of high-quality complexes  and implemented it as easy-to-use software that directly re-scores vina-generated poses. see the abstract for availability and the readme file therein for operating instructions.

last but not the least, although we only used rf in this study as a proof of concept, we believe our conclusions can be applicable to other machine-learning scoring functions, which could possibly achieve even better results on this problem.

additional files
additional file  <dig> correlation plots of measured and predicted binding affinities by the four models trained on crystal poses and tested on crystal poses of the pdbbind v <dig> blind benchmark. 



additional file  <dig> correlation plots of measured and predicted binding affinities by the four models trained on crystal poses and tested on docked poses of the pdbbind v <dig> blind benchmark. 



additional file  <dig> correlation plots of measured and predicted binding affinities by the four models trained on docked poses and tested on docked poses of the pdbbind v <dig> blind benchmark. 



additional file  <dig> correlation plots of measured and predicted binding affinities by the four models trained on docked poses and tested on crystal poses of the pdbbind v <dig> blind benchmark. 




from 11th international meeting on computational intelligence methods for bioinformatics and biostatistics cambridge, uk. 26- <dig> june 2014

declaration
this work has been carried out thanks to the support of the a*midex grant  funded by the french government ≪investissements d’avenir‘ ≫ program, the direct grant from the chinese university of hong kong and the grf grant  from the research grants council of hong kong sar. publication of this article was funded by the direct grant from the chinese university of hong kong and the grf grant  from the research grants council of hong kong sar.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>   <dig>  selected articles from the 11th international meeting on computational intelligence methods for bioinformatics and biostatistics . the full contents of the supplement are available online https://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement- <dig> 

availability of data and materials
this study did not generate data. materials to reproduce the results and apply the presented machine-learning scoring functions to the structures of other protein-ligand complexes are available at http://istar.cse.cuhk.edu.hk/rf-score- <dig> tgz
and http://ballester.marseille.inserm.fr/rf-score- <dig> tgz.

authors’ contributions
pjb designed the study. hl wrote the manuscript with pjb hl implemented the software and ran all the numerical experiments. all authors discussed results and commented on the manuscript. all authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
