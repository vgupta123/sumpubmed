BACKGROUND
minimotifs are short peptide sequences that are the recognition elements for many protein functions. these short sequences are responsible for protein interaction interfaces involving other proteins  in cells, trafficking proteins to specific cellular compartments, or serving as the basis for enzymes to post-translationally modify the minimotif sequence. at present, many minimotif instances and consensus sequences are collected into a wide spanning set of relatively small databases such as mnm, elm, domino, pepcyber, and scansite  <cit> . most databases focus on specific subsets of minimotifs. for example, phospho-elm has merged with phosphobase as a database that focuses on instances of phosphorylation on proteins  <cit> . likewise, scansite largely concentrates on protein interaction minimotifs for a small subset of domains. in addition to these databases, recent years have seen increased publication rates of high throughput studies that generate minimotif data. despite this growth in information, many of the reported minimotif attributes have yet to be integrated into any database.

the goal of the mnm project is to integrate well-structured data for a set of defined attributes of minimotifs in a single, non-redundant data repository with high accuracy. the number of reports of minimotifs in the literature has continued to grow since the late 1980's, recently with more rapid growth due to high throughput functional peptide screens. previously, we showed that the several thousand minimotifs in mnm can be discretized into a structured syntax which can be directly enforced and modeled in a relational database  <cit> . through this process, we recognized the need for a system that manages minimotif annotation, which would help identify papers, reduce the time required for manual annotation, reduce errors, duplications and ambiguities, and aids in maintenance of the database.

currently, there are no bioinformatics tools designed for annotating minimotifs from the literature. most reported annotation methodologies concentrate mainly on genomes and proteome scale data  <cit> . a proposed stratification of annotation efforts refers to sequence-based annotation as the first dimension of genome annotation which defines components  <cit> . the second dimension can be considered those annotations that focus on component interactions. this is exemplified by the human kinome and other types of functional annotations in the swissprot and entrez gene databases  <cit> . annotation of minimotifs can be considered a second dimension annotation.

in considering whether to design a novel minimotif annotation system or adapt an existing annotation system used for another purpose, we identified a number of requirements to facilitate accurate, non-redundant, and efficient annotation of minimotif literature. we wanted the system to interface with a relational database that enforces controlled vocabularies from external databases and eliminates duplication. the system should be able to read, write, and edit entries in a database. the system should display papers that have been and are yet to be annotated, as well as support database-driven machine learning that scores papers for minimotif content, paper sorting, and paper filtering. the system should also have the capability to track annotations from multiple annotators. finally, the system should be capable of accepting the fine-grained information content of minimotifs, in a structured and comprehensive manner.

despite advances in management and mining of scientific literature, no tool existed that met the requirements we required for accurately annotating minimotif data. for example, each of the existing annotation tools such as mimas, textpresso and biorat only addresses a subset of the above requirements  <cit> .

in this paper, we describe mimosa, a minimotif system for annotation designed for managing and facilitating minimotif annotation. mimosa allows for minimotif-centric analysis of pubmed abstracts and annotation of minimotifs. mimosa's contents are entirely database driven, thus enabling its adaption as an annotation tool for other information spaces that require extraction of information from the primary literature.

implementation
we present the generalizable architecture and implementation of mimosa, an application, which allows minimotif annotations to be entered, reviewed, edited, approved by multiple users, and disseminated through the publically-available mnm web application. we also describe a generalizable paper-scoring algorithm and its implementation for ranking papers that contain minimotifs. by embedding this methodology into mimosa, pubmed abstracts can be scored and associated papers can be ranked based on the presence of minimotif information content.

mimosa was developed in java http://java.sun.com and interfaced with a mysql database http://www.mysql.com using the hibernate object-relational mapper http://www.hibernate.org. mimosa was built to interface with the mnm relational database, which has been expanded to include the ability to store information about papers to be annotated and the relationships between minimotif annotations and their source papers  <cit> . the graphical user interface  was developed using swing http://java.sun.com/docs/books/tutorial/uiswing. supporting applications used for offline data processing were also developed in java. these applications identify new keywords and terms used to highlight text in the abstract display window and download content and metadata from pubmed for papers added into the system. for these features, we have relied extensively on the pubmed application programming interface  and remote procedure call  library.

unlike other annotation and text mining systems, the data artifacts produced by mimosa are accessible by an api, which is syntax-driven and strongly typed. this allows for high-precision annotation of articles that is not coupled to any one data repository. thus, mimosa may easily be configured, for example, to save annotations to an xml document or text file by simply modifying the data access layer implementation.

the generality of the mimosa application enables its adaptation to other databases and other knowledge domains. this was a consideration made during the development of mimosa, so as to more broadly enable adaption to other bioinformatics projects.

RESULTS
mimosa prototype design
the primary function of mimosa is to support the process of annotating functional minimotifs and their metadata from the primary literature. secondary functions include minimizing user errors and data redundancy, improving annotation efficiency through techniques such as automated motif/activity/target suggestions, and aiding in the identification of papers containing minimotif content through a machine learning-based ranking system. mimosa features distinct components and algorithms, which streamline these processes.

the general annotation workflow is as follows : using the mimosa client software, the annotator accesses the server housing the mnm database. the user selects a paper for annotation using the paper list viewer. selection of a paper automatically triggers the opening of the abstract viewer and the minimotif annotation form and directs an external web browser to online versions of the abstract and full text paper, if available. based on the information in the viewers, the minimotif annotation form is used to modify an existing or enter a new minimotif annotation, which is then committed to the database. the annotation status of the paper is updated using the paper tracker form.

the components of mimosa can be broken up into three functional categories: mnm database management tools, minimotif annotation tools, and paper management tools. descriptions of each component follow.

the database management tools consist of a minimotif browser and a minimotif editor. the minimotif browser shown in fig. 2a displays all minimotif annotations in the mnm database and associated attributes in a scrollable window that also displays the total number of minimotifs. a paper browser is accessed from a tab and gives a list of papers that need annotation. from the paper or minimotif browsers, a minimotif annotation form can be launched by double clicking a row to enter a new or modify an existing minimotif annotation . this opens a tabbed frame where all the minimotif attributes are displayed and can be added or changed. minimotif annotations can be selected for exportation as comma-separated value  files for external manipulation. likewise, an import function allows import from a csv file. the minimotif annotations in the browser can be sorted based on a number of different attributes from a drop-down menu.

the minimotif annotation tools consist of the minimotif annotation form, the abstract viewer, and the protein sequence validator. multiple forms can be displayed at once. on the minimotif annotation form, there is a "clone" function, which opens a new instance of the form pre-filled with all of the minimotif-syntactical attributes except the minimotif's sequence and position. this is intended to facilitate more efficient annotation of high-throughput papers for minimotif discovery , where several attributes of a minimotif are varied in a controlled fashion, thus generating a broad landscape of similar minimotifs with subtle variations  <cit> .

to assist the annotator in filling out the form, multiple types of support are provided. double-clicking on any entry field in the form will display a context menu that gives the suggested choices based on relevant content in the mnm database. in the modification tab, selecting a modification from the context menu will populate a different field in the form with a psi-mod accession number. the abstract viewer  automatically displays the pubmed abstract of paper that has been selected and highlights keywords and terms in different colors based on attribute entries in the database. the coloring scheme is minimotif , activity , target , putative minimotif , affinity , protein domain ; if the word "motif" is present, it is bolded. selection of a paper with a right click also opens the abstract on the pubmed web site and a full text version of the paper, if available, in a web browser. this enables efficient access to full text papers and to other ncbi data using the "links" hyperlink. linked data of interest to the annotator includes structure and refseq accession numbers.

another component that assists annotators is the protein sequence validation function . once an accession number has been entered, the protein sequence is automatically retrieved from a local version of public databases such as ncbi and displayed in the protein sequence window. once loaded, the position of the minimotif in the protein sequence is bolded. this ensures that the minimotif is indeed present in the selected protein.

the paper management tools consist of the paper browser, paper status window, and paper ranking components, which are addressed later. the paper browser shown in fig. 4a can be used to manage millions of papers. the paper browser displays metadata about the pubmed abstracts of all papers entered into a table of the mnm database. the metadata includes pubmed id, authors, affiliation, journal, publication year, comments, tracking status, paper score, title, url, abstract, and database source. a paper score  is used as a default sort parameter, although the entire table can also be sorted by pubmed id, paper status, pubmed identifier, publication year, or journal using a pulldown menu. since the table containing papers has more than  <dig>  tuples, only the first  <dig>  results of any sort are shown. when a pubmed identifier is entered and the "add paper" button is selected, the associated paper is retrieved from ncbi and inserted into the database. any abstract can be retrieved for review by selecting the "launch by pubmed id.".

the paper status window, a subcomponent of the abstract window, is used to track the annotation status of papers . each time a paper is reviewed and the user updates the status of the paper, a "review event" is created and appended to the paper's history, which is stored in the database; the review event identifies the annotator and current status of the paper. papers can be assigned one of a number of statuses shown in table  <dig> that correlate with different tracking functions.

modification of the minimotif miner data model and syntax
in order to better exploit mimosa's functionality and facilitate unambiguous and accurate annotation, we recognized that some changes to the model we previously presented were required  <cit> . our minimotif syntax defined the motif source as the protein that contains the minimotif. however, a consensus minimotif definition such as xx can have multiple occurrences in a minimotif source so we needed to specify a position for the first minimotif residue relative to the protein sequence start position in the corresponding sequence file specified by a protein sequence accession number. another change we considered is that experiments, which contribute to minimotif definitions may either use peptides or full length proteins. we think it is important to specify this as an attribute since the two sources represent very different chemical entities. finally, we have started using psi-mod and go controlled vocabularies for indicating activities and post-translational modifications of minimotifs.

identification of papers with minimotif content
the mnm database contains many papers that were previously annotated for minimotif content, but many more papers have yet to be annotated. pubmed contains well over  <dig> million abstracts of scientific papers. only those papers that have minimotif content are useful for annotation. our first approach to pare down the paper list used keyword searches to identify papers, which were likely to contain minimotif content; however, this approach was not efficient. therefore, we developed new strategies and an efficiency metric for the evaluation and comparison of these strategies .

we initially evaluated six general strategies: keywords/medical subject headings , date restriction, forward and reverse citations, authors with affiliations, and minimotif regular expressions. a detailed description of the strategies and results are presented in additional file  <dig>  these strategies were evaluated using a minimotif identification efficiency  score, which is defined as the percentage of papers that contain minimotifs. collectively, these strategies provided a list of approximately  <dig>  abstracts, of which ~30% were expected to contain minimotifs based on extrapolation.

design and training of the textmine algorithm that scores papers for minimotif content
we wanted to score and rank these papers as a means to better identify the ~30% that contain minimotifs and develop a strategy for scoring all pubmed papers that can be used for future maintenance of the mnm database. to rank papers for minimotif content, we designed the paper scoring  algorithm and trained the algorithm using structured data for defined paper sets in the mnm database.

the basic problem of interest can be stated as follows: given a research article , automatically rank the article by its likelihood of containing a minimotif. we used a subset of papers as a training set for training the ps algorithm. each article in a research article collection a, which is used for training, is read by hand and given a score of either  <dig>  indicating that the paper does not contain minimotifs, or  <dig>  indicating that the paper has at least one minimotif. a similar algorithm has been employed to characterize unknown microorganisms  <cit> . a crucial difference between the ps algorithm and that of goh, et al., is that the ps algorithm provides an ordering of the papers instead of using a filter threshold.

the workflow for this phase consists of the following steps: we start with disjoint sets p, n, and t of abstracts, which are positive, negative, or not reviewed for minimotif content, respectively. let w be the ordered term vector found by taking all significant words  from the documents of sets p and n. for each word w in w and each article a in p we divide the number of instances of w by the size of a: this is the enrichment of w in a. then, we sum these enrichments over all p and divide by the size of p to obtain an overall enrichment of w. we repeat this over set n, and subtract the result from wp to arrive upon a "score" for word w, which ranges from - <dig> to  <dig>  higher values indicate more positive association with minimotif content. we now have a vector of decimal "scores", which has the same dimension as w, with one entry per term in the term vector. call this vector s.

now, we compute a score for each unknown paper by combining word scores. this phase consists of the following steps.

1) scan through the paper  to count how many times each word w of w occurs in this article.

2) construct a vector v of all values from  in which the order corresponds with s.

3) compute the correlation between v and s and obtain a pearson's correlation coefficient pc for each paper. if x and y are any two random variables, then the pearson's correlation coefficient between x and y is computed as  where μx is the expected value of x, μy is the expected value of y, σx is the standard deviation of x, and σy is the standard deviation of y.

4) thus, we have now computed a "score" of the article, which is the pearson's correlation coefficient between the scored words from the training set w and respective enrichments of those words in the article n.

the paper scoring  algorithm's pseudo code is provided in the additional file  <dig>  the correlation coefficients for the lexemes range from - <dig>  to  <dig> . this score positively correlates with the presence of minimotif content, as expected.

paper ranking and evaluation of the paper scoring algorithm
the algorithm above is packaged as an independent application, textmine, which can be used in conjunction with mimosa . for the test set, we selected  <dig> new articles, which we determined to either have or not have minimotif content and were disjoint from the training sets. the basis for all testing of the textmine application was derived from correlations of textmine scores to this set.

the textmine website and package provides a test data set which reproduces our analysis for a set of test papers. the current version of mimosa, utilized for mnm annotation, uses scores from textmine calculated for  <dig>  abstracts for paper sorting.

paper scoring algorithm and training set size
since the purpose of the algorithm is not simply to rank papers, but rather, to rank papers with increasing sensitivity over time, we evaluated the increase in the algorithms efficacy with respect to larger training sets. we found that there was a degree of variation depending on training set sizes, but that overall, both positive and negative training elements improved the performance .

for use in testing textmine's performance relative to the size of the training set the application package includes an iteration module, which allows for specification of the sizes of positive and negative training sets . we recorded the performance for incrementally increased training set sizes, and noted that as the number of either positive or negative training documents increased, a modest performance improvement was observed. the performance of the algorithm is determined by the correlation coefficient between the calculated scores, between - <dig> and  <dig>  and an actual score, between  <dig> and  <dig> 

the table indicates that large increases in the number of positive training articles were comparable to small increases in the number of negative training articles, ultimately showing that both had modest increases in value with set size. a positive correlation coefficient between positive or negative training size and the algorithm performance was observed . the correlation score between textmine scores and the training set scores showed modest increases with size .

the receiver operator characteristic  curve is a standard metric for visualizing the sensitivity and specificity of an algorithm, which differentiates two populations. we have also included a roc curve for the highest scoring training set, which had  <dig> positive and  <dig> negative articles. we found that this proportion was not required, and that significant correlations could also be obtained with smaller data sizes, as previously described. this curve is shown in fig.  <dig>  notably, the area under the curve was above  <dig> , indicating a high correlation between the score magnitude and the presence  or absence  of a minimotif. this data can be generated using the textmine package. the steps for reproducing this data are described in the textmine application package.

because the general utility of this algorithm far exceeds the field of minimotif annotation, we have released textmine as a stand-alone application that is cross-platform and database-independent.

discussion
we have built an application that facilitates annotation of minimotifs from the primary literature, which we are currently using to populate a more comprehensive mnm minimotif database. the application scores a set of papers for minimotif content. in principle, the textmine score can be used to score all pubmed abstracts for minimotif content and can be used in the future for maintaining the database. as text mining algorithms increase in proficiency and scope, it may be possible to use a large, mimosa-curated set of minimotif-containing papers as a training set for automatically detecting minimotif definition sentences and phrases in papers by machine learning approaches.

the implementation of the paper scoring algorithm as a sql stored procedure in mimosa automates its execution and is amenable to further machine learning development. a static algorithm would have required a word or file list as input and require manual merging of results into the database. one limitation of the textmine application is that it does not directly control for type biasing. that is, depending on the training set, we expect that there is some risk of "weighting" words heavily to bias previously seen content types. instead of controlling for this automatically, textmine outputs the scores of all calculated words so as to enable user inspection of how their training set influences the algorithm. this allows for informed adjustments to the training set on a case-by-case basis.

although mimosa was developed primarily for minimotif annotation, the ps algorithm for scoring content in papers has broader applications. in consideration of its potential use, we have implemented it as a separate program, textmine. for other annotation purposes, correlation scores for individual words from a training set of articles already known to either contain, or not-contain, the desired information are calculated. this results in a rank order for several thousands of words. for each single article, the ps algorithm then calculates a pearson's correlation coefficient between two large linear sets: the score of each word in the aforementioned dictionary, and the corresponding enrichment of that word in the article's title and abstract. despite the broad range of semantic methodologies for communication of peptide minimotif information, we still observed significant differentiation of the paper rankings when applied to the minimotif content papers.

CONCLUSIONS
the mimosa application interfaces with a normalized model of minimotif function, facilitating non-redundant annotation of minimotifs. the mimosa user interface combines a set of features that facilitate annotation; including the browsing, sorting, creation, and modification of minimotif annotation entries. additionally, interactive paper selection, a database driven minimotif annotation form and literature browser, minimotif attribute based markup and highlighting of abstracts, the display of minimotif positions in protein sequences, and minimotif publication scoring and status tracking. mimosa also features an adaptive, database-driven paper-ranking strategy that can be used to rank papers for minimotif content, which, when combined with the paper tracking module, represents an adaptive approach to literature scoring and content rating. the layered architecture, generalizable data model of minimotif functionality, and database driven application components enable mimosa to be readily adapted for other molecular annotation projects.

availability and requirements
project name: minimotif system for annotation

project home page: mimosa.bio-toolkit.com, textmine.bio-toolkit.com

operating system: platform independent

programming language: java

other requirements: mysql  <dig>  or higher, java virtual machine  <dig>  or higher,

license: open source

any restrictions to use: this paper must be referenced in any publication that uses mimosa or textmine, or any application that is developed based on these core applications.

authors' contributions
mrs, jv, and rjn were involved in preparation and editing of the manuscript. tm, sr, vk and mrg were also involved in editing the manuscript. jv, tm, ds, and rjn designed and implemented the software application. sr, mrs, jv and vk were involved in identifying the strategies for paper identification. kk calculated mie scores. jv designed and implemented the paper scoring algorithm and textmine application. all authors read and approved the final manuscript.

supplementary material
additional file 1
additional material. approach for identifying papers with minimotif content, automated markup of abstracts, and pseudocode for paper scoring algorithm

click here for file

 acknowledgements
we thank the national institutes of health for funding . we would like to thank members of the minimotif miner team for suggestions in preparation of this manuscript.
