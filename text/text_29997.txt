BACKGROUND
besides genotyping individual dnas in whole genome association studies, the use of pooled dna has recently become a feasible alternative. this is based on the assupmtion that hybridization intensities at single array oligonucleotides of the respective alleles should reflect allelic frequencies in the dna pool  <cit> . pooling-based snp array approaches have successfully been used in a wide range of studies, such as the identification of potential risk factors for alcohol addiction  <cit> , mental impairment  <cit>  or abnormal cholesterol levels  <cit> . despite recent developments in array technology, the use of pooled dna still outperforms single dna genotyping in terms of cost efficiency  <cit> . as pooling-based studies are a relatively new method, a broad spectrum of analysis software, as it is available for many other applications, is still missing. the primary software project previously dedicated to this purpose  <cit>  was originally intended for gnu/linux systems and therefore not usable on microsoft windows, which is, however, ubiquitous even in the laboratory environment. additionally, as with many linux centered software products, it relied entirely on text configuration files, command line options and text output; graphical evaluation of the data is still not intended. there is another software package, mpda  <cit> , which was recently developed using matlab; it is, however, dependent on a complete matlab installation for the gui version, or, for the command line version, on a matlab runtime environment.

implementation
genepool
version  <dig> . <dig> of the genepool software  <cit>  has been used to study complex traits, such as schizophrenia  <cit>  or progressive supranuclear palsy  <cit> . the software most prominently contains two modules: gpextract extracts intensity values from the data files of the chip system  and stores them in a smaller binary format. furthermore, it creates text metafiles pointing to those binary files. downstream analysis is done using gpanalyze, which calculates relative allele signal  values from the intensities and performs various calculations with those. the output of gpanalyze consists of a number of text files. the gpfrontend and gpgraphics user manual, which is included with the program files , contains a graphical representation of the genepool workflow.

after adjusting some code of both gpextract and gpanalyze to enable them to run in a microsoft windows environment, we further modified gpanalyze in a way that one of its output files can be more productively used for analysis in gpgraphics. the first modification was the adding of some code to calculate the overall difference in mean ras values, preserving the sign in the process, and write the results to a text file. the second modification causes gpanalyze to additionally include both this calculated mean ras difference and the rank value for each snp in its output. the output file in question has the snps sorted by chromosome and position, so it can immediately be used as input for gpgraphics.

gpfrontend
in order to facilitate the use of gpextract and gpanalyze, a graphical user interface was created. here, the user may select the input files and specify some additional options. upon confirmation by the user, gpextract is called for every single input data file. at the same time, a text file is created by gpfrontend, which references the text files produced by gpextract. this file is necessary for gpanalyze to process the data further.

gpfrontend can also be used to merely generate the metadata files for already extracted snp data, e.g., when comparing several different combinations of the same data set. thus, the extraction process only has to be done once for every snp data file, and many of the text files normally generated by gpextract can instead be quickly produced by gpfrontend. a step-by-step tutorial showing how to use gpfrontend and gpgraphics to analyze pooling data is provided with this article .

both gpextract and gpanalyze have a large number of command line options, the latter with its various and flexible algorithms even more than the former. the motivation to use a graphical interface especially with gpanalyze is therefore high. the frontend for gpanalyze enables the user to see and manipulate all possible options at once. upon confirmation by the user, gpanalyze is called with the selected options.

gpgraphics
one of the major disadvantages of genepool is its complete lack of any graphical output. to overcome this, gpgraphics  was originally developed to read one of the output files of gpanalyze and create a png compressed bitmap file for every chromosome. in those files, the scores or ranks of all analyzed snps are shown as lines of corresponding height.

additionally, gpgraphics writes a text data file for every chromosome, containing the numerical heights of the lines in the bitmap file. the researcher is thus not limited to visual analysis of the data, but can also find loci by defining strict criteria and applying these to the data files using third party software, such as a spreadsheet program.

as there is usually a lot of background noise in the data , it may sometimes be quite difficult to discern regions with promising snps from others. therefore, some filter functions are incorporated into gpgraphics: there is a logarithmic filter, which assigns new values based on the original ones and an exponential curve by performing the following transformation:

 rnew=2rfnn2f 

where n is a scaling factor depending on what values the graphical output expects. in gpgraphics, the graphical output function takes input values from  <dig> to  <dig>  so  <dig> represents a fully saturated signal. therefore, n is set to  <dig> in gpgraphics. f is a user-selectable factor determining the stringency of the filter; r and rnew are the old and the new score, rank or log <dig> for that snp, respectively. the highest values will appear enhanced, while the background will be significantly reduced without being completely eliminated. furthermore, a variable sliding window mean calculation can be performed, assigning to every snp the average of the scores of the best m - n out of itself and the following m -  <dig> snps . finally, there is also a simple cutoff function, which will crop the lowest p percent of the maximum value and "stretch" the remainder to normalize to 100%.

for a quick overview of the entire data set, an unfiltered "manhattan" plot can also be generated either from the input file as selected in the main window or from a separately specified file. gpgraphics can handle any type of tab or space delimited text file, with or without a header line. number and content of the data columns and the maximum expected value are specified by the user, with presets for genepool and several other analysis programs  already implemented.

the generated bitmap files  may also be viewed and evaluated in gpgraphics, in which case the user can choose between looking at a single dataset or two datasets  displayed simultaneously. the second option is useful when comparing different experiments or filter methods. by clicking on any of the snp lines, the user gets a set of information about the selected snp. due to our modifications to gpanalyze, this information also includes the difference of the mean ras values of cases and controls, preserving the sign. thus, it is evident which allele is predominant in cases or controls. the snp information can then be copied to the clipboard or submitted to the ucsc genome browser  to view the genomic region of the selected snp.

gpgraphics also includes a module to generate a quantile-quantile plot of expected versus observed p-values . the p-values of the input file are sorted and an expected quantiles column is added. if the values are from a χ²-test with  <dig> degrees of freedom, an additional column with a gc-corrected p-value  <cit>  based on the median χ² score may be created and included in the q-q-plot.

RESULTS
originally intended as a graphical extension of an analysis software for pooling based studies, especially gpgraphics has developed into a universal visualization tool for the output of many different analysis programs, such as plink or eigenstrat. since it can be easily customized to accommodate almost any text output sorted in map order, it enables even inexperienced users to get an overview of whole genome association data and to visually search for loci warranting further study. when analyzing data from a single sample gwas, such as plink output, the logarithmic and sliding window filters will not normally be used. nonetheless, the ability to visually browse through the entire genome data set while seeing every single snp raises the chances of spotting interesting loci, which might have been lost in a purely algorithmic, non-visual analysis. in a tutorial document provided with this article , we show how this has been done in an actual gwas . especially smaller research institutions, who may not have the funds nor the bioinformatics personnel required for a large scale association study are now able to profit from the benefits of whole genome microarrays. a pooling based study with a small number of microarrays used can be easily evaluated with genepool, gpfrontend and gpgraphics on a windows pc, thus providing valuable hints to, e.g., new candidate regions for functional studies.

even if the data are very noisy, as is often the case in pooling based studies, the implemented filters enable researchers to pick up signals that would possibly be overlooked when analyzing the raw data. in the tutorials provided in additional file  <dig>  this is shown using actual data from a pooling study . relative freedom in trying out different filters and their combinations is justified, as the main purpose of the graphical evaluation is the search for sites to be investigated further.

finally, the q-q-plot module enables even researchers with little background in bioinformatics or biostatistics to generate a plot of their data from which the reliability of the results can easily be judged. for this, we also provide a tutorial  in additional file  <dig>  currently, q-q plots only work with p value data, but an extension to score data is planned for a future release.

CONCLUSIONS
we have created an easy-to-use program for visually analyzing whole genome association data, especially from pooling based approaches. with this software, many researchers with regular desktop pcs and no bioinformatics personnel will now be able to use and profit from whole genome association data nonetheless. with its small size, our software is easy to obtain and install.

availability and requirements
the most recent versions of gpfrontend and gpgraphics are contained within this article .

operating systems: platform independent; tested on windows  and gnu/linux 

programming language: visual basic .net

hardware requirements: ram usage depends on the size of the input files; for whole genome association data, at least  <dig> gib is recommended

other requirements: an implementation of the .net  <dig>  runtime  or the mono runtime 

license: closed source, free for non-commercial use.

authors' contributions
su designed and programmed the software and wrote the manuscript. fp provided the original idea and specifications and revised the manuscript. mk, ds and abe shaped the development of the software by using it and requesting new features as needed. ar revised the manuscript and had the overall responsibility of the projects from which the development of the software sprang. all authors read and approved the final manuscript.

supplementary material
additional file 1
gpfrontend and gpgraphics. gpfrontend.exe, gpgraphics.exe with gpgpresets.ini , gpmanual.pdf  and a readme file.

click here for file

 additional file 2
tutorials for gpfrontend and gpgraphics. three step-by-step tutorials with actual data for both pooling based studies and single sample gwas

click here for file

 acknowledgements
the software was created with a compiler licensed via the msdn academic alliance  program to su. funding of the projects necessitating this software was provided by sfb  <dig> c. <dig> of the german research foundation  and by the interdisciplinary center for clinical research  at the university of erlangen-nuremberg. conflict of interest: none declared.
