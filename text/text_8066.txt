BACKGROUND
mass spectrometry  is a key analytical tool in proteomics. a mass spectrometer measures the concentration of ionized molecules at a range of mass-to-charge ratios . ms instruments consist of three modules: an ionization source, a mass analyzer and a detector which captures the ions and measures the intensity of each ion species. widely used ionization methods include electrospray ionization   <cit>  and matrix-assisted laser desorption/ionization   <cit> . mass analyzers separate the ions according to their mass-to-charge ratios. there are several types of mass analyzers including the orbitrap  <cit> , quadrupole  <cit> , time-of-flight   <cit> , and fourier transform ion cyclotron resonance   <cit> . liquid chromatography  is often coupled with ms to achieve additional separation of peptides and thus reduce the complexity of an individual mass spectrum. before entering the mass spectrometer, peptide species pass through a lc column with different speeds depending on their physicochemical properties and interactions with the solvent  <cit> . a single lc-ms experiment usually produces hundreds to thousands of mass spectra sampled during the lc elution process.

peptide detection, which converts raw spectra to a list of peptide masses, is usually the first step in protein ms data processing. it directly affects the accuracy of subsequent analyses such as protein identification and quantification, data alignment between multiple experiments, biomarker discovery and classification of different samples. one difficulty in peptide detection is that a peptide species may register several peaks in the spectra due to the following two points: first, a peptide species may take different numbers of charges during ionization, therefore its peaks can be observed at different charge states. second, at a given charge state, several peaks can be observed due to heavy isotopes , which are commonly referred to as isotopic peaks or the isotope series. the isotopic distribution of a peptide can be determined by the elemental formula of the peptide and the natural abundance of heavy isotopes, and therefore known  <cit> . when mass spectra have low resolution in which isotopic peaks cannot be baseline resolved , and when peptides are singly charged as commonly observed in maldi, to report each detected peak as a peptide feature might be sufficient as in  <cit> . but for high resolution spectra, reporting each observed peak as a unique peptide species would give rise to too many false positives. thus a variety of algorithms for deisotoping and charge states deconvolution have been proposed. many of these algorithms such as peplist  <cit> , msinspect  <cit> , noy's method  <cit> , decon2ls  <cit> , and openms  <cit>  are based on template matching. templates employed in the first four algorithms are based on  <dig> d theoretic isotope patterns predicted from peptide masses  <cit> , while the last algorithm combines isotope patterns  with elution peaks  to form  <dig> d templates. if the observed signal  matches the proposed template well -- the quality of the match is assessed by a fitting score -- it will be reported as a feature and then subtracted from the spectrum. the process iterates until no more matches can be found. the major problem of this matching and subtraction process is that it may be ineffective to detect overlapping peptides. in the case of overlapping , if the peak cluster of one peptide is incorrectly matched and subtracted, the rest of the peptides can not be detected correctly based on the remaining spectrum, which will cause error propagation. besides, each predicted template is based on a single peptide and it can not match the observed overlapping peaks well, which renders a low quality match and reduces the sensitivities of these algorithms. in addition to these algorithms based on template matching, du et al. developed an algorithm based on variable selection  <cit> . the key idea is to select the least number of candidate isotope series to explain the spectrum, and hence find the corresponding peptides. but the superimposed criterion "selecting the least number of candidates" is not justified. in fact, while this criterion may result in a desirable reduction of the false detection rate, the sensitivity may be reduced as well. zhang et. al.  <cit>  proposed a bayesian approach for peptide ion peak detection. a model for the m/z interval of one dalton was developed, a bayesian approach was applied to estimate the model parameters based on the observed spectrum, and the existence probability of a peptide ion peak at each charge state and isotope position was calculated. note that this algorithm did not perform peptide level peak detection as what we are proposing in this paper. the authors reported that their method had better sensitivity results than the wavelet based algorithms when tested by simulated data and eight sets of real protof ms data. in this paper, we propose a bayesian peptide detection algorithm , which is basically an extension of zhang's method. the difference being that a model for the whole spectrum is developed, and both isotope patterns and charge state distributions of peptides are considered in our method.

the proposed method, bpda, can be applied to data generated by ms instruments with mass resolutions high enough to baseline-resolve isotopic peaks. bpda evaluates all possible combinations of possible peptide candidates  to interpret a given spectrum, and iteratively finds the best fitting peptide parameters  in order to minimize the mean squared error of the inferred spectrum to the observed spectrum. bpda offers the following four advantages: firstly, since bpda looks for the optimal among all possible interpretations of the ms spectra, the procedure is thus systematic. in contrast, the aforementioned template-matching methods are greedy. they cannot evaluate all potential interpretations of a given spectrum. hence, they are neither systematic nor optimal. besides, many methods do not include all possible peptide candidates, especially the ones with low abundance in the first place, and the sensitivity is reduced compared to bpda. secondly, bpda considers all charge states and isotopic peaks of peptides for detection. it is noted that multiply charged peptides can register peaks at several charge states, but deisotoping and charge state deconvolution are often dealt with separately in many algorithms  <cit> . while high abundance charge states may be correctly detected, low abundance charge states might be missed or wrongly assigned, rendering low sensitivity results in peptide identification and inaccuracy in peptide quantification. in contrast, bpda combines the information of isotopic peaks at different charge states as a whole to detect one peptide, lending information to better identify weak peptide signals. thirdly, bpda provides existence probabilities for all the peptides considered, as opposed to the fitting scores generally provided by template-matching methods, the benefits being that the existence probabilities can be directly used for probability-based evaluation of peptides and confident peptide detection similar to that of peptideprophet  <cit> , which is a popular software used for lc-ms/ms peptide identification. finally, most of the parameters in the proposed method possess a clear physical meaning, since they come directly from the observation of the mass spectra. in contrast, many other approaches require the selection of numerous nonintuitive parameters, such as wavelet functions and coefficients  <cit> .

methods
for  <dig> d ms spectrum, we first perform spectrum preprocessing to remove the baseline, filter the noise and generate a list of peptide candidates. then bpda is applied based on the developed ms model to infer the best fitting peptide signals of the observed spectrum, the results being peptide abundances, existence probabilities and so on. for  <dig> d lc-ms spectra, we first detect peptide elution peaks along the retention time dimension, and build elution peak groups by collecting the peaks which have similar retention time together using a method similar to  <cit> . each group contains a series of consecutive spectra, which are then averaged to form a mean spectrum. the rationale of using a mean spectrum to represent the group is that the noise of consecutive spectra could be canceled out to a certain degree  <cit> . the bpda algorithm is then applied to each of the mean spectra, and finally an overall peptide list is generated. the details of the preprocessing step, the proposed ms model, and the bpda algorithm are described in the following subsections.

spectrum preprocessing and obtaining peptide candidates
a non-flat baseline is often observed in mass spectra, the presence of which can distort the true signal pattern. thus the first preprocessing step is to detect and subtract the baseline from ms spectra. we use the minimum of a sliding window along the m/z axis as the baseline, similar to the method used in  <cit> . the next step is peak detection. we use the matlab function "mspeaks"  <cit>  to perform this task. the algorithm first identifies all local maxima in the wavelet denoised spectrum as putative peak locations. then peaks are filtered based on their intensities and signal to noise ratios. the last step of preprocessing is to obtain a list of peptide candidates. considering one detected peak with centroid at m/z value d, we want to find out which peptides can potentially register a peak at this position. the answer is given below in terms of the masses of such peptides:

  mass=i−jmnt, i= <dig> , ..., cs, j= <dig> , ..., iso, 

where mass is the mass of one peptide candidate, mpc is the mass of one positive charge and mnt is the mass shift caused by addition of one neutron. due to mass defect, the mass shift varies for different elements. we approximate mnt using the mass shift from 13c to 12c, which is  <dig> , since carbon contributes most to the isotope patterns. this approximation works well if the mass calibration of the instrument is correct. the parameters cs and iso are user defined maximum numbers of considered charge states and isotopic positions, respectively. it is easy to see from the above equation that each detected peak gives rise to cs ×  different peptide candidates . these candidates exhaust all the possibilities to generate the peak with centroid d, but it does not follow that all the candidates really exist in the sample. therefore, our primary goal in peptide detection is to find the existence probability of each peptide candidate. also note that the total number of candidates should be less than or equal to cs ×  × number of detected peaks, as is possible that multiple peaks yield the same candidate mass.

modeling the mass spectrum
suppose n peptide candidates are obtained from the observed spectrum using the method described in the previous section. each candidate can generate a series of peaks over different charge states, and at each charge state several isotopic peaks can be registered. the signal generated by the kth peptide candidate is thus modeled by the following equation, in which i and j represent the charge state and the isotopic position of the candidate peptide, respectively:

  gk=∑i=1cs∑j=0isock,ijf, m= <dig> , ..., m, 

where the peak shape function is given by f =e–ρk,ij <dig>  that is, the peak is modeled as gaussian-shaped, as in  <cit> . it is reported that the gaussian-shaped peak approximates the reality well enough to obtain good detection results  <cit> . still, this peak shape function can be adjusted for different instruments without affecting the overall structure of the algorithm.

the observed spectrum is a mixture of the signal generated by the n peptide candidates plus gaussian random noise, which can be modeled as:

  ym=∑k=1nλkgk+ϵm=∑k=1nλk∑i=1cs∑j=0isock,ijf+ϵm, m= <dig> ,…,m, 

in the above three equations, xm is the mth mass-to-charge ratio  in the spectrum, ym is the observed intensity at xm, m is the number of observations, and ϵm is gaussian random noise with zero mean and standard deviation σ. the value of can be approximated by the standard deviation of the background region in the spectrum. note that we model ϵm as additive gaussian which is generally a good model for the thermal noise in electronic instruments. there are reports of non-gaussian noise in ftms  <cit>  and thus it is safer to apply the proposed algorithm to tof ms instruments  <cit> . the parameters of the kth candidate, namely, αk,ij, ρk,ij, λk and ck,ij are discussed in detail below:

• αk,ij is the theoretic centroid  of the peak generated by candidate k, at charge state i and isotopic number j.

  αk,ij=massk+i mpc+j mnti,  i= <dig> , ..., cs, j= <dig> , ..., iso, 

where massk is the mass of the kth candidate. since the candidate's mass is already obtained, αk, ij can be calculated.

• ρk,ij relates to the shape  of the peak centered at αk,ij. it can be estimated by using its relationship to the peak's full width at half maximum : ρk,ij=22ln2/fwhm.

• λk is an indicator random variable, which is  <dig> if the kth peptide candidate truly exists in the sample and  <dig> otherwise.

• ck,ij is the height  of the peak generated by peptide k, at charge state i and isotopic number j.

in summary, the model considers peaks at different isotopic positions and charge states simultaneously for each peptide candidate, incorporating candidates' existence probabilities and the spectrum thermal noise.

bayesian peptide detection
let

 θ≜{λk,ck,ij;  k= <dig> ...,n,i= <dig> ...,cs,j= <dig> ...,iso} 

be the set of all the unknown model parameters. the goal of our algorithm is to determine the value of θ based on the observed spectrum y = t . in fact, the value of λk is of our prime interest for the peptide detection problem. for this purpose, we can use a bayesian approach to first obtain the a posteriori probability  of all the parameters, p . then the apps p , k =  <dig>  ..., n, can be obtained by integration of the joint posterior distribution p  over all parameters except λk. clearly, the calculation involves high dimension integration which is not an easy task. besides, due to the highly nonlinear nature of the data model, none of the desired apps can be obtained analytically. to overcome the computational obstacle, we resort to the gibbs sampling method  <cit> , which is a variant of the markov chain monte carlo  approach  <cit> , to sample the model parameters.

gibbs sampling is an iterative scheme, which uses the popular strategy of divide-and-conquer to sample a subset of parameters at a time while fixing the rest at the sample values from the previous iteration, as if they were true. in other words, for the lth parameter group θl, we sample from the conditional posterior distribution p, where θ -l ≜ θ\θl. after this sampling process iterates among the parameter groups for a sufficient number of cycles , convergence is reached. the samples collected afterwards are shown to be from the marginal posterior distribution p, which is independent of θ-l, and thus these samples can be used to estimate the target parameters.

the gibbs sampling process for the kth peptide candidate and the derivations of the conditional posterior distributions of important model parameters are briefly summarized below. the detailed derivations can be found in additional file  <dig> 

• sample the peak height vector ck ≜ t for the kth peptide candidate

the heights of all the possible peaks  of the kth peptide candidate are included in the peak height vector ck and are sampled simultaneously from the conditional posterior distribution of ck, which, by the bayesian principle, is proportional to the likelihood times the prior:

  p∝pp, 

where θ−ck≜θ\ck.

the derivations of the likelihood, the prior distribution and the conditional posterior distribution of ck are given in additional file  <dig> 

• sample the peptide existence indicator variable λk

the conditional posterior distribution of λk is given by

 p ∝ pp 

where θ−λk≜θ\λk.

the derivations of the likelihood, the prior distribution and the conditional posterior distribution of λk are given in additional file 1

the complexity of the proposed gibbs sampling algorithm is determined by two factors:  the sheer number of peptide candidates, and  the correlation between parameters that need to be sampled. the algorithm complexity grows exponentially with the number of peptide candidates, and the correlation between parameters reduces the sampling efficiency. to address these two issues, we first partition non-overlapping peptide candidates into different groups. the proposed algorithm can be applied to each group in a parallel manner and the algorithm complexity is reduced, because within each group the number of candidates is reduced, and the corresponding signal-containing spectrum region is restricted. peptide candidates within each group are then clustered by the k-means clustering algorithm  <cit> , the distance measure being the correlation between peptide candidate signals. peptide candidates within a cluster have strong correlations among each other, and their indicator variables are sampled from the joint conditional posterior distribution. these two measures improve the overall efficiency of the algorithm. the pseudocode of the entire gibbs sampling process is given in additional file 2: table s <dig> 

the samples taken after convergence can be used to estimate the target parameters. particularly, the existence probability of peptide k is calculated as

  p=1r−r0+1∑r=r0rλkr, 

where r <dig> is the first iteration after convergence is reached, r is the total number of iterations, and λkr is the sample value of λk in the rth iteration. the kth peptide candidate is said to be detected if its existence probability p is greater than a predefined threshold.

RESULTS
we report below the observed performance of bpda, side by side with well-known tools, such as openms and decon2ls, in a number of experiments using both synthetic and real data.

synthetic data
it is difficult to evaluate the performance of a given detection method using real data due to the existence of unpredictable contaminants and the unknown true composition of the samples. the merit of using simulated data is that the ground truth is known and thus algorithm evaluation can be carried out  <cit> .

synthetic 20-mix spectra with different abundance levels 
first, to test the robustness of our algorithm, we generated ms data sets with different signal to noise ratios , using the method described in  <cit> . in fact, the mean signal strength  was varied while the noise level  was fixed. for each peptide abundance level a, a ∈ { <dig>   <dig>  12500}, the simulation was repeated  <dig> times. in each repetition,  <dig> true peptides  served as the input of the data model given by eq.  <dig>  the charge state distribution of one peptide was modeled by a binomial distribution, which was reported to approximate the real data well  <cit> . the isotopic distribution was obtained for each peptide by using the averagine model  <cit>  and the mercury algorithm  <cit> . the output consists of a simulated mass spectrum. bpda was applied to obtain the peptide existence probabilities and abundance results. its performance was evaluated by the classic receiver operating characteristic  curve. to obtain the roc curve, first a series of detection levels τ ranging from  <dig> to  <dig> with  <dig>  increments was selected. peptides with existence probabilities not less than τ were said to be detected at this specific detection level. the true positive rate  and false positive rate  were then calculated at each detection level as follows:

tpr=truepositivetruepositive+falsenegative and fpr=falsepositivefalsepositive+truenegative. one roc curve  was plotted for each repetition. and the averaged roc curve for one abundance level was obtained by averaging all the roc curves corresponding to the same abundance level. we also applied openms on the same data sets -- to do so, we first wrote the simulated ms data into a text file with three columns specified by elution time, m/z, and intensity, respectively. next, the text file was converted to mzxml  by the fileconverter tool integrated in the openms software package  <cit> . finally, openms was applied on the mzxml file to give the detection results including detected features and their qualities. the roc results given by the two algorithms for different abundance levels are shown in figure  <dig> 

synthetic 10-mix spectrum with overlapping peptides
as noted before, overlapping peptide peaks can complicate the mass spectra and make the detection problem much harder. thus, we investigated the performance of bpda in the presence of overlapping peptides. a simulated 10-mix spectrum was generated by  <dig> pairs of overlapping peptides with unique masses:  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig>  da. the detection results for the comparison between bpda and openms are summarized in table  <dig>  bpda detected all  <dig> peptides when fpr =  <dig> , with very small mass deviations and quite accurate abundance results. almost all charge states of the  <dig> true peptides were correctly reported, except for the highest charge state of the 5th and the 9th peptides. these two charge states were missed because the corresponding peptide signal was very weak. in contrast, when fpr =  <dig> , openms only detected the 3rd, the 7th and the 9th peptides. and when fpr increased to  <dig> , openms achieved its highest tpr . but it could detect only one pair of peptides  and missed one peptide in each of the other  <dig> pairs. two examples are given in figure  <dig> to illustrate the observed overlapping peptide signals and the detection results. the abundance results given by openms were not close to those of the true peptides . in total,  <dig> out of  <dig> charge states were correctly detected by openms for the  <dig> peptides, while bpda correctly detected  <dig> out of  <dig>  a much larger number.

results for the 10-mix data set. intn, cs and dm denote the normalized intensity, detectable charge states and the mass deviation from the true mass, respectively. when fpr =  <dig> , bpda was able to detect all  <dig> true peptides, while openms detected only  <dig> peptides . openms achieved its highest tpr  when fpr =  <dig> .

we remark that decon2ls results are missing from both synthetic experiments described previously because the synthetic data could not be loaded, causing the program to crash . we contacted decon2ls's developers, but did not hear from them in time to have the decon2ls results included.

real data
in this section we report results from experiments carried out with real ms data. the test data and parameter files used for different software tools were provided as supplementary files on the bpda project website. we stick mainly to the recommended parameter values while only adjusted a few parameters such as mass range and detection level to adapt to each data set.

maldi-tof ms 7-mix spectrum
we tested bpda on maldi-tof ms 7-mix spectrum, which contained seven standard peptides with monoisotopic masses  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig>  dalton  <cit> . the spectrum was collected on a bruker ultraflex maldi tof in the reflectron mode. as stated before, maldi mostly generates singly charged ions, so we only considered charge state  <dig> in the test. since there were contaminants in the data set, the goal was to check whether a detection algorithm could find all the seven true peptides. the detection results of bpda, decon2ls, openms, and the commercial software flexanalysis developed by bruker daltonics  <cit>  are summarized in table  <dig>  bpda detected the first six peptides with a mean  mass deviation  <dig>  da. decon2ls missed the fifth and the last peptides, and the five detected peptides were of a mean mass deviation  <dig>  da. openms missed the forth and the last peptides, and the five detected peptides were of a mean mass deviation  <dig>  da. the commercial software flexanalysis missed the fifth and the last peptides, and the five detected peptides were of a mean mass deviation  <dig>  da. it can be seen that for the detected peptides, the four algorithms yielded similar intensity results. only bpda and openms were able to detect the fifth peptide which had the lowest abundance among the first six peptides. and all methods failed to report the last peptide. visual inspection suggested that this peptide generated very weak signal and its abundance was about one third of the fifth peptide.

results for the 7-mix data set. intn and dm denote the normalized intensity, and the mass deviation from the true mass, respectively.

high-resolution lc-ms data set myolcms
the preparation of the myolcms data set is detailed as below: the data set was collected from an overnight tryptic digest of horse myoglobin. capillary liquid chromatography-mass spectrometry  was performed with a splitless nanolc- <dig> d pump , a  <dig> mm-i.d. column packed with  <dig> cm of  <dig> mm-o.d. c <dig> particles, nanoelectrospray and a high-resolution time-of-flight mass spectrometer . the clc gradient was  <dig> to 98%  <dig> % formic acid/acetonitrile in  <dig> seconds at  <dig> nl/min. sample was injected at a concentration of  <dig> fmol/ml with an injection volume of  <dig> ml .

there were  <dig> spectra with a m/z range  <dig>  to  <dig>  to apply bpda, we first grouped peptide elution peaks, as described in the method section. a total of  <dig> groups were obtained, each containing 10- <dig> consecutive spectra. a mean spectrum was generated for each group, and bpda was then applied. the detection results of bpda, openms, and decon2ls, which was applied in conjunction with viper  <cit> , are summarized in additional file 3: table s <dig> . the number of features with unique monoisotopic masses detected by bpda, openms, and decon2ls-viper were  <dig>   <dig> and  <dig>  respectively. in fact, it is not very informative to evaluate the performance of a detection algorithm solely based on the number of detected features, because of the presence of contaminants and false positive detections. therefore, we focus on the top detected features yielded by each detection algorithm. detected features were ranked by quality in descending order. different algorithms utilize different quality metrics; for example, decon2ls and openms provide a quality score which measures how well an observed isotope pattern matches the predicted isotope pattern, while bpda provides the peptide existence probability  as the quality measure. for each detection algorithm, for a given percentage of top detected features, we calculated the number of detected horse myoglobin peptides and the protein coverage rate. note that by in-silico digestion of horse myoglobin, there are  <dig> tryptic peptides with less than  <dig> missed cleavage sites . ideally, we should compare algorithms with known peptide composition in the sample and report protein coverage at different false positive rates. however, due to possible peptide contamination in the sample in any lc/ms experiment, actual peptide species presented in the sample are never known and this prevents us from estimating the false positive rates on the reported peptide list. as a result, the statistical significance of reported peptides by different peptide identification algorithms cannot be evaluated and the only option left for users in hope of obtaining a list of peptides with relatively low false positive rate is by applying a percentage threshold on the quality score reported by different algorithms. thus, protein coverage v.s. percentage threshold on quality score is a meaningful measurement of the performance of peak detection algorithms and the results are shown in figure  <dig>  we need to point out that although the protein coverage of openms seems to be comparable with the proposed algorithm in regions where the quality score percentage threshold is large, in such regions the reported peptide list may contain a lot of false positives and it is not an indication of good or bad algorithm performance. instead, how quickly an algorithm reaches high protein coverage as the percentage threshold increases should be the measurement of the performance. in figure  <dig>  we can see that bpda reaches high protein coverage much faster than other algorithms at low percentage threshold regions.

discussion
we observed in our experiments that bpda performs well on both simulated data and real data, for various snrs and resolutions, and in complex cases where features overlap.

for the synthetic 20-mix experiment, we observe in figure  <dig> that the sensitivity  of bpda was consistently higher than that of openms for each abundance level, and both methods gave better sensitivity results as the abundance level  increased. also it is observed that bpda was quite robust for different snrs. for the synthetic 10-mix experiment with overlapping peptides, we saw that bpda detected all the peptides at a small false-positive rate fpr =  <dig> , with very small mass deviations and quite accurate abundance results, and nearly all the charge states of the  <dig> true peptides were correctly reported. in contrast, at fpr =  <dig> , openms could detect only a few of the peptides. the abundance results given by openms were not very close to those of the true peptides. also openms could only detect about half of the charge states.

the results obtained with real data corroborated the findings made with the synthetic experiments. for the maldi-tof ms 7-mix data, the four algorithms yielded similar intensity results, but bpda was the only one to detect six out of the seven peptides. for the myolcms experiment, we focused on protein coverage results, which is an important criterion to determine the confidence in protein identification and quantification  <cit> . it was observed that bpda displayed the largest protein coverage among the programs tested.

CONCLUSIONS
we have presented bpda, a bayesian approach for peptide detection. feature extraction in ms analysis is difficult because peptides can register multiple peaks. we model peptide signals based on both charge state distributions and isotopic distributions. and unlike perviously published methods, where the detection only utilizes isotopic distributions and works at each single charge state alone, bpda takes into account the charge state distribution as well, and performs deisotoping and charge state deconvolution at the same time, thus lending information to better identify weak peptide signals and produce more robust results. moreover, the proposed approach is systematic. it is based on a rigorous statistical framework and avoids problems, such as voting, thresholding and matching ambiguities, generally encountered in algorithms based on template matching.

we have shown that bpda performs well on both simulated data and real data, for various snrs and resolutions, and in complex cases where features overlap. our experimental results indicate that bpda compares very favorably with commercial software flexanalysis and commonly used open-source softwares such as openms and decon2ls in terms of detection performance. as for computational time, bpda is a global-based approach, which looks for the optimal solution iteratively through gibbs sampling, while template-matching based algorithms such as openms and decon2ls work on a local region at a time and calculate the fitting score, which typically does not require much computation. hence, bpda is expected to be more time-consuming than those algorithms, especially when running under the raw data mode. for example, for 10-mix data set, the running times for openms and bpda were  <dig> minutes and  <dig> minutes, respectively -- although these figures are not entirely comparable at present, since openms and decon2ls are developed using the c programming language, while bpda is developed using matlab; we plan to translate the matlab code into c in future work. in addition, we point out that the user can choose the centroid mode to run bpda as a tradeoff between running time and performance.

availability and requirements
project name: bpda

project home page: http://gsp.tamu.edu/publications/supplementary/sun10a/bpda

operating system: platform independent

programming language: matlab

licence: gnu gpl 

any restrictions to use by non-academics: licence needed.

authors' contributions
ys developed and implemented the algorithm, conducted all simulations and wrote the initial draft of the paper. jz conceived the algorithm, advised ys on algorithm development and revised the paper. ubn advised ys on the numerical experiments and revised the paper. erd revised the paper.all authors read and approved the final manuscript.

supplementary material
additional file 1
suppl file 1: detailed derivations of the likelihood, the prior distributions and the conditional posterior distributions of model parameters.

click here for file

 additional file 2
table s1: the pseudocode of the gibbs sampling process.

click here for file

 additional file 3
table s2: detection results for high-resolution lc-ms data set myolcms.

click here for file

 acknowledgements
the authors thank the support of the partnership for personalized medicine  project, through translational genomics  contract c08- <dig>  the authors thank the rcmi proteomics core at utsa  for assistance with experiment design, sample preparation and data collection for the horse myoglobin data. the authors thank the cancer biology and infectious diseases research center at the eastern virginia medical school for the peptide standard data collected on the bruker ultra flex maldi-tof.

jianqiu zhang's research is supported by a san antonio life science institute research enhancement grant and a grant with award number g12rr <dig> from the national center for research resources, usa.
