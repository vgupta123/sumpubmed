BACKGROUND
high-throughput “omics” research produces large sets of data for genes, proteins, and metabolites. ontology-based enrichment analysis helps to investigate and filter these data sets by assigning meanings to statistical patterns found. ontologies are hierarchies of biologically relevant groupings such as processes, functions, or activities. ontology annotations link ontology classes to the biological entities that are known to belong to those groupings or participate in those processes, functions or activities. for example, the gene ontology  provides hierarchies of cellular compartments, biological processes, and molecular functions. go annotations link genes and proteins to those go classes where the genes are expressed, which processes they participate in, and which functions they bear. enrichment analysis methods assess whether there is a significant over or under representation of entities for ontology classes, when compared to a background population representing the null hypothesis that the data are not enriched for that class. no classes would be found to be enriched if, for example, the measured biological entities’ annotations were found to be evenly distributed between all available ontology classes, or proportionately according to the known biological distribution for the measured sample .

many enrichment analysis tools have been designed for use with genes or proteins and the go, including gominer, fatigo, bingo and gsea. for a review, please see huang et al.  <cit> . these tools take as input lists of gene or protein identifiers and test for enrichment of go classes against the background of the full set of go annotations. with the advent of small molecule high throughput data arising from metabolomics – the study of the chemical processes involving metabolites by measuring the presence and quantity of different chemicals in biological samples – similar tools are now needed for small molecules.

chebi  is a manually curated database and ontology that organizes small molecule knowledge  <cit> . chebi offers both an ontology of chemical structural classes, such as carboxylic acid and steroid, and a role ontology in which biological and chemical activity classes are organized, such as toxin and solvent. chebi also contains fully specifed small molecules at the leaf level of the structural hierarchy – i.e. those that might be measured in metabolomics experiments – such as proline and caffeine. molecules are linked to structural classes with the is_a relation and to functional classes with the has_role relation. for example, cefpodoxime  is_a carboxylic acid  and has_role antibiotic . chebi’s chemical ontology straightforwardly allows enrichment analysis techniques to be transferred to the case of small molecules. here, we present binche, an enrichment analysis tool for the chebi ontology. it is available online at http://www.ebi.ac.uk/chebi/tools/binche/ and as open source software libraries .

binche is not the first chemical enrichment analysis service. msea  <cit>  was the first small molecule enrichment analysis service, but it only used collections of small molecules that were considered relevant, rather than chemical ontologies with their richer structure. mbrole  <cit>  was the first small molecule enrichment analysis service to harness chebi’s ontology for enrichment. while mbrole now provides a number of different chemical knowledge organization schemes for enrichment analysis, including chebi, it displays the results as a plain table, losing the richness of the structure in the underlying ontologies. binche, by contrast, returns graph results and offers a rich visualisation interface. neither does mbrole include weighted analysis, that is, the ability to influence the enrichment analysis through the inclusion of intensity values, fold-changes or p-values as weights for the molecules – an option offered by binche.

chemical enrichment analysis is also possible with non-dedicated tools. bingo  <cit>  is a plugin for cytoscape that is widely used for protein enrichment analysis and generates interactive graph-based outputs which mimic the structure of the input ontology. bingo can be used with ontologies other than the go, including a chemical ontology, such as chebi. however, this requires the manual generation of ontology and annotation files in the custom bingo format, which is not straightforward for most users, and the use of the cytoscape desktop application, rather than being available as a web utility. the national center for biomedical ontology  has also developed an ontology-neutral enrichment analysis tool  <cit> , but that is available exclusively by web service, i.e. there is no associated graphical user interface, and the output it provides is either a tag cloud image  or xml, lacking detail from the source ontology and the statistical significance of the enrichment.

performing an enrichment analysis with chebi has additional subtleties when compared to the go, further hindering the applicability of generic tools to the chemical case. firstly, chebi includes actual small molecules at the leaf level, while the go does not include genes or proteins. thus, chebi contains both complex class definitions and content that is analogous to go annotations. secondly, while the go is available in separate files for its three main branches, and in slimmed versions that facilitate enrichment analysis, the chebi ontology is only available as a single ontology file that includes the roles and the structural classification. chebi also includes parts that are irrelevant for small molecule enrichment analyses, such as sub-atomic particles. all of these issues are solved by binche. in contrast to binche, the use of generic enrichment analysis tools would require manual pre-processing of the chebi ontology to remove irrelevant parts of the ontology such as small molecules and sub-atomic particles. subsequently one would also have to produce a file which annotates each queried chebi entity with its chebi ontology ancestor terms in order to resemble the use case expected by these tools where proteins are given that have annotated gene ontology terms.

implementation
binche is implemented in java version  <dig> , starting from the open source code of bingo. the application is divided into two projects : a core engine, which can be used as an standalone desktop application or as a java library for integration with other projects; and a web application, which displays the enrichment analysis results through an interactive visualization of the chebi ontology. the graph based visualization relies on cytoscapeweb  <cit>  for rendering and provides export functions to generate publication quality images. results can be also retrieved in tabular and network data formats.

the web-based display of the results  enables the user to modify the resulting enrichment graph through manual re-arrangements and built-in layout algorithms. nodes representing chebi entities display additional information when hovered over. these include the name of the entity, chebi identifier, p-value of the binomial test, corrected p-value for multiple hypothesis testing, percentage of the sample that is contained within the ontology term, and the fold of enrichment. the fold of enrichment is the ratio between the enrichment in the sample and enrichment in the background population. additional color formatting and the ability to selectively hide nodes based on different criteria improves the visualization of interesting parts of the network. a contextual menu with a link to the chebi entity web entry, as well as other operations such as the selection of descendants can be triggered by right-clicking the nodes. these features are shown in detail in the wiki  and in additional file  <dig> screenshot of a result graph from the binche web interface. screenshot of a result graph from the binche web interface. highly enriched nodes are shown in red . the interface allows selection of nodes  either manually or through right click functions . the graph can be exported in different formats, zoomed, and its layout altered manually or through automated algorithms. nodes and labels can be hidden.



the tool performs three main types of enrichment analysis: weighted, plain  and fragment. the plain analysis requires a list of chebi identifiers to be submitted, and relies on a binomial test to define whether the provided list is enriched for any chebi classes. the test is executed – as in any ontology-based enrichment analysis – for each class in the ontology and can be subdivided into a couple of steps that result in a p-value for each term.

a ‘trial’ corresponds to checking whether one of the queried chebi identifiers belongs to the chebi class being tested. a ‘success’ is registered when the queried chebi identifier does belong to the ontology class. the probability of success is given by the total number of possible chebi identifiers that belong to that particular chebi ontology class, divided by the total number of classes of the chebi ontology. it is noteworthy that this implies that the same number of successes within two different chebi ontology classes does not guarantee the same level of enrichment, as the level of enrichment also depends on the population-based probability.

for the weighted analysis, the tool accepts as input a list of chebi identifiers accompanied by real numbers from  <dig> to  <dig> – the weights – which can represent intensities or any measurement that reflects differential relevance of the small molecules in an experiment. this type of enrichment uses an implementation of the saddlesum algorithm  <cit> , which assesses the significance of a weight accumulation within an ontology class, drawing a background weight distribution from the complete list of weights provided.

the fragment analysis is a special case of weighted analysis, where only the chemical structure branch of the ontology is used. “fragments” should be understood as molecular fragments or functional groups. data would typically come from fragmentation mass spectrometry experiments. chebi roles are not relevant for the targeted use case of determining candidate structures for a measured spectrum. this analysis uses different pruning strategies on the resulting graph to highlight molecular entities that are enriched. in contrast to the standard weighted analysis option, terminal molecular leaves or root vertices are not removed.

results are corrected for multiple hypothesis testing using benjamini & hochberg’s false-discovery rate, which is widely used by most enrichment analysis tools and in general whenever a hypothesis test is repeated many times. a hypothesis test implies a small risk of false positive errors occurring. for a single test the likelihood of such a false positive is normally acceptable, but the repeated execution of a test – in this case, for each class in the ontology – means that the likelihood of such an error accumulates, leading to an unacceptably high probability of false positives. that is, an ontology class may appear significantly enriched for a given input set when it is not. multiple hypothesis testing correction mechanisms aim to reduce the risk of false positives to an acceptable level.

currently the enrichment is calculated taking the entire ontology as background population, which is the default offered by the underlying bingo implementation.

the enrichment analysis may be executed with the full chebi ontology, although for the results visualisation binche uses only the is_a and has_part relations from chebi’s set of relationship types. that is because the other chemical relationships included in chebi, such as has_functional_parent, are not hierarchical – they are not transitively inherited and do not directly connect molecules with chemical classes. these relationships are mostly used to capture knowledge at the leaf level, between specific molecular entities, as additional separate information to that captured in the structure-based is_a classification. for example, acyclovir has functional parent guanine, but while guanine is a purine nucleobase, acyclovir is not a purine nucleobase. the results display relies on the underlying transitivity of the used relationships in order to lay out the display.

the analysis can also be constrained to either the structural branch of the chebi ontology – which is oriented towards cheminformatics and chemical fragment based analysis use cases – or the role branch of the chebi ontology, catering for chemical biology enrichment analysis use cases.

displaying data on top of chebi is daunting because of the size and complexity of the ontology. using chebi directly with bingo, even after producing all the required files, results in a large and complex graph structure. to this end, we implemented pruning strategies  and in additional file 1) that, while retaining the key ontology information, remove unnecessary detail. while this can be achieved in go-based enrichment through the use of go slim files, losing details of the overall knowledge organization, our tool performs pruning on-demand for each enrichment analysis, and retains the broad structure of the ontology classification. this means that chemical knowledge relevant to each particular enrichment result is retained.

in binche, individual pruning methods are combined in different ways into pruning strategies. a pruning strategy applies the individual methods either once or iteratively. figure  <dig> shows the different pruning methods. as an example, after calculating enrichment p-values, the plain enrichment analysis option available in the web application prunes the resulting chebi graph through the following pruning strategy: pre loop: high p-value branch pruner , linear branch collapser pruner and root children pruner . these are applied only once, at the beginning, in that order. loop: molecule leaves pruner, high p-value branch pruner, linear branch collapser pruner, and zero degree vertex pruner. these are applied iteratively until no change is seen in the graph. final run: no pruner.pruning methods used to decrease the complexity of a result graph. illustration of the different pruning methods implemented to reduce the complexity of the graph-based output. for all cases, edges are directed and equivalent, even if they represent different relationships. arrows are shown where relevant.  the zero degree vertex pruner excludes nodes that have neither incoming nor outgoing edges. these normally appear once the other pruners have been applied.  the root children pruner removes higher levels of the ontology that are deemed irrelevant to the enrichment analysis as they represent very general classes of objects .  the molecule leaves pruner removes all nodes of the graph that do not have any incoming edges and represent a distinct small molecule – and not a class of small molecules. a small molecule is defined as distinct if the node representing it has an inchi line notation.  the high p-value branch pruner looks for branches of the graph where only nodes with high p-value  are present and removes those branches.  the linear branch collapser pruner finds linear stretches  and collapses them, leaving the nodes that surround those stretches connected.



it is relevant to apply these methods iteratively because each of them changes the topology of the graph, potentially increasing the number of nodes that can be removed. while in the case of the plain enrichment analysis no pruners are used in the “final run”, this is different for the weighted and fragment analysis. furthermore, users of the api can change the pruning strategies by adding or removing pruning methods to each phase, to suit their needs. on a typical execution, a pruning strategy like the one described will remove somewhere between a few hundred and a few thousand nodes from the result, clearly improving the comprehensibility of the resulting visualization and allowing the researcher to focus on those parts of the ontology that are most relevant for his or her data.

RESULTS
the primary driving use case for developing the binche tool is the need to assist and further automate the interpretation of results in metabolomics experiments. in metabolomics experiments, the small molecules in a sample of  bodily fluid are identified, quantified and used to compare different experimental groups, e.g. diseased patients and healthy patients. these comparisons result in lists of small molecules that are enriched for particular groups. these molecules can then yield information about the underlying biological processes, such as metabolic pathways, that are executing differentially between the groups. executing an enrichment analysis with the chebi role ontology gives information about which biological role categories are over represented in the target condition, which can yield deeper insights into mechanisms of action.

metabolights is a repository for cross-species, cross-technique metabolomics experiments and derived information hosted at the european bioinformatics institute   <cit> . the study mtbls23: “model-driven multi-omic data analysis elucidates metabolic immunomodulators of macrophage activation”  <cit>  contains lists of chebi identifiers corresponding to small molecules for which the concentration either increases or decreases during macrophage activation when presented with bacterial lipopolysaccharides . applying plain enrichment analysis – using both structural and role ontologies as shown in the wiki  – to the list of chebi identifiers of the molecules that decrease in concentration during macrophage activation m <dig>  reveals that there is an over representation of amino acids among the small molecules whose concentration diminishes during that activation phase, particularly in pyruvate derived amino acids, aspartate family amino acids, and serine derived amino acids.

in the study itself, the authors mention that certain amino acid biosynthesis pathways are relevant during m <dig> activation  <cit> . while the amino acid biosynthesis pathways are deemed relevant during m <dig> activation by the study, they are not exactly those binche detects as enriched in the depletion list. the analysis provides a complementary view on the complex interplay of amino acids in the macrophage activation process.

in study mtbls35: “salmonella modulates metabolism during growth under conditions that induce expression of virulence genes”  <cit>  researchers identified  <dig> metabolites through gc-ms that vary in concentration  within salmonella during virulence induction. plain enrichment analysis of the complete set of small molecules shows an over representation of mostly amino-acids, fatty-acids, and nucleobases. a closer look into the data set shows that  <dig> sets of metabolites – within the original  <dig> – can be distinguised, representing: molecules with higher abundance before the induction of virulence, molecules with higher abundances  <dig> hours after virulence induction, and molecules with higher abundances  <dig> hours after virulence induction. enrichment analysis of the first set of small molecules shows overrepresentation of nucleobases, purins, lipids and carbohydrates. the second set shows that after the first four hours of virulence, fatty acids, monosaccharides , and amino acids have higher abundances. finally, after  <dig> hours of induction, the enrichment analysis shows that small molecules in higher abundances are overrepresented in amino acids much more strongly. this use case can be inspected in detail – including lists of small molecules to submit to binche – on the wiki https://github.com/pcm32/bincheweb/wiki/binche#plain-mtbls35-salmonella-modulates-metabolism-during-growth-under-conditions-that-induce-expression-of-virurulence-genes) and in additional file  <dig> 

chebi enrichment analysis is also useful for metabolite identification. metfrag is an in-silico fragmentation tool for computer assisted identification of metabolite mass spectra  <cit> . running metfrag with default settings results in a list of  <dig> putative identifications of the fragmentation spectrum. the identifiers ) can be used as input for binche after identifier conversion. amongst others, plain analysis shows significant enrichment in the term flavonoids. this suggests that the spectrum represents a compound with a c <dig> or c <dig> skeleton. while in this example that particular information is already encoded in the molecule identifiers themselves, the advantage offered by enrichment analysis with binche is that it provides the ability to highlight key information such as this in an automated fashion. in a high-throughput experiment or pipeline where hundreds or thousands of small molecules are identified, the researcher cannot be expected to examine them all manually, so these kind of insights  would only surface from an analysis like the one proposed here.

naturally, many studies will yield a number of molecules that might not be present in chebi and hence not annotated to the classes of the ontology. in these cases, whatever molecules are present in chebi act as a sample of the complete set provided by the study or pipeline. the conclusions drawn from using binche with this subset should be treated with appropriate caution considering the set submitted as a sample of the complete population of small molecules relevant to the problem. for studies that provide chemical entities through different chemical identifiers or directly via chemical structures, mapping to chebi identifiers can be achieved through services such as unichem  <cit>  or the chemical identifier resolver . in future work, methods for automatically determining candidate class membership for novel molecules within the chebi ontology based on chemical structures – analogous to the automatic annotation of gene and protein identifiers to the gene ontology by, for example, species homology – will be developed.

the web tool can accept a list of hundreds of input chebi identifiers, from which only the well-defined small molecules will have an impact on the enrichment analysis. the biggest lists we have tested have been in the order of a thousand molecules, and with inputs of this size binche took typically less than  <dig> seconds to produce a graph with which the user could interact. the interface was responsive at this level, although this will depend on the client machine used.

CONCLUSIONS
binche provides easy and highly interactive web access to enrichment analysis with the chebi ontology, as well as a java standalone executable and library, which can be integrated into automated pipelines. we have given examples of typical use cases and indicated how it can help to facilitate an understanding of the biological and chemical significance of sets of metabolites, which is of particular relevance in metabolomics and systems biology.

availability and requirements
project name: binche

project home page:http://www.ebi.ac.uk/chebi/tools/binche/

operating system: platform independent

programming language: java  <dig> 

license: gnu gplv3

any restrictions to use by non-academics: none.



additional file
additional file  <dig> 
supplementary material.


 competing interests

the authors declare that they have no competing interests.

authors’ contributions

pm and sb adapted the bingo source code to produce the base binche core java library, produced javadocs and the wiki, and supervised development of the web interface . bh developed the web interface. vm and ad helped supervise and contributed to the development of the web interface, as well as handling server side configuration. it and jh produced the input version of the ontology, with all the suitable requirements for binche. jh advised on general ontological aspects and took care of the integration with the chebi production environment, as well as helping supervise the web development. pm and sn proposed the use of saddlesum for the fragmentation-based use case, which was implemented in the core library by sd and ft, under the advice of ig. pm, jh, sn and cs articulated the research idea. pm, sb, and jh wrote the manuscript. all authors contributed to and have approved the final version.

