BACKGROUND
the methods of protein structure alignment play a crucial role in computational and structural biology. however, despite extensive research, comparison of protein structures still remains an open subject. even in the category of the most straightforward approaches which focus on finding the largest possible sets of superimposable amino-acids, treating structures as rigid entities and preserving the order of aligned residues, there is no definitive "best of all" method  <cit> . furthermore, there exists a growing set of known biologically significant similarities between protein structures with considerable spatial distortions, various segment swaps or circular permutations  <cit> . these "gold standard" alignments are prepared with substantial human intervention  <cit>  and studies have shown that no automated techniques to date are capable of satisfactorily reproducing them  <cit> .

the reason behind the aforementioned problems is the fact that proteins which in fact are fairly elastic objects are represented by fixed atomic coordinates in 3d space, usually obtained from crystallographic experiments and most methods focus on finding a superposition which would minimize the distance between the respective amino-acids. such a paradigm greatly simplifies the difficult task of identifying equivalent residues and thus may be very appealing, but is incapable of distinguishing between regions which are strongly stabilized by actual protein interactions and those which are of looser composition. the major approaches to structure superposition, including comparing intramolecular inter-residue distances , matching main-chain fragments , or secondary structure elements  , handle the limitations imposed by the rigid-body representation with varying degrees of success. some methods use residue attached local frames of reference to identify partial superpositions which are then clustered . in principle, this approach allows for sequential rearrangements. the final alignment is inferred from the predominant superposition. other methods use a one-dimensional representation of structure, where each residue is substituted with a characterization of its local features, and use dynamic programming to align such artificial sequences . still others employ alternative ways of describing protein structure, including delaunay tessellation , spherical polar fourier representations , and geometric hashing . to specifically address structural shifts and distortions, some methods search for "hinges" between superimposable rigid parts . for an alternative classification, see a recent review  <cit> .

methods which attempt a decomposition of protein structures to smaller blocks are most likely to suffer from combinatorial complexity. while in principle they should be capable of finding alignments unconstrained by amino-acid sequence , finding such an alignment is likely to be computationally prohibitive. therefore, most approaches do not allow for sequential rearrangements. this is of less importance in the case of the methods using relatively large sses. however, one of the disadvantages of using sses is that the active sites are frequently small and contained in the coiled regions, and it is particularly important to align these correctly. another method of curbing combinatorial complexity is to use the scoring function based on the rigid-body superposition, possibly allowing for "hinges" between superposable rigid parts. to date, we are aware of only one method capable of computing non-rigid alignments with sequential permutations . it should also be noted that methods tailored to the particular problem do not perform as well as mainstream approaches on the regular simple comparisons.

finding an elegant way to address the aforementioned difficulties has been a motivation behind developing dedal. it is based on a formalism for representing and comparing local structure, the so called local descriptors of protein structure   <cit> . in a much simpler implementation  it has been used to identify regions of correctly predicted structure in models submitted to casp  <cit> . a single local descriptor contains information about the structure within a range of bonded and non-bonded interactions of a single amino-acid. therefore, contrary to backbone segments or sse, it can be treated as a complete self-contained structural entity. alignments built from such blocks preserve contacts, which correspond to physical interactions between residues. descriptors are large and specific enough to lessen the combinatorial burden and omit the sequential constraints. there is no thus need to use a global rmsd  <cit>  or other rigid-body measure to verify the feasibility of alignments.

RESULTS
algorithm
our method performs comparison based on local structural similarities. after all of the local descriptors in each structure are identified, they are compared against each other. pairs of similar descriptors are then used as building blocks for the alignment. for a schematic diagram of the alignment process see figure  <dig> 

a local descriptor is a small part of a structure that can be viewed as a residue-attached local environment. in principle, it is possible to build a descriptor for every residue of a given protein. this process begins by identifying all residues in contact with the descriptor's central residue. elements are then built by including two additional residues along the main-chain, both upstream and downstream of each contact residue. any overlapping elements are concatenated into single segments. thus, a descriptor is typically built of several disjoint pieces of the main chain . it reflects approximately the range of local, most significant physico-chemical interactions between its central residue and other amino-acids. this constitutes a significant difference compared to the single segments so frequently used in other studies. single segments reflect features along the main-chain, while descriptors are spatial, and thus add a three-dimensional context to the local properties of proteins.

using more complex building blocks resulted in several problems which had to be solved. the first was assessing similarity between descriptors. in the case of single segments of the same length, it is easy to compute rmsd between respective amino-acids. when comparing descriptors, we first have to identify the mapping between their residues and only afterwards can we compute the rmsd between them. we consider the two descriptors similar and the resulting sequence alignment valid only when descriptors display sufficiently similar residue-residue contact patterns and the corresponding rmsd is sufficiently small. in our implementation we search for all alignments with a total rmsd not exceeding  <dig> Å, and such that at least half of the segments in each of the descriptors are aligned.

to extend the alignment to whole structures we employ a three-stage process. first, we find all pairs of similar descriptors and their respective structural alignments. to discover significant similarities between local structures and avoid small accidental matches, we consider only alignments that consist of at least three segments, postponing the use of the two- and single segment descriptors to the final stage of the algorithm. each such alignment can be considered as a building block for the alignment of whole structures. obviously, not all blocks fit together, but those that do can be combined into larger alignments. in the second stage, we identify the largest sets  of non-conflicting descriptor pairs, i.e. the largest building block assemblages. from a mathematical point of view, this is a clique finding problem. in the final stage we use the remaining descriptor alignments, which were previously set aside, and add them to alignments from the second stage, but only if they overlap with the alignment being built. the resulting alignments have the following properties:

• each pair of aligned amino-acids belongs to at least one pair of aligned descriptors, which implies that their respective local neighborhoods are preserved,

• there does not necessarily exist a superposition of aligned amino-acids, the alignment may have to be divided into several independently superposable parts,

• alignments may contain permutations of segments.

our approach is of a non-rigid-body type but, contrary to other non-rigid-body methods, it does not attempt to find "hinges" which might make superposition possible. rather, it ensures that alignment can be broken into separately superimposable regions, which are large enough to be structurally meaningful. in particular, separating stages two and three guarantees that each region will contain at least one three-segmented descriptor. the third property provides the ability to handle "difficult similarities". during the process of building an alignment, no restrictions are placed on the order of segments in the resulting mapping. therefore, two similar proteins with different threading, but similar arrangements of secondary structure elements, can still be aligned. using the terminology employed by cath  <cit> , it is possible to align two structures of the same architecture, even if their topologies are different.

the algorithm can be adjusted by modifying the internal scoring function. the most basic score is simply the number of aligned residues. it is also possible to limit the maximal offset between aligned residues. if the lengths of compared chains differ then offset is measured relative to the closest of shortest possible  alignments or allowing gaps only in the shorter of the two protein chains. sometimes, it is undesirable to find alignments with permutations. in such cases it is possible to take the largest sub-alignment which has no more than a given number of swaps. this, for example, permits searching explicitly for circularly permuted proteins.

as mentioned above, dedal is not restricted to finding rigid-body superpositions. this feature can be exploited in two ways. firstly, it can be used to discover several disjoint, differently arranged similar substructures within one pair of proteins . secondly, it can be used to address minute local differences which in a gradual continuous way may result in a global rmsd too large to handle for the traditional rigid-body methods.

testing
datasets
the performance of structure superposition methods is commonly tested by  rigid-body rmsd and  the extent of the obtained superposition. while in many cases this is a valid approach, in many others alignments containing local alignment errors  are indistinguishable from correct ones. this in turn may result in misleading assessments of performance, especially in cases of low structure similarity, at which dedal is primarily aimed. therefore, we resort to the manually curated structural alignments and a simple measure of how accurately they are reproduced by the automated approach. the numerical measure we use is the ratio of the number of residue pairs aligned in the same way in both the computed and curated alignments, and the size of the curated alignment. as a reference we use alignments compiled in  the sisyphus database  <cit> ,  the sisy set, a subset of the sisyphus database prepared by mayr et al.  <cit> , and  the ripc set, containing selected challenging alignments, also prepared by mayr et al. and based on the scop database  <cit> . using sisy and ripc sets allows for a direct comparison with the mayr et al. study.

the sisyphus database contains manually curated alignments for proteins with non-trivial relationships, which are divided into three categories . similarities in the homologous sequence and fold categories are usually large enough to encompass a significant portion of the aligned structures and thus present a good benchmark for the structural alignment software. each multi-alignment in sisyphus consists of at least two structures with a common substructure. it frequently occurs that some of these structures are almost identical. we chose to filter out all structures with at least 80% of residues superimposable within the distance not greater than 2Å. this was done with the lga structure alignment program  <cit> . a greedy algorithm was used to prune such redundant examples leaving only one specimen for each set of similar structures. after the initial pruning, the remaining  <dig> multi-alignments were assigned to one or more of the three categories:

 <dig>  scop - alignments comprising structures which can be related to domains in the scop database,

 <dig>  md - alignments containing multi-domain structures,

 <dig>  mc - alignments containing multi-chain structures.

machine parsable lists of alignments can be found in additional files  <dig>   <dig> and  <dig> 

structures in the pdb very often contain multiple chains filling a unit cell within a crystal. an undesired redundancy may be created if the entire contents of the unit cell are compared. therefore, we have used the pdb "biological units" whenever possible.

the sisy set contains  <dig> non-redundant pairs selected from the sisyphus database by mayr et al.  <cit> . from each sisyphus multiple structure alignment they have selected the pair with the lowest sequence identity. pairs with more than 40% identity or those including structures comprised of multiple chains were excluded.

the ripc set comprises  <dig> pairs of scop domains also selected by mayr et al.  <cit> . these, albeit structurally related, are difficult to align due to repetitions, extensive insertions/deletions, circular permutations and/or considerable conformational variability. for  <dig> of these pairs, the authors provide reference alignments supported by evidence of sequence and function conservation.

reconstruction of sisyphus alignments
we have executed the ts+cts and cts+cts algorithms  on all pairs of structures from the pruned sisyphus alignment set, computing for each algorithm at most the  <dig> largest alignments which differ significantly, and selecting the one that was most similar to the alignment curated in the sisyphus database. computing more than one alignment is necessary because the sisyphus reference alignment is not always the largest or the best one, for example when the compared structures contain repeated motifs or internal symmetries which make alternative superpositions/alignments possible. this fact has been also noted by mayr et al.  <cit> .

for the single chain structures we repeated this experiment using dali  <cit>  with the default settings. the selection of dali for comparison purposes was based on its having the best performance in the mayr et al. comparison  <cit> . if more than one alignment was returned, we again selected the one most similar to the sisyphus alignment. ultimately, for each algorithm and each pair of structures in the dataset, we computed a score equal to the percentage of amino-acid pairs correctly aligned . both methods show similar performance in the case of easy similarities, with dali possibly registering a slight advantage over dedal. however, similarities which are problematic for dali  are solved well by dedal. the average performance of dedal on the sisyphus dataset is 90% . this compares to 90% for dali . when comparing results of dedal with dali, it should be noted that the dali alignments are built using smaller blocks, and thus very seldom leave unaligned residues. descriptors are larger, frequently leading to alignments which could easily be extended by a few residues, without lowering the quality of the superposition, but due to the fairly large granularity of descriptors, there are no pairs of similar descriptors which could facilitate this. it should also be noted that dedal performs well on multi-domain  and multi-chain structures , while dali is not capable of dealing with multiple chains, and performs less well if the spatial orientation of multiple domains differs between structures. it should be noted that for md and mc sets we report only those alignments which involve at least one multi-domain or multi-chain structure. alignments of single domains are reported in the analysis of the scop set.

reconstruction of the sisy and ripc alignments
we have also used the protocol described for the sisyphus dataset above to generate alignments for the sisy and ripc sets. we have compared the results of the ts+cts and cts+cts algorithms  with results for ce, dali, fatcat, matras, ca and sheba as computed by mayr et al.  <cit>  and flexsnap  <cit>  . mayr et al. only provide results for the first alignment computed by the methods they have tested. in the case of the dedal results, one very seldom observes an improvement when selecting alignments other than the first one from the set of five best computed. we provide results for both the first, and the best-of-five alignments obtained with the ts+cts and cts+cts computations. for consistency, only the first alignments are used in the significance analysis. box-and-whisker plots  show that dedal performs at least as well as dali and matras. the mean accuracy on the sisy set is 76% , while dali achieves 75% , and matras - 67% . the difference is larger for the alignments on the ripc set , where the lower quartile of the quality for dedal's ts+cts alignments is comparable to the median for other methods. dedal's average accuracy is 77% , while the second best flexsnap achieves 66% . dali has average accuracy of 60% . the distributions of the accuracy scores were compared using the two-sided wilcoxon signed rank test with paired observations . on the sisy set dedal  performs significantly better than ce, ca, sheba and flexsnap . it also performs better then fatcat  and matras , and performs on a par with dali. on the more difficult ripc set, it performs significantly better than all other methods .

implementation
we have implemented the described algorithms in c on the linux platform. the typical running time of a single comparison of a pair of structures using the ts and cts algorithms ranges from seconds to a few minutes , depending on the number of pairs of similar descriptors. in some cases, when structures are composed of several similar subdomains , the running time can reach several hours. we extracted  <dig> of the most computationally intensive cases and used them to test the remc algorithm. we have experimentally determined the optimal number of replicas, the frequency of replica exchanges and the number of iterations required to reach globally the maximal score. the running time of the monte-carlo algorithm is mostly dependent on these three factors, therefore typically any pair of structures can be aligned in a few minutes. in the experiments described above, the remc algorithm was used as a fallback option in the cases where combinatorial algorithms failed to finish in  <dig> seconds.

we have made dedal available online at http://bioexploratorium.pl/ep/dedal. the website also provides linux binaries of the software. the server can be used to align structures identified by pdb or scop accession codes or supplied in uploaded files. both ts+cts and cts+cts algorithms are available, along with other modes potentially useful for the advanced user to cope with special cases, or to provide more insight into the behavior of dedal. it is also possible to define the parameters of the scoring function . results are presented in html format. superpositions can be downloaded as pdb files or rasmol scripts, and also viewed through the jmol applet. the alignments are available in fasta format and as a list of corresponding residue ranges.

discussion
case studies
to illustrate the capacity of the descriptor based approach we present three cases of difficult structure alignments not handled effectively by methods limited by the rigid-body or sequence-dependence constraints.

saposins
the circular permutation between saposin and saposin-like "swaposin" domains is one of the very first discovered of its kind. the discovery was made by sequence analysis  <cit> , and verified when the crystal structures became available. nk-lysin  comprises five α-helices, conforming with the "folded leaf" architecture   <cit> . the "swaposin" domain  of aspartic proteinase prophytepsin has the same architecture, but the helices are in a different order   <cit> . nevertheless, most of the structure comparison methods attempt to align the helices in agreement with their order along the sequence, which results in a visually poor superposition. they also fail to correctly align the cysteine residues forming the disulfide bonds. only flexsnap and dedal correctly handle these tasks .

gtpases
guanine nucleotide-binding proteins  control a range of cellular events. they act as binary switches, and use the gtp-gdp-gtp cycle to flip between the on and off states. they contain gtpase domains responsible for the gtp/gdp binding. it has been shown that the gtpase activity depends on the set of five conserved sequence motifs  <cit> . there exists an alternative circularly permuted gtpase structure   <cit>  which contains all five motifs but in a different order . although having a different topology, the cpgtpase domains have the same architecture as gtpases, and retain the gtp binding activity. despite the high sequence homology of the crucial motifs  <cit> , many structure comparison methods are unable to correctly align residues which form the gtp/gdp binding site. ce and dali yield 36% accuracy, while flexsnap and cα-match have 90% accuracy . in contrast, dedal yields an entirely accurate superposition in this region .

cyanovirin-n
cyanovirin-n is a potent hiv-inactivating protein, present in both monomeric and domain-swapped dimeric forms. although the monomeric form is predominant in solution, and was determined first  <cit> , the metastable dimeric form is also present. the dimeric form is stabilized in the crystalline state  <cit>  and eventually its structure was also obtained by nmr  <cit> . for the dimeric form, it can be observed that the x-ray  and nmr  structures have a slightly different arrangement of subdomains , and that the local conformations of all residues except for the hinge region  are identical. nevertheless, the similarity between the two structures cannot be easily determined by the rigid-body techniques, which align only one subdomain. surprisingly flexsnap, although in principle capable of handling conformational variability, gives only 50% accuracy with the reference alignment.

CONCLUSIONS
dedal provides a direct approach to capturing similarity between proteins which is independent of rigid-body constraints. this is realized by systematically evaluating local structure context to identify similar regions of proteins while leaving aside regions which are different, where superposition is meaningless and should not be attempted. in addition, by focusing on local structure and carrying out a spatial rather than sequence attached analysis of matching substructures, it is not constrained by any particular order of structural features along the protein sequence. because it identifies all local similarities between compared structures, it offers a rigorous and complete analysis. it is also very conservative in not extending the alignment beyond regions of pronounced structure similarity.

as structure comparison methods mature, the question as to whether compared structures are similar is being replaced by a need to determine the the exact nature of their similarity. the goal is to accurately indicate equivalent residues. only manually curated alignments may be used to reliably assess this aspect of structure comparison. when tested on a relatively simple conserved domain database  <cit> , current automated techniques usually misalign residue pairs that are more than 3Å apart in the reference superposition, which amounts to  <dig> - 19% of the protein core residues  <cit> . this is also true for pairs of proteins within the same superfamilies, where even modest spatial divergence may lead to alignment errors  <cit> . on the more difficult test sets  <cit>  , the quality of the alignments drops even further, to as low as 60% of the amino-acids correctly aligned over core and non-core residues. dedal represents a significant step forward in combating the above difficulties. while on the easier and medium difficulty test cases it is comparable to the best of other techniques, it outperforms them on the more demanding benchmarks. thus, it effectively extends the ability to provide residue accuracy alignments to the most difficult cases, including discovering sequential permutations and spatial deformations. to our best knowledge, no other publicly accessible server offers this capability. the linux binary of flexsnap is publicly available but is less effective than dedal on both sisy and ripc datasets. local structure comparisons play an increasing role in the assignment of protein function  <cit> . dedal offers an effective technique for this class of applications. furthermore, as recently demonstrated by kosloff and kolodny  <cit> , assignment of function may also be helped by focusing on structural dissimilarity among proteins that are related by homology. by identifying only the significant local similarities, dedal allows effective differentiation between similar and dissimilar regions of structure, which could help guide functional assignments within protein families.

because of the relatively large granularity of structure description and inclusion of the 3d structural context, dedal has the capacity for structure comparisons involving large sets of structures. therefore it is well suited to improve automatic classification of structure domains, help analyze protein fold space, or to study molecular evolution processes. these areas reflect our future research interests. the presented methodology is being generalized to the structural multi-alignment problem.

