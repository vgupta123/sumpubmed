BACKGROUND
collaborative systems are emerging as a kind of tool to help people located in different places conduct joint work. basically, they allow several persons to edit and analyze common documents in a coordinated way. evolutionary biologists and systematicians need to communicate, share data and interact despite being separated by long distances. this applies regardless of the extent and type of joint effort involved in, for instance, studying a few genes in a metabolic pathway, or determining the phylogeny of a specific taxonomic group based on previously published studies. over the past few years, several collaborative tools have been proposed, such as teamlab focused on project management, mendeley on research papers, github on software source code, sharelatex on latex documents and google drive on office documents. unfortunately, none of these tools applies when phylogenies are the documents to be shared and jointly edited. recently, a collaborative tool devoted to tree-building, phylografter  <cit> , was developed. it aims to facilitate the process of collaborative tree-assembly while providing links to published phylogenetic hypotheses and represents a web-based content management system for phylogenetic information that provides node-by-node provenance of grafted trees. however, in this software, the collaborative aspect corresponds to the sharing of data  and tree manipulation  is made in an asynchronous way. the bioinformatic resource proposed here, named compphy, is a good step forward. in a few words, compphy is a web platform devoted to collaborative work on phylogenies, providing facilities to jointly visualize, manipulate and mainly compare trees. note that it allows a user to actually see on the screen changes performed by distant collaborators. this is very useful to support a phone or video conversation about a collection of trees tp overcome the need for repeated exchanges of tree files on a shared folder together with round trips with the users’ separate – hence unsynchronized – tree visualization software.

visualizing trees is a recurrent activity in evolutionary biology and systematics due to the central role of trees in these fields. this has led to the development of more than a dozen standalone software programs to visualize trees, such as treeview  <cit> , treedyn  <cit> , dendroscope  <cit> , archaeopteryx  <cit> , figtree  <cit>  and most recently some web tools, such as scriptree  <cit> , itol  <cit> , jsphylosvg  <cit>  and evolview  <cit> . some of these tools also allow for tree annotation. this process consists of highlighting parts of trees  or whole trees with various kinds of information . depending on the tool, complex annotations, such as histograms or pie charts can also be associated with subtrees to indicate the proportion of their taxa having specific properties. these are powerful tools to visualize trees individually but most of them lack features to compare trees.

tree visualization in systematic and evolutionary biology is often done with tree comparison in mind, e.g., how does the inferred tree change when tuning this or that parameter in the inference? what is the difference between trees obtained by this or that method, or from this or that dataset? how much does a gene tree differ from the species tree? starting from this observation, compphy is built with an approach symmetrical to that of the above-mentioned software: yes, it offers tree visualization features, but with tree comparison as a main focus; its name stems from “comparing phylogenies”. table  <dig> details the functionalities provided in different software and web systems with respect to the focus of the present paper. compphy is currently the only available service to compute and visualize consensus and supertrees in a browser . it is also the only web-based resource enabling the collaborative edition of a tree collection during a joint work session.tree comparison facilities of phylogeny visualizing tools



tool
year
type
annotations
joint edit.
cons./supert.
collab.
reference

year: date of the last release; type: some tools run as stand-alone  software after a download/installation procedure, others can be run online, inside a web browser; annotations indicates which tools allow users to annotate trees with extra information : int. , scr. ; joint edit. indicates which tools offer edit functions that jointly apply to a set of trees  cons./supert. indicates which tools offer consensus  and/or supertree  computation; collab. indicates which tools offer functionalities allowing collaborative work.



basically, there are two kinds of tree comparison situations: comparing two trees, or comparing a non-trivial number of trees. we detail both of these cases below.

several situations require side by side display of two trees to visually highlight their differences or common parts. for instance, comparing a gene tree to a species tree allows recovery of evolutionary events that shaped a gene family history  <cit> . similarly, a parasite tree is often compared to a host tree to study co-evolutionary patterns  <cit> . such a pairwise comparison situation is at the core of the compphy’s interface, whose central zone allows the user to display two trees side by side or face to face depending on where they prefer the taxa names to appear. probably the simplest way to measure the topological difference between two trees is by computing a global distance measure that separates the trees  <cit> . this helps for clustering or ranking trees in a set. however, this does not pinpoint conflicting zones in the topologies of the two trees. consensus methods are a useful work-around, displaying a summary of the topological signal common to the compared trees. among tree visualization tools, dendroscope and mega  <cit>  can compute consensus trees. but, mega only allows users to compute a consensus tree in the context of a bootstrap analysis. dendroscope can compute several kinds of consensus but it does not highlight agreeing or disagreeing parts of the initial trees, which is however often required to identify interesting parts in the source trees. in contrast, treejuxtaposer  <cit>  enables simultaneous comparison of several trees, notably by highlighting structural differences and similarities between trees displayed side by side. unfortunately this software does not run on current computers. we also refer readers to densitree  <cit> , which provides a graphical summary of large collections of trees. it is however not suited to a detailed comparison of trees. finally, for those familiar with the command line, the paup*  <cit>  and phylip  <cit>  packages can be used to compute consensus trees.

in situations where a large number of trees need to be compared, consensus trees and supertrees are the most appropriate tool. formally, consensus methods apply when all trees have exactly the same set of taxa, while supertree methods extend consensus methods to situations with unequal taxon sets  <cit> . nowadays, trees are obtained more easily by automated pipelines from genomic resources, so studies tend to encompass more trees, that rarely have the same taxon set. supertree methods are thus a tool of choice. what is really needed there is an integrated tool that allows both tree collection management and supertree computation. indeed, in practice, an initial set of source trees is usually obtained from a pipeline or from a tree inference software program, after which they are usually cut and pasted into a file, then several scripts and programs  are used for the supertree inference, and the newick form of the obtained supertree is subsequently cut and pasted into another tool to display it. the analysis is usually repeated several times to generate other supertrees by changing parameters in the supertree computation or by selecting a slightly different subset of source trees. overall, it is quite easy to get mislead in this juggling act involving different files and tools. unfortunately, there is a real lack of tools for managing a collection of trees and building consensus and supertrees from selected trees: radcon software  <cit>  could once be used to perform some of the above mentioned tasks, but it does not run on modern computers. morover, there is a shortage of web tools that offer to compute supertrees, and those available do not allow tree collection management and visualization  <cit> .

when two or more trees containing a few dozen taxa are compared, several graphical operations are needed, such as a consistent rooting of trees, a common ordering of their tips , differential coloration of taxa depending on the molecular, taxonomic or geographical information. maximum comfort is achieved when these tasks can be performed in an automated way, but this can only be achieved in a tool that manages trees collectively. this excludes a good deal of the software cited above where trees have to be opened independently from one another , except when scripting facilities are provided, such as in dendroscope and scriptree.

this outline of tree comparison functions spread out in different tree display tools, or simply missing, and the absence of tools for collaborative exploration and management of trees prompted us to develop the compphy web-based platform. recent advances in web technologies now allow users to have web applications as powerful as stand-alone software. such applications can be accessed from any operating system while avoiding cumbersome installation and parameterizing steps. moreover, centralizing data on a server overcomes the need for renewed copies and updates of data among the various devices researchers generally use.

the next sections describe compphy’s architecture and functionalities. then, an example of a typical use of the platform shows how this tool can help distant scientists to collectively analyze trees.

implementation
compphy is based on a classic web architecture, see figure  <dig>  the main part is composed of php modules coupled to a mysql database. the database stores information on projects and data related to trees, such as their newick format, annotations and commands to draw them.the architecture of the
compphy
 platform. projects and their trees are stored in a relational database; scriptree  <cit>  is used as the picture generating module. perl is used for tree modifications requiring computation, e.g., restricting trees to common taxa, and as a wrapper for external tree computations modules, e.g., computing a consensus with paup*  <cit> . users interact with compphy from their browser, whose content is connected to the compphy core essentially through the jquery javascript framework.



the scriptree interpreter for phylogenetic graphics is in charge of generating tree pictures  <cit> . it manages tree edition and annotation. scriptree takes text files as input to produce a tree picture: the tree in newick format, a script for the graphical rendering and annotations in csv format. however, users need no knowledge of scriptree to operate compphy: they upload trees in newick format and compphy maintains the script and annotation files according to the users’ requests on its interface. nonetheless, a dedicated zone for the manual tuning of the pictures allows users with knowledge of scriptree to tweak these files for a more specific or elaborated tree rendering. tree pictures are generated by scriptree in svg format, which allows users to interact with pictures, e.g., by pointing at taxa to be swapped, and it is now accepted by all recent browsers.

a set of perl scripts also participates in the core of compphy: they modify the newick format encoding trees when needed, e.g., to restrict them to a subset of taxa. these scripts also interface external programs such as paup*, phylip, physic_ist and spruce, in which case format transformation is often needed. moreover, as compphy is developed according to established programming frameworks, it is relatively easy to add new computational modules in the future.

the communication between the server-side of compphy and client browsers heavily relies on the ajax framework, which basically makes compphy behave similarly to a stand-alone application in many respects, often avoiding the need to reload the whole web page in response to users’ interactions. by adding different plugins to jquery, compphy also handles the display, manipulation and refresh of svg pictures on the client side, and this generally makes compphy more user friendly by displaying tooltips, modal boxes, etc.

compphy is hosted by the atgc platform, which is managed by the french bioinformatics institute and coordinates the bioinformatics services for the south of france. its servers run ≈ <dig>  hours each year for ≈ <dig>  different users from many countries.

RESULTS
trees are the central object handled by compphy. they are contained in tree collections, investigated in projects, each of which can be accessed by a declared list of users . when working on a project, compphy’s interface can be divided in four main parts, see figure  <dig> compphy
’s main interface. zone  <dig> contains the website navigation bar. zone  <dig> displays the project menu, a toolbox allowing participants to coordinate when editing trees together, and the tree collections, each tree being identified by a name and a sketched picture. zone  <dig> displays two workbenches on which trees can be laid down for individual observation or comparison. zone  <dig> presents several tools to edit trees and manage the project.



zone  <dig> contains the site menu, enabling users to navigate between their projects, to edit their account details or to access the onsite manual. zone  <dig> first displays the project menu and the collaborative box  enabling users to coordinate their actions when jointly visualizing a project. for instance, this box allows them to indicate which person is in charge of a current edit. below, it displays short captions of the project trees, organized in two collections . trees can be reordered within each collection and dragged to zone  <dig> to be displayed in full size. zone  <dig> consists of two workbenches allowing users to display two trees side-by-side when focusing on their comparison. operations can be performed on each tree individually or on both trees jointly:  tools on a workbench allow to investigate the tree it contains by zooming, resizing, flipping or translating its image, or by swapping chosen subtrees ;  zone  <dig> also provides pairwise comparison tools that consider the two trees displayed together on the workbenches: coordinated swap of their tips, computation of their topological distance or highlighting of their topological agreement and disagreement. at the bottom of the interface, zone  <dig> contains tools that may apply to more than two trees, and tools to manage other data associated with the project .

our system limits impose that you upload no more than  <dig>  trees covering at most  <dig>  different taxa inside a same project. please note that we also limit the number of trees during an import to  <dig>  per collection. however, compphy’s main focus is on collections of several dozen to a few hundred trees. above this limit, you might not find it too convenient to use. compphy can easily handle trees containing more than  <dig>  taxa. above this limit you can still use it, but be aware that pictures will take longer times to load and to be rendered by your browser .

collaborative work
compphy allows a group of users to jointly work on a project. this work can usually be done in a number of working sessions to which a variable number of persons will participate. compphy thus proposes synchronization tools for multi-user sessions but also asynchronous tools for communication between users present and absent for some sessions. for instance, a forum is associated with each project, where project members can exchange questions, agree on an analysis protocol or simply leave a summary of the member’s recent work for other members who were absent at the last working session.

to coordinate users during a joint working session, compphy ensures that at any moment only one of them performs project changes. all members connected to the project are offered a synchronized  view of the trees and tools. the view refreshes itself regularly, reflecting the edits done by the person in control. insisting that only one person is in control at any moment avoids concurrent edits and ensures that a project stays in a coherent state. a collaborative box  indicates which project members are currently online, who is currently in control of the interface, and allows other members to request the control in turn. each request can be accepted or declined by either the control holder or the administrator. the latter can also take the control over the project at any moment. an option also enables a user to detach their browser from the activity performed by the others . in this case, they can change the trees displayed on the workbenches but they can not make any concrete changes in the project, as this would interfere with the actions of the user in control.

data management
data in compphy is organized around the project concept, that basically pools a set of analyzed trees and associated documents. each project has an administrator who can invite other people to become members of the project. by default, projects are created with a private status, so only the project members can access the data after being identified by compphy. this policy guarantees data privacy while still allowing data sharing. in contrast, a public project can be accessed by any guest to which the url is sent. without opening an account on compphy, a guest can see the project trees and examine them on the workbenches. however, no guest can make changes to the trees or data of the project.

a todo list reminds project members of the next tasks to be performed in the dataset analysis. once performed, each task can be registered as an historical point in the project timeline, thus keeping track of the main analysis steps. backups of the data can be built at these intermediate moments and later restored if needed.

additional trees can be added to a project with an upload facility. trees of the project along with their images can be downloaded one by one from the workbenches, or by collection. extra files related to the project can also be shared between members , e.g., documents explaining how the trees were obtained or papers related to study. it usually helps to have all information relative to a project available in one place. tree pictures with sufficient resolution for publication can be downloaded, as well as trees and other data stored in the project in case a user wants to work offline.

tree edition tools
various tree edition facilities ease the tree comparison process. as in most tree visualization programs, it is possible to color taxa or whole subtrees  but, importantly, this can be done here in a coordinated way for several trees together. it is possible to alter the interleaf scale and font size  with which trees are displayed. once again, this can be applied to a set of selected trees. taxa names at the tips of the trees can be changed in one or several trees, and individual trees can be renamed at any time. zoom in and out are available for trees on the workbenches to facilitate side by side comparison of trees containing different numbers of taxa.

the tree structure itself can be changed in an automated way via several operations. first, trees can be rerooted by defining a new outgroup . this operation can be done jointly for several trees, with several outgroup taxa being indicated in case the precise outgroup taxa differs between trees. several outgroup levels can be indicated: when the most exterior group has no representative in some trees, a taxon from the next level is sought, and so on. the second way to alter a tree structure is by swapping branches of trees on the workbenches. this can be done on one tree  by selecting representative taxa of the two branches to swap, or in an automated way on the two trees in the workbenches  so that taxa appear as much as possible in the same order in both trees. another tool enables users to restrict trees to their common taxa. this can help focus on their topological disagreement, which by definition can only derive from shared taxa arranged in different ways. in particular, gene trees obtained by phyloinformatic pipelines often have different sets of taxa, simply because genes can be lost in some species over the course of evolution.

distance, consensus and supertree computation
a commonly used distance to measure the disagreement between two trees is that proposed by  <cit> . it counts the number of clades  present in one tree but not in the other. compphy proposes to indicate this value for two trees on the workbenches by interfacing phylip treedist program  <cit> . this distance originally applies to two trees with identical taxon sets, so when provided with trees on different taxon sets, compphy first restricts the compared trees to their common taxa, as often done in the field.

when comparing two trees with conflicting topologies, it is often useful to highlight in evidence the largest common structure they share. users can thus drag two trees on the workbenches and ask compphy to compute their maximum agreement subtree consensus. this consensus is defined as the subtree linking the largest set of taxa whose relative placement in the two trees is exactly the same . compphy thus first restricts the two trees to their common taxa, then it uses paup*  <cit>  to compute the consensus of the two trees, and finally displays the two trees with taxa not belonging to the consensus being shaded in light grey, while taxa in the consensus are represented with their original color. subtrees containing taxa present in just one tree are also in grey, so that the structure of the consensus tree is clearly apparent. this has a main advantage to highlight — inside each of the two compared trees — the topological part on which they agree.

the consensus feature is thus focused on the comparison of two trees. when dealing with more than two trees, supertrees offer advantages over consensus trees. for instance, supertree methods consider taxa not present in all compared trees, whereas consensus methods overlook these taxa. compphy gives access to two supertree computation methods: physic_ist  <cit>  and matrix representation with parsimony . when computing the supertree by the physic_ist method with default parameters, the degree of agreement of the input trees is translated in the resolution level of the obtained supertree: basically, a supertree containing only a few taxa and/or being poorly resolved indicates low agreement among the input trees. changing the parameters of physic_ist or resorting to the mrp method gives users an idea of the majority signal in case of substantial disagreement among the input trees . the mrp method is implemented via the spruce library  <cit>  to create the matrix representation of a set of source trees and via paup* to analyze the matrix with parsimony.

discussion
progress in computing technologies has considerably boosted the potential of web browsers, which are now a real alternative to stand-alone software for different tasks. together with cloud sourcing facilities , they overcome the need to install specific software while still offering the possibility to access and edit data from different devices , the underlying operating system as well as the place they are in . the tool presented in this paper was created under this cloud philosophy for all the reasons listed above. it is hosted on a bioinformatics platform that has been receiving for ten years requests from several hundreds to several thousands users a month.

most of all, compphy relies on web technologies to be a collaborative tool. over the course of their activity, systematic and evolutionary biologists are involved in a number of phylogenetic projects with other local or distant people, such as academics, co-workers in the industry, and students. for all of these projects, there are always cumbersome and repeated steps for exchanging the data, converting them into the format required by the tool used by each person. moreover, for distant co-workers, there is a difficult task of explaining and discussing the changes that were done and those to be done, or simply discussing what a collection of trees highlights in one’s data, which is best done by jointly visualizing the collection.

consider the following illustration where compphy could be highly useful. mr s., a phd student, works on horizontal gene transfers  among bacteria, in collaboration with mr b.  and mrs c. . mr s. invites his collaborators to access the project  containing his gene trees, a comprehensive tree computed by a supermatrix approach and other documents . after logging onto the site, mr b. and mrs c. can visualize, compare and edit the tree collections of the project. they first do this asynchronously: mr b.  colors some taxa  in order to clarify the data; then mrs c. edits gene trees and reroots some of them  to ease the comparison. then they each leave a message  to briefly explain their edits. the three of them plan a common working session during which they both connect to compphy and to a video conference system. once logged onto the project, each participant can easily know who is currently in control of the interface . during the meeting, all participants have a synchronized view  and can see the tree collection changing in real time when the one in control performs the edits. mr s. presents his first conclusions on the presence of hgts by highlighting on the shared visualization page the species suspected to be involved in hgts . mr b. requests to be in control of the interface . after several branch swaps in the species tree , mr b. advocates that part of mr s.’s conclusions are wrong due to a species group being misplaced in the supermatrix tree with respect to current taxonomic knowledge. he identifies a gene tree responsible for this topological problem , corrects it, then asks mr s. to redo the supermatrix analysis. the latter then uploads the new comprehensive tree . eventually, they end up with a consistent coloring of the gene trees and of the species trees showing evidence of hgt events in a particular gene tree. to use the tree pictures in an article, they standardize the taxon names in their different trees , they add annotations corresponding to the tips of their trees to indicate taxonomic groups  and make a backup of the project .

though compphy is designed for researchers, it can also be used for educational purposes. practical sessions with undergraduates are ready to set up as this tool requires no specific installation: students only need a web browser for the session. before the session, the lecturer can prepare data to be visualized by the students by creating a public project, which grants access to students as soon as they are communicated the project url. when a lecturer wants students to perform tree analyses, he can ask them to create accounts and projects, inviting him to their project so that he can later access online or collect their grouped or individual homework.

the fact that compphy offers numerous features for collaborative work does not impede users from creating personal projects, i.e., hosting of the data  and the various tree comparison tools.

several extensions of compphy are currently being investigated, including a versioning system of individual trees. this would enable users to keep track of the various versions of their trees and hence bring the “undo” facility. other pairwise comparison and consensus methods should be available soon. we are also planning to accept more tree formats as input  and to implement more real-time features such as onsite audio/video calls and chat.

CONCLUSIONS
compphy is the first online platform allowing several users to synchronously or asynchronously handle phylogenetic trees in a collaborative way. it allows them to see the actions performed by the others in real time on compared trees, which greatly facilitates joint work from distant places. moreover, compphy is a unique tool pooling tree comparison operations such as restriction to common taxa, automatic branch swap, consensus and supertree computation, whose results can be readily visualized in its interface. finally, it offers an interface for usual tree edition facilities, such as leaf and subtree coloring, subtree swapping and tree rerooting.

availability and requirements
project name:compphyproject home page:http://www.atgc-montpellier.fr/compphy/operating system: platform independent other requirements: a recent internet browserlicense: the tool is available online free of charge, and code is available under github any restrictions to use by non-academics: none

competing interests

the authors declare that they have no competing interests.

authors’ contributions

amac and vb initiated the project. amac, nf and vb designed the interface and the functionalities. nf implemented the current version of compphy. fc updated scripttree to provide functionalities in compphy. amac, nf, vb and vl tested the compphy platform. vl maintains the atgc platform hosting compphy. amac, nf and vb wrote the paper. fc, nf and vb produced the figures of the paper. all authors read and approved the final manuscript.

