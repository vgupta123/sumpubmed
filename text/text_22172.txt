BACKGROUND
as phylogenetic data sets expand in scope, especially by leveraging next-generation sequencing technologies, there is an increased need for accessible, reproducible, and transparent computational analyses. although new analysis paradigms are available, like beast xml  <cit> , phyloxml  <cit> , nexml  <cit>  , reproducibility of phylogenetic analyses is still hampered by a lack of standardization of analytical programs, which have varied authors, different requirements, and use multiple file formats. most programs still use file formats optimized for single-partition data sets. this often results in the construction of local, inaccessible analytical pipelines that are difficult to share and augment. these difficulties are not unique to phylogenetics; they apply to all bioinformatic analyses. some recent software platforms like mega <dig>  <cit> , geneious  <cit> , and clc genomics workbench  <dig> . <dig>   are very user friendly and integrative, but they are not fully open-source, which constrains flexibility and future development. a flexible approach to improving transparency in bioinformatics is to employ open source workflow management systems, such as kepler, geneprof, taverna, armadillo, galaxy, and others  <cit> .

the galaxy workflow management system has extensive bioinformatic analysis tools, and provides a number of useful features that can be leveraged for phylogenetic analyses. galaxy is an open source, lightweight system that can incorporate most existing bioinformatics tools. galaxy works within a web browser and mainly uses a graphical user interface, which many phylogeneticists prefer, as evidenced by the popularity of mega  <cit> , macclade  <cit>  and mesquite  <cit> . galaxy already has a large and growing community of users and contributors, and extensive documentation in a wiki, many screen casts, and email lists . at the heart of galaxy are histories, which track all analyses, and which can be shared easily with other users. galaxy also allows the construction of sharable workflows and the construction of “pages,” which document the multiple datasets, tools, and histories used for a project such as a publication . galaxy already has extensive tools for analyzing next-generation sequencing data , which is becoming the standard for molecular phylogenetic analysis. galaxy can easily leverage computer clusters, which are becoming increasingly necessary as phylogenetic datasets expand, and cloud-based computing, which is rapidly increasing in popularity for academic purposes. despite the appropriateness of galaxy for phylogenetic analysis, few tools have yet been developed in galaxy for this purpose.

implementation
here we describe our development of a suite of tools we collectively refer to as osiris, which allow extensive phylogenetic analyses within the galaxy bioinformatics platform. we used perl, python, and bash to develop wrappers for many existing programs and for new custom scripts for all steps of phylogenetic analyses, including data download , ortholog determination, sequence alignment, concatenation and file format conversion, phylogeny estimation, tree manipulation and visualization, and post-tree analyses . we have focused on the ability to easily use these tools in parallel, analyzing simultaneously multiple genes or data partitions by using a simple tabular data input format we call phytab. the tools are hosted on the web-based hosting service bitbucket , which provides revision control: updates can be easily “pushed” to end-users. this approach can be combined with galaxy’s existing and expanding tool kit, especially sequence assembly and data manipulation tools, and will serve as a foundation for community contributions of other phylogenetics tools in galaxy. having an open resource for phylogenetic tools and analyses will improve accessibility, reproducibility, and transparency in the age of increasingly large phylogenetic data sets and complex analyses.

*tools developed for osiris.

RESULTS
a set of tools for reproducible and accessible phylogenetic analyses
tabular file formats
a fundamental innovation of osiris is the use of tabular  data formats, which permit highly parallel analyses, retain more information about the data, and add to the flexibility of analyses. galaxy already makes extensive use of tabular files, which provide a number of advantages, especially for multi-gene, multi-partition phylogenetic analyses that are now the norm in phylogenetics. first, users can easily edit, view and share these files outside galaxy, in standard text editors, spreadsheet programs, or relational databases. second, tabular files can clearly store information of different categories important for phylogenetic analyses. in particular, our tools utilize a four-column format we call phytab format, which stores 1) species name, 2) data partition name , 3) unique id , and 4) sequence or morphological character data. this allows for flexibility in using the same data set to concatenate data partitions into a ‘supermatrix’, to analyze genes separately and infer a species phylogeny from separate gene phylogenies, or to estimate the phylogeny of gene families themselves, common in developmental biology and molecular evolutionary biology. equally important, phytab format facilitates parallelization: each gene family can be analyzed on different processors, to accelerate rapid multiple sequence alignment and gene tree estimation.

osiris tool repositories
tools within the osiris phylogenetics platform are organized by type in seven directories within one bitbucket repository: get data, orthologs, alignment, phyloconversion, phylogenies, phylographics, and phylostatistics. these directories comprise centralized, version-controlled tool storage on bitbucket. a phylogenetic analysis using osiris combines tools in these repository categories with existing bioinformatics tools in galaxy.

get data from online databases 
one of the major difficulties in generating large datasets from public databases such as genbank is the time-consuming process of searching for each species separately, downloading genes individually, and formatting the data for use in downstream applications. we have developed a number of tools that allow the user to download data directly from genbank or phylota using species lists, accession numbers or genbank taxon ids. specifically, get gb allows the user to download genbank data from a text list of accession numbers, allowing the user to select from multiple output formats depending on downstream analyses . we also created tools capable of downloading phylogenies and corresponding datasets from the phylota database , using a list of species or taxon id for a group of interest. trees with target species, fasta and phytab format genetic data are saved as output, which can then be analyzed using other tools in osiris.

assembly and quality control of est and next-generation sequence data 
a primary focus of galaxy itself is on analyzing high throughput genomic data, such that with osiris tools installed, phylogeneticists can immediately leverage existing assembly tools . after assembly, a critical next step is quality control. galaxy already has wrappers for a variety of high throughput quality control  scripts, focusing especially on illumina fastq formats. these qc scripts combine data visualization and statistical analyses , to generate reports of multiple qc steps simultaneously.

determination of orthologous genes 
in order to provide the ability to partition genomes into orthologous genes for a given group of taxa, we created wrappers for the software package evolmap  <cit> . using a gene based clustering method informed by species relationships, evolmap infers shared genes and gene families for a given set of genomes. this allows users to input genomes of their own choosing in order to target a specific group of taxa for ortholog selection. we then created wrappers for hmmbuild, hmmsearch and hamstr  <cit> . thus, results from evolmap  can be used to create hmms using hmmbuild. then, using hmmsearch and/or hamstr, the user can scan query sequences against a set of hmms. the resulting data can be aligned and concatenated for phylogenetic analyses. incorporating these tools into workflows through the galaxy platform is particularly useful, as the user can input virtually any fasta format file  as query, and subsequently combine all resulting ortholog hits.

multiple sequence alignment and concatenation 
for the purpose of accelerated multiple sequence alignment, we created wrappers capable of taking both our new phytab and fasta format input files for muscle  <cit>  and mafft  <cit>  and prank  <cit> . as such, an entire multi-gene data set maintained in phytab format can be passed to a sequence alignment tool, and each gene aligned separately. subsequently, the resulting alignments can be processed using aliscore and alicut  <cit> , thereby identifying and removing ambiguous sections of the alignment in an objective manner, prior to phylogenetic analysis. all the genes stay together in a single phytab file, and the aligned genes can then be concatenated together or analyzed separately.

currently, a complex step for phylogenetic analyses is concatenating together data sets with different taxonomic representation. based on our experiences with multi-gene datasets, we have developed a script for osiris called phylocatenator, capable of taking a phytab format input file containing multiple genes  with uneven data coverage per species . the tool can filter data based on user-provided cutoff variables, such as minimum genes per species, minimum length of an aligned gene, and minimum species per gene. furthermore, data can be filtered using a species list to select specific taxa for analyses, and the user can provide a table of models for each gene/partition, creating a partition file for use with raxml  <cit> . phylocatenator also outputs a file with a species list, names and lengths of genes/gene families, and an html table representing gene coverage across species . when combined with galaxy’s workflow system, this tool easily allows for sophisticated and detailed exploration of the impacts of missing data and taxon sampling on resulting phylogenetics  <cit> .

because phylocatenator uses our phytab format as input, and users may need to concatenate files which are in different formats, we also created an osiris/galaxy wrapper for fasconcat  <cit> , which can concatenate phylip, clustal and/or fasta input files, and output fasta, phylip and/or nexus for use in multiple possible downstream phylogenetics applications.

file format conversion 
a mundane and often time-consuming task is converting file formats for use in different computer packages. galaxy itself already has a number of useful format conversion tools, including fasta to tabular and tabular to fasta. these tools make it easy for the user to switch between fasta and phytab formats. galaxy can also filter, sort and combine tabular file formats, making phylogenetic analyses with phytab files enormously flexible. for example, attributes such as rate of evolution of each gene partition can be estimated, and added as a separate column. the user could then sort on the rate of evolution column to retain only the slowest evolving genes for a phylogenetic analysis. this is just one example, and the flexibility is high enough that we expect analyses will be limited more by user imagination than by their computationally technical abilities.

model-based phylogenetics 
the heart of phylogenetic analysis is the estimation of the phylogenetic tree itself. three mathematically and philosophically different approaches are common in the field: distance-, parsimony-, and model-based methods. in addition, philosophically different approaches to combining data partitions also exist, including concatenating data prior to tree estimation, and analyzing gene trees separately and estimating species trees from the gene trees  <cit> . we have already developed osiris tools from each of these approaches. for parsimony, we have created a wrapper for raxml to implement its parsimony search. for likelihood, we have implemented raxml with a galaxy interface very similar to the raxml black box . for osiris, we have created different implementations of raxml so that the user does not have to choose these. specifically, we use an mpi version of raxml for bootstrapping, and a pthreads version for single-tree searches. this allows use of coarse- and fine-grained parallelization without the end user having to use command line arguments to send different types of jobs to a queue for different tasks. galaxy can handle these different requests without the user knowing about it. as another ml implementation, garli exists on the galaxy tool shed and it can be combined with our tools. we have made a simple wrapper for beast  <cit> . we currently have implemented one gene tree/species tree approach, njst  <cit> .

model-based phylogenetic analyses often proceed first by statistical determination of the best-fit model of molecular evolution, given the data at hand. we have written wrappers for jmodeltest  <cit>  and prottest  <cit> , which utilize phytab format, such that the user can more easily determine the best-fit models for many genes simultaneously. the output is a table with gene name in one column and best-fit model in another column, which can be passed to phylogenetic analysis programs downstream, to set the appropriate model separately for each data partition/gene.

post-phylogeny visualization and analysis 
once a phylogenetic tree is estimated, there are many visualizations and analyses that can be conducted. for visualization of trees in osiris, we use treevector from the galaxy implementation of mothur , a galaxy tool suite focused on microbial ecology. we also call r from galaxy, and use the ape  <cit>  library to generate phylogeny graphics. for example, we can produce separate trees for hundreds of gene families from one phytab file, and pass those results to an ape r script that produces a ‘book’ of tree graphics in a pdf file, one tree per page, that can be viewed to look for peculiarities, such as very long branches that could signal suspect raw data. we also have a tool to convert species names to genbank taxon ids, which can be passed to itol  <cit> . in addition to these existing tools, we propose to leverage itol  <cit>  for automated annotation of clades on trees using genbank taxonomy. furthermore, we will continue to develop other post-phylogeny statistical tests. we have already implemented the sh test for comparing tree topologies  <cit>  and we have a tool to calculate phylogenetic distances  <cit> .

phylogenetic workflows in galaxy
one of the clear advantages of using osiris in galaxy for complex phylogenetic analysis is the ability to combine multiple tools in a workflow in order to perform complex analyses at the click of a button. within, galaxy, sharable, reusable workflows are created using a gui interface. one such example could include starting with raw unaligned sequence data, then proceeding with multiple sequence alignment and masking, followed by a partitioned and bootstrapped maximum likelihood analysis on a concatenated dataset, and/or a gene tree approach were phylogenies for each partition are combined to produce a species tree . this workflow is very flexible, and easily extended into more complicated analyses involving detection and removal of long branches, multiple phylogenetic analyses using model and distance based methods, divergence time estimation, and various post-tree analyses. furthermore, the availability of tools we provide, along with the flexibility of the phytab format as input allows the user to combine data from a variety of sources, including fasta, sff, fastq, sra, genbank, morphological data and a variety of others . this integration allows users to create large comprehensive datasets, drawing from multiple independent sources, in order to maximize species coverage while incorporating all available genetic data. most importantly, it is the ease with which these workflows can be created that is key to the user-friendly nature of the osiris platform in galaxy.

CONCLUSIONS
the diminishing cost of sequence data has transformed phylogenetic analysis, and studies examining hundreds or thousands of genes simultaneously are now commonplace. recent methodological controversies in human genomics, which are at the forefront of bioinformatics analysis, should alert us to potential pitfalls caution  <cit> . as in any field, growing pains are inevitable, but it is essential that phylogenetics remain as transparent, replicable, reviewable, and accessible as possible. the osiris platform in galaxy helps to facilitate all of these goals.

future development of osiris will take three major directions: tool creation, research community involvement and increased computing power . as new phylogenetics programs are released, we will develop wrappers to include them in osiris. this rapid ease of use, including a galaxy tool called toolfactory that creates wrappers for existing scripts, will encourage users to incorporate the most current methods, whether in purely phylogenetic analyses or inter-disciplinary work. as more users join the osiris/galaxy community, they will share data, tools, and workflows that can be further developed by the community. moreover, they can contribute their own tools. finally, galaxy is already prepared for changes in technological infrastructure  <cit> , which will allow osiris to move from local to cloud-based resources.

availability and requirements
project name: osiris

project home page:https://bitbucket.org/osiris_phylogenetics

project demonstration page:http://galaxy-dev.cnsi.ucsb.edu/osiris/

operating system: any internet browser

programming language: python, perl, c, java and others

other requirements: install galaxy  and required tools

license: all original source code for osiris tools is available under the mit license . see below:

the mit license 

copyright   <dig> oakley et al. permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files , to deal in the software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the software, and to permit persons to whom the software is furnished to do so, subject to the following conditions:

the above copyright notice and this permission notice shall be included in all copies or substantial portions of the software.

the software is provided "as is", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. in no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.

restrictions: none

competing interests
the authors declare that they have no competing interests.

authors’ contributions
tho conceived phytab and other tools, coordinated project, wrote manuscript. maa aided in tool development, project coordination and writing. rn wrote hamstr wrapper and other code. msp aided in tool development and writing. ckcc aided in tool development and writing. wc aided in tool development. kbl wrote phytab and other code. all authors read and approved the final manuscript.

