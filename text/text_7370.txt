BACKGROUND
tata-binding protein  is a kind of special protein, which is essential and triggers important molecular function in the transcription process. it will bind to tata box in the dna sequence, and help in the dna melting. tbp is also the important component of rna polymerase  <cit> . tbp plays a key role in health and disease, specifically in the expression and regulation of genes. thus, identifying tbp proteins is theoretically significant. although tbp plays an important role in the regulation of gene expression, no studies have yet focused on the computational classification or prediction of tbp.

several kinds of proteins have been distinguished from others with machine learning methods, including dna-binding proteins  <cit> , cytokines  <cit> , enzymes  <cit> , etc. generally speaking, special protein identification faces three problems, including feature extraction from primary sequences, negative samples collection, and effective classifier with proper parameters tuning.

feature extraction is the key process of various protein classification problems. the feature vectors sometimes are called as the fingerprints of the proteins. the common features include chou’s pseacc representation  <cit> , k-mer and k-ship frequencies  <cit> , chen’s 188d composition and physicochemical characteristics  <cit> , wei’s secondary structure features  <cit> , pssm matrix features  <cit> , etc. some web servers were also developed for features extraction from protein primary sequence, including pse-in-one  <cit> , protrweb  <cit> , pseaac  <cit> , etc. sometimes, feature selection or reduction techniques were also employed for protein classification  <cit> , such as mrmr  <cit> , t-sne  <cit> , mrmd  <cit> .

negative samples collection recently attracts the attention from bioinformatics and machine learning researchers, since low quality negative training set may cause the weak generalization ability and robustness . wei et al. improved the negative sample quality by updating the prediction model with misclassified negative samples, and applied the strategies on human microrna identification  <cit> . xu et al. updated the negative training set with the support vectors in svm. they predicted cytokine-receptor interaction successfully with this method  <cit> .

proper classifier can help to improve the prediction performance. support vector machine , k-nearest neighbor , artificial neural network   <cit> , random forest   <cit>  and ensemble learning  <cit>  are usually employed for special peptides identification. however, when we collected all available tbp and non-tbp primary sequences, it was realized that the training set is extremely imbalanced. when classifying and predicting proteins with imbalanced data, accuracy rates may be high, but resulting confusion matrices are unsatisfactory. such classifiers easily over-fit, and a large number of negative sequences flood the small number of positive sequences, so the efficiency of the algorithm is dramatically reduced.

in this paper, we proposed an optimal undersampling model together with novel tbp sequence features. both physicochemical properties and secondary structure prediction are selected to combine into  <dig> dimensions  features in our method. then secondary optimal dimensionality searching generates optimal accuracy, sensitivity, specificity, and dimensionality of the prediction.

methods
features based on composition and physicochemical properties of amino acids
previous research has extracted protein feature information according to composition/position or physicochemical properties  <cit> . however, analyzing only either composition/position or physicochemical properties alone does not ensure that the process is comprehensive. dubchak proposed a composition, transition, and distribution  feature model in which composition and physicochemical properties were used independently  <cit> . cai et al. developed the  <dig> dimension 188d feature extraction method, which combines amino acid compositions with physicochemical properties into a functional classification of a protein based on its primary sequence. this method involves eight types of physicochemical properties, namely, hydrophobicity, normalized van der waals volume, polarity, polarizability, charge, surface tension, secondary structure, and solvent accessibility. the first  <dig> dimensions represent the proportions of the  <dig> kinds of amino acids in the sequence. amino acids can be divided into three categories based on hydrophobicity: neutral, polar, and hydrophobic. the neutral group contains gly, ala, ser, thr, pro, his, and tyr. the polar group contains arg, lys, glu, asp, gln, and asn. the hydrophobic group contains cys, val, leu, ile, met, phe, and trp  <cit> .

the ctd model was employed to describe global information about the protein sequence. c represents the percentage of each type of hydrophobic amino acid in an amino acid sequence. t represents the frequency of one hydrophobic amino acid followed by another amino acid with different hydrophobic properties. d represents the first, 25%, 50%, 75%, and last position of the amino acids that satisfy certain properties in the sequence. therefore, each sequence will produce  <dig>  × 8) values with eight kinds of physicochemical properties considered.

the  <dig> kinds of amino acids are denoted as {a <dig>  a <dig>  …, a <dig>  a20}, and the three hydrophobic group categories are denoted as .

in terms of the composition feature of the amino acids, the first  <dig> feature attributes can be given as ei=numberofaiinsequence|lengthofsequence× <dig> ≤i≤ <dig> 


extracted features are organized according to the eight physicochemical properties. di  represents amino acids with i hydrophobic properties. for each hydrophobic property, we have ci=numberofdiinsequence|lengthofsequence× <dig> i=n,p,h 
 tij=numberofpairslikedidjordjdilengthofsequence−1× <dig> 
 wherei,j∈i=n,j=pi=n,j=hi=p,j=h. 
 dij=pjthpositionofdilengthofsequence× <dig> j= <dig> , <dig> ,4;i=n,p,h 
 pj= <dig> j=0⌊n4×j⌋,j= <dig> , <dig> ;n=numberofdiinsequence 


based on the above feature model, the 188d features of each protein sequence can be obtained.

features from secondary structure
secondary structure features were proved to be efficient for representing proteins. they contributed on the protein fold pattern prediction. here we try to find the well worked secondary structure features for tbp identification. the psipred  <cit>  protein structure prediction server  allows users to submit a protein sequence, perform the prediction of their choice, and receive the results of that prediction both textually via e-mail and graphically via the web. we focused on psipred in our study to improve protein type classification and prediction accuracy. psipred employed artificial neural network and psi-blast  <cit>  alignment results for protein secondary structure prediction, which was proved to get an average overall accuracy of  <dig> %. figure  <dig> gives an example of psipred secondary structure prediction.fig.  <dig> psipred graphical output from prediction of a tbp  produced by psipred view—a java visualization tool that produces two-dimensional graphical representations of psipred predictions




then we viewed the predicted secondary structure as a sequence with 3-size-alphabet, including h, e, c. global and local features were extracted from the secondary structure sequences. the total of the secondary structure is 473d.

features dimensionality reduction
the composition, physicochemical and secondary structure features are combined into 611d high dimension feature vectors. we try to employ the feature dimensionality reduction strategy for delete the redundant and noise features. if two features are highly dependent on one another, their contribution toward distinguishing a target label would be reduced. so the higher the distance between features, the more independent those features become. in this work, we employed our previous work mrmd  <cit>  for features dimension reduction. mrmd could rank all the features according their contributions to the label classification. it also considers the feature redundancy. then the important features would be ranked on top.

to alleviate the curse of high dimensionality and reduce redundant features, our method uses mrmd to reduce the number of dimensions from  <dig> features, and searches for an optimal dimensionality based on secondary dimension searching. mrmd calculates the correlation between features and class standards using pearson’s correlation coefficient, and redundancy among features using a distance function. mrmd dimension reduction is simple and rapid, but can only produce results one by one, and increases the actual computation time greatly. therefore, based on the above analyses, we developed secondary-dimension-search-tata-binding to find the optimal dimensionality with the best acc, as shown in fig.  <dig> and algorithm  <dig> fig.  <dig> optimal dimensionality searching based on mrmd





as described in fig.  <dig> and algorithm  <dig>  searching the optimal dimension contains two sub-procedures: the coarse primary step, and the elaborate secondary step. the primary step aims to find large-scale dimension range as much as quickly. the secondary step is more elaborate searching, which aims to find specific small-scale dimension range to determine the final optimal accuracy, sensitivity and specificity. in the primary step, we define the initial dimension reasonably according to current dataset, and a tolerable dimension, which is also the lowest dimension. based on this primary step, the dimensionality of sequences will become sequentially lower with mrmd analysis. after finding the best accuracy from all running results finally, the secondary step starts. in the secondary step, mrmd runs and scans all dimensions according to the secondary step sequentially to calculate the best accuracy, which likes the primary step.

negative samples collection
there is no special database for the tbp negative sample, which is often appeared for other special protein identification problem. here we constructed this negative dataset as followed. first, we list all the pfam for all the positive ones. then we randomly selected one protein from the remaining pfams. although one tbp may belongs to several pfams, the size of negative samples is still far more than the positive ones. in order to get a high quality negative training set, we updated the negative training samples repeatly. first, we randomly select some negative proteins for training. then the remaining negative proteins were predicted with the training model. anyone who was predicted as positive was considered near to the classification boundary. these ones who had been misclassified would be updated to the training set and replace the former negative training samples. the process repeated several times unless the classification accuracy would not improve. the last negative training samples were selected for the prediction model.

the raw tbp dataset is downloaded from the uniport database  <cit> . the dataset contains  <dig> tbp protein sequences. we clustered the raw dataset using cd-hit  <cit>  before each analysis, because of extensive redundancy in the raw data . we found  <dig> positive instances  and  <dig> negative instances at a clustering threshold value of 90%. then  <dig> negative control sequences  were selected by random sampling from the  <dig> sequence negative instances.

support vector machine 
comparing with several classifiers, including random forest, knn, c <dig> , libd3c, we choose svm as the classifier due to its best performance  <cit> . it can avoid the over-fitting problem and is suitable for the less sample problem .

the libsvm package  <cit>  was used in our study to implement svm. the radial basis function  is chosen as the kernel function  <cit> , and the parameter g is set as  <dig>  and c is set as  <dig> according to the grid optimization.

we also tried the ensemble learning for imbalanced bioinformatics classification. however, the performance is as good as svm while the running time is much more than svm.

RESULTS
measurements
a series of experiments were performed to confirm the innovativeness and effectiveness of our method. first, we analyzed the effectiveness of extracted feature vectors based on pseudo amino acid composition and secondary structure, and compared this to 188d, psipred, and 661d. second, we showed the performance of our optimal dimensionality search under high dimensions, and compared these findings with the performance of an ensemble classifier. finally, we estimated high quality negative sequences using an svm, to multiply repeat the classification analysis.

two important measures were used to assess the performance of individual classes: sensitivity and specificity: sn=tptp+fn×100% 
 sp=tptn+fp×100% 


additionally, overall accuracy  is defined as the ratio of correctly predicted samples over all tested samples  <cit> ,: acc=tp+tntp+tn+fp+fn×100% where tp, tn, fn, and fp are the number of true positives, true negatives, false negatives, and false positives, respectively.

joint features outperform the single ones
we extracted composition and physicochemical fetures , secondary structured features , and the joint features  for comparison. these data were trained, and the results of our 10-fold cross-validation were analyzed using weka   <cit> . we then calculated the sn, sp, and acc values of five common and latest classifiers and illustrated the results in figs.  <dig>   <dig>  and  <dig> fig.  <dig> five classifier sensitivities 


fig.  <dig> five classifier specificities 


fig.  <dig> five classifier accuracies 




we picked five different types of classifiers, with the aim of reflecting experimental accuracy more comprehensively. in turn: libd3c is an ensemble classifier developed by lin et al.  <cit> . libsvm is a simple support vector machine tool for classification developed by chang et al.  <cit> . ibk  <cit>  is a k-nearest neighbors, non-parametric algorithm used for classification and regression. random forest  <cit>  is an implementation of a general random decision forest technique, and is an ensemble learning method for classification, regression, and other tasks. bagging is a machine learning ensemble meta-algorithm designed to improve the stability and accuracy of machine learning algorithms used in statistical classification and regression. using these five different category classification tests, we concluded that the combination of the composition-physicochemical features  and the secondary structured features  together is significantly superior to any single method, judging by acc, sn, and sp values. in other words, neither physicochemical properties, nor secondary structure measurements alone can sufficiently reflect the functional characteristics of protein sequences enough to allow accurate prediction of protein sequence classification. a comprehensive consideration of both physicochemical properties and secondary structure can adequately reflect protein sequence functional characteristics. as for the type of classifier, libsvm had the best classification accuracy with our data, achieving up to  <dig> % acc with the 611d dataset. furthermore, libsvm had better sn and sp indicator results than the other classifiers tested as well. these conclusions supported our consequent efforts to improve the current experiment using svm, with hopes that we can obtain better performance while handling imbalanced datasets. experiment in  <dig>  will verify the svm, but first we needed to consider another important issue. that is: what is the best dimensionality search method for reducing the 661d features dynamically to obtain a lower overall dimensionality and, thus, a higher accuracy with its final results.

dimensionality reduction outperforms the joint features
according to the former experiments, we concluded that the classification performance of 611d is far better than composition-physicochemical fetures  or the secondary structured features  alone, and that libsvm is the best classifier for our purposes. then we tried mrmd to reduce the features. in order to save the estimating time, we first reduced  <dig> features every time, and compared the sn, sp, and acc values, as shown in fig.  <dig>  we found that it performed better with 230– <dig> features. in the second step, we tried the features size with decreasing  <dig> every times from  <dig> to  <dig>  as shown in fig.  <dig>  optimal sn, sp, and acc values are shown in figs.  <dig> and  <dig> for each step.fig.  <dig> sn, sp, and acc of the primary step


fig.  <dig> sn, sp, and acc of the secondary step




the coarse search is illustrated in fig.  <dig>  the best acc we obtained using libsvm is  <dig> %, which is better than in the joint features in  <dig> . furthermore, acc, sn, and sp all display outstanding results with combined optimal dimensionalities ranging from 220d to 330d. figure  <dig> illustrates the elaborate search. the scatter plot displays the best acc, sn, and sp values,  <dig> ,  <dig> , and  <dig> %, respectively. the scatter plot distribution suggested that there was no clear mathematical relationship between dimensionality and accuracy. therefore, we considered whether our random selection algorithm is adequate to obtain the negative sequences in our dataset. we had to perform another experiment concerning the manner which we were obtaining our negative sequences to answer this question. we designed the next experiment to address the issue.

negative samples have been highly representive
in the previous experiments we selected randomly the negative dataset Ωnon − tata. it may be doubted that whether the random selection negative samples were representive and reconstruction of training dataset can improve the performance. indeed, the positive and negative training samples are filtered with cd-hit, which guaranteed the high diversity. now we try to improve the quality of the negative samples and check whether the performance could be improved. we selected the negative samples randomly several times, and built the svm classification models. every time, we kept the support vectors negative samples. then the support vectors negative samples construct a new high quality negative set, called plus Ωnon‐tata.

the dataset is still Ωtata and plus Ωnon − tata, but now includes  <dig> positive sequences and  <dig> negative sequences. first, the program extracts negative sequences from Ωtata. the 20% of the original dataset that has the longest euclidean distance will be reserved, and then the remaining 80% needed will be extracted from Ωnon − tata. processing will not stop until the remaining negative sequences cannot supply Ωtata. this process creates the highest quality negative dataset possible. experiment in section  <dig>  is then repeated with this highest quality negative dataset, instead of the random sample. primary and secondary step values were estimated and pretata was run to generate a scatter diagram illustrating dimensionality and accuracy.

figure  <dig> illustrates the coarse search. the best acc is  <dig> % by libsvm at 350d. acc, sn, and sp also show outstanding results with dimensionality ranging from 450d to 530d. figures  <dig> illustrates the elaborate search. the scatter plot clearly displays the best acc, sn, and sp as  <dig> ,  <dig> , and  <dig> %, respectively. however, we found that there was still no clear mathematical relationship between dimensionality and accuracy from this scatter plot distribution, and the performance of the experiment was no better than experiment in section  <dig> . in fact, the results may be even more misleading. we concluded that the negative sequences of experiment in section  <dig>  were sufficiently equally distributed and had large enough differences between themselves. although we selected high quality negative sequences with svm in this experiment, the performance of classification and prediction did not improve. furthermore, the acc does not get higher and higher as dimensionality gets larger and larger, which is a characteristic of imbalanced data.fig.  <dig> sn, sp, and acc of the primary step with high quality negative samples


fig.  <dig> sn, sp, and acc of the secondary step with high quality negative samples




comparing with state-of-arts software tools
since there is no tbp identification web server or tool with machine learning strategies to our knowledge, we can only test blastp and psi-blast for tbp identification. we set p-value for blastp and psi-blast less than  <dig>  and the sequences with least p-value were selected. if it is a tbp sequence, we consider the query one as tbp; otherwise, the query protein is considered as non-tbp one. sometimes, blastp or psi-blast cannot output any result for some queries, where we record as a wrong result. table  <dig> shows the sn, sp and acc comparison. from table  <dig> we can see that our method can outperform blastp and psi-blast. furthermore, for the no result queries in psi-blast, our method can also predict well, which suggested that our method is also beneficial supplement to the searching tools.table  <dig> comparison with the searching tools




discussion
with the rapidly increasing research datasets associated with ngs, an automatic platform with high prediction accuracy and efficiency is urgently needed. pretata is pioneering work that can very quickly classify and predict tbps from imbalanced datasets. continuous improvement of our proposed method should facilitate even further researcher on theoretical prediction.

our works employed advanced machine learning techniques and proposed novel protein sequence fingerprint features, which do not only facilitate tbp identification, but also guide for the other special protein detection from primary sequences.

CONCLUSIONS
in this paper, we aimed at tbp identification with proper machine learning techniques. three feature extraction methods are described: 188d based on physicochemical properties, 473d from psipred secondary structure prediction results. most importantly, we developed and describe pretata, which is based on a secondary dimensionality search, and achieves better accuracy than other methods. the performance of our classification strategy and predictor demonstrates that our method is feasible and greatly improves prediction efficiency, thus allowing large-scale ngs data prediction to be practical. an online web server and open source software that supports massive data processing were developed to facilitate our method’s use. our project can be freely accessed at http://server.malab.cn/pretata/. currently, our method exceeds 90% accuracy in tbp prediction. a series of experiments demonstrated the effectiveness of our method.

abbreviations
svmsupport vector machine

tbptata-binding protein

declarations
this article has been published as part of bmc systems biology volume  <dig>  supplement  <dig>  2016: proceedings of the 27th international conference on genome informatics: systems biology. the full contents of the supplement are available online at http://bmcsystbiol.biomedcentral.com/articles/supplements/volume-10-supplement- <dig> 

funding
this work and the publication costs were funded by the natural science foundation of china .

availability of data and materials
all data generated and analyzed during this study are included in this published article  and the web sites.

authors’ contributions
qz analyzed the data and designed and coordinated the project. sw optimized the feature extraction algorithm and developed the prediction models. yj helped to revise the manuscript. xxz created the front-end user interface and developed the web server. jt was involved in the drafting of the manuscript. all of the authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
