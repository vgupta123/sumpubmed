BACKGROUND
for a given type of cancer, there are often subtypes that harbor unique sets of genomic changes and exhibit different patterns of gene expression  <cit> . subtype information is critically important to tailor more effective treatments for patients, as varying subtypes often respond disparately to the same treatment. in the past decade, many generic clustering-based approaches have been developed to identify cancer subtypes based on gene expression data. typically, expression levels of d genes measured on n samples are presented as a d × n real-valued matrix with the entries representing the corresponding expression level. a clustering method can be applied to partition the columns/rows of this matrix into different clusters such that items in one cluster have similar expression patterns. the partition of columns offers clues to potential cancer subtypes, while the partition of rows can highlight potentially relevant co-expressed genes. the most popular clustering methods used in cancer subtype identification include hierarchical clustering and k-means  <cit> . recently, a number of other clustering methods have also been developed. consensus clustering  <cit>  is a clustering framework where the same clustering algorithm is applied to different subsets of the data multiple times. a consensus result is then collected to better describe the similarities between samples. this framework has been widely used in cancer subtype analysis  <cit> . to address the high-dimensional feature space problem , the method developed in  <cit>  uses sparse clustering techniques to adaptively select a small set of informative features to cluster the samples. there are also several clustering methods that were specifically designed for cancer subtype clustering. in  <cit> , survival time information was used to select survival-associated genes and then the samples were clustered using gene expression. in  <cit> , an integrated approach was developed to consider multiple types of omics data  to help identify cancer subtypes. however, we are more interested in only utilizing the gene expression data  and getting the subtype information of a patient  without using clinical features . more importantly, most previous studies did not incorporate biological information, particularly molecular interactions networks, into the clustering step. indeed, network is key to understanding the molecular perturbations in cancer  <cit> . if we consider the interconnection between genes during the clustering process, we have more knowledge of gene interactions at a systems level and may improve our ability to identify cancer subtypes. this will in turn allow us to analyze the perturbation of a group of genes and pathways rather than individual ones to better understand tumor heterogeneity.

the motivation of our work is to develop a method that effectively incorporates molecular interaction networks into the clustering process to improve cancer subtype identification. to this end, one previous work employed information of biological networks during the clustering  <cit> . the method first defined a network distance based on the proximity of two genes in the network and an expression distance of two genes, and then constructed the overall distance metric as a function of network and expression distance metrics for hierarchical clustering. another recent work incorporated network information to cluster genotypes and phenotypes based on phenotype-gene association matrix  <cit> . the authors did so by adding penalty and regularization terms into the clustering objective to keep the final results consistent with clusters obtained from prior knowledge on the disease phenotype similarity network. however, these two approaches are not appropriate for our cancer subtype identification. first, as our goal is to cluster cancer patients , we cannot add a network-based distance in the distance metric defined for patients. second, network-derived clusters  <cit>  are also difficult to define for patients since there is no network structure linking all the patients . finally, simply combining network proximity-defined gene clusters directly with gene expression clusters may be misleading, since neighboring genes can have entirely different expression patterns.

in this work, we introduce a new co-clustering algorithm to effectively integrate network information with expression variation across samples. we call our method “network-assisted co-clustering for the identification of cancer subtypes” . the method first learns a weight for each gene as an indicator of its importance to be used in the clustering. the key idea is that genes regulating many other genes and showing highly variable expression patterns will be considered as more informative in the clustering process. another important contribution of this work is that we embed the gene weights directly into the co-clustering objective function.

co-clustering simultaneously clusters both samples and features  <cit> . in co-clustering, similarity is a measure of the coherence of features  and samples in a bi-cluster, rather than a function of feature pairs or sample pairs. consequently, it considers the local context and is able to automatically select subsets that share similar attributes  <cit> . the method we utilize in ncis is based on semi-nonnegative matrix tri-factorization   <cit> , a member of the matrix factorization-based clustering family. a common underlying assumption of such co-clustering methods is that there exist cluster centroids that characterize the behavior and trend of cluster members, which is mathematically formed as matrix tri-factorization. matrix factorization has simple formalization when compared to other methods, and was shown to be useful in gene expression analysis  <cit> . to our knowledge, ncis is the first method to apply snmtf to achieve weighted co-clustering in cancer subtype identification.

methods
method overview
we developed a clustering method that incorporates the gene network  as prior knowledge and simultaneously cluster samples and genes into distinct groups. adding network structure to the clustering step will help us better select representative genes for clustering. we expect that such a method will generate more biologically informative clusters. the main scheme of our method is shown in figure  <dig>  note that we assume the input expression data has already been pre-processed such that the batch effects and technical artifacts are already removed. we implemented the algorithm in matlab. source code and users’ manual can be found at http://bioen-compbio.bioen.illinois.edu/ncis/.

assigning weights to genes
feature selection is essential for successful pattern recognition from the high-dimensional data. in many previous studies, genes were selected based on their median absolute deviation  or coefficient of variation   <cit> . the cutoff was set rather arbitrarily and typically only a small subset of genes was retained for subsequent analysis, which drastically reduces the amount of information used in clustering. other dimension-reduction methods such as principal component analysis   <cit>  are useful, but the biological interpretation is not always straightforward as expression vectors of the samples are projected to a low-dimensional principal component space  <cit> . on the other hand, incorporating additional biologically relevant information as prior knowledge could help resolve ambiguities in the data because it provides, to a certain extent, insight into how the gene expression profiles were generated. therefore, we utilize the gene network as well as expression information to select genes that both play more important roles in the network and show larger variations among samples. our method assigns a weight to each gene; genes with higher weights will be prioritized during the weighted co-clustering.

we use a modified pagerank algorithm to assign weights to genes. the original pagerank  <cit>  views the web as a directed graph. suppose there are n nodes , then e is a n × n matrix denoting the connections among the nodes. a link from page i to page j is shown by an edge pointing from node i to node j, and in the matrix form denoted by e
ij
 =  <dig>  more links to node j raises its confidence level. the algorithm ranks all the nodes based on the iterative formula:

 rjn=1−α+α∑i=1neijrin−1degi,1≤j≤n, 

where r
n
 is the confidence level in the n
th
 iteration and degi=∑j=1neij, referring to the total number of web pages that i points to; α is a parameter representing the extent to which the ranking depends on the structure of the graph. in our case, we have a similar network representing the molecular interactions among genes. our method that assigns weights to genes is similar to a gene ranking method, generank  <cit> , which extended the idea of pagerank to microarray gene differential expression analysis. however, we use a directed graph , because we believe the direction of edges that models gene regulation is important. additionally, rather than using differential expression, we use an alternative method to consider gene expression variation across samples as described below.

in our graph, a directed edge from node i to node j means that gene i regulates the expression of gene j. genes with larger variations among samples tend to have more distinguishing power. we incorporate such variation into the model to assign weights to genes. our main idea is that genes having a lot of heavy-weight downstream targets should be assigned large weights – a rationale similar to the confidence vote in the original pagerank, except that outgoing edges increase a gene’s weight while incoming edges increase a web page’s weight. our weight-training approach is:

 wjn=1−αnmadj+α∑i=1nejiwin−1degi,1≤j≤n, 

where degi=∑j=1neji is the total number of genes that regulate gene i; w
n
 is the weight vector of genes in the n
th
 iteration and nmad is the normalized median absolute deviation :

 nmadi=madimaxmad, 

where max is the maximum of vector mad.

we use mad as a measurement of the expression variation of a gene among all the samples. the values are normalized by the maximum value in all mad’s to make the weight-training mechanism stable and comparable with different overall expression levels. in each iteration, every gene i is evaluated by its own mad as well as the weights and connections of the genes that i regulates. the final weight of each gene reflects both its impact in the network and its ability to separate the samples.

the convergence of this iterative algorithm is guaranteed for any 0 < α <  <dig>  <cit> . let w
n+1 = w
n
, we have

 wjn=1−αnmadj+α∑i=1nejiwindegi,1≤j≤n. 

we can write in the matrix form as

 wn=1−αnmad+αed−1wn, 

where d is a diagonal matrix with entries deg
i
, 1 ≤ i ≤ n.

the final weight for all the genes can be represented as:

 w=1−α×i−αed−1−1×nmad, 

where i is the n × n identity matrix.

to make weights trained with different parameters more comparable, we normalized w such that the maximum of w is  <dig>  we chose a relatively large α value  to make the weights rely more on the network structure.

weighted co-clustering algorithm
after assigning weights to genes, our input data include the gene expression profile of each sample and the weights for all the genes from the previous step. we developed a new weighted co-clustering method to simultaneously separate samples into subtypes and group genes into functionally relevant subclasses. our method is based on semi-nonnegative matrix tri-factorization , where the nonnegative constraint on the data matrix imposed on orthogonal nonnegative matrix tri-factorization  is relaxed to make it suitable for general dataset.

objective
suppose our gene expression matrix x contains d genes and n samples, and we would like to group the genes into m clusters and group the samples into c clusters . for convenience, the main notations used in the rest of the paper are presented in table  <dig>  our method can be specified as minimizing the following objective,

 ∥x−gsft∥w2=∑i=1d∥xi⋅−gsfti⋅∥2×wii=trxtwx−2xtwgsft+fstgtwgsft. 

x
∙i
th
 column of x, representing the expression of the i
th
x
i∙
th
 row of x, representing the expression of the i
th
ij
 ∈ <cit> : f
ij
 =  <dig> if x
∙i
 belongs to sample cluster j and f
ij
ij
 ∈ <cit> : g
ij
 =  <dig> if x
i∙
 belongs to gene cluster j and g
ij
here, g denotes the cluster each gene belongs to and f denotes the cluster of every sample. entries of matrix s can be treated as centroids of the blocks generated. the aforementioned weights are presented in the diagonal matrix w, and we incorporate an “importance indicator” by multiplying the weights to the row  norms. this is to prioritize genes with large weights in the optimization step. due to difficulties in minimizing the objective with the binary-value constraint on f and g, we relax f and g into continuous nonnegative domain as in previous related work  <cit> . we only require ∑j=1mgij= <dig> ∑j=1cfij= <dig>  thus our objective is to minimize:

 j=trxtwx−2xtwgsft+fstgtwgsft,s.t.g≥ <dig> f≥ <dig> ∑j=1mgij= <dig> ∑j=1cfij= <dig>  

optimization
we set:

 ∂j∂s= <dig>  

then we have:

 s=gtwg−1gtwxfftf− <dig>  

we can get a clearer understanding of s from this expression. if g and f are defined as in table  <dig>  i.e., 0/1-valued partition matrix, f
t
f should be a c × c diagonal matrix, whose entries represent the number of samples belonging to each sample cluster. g
t
wg should be a m × m diagonal matrix, with entries equal to the total weights of the features  belonging to each of the m feature clusters. similar to the interpretation of f
t
f, g
t
wg can be considered as the weighted total number of features in each feature cluster . therefore, -1g
t
wx represents the feature cluster centroids on the sample space  and xf
- <dig> represents the sample cluster centroids on the feature space . the difference is that all the samples are assumed to have the same weight of  <dig>  while features are assigned different weights w. entries of s can be viewed as feature cluster centroids on the sample-centroids space  or as sample cluster centroids on the gene-centroids space . therefore, s gives the centroids information of the bi-clusters after partitioning.

now, assume s and g are fixed. let β ∈ ℝ
n × c
 be the lagrangian multiplier for f, then lagrangian function for f is

 lf=j−trβft. 

we set: 

 ∂lf∂f= <dig>  

using karush-kuhn-tucker condition  <cit> , we have

 −a++a−+fb+−fb−ijfij= <dig>  where a = x
t
wgs, b = s
t
g
t
wgs; m+ and m- are the positive and negative of matrix m defined as m+=m+m <dig> m−=m−m <dig>  respectively. therefore, we obtain the iterating formula for f: 

 fij←fija++fb−ija−+fb+ij. 

similar derivation leads to the iterative formula of g: 

 gij←gijc++wgd−ijc−+wgd+ij, 

where c = wxfs
t
, d = sf
t
fs
t
.

the iterations decrease the value of the objective function j. convergence of the algorithm can be shown using a typical approach for the convergence proof of nmf-based methods. for more details, see the proof in the .

our algorithm is as follows:

•initialize f and g.

•while not convergent and iterations less than a pre-defined value

update s by

s = − 1g
t
wxf− 1;

update f by

 fij←fija++fb−ija−+fb+ij; 

update g by

 gij←gijc++wgd−ijc−+wgd+ij. 

m and c selection
a question raised in almost all clustering methods is how to determine the cluster numbers. there is no agreed-upon solution. here we utilize an approach that takes advantage of the stochastic property of our algorithm: although ncis may not converge to the same solution on each run with different initiations, we could expect the results to be very stable if the clustering is strong enough  <cit> . as in  <cit> , we ran ncis  <dig> times with randomly selected initiations and defined a sample consensus matrix ms¯ and a gene consensus matrix mg¯. for each run, a n × n sample connectivity matrix m
s
 and a d × d gene connectivity matrix m
g
 are obtained: 

 msi,j= <dig> ifsampleiandsamplejbelongtothesamecluster <dig> otherwise; 

 mgi,j= <dig> ifgeneiandgenejbelongtothesamecluster <dig> otherwise. 

consensus matrices ms¯ and mg¯ are the averages of m
s
’s and m
g
’s over  <dig> runs respectively. the entries range between  <dig> and  <dig>  where  <dig> indicates that the corresponding samples  belong to different clusters in every run and  <dig> indicates that they belong to the same clusters in all the cases. therefore, 1−m¯ offers a new distance metric between the items . similar to  <cit> , we used 1−ms¯ and 1−mg¯ to hierarchically cluster samples and genes, and then we define an average cophenetic correlation coefficient ρm¯s+ρmg¯ <dig> to evaluate the stability. cophenetic correlation coefficient ρ is defined as the pearson correlation between distance matrix 1-c and the distance matrix induced by the linkage used in hierarchical clustering for re-ordering c. if a clustering is stable, the entries would be close to  <dig> and  <dig> , and in the ideal case  ρ would be exactly  <dig>  we observe how the cophenetic correlation coefficients change as m and c change and select values where the averaged coefficient starts to decrease.

RESULTS
we applied ncis to two large-scale datasets from tcga as well as simulated datasets to evaluate the effectiveness of our method. we built the network using a variety of sources, including the network used in  <cit>  as well as our up-to-date curated information from reactome  <cit> , the nci-nature curated pid  <cit> , and kegg  <cit> . the network from  <cit>  consisted of inferred gene-interaction from sources of information such as protein interactions, gene co-expression, protein domain interaction, and text-mined interaction described by  <cit> . to aggregate all of the networks together, all redundant edges were collapsed to single edges. we combined the edges of each of the databases such that a link between any two nodes a and b exists in the aggregated network if a link between a and b exists in any of the databases we used. the resulting aggregated network consisted of  <dig>  genes and  <dig>  edges. our method assumes that the network is an aggregation of different biological networks, such as protein-protein interaction network, transcriptional regulatory network, and signaling network etc. in the matlab implementation of our program, we also allow users to provide other network information as needed.

application to tcga breast cancer dataset
the first dataset we used is from a recent large-scale breast cancer study from tcga  <cit> . this dataset contains the expression levels of  <dig>  genes across  <dig> samples. we first integrated the gene expression profile with the aggregated network information mentioned above, and trained weights for  <dig>  genes included in both of these resources . we set α =  <dig>  . the  <dig>  weighted genes and  <dig> samples were the input of ncis. figure  <dig> shows the heatmap with genes and samples rearranged according to the ncis’s clustering result. based on the cophenetic correlation coefficient calculated from  <dig> runs , we chose number of patient clusters c =  <dig> and number of gene clusters m =  <dig> .

since we did not know the true class each sample belongs to or the number of subtypes, we used clinical features to evaluate the effectiveness of the clustering algorithm. the underlying idea was that patients in different subgroups were expected to have some different clinical characteristics. we used the following available clinical information to evaluate subtypes identification result: survival time, ajcc staging information  and tumor nuclei percentage. ajcc neoplasm disease lymph node stage represents the stage of cancer based on the lymph nodes present. neoplasm disease stage represents the extent of a cancer, especially whether the disease has spread from the original site to other parts of the body. tumor stage is a class assigned to a malignancy which allows for the grouping of similar cancer types based on the extent of disease in the primary tumor, regional lymph nodes, and metastatic sites. tumor nuclei percentage represents the percentage of tumor nuclei in a malignant neoplasm specimen . table  <dig> gives the significance level of the difference among all subtypes for each feature. given p-value threshold  <dig> , we conclude that the ncis -defined subtypes successfully separated the patients according to these clinical features.

for survival time, we used logrank test; for ajcc neoplasm disease lymph node stage, ajcc neoplasm disease stage, and ajcc tumor stage, we used chi-squared test; for tumor nuclei percentage, we used anova. note that we did not use the normal-like subtype in this comparison.

we also set α =  <dig>  in the co-clustering process to show the impact of network information. similar statistical tests were performed . in general, ncis  showed better p-values in separating the patients in terms of clinical features than ncis .

in the original tcga paper  <cit> , the authors performed a hierarchical clustering using a subset of genes  and identified  <dig> subtypes . since consensus hierarchical clustering generally performs better than the traditional hierarchical clustering, we also applied a consensus average linkage hierarchical clustering  <cit> . to make a fair comparison, we used all  <dig>  genes. the program was run over  <dig>  iterations and the resampling rate of the sample was set to  <dig> . the distance metric was  <dig> minus pearson’s correlation coefficient. the algorithm suggested  <dig> subtypes. however, in table  <dig>  we listed the tests’ p-values for both 3-subtypes and 5-subtypes conditions to make it easier to compare with the results of ncis. the results indicated that in general, clusters generated by consensus clustering were not as informative as those from ncis. we think the most important reason is the lack of effective feature selection in consensus clustering when there are a large number of genes as input.

the advantage of ncis is the incorporation of the network and assigning an “importance indicator” to each gene. therefore, in addition to generating the subtypes, we also obtained a bi-product -- the gene weights, which describe the genes’ roles in the network and their abilities to distinguish the patient samples. we further performed anova tests for each gene’s expression level across the five subtypes. in the heatmap in figure  <dig>  we showed the first  <dig> genes that are shared between the ordered p-value list and the ordered gene weight list . to illustrate the difference for specific genes in the five subtypes at network level, we extracted the subnetwork of abcc <dig> as an example . there are  <dig> genes targeted by abcc <dig> in the network we used. we chose this subnetwork because it has a small size and is easily and clearly presented. although we did not find literature studying the effect of abcc <dig> in breast cancer, mrp has been reported to be highly associated with breast cancer tumor progression and treatment outcomes  <cit> . as shown in figure  <dig>  abcc <dig> is highly expressed in luminal a and luminal b subtypes. several of its downstream genes have very similar expression pattern. such examples demonstrate the differential expression pattern between subtypes at the network level and the advantage of prioritizing genes with higher impact in the network.

the running time of ncis  on an 8gb memory desktop for this dataset is about 5 minutes.

application to tcga gbm dataset
the second dataset we used was from a recent large-scale tcga glioblastoma multiforme  subtype identification work  <cit> . this dataset contains the expression of  <dig>  genes on  <dig> gbm and  <dig> normal brain samples. in the original paper, the authors first selected  <dig>  variably expressed genes according to the mad and applied consensus hierarchical clustering with agglomerative average linkage  <cit> . four subtypes were detected.

we integrated the gene expression data with the network information to train a weight for each of the  <dig>  genes included in both sets . tuning parameter α was set to  <dig> . after obtaining the weights, these  <dig>  weighted-genes and the  <dig> samples were used in ncis . we set m =  <dig> and c =  <dig> .

we again used clinical characteristics to evaluate the effectiveness of our method. we used survival time, tumor necrosis percentage, and tumor nuclei percentage. tumor necrosis percentage represents the percentage of cell death in a malignant tumor specimen . additional file 1: table s <dig> provides the significance level of the difference among all subtypes for each feature. we also ran consensus average linkage hierarchical clustering  <cit>  on the  <dig> -gene dataset. the program was run over  <dig>  iterations and the resampling rate of the samples was set to  <dig> . the distance metric is  <dig> minus pearson’s correlation coefficient. we identified  <dig> subtypes. overall, ncis  performed the best. interestingly, we observed that subtype proneural has a much higher survival rate than the other three subtypes . the underlying mechanism requires more study. in the heatmap in figure s <dig>  we also showed the first  <dig> genes that are shared between the ordered p-value list  and the ordered gene weight list. figure s <dig> shows the subnetwork of c1qa, which is involved in immune response, to illustrate the difference among subtypes at network level.

the running time of ncis  on an 8gb desktop for this dataset is about 2 minutes.

evaluation by simulation
to further assess the performance of ncis, we simulated a dataset with  <dig> samples and  <dig> subgroups. we designed a method to simulate gene expression data based on network interaction structure . for the  <dig> subtypes we simulated, the mean expression levels of each gene were estimated from the gene expression profiles of luminal a, luminal b, and basal subtypes in the breast cancer dataset. the final datasets contained  <dig> samples and  <dig>  genes.

to make the simulated datasets more realistic, noisy genes were added. we first trained a weight for each gene based only on the network structure and then chose l genes with lowest weights as “uninformative” genes. we randomly permutated the expression levels of these genes across the samples. l was set to  <dig>   <dig>   <dig>   <dig>  and  <dig> .

we set m =  <dig> and c =  <dig> in ncis. the results for multiple trials of the simulation studies were shown in the figure  <dig>  the running time of ncis  on an 8gb desktop is about 3 minutes for each simulated dataset. we found that when the number of “noisy” genes is small , both ncis  and consensus-clustering have 100% accuracy. when the number of noisy genes is increased to  <dig>  ncis  starts to perform better than consensus clustering. as expected, once the number of noisy genes becomes excessive , neither method can achieve high accuracy. overall, our simulation result indicated that ncis is a more robust method than consensus clustering to tolerate noise.

we also observed that ncis  outperformed ncis  significantly in our simulated dataset . however, in the two real datasets, the advantage is marginal. we think the main reason could be that in our simulated datasets, the expression levels are strongly related to the network structure we collected , while in real datasets there are more uncertainties and the network information we used is incomplete.

CONCLUSIONS
cancer subtype information is of critical importance in designing better treatment strategies. we developed a novel clustering method, called ncis, to identify cancer subtypes from high-throughput gene expression data. ncis incorporates the network information within the clustering step to detect more informative sample subtypes. ncis assigns a weight to each gene based on its connection in network and its distinguishing ability in expression level across all samples. our approach avoids excluding a large number of genes, which results in much information loss for subsequent analysis in previous methods. in addition, we utilize a weighted co-clustering method to capture the duality of gene expression data, i.e. similarity is treated as a level of coherence of the samples and genes in the bi-cluster.

the future directions of this problem should ideally address three key challenges. first, the network we used is assumed to be a generic molecular interaction network; it is not specific for the particular type of cancer or the tissue-type. second, the network does not contain all the genes. third, many edges in our current network do not have a high confidence level and the directions of many edges are unclear. these three problems can be addressed as we gain more complete understanding of the network.

further research is needed to design better approaches to choose the optimal parameters in ncis, including α, c, and m. since there is often no gold standard available for the clustering problem of a specific type of cancer, it is difficult to find the optimal parameters of α, c, and m. in our study, we use α =  <dig>  to keep the balance between network information and gene expression information. we did test the results using different values of α, such as  <dig>  and  <dig> , and the results were comparable with minor differences in the clustering result. we believe the problem of choosing the optimal α may require further studies when more data is collected through large-scale projects with detailed clinical features in the future. such knowledge can be utilized to help select α. additionally, how to determine the number of clusters  remains a difficult problem in clustering algorithms. in our work, we utilized cophenetic correlation coefficients used in  <cit> . we compared the results using different m and c combinations where the cophenetic coefficients are slightly lower than the optimal combination . for both brca and gbm data, we observed that the subtypes identified were very similar  based on the p-values of a chi-squared test between subtypes identified in the optimal combination. therefore, the small variation in the choices of m and c results in very similar clustering here. however, further research is still needed to develop better approaches to automatically select the most appropriate m and c.

we believe our new ncis algorithm will be useful to comprehensively identify cancer subtypes, which would otherwise be obscured by cancer heterogeneity, using high-throughput and high-dimensional gene expression data. results from ncis are expected to enhance our ability to discover important subtype patterns and key genes involved in each subtype, which will in turn help us better understand important network perturbations in a subtype-specific manner.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
yl, qg, jh, and jm conceived the research. yl developed the algorithm and performed the data analysis with contributions from qg and jhp. yl drafted the manuscript. qg, jph, jh, and jm revised the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
supplementary materials. available at bmc bioinformatics online.

click here for file

 acknowledgements
we thank the members of the ma lab for helpful discussions. this work was supported by an award from the interdisciplinary innovation initiative  program at the university of illinois  and an illinois distinguished fellowship .

we also thank the cancer genome atlas research network for making the data publicly available.
