BACKGROUND
protein-protein interactions  and other biological interactions regulate a wide array of biological processes. in recent years, biophysical and biochemical approaches for ppi characterization have been supplemented by techniques such as the yeast two-hybrid and mass spectrometry, which have allowed large-scale characterization of a large number of ppis  <cit> . systematic analysis of the underlying relationships in ppi data sets can potentially provide useful insights into roles of proteins in biological processes  <cit> .

the primary physicochemical determinants of the extent and rate of bimolecular ppis are the equilibrium dissociation constant, the rate constant, reaction stoichiometry and the concentrations of free and bound interacting species. however, because of the limitations of existing experimental methods, the currently available ppi data sets are binary valued adjacency matrices that simply indicate whether or not two proteins interact under the assay conditions.

in cells, proteins usually function by interacting with other proteins either in pairs or as components of larger complexes. however, it is still difficult to obtain an accurate understanding of the functional modules, that encompass the groups of proteins involved in common elementary biological functions. a functional module can be defined as a set of proteins that together are involved in a biological process  <cit> . hartwell et al.  <cit>  defined a notion of a functional modules more generally as a group of cellular components and their interaction that can be attributed a specific biological function. cluster analysis is the partitioning of a data set into subsets , so that the data in each subset share some common feature and can be grouped in the specific context of ppi networks, as proteins that share some biological/topological property. cluster analysis is thus generally the method of choice for functional module detection, enabling a better understanding of topological structures and the relationships between components of a network.

related work
the binary nature of the current ppi data sets imposes challenges in clustering using conventional similarity or distance-based approaches that are effective in pattern recognition. for example, the reciprocal of the shortest path length and the hitting time for a random walk between two molecular components have been investigated as a distance/similarity measure for distance based clustering  <cit> . iterative methods that employ shortest path calculations with hierarchical clustering to obtain distance/similarity measures method have also been investigated  <cit> . many different clustering methods that integrate other biological information sources, e.g., gene ontology , phylogenetic profiles, ortholog information, and gene expression, have been proposed to complement binary ppi data sets. wu et al. integrated go, phylogenetic profiles and gene neighbors using bayesian inference to detect functional modules  <cit> . snel et al. identified functional modules by selecting "linker" protein located between clusters of orthologous groups built from a comparative analysis of multiple genomes  <cit> . tornow et al. integrated ppi networks and gene expression data to identify functional modules using the superparamagnetic clustering method   <cit> . the modified betweenness cut approach has been proposed on weighted ppi networks that likewise, combined gene expression  <cit> .

the ppi and biological interaction adjacency matrices can also be represented as graphs whose nodes represent molecular components and edges represent interactions. the clustering of a biological interaction dataset can be thereby reduced to graph theoretical problems. in the maximal clique approach, clustering is reduced to identifying fully connected subgraphs in the graph  <cit> . to overcome the relatively high stringency imposed by the maximal clique method, the quasi clique  <cit> , molecular complex detection   <cit> , spirin and mirny  <cit>  algorithms identify densely connected subgraphs rather than fully connected ones either by optimizing an objective density function or by using a density threshold. the restricted neighborhood search clustering algorithm   <cit>  and highly connected subgraphs  algorithms  <cit>  harness minimum cost edge cuts for cluster identification. the markov cluster algorithm  algorithm finds clusters using iterative rounds of expansion and inflation that promote the strongly connected regions and weaken the sparsely connected regions, respectively  <cit> . the line graph generation approach  <cit>  transforms the network of molecular components connected by interactions into a network of connected interactions and then uses the mcl algorithm to cluster the interaction network.

however, currently used graph theoretical approaches also encounter challenges because the relationship between protein function and ppi is characterized by weak connectivity. indeed, most of the proteins annotated as being involved in a same function do not have direct physical interaction between them in a ppi network. for instance, we estimated the density of intra-connectivity of the 3rd level or more specific function within mips functional hierarchy: on average, only  <dig> % of the possible connections within a 3rd or more specific function occur   <cit> . therefore, an excessive emphasis on high connectivity can limit performance due to a bias for relatively balanced, round shaped clusters and produce a large number of unassigned proteins. in another direction, statistical approaches to clustering have also been proposed. for example, samanta and liang  <cit>  employed a statistical approach to clustering of proteins based on the premise that a pair of proteins sharing a significantly larger number of common neighbors will have high functional similarity.

in this paper, we extend our earlier approach   <cit> . in stm, we modeled the biological and topological influence of each protein on other proteins in a protein network using the probability distribution that the series of interactions necessary to link a pair of distant proteins in the network occur within a time constant, i.e., the occurrence probability . stm propagated the occurrence probability through a shortest path between a protein pair. however, in cascade, the occurrence probability of a series of pairwise interactions is propagated through the interaction network via the quasi all paths  algorithm , which approximates the all possible paths enumeration. cascade, is an enhanced effective novel clustering model and its qap extension enables it to outperform the shortest path approach in stm.

the cascade algorithm can effectively detect both densely and sparsely connected, biologically relevant functional modules with few discards. we have compared cascade to competing approaches including stm and the results obtained demonstrate the superiority of the cascade strategy. the improvements in cascade, which include a refinement to the occurrence probability quantification function and an application of novel quasi all paths  method to incorporate network topology, enhanced its performance over stm on p-values for biological function by 76-fold on average.

RESULTS
analysis of prototypical data
to illustrate the principles underling the cascade approach, we first present the results from the analysis of the simple network shown in figure  <dig>  briefly, the cascade algorithm involves four sequential processes:

process 1
propagate the occurrence probability from each node to the other nodes through quasi all paths in the network.

process 2
select cluster representatives for each node based on the accumulated occurrence probability quantity on each node.

process 3
preliminary clusters will be formed by aggregating each node into the clusters that the selected representatives have formed.

process 4
preliminary clusters will be merged if they have substantial similarity, i.e., inter-connectivity.

first, the occurrence probability from each node will be propagated to the other nodes through qaps in the network. only the occurrence probability from nodes a, f, g, h, i and o are presented for ease of understanding in figure  <dig>  each box in figure  <dig> contains the weighted occurrence probability assessed by the equation  <dig>  from nodes a, f, g, h, i and o to other target nodes. these numerical values illustrate overall effects of combining the network topology with the occurrence probability quantification model. second, the nodes selected as representatives during the second step are those with the highest values of the weighted occurrence probability. for example, nodes b, c, d, e, and f will choose node a and nodes a, g, l, and n will choose node f, which are the best scored nodes on those nodes, as their representatives. third, preliminary clusters will be formed by accumulating each node toward their selected representatives. for example, in figure  <dig>  four preliminary clusters, c <dig> = {a, b, c, d, e, f}, c <dig> = {a, f, g, l, n}, c <dig> = {h, o, j, k}, and c <dig> = {i, h, m, o, p, q, r, s, t, u, v, w}, are formed based on the choice of representatives. for the last step of cascade, preliminary clusters are merged if they have significant interconnections. our definition of similarity between two clusters in figure  <dig> and in equation  <dig>  counts various types of inter-connections, interconnecting edges between two non-overlapping nodes, interconnecting edges between an overlapping node and a non-overlapping node, interconnecting edges between two overlapping nodes. for example, a cluster pair that has an overlapping node having many edges in each cluster should have high similarity. for example in figure  <dig>  c <dig> and c <dig> has a common node o that has one edge in c <dig> and ten edges in c <dig>  there are a total of ten inter-connecting edges for the cluster pair c <dig> and c <dig> since the edge between h and o is redundant. so, the similarity of each cluster pair will be follows: similarity = 10/ <dig>  similarity = 8/ <dig>  similarity = 1/ <dig>  therefore, only one merge occurred between the cluster c <dig> and c <dig> because it is the only cluster pair with sufficient similarity for a merge threshold of  <dig> . eventually, two clusters, {a, b, c, d, e, f, g, l, n}, {h, i, j, k, m, o, p, q, r, s, t, u, v, w}, are obtained after the merge process using  <dig>  as the merge threshold. three clusters, {a, b, c, d, e, f}, {a, f, g, l, n}, and {h, i, j, k, m, o, p, q, r, s, t, u, v, w} are obtained and delimited in figure  <dig> when  <dig>  is used as the merge threshold.

significance of individual clusters
the characteristics of all  <dig> clusters with  <dig> or more proteins identified in the dip yeast ppi network  <cit>  using cascade are summarized in additional file  <dig>  it also shows the topological characteristics and their assigned molecular functions  for each cluster. to facilitate critical assessments, the percentage of proteins that are in concordance with the major assigned function , the discordant proteins  and unknown are also indicated.

the largest cluster in additional file  <dig> contains  <dig> proteins and the smallest cluster contains  <dig>  there are  <dig>  proteins in a cluster on average and the average density of the subgraphs of the clusters extracted from the yeast core ppi network is  <dig> . the -log p values of the major function identified in each cluster are also shown and these values provide a measure of the relative enrichment of a cluster for a given functional category: higher values of -log p indicate greater enrichment. the results demonstrate that the cascade method can detect large but sparsely connected clusters as well as small densely connected clusters. the high values of -log p  indicate that clusters are significantly enriched for biological function and can be considered to be functional modules.

the first column is a cluster identifier; the size column indicates the number of molecular components in each cluster; the density indicates the percentage of possible biological interactions that are present; the h column indicates the percentage of molecular components concordant with the major function indicated in the last column; the d column indicates the percentage of molecular components discordant with the major function and u column indicates percentage of molecular components not assigned to any function. the -log p values for biological function are shown.

analysis of functional annotation
in order to scrutinize the functional term distribution of each detected cluster by cascade, the normalized number of the mips functional terms and the number of proteins that are associated with the mips functional terms in each cluster were analyzed.

additional file  <dig> assesses the heterogeneity of functional terms from the mips database for each cluster detected by cascade. the results show that the clusters have high level of functional homogeneity even after correcting for cluster size.

additional file  <dig> summarizes the mips functional categories for proteins in the ten largest clusters identified by cascade. within each cluster, there was considerable functional homogeneity as assessed by the relatedness among functional categories, e.g., cluster  <dig> was enriched for rna transport processes. furthermore, as would be expected, the largest clusters also contained certain general functions that are required for numerous cellular process, e.g., mrna synthesis was present in clusters  <dig>   <dig> and  <dig> 

the results from additional file  <dig>   <dig>   <dig>   <dig> show that the densities of the subgraphs for each cluster in the ppi network is low and that the topological shapes are diverse. despite the low density and variable shape, cascade was found to identify and assign a high proportion of proteins to the dominant functional category. for example in additional file  <dig>  cascade detected the cluster containing protein yir009w, ypl213w, and ynr011c and they have very good functional homogeneity with other members in the cluster. the performance of competing approaches was affected adversely by weak connectivity.

comparative assessment
to demonstrate the strengths of the cascade approach, we compared it to the following ten competing clustering approaches: maximal clique  <cit> , quasi clique  <cit> , minimum cut  <cit> , betweenness cut  <cit> , the statistical approach of samanta and liang  <cit> , mcl  <cit> , chen  <cit> , rives  <cit> , spc  <cit> , and stm  <cit> . the results for clusters are summarized in table  <dig> and  <dig>  the -log p values in table  <dig> and  <dig> are the average -log p values of all detected clusters by each method.

the number column indicates the number of clusters identified by each method, the size column indicates the average number of molecular components in each cluster; the discard indicates the percentage of molecular components not assigned to any cluster. the average -log p values of all detected clusters for mips categories  and gene ontology , biological process , cellular component ) are shown. comparisons are performed on the clusters with  <dig> or more molecular components. the results for minimum cut and betweenness cut for the biogrid dataset are not shown due to limitation of the available implementation.

the number column indicates the number of clusters identified by each method, the size column indicates the average number of molecular components in each cluster; the discard indicates the percentage of molecular components not assigned to any cluster. the average -log p values of all detected clusters for biological function are shown. comparisons are performed on the clusters with  <dig> or more molecular components for the first data sets, and on the clusters with  <dig> or more molecular components for the last  <dig> network data sets. the maximal clique method is not included in the table because none of the identified clusters have  <dig> or more members.

the experimental results for the biogrid ppi dataset  <cit>  are presented in table  <dig>  the performance was measured for each mips and gene ontology category. table  <dig> shows that cascade had lower p-values and outperformed the other methods on each mips and gene ontology category. on mips functional category, the clusters identified by cascade have p-values that are approximately  <dig> -fold and  <dig> -fold lower than stm and rives approach, respectively, the best performing alternative clustering methods. on mips localization category, cascade identified the clusters with p-values that are approximately  <dig> -fold and  <dig> -fold lower than stm and rives approach, respectively. on mips complex category, the clusters detected by cascade have p-values that are approximately 5-fold and  <dig> -fold lower than stm and quasi clique approach, respectively. similarly, cascade was also found to be superior with the gene ontology categories. another important strength of cascade  method is that the percentage of proteins that are discarded to create clusters is  <dig> %, which is much lower than the other approaches, which have an average discard rate of 33%.

the results in table  <dig> for the dip yeast ppi dataset  <cit>  show that cascade generates larger clusters; the clusters identified have p-values on mips functional category that are approximately  <dig> -fold and 1000-fold lower than stm and quasi clique, respectively, the best performing alternative clustering methods. the p-values for cellular localization for cascade are comparable to those from the maximal clique method. in mips complex category, cascade showed the best p-values over stm and quasi clique, the best performing alternative clustering methods. cascade  method discarded only  <dig> % to identify clusters, which is much lower than the other approaches, which have an average discard rate of 45%. we also conducted these analyses for clusters with more than  <dig> members and obtained qualitatively similar results . additionally, we compared the number of proteins in overlapping clusters, i.e., clusters that have common protein members, for cascade was  <dig> , for the maximal clique and quasi clique methods, the corresponding values were higher at  <dig>  and  <dig> , respectively; the other methods were not included in the comparison because they produce only non-overlapping clusters. cascade preformed better than the two best competing approaches, the stm and quasi clique methods, on the gene ontology category as well.

these two yeast ppi datasets are relatively modular and the bottom-up approaches  generally outperformed the top-down approaches  on functional enrichment as assessed by -log p. however because bottom-up approaches are based on connectivity to dense regions, the percentages of discarded nodes for the bottom-up methods are also higher than cascade and the top-down approaches.

the cascade results for the yeast ddr network  <cit> , rapamycin network and rich medium network data sets  <cit>  are also compared to the competing approaches in table  <dig>  we performed analysis on the functional data using the functional annotation that were acquired manually from the primary literature. the comparisons were performed on the clusters with five or more molecular components for the dna damage response network. for the rapamycin gene modules and rich medium gene modules networks, the analysis was performed on the clusters with three or more molecular components because the majority of the competing methods did not yield any cluster with  <dig> or more members. the maximal clique method does not yield any clusters with  <dig> or more molecular components for the yeast ddr data set and does not yield any clusters with  <dig> or more molecular components for the rapamycin network and rich medium network data sets. for the yeast ddr network, the performance of cascade is comparable to betweenness cut and chen method, the best performing alternatives. the mcl method has comparable -log p values and slightly larger clusters size than the betweenness cut method but these are achieved at the cost of a high discard percentage. cascade also shows on average a 100-fold improved performance over the stm approach on p-values on biological function on these three datasets. the percentage of discarded nodes for cascade is  <dig> %, which is significantly lower than the quasi clique, samanta and liang  <cit>  and mcl  <cit>  methods. the percentages of nodes discarded by the betweenness cut and minimum cut method are comparable to cascade. the chen method shows the best performance on -log p and the lowest discard rate on the yeast ddr dataset. however, its performance appears to be sensitive to the dataset characteristics since it did not perform as well on other datasets. the yeast ddr dataset is relatively sparse and less modular than the yeast ppi network and for this reason, the top-down approaches such as betweenness cut and minimum cut approaches have superior performance compared to the bottom-up approaches.

the rapamycin gene modules network and the rich medium gene modules network have low network density and clustering coefficients, and these extreme topological properties make module identification difficult. although the quasi clique method had the performance comparable to cascade on both networks, the density or merge threshold had to be set to unreasonably low values  to obtain the best clustering outcome. because these networks are relatively small in size and have very sparse connectivity, the top-down approaches such as betweenness cut perform relatively better.

cascade is a significant enhancement to stm and these two methods outperformed all the other methods on each of the datasets. of the remaining  <dig> methods, the quasi clique method showed the best overall performance but its results on the sparse, less modular yeast ddr data set were poor. thus, cascade is also versatile because it is robust to variations in the network topological properties such as density, clustering coefficient and size.

robustness analysis
to assess robustness, the performance of cascade was evaluated upon addition of random interactions to unconnected protein pairs in the dip ppi data set. table  <dig> summarizes the number of clusters detected by cascade and the corresponding average -log p values for the mips categories. the performance of cascade was found to be robust to the addition of random interactions. a small decrease in the number of clusters occurred which can be attribute to the increased network connectivity upon addition of edges.

noise column represents the percentile of random noise added into dip ppi dataset. clusters shows the number of clusters detected. the average -log p values of all detected clusters for mips functional, localization, and complex categories are shown.

computational complexity analysis
a comparison of the time complexity of the various methods is summarized in table  <dig>  the total time complexity of cascade is bounded by the time for qap calculations between all pairs of nodes, which is o. in almost all biological networks, including protein-protein interaction networks, e = o which makes the total complexity of cascade o. among the competing approaches, the spc method has the best running time complexity, o, and the minimum cut method has the worst complexity, o. cascade uses the qap algorithm that approximates the solution to the all possible path problem, which is n p hard. from this standpoint, therefore, cascade has good and manageable running time complexity despite being about v times slower than  <dig> of the other competing approaches: the quasi clique and maximal clique are n p hard. all the experiments in this paper were executed on  <dig> dual-core operon  <dig> ghz linux machine. the experiments on three relatively small size data sets  were finished in few minutes. running time for the dip yeast interaction data set was  <dig>  hours, and  <dig>  hours for the biogrid yeast interaction data set.

discussion
in this paper, we have described and critically evaluated cascade, a novel clustering model for detecting functional modules from biological interaction data. in head-to-head comparisons, the cascade method outperforms competing approaches and is capable of effectively detecting both dense and sparsely connected, biologically relevant functional modules with fewer discards.

the existing algorithms have suffered in their clustering performance in part because they emphasize network regions of high intra-connectivity and low inter-connectivity. however, biological functional modules are not as densely connected as required for optimal performance of these methods: in the yeast ppi network, only an average of  <dig> % of all potential connections between protein pairs are present within a 3rd or more specific function in mips functional hierarchy. the subgraphs of mips functional categories thus have low density and contain many singletons; some members in functional categories do not have direct physical interaction with other members of the same functional category. thus, relative over weighting for densely connected regions can be undesirable for effective functional module detection in biological interaction data sets.

moreover, in the ppi network, the subgraphs of actual mips functional categories are generally not closely congregated and tend to have longish shapes. the average diameter  of the subgraphs of all mips functional categories is approximately  <dig> interactions long and is comparable to the average shortest paths length of  <dig>  for the whole ppi network. a relative excess of emphasis on density and inter-connectivity in the existing methods can be preferential for detecting clusters with relatively balanced round shapes and limit performance. the incompleteness of clustering is another distinct drawback of existing algorithms, which produce many clusters with small size and singletons. the preference for strongly connected nodes results in many weakly connected nodes being discarded.

we examined the frequencies of individuals in each of the clusters from cascade . in the initial qualitative assessment in additional file  <dig>  the larger clusters appeared to be functionally more heterogeneous than the smaller clusters. for example,  <dig> of the  <dig> largest clusters contained "mrna synthesis" and  <dig> of the  <dig> clusters contained "fungal eukaryotic cell type differentiation" are constituent terms. however, there was also substantial functional cohesiveness in each large clusters, e.g., in cluster  <dig>  which had  <dig> genes, there were terms related to "dna synthesis and replication", "mitotic cell cycle and cell cycle control", "modification by phosphorylation, dephosphorylation", "phosphate utilization", "fungal and eukaryotic cell differentiation" that evidently are related. however, the more systematic and detailed analysis in additional file  <dig> did not support the premise that the larger clusters were functionally more heterogeneous than smaller clusters – the proportion of genes in the 3rd and higher levels of the mips hierarchy for the larger clusters was similar and unrelated to cluster size. biologically, the "mrna synthesis" and "fungal eukaryotic cell type differentiation" terms have broad and pleiotropic effects and it is unsurprising that they would be required for multiple functional modules. this may better account for why cascade implicated them in several clusters.

CONCLUSIONS
in conclusion, the novel occurrence probability quantification function-based metric in cascade accounts for both node degree and connectivity patterns and the results indicate that it is an effective approach for analyzing biological interactions.

