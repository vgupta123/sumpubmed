BACKGROUND
significant effort has been invested in identifying which genes regulate the expression of which other genes in a given genome <cit> . the bioinformatics community has collected many of these gene-gene regulatory relationships into transcriptional networks that provide a global view of how gene regulation is orchestrated. for example, transfac collects protein-dna binding interactions to identify potential gene regulatory mechanisms <cit> . similarly, regulondb provides a hand annotated regulatory network for the e. coli genome <cit> . as more data become available, these transcriptional regulatory networks will become increasingly complete in the sense that they will describe the set of possible mechanisms for regulating each gene.

however, even with a fully complete and accurate transcriptional regulatory network, only some of the regulatory relationships will be relevant for a given cellular environment. for example, some gene regulatory mechanisms may only be used in rare cases of stress, or during a short developmental stage. in these cases, these rarely used regulatory mechanisms are correct, but largely non-predictive and as such may not be relevant to the process under study. in these specific cases, the general regulatory network is less useful.

in this paper, we introduce a bayesian network based method to differentiate predictive and non-predictive connections in a transcriptional regulatory network given a body of gene expression data. the method we term partially observed bipartite network, or pobn, uses a simplified bayesian network topology to describe a regulatory network, as is illustrated in figure  <dig>  a pobn has a top layer of unobserved regulators  that connect to a lower level of observed variables . by casting the regulators as unobserved, a pobn makes it explicit that the activities of the regulatory proteins are unknown. as a first approximation, the activity of a regulator could be modeled as simply proportional to the mrna expression level of a transcription factor, however this approximation ignores other regulatory events that are known to influence the regulatory process. for example, the activity of a regulator may be influenced by post-translational modifications, changes in protein localization, sequestration, and/or cleavage--all of which are mediated by other pathways in the cell. unfortunately, this more complete view of transcriptional factor activity is complex, poorly understood, and difficult to quantitatively model. to circumvent this problem, the pobn approach allows the expression of the target genes to dictate the likely activities of each regulator. in doing so, pobn strives to identify regulatory topologies that are maximally consistent with both the expression data and the known regulatory network, while not specifying the mechanistic details that lead to the particular state of the regulatory proteins.

expression data for learning these regulatory relationships can be divided into two classes: time series and static. time series data consist of periodic measurements of a sample to obtain a time varying gene expression profile, while static data consist of a set of expression measurements made under different conditions, treatments, or sample types. if designed correctly, a time series study can identify the sequence of events that trigger a regulatory event, as has been widely explored elsewhere <cit> . in contrast, a static study can only be used to infer relationships between regulators without a clear picture of the sequence. methods to use these static data for transcriptional regulatory network analysis have been less widely explored, although a majority of the gene expression data collected are static. for example, over 80% of the expression data in the public repository geo are from static measurements. although more challenging, in this work we have chosen to explore how these static data can be used to infer regulatory networks using pobn.

to test the performance of the pobn algorithm for regulatory network reconstruction, we focus on the regulatory networks in e. coli. the regulatory network in e. coli is one of the best characterized, giving us a clear picture of the network we expect to find. in addition, digital resources such as the regulondb database provide the regulatory network in a machine readable form that is suitable for comparison to the pobn results.

methods
in the following sections we describe the algorithms and sample studies used to evaluate the pobn algorithm's ability to identify predictive and non-predictive regulatory relationships based on gene expression data.

gene expression data
we tested pobn using a set of  <dig> gene expression profiles in e. coli described elsewhere <cit> , and available online on geo as gse <dig>  this dataset represents a diverse range of biological backgrounds and environmental conditions including genetic perturbations, drug treatments, different growth phases, and a range of metabolic states. the study is well suited to this work because it contains many samples and covers a range of perturbations.

the selection of genes that could be meaningfully analyzed using pobn was based on the following two criteria:  genes must exhibit differential expression in at least some samples; and  genes must be present as target genes in the regulondb regulatory network. the first criterion was enforced by selecting the  <dig> genes with the largest variation as measured by the magnitude of the standard deviation of the expression value across samples. this selection approach will tend to favor genes with larger absolute expression levels, and a diverse range of expression values across the samples. when the second criterion was applied, only  <dig> of the  <dig> genes were found in the regulondb network as targets, producing a final list of  <dig> genes.

data discretization
for computational efficiency, the scoring metrics used in this study require that the data be discretized. data were binned into three states, high, medium and low, with the top third of the values assigned to high, the bottom third assigned to low, and the remaining values assigned to the medium bin. this even sized binning strategy is widely used for discretization of gene expression data in the systems biology community <cit> , and has been shown empirically to be robust in capturing relevant details of the systems under study. we note that the pobn method can be used with continuous values directly, however the continuous scoring algorithms that are currently available are computationally impractical for networks involving more than a few hidden nodes. instead, pobn scores the probability of each network using discrete data as described below.

scoring method
the regulatory bipartite networks tested here are modeled as a bayesian network with the regulators as hidden nodes. in this network, variables are modeled using a multinomial model with dirichlet priors, as is described elsewhere <cit> . using a multinomial likelihood and dirichlet parameter priors leads the bd scoring metric that is used in this work <cit> . this means that the parameter priors are modeled as dirichlet distributions, and helps to reduce over-fitting. see the additional file 1: scoring_metric.doc for a more detailed discussion about bayesian networks with hidden nodes. below we provide a brief summary of the modified sampling-scoring method used in this work.

the end goal of our method is to test each single regulatory connection  in a bipartite network to identify the connections that are more predictive than others based on a specific data set. for this, a score or a likelihood of the network with all the initial connections present needs to be evaluated. then, a connection is removed and a new score for the resultant network without the connection is evaluated. the non-predictive associations can be identified as the ones that improve the initial network score once they are disconnected.

in most bayesian network problems, a completely observed data set is used to estimate the likelihood or score of a network with the metric explained in the additional file 1: scoring_metric.doc. the scoring process with complete data is fast and thousands of networks can be score in minutes. however, in the networks studied in this work, the activity of the regulators is not observed which produce a data set with numerous missing entries. one way to handle these missing entries is to use gibbs sampling, as is described in additional file 1: scoring_metric.doc and elsewhere <cit> . however, using gibbs sampling alone requires that all possible disconnections must be scored and sampled --a process that is computationally impractical when many missing entries are present.

to overcome this computational limitation, we have developed a new sampling-scoring approach to evaluate the score of a network each time a regulator-gene connection is eliminated. this new pobn approach is described below.

the sampling and scoring was done using pebl, a python library previously developed in our group <cit> . pebl evaluates the probability of a discretized dataset given a topology using the bd  scoring metric described elsewhere <cit> . the source code for pebl is freely available online .

the scoring process in our simulations comprised two main steps:  gibbs sampling of the missing entries using the initial global graph and the discretized data and  calculating of an average score across the missing entries samples. these missing entries samples are set of different states configurations for the missing values. one set of configurations includes a complete round of states values . the average score for each network was estimated using the bd metric and the sampled states for the hidden nodes obtained in step . this scoring process was carried out for the initial network and each single edge removal from that initial network. note that gibbs sampling was done only for the initial network. the same set of states configurations were used to estimate the average score of each single edge removal. this approximation assumed that the number of predictive edges is greater than the non-predictive ones, thus contributing significantly more to the network score.

we used an empirical approach to estimate the required number of saved configuration states after gibbs sampling to estimate the score for any network. the criterion used to define a connection as predictive or non-predictive was the rank of the initial global network based on score relative to all the tested edges disconnections . the connection evaluation process  will be explained in the next section. based on this approach, set of configuration sates after gibbs sampling with sizes of  <dig>   <dig>   <dig> and  <dig>  rounds were tested for a first pobn optimization cycle. we observed insignificant changes between the results obtained for  <dig>   <dig>  and  <dig>  rounds of sampling. for these  <dig> set of configuration states sizes,  <dig> non-predictive edges out of 75- <dig> cast as non-predictive  were observed to be different between each set results. nevertheless, the networks evaluated after disconnecting these three discrepant edges ranked just below the criterion established to cast the edge as predictive/non-predictive. for the  <dig> rounds of states configurations case, the difference was of  <dig> edges. as a result of this analysis, all subsequent pobn optimization cycles were run by collecting  <dig> configuration states after gibbs sampling of the initial network as a balance between accuracy and computational efficiency.

network searching and optimization process
the filtered  <dig> genes were mapped to target genes in the regulondb network. this mapped network produced a bipartite graph between regulators and targets containing  <dig> connections between  <dig> unobserved regulators and the selected  <dig> genes.

given this network as an initial global network, we examined all one-edge removals in this network, resulting in  <dig> additional networks to be scored , for a total of  <dig> networks. a complete list of these connections present in our initial global network is provided in the additional file 2: initial_global_net.xls.

if removing an edge in the global network improved the score then the disconnected edge was labeled as non-predictive. if the initial global network did not rank first on the score list, we proceeded with another scoring round  after updating the initial global graph by eliminating the set of non-predictive connections. these steps were repeated until the starting global regulatory network  ranked first on the list as the best network. figure  <dig> shows a conceptual flow diagram of this process. source code for the optimization is provided in the supplementary material additional file 3: pobn_single_round.py. the data and network format needed by pebl is also explained in this same file.

synthetic network validation
to assess the pobn algorithm's discriminatory capability, we tested the algorithm using a synthetic dataset where the predictive and non-predictive edges are known beforehand. first, a bipartite network was defined with  <dig> regulators and  <dig> response variables. each response variable was assigned to have 1- <dig> parents for a total of  <dig> connections in the synthetic network. after defining the topology, conditional probabilities were assigned for all nodes based on connectivity and the  <dig> discrete values that were allowed. based on these parameters,  <dig>  samples were generated to create a data set simulating a discrete static data set, full details of which are provided in the supplementary material. see additional file 4: synthetic_data_generation.py for the data generation script.

after sampling, the values of the  <dig> regulators were removed, making these regulator variables unobserved. next, all combinations of possible non-predictive connections were added to the initial graph one at a time for a total of  <dig> cases, i.e.  <dig> = *-. once a single non-predictive edge was added, the weight for all edges in the graph were evaluated as described in the scoring method section above. this same process was repeated for all combinations of pairs of non-predictive edges that could be added to the original graph .

RESULTS
synthetic data set
the synthetic case study provides a way to evaluate pobn's ability to discriminate between non-predictive and predictive edges with a known network. when a single non-predictive edge was added in all possible positions, 23-22- <dig> out of  <dig> non-predictive edges were correctly identified in three independent runs, and in no case was a true edge called non-predictive. for the cases where pobn did not call the added edge non-predictive, the non-predictive edge was ranked as the first or second weakest . when a pair of non-predictive edges were added in all possible positions, in  <dig> out of  <dig> cases the non-predictive edges were correctly identified and in  <dig> of the remaining  <dig> cases the connections were ranked as the first or second weakest. here again, in no case was a true edge called non-predictive. in runs with fewer samples the number of hits were lower but the algorithm was consistently precise in not calling a true edge non-predictive.

overall, these synthetic results indicate that the pobn algorithm is frequently able to correctly identify the added non-predictive edge with no observable false positive rate and a moderate false negative rate. this result suggests that the edges pobn identifies as non-predictive in the biological dataset will likely be non-predictive, however, edges deemed predictive may be only marginally so, depending on where they appear relative to the initial network.

non-predictive connections predicted using gene expression data
when the pobn analysis was applied to experimentally gathered gene expression data, the algorithm identified  <dig> non-predictive connections out of the  <dig> connections present in the initial regulatory network from regulondb. from this total,  <dig> non-predictive connections were found during the first sampling-score-ranking cycle of pobn analysis,  <dig> in a second cycle, and the last  <dig> in a third cycle. after the third optimization round, the score of the initial graph was no longer improved by removing any edges. during all the rounds of optimization, we observed that well characterized regulatory associations in e. coli such as the genes regulated by lexa  and arac  were within the group of the best scoring edges in the network. a complete list of the  <dig> connections cast as non-predictive and the final trimmed network is provided in additional file 5: removed_edges.pdf and additional file 6: trimmed_net.xls. the additional file 7: initial_global_net.dot and the additional file 8: trimmed_graph.dot contain a graphical representation of the initial global network and the trimmed network.

discussion
by integrating a specific expression data set and a global regulatory network, pobn is able to identify a simplified regulatory network that is both mechanistically sound and maximally consistent with the expression data. this simplified network suggests which connections are of particular importance in the expression data.

during the optimization process, we observed that pobn tended to remove edges from genes that had the higher connectivity . in the initial regulatory network from regulondb, each target gene had between 1- <dig> parent regulators. after pobn optimization, the connectivity range was between 1- <dig> regulators per gene with most genes having between 1- <dig> parents.

an extreme example of regulator trimming took place for the gene ompf. this gene is associated with  <dig> regulators based on the regulondb database. after optimization,  <dig> regulatory connections were removed from ompf suggesting that, based on the data set under study, the expression of this gene is better explained by  <dig> regulator rather than  <dig>  upon examination of the siblings of ompf in the optimized network , we see a regular, but nonlinear relationship between the gene expression values of ompf and its siblings .

sigma factor sigma70
note that even when the sigma factor sigma <dig> is considered a global factor needed for the transcription of most genes and its elimination from the initial network could simplify the computational analysis, we decided to keep it as part of the network to be optimized for the following two reasons:  the global network from regulondb contained several genes that had high variance in their expression data across samples and were only associated with sigma <dig>  these genes were primarily associated with ribosomal subunits, t-rnas, and atp/metabolism processes. because the purpose of pobn is to evaluate a general regulatory network knowledge in the context of a specific dataset, we kept sigma <dig> as it was the only known entity associated with the transcription of these highly expressed group of genes.  transcriptional regulation often involves the co-action of different proteins and factors. one of the challenges when analyzing biological data is the presence of combinatoric phenomena that accurately explain the expression variances. if sigma <dig> participates in a combinatoric effect, eliminating sigma <dig> will reduce the accuracy of the network and the pobn analysis in general. as an example of this combinatoric effect, consider the regulation of genes yfid, acee and acef suggested in regulondb. in the network from regulondb these genes appear regulated by  <dig> transcription factors but sigma <dig> is only associated with acee and acef and not with yfid. in cases like this, the decision to eliminate predictive/non-predictive associations between regulators-genes could be affected if sigma <dig> is removed.

to evaluate the importance of sigma <dig> in the analysis, we also tested pobn with an initial network not including sigma <dig>  the initial network was reduced from  <dig> regulatory associations to  <dig> . after the simulation, pobn identified  <dig> non-predictive connections, all of which were predicted before as part of the group of  <dig> non-predictive associations when sigma <dig> was part of the initial network. the remaining  <dig> not included within these results consisted of  <dig> connections associated only with sigma <dig>  and  <dig> connections associated with other transcription factors. most of these  <dig> connections, previously classified as non-predictive associations when sigma <dig> was part of the initial network, were associated with dual regulators such as fnr, crp, arca, ihf and h-ns. in addition, this group of  <dig> connections ranked within the weakest 15% group of the total connections based on score suggesting that the initial not-relevant prediction for these connections were not far from reality. sigma <dig> is biologically associated with the target genes of these dual regulators  and is part of the requirement for the transcriptional regulation to start. nevertheless, global regulators and/or factors like sigma <dig> may require special considerations on computational analysis and is a topic of future work.

one may ask why any edges should be removed from the annotated regulatory network at all. presumably the annotated network is well validated experimentally, and as such should represent our best prediction of the gene regulatory relationships. based on the analysis here, we see two possible explanations. first, it is possible that the edge identified as non-predictive is not actually a regulatory relationship at all. in this case, the regulatory relationship present in regulondb would be an error or missannotation in the database. a second more likely reason for an edge to be called non-predictive is that the regulatory association is biologically correct, but is not predictive in the gene expression samples used in this study. in this latter case, removing the regulatory connection does not suggest that the there is no biological mechanism for the relationship, but instead that the connection is not relevant to the study. pobn cannot distinguish missannotations vs. non-predictive interactions, but either case represents unwanted pieces of information for the system under study. in both cases, pobn will favor reducing the number of regulators for each gene and consequently reducing the complexity of the model with little or no impact on the model's ability to predict the observed gene expression data even when the exact reason for the disconnection cannot be distinguished.

it was consistently observed that cases of genes in the same operon were disconnected from the same regulator or group of regulators after pobn optimization. in other cases none of the gene members of an operon were disconnected at all. see figure  <dig> for some examples. this was expected to happen because, in most cases, genes in the same operon are regulated by the same group of regulators. it is interesting to notice that even when pobn visited each gene individually with no operon definition during the simulation, it was consistent in disconnecting  all the member genes in an operon from the same regulators. note that there can be few cases of complex operons that can transcribe subsets of genes by means of different promoters and internal transcriptional units within the same operon <cit> . for example, in figure  <dig> b the operon grouping the shown genes consists of three transcriptional units with three different promoters. that is why regulondb has the regulator ihf associated with only sucb and succ and not with the rest of the members of the operon. after pobn, these two genes sucb and succ were disconnected from ihf and also from the same regulators that the other members of the operon were disconnected . this suggests that all the genes in this operon were transcribed by mean of a common promoter.

the regulation of genes can be a dynamic and competitive process in which genes might need the co-action of other regulators and/or compete for regulatory binding sites. in addition, some regulators can have dual regulatory roles. this explains why in some cases a regulator or a combination of regulators were predicted to be the main control entities for the expression of some genes while in other cases the same regulators were disconnected from their target genes. an example of this can be observed in figure  <dig>  in figure  <dig> a the expression of the genes are better explained by arca and fnr and pobn suggests that fur, crp and gade does not contribute much. in contrast, for the genes illustrated in figure 4b, the expression variance is predicted to be better explained by fur and crp and not by arca and fnr.

the genes metz, metw, and metv illustrate an interesting ability of pobn, as all of these genes are associated with only sigma <dig> in the prior global network from regulondb. after optimization with pobn, these methionine t-rna coding genes ended with no parents at the end of the analysis as shown in figure 4c. a possible explanation for this parent elimination is that, for these genes, the prior network in regulondb did not have a complete list of possible regulators. there is evidence in the literature that under grow rate perturbations, the factor for inversion stimulation fis, is been known to drastically alter the trnas pool composition including methionine trnas <cit> . the intracellular concentration of this global regulator  varies substantially in response to changes in the nutritional environment and growth phases <cit> , conditions present as part of the samples set used in this study. it is possible that the expression variance for these genes metz, metw and metv is better explained by a different regulator, i.e fis instead of only sigma <dig>  these results suggest that even when the true regulator is missing, pobn can still discriminate between consistent and inconsistent connections.

CONCLUSIONS
by using a bayesian network based approach the pobn algorithm is able to identify both linear and nonlinear relationships. for example, the regulatory relationship shown in figure  <dig> includes both linear and nonlinear relationships. by identifying both kinds of relationships, pobn is able to detect relationships between genes that are not possible to detect using linear methods or most commonly used clustering methods.

in a larger context, the pobn approach provides a general way to integrate static observational data with knowledge about known regulatory relationships. in the example provided here, we found networks that were maximally consistent with both a set of gene expression data and a gene regulatory network. one could use a similar approach to identify relevant or predictive signaling pathways or protein phosphorylation networks from a mixture of experimental data and known topologies. by using pobn, all members of the network need not be directly observed, as long the measurements that are used in some way reflect the activity of the unobserved nodes.

abbreviations
pobn: partially observed bayesian network

authors' contributions
a.a. designed the pobn approach and software, carried out the analysis, and wrote the paper

p.j.w. designed the pobn approach, guided the analysis, and edited the paper

all authors read and approved the final manuscript.

supplementary material
additional file 1
static bayesian networks and missing data. this document provides more details about the bayesian network metric used in this study as well as the gibbs sampling approach used.

click here for file

 additional file 2
initial global network. table shows all the regulatory associations for the e. coli genes analyzed in this study:  <dig> genes with their  <dig> regulators as suggested by regulondb.

click here for file

 additional file 3
pobn single round script. this python script shows the steps to execute a single pobn optimization round given an initial network and gene expression data.

click here for file

 additional file 4
synthetic data generation script. this python script shows the steps to generate a synthetic data set to test pobn.

click here for file

 additional file 5
edges cast as non-predictive. this table shows all the non-predictive regulatory associations found in this study.

click here for file

 additional file 6
trimmed e. coli network. table shows all the regulatory associations for the e. coli genes after pobn optimization:  <dig> genes and  <dig> regulators

click here for file

 additional file 7
initial e. coli global network. this file contain all the regulatory associations for the e. coli genes analyzed in this study in a "dot" graphic format:  <dig> genes and  <dig> regulators.

click here for file

 additional file 8
trimmed e. coli network. this file contain all the regulatory associations for the e. coli genes after pobn optimizatuon in a "dot" graphic format:  <dig> genes and  <dig> regulators.

click here for file

 acknowledgements
this research was supported by nih grant u54-da- <dig> 
