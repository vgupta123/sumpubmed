BACKGROUND
the hapmap project  <cit>   is an effort to identify and catalogue genetic similarities and differences in humans. the project makes information available on single nucleotide polymorphisms , and it more recently added information on copy number variation . hapmap phase  <dig> includes data on  <dig> individuals  spanning  <dig> populations while phase  <dig> included only  <dig> populations  but more than  <dig>  million snps per individual. this dataset can be useful in a multitude of situations from finding genes that affect human health to evolutionary research about the human species or for genome-wide association studies. all of the information generated is released into the public domain and can be downloaded with minimal constraints. the hapmap project provides access to the data in bulk form , a web interface  <cit>  which includes a genome browser  <cit>  and the data mining application hapmart based on biomart  <cit> . programmatic and relational database interfaces are not offered though some api support is implemented by external parties such as a generic perl api for variation datasets in ensembl  <cit> , bioperl's bio::popgen module  <cit>  or the ggtools package  <cit>  for r/bioconductor. most existing libraries support only a subset of features  making the construction of scripts and applications more complex as basic data manipulation functionality must be built as least partially. furthermore, there is no known python library supporting hapmap data.

implementation
interpopula provides a python api to access the hapmap dataset. interfaces to all hapmap phases are supported including phase  <dig> data with fewer populations but more snps genotyped per individual and phase  <dig> covering more populations. interpopula provides access to frequency, genotype, linkage disequilibrium and phasing datasets. the recent cnv dataset is also supported along with family relationships for the  <dig> populations where sampling was performed for family trios .

support for annotation information that is commonly needed to process hapmap data is also provided through an api to both the ucsc known genes dataset  <cit>  from the ucsc genome browser database  <cit>  and the ensembl gene annotation database  <cit> .

the api was constructed according to the following design guidelines:

 <dig>  the api is straightforward and self-contained. the core api requires only a python interpreter, has no extra dependencies and minimal administrative overhead.

 <dig>  downloaded data is stored on an sql database for faster access. all data is stored using sqlite  <cit>  which is natively supported in python thus lowering the maintenance costs of the system. interpopula can also be connected to enterprise-grade databases which support multiple users, concurrent usage and large datasets for which the standard sqlite backend might not be enough .

 <dig>  data management  is fully automated: the required data subset is downloaded on demand only once and stored locally, reducing the load on both the client and server.

 <dig>  while sql interfaces are made available from both the ucsc and ensembl projects for their annotation databases, interpopula uses the same implementation strategy for the hapmap dataset: files are intelligently downloaded and locally stored. this provides a consistent interface to these two datasets which provide important annotation information frequently used to process hapmap data.

 <dig>  the framework is extensible and designed to be easily integrated with other python tools and external databases. the web site provides several examples of integration with standard tools used in python for bioinformatics such as biopython  <cit> , numpy  <cit>  and matplotlib  <cit> .

 <dig>  integration with biopython allows for access to the entrez snp database and the population genetics tools supported by biopython such as genepop  <cit>  allowing automated analysis of datasets.

 <dig>  facilities to export hapmap data to genepop format are provided enabling  analysis of the hapmap dataset with the plethora of population genetics software which support this format. data export can also be use to initialize population genetics simulators like the python-based simupop  <cit>  allowing computational simulations to be initialised with real datasets.

 <dig>  a large set of scripts is included, serving both as utilities to analyse the data, as well as examples of database and external tool integration. currently we provide examples of integration with entrez databases , the genepop population genetics suite and charting libraries.

 <dig>  a set of guidelines and scripts was developed in order to facilitate a consistent view across heterogeneous databases. hapmap, ensembl, ucsc known gene and the entrez databases might not be fully consistent among themselves and, if care is not taken, database integration efforts might lead to erroneous results. the main pitfall is the usage of different ncbi reference builds across different databases, most notably hapmap is still based on build  <dig> whereas other databases either support multiple builds or only the most recent build  <dig> 

 <dig>  a robust open-source software development process is put in place: a full public web based platform  is used to maintain the code infrastructure and unit tests approach 100% coverage.

RESULTS
interpopula can be used to create a wide range of applications and scripts based on the hapmap dataset. the most commonly expected usage pattern will be for genome wide association studies, though the example presented here will be of a different nature.

as an example of usage, we present a population comparison of all the genotyped snps for a gene. we will plot the fst statistic for all lactase snps between two hapmap populations: utah residents with northern and western european ancestry  and yoruban in ibadan, nigeria . these populations are known to differ in their tolerance to lactose  <cit> . this example uses genotype information from hapmap and also demonstrates the integration facilities with ucsc known genes , matplotlib , biopython and genepop .

this example, which is quite complex in terms of integration between several databases and tools can be broken down into the following steps:

 <dig>  load the known genes database. the version pertaining build  <dig> should be loaded to assure consistency with hapmap.

 <dig>  determine relevant information about lactase from known genes. the following information is needed: the chromosome on which it is located, the start and end positions in the chromosome and all exon positions.

 <dig>  load hapmap genotype information for the ceu and yri populations for the relevant chromosome.

 <dig>  retrieve all the hapmap snp ids between the start and end positions in the chromosome.

 <dig>  export a genepop formatted file with two populations including all hapmap snps for lactase.

 <dig>  call the genepop application via biopython to calculate the fst for all markers.

 <dig>  plot the calculated fsts along with the exon positions.

the result of this example is shown in figure  <dig>  the x-axis reports the position along chromosome  <dig>  fstin on the y-axis, the dots represent the fst values for existing snps on the hapmap database and the red boxes are the exon positions . interpreting the results of this specific application of interpopula is beyond the scope of this manuscript but at least two different interpretations are possible:  snps where fst is above approximately  <dig>  are candidates for positive selection  or  the fst statistic is noisy when applied to a single marker  <cit>  . the above example was constructed using the ucsc known genes database but the programmer can alternatively use the ensembl gene annotation database instead.

this example , along with more than  <dig> others including data export, connection to enterprise-grade databases, analysis of the distribution of the number of exons per gene, the distribution of genes per chromosome are made available with interpopula.

in order to illustrate interpopula’s basic api, figure  <dig> shows a commented script which provides useful functionality. in this example the hapmap frequency database is consulted to report the frequency of both alleles for each snp within a certain chromosome interval. the code example is less than one page in length and there are only  <dig> api calls to achieve the complete functionality. this is one case illustrating the ease of use of the api. all scripts provided with interpopula are documented to the level of the example presented and automated documentation covering the full api is extracted from the source using epydoc .

the part of the api devoted to both ucsc known genes and the ensembl gene annotation database can be used stand-alone to access both databases, i.e., it can be used for application and scripts that have no relationship with the hapmap data. interpopula’s ucsc and ensembl apis can be used to access also non-human data as genome annotations are available for other species. this is especially useful with the ensembl dataset as it makes available gene annotation information for many other species. users should note that the quality of the datasets for other species varies as more effort is put in the curation of human data . stand-alone example script examples are provided for both datasets.

future development efforts for interpopula will focus on supporting large datasets. as sequencing costs continue to decrease and the sequencing of complete genomes becomes commonplace it is clear that the backend infrastructure will have to be redesigned to support the large amounts of data generated by such efforts. in this context, supporting the  <dig> genomes project  <cit>  is a natural extension for interpopula as many of the samples used in this project come from the hapmap dataset. while the api for ucsc and ensembl extensions provides access to other species data, the main focus of interpopula will remain providing robust and well-maintained apis for publicly available human genomic datasets which lack a standardized python api or relational interface.

CONCLUSIONS
interpopula is a flexible, straightforward python api to the hapmap project. it strives to integrate with both common python bioinformatics and scientific libraries and other genomic databases that are commonly used in conjunction with the hapmap dataset. interpopula makes hapmap data processing possible inside python, thus opening the possibility for the development of a plethora of interesting applications and scripts that make use of this important resource for human population genomics studies.

list of abbreviations used
api - application programming interface; ceu - hapmap population sample comprising utah residents with northern and western european ancestry; cnv - copy number variation; snp - single nucleotide polymorphism; sql - structured query language; ucsc - university of california, santa cruz; yri -hapmap population sample comprising yoruban in ibadan, nigeria

competing interests
the author declares that he has no competing interests.

availability and requirements
project name interpopula

project home pagehttp://popgen.eu/soft/interpop/. development site: https://launchpad.net/interpopula

operating systems platform independent

programming language python

other requirements optionally numpy, biopython, genepop and matplotlib

license gnu gpl version 3

any restrictions to use by non-academics none

acknowledgments
ta was supported by research grants sfrh/bd/30834/ <dig> and ptdc/bia-bde/65625/ <dig> from fundação para a ciência e tecnologia , portugal.

i would like to thank the two anonymous reviewers for their comments and for pointing out important bugs related to data retrieval and support for multiple dataset versions in the hapmap core component of interpopula.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2010: proceedings of the 11th annual bioinformatics open source conference   <dig>  the full contents of the supplement are available online at http://www.biomedcentral.com/1471-2105/11?issue=s <dig> 
