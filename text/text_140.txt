BACKGROUND
the sequencing of genomes and metagenomes has become a standard technology in molecular biology. currently, over  <dig> sequenced genomes of bacterial and archaeal origin are publicly available  <cit> . initiatives such as the community sequencing program at the joint genome institute , the microbial genome sequencing project funded by the gordon and betty moore foundation, or collaborations with genoscope, enable researchers worldwide to get their genome or metagenome of interest easily sequenced. with the acceptance of a sequencing project, initial bioinformatic support is often granted through web-based systems, such as the integrated microbial genomes  system  <cit>  or magnifying genomes  <cit>  to give two examples. to cope with the flood of data generated by community sequencing projects such as the venter cruises  <cit> , the camera  consortium was recently established providing access to both the data and pre-computed information  <cit> .

standardised steps for data processing in genome analysis are highly appreciated for their ability to make results comparable and the processing transparent. nevertheless, after the first round of data mining using web-based annotation systems, specific requests by the biologists typically arise, which ask for alternative views of the data. to deal with such demands, full access to the tools and databases is required. this is best handled through the use of "rich clients", which take full advantage of the native facilities of the user's computer. making use of existing graphics hardware acceleration, rich clients can serve as graphical front-end to display complex and interactive visualisations  <cit> . one of the most popular, stable, flexible, and publicly available genome visualisation tools is artemis  <cit> . although, it can be extended for computations, it lacks a central storage system and is therefore, in most cases, only used as a viewer for genomic data.

a "state-of-the-art" infrastructure for genome analysis should be based on a relational database system that stores and organises assembled dna sequence data, gene predictions, results from automatic analysis, and manual annotations  <cit> . the analysis should integrate similarity searches against a variety of different data sources based on established algorithms to get a comprehensive overview of the available information for each gene and gene family. consistent data processing and storage is a prerequisite for flexible data analysis, which is essential when addressing specific requests of the biologists. project and user management is also necessary to organise data access on all levels . in  <dig>  the gendb system  <cit>  was released as an open source solution for high quality whole genome annotation. the system relies on a relational database system for back-end storage and takes advantage of grid technology for massive distributed computing. in addition to project and user management, gendb offers visualisation, annotation, and search capabilities via a web front-end. gendb has already been successfully used in many annotation projects  and adopted by the network of excellence "marine genomics europe"  <cit>  as their standard tool for genome analysis.

although equipped with an advanced backbone for data processing and storage, the available gendb web-visualisation and analysis capabilities were not able to cover all user-specific requests such as parallel analysis of several genomic sources or a sortable tabular representation of the gene content. further modules for the calculation of group-specific genes, cog statistics, advanced search functionalities, as well as gene grouping were continuously requested.

in order to address this issue, we developed jcoast, a comparative analysis and search tool for prokaryotic genomes. jcoast is a standalone tool that makes use of the standardised genome processing and storage system, gendb. jcoast offers individual and cross genome- and metagenome analysis by handling several projects simultaneously. it provides a graphical user interface , and an application programming interface , including a plug-in facility for user extensions. jcoast can also work on local databases following the gendb schema, independently of a full gendb installation. it is publicly available and can be easily installed using the java webstart technology. the low system requirements, especially when pre-computed databases are used, the very limited need for maintenance, combined with highly flexible data analysis options, leaves the biologists to concentrate on biological questions rather than solving computation problems.

implementation
jcoast is written in the platform-independent, object-oriented programming language, java  <cit> . it can be started using the java web start technology, which automatically downloads and installs the software locally. this ensures the user to always get access to the latest version available. alternatively, it can be downloaded and installed manually.

jcoast offers two entry points to access the genomic data and bioinformatic results:

i. the gui, which is implemented with the java-swing extension, swingx  <cit> . the gui provides all functions necessary to analyse, search, and manipulate genomic information, and includes dedicated modules for addressing e.g. group specific genes  or comparative statistics based on profile-hmms.

ii. the api, which provides object relational mapping to the underlying database and specific classes for advanced searches, data mining and statistics.

the jcoast source code is organised in:

i. the 'api' package, which contains all classes describing the core functionality;

ii. the 'gui' package, which contains all classes describing the graphical user interface and related inherited functionalities;

iii. the 'scripts' package, which contains ready to use methods for project maintenance, time consuming calculations , and specific data transfer methods, such as the export of the database in ncbi sequin format for genome data submissions.

by default, jcoast supports five bioinformatic tools: blast  <cit> , pfam  <cit> , interpro  <cit> , signalp  <cit> , and tmhmm  <cit> , and offers a direct access to the geographic-blast tool provided by megx.net  <cit> .

the current jcoast implementation relies on mysql  <dig>   <cit>  and a gendb  <dig>  compatible database schema. a detailed description of the gendb system can be found in meyer et al.,  <dig>  <cit> .

the following extensions to the gendb database schema are necessary to support all features offered by jcoast:

gene groups
jcoast offers assigning a set of genes into "gene groups". this allows visualisation and analysis of the genomic information across projects. in order to store gene groups in jcoast, the gendb database model needs to be extended by two tables, gene_group and gene_group_region. gene_group contains the description of the group, gene_groups_region contains the corresponding genes belonging to a defined gene_group.

codon offset
partial protein coding genes that result from missing start codons are common in draft- and metagenomic datasets. to handle this, the gendb database needs to be extended by the table region_cds_codon_offset. this ensures that the translation will always start on the first complete codon.

RESULTS
the graphical user interface 
the main window of jcoast is composed of six modules . the 'browser' module is the central component of jcoast, which is re-used by most other modules to display results. it is separated into three panels, the 'genome browser' on top, the 'table browser' in the middle, and the 'observation browser' at the bottom.

the 'genome browser' provides a graphical representation of genes on the genomic or metagenomic contigs under investigation. it is directly linked to the 'table browser' where the corresponding region is shown. the 'table browser' displays different types of regions , contig, trna and rrna) belonging to a project. where a project is defined as all contigs belonging to e.g. a single organism or a metagenomic sample. a button panel implements rapid switching between regions. the panel also offers the ability to extract sequence information for a single gene, region, or for a whole project, as either amino acids or nucleotides. for each cds entry, an 'annotation dialog' can be entered. this dialog allows annotation of the gene products, the ec numbers, gene names, and additional comments for each entry. all annotations are immediately stored and subsequently available for other annotators. with the history function of gendb all user changes are tracked. additionally, regions can be deleted via the panel. the 'observation browser' at the bottom displays the different similarity search results for a cds. depending on the selected tools, additional functions are available for each entry. for example, every similarity search result is referenced to its original entry in public repositories , if available. the public entry is shown in the standard browser of the host system.

for the similarity search results against genomesdb , preconfigured charts are available for visualisation. for example, the taxonomic distribution analysis of blast hits can be shown in a pie chart, ordered either by phylum, family, order, class, or species .

all tables have a common set of functions to enhance the usability:

i. an alphanumeric sorter for each column of the table.

ii. the column control button in the upper left corner of each table; this button enables the user to hide and unhide a column within the table.

iii. a panel for text search in order to search within the visible content of the tables.

the module 'statistics' includes three kinds of "on-the-fly" calculations based on:

i. cluster of orthologous groups of genes   <cit> , which counts the absolute number of genes belonging to one of the cog categories.

ii. pfam  <cit> , which counts the absolute occurrence of a defined pfam model in a project.

iii. project content, which calculates statistics about the number of cds, contigs, trnas, rrnas, nucleotide usage and coding percentage.

the 'text search' module has been designed for string and regular expression searches in annotations, comments, gene names, ec numbers . within the complex set of similarity search results ; the search is filtered by applying an e-value cutoff. the results view makes use of the main browser panel and displays matching regions as subsets.

the 'pfam search' module allows searching within pfam models by applying an e-value cutoff. this allows, for instance, consistent cross genome comparisons. the results can be displayed as a subset of regions or as a graphical output of all pfam models of each cds .

the 'group-specific genes'  module was designed to enable the researcher to search for genes with a limited occurrence in a given taxonomic group or any group defined by the user. this module is based on the custom database, genomesdb . each cds of a reference genome is tested for group-specificity by looking at the observations produced by similarity searches on the protein level against the custom database, genomesdb. by definition, a gsg shows significant similarity only to genes in the same taxonomic unit. therefore, an e-value cutoff was implemented to evaluate significance. to be group-specific, a cds must have at least one "in-taxon" observation and no "out-of-taxon" observations below the defined threshold. self-hits are filtered out and can be adjust within the preferences.

the 'genomesdb' database
genomesdb is a custom designed relational database, which includes a java interface for maintenance. it is build from the proteome fasta files obtained by the ncbi reference sequences database  for all fully sequenced bacterial and archaeal genomes . each genome, chromosome, and protein in the database is tagged with a unique internal numerical identifier. in addition, taxonomic and contextual information are parsed from ncbi entrez genome project database. for every entry, taxonomic information is collected for the corresponding kingdom, phylum, class, order, family, genus and species. further contextual data available pertain to genome size, guanine-cytosine content, gram staining, shape, arrangement, endospores formation, motility, salinity, oxygen, habitat and temperature range. genomes of interest can be selected for export via the interface, including the protein sequences as a multiple sequence fasta file.

in contrast to the general-purpose database ncbi-nr, the focus of genomesdb is to provide manually curated phylogenetic affiliations, plus as much additional contextual information as possible. the database is used by jcoast to determine gsgs and to calculate distribution charts of selected properties. the current version of genomesdb can be downloaded from the jcoast homepage.

web-service: geographic-blast
to allow researchers to systematically study the geographic distribution of particular genes in the environment, a click on the 'geographic blast' button in jcoast starts a remote blast search of the database for marine ecological genomix   <cit>  for a selected gene. the results are shown on the genomes mapserver, which integrates sequence data with contextual information, such as physical, chemical, and biological data based on geography. in addition to the geographical distribution of particular genes, statistics are provided pertaining to the presence/absence and abundance of the gene of interest with respect to sampling sites and environmental conditions.

the application programming interface 
the jcoast core api comprises strictly defined objects of all the important gendb database tables. all sequence related features, such as contigs or cds definitions, annotations, and bioinformatic tool results are encoded within these java objects. the core api also contains the complete sql code, which is required to communicate with the database. the building of all required java objects has been merged into a single class. this encapsulation renders jcoast flexible, making it possible to work on data sources other than gendb. the jcoast core api is used extensively by the graphical user interface and the 'scripts' package, which is included in the jcoast source code. the classes within this package deliver an easy to use environment, mainly designed for users with little java programming experience that want to use jcoast to address complex biological questions. the 'scripts' package includes template classes, which manage the database communication and user identification issues for the user. it also includes ready to use classes for maintaining projects, exporting data, and performing statistical calculations. many of these classes are able to store the results directly in the database as 'genegroups' for subsequent evaluation of the results using the jcoast gui.

case studies
jcoast has already been extensively used and evaluated in recently published comparative genomic and metagenomic projects.

in the field of genomics, jcoast was used to analyse the finished genome of the marine bacteroidetes gramella forsetii  <cit>  in the context of  <dig> other bacteroidetes draft sequences provided by the moore foundation. extensive analysis was successfully performed on the draft genome of magnetospirillum gryphiswaldense strain msr- <dig> for comparison with three other draft genomes of magnetotactic bacteria  <cit> . aside from standard annotation support in both projects, detailed statistical analysis of the presence/absence and abundance of specific pfam profiles in the genomes was performed to identify specialisation and niche adaptation of the organisms. cross-comparisons of all genes within the phenotypic group of magnetotactic bacteria revealed a set of group specific genes that are now the subject of targeted lab experiments. the implementation of the group specific genes module, in combination with the genomesdb database, proved extremely helpful by significantly accelerating the transition from in silico predictions to lab work. furthermore, the system was used to assist in the annotation and ongoing comparative analysis of congregibacter forsetii kt  <dig>  <cit> .

in the field of metagenomics, a prototype of the software was used to analyse and compare  <dig> mb of dna on  <dig> scaffolds  the symbiotic community of the marine oligochaete, olavius sp., sequenced by a community shot-gun approach  <cit> , as well as  <dig> mb of dna on  <dig>  scaffolds from single filaments of beggiatoa sp. determined by combined genome amplification and pyro- and sanger sequencing  <cit> . both projects had a challenging and heterogeneous set of short to medium sized dna scaffolds and contigs that needed to be analysed. the marginally low quality of the data was problematic, and led to the development of the codon offset table to cope with partial genes. moreover, jcoast is currently used to analyse fosmid-sized clone libraries from different marine sampling sites.

in all projects, the system was able to assist the biologists to generate results faster by providing custom-tailored solutions. on the other hand, close connection to the users provided valuable feedback for software enhancements.

discussion
many data mining, annotation, and visualisation systems have been developed over the last years, each with their advantages and disadvantages, for a review see  <cit> . in addition, several stand-alone tools have been introduced, which rely on object-oriented programming languages . they have been designed to facilitate the exploration and analysis of highly specific datasets. moreover, they are user-friendly and offer simple installation procedures. a shift from process to object oriented programming languages is a current trend in biologist-centric software development.

the jcoast software tool offers the unique combination of a standardised, open source relational database system in the back-end and a user-oriented rich-client in a lightweight, stand-alone solution. the common usage of the gendb system in academia and industry has made it easy to find a collaboration partner providing initial data processing and database access. the company ribocon gmbh already offers custom tailored genome analysis in gendb/jcoast format on a commercial basis  <cit> .

the possibility to run jcoast locally with either on site or remote access to pre-computed databases frees the biologist from the need to acquire specialised knowledge about how to install and maintain complex annotation pipelines, while taking advantage of an advanced database structure and a tightly-linked graphical user interface. as a result, the biologists can focus on their research with no or minimal programming efforts.

with the advent of next generation sequencing technologies even independent working groups or individual researchers can get easy access to genomic sequence data. in such a case, researchers often go for specific genes of interest in a defined set of genomes or metagenomes, rather than to perform a time-consuming comprehensive annotation of an entire genome. therefore, easy to use and flexible data mining software systems will most likely be favored over complex annotation systems. biologist-centric software tools such as jcoast facilitate these tasks by providing components with sophisticated bioinformatic functionalities without prior programming knowledge of the biologist  <cit> .

furthermore, the handling of sensitive data, as it is often the case in commercial applications, demands for locally installed software systems. nevertheless, there is no doubt that the analysis of thousands of genes and large scale comparisons with published data is not trivial and will always require an appropriate cyberinfrastructure.

currently, jcoast is primarily used for the analysis of prokaryotic genome data. in general, the gendb system supports the analysis of eukaryotic data as well, but handling the additional information for such projects is not implemented in jcoast at the moment. several extensions are planned for the future, e.g. including an importer allowing the user to import standardised sequence description files which currently can only be done using the import capabilities of the gendb backbone. a project and user management system will be necessary to enhance usability in this respect. common genome linguistic methods , data quality checks for 454/solexa  <cit>  sequences and further incorporation of contextual data standards are envisioned.

CONCLUSIONS
jcoast is a biologist-oriented graphical software tool that provides a powerful api to manipulate and data mine genomic information and bioinformatic results using the java object-oriented programming language. the gui is able to handle large metagenomes, as well as minimally assembled single genome projects. it provides a full-featured genome browser and sophisticated statistical and search functionalities. jcoast is developed as an extension to the gendb back-end, but can also be used as standalone software. pre-computed databases can be gained through an academic collaboration or by a dedicated service company  <cit> . this lightweight software solution allows the biologist to concentrate on transforming genomic data into biological knowledge with minimal programming experience. jcoast has been successfully applied to several genome and metagenome projects and has proven to be both stable and easy to use. the jcoast software tool is publicly available from the project website via java webstart or as a kubuntu  <cit>  jcoast-livecd. the source code is available upon request from the authors.

availability and requirements
- project name: jcoast – comparative analysis and search tool

- project homepage: 

- operating systems: linux and windows

- programming language: java jre  <dig>  or higher

- other requirements: pre-computed gendb v <dig>  mysql database

- license: gnu general public license version  <dig> 

authors' contributions
mr designed and implemented most of the api and gui. tl implemented the core search functionalities of the api and gui. ik implemented the extraction of group-specific genes and helped with genomesdb. rk gave expert advises for programming design and code optimisation. mbd contributed necessary classes for the calculation of statistics of large data sets and helped with the website. jp tested the gui and helped to improve it. fog supervised the work and helped with writing the manuscript.

