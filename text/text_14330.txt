BACKGROUND
the origin and universality of the genetic code is one of the biggest enigmas in biology  <cit> . soon after the genetic code of escherichia coli was deciphered  <cit> , it was realized that this specific code out of more than  <dig> possible codes is shared by all studied life forms . the question of how this specific code appeared and which physical or chemical constraints and evolutionary forces have shaped its highly non-random codon assignment is subject of an intense debate. in particular, the feature that codons differing by a single nucleotide usually code for either the same or a chemically very similar amino acid and the associated block structure of the assignments is thought to be a necessary condition for the robustness of the genetic code both against mutations as well as against errors in translation  <cit> . this robustness reduces fitness losses due to mutation and mistranslation, which is believed to be a major force in coding sequence evolution  <cit> . there are three basic theories of the genetic code's nature, origin, and evolution. whereas the stereochemical theory first proposed by gamow  <cit>  asserts that the codon assignment was originated by the physicochemical affinity between the amino acid and the codon or anticodon, the adaptive theory posits that the genetic code was shaped under selection for robustness, either against mutations  <cit>  or against translation errors  <cit> , or against both  <cit> ; finally, the coevolution theory postulates that the structure of the genetic code reflects the pathways of amino acid biosynthesis  <cit> .

in this work, we address an issue that has received somewhat less attention in this broader context, namely the existing variants of the standard genetic code. these variants are used for instance in the mitochondria of many species, and they consist in the modification of one or several codons of the standard genetic code. two main mechanisms have been proposed to explain how they may have evolved despite the large fitness cost that is expected to be associated with the modification of a codon  <cit> : through an ambiguous intermediate state and through the reassignment of a temporarily unused codon. these mechanisms are not mutually exclusive. the first one assumes that a codon is temporarily recognized both by the current as well as by a mutated trna, so that it can result in two different amino acids. such ambiguity might be preferential in some circumstances and remain present for some time. a codon reassignment occurs if the mutated trna finally takes over. the second scenario takes place if one codon disappears from a given genome. this is particularly likely in small genomes with large guanine/cytosine  or adenine/thymine  content, as it is the case for many mitochondrial genomes and nuclear genomes of parasitic microbes. in this case the translation system may change without any cost, and the codon may be 'conquered' by another amino acid. both scenarios consider that alternative genetic codes are the result of non-adaptive or neutral evolution, even though 'genomic streamlining'  has been proposed as a possible advantage of code changes  <cit> . however, it has not been addressed whether these variants differ from the standard genetic code as far as mutation and translation loads are concerned.

here, we use computer simulations of neutral protein evolution constrained to maintain the folding and misfolding stability of the native state in order to study the differences between the standard genetic code and seven naturally occurring variants concerning their effects on protein stability. these effects are predicted using a simplified model of protein folding  <cit> , the same that we consistently use in the evolutionary simulations  <cit> . despite its simplicity, this model is able to predict with similar accuracy as other more complicated models the effects of mutations on folding stability. due to our simplifying assumption to consider a neutral model, the different genetic codes hardly have any influence on the average unfolding and misfolding stabilities. however, alternative codes yield significantly different mutation and translation loads, in particular for genomes evolving under strong at or gc mutation bias.

RESULTS
in this work, we study how the genetic code influences the fitness consequences of errors  during mutation and translation. this influence may arise because of two mechanisms:  directly, through the change in the rate of occurrence of different amino acid misincorporations in the translated protein;  indirectly, through the evolutionary influence that the genetic code may have on protein stability. we simulated our previously proposed model of protein evolution in order to study this indirect influence as well.

model
our model of protein evolution has been presented in previous works  <cit> , and it is similar to models used by others  <cit> . it has been successfully used to explain non-poissonian rates in neutral evolution  <cit>  and the observed site-specific amino acid distributions  <cit> , to name two examples. it considers a genetically homogeneous population, i.e. the product of the population size n and the mutation rate μ is assumed to be small. the assumption of a small mutation rate μ is justified when considering an individual protein, but not an entire genome. if we considered a whole evolving genome instead of a single protein, the approximation of very small mutation rate would not be justified, since genomic mutation rates are in a range of  <dig>  to  <dig>  mutations per genome per generation for dna-based microbes, including viruses, bacteria, and eukaryotes  <cit> . in this context, a new interesting effect has to be considered, namely the hitch-hiking effect, which consists in the fixation of mildly disfavorable alleles driven by a positively selected allele present in the same chromosome. however, considering the hitch-hiking effect would make the study much more complicated, and we leave it as a subsequent step. in our model, the fitness of an individual carrying a particular gene depends only on the folding properties of the translated protein, which are estimated through a simple protein folding model. a characteristic of our model that distinguishes it from similar ones is that we consider two types of stability, with respect to misfolding and with respect to unfolding. they are calculated by estimating the normalized energy gap α and the folding free energy f, respectively. misfolding stability is measured through α and unfolding stability is measured through -f, which are computed for each protein sequence a encountered in the simulated evolution. the protein structure is assumed to have been already optimized by natural selection and is kept fixed throughout evolution, as represented by the experimental structure found in the protein data bank  . if the folding stability is too small, the protein will not be stable in its native state; if the misfolding stability is too small, misfolded structures can trap the folding process, and they can expose hydrophobic patches and promote aggregation. in the spirit of kimura's neutral theory of molecular evolution  <cit> , we assume that mutations are either neutral or strongly deleterious. more specifically, all proteins having both unfolding and misfolding stabilities above previously fixed thresholds are regarded as viable and they are assigned the same fitness ℱ =  <dig>  and all proteins for which at least one of the stabilities is below threshold are regarded as unviable and they are assigned fitness ℱ =  <dig>  mutations to stop codons are considered lethal and receive a fitness ℱ =  <dig>  the two neutral thresholds αthr and fthr are chosen proportional to the values of αnat and fnat of the respective protein in the pdb, multiplied with coefficients slightly smaller than one so that the native protein is above threshold. we present results with both coefficients equal to  <dig> , but our results are robust to changing this prefactor in a reasonable range. note that fitness functions depending continuously on stabilities can be considered, but the resulting non-neutral evolutionary dynamics is significantly more complex due to population size effects  <cit> . neutrality of the fitness landscape is assumed here for the sake of simplicity, since otherwise the model would depend on at least two additional parameters, i.e. the smoothness of the fitness landscape and the effective size of the population, making it very difficult to reach clear conclusions about the effect of the genetic code and the mutation bias.

another important ingredient of our model is the mutation model at the dna level. we parameterize the mutation model with a single parameter, the at bias, which represents the equilibrium content of adenine and thymine after a very long evolution under mutation alone . the mutation bias strongly affects the substitution process , biasing the amino acid composition of the protein. interestingly, the mutation bias also influences the folding properties of the evolving proteins  <cit> . in fact, at rich codons code for amino acids which are more hydrophobic and the resulting proteins tend to be more stable against unfolding  but less stable against misfolding , whereas the contrary holds in case of gc bias. this bias at the mutation level produces a bias at the substitution level, both for neutral fitness landscapes  <cit>  and for smooth fitness landscapes  <cit> , such that proteins evolving under higher at bias will be comparatively more stable against unfolding but less stable against misfolding. finally, in order to fully specify the mutation model, we have to fix the transition-to-transversion ratio k. since transitions  tend to conserve the physiochemical properties of the coded amino acid more than transversions , a high transition-to-transversion ratio k usually reduces the mutation load. we used two values of k, k =  <dig>  which is suitable for most nuclear sequences  <cit>  and a kind of standard value in molecular evolution simulations, and k =  <dig>  a maximal value that has been observed in some mitochondrial genomes  <cit> . to study the influence of the mutation process, we simulate the evolution of dna sequences under nine different mutation biases with both transition-to-transversion ratios k =  <dig> and k =  <dig>  our model of protein evolution cannot be treated analytically, so that we have to study it using numerical simulations . point mutations change the dna sequence  and they are accepted if the resulting amino acid sequence, translated from the dna sequence using the genetic code under consideration, is viable, i.e. both stabilities are above threshold. we simulated the evolution of three different proteins of similar lengths and different secondary structure compositions,  the epsilon subunit of f1f0-atp synthase ,  the acyl carrier protein , and  the cold-shock protein , see methods for details. we start each simulation with the native amino acid sequence as obtained from the pdb of the chosen structure, from which we construct a corresponding 'native' dna sequence by randomly choosing codons using the genetic code under consideration with weights determined by the given at content . the influence of this starting sequence is lost after a relatively short evolutionary trajectory needed for equilibration, after which a stationary situation is reached, in which both stabilities fluctuate around constant values. statistics is taken only in this stationary state. we compare the standard genetic code with seven naturally occurring variants, see fig.  <dig>  out of these seven variants, five are used in mitochondria of many species, and two variants are used by certain species in their nuclear protein production. these variants differ in between one to six codon assignments, and display between one to four stop codons instead of the three stop codons of the standard code, cf. fig.  <dig>  we follow the naming scheme of the ncbi database http://www.ncbi.nlm.nih.gov/taxonomy/utils/wprintgc.cgi, including the transl_table numbering). to ease the assessment of our results, we use a consistent color scheme in this work, in which the standard genetic code is shown in black, whereas the naturally occurring variants are color coded according to the following scheme:

 <dig> blue: 'the echinoderm and flatworm mitochondrial code'   <cit> ; taxonomic range: asterozoa , echinozoa , rhabditophora among the platyhelminthes.

 <dig> orange: 'the invertebrate mitochondrial code'   <cit> ; taxonomic range: nematoda: ascaris, caenorhabditis; mollusca: bivalvia; polyplacophora. arthropoda/crustacea: artemia; arthropoda/insecta: drosophila; locusta migratoria , apis mellifera .

 <dig> magenta: 'the ascidian mitochondrial code'   <cit> . taxonomic range: urochordata: tunicates.

 <dig> green: 'the vertebrate mitochondrial code'   <cit> ; taxonomic range: vertebrata.

 <dig> cyan: 'the yeast mitochondrial code'   <cit> ; taxonomic range: saccharomyces cerevisiae, candida glabrata, hansenula saturnus, and kluyveromyces thermotolerans.

 <dig> yellow: 'the ciliate, dasycladacean and hexamita nuclear code'   <cit> . taxonomic range: ciliata: oxytricha and stylonychia, paramecium, tetrahymena, oxytrichidae and probably glaucoma chattoni. dasycladaceae: acetabularia and batophora. diplomonadida: hexamita inflata, diplomonadida atcc <dig> and atcc <dig> 

 <dig> red: 'the alternative yeast nuclear code'   <cit> . taxonomic range: endomycetales : candida albicans, candida cylindracea, candida melibiosica, candida parapsilosis, and candida rugosa  code).

unfolding and misfolding stabilities
we first study the direct effect of the eight different genetic codes on the average unfolding and misfolding stabilities . since we chose a neutral fitness landscape where mutations are either neutral or lethal, we expect that, independent of the mutation rate and the genetic code, the two folding stabilities will be close to the neutral thresholds, i.e. the minimum allowed stability values, which correspond to the maximum number of sequences, while larger stabilities correspond to many fewer sequences. however, large at content  favors unfolding stability at the expense of misfolding stability, whereas small at content  favors misfolding stability at the expense of unfolding stability. consequently, for large at content selection mainly acts on misfolding stability, which is expected to be closer to the neutral threshold, whereas unfolding stability is easily obtained and it is above the threshold. conversely, for small at content selection mainly acts on unfolding stability, which is expected to be close to its neutral threshold. in general, the smaller of the two stabilities is very close to the neutral threshold and almost independent of the genetic code, whereas the stability favored by the mutation process is above the neutral threshold, although this does not imply any gain in fitness, and it may depend on the genetic code and the mutation bias.

the behavior of the average unfolding stability -f for different genetic codes  is exemplified using the epsilon subunit of f1f0-atp synthase  and the transition-to-transversion ratio k =  <dig>  see fig.  <dig>  the transition-to-transversion ratio k does not affect the results significantly, so that we omit the results for k =  <dig>  as expected, there is hardly any influence of the genetic code on the average unfolding stability, except for extremely large at biases  where unfolding stability is well above threshold and selection mainly acts on misfolding stability. in such cases, most alternative genetic codes display a smaller unfolding stability than the standard code , but there are two exceptions, the 'echinoderm and flatworm mitochondrial code'  and the 'alternative yeast nuclear code' , which have slightly better unfolding stability than the standard code, even though the difference is minor and it does not imply any difference in fitness. the two other proteins we studied show a similar behavior .

the behavior of the average misfolding stability α for the eight different genetic codes is likewise exemplified using the epsilon subunit of f1f0-atp synthase  and the transition-to-transversion ratio k =  <dig>  see fig.  <dig>  again, no significant difference can be noticed between transition-to-transversion ratio k =  <dig> and k =  <dig>  so that we omit the latter. there is hardly any influence of the genetic code on the misfolding stability, significant differences are found only for very small at content  at which misfolding stability is easily obtained. for such small at content, most alternative genetic codes display an essentially identical unfolding stability, but there are two exceptions, the 'yeast mitochondrial code'  and the 'alternative yeast nuclear code' , which yield larger misfolding stability than the standard code, even though the difference is minor. the two other proteins we studied show a similar behavior .

we see from the two figures that the genetic code may influence the balance between unfolding and misfolding stability. for instance, the 'yeast mitochondrial code'  yields systematically lower stability against unfolding  when compared with other codes, and higher stability against misfolding at low at, which is an effect similar to the one obtained by decreasing the at content. nevertheless, these differences are not relevant, since they are buffered at the level of fitness. in fact, we assume a neutral model in which the fitness is either ℱ =  <dig> or ℱ =  <dig> , so that differences in stability do not yield differences in fitness. moreover, notice that the difference of, say, stability against unfolding between different codes is only significant at an at content at which this stability is anyway high, i.e. it is far from the neutral threshold, so that the selective pressure mainly affects stability against misfolding. these differences might become relevant in a non-neutral fitness landscape where fitness depends smoothly on stability  <cit> .

mutation and translation load
next, we study the effect of the different genetic codes on mutation and translation loads . these represent the fitness loss due to mutations and translation errors. the two loads differ by the rate at which a given error occurs and by the treatment of stop codons: in the case of mutation load, the rate of a mutation is given by the mutation process we use, which includes both the mutation bias and the transition-to-transversion ratio; mutations to stop codons are equivalent to mutations to sense codons as far as the chemical modification of the dna sequence is concerned and hence included into the definition of the corresponding load  in methods), and the associated fitness is zero. in the case of translation load, all mistranslation to sense codons are assigned equal rate. since a premature end of translation by misinterpreting a sense codon as a stop codon is caused by release factors and not by trnas  which furthermore involves neighboring codons  <cit> , for simplicity, we consider its error rate much smaller than the rate of missense errors in translation, and we neglect mistranslations to stop codons. in this way, the translation load is not explicitly influenced by the number of stop codons in the genetic code under consideration  in methods).

the average mutation load lmut for different genetic codes is exemplified using the three proteins described above, see fig.  <dig>  the left panels refer to transition-to-transversion ratio k =  <dig>  while the right panels refer to k =  <dig>  and the three rows refer to the three proteins. a large transition-to-transversion ratio usually yields smaller mutation loads, except for very small at content  for which k =  <dig> increases the load considerably. in contrast to the unfolding and misfolding stabilities, different genetic codes show different mutation loads. this is in part due to the different form in which selection acts on stabilities and on loads in our model. whereas unfolding and misfolding stabilities are strictly constrained in the fitness landscape of neutral or lethal mutations that we modelled, we assume that loads are not explicitly targeted by selection and are free to vary. most of the alternative genetic codes display mutation loads larger than for the standard code. nevertheless, some yield consistently smaller mutation loads in some range of mutation bias. for instance, the 'yeast mitochondrial code'  yields a smaller mutation load for very small at content , although it has a rather large load for large at content which is characteristic of mitochondria genomes of yeast . two alternative genetic codes, the 'ciliate, dasycladacean and hexamita nuclear code  and the 'echinoderm and flatworm mitochondrial code' , display a smaller mutation load for large at content.

the behavior of the average translation load ltrans for different genetic codes is likewise exemplified using the three proteins, see fig.  <dig>  again, the left panels refer to transition-to-transversion ratio k =  <dig>  while the right panels refer to k =  <dig>  and the three rows refer to the three proteins. the different genetic codes show significantly different translation loads, and even different dependences on the mutation bias . notice that the dependence of the translation load on the bias is not due to how the error rates depend on the bias, as in the case of the mutation load, but it is due to how the mutation bias influences protein stabilities. most alternative genetic codes yield a larger translation load than the standard code. nevertheless, the 'yeast mitochondrial code'  yields a smaller translation load for very small at content , but this result does not hold for very large transition-to-transversion ratio and large at content, both being characteristic of mitochondria genomes of yeast. one alternative genetic code, the 'echinoderm and flatworm mitochondrial code' , results in a smaller translation load for most mutation biases, in particular for large ones, and independent of the transition-to-transversion ratio, and is hence preferential to the standard genetic code.

it is interesting to note that there seems not to be any trivial dependence of the average mutation load on the number of stop codons in the genetic code. since the mutation load is calculated including mutations to stop codons, one would expect genetic codes containing more stop codons to have a larger mutation load than genetic codes containing fewer stop codons. this is, however, not the case, as one sees in fig.  <dig> by comparing the 'echinoderm and flatworm mitochondrial code'  and the 'yeast mitochondrial code' , which both have two stop codons, with the standard genetic code, which has three stop codons. additionally, as our definition of translation load excludes mistranslations corresponding to stop codons , the lower translation load of the 'echinoderm and flatworm mitochondrial code'  in comparison to the standard genetic code seen in fig.  <dig> is not trivially due to the fact that this alternative genetic code has two instead of three stop codons.

assumptions and empirical observations
like all mathematical models of evolution, our model depends on several assumptions and parameters. an important assumption is that the population is genetically homogeneous, i.e. the product nμ of population size times mutation rate is small. this assumption is considered approximately valid for eukaryotic and bacterial populations when considering an individual protein, in particular if population size is small. strict validity of this assumption would imply that the number of different alleles at a typical locus is not larger than two. despite that this is not the case, the number of alleles at a typical locus is usually small, so that the assumption is at least approximately valid. the high mutation rates of rna viruses violate this assumption, and in this case recent work  <cit>  has shown that even the neutral model should be re-formulated in the framework of the quasi species theory  <cit> . if we considered a whole evolving genome instead of a single protein, the approximation of very small mutation rate would not be justified, and a new interesting effect has to be considered, namely the hitch-hiking effect, which consists in the fixation of mildly disfavorable alleles driven by a positively selected allele present in the same chromosome. the mutation process was modelled using two parameters, the mutation bias and the transition-to-transversion ratio. while this parameterization might appear too simplified, it has the merit to focus on two variables whose relevance has been pointed out by a large number of experimental studies, statistical analysis, and models.

as evolutionary model, we adopt a model in spirit kimura's neutral theory of molecular evolution  <cit> , in which mutations are either neutral or lethal. the assumption of neutrality prevents us to study how the genetic code affects the fitness that can be achieved in evolution , however it allows to study its influence on the mutation and translation load without any further assumptions concerning the shape of the fitness landscape. whether a mutation is neutral or lethal is decided based on unfolding and misfolding stabilities of the resulting amino acid sequence.

the ingredient of our model that seems more debatable is the genotype to phenotype mapping, which is based on predicted unfolding and misfolding stabilities. while we do not claim that our predictions are accurate in individual cases, our experience suggests that they are statistically correct, so that they are able to discover statistical trends, which is what we address here. however, a limitation of our approach consists in that the mitochondrial proteome mainly contains membrane proteins, whereas our predictions of unfolding and misfolding stabilities are only valid for soluble  proteins, hence implying caution about the interpretation of the deleterious effect of mitochondrial codes. besides of that, we note that the statistical potentials that we use here are quite general, as they have been optimized based on all soluble globular proteins in the protein data bank, and they are not limited to a particular organism or protein family. an alternative way to derive empirical potentials for protein evolution consists in fitting the potentials to maximize the likelihood of the observed sequences, which provides an improved fit in an evolutionary context  <cit> .

another important point concerns the choice of the neutral thresholds αthr and fthr.we have tested in previous studies that changing the neutral thresholds within reasonable limits  does not significantly affect the results of neutral simulations  <cit> .

furthermore, we assume in our model that all synonymous mutations that do not change the amino acid sequence are neutral. nevertheless, it is known that the use of alternative codons has important phenotypic effects on the translation dynamics  <cit> , and it can affect the rate of translation errors  <cit> . modelling these effects, however, would require assumptions on the abundance of different trna molecules and the dynamics of the ribosome that are outside the scope of our model. therefore, selection on optimal codon usage is a way to reduce the load due to translation error that is complementary to the influence of the genetic code that we investigate here.

finally, an interesting empirical observation that might be related with our protein evolution model is the finding that long genes tend to have lower codon usage bias  <cit> . one of us previously observed that longer proteins have contact interaction energies that are less optimized than for shorter proteins. this finding has a simple neutral explanation, since the number of contact interaction per protein is larger in longer proteins, whereas the conformation entropy loss per residue that these interactions have to compensate does not depend on protein length  <cit> . therefore, contact interactions are subject to weaker selective constraints in long proteins. if this is true, and if the selective forces on codon bias are mainly due to the advantage of reducing folding problems in mistranslated proteins, which is now considered the prevailing view  <cit> , one would expect that the selective forces on codon bias are also reduced for longer proteins, consistent with the empirical observation by duret and mouchiroud  <cit> . this subject may be addressed in the framework of an improved model in which fitness takes into account both the two protein folding stabilities and the translation load.

CONCLUSIONS
our results show that the standard genetic code is generally preferable to naturally occurring variants, in the sense that it typically yields smaller mutation and translation loads. this finding is consistent with the view that the standard genetic code is well adapted for reducing the consequences of translation errors on protein folding stability, as expected in the framework of the adaptive theory on the origin of the genetic code, and that the fixation of alternative genetic codes is either a slightly deleterious event that is mutationally driven or, if it brings some selective advantage, this is through the reduction of the number of trna needed.

nevertheless, we found one alternative genetic code  that seems to be better at reducing mutation and translation loads, and particularly yields better translation load except for very small at content . as translation load is a very important constraint in protein evolution  <cit> , this difference might result in small but significant fitness differences and hence be subject to positive selection. therefore, although our model confirms the view that code changes are slightly deleterious events in the majority of the cases, it also suggests that adaptation cannot be excluded for one of the studied cases.

