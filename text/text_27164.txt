BACKGROUND
today, many genetics laboratories have access to modern capillary dna sequencing machines, such as the abi prism  <dig>   <dig> or  <dig>  these machines generate vast amounts of raw sequence data with little user intervention. consequently, the amount of data to be analyzed has expanded and the bottleneck now is the analysis capacity. data analysis capacity can be increased by higher levels of automation. investments in infrastructures to process the raw sequencing data in sophisticated but rigid pipelines might be justified for larger laboratories and larger projects but might be too costly for smaller laboratories. in addition, rigid pipelines are too impractical if different projects share run-time on the same machine while requiring  different analysis procedures .

nucleotide sequence analysis can be performed with a variety of software tools. although the number of console and web-based software tools has grown rapidly, the routine use of data input, output and storage may be inconvenient. furthermore, for performing a series of analyses with different software tools, the sequence data need to be reformatted to the required data structure. alternatively, sophisticated software suites that provide an integrated environment often are expensive.

several of the available software solutions are designed to facilitate automated dna sequence analysis at low cost. well-known solutions are the staden package and bioperl.

the staden package contains pregap <dig> and gap <dig>  full-featured applications with an intuitive graphical user interface  <cit> . these programs handle a list of raw sequence reads method-by-method. the programs in the staden package typically require a degree of user intervention and thus hands-on time.

alternatively, bioperl is a group of perl modules describing many genetics and genomics concepts  <cit> . for example, it includes the bio::seq::seqwithquality object that provides some of the basic properties of a raw sequence ; the bio::tools::primer <dig> object provides methods to work with primer <dig> input and output. however, to build custom dna sequencing data pipelines, basic programming skills are needed to combine all these modules.

smaller laboratory sites, however, often need to implement versatile pipelines that can be adjusted for any research question that suits the project best; at the same time, they often also do not have dedicated programmers available.

although automated procedures have been published by other groups  <cit> , these are mostly focused on one particular pipeline and environment.

here, we present posa, a set of two new perl objects  that describe a raw sequence and a phrap contig in detail and are easily implemented in perl-based pipelines. because these objects provide building blocks for sequencing data analysis pipelines and the actual pipelines are built using perl-scripts, the posa objects can be used in very diverse settings.

implementation
the posa source code is entirely coded in object-oriented perl and consists of two objects: read.pm and contig.pm. in general, there are two important concepts associated with objects: methods  and properties . most methods in the objects rely on the availability of other third-party programs . basically, posa provides a wrapper around these programs and provides easy design and implementation of these programs in automated data analysis. the read.pm object describes a dna sequence trace and includes methods for data import from a variety of formats. it relies on phred  <cit>  for import and interpretation of raw sequence data. the original trace data are stored in binary  format within the object. other methods of read.pm use modules of the staden package  <cit> , such as qclip and vector_clip . properties of read.pm include e.g. the dna sequence, quality scores, template and vector names and read direction.

the contig.pm object contains a method to assemble contigs of reads using the phrap program  <cit> . the object typically is created based on a list of read.pm objects and can be exported as alignments or screened for polymorphisms using polyphred  <cit> .

both the read.pm and contig.pm objects were designed with flexibility in mind. to allow a  unlimited amount of data to be processed, the perl scripts using these objects work sequence-by-sequence rather than method-by-method. typically, these objects are called from straightforward perl scripts that outline the analysis steps to be performed. example scripts using the objects can be accessed from the download website. an example of a script and output using the two objects to process a set of reads and annotate sequence polymorphisms from the assembled contig is given in figure  <dig> and figure  <dig> 

posa was developed with perl  <dig> . <dig> and tested on a suse linux  <dig>  system for abi-files from the abi prism  <dig> dna sequencer and  <dig> genetic analyzer . phred, phrap and polyphred versions were  <dig> .c,  <dig>  and  <dig> , respectively.

RESULTS
functionality
posa provides an interface to design and implement automated sequencing data analysis. sequencing data may be used in a variety of formats and originate from a variety of sources, e.g. data in fasta, abi/ab <dig> or scf format retrieved from websites or from newly generated traces. in addition, new objects can be initiated from a text file or can be opened from previous stored objects. subsequently, a variety of methods can be applied, including basecalling and assessment of quality codes , quality clipping, vector clipping, screening for e. coli  sequence, contig assembly  and analysis. the method asprimer <dig> can automatically generate input for the primer <dig> program  <cit>  and is available in both objects. to facilitate automated snp discovery or typing, the searchsnps method will generate output as shown in figure  <dig>  this method is based on the polyphred program and uses the 'rank' argument to set the stringency.

finally, data can be stored in objects, or in files in either exp, scf or fasta format. in addition, the data can be saved in a primer <dig> input file to allow automated pcr primer design, or data can be saved in mipe format . data on assembled contigs can be exported as a list of reads in a contig, as consensus sequence, as alignment, as putative snps, as sbe primers for snp genotyping or as gff file for visualization in gbrowse  <cit> . combinations of the diversity of input, analysis and output options allow for a wide spectrum of possible implementations. examples of possible analysis pipelines include  bac-end sequencing with automated pcr primer design for chromosome walking and resequencing of pcr products with snp annotation either for snp genotyping or for snp discovery and sbe primer design. examples of scripts are provided on the web site .

performance
although it represents only one of the numerous possible posa-based pipelines, performance of posa was validated by comparison of snp discovery with the data after analysis using the staden package. to do so,  <dig> pcr products were resequenced from a panel of  <dig> individuals to identify snps. manual editing using the staden package revealed a total of  <dig> snps. automated analysis using posa also yielded a total of  <dig> snps with snp ranking codes 1- <dig>  together,  <dig> snps were assigned with both manual editing and posa. the remaining  <dig> snps assigned in manual editing corresponded to snps with ranks 4- <dig> in the posa analysis. the  <dig> snps that were only assigned by posa all originated from regions with lower quality sequence. while analysis time was reduced from several hours to a few minutes, posa assigned snps in a way that was highly consistent with manual editing. this was expected because posa provides options for an integrated analysis pipeline, but essentially is a wrapper around well-established sequence analysis tools like phred, phrap and polyphred.

intended use and benefits for users
posa is a tool that provides easy and highly automated dna sequence and contig data analysis using popular analysis tools. automated sequence analysis reduces analysis time from several hours to a few minutes. pipelines can easily be expanded or adapted through perl scripts. writing or altering the perl scripts is straightforward to do for people with only basic computer skills, although more linux/unix experience might be necessary to install the required software . overall, this guaranties easy implementation of highly automated quality pipelines in combination with high flexibility in setup and design.

the perl objects are released under an open source license, allowing code improvements by the user community.

CONCLUSIONS
posa describes a dna sequence read and a phrap contig assembly in detail. these objects allow a flexible and easy setup of perl-based pipelines to handle dna sequencing data, including generating primer <dig> input and automated snp discovery, while requiring only little programming skills.

availability and requirements
project name: posa

project home page: 

operating system: platform independent programming language: perl  <dig> .1

license: artistic license 

requirements
• perl modules: carp; statistics::descriptive; tie::file; io::file; posix:: storable.

• phred, phrap, polyphred

• pregap <dig>  gap <dig> )

• primer <dig> 

list of abbreviations
posa perl objects for dna sequencing data analysis

snp single nucleotide polymorphism

abi/ab1abi prism trace file format

scf standard chromatogram format

exp experiment file format, developed by staden 

mipe minimum information on pcr experiments 

bac bacterial artificial chromosome

pcr polymerase chain reaction

sbe single base extension

authors' contributions
ja programmed the perl objects and participated in development of concept and architecture of the software; bj participated in development of concept and architecture and wrote the manuscript; mg supervised the project. all authors read and approved the final manuscript.

