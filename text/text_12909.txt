BACKGROUND
mass spectrometry  has become the predominant technology for both proteomics and metabolomics experiments. in shotgun proteomics, proteins are first digested, then the resulting peptides are separated by liquid chromatography. the fractions of the mixture are transferred to the mass spectrometer. soft ionization techniques like matrix-assisted laser desorption ionization  or electrospray ionization  and high resolving mass analyzers are used to identify the individual compounds by peptide mass fingerprinting  or by tandem mass spectrometry. the latter uses another step of fragmentation and ms analysis . multiple technologies also exist in metabolomics applications, where mass spectrometers are coupled to gas chromatography , liquid chromatography  or capillary electrophoresis  for separation. for recent reviews see  <cit> . in this paper our focus is on lc-ms in proteomics and metabolomics applications.

the quantitative information in a proteomics lc-ms map can be used in numerous applications  <cit>  ranging from additive series in analytical chemistry  <cit> , analysis of time series in expression experiments  <cit> , to applications in clinical diagnostics  <cit> , where statistically significant markers detect certain states of diseases. common applications in metabolomics are: the verification of substantial equivalence  <cit> , or the profiling of, e.g., biosynthetic mutants to reveal cross-talk between pathways  <cit> . what applications have in common is that the same components in different measurements have to be related to each other. as with every laboratory experiment, chromatographic separation is stable and reproducible only to a certain extent. the retention time often shows large shifts, and distortions can be observed when different runs are compared. even the m/z dimension might show  deviations. the overall change in rt and m/z is called warp. pressure fluctuations, or changes in column temperature or mobile phase result in distorted elution patterns, and can even cause changes in the elution order of components. elution order changes are not unlikely if their retention times are similar  <cit> . for example, in one of our data sets the ground truth contained  <dig> verified matching peptide signals, but no more than  <dig> of them can be aligned without elution order changes . the correction of the shift in rt and m/z is called dewarping according to the time warping problem of sakoe and chiba  <cit>  in speech processing. the advent of high-throughput quantitative proteomics and metabolomics makes an efficient solution to this problem an important task.

in general, the data processing pipeline for label-free lc/ms data proteomics and metabolomics applications can be divided into the following steps:

 <dig>  signal preprocessing and centroidization,

 <dig>  detection and extraction of two-dimensional signals, so-called features, which are caused by chemical entities,

 <dig>  intensity normalization,

 <dig>  compensation of retention time distortions by dewarping,

 <dig>  computation of a consensus map by assigning corresponding features across multiple maps,

 <dig>  statistical analysis, feature identification, and the biological interpretation.

a typical label-free quantification protocol might be the connection of the proposed analysis steps, but it can also consist of the comparison of lc-ms maps on the raw data level  <cit> . the comparison of lc-ms raw maps enables the search for differentially expressed peptides directly by using multiway data analysis methods . hence, a typical analysis pipeline for this approach avoids the steps  <dig> and  <dig>  and merely includes the preprocessing and intensity normalization of the lc-ms raw maps, the correction of the retention time distortion, as well as the statistical analysis, feature identification and the biological interpretation of the data. we call the dewarping and thereby superposition of multiple lc-ms raw maps the lc-ms raw map alignment problem. several algorithms have been designed to deal with this problem  <cit> . they avoid errors introduced by centroidization and feature finding algorithms, but they tend to have high runtimes and are liable to time order changes. moreover, the algorithms are usually described for pairwise alignment and do not easily generalize to a multiple alignment of n maps. in this paper we will concentrate on the typical label-free quantification analysis pipeline and focus on the so-called lc-ms feature map alignment problem, which comprises the dewarping of multiple feature maps as well as the grouping of corresponding features in different maps. since feature maps have a much smaller data amount than raw maps, they allow for much faster dewarping algorithms. on the other hand, signal preprocessing, centroidization and feature finding may also introduce errors. therefore, the quality of the feature maps strongly depends on the reliability of these processing steps.

within the last four years several algorithms for lc-ms feature map alignment have been developed  <cit> . these tools are either standalone tools or part of a whole framework for the analysis of ms based data. in this paper we concentrate on the comparison of the freely available feature map alignment algorithms implemented within the frameworks msinspect  <cit> , mzmine  <cit> , openms  <cit>  and xcms  <cit> , as well as the tools specarray  <cit>  and xalign  <cit>  . except for the alignment algorithm of mzmine, all methods estimate a linear  or non-linear shift to correct the distortion of the rt dimension in all feature maps. the assignment of corresponding features and the determination of the consensus map is either done consecutively by processing the maps in a star-wise manner , or by a clustering approach . all algorithms take advantage of the more precisely measured m/z dimension to group corresponding features and to estimate the underlying warping function in rt. the general approach of the six different alignment methods compared by us will be described in the next section.

framework
msinspect
linux
linux
openms
specarray
with the recent advent of lc-ms alignment reviews  <cit>  it became obvious that a comprehensive unbiased performance study on a common benchmark set is needed to foster further competition and collaboration between the developers. in related fields, the critical assessment of methods for protein structure prediction  contests  <cit>  and the affycomp ii benchmark for affymetrix genechip expression measures  <cit>  have been quite fruitful in this respect. we have collected benchmark data sets from both proteomics and metabolomics experiments to compare only the feature map alignment modules of different software packages. we aim to minimize the influence of the preceding and subsequent processing steps. therefore, we eliminated the influence of the individual signal processing modules by importing a common feature list. we furthermore abandoned the search for features in individual files based on features found in other measurements which is sometimes referred to as filling-in missing features. for proteomics, we have selected two data sets from the open proteomics database  <cit> , which have been used previously for the evaluation of the raw map alignment algorithm obi-warp  <cit> . for metabolomics data, no such public data repository currently exists, so we used two of our own data sets from a typical comparative metabolomics study. we are making these data sets available at .

the remainder of this paper is structured as follows: in sections  <dig>  and  <dig>  the benchmark data sets and the definition of ground truth are described. section  <dig>  introduces the ms software packages and how they were configured for the benchmark. the evaluation criteria are defined in section  <dig> . the results of our comparison are presented in section  <dig>  followed by a discussion of the merits of the underlying algorithms, and a conclusion of expected future developments in section  <dig> 

 <dig> methods
before we describe the experimental setup and signal processing for the evaluation data sets we introduce some definitions that are used throughout the following sections. in our context, a feature is the two-dimensional  signal caused by a single charge variant of a chemical entity. feature detection involves identifying the signal region in the raw data  and fitting a theoretical model  to the observed data. the map alignment problem has two aspects:  finding a suitable transformation of retention times, so that corresponding features will be mapped to nearby retention times, and  reporting the actual groups of corresponding features across multiple lc-ms feature maps. we will refer to these groups as consensus features, emphasizing that the individual features constituting a consensus feature should represent the same charge state of the same ionized compound. referring to the consensus feature as a whole, one can then speak of an average retention time, mass charge ratio, etc. the collection of all consensus features constitutes a consensus map, which stores the correspondence information of all detected features in multiple lc-ms feature maps.

ideally, each feature should be assigned to one consensus feature and each consensus feature should contain one feature from each map. however, limited dynamic range or large variation in the sample will lead to consensus features which do not extend across all lc-ms experiments. artifacts of the feature detection phase, such as "broken" elution profiles, may also show up during the map alignment, resulting in consensus features which contain more than one feature from a particular map. as a special case, a consensus feature may consist of a single feature from a single map, if no other map contains the same charge state of the ionized compound. we will refer to these as singletons.

we consider the transformation of retention times as an intermediate step, because the downstream data analysis will mainly be concerned with groups of features and their average position, etc. rather than the distortions of retention times. the ultimate goal of multiple lc-ms feature map alignment is to derive a consensus map. this fact should be reflected by our quality metrics. an alignment method should create a "meaningful" partition of the feature maps: corresponding features should be grouped in only one consensus feature instead of being split in multiple subsets, but the algorithm must also avoid grouping together unrelated features.

in section  <dig>  we introduce two measures that reflect the quality of a determined consensus map with respect to an optimal consensus map, the so-called ground truth. this is illustrated in figure  <dig>  the left part shows an optimal consensus map, representing the correspondence in four different feature maps. the right part shows a consensus map with various kinds of errors, which can occur in an alignment.

the quality of the transformation of retention times might also be assessed, but only after groups of corresponding features have been found. the transformation is often called a warping function, because original retention times x and transformed retention times y are related through a monotone increasing function f = y. the difficulty with this approach is that the distance between corresponding features can be minimized by unrealistic, step-like warping functions. hence in order to avoid overfitting, one has to include regularity  conditions into the quality measure, which are hard to formalize.

in the following section we will describe the sample preparation of the complex biological proteomics and metabolomics data sets. furthermore, we establish methods for the generation of proteomics and metabolomics ground truth consensus maps.

 <dig>  proteomics data
we selected two proteomics data sets from the open proteomics database   <cit>  resulting from two different experiments. the first data set originates from a dilution series of escherichia coli and the other data set represents different cell states of mycobacterium smegmatis. both samples are of high complexity and provide typical alignment scenarios. they have previously been used for the evaluation of the lc-ms raw map alignment algorithm obi-warp  <cit> .

we will briefly describe the sample preparation and the lc-lc-ms/ms analysis of the two experiments. further information of the e. coli data set can be found on the opd website and the m. smegmatis experiment is explicitly described in  <cit> .

 <dig> . <dig> experimental setup
data set p1: lc-lc-esi-it-ms/ms

e. coli soluble protein extracts representing cells in exponential growth-phase were diluted in digestion buffer, denatured, and digested with trypsin. tryptic peptide mixtures were separated by automated lc-lc-ms/ms. the injection quantity of the analyte was altered between two different runs: 021016_jp32a_10ul_ <dig>  and 021010_jp32a_15ul_ <dig> . we refer to these data sets as p1_ <dig> and p1_ <dig>  respectively. chromatography salt step fractions were eluted from a strong cation exchange column  with a continuous 5% acetonitrile background and 10-min salt bumps of  <dig>   <dig>   <dig>   <dig>   <dig>  and  <dig> mm ammonium chloride. each salt bump was eluted directly onto a reverse-phase c <dig> column and washed free of salt. reverse-phase chromatography was run in and peptides were analyzed online with an esi ion trap mass spectrometer . in each ms spectrum, the three tallest individual peaks, corresponding to peptides, were fragmented by collision-induced dissociation  with helium gas to produce ms/ms spectra. centroided mzxml data and corresponding sequest identification results of p1_ <dig> and p1_ <dig> were downloaded from the opd.

data set p2: lc-lc-esi-it-ms/ms

m. smegmatis soluble protein extracts were diluted in digestion buffer, denatured, and digested with trypsin. tryptic peptide mixtures were separated by automated lc-lc-ms/ms. the three different runs 6-17- <dig>  7-17- <dig>  and 6-06- <dig> represent protein profiles of a m. smegmatis cell in middle exponential, early exponential and stationary phase . we refer to these data sets as p2_ <dig>  p2_ <dig>  and p2_ <dig>  respectively. the remaining setup is the same as above in p <dig>  centroided mzxml data and corresponding sequest identification results of p2_ <dig>  p2_ <dig>  and p2_ <dig> were downloaded from the opd.

 <dig> . <dig> data extraction
the raw data had been exported in centroided mode by the instrument. preprocessing and data extraction was performed using topp tools  <cit> . we converted all data from mzxml to mzdata format using fileconverter and transformed the data into a uniformly spaced matrix by bilinear resampling using resampler. the spacing of the transformed matrix was  <dig> th and  <dig> second. afterwards we detected and extracted peptide signals in the resampled raw data maps using featurefinder ignoring the charge states to provide fair means of comparison for all alignment tools. the sizes of the feature maps from the p <dig> and the p <dig> alignment test set are available as additional file  <dig> 

 <dig> . <dig> ground truth
we established ground truth for the p <dig> and the p <dig> data sets by means of ms/ms information that was not available to the tested alignment procedures. as a consequence, our ground truth consist exclusively of features that can be annotated with a reliable peptide identification. this is discussed further below.

the reference method uses five steps:  we establish an initial correspondence between ms/ms identifications and lc-ms features.  we filter the peptide annotations based on the retention times of the features they are assigned to. the first two steps operate on each lc-ms/ms map individually.  we compute an initial set of consensus features across multiple experiments.  we reduce the list such that each feature is contained in at most one consensus feature.  we filter the consensus features by comparing retention times across maps.

in the first step we scan through all peptide identifications. we disregard unreliable peptide identifications having a sequest xcorr score less than  <dig> . we check whether the rt and the m/z value of the precursor ion lies within the convex hull of a feature. in this case we assign the peptide identification to the feature. each feature can be annotated with many peptide identifications originating from many ms/ms scans within the experiment. the values in parentheses in additional file  <dig> are the number of annotated features.

in the second step we filter the peptide annotations with respect to the retention times of the features they are assigned to. if a peptide identification is assigned to two features with very different rts in one map, it is likely that one or both features are falsely annotated. this observation is used to filter out dubious identifications which otherwise might give rise to incorrect consensus features in the ground truth. for each peptide identification, we compute the mean μ and standard deviation σ of the rt positions of the features to which it is assigned. if σ >  <dig> s, then the identification is considered dubious and removed from all features. moreover, the identification is removed from all features, if any, whose rt positions deviate by more than 2σ from μ. these filters are applied for each experiment separately.

in the third step we compute an initial list of consensus features, in which features with identical identifications are grouped across maps. in the previous steps we have computed a set of associations between peptide identifications from ms/ms and lc-ms features. the consensus features in our ground truth should have unique peptide identifications. therefore we start by compiling a complete list of all peptide identifications over all experiments. then we step through this list and for each identification we find the best-scoring features associated with it, but at most one from each experiment, and add these features to the corresponding consensus feature. in this way we maximize the sum of xcorr values for the peptide identifications in a consensus feature. we discard dubious consensus feature whose m/z standard deviation is greater than  <dig> 

let the total xcorr score of a consensus feature be defined as the sum of xcorr values of all features contained in it. after step three, it is possible that a feature is contained in different consensus features from the initial list. in the fourth step we reduce the initial list such that each feature is contained in at most one consensus feature, whose total score is the largest among all consensus features containing it. we have developed a simple "greedy" strategy to achieve this goal. the purified list of candidate consensus features is sorted in order of decreasing total score. in each step we extract a consensus feature with maximum total xcorr score from the list. this consensus feature is added to the consensus map, and all consensus features having a non-empty intersection with it are also removed from the list. the process is iterated until no more consensus features can be found, i. e., the list has become empty.

in the fifth step, we apply a final filter for outliers and dubious identifications by comparing retention times across maps. we calculate the rt sample variance within all consensus features in the consensus map and discard consensus features whose standard deviation is greater than  <dig> times the sample standard deviation. since this filter relies upon rt information and hence bears the risk of introducing bias into the ground truth, we confirmed that the removed consensus features are indeed outliers by visual inspection.

the numbers of consensus features in the ground truth are also shown in additional file  <dig>  a ground truth is only considered if its number of consensus features corresponds to a least 10% of the number of annotated featues in the aligned feature maps.

as stated above, the assignment used as a ground truth is restricted to features in different feature maps that were annotated by a peptide identification. we believe that this will not introduce a bias toward any of the tools, based on the assumption that the features, which are selected for ms/ms fragmentation are chosen randomly and independently with the same probability p. for simplicity, consider the case of pairwise alignment. the extension to multiple map alignment will be discussed in section  <dig> . the classical precision value is defined as tp/. note that the denominator does not depend on the ground truth, and the enumerator is expected to be a constant fraction tp = p ·tp* of the "real" true positive number tp*. thus, it is still possible to compare the probability that a computed consensus feature is contained in the ground truth between the different tools, although the absolute precision values will be underestimated by a factor of p using the available ground truth. the recall value tp/ is not affected by such a bias, since both tp and fn will be underestimated by a factor of p, which cancels out. hence, the classical recall value can still be used as an estimator for the probability that an "existing" consensus feature is actually computed by the tool.

 <dig>  metabolomics data
we have selected a typical arabidopsis thaliana metabolomics experiment, with different plant lines and treatments measured at multiple time points in triplicates. the same samples were measured on two different lc-ms setups as follows.

 <dig> . <dig> experimental setup
preparation of extracts

freshly ground arabidopsis thaliana leaf tissue  was subjected twice to the following extraction procedure: mixing with  <dig> μl of methanol/water, 4/ <dig> , sonication at 22°c for  <dig> min and centrifugation for  <dig> min. both extracts were combined and evaporated at reduce pressure in a vacuum centrifuge at ambient temperature. the remaining residue was redissolved in  <dig> μl methanol/water, 3/ <dig> .

data set m1: capillary lc-esi-qtof-ms

 <dig> μl of the extract was separated using an ultimate capillary lc system  on a modified c <dig> column  applying a binary acetonitrile-water gradient at a flow rate of  <dig> μlmin- <dig>  eluted compounds were detected from m/z  <dig> to  <dig> by an api qstar pulsar i  equipped with an ionspray electrospray ion source in positive ion mode. accumulation time was  <dig> s. mass resolution for + of a calibration peptide was rfwhm  =  <dig> at  <dig> m/z.

data set m2: lc-esi-qtof-ms.

 <dig> μl of the a. thaliana extract were separated using a agilent  <dig> series hplc system on a modified c <dig> column  applying the same binary gradient as above at a flow rate of  <dig> μlmin - <dig>  eluted compounds were detected from m/z 100– <dig> by a microtof-q  equipped with an apollo ii electrospray ion source in positive ion mode. accumulation time was  <dig>  s. mass resolution for + of a calibration peptide was rfwhm =  <dig> at  <dig> m/z.

 <dig> . <dig> data extraction
all data were exported in centroid mode by the converter software from applied biosystems and bruker, respectively. the feature finding was done using xcms  <cit>  using the parameters method = "centwave", peakwidth = c, snthresh =  <dig>  ppm =  <dig> for the data set m <dig> and ppm =  <dig> for the data set m <dig>  respectively. the number of features for each file is available as additional file  <dig> 

 <dig> . <dig> ground truth
in contrast to the proteomics data sets, usage of ms/ms information and sequest annotation are not applicable. compound spectra libraries exist for gc/ei-ms, but no extensive set of reference spectra is available for lc-esi-ms. however, a relative annotation of "anonymous" substances is sufficient for the purpose of our alignment evaluation.

for soft ionization methods like lc-esi-ms, different adducts  and fragments  occur. using these known mass differences and verification techniques such as peak shape comparison by correlation analysis, features which originate from the same substance can be grouped together as annotated feature groups. even if the substances are unknown, their spectra can be reconstructed in this way. details are described in  <cit> .

we used features that do not only have the same retention time but also show high correlation  in their chromatographic peak shapes to create annotated feature groups. the correlation verified feature annotations were created using the r-package esi, which can be downloaded from .

only those highly confident feature groups that were reproducible over at least four files and show limited deviation across the files  were used to create a verified alignment of these feature groups. subsequently, the aligned feature groups were split up into their consensus features, which form the alignment ground truth. the number of features for each file and the size of the ground truth for each alignment are available in the additional file  <dig> 

 <dig>  computation of alignments
in the following subsections we will shortly describe the general approach of the six alignment methods as well as their most relevant parameters. furthermore, we present our procedure to import the input feature lists into the different tools. each program provides a consensus map in a proprietary file format which was parsed for the evaluation.

 <dig> . <dig> openms
the open source framework openms  <cit>  offers a multiple lc-ms map alignment algorithm  <cit>  for raw as well as feature maps.

the maps are aligned in a star-wise manner with the most complete map as the reference map. the correction of the warp in rt and m/z and the determination of a consensus map are performed in two steps called superposition phase and consensus phase. this modularization allows for the implementation of a general algorithm that either aligns multiple raw maps using just the superposition phase, or aligns multiple feature maps applying both phases. in the superposition phase the parameters of a suitable affine transformation are determined using a general paradigm for point pattern matching algorithms called pose clustering. the optimal transformation, which is defined as the transformation that maps as many elements of one map as possible close to elements in the other map, is determined by a so-called voting schema. the pose-clustering algorithm considers the different measuring accuracies of the rt and m/z dimension as well as the intensity information of the lc-ms map elements. after the estimation of the initial transformation by the pose-clustering approach, landmarks are searched in the two maps. these landmarks are used for the refinement of the affine warp by a linear regression step. the following consensus phase is based on a nearest neighbors search and determines the final consensus map given the dewarped feature maps. the openms multiple feature map alignment algorithm is implemented in the topp tool mapalignment. the most important parameter for the user are precisionrt, precisionm/z and mz_bucket_size. the parameter mz_bucket_size is a parameter for the superposition phase. it restricts the computation of all possible transformations by mapping only features in both maps that have similar m/z positions. whereas, precisionrt and precisionm/z are parameters of the consensus phase that define the maximal distance of corresponding features for the grouping process. the metabolomics feature lists were converted into the featurexml input format by the fileconverter topp tool.

 <dig> . <dig> msinspect
the multiple feature map alignment algorithm presented in  <cit>  is part of the open source lc-ms analysis platform msinspect. the software package is written in the platform independent language java and is freely available at .

before a consensus map, the so-called peptide array, is determined the algorithm corrects the non-linear distortions of the rt dimension of all maps in a star-wise manner with respect to a certain reference map. it is assumed that the distortion in rt is explained by a global linear trend plus a remaining non-linear component. in the first step, the linear trend is estimated using the most intense features with similar m/z positions. this initial model of the rt transformation is used to iteratively determine a non-linear transformation using smoothing-spline regression methods from the previous model. after dewarping all maps, a global alignment is performed by applying divisive clustering, with user-supplied tolerances in rt and m/z of assigned features. the algorithm optionally offers the automatic choice of the optimal rt and m/z tolerances using the quality of clustering. the quality of the alignment is defined by the number of clusters that include at most one feature from each map.

msinspect uses various tsv  files for input and output. we implemented utilities for converting data from our feature map format featurexml into the msinspect tsv format and to extract the resulting consensus map from the msinspect output files. the alignment algorithm of msinspect provides the setting of two parameters: scanwindow, which is the maximum size of a consensus feature in time space, and masswindow, the maximum size of a consensus feature in mass space. the option – optimize is used to determine the best choices for the two parameters with respect to the number of perfect matches, which contain exactly one feature of each map. we used the parameters suggested by the optimizer but also different parameters to evaluate msinspect's alignment algorithm.

 <dig> . <dig> specarray
li et al.  <cit>  developed a multiple feature map alignment algorithm embedded in the open source software suite specarray .

the proposed algorithm computes all pairwise alignments and combines them to a final consensus map. to correct the distortion in rt a retention time calibration curve  is iteratively computed for each pairwise alignment by pairing features with similar m/z values to construct an original feature pairs set. the rtcc curve is estimated by minimizing the root mean square distance of the features' rt positions to the monotonic function. pairs with a small pairing score are removed and the reduced set of feature pairs is again used to estimate a rtcc. the two steps are repeated until only the pairs with a high pairing score remain and each feature in one map is paired with at most one feature in the other map. the final rtcc curve and the distance of peptides in m/z is used to select likely and unique feature pairs from the original set of feature pairs. the combination of all pairwise alignments yields the final consensus map, or the so-called super list. the parameters for the alignment algorithm are hard-coded and cannot be changed by the user. calculating all pairwise alignments results in a high runtime and makes the algorithm inapplicable for the comparison of a large number of feature maps. specarray provides two tools for the alignment of feature maps. whereas, pepmatch performs the actual alignment step, peparray can be used for the postprocessing and filtering of the consensus map. we avoid the filtering step and use the unprocessed final consensus map for evaluation purposes.

we implemented software to convert our feature map format featurexml into the specarray's binary feature format pepbof. furthermore, we forced specarray to directly export our consensus format by the addition of some lines of code to the sources of pepmatch.

 <dig> . <dig> xalign
zhang et al.  <cit>  propose a stand-alone tool, called xalign, for the alignment of multiple feature maps. the xalign software for windows is available upon request from the author.

xalign computes in a first step a so-called gross-alignment, where the algorithm corrects a systematic shift in rt. in the second step, a final consensus map, the so-called micro alignment, is determined. the gross-alignment algorithm aligns multiple maps in a star-wise manner, where the reference map is chosen as follows: for all predefined rt and m/z windows the most intense features of each map are determined. if a window contains features from all maps, the features are called significant and their intensity weighted average mean rt position is calculated. the map with the minimal difference of all its significant features to the averaged rt positions is chosen as the reference map. afterwards, all other maps are dewarped with respect to the reference by estimating a linear function that minimizes the mean absolute deviation of the rt positions of significant features. in the micro-alignment phase features yielding a high correlation coefficient are successively grouped together and establish the final consensus map. xalign  <cit>  is designed as a component of a data analysis pipeline for protein biomarker discovery. the stand-alone executable runs in the windows command line. it reads tab-separated feature lists and generates several output files including the alignment table and peak statistics.

 <dig> . <dig> xcms
the xcms package presented in  <cit>  is part of bioconductor  <cit> , a larger open source software project for bioinformatics written in the platform-independent programming language r. all bioconductor packages can be obtained from . xcms is designed for both lc/ms and gc/ms data. it includes functionality for visualization, feature detection, non-linear retention time alignment and statistical methods to discover differentially expressed metabolites. we modified xcms to skip the feature detection step and imported the featurelists directly from feature map format featurexml. xcms' feature-matching algorithm makes use of fixed-interval bins  to match features in the mass domain. after this initial binning of features by mass, groups of features with different retention time in each bin are resolved. kernel density estimation is used to calculate the distribution of features in chromatographic time and subsequently boundaries of regions where many features have similar retention times are identified.

xcms supports an optional retention time correction step where "well-behaved" groups of features are used to calculate a nonlinear retention time deviation for each sample. the resulting deviation profiles are then used to correct the retention times of the original samples. the matching and retention time correction procedure can be repeated for an increasingly precise alignment. however, we observed that it is hard to predict whether the retention time correction will actually lead to a better consensus map and depends on the input. therefore, we decided to report results both without and with the optional retention time correction step.

 <dig> . <dig> mzmine
the mzmine toolbox  <cit>  for processing and visualization of lc/ms data is used via a graphical user interface. due to its implementation in java it is platform independent. mzmine is open source and can be downloaded from . we modified mzmine to skip the feature detection step and import featurelists instead.

mzmine's alignment approach does not estimate any dewarping transformations. the toolbox currently implements a simple alignment method utilizing a so-called master feature list, where features from each map are aligned against the master list. a score function is used to compute the similarity of a feature and a row of the master list, which represents the current consensus feature. if the score obtained between the best matching master list row and a feature is "good enough"  the feature is assigned to that row, otherwise it is appended to the master list. mzmine offers two alignment algorithms, "slow aligner" and "fast aligner", which differ in the implementation of the score function. we found only minimal differences in the alignment quality of both algorithms so we used the "fast aligner" due to the better runtime.

 <dig> . <dig> parameters
we performed extensive test runs to optimize the parameters controlling the tolerance in rt and m/z for our test data. using the known deviations of the data as a starting point we varied the parameters of each tool within reasonable ranges. the parameters which yielded the best results on the first experiment of each data set were choosen. the final settings are shown in table  <dig> 

 <dig>  evaluation
the performance of an information retrieval system can be assessed using the precision and recall values. our evaluation of the map alignment problem will follow these lines. as stated in the beginning of this section, the correction of retention times is a very important aspect of the lc-ms map alignment problem, and there is a trade-off between the smoothness of the warping function and the remaining distance among matched features. but at the end, the purpose of warping the retention times is to find groups of corresponding features that are reported as consensus features, which is why our analysis focuses on this aspect of the map alignment problem. that is, we will evaluate the quality of the consensus map rather than the warping function, because we consider the latter an intermediate step for the map alignment problem. given a "query" feature in one map, the consensus map can serve to retrieve related "items" in the other maps. consensus features are simply taken as sets of features; assigning an appropriate average position to these sets etc. is another problem and not addressed here.

in the frequentist interpretation, precision is the probability that a found item is relevant, whereas recall is the probability that a relevant item is found. in the special case of pairwise map alignment, the relevant items are matching features; an item is either found or not. in order to extend these concepts to the multiple map alignment problem, we need to deal with consensus features that do not contain features from all maps, as well as consensus features reported by tools, that overlap but are not identical to the ground truth.

let us denote the consensus features in the ground truth by gti, where the index i runs from  <dig> to n. likewise, the consensus features from the tool will be denoted by toolj, for index j =  <dig> ...,m. we consider the set of consensus features from the tool that contain at least two features  and intersect with a given consensus feature from the ground truth. thus, for each index i let us denote by mi the set of all indices j such that |toolj| ≥  <dig> and |gti ∩ toolj| >  <dig>  now we can look at the cardinality of this index set, |mi|. in some way, this is the number of "parts" into which consensus feature gti from the ground truth has been "split up" by the tool. but we can also look at the union of these consensus features, too˜li:=∪j∈mitoolj. then too˜li is the set of all items that can be retrieved if the query belongs to gti.

therefore, following the classical definition of precision and recall, we define the alignment precision:

 precisionalign=1n∑i=1n|gti∩too˜li||too˜li| 

and the alignment recall:

 recallalign=1n∑i=1n|gti∩too˜li||mi|⋅|gti|. 

the factor |mi| in the denominator serves as a penalty for breaking up a consensus feature from the ground truth. note that in the case of pairwise alignments, the summands in these definitions are either zero or one, and our definitions become equivalent to the classic precision and recall. thus, their names are justified as generalizations. a perfect alignment will have both measures equal to one. false positives  lower the alignment precision; false negatives  lower the alignment recall.

an example is shown and calculated in figure  <dig> 

an r script was written for the automated computation of the recall and precision values. the runtimes were measured as wall-clock time including all file input/output while no other programs were running. all measurements were done on an amd athlon  <dig> x <dig> dual core processor 4800+ with  <dig> gb ram running linux . since xalign does not run under linux, we evaluated it under windows xp running in a virtual machine using vmware workstation  <dig> . <dig> on the same computer . the reported wall-clock runtimes are cumulative over all runs per data set.

 <dig> 
RESULTS
the proteomics  and metabolomics  data sets pose different challenges for the alignment tools. each tool has to correct the global trend of the retention time variation resulting from the flow rate variability from experiment to experiment. furthermore, it has to overcome local distortions resulting from e. g. gradient noise or temperature changes and assign corresponding features across the different maps.

to illustrate the ground truth established for these data sets, we plot the retention time deviation versus the retention time. figure  <dig> shows a significant shift between corresponding features in fraction  <dig> of p1_ <dig> and p1_ <dig>  but almost no difference in scale. figure  <dig> shows that fractions  <dig> of p2_ <dig> and p2_ <dig> are slightly scaled with respect to p2_ <dig>  but apart from that the retention times are in fact better correlated. while an average absolute retention time deviation of  <dig> s can be observed in the ground truth maps of p <dig>  the average absolute retention time deviation for p <dig> is  <dig> s . the retention time deviation plots for each single fraction of the data sets p <dig> and p <dig> are available as additional file  <dig> 

the metabolomics data sets m <dig> and m <dig> contain a larger number of experiments . therefore, we use box-whiskers plots for visualization. figures  <dig> and  <dig> show that variation is higher in m <dig> than in m <dig>  but still much smaller than in p <dig> or p <dig>  the average absolute retention time deviation for the ground truth of the metabolomics data sets m <dig> and m <dig> is  <dig>  s and  <dig>  s respectively. presumably, "large" deviations are the reason for most of the alignment errors. loess regression curves for three randomly chosen files show that the global trends are not as pronounced as the local variation, see figures  <dig> and  <dig> 

both proteomics data sets challenge the ability of the alignment tools to correct strong retention time variations. especially the data of p <dig>  which were measured during several weeks and show huge retention time deviations of around  <dig> minutes, confront the dewarping step of the tools with a serious problem. however, the highly complex metabolomics data sets reveal the capability of the alignment tools to assign the correct features across multiple maps. the maximum retention time deviations of feature maps in m <dig> and m <dig> are only  <dig> s and  <dig> s respectively, without an obvious global trend. the warps are mainly affected by local non-linear distortions of retention times similar to uncorrelated statistical noise. in m <dig> the high density of the feature maps complicates the determination of the correct consensus features. however, m <dig> challenges the grouping step of the tools by its large number of input maps.

our evaluation of the tools' performance is based on alignment recall and alignment precision as defined in section  <dig> , as well as their running times. memory consumption was not a critical resource. since the chromatographic separation steps for the metabolomics and the proteomics data sets resemble each other, we decided to test all tools on all data sets, even though most of them were originally designed for either metabolomics or proteomics data. figure  <dig> shows a summary of the results on the different data sets.

the results for the proteomics data sets p <dig> and p <dig> are shown in tables  <dig>   <dig>  and  <dig>  we found that openms performs best on p <dig>  closely followed by xalign, xcms and mzmine. all four tools achieved high recall as well as high precision values on this data set. however, specarray and msinspect result in slightly worse recall and precision values. the evaluation on the second proteomics data set shows a similar trend, despite the overall recall and precision of all tools is reduced on this more demanding data set. openms again performs best on most fractions of p <dig> and is closely followed by xalign, xcms and mzmine. specarray and msinspect are closely ranked after these four tools. all programs completed within two minutes on the relatively small data sets of p <dig> and p <dig> 

the results for the metabolomics data sets m <dig> and m <dig> are shown in tables  <dig> and  <dig>  here, xcms performs best on both data sets, and mzmine does equally well on m <dig>  with openms and xalign not far behind. alignment recall is much more discriminative than alignment precision, due to the penalty for breaking up a consensus feature from the ground truth. the running times were significantly different on these relatively large data sets, which contain more than  <dig>  <dig> features in  <dig>  respectively  <dig>  feature maps. the alignments using specarray were canceled after  <dig> hours with an estimated remaining runtime of more than two weeks. specarray performs all pairwise map alignments and seems inapplicable to this kind of metabolomics data. in contrast, xcms computes the alignment of the m <dig> and m <dig> in less than seven minutes. openms requires  <dig> minutes for the determination of the metabolomics consensus maps. mzmine and xalign both result in a high runtime of more than one hour for the quite complex metabolomics data sets.

msinspect has a runtime of only half an hour, but with very low recall and precision values. we were unable to obtain good results on the data sets m <dig> and m <dig> using msinspect with parameters suggested by the optimizer as well as different values chosen manually. in most cases the automatic choice of "optimized" parameters did not lead to better alignment results than manually chosen "good" values. furthermore, we observed that a different order of the input files leads to different results with msinspect. placing the feature list with the highest number of features on top of the list seems to give the best results.

another outcome of our evaluation is that it is hard to predict whether xcms map alignment should be used with or without retention time correction, and that the characteristics of the correction need to be checked.

 <dig> discussion and 
CONCLUSIONS
the automatic alignment of lc-ms data sets is an important step in most analysis pipelines for metabolomics and proteomics high-throughput experiments. algorithms that perform this task efficiently and accurately have a large impact not only on basic research in biology, but also on more applied questions such as biomarker discovery and drug research in general. due to the importance of this step and the multitude of different approaches a meaningful standard data set and a sophisticated scoring method are needed. we offer both proteomics  and metabolomics  benchmark data sets, as well as proper quality measures  and an evaluation procedure. on the basis of these data sets we have assessed the performance of six freely available alignment tools.

perhaps surprisingly, we observed that in many cases the largest part of the systematic deviation of retention time in our data sets could have been corrected by a simple shift without any further scaling or non-linear warping at all. the remaining error is very similar to statistical noise, not correlated among neighboring consensus features, and further scan-wise corrections of retention time will face the risk of overfitting. this suggests that the choice of the warping function is less important than the following clustering step , as this will establish the actual consensus features.

the implemented methods are based on a variety of algorithmic principles with complementary strengths and weaknesses  <cit> . combining them into "hybrid" approaches seems to be a promising direction for future research. however, such a project requires a long-term commitment and, if possible, several software developers are necessary. we expect to see a consolidation in the area in the future with a tendency toward open source frameworks such as bioconductor or openms.

recently, the association of biomolecular resource facilities  has organized a collaborative study focusing on evaluating the ability of proteomics laboratories to determine the identities of a complex mixture of proteins present in a single mass spectral data set, as a follow-up to an earlier study in which the actual samples were distributed  <cit> . this indicates the growing attention paid to data processing versus "wet-lab" techniques in the proteomics field. similar competitions should be organized for all the other aspects of a typical lc-ms data processing pipeline, including the lc-ms map alignment problem. the experience from the plasma proteome project  <cit>  has shown that it is difficult to assess the performance if many aspects change simultaneously.

we would like to encourage other ms software developers  to use our benchmark data for evaluation. further benchmarks are also highly welcome, e. g. identical samples run at different laboratories under "identical" conditions, or even on ms equipment from different vendors. we will collect future results and contributions upon request on .

 <dig> authors' contributions
el performed data extraction and established ground truth for the proteomics data sets, with methodology developed together with cg. rt and sn performed data extraction and established ground truth for the metabolomics data sets. el performed parameter tuning and test runs for msinspect, specarray and openms. rt performed parameter tuning and test runs for mzmine, xalign and xcms. all authors developed and decided upon the evaluation criteria. all authors read and approved the final manuscript.

supplementary material
additional file 1
the proteomics and metabolomics ground truth data sets as well as the evaluation script are available at .

click here for file

  <dig> acknowledgements
we thank christoph böttcher for providing the data sets m <dig> and m <dig>  el performed the major part of her work during her phd period at the free university berlin funded by the berlin center for genome based bioinformatics . el is now supported by cancer research uk. we thank anja kasseckert for proof-reading.
