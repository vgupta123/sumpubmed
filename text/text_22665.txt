BACKGROUND
in recent years several techniques for protein quantitation by mass spectrometry have emerged. these include isotope-coded affinity tags , metabolic labelling and stable isotope labelling of amino acids in culture   <cit> . these techniques enable peptides derived from two samples to be distinguished by mass spectrometry . this is achieved though protein labelling with isotopically distinct tags  or through the incorporation of isotopically distinct amino acids , or a stable isotope labelled compound which represents the sole source of an element, typically nitrogen or carbon . protein quantitation can then be achieved by comparing the ms intensity of the peptides derived from the two samples. itraq™ is a recently developed protein quantitation technique that utilizes four isobaric amine specific tags  <cit> . in single ms mode the differentially labelled versions of a peptide are indistinguishable. however, in tandem ms mode  each tag generates a unique reporter ion. protein quantitation is then achieved by comparing the intensities of the four reporter ions in the msms spectra.

the principal advantage of itraq over icat, silac and metabolic labelling is that four samples can be analyzed simultaneously, thereby reducing the amount of mass spectrometry time needed for analysis. in addition, the b- and y- ions derived from peptides labelled with the four itraq tags are indistinguishable, resulting in higher msms intensity and therefore more confident peptide identifications in comparison to icat, silac and metabolic labelling, in which the msms spectra for the differentially labelled peptides are acquired independently.

the proquant software, from applied biosciences , enables the quantitation and identification of itraq labelled peptides. peptide identification is achieved using abi's interrogator™ search algorithm. however, for the purpose of reporting itraq results it is desirable to verify the proteins identified using a second, more widely used, msms search engine such as mascot  <cit>  or sequest  <cit> . for this reason, the i-tracker software has been developed to calculate itraq reporter ion ratios and report them in a format that can be easily integrated with mascot and sequest search results.

i-tracker takes as its input non-centroided mass spectra, either in the .dta format, as created by a program such as wiff2dta  <cit> , or the .mgf files generated by the mascot.dll script for abi's analyst™ software. the software returns the relative ratios of each reporter ion. indicative errors are provided to highlight the large discrepancies that may arise in the reported ratios when very low ion counts are used; they do not provide a model of all errors in the system, such as the probability if successful ion detection or counts introduced by background noise.

implementation
overview
the itraq™ protocol uses four reporter ions of  <dig> ,  <dig> ,  <dig>  and  <dig>  da. these are singly-charged and so found in the region  <dig> –  <dig> m/z in the mass spectra. relative quantitation is performed by comparing the peak areas of each of these reporter ions in the mass spectrum. the default setting for i-tracker assumes that the bulk of the peak will occur in the region of the reporter ion mass ±  <dig>  da. each ion peak within this region is captured. the area of each reporter ion is then calculated by summing the areas of the trapezoids formed between each captured peak. this can be user-adjusted to suit the characteristics of the mass analyser used.

the reagents supplied by abi are not 100% pure, but come with a datasheet by batch indicating the percentages of each reporter ion reagent that differ by - <dig>  - <dig>  + <dig> and + <dig> da from the quoted mass. this quality control measure is taken into account by the i-tracker software by adjusting each peak area as appropriate. the simultaneous equations needed for making this adjustment are solved using cramer's rule. if the determinant of the initial matrix of coefficients is zero, or if no purity information is supplied, the software will output a warning and proceed without purity correction.

following any purity correction, the peak areas are normalized. these normalized areas are used to calculate the quantitative ratios between each reporter ion. if the maximum peak height of any reporter ion is below the user-defined threshold for consideration, the string "ut" for under-threshold is the output. if there is no peak in the spectrum associated with a reporter ion as comparator  the string "na" is output.

very low peaks in the mass spectra may suffer from large errors due to the quantized nature of the ion current. in order to provide some idea as to the potential magnitude of this error, a set of ratio-errors is reported which represent the maximum percentage error due to quantization. it should be noted that this reported error does not account for errors in detection of the ion current nor systematic error, such as background noise, in the measurement, but merely serves as a warning against placing too high confidence in reported ratios when these have been based on peaks with low ion counts.

detailed description
items in this section are presented in the order in which data is processed by the software with one exception: the calculation for the determinant of coefficients, for purity correction, is performed very early in the processing sequence, in order to minimise repetitive calculation, whereas here it is presented as part of the purity correction section. other than for this the following may be considered in parallel to the perl code , which contains similar headings and flags for straightforward comparison.

data input
spectra must be non-centroided as the peak area calculations rely on the presence of all the peaks that would otherwise be combined in a centroided output.

i-tracker can read spectra in .dta or .mgf formats. the two formats differ in the title information they contain and slightly in the format of the precursor ion information. however, the main difference in the way i-tracker handles these files is that .dta files, which represent a single spectrum, are read into memory before processing whilst .mgf files are read in to memory spectrum by spectrum whilst keeping the input file open. once a spectrum's information has been read, further processing is identical between input file formats.

reporter ion peak collection
all peaks in the ranges:

 <dig>  ±  <dig> 

 <dig>  ±  <dig> 

 <dig>  ±  <dig> 

 <dig>  ±  <dig> 

are collected as a {mass}->intensity pair . the default range of ±  <dig>  was identified by considering the mass accuracy of the mass spectrometer and through manual inspection of a number of these peaks in the output files. this can be user-adjusted through an option presented at run-time.

reporter ion area calculation
for each reporter ion peak range, the total area is calculated by summing the areas between ion peak pairs using the trapezoid approximation for calculating the area under a curve.

for example, a reporter ion peak may be comprised of four ions within the range considered. here a, b, c and d are ion masses and a', b', c' and d' are their intensities. the total area  of this reporter ion peak is therefore:

a =  *  <dig>  *  +  *  <dig>  *  +  *  <dig>  * 

the maximum ion peak intensity is also identified at this point for comparison with the user-entered ion intensity threshold and for the calculation of quantisation errors.

purity correction
each batch of itraq reagents supplied by abi is labelled with sixteen purity values indicating the percentages of each reporter ion that have masses differing by - <dig>  - <dig>  + <dig> and + <dig> da from the nominal reporter ion mass due to isotopic variants. this information can be used to correct the peak areas calculated for each reporter ion to account for the losses to, and gains from, other reporter ions. losses to ion peaks not in the reporter ion range are also accounted for in this method.

the simultaneous equations needed to solve this problem are fairly complicated, but can be framed such that cramer's rule may be applied. a detailed explanation of how to use cramer's rule to solve simultaneous equations may be found in  <cit> . briefly, if the determinant of the matrix of coefficients for the simultaneous equation is non-zero, the solution in each variable may be found. the four-way simultaneous equation for purity correction may be written as:

a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p are the sixteen purity correction values  in the order:

 <dig>  –  <dig> da,  <dig>  –  <dig> da,  <dig>  –  <dig> da,  <dig>  –  <dig> da,  <dig>  –  <dig> da, etc...

.

w,x,y,z represent the percentage of each peak expected to be present at the mass of the reporter ion associated with that peak. here, w is for  <dig> , x for  <dig>  etc.:

w = )

x = )

y = )

z = )

the area  of each reporter ion peak , as calculated above, can now be written in terms of the true areas of peaks :



the task is now to calculate each tr according to these equations.

the determinant of the matrix of coefficients can be found:



if |c| is zero, then there is either an infinity of solutions or there are no solutions to these equations and so the purity correction module is skipped. if |c| is non-zero, purity correction proceeds:

the cramer determinants, Δr, are found to be:



the true areas, tr, can now be found:

tr = Δr/|c|

peak normalisation
providing that the sum of the total areas is non-zero, normalised areas  are calculated as:

nr = tr / 

if the sum of all areas is zero, then each normalised area is also considered to be zero.

under threshold checking
if the maximum ion peak intensity for any reporter ion peak area is equal to or less than the user-entered threshold, a flag of "ut" for "under threshold" is reported.

ratio calculation
all ratios of true areas are calculated to three decimal places provided that the denominator is non-zero. if the denominator in any ratio calculation is zero, an "na" flag is reported.

quantisation error calculation
very low ion counts may introduce a significant quantisation error. to some extent this is mitigated against by a sensible user-entered threshold of around  <dig> ion counts, but even so, comparing two reporter ion peaks that just pass such threshold could introduce an error of around  <dig> % into the final ratios:

eg. the user-entered ion count threshold is set to  <dig>  the "correct" areas of peaks  <dig> and  <dig> should have been based on intensities of  <dig>  and  <dig>  respectively, but the reported ratio is 1: <dig> due to the quantum nature of ion counts. a quantisation error of  <dig> % has been introduced in this case. for ion counts lower than this, the potential quantisation error will be much greater, but their ratios in this case would have been masked by the user-entered threshold.

these potential quantisation errors are reported alongside the peak ratios to highlight instances where results might be compromised by this effect. they are calculated as a percentage error between two ratios thus:

err =  + )

these are output in the errors matrix for each ratio.

similar potential quantisation errors in the normalised areas are calculated as:

err = )

these are output in the left-right diagonal of the quantisation errors matrix.

output format
results are output in a choice of two comma-separated-variable  formats readily imported into r, excel and other packages. one of these is designed for human-readability whereas the other is more convenient for simple analysis in a spreadsheet. both are simple to parse for more detailed analysis. full descriptions of both formats are provided in the user-instructions. the title information for each spectrum's results is taken from that of the input spectrum and hence matching of quantitative data with peptide identifications is straightforward. each set of ratios is reported by spectrum, in the order in which they appear in either the directory or the input file . linking itraq ratios, as determined by i-tracker, and peptide identifications is dependent on the user being able to accurately link the identified spectra to this output data. either the filename, for .dta input, or the mascot peptide "title" information can be used for this purpose, as performed in the gapp project prototype .

RESULTS
relative quantitation data using i-tracker were compared to the output from proquant and found to be in good agreement, as shown in figure  <dig>  the data used were derived from arabidopsis membrane protein samples labeled with itraq reagents. arabidopsis membrane protein samples were prepared as described in  <cit> . membrane pellets were solubilised in  <dig> μl of labelling buffer .  <dig> μg of protein were reduced with  <dig> mm tcep for  <dig> h at 20°c and cysteines were blocked with  <dig> mm mmts for  <dig> min at 20°c. samples were then diluted with  <dig> mm teab, in order to reduce the urea concentration to  <dig> m.  <dig> μg trypsin were added to the samples, which were then incubated for  <dig> h at 37°c. the peptide samples were then labelled with the itraq reagents as described in  <cit> .

the pooled labelled peptides were loaded onto a dionex propac scx- <dig> strong cation exchange column  at  <dig>  ml/min and separated using a gradient of  <dig> mm to  <dig> mm nacl over  <dig> min during which time  <dig> fractions were collected and analyzed by lc-msms using an abi qstar mass spectrometer.

the data reported in figure  <dig> represent one of these  <dig> fractions, picked at random and processed using i-tracker and proquant. i-tracker was run using an ion count threshold of  <dig> and the appropriate purity correction factors as supplied by abi. the ratios of the two reporter ions shown  range from  <dig>  to  <dig> . other comparisons, not shown here, demonstrate similar performance. these results demonstrate that the output from i-tracker is almost identical to that of proquant in terms of calculating the ratios of reporter ion peaks. as proquant was developed by abi, this very high correlation is desirable, but it should be noted was not part of the original specification for i-tracker. if the results had been markedly different, there would have been a question to answer as to the validity of the results from both systems. as i-tracker was developed entirely independently from the developers of proquant, with no information as to abi's algorithm being sought or provided, the convergence of the end results provides a positive validation of either a common sense of the design or of the implementation of both systems. the first of these assertions would apply if the algorithms are independently identical. in this case similar design decisions would have been made when presented with the same problem, leading to a corroborative validation of the design. on the other hand, if the algorithms are different, then the results provide a demonstration that both algorithms perform to the same specification. which of these is the true position is unknown as abi have as yet not released details of their proquant algorithm. this also prevents a complete analysis of the very few outliers, around  <dig> out of  <dig> data points present in the comparison.

a current limitation of i-tracker is that it only accepts two types of input file; the .dta and .mgf formats. although a number of converters are publicly available, it would be beneficial for i-tracker to be modified such that it can handle the more generic ms file types available, such as mzxml and mzdata. the advantage of using these would be that they are set to become standard across the community. however, as both are xml-based and contain encoded peak lists, processing these is more complicated than for the file-types currently handled. this extension to i-tracker will be addressed in future releases.

CONCLUSIONS
i-tracker provides quantitative proteomic information for peptides when using the itraq reagents supplied by abi. the principal advantage to using i-tracker is that the results are provided in a form that may be easily linked to peptide identifications made using software other than that provided by abi, something which is currently time-consuming and difficult using proquant. furthermore, both the algorithm and source code for i-tracker are freely available and therefore may be reviewed and developed further by the proteomics community.

authors' contributions
cb, kl, td and is together conceived and developed the initial specification for the tool. is designed and built the i-tracker application with extensive input in the design and user-requirements from td. td carried out the sample collection, mass spectrometry and data analysis. is drafted the manuscript with input from td, kl and cb. all authors read and approved the final manuscript.

availability and requirements
project name: i-tracker

project home page:  the software may be freely downloaded from this website. as it is provided as a perl script, the source code is naturally available.

operating system: platform independent. a windows  executable is provided as well as the perl script.

programming language: perl

other requirements: the freely available perl modules time::localtime and math::matrixreal are required unless using the windows executable.

license: gnu gpl

any restrictions for use by non-academics: none.

