BACKGROUND
eukaryotic transcripts share features with a vampire-like creature of philippine mythology: the manananggals, nocturnal creatures that prey on pregnant women and feed on the blood and hearts of fetuses. these creatures have the ability to split their torso into two parts, which allows the upper part to fly into the night to go hunting while the vulnerable lower part remains stationary. whereas transcripts do not share the manananggal’s lust for blood and hearts, they are able to reshape themselves by losing parts of their substance. this process, called “splicing”, rips out some introns and exons to generate new transcripts that translate into proteins with potential distinct functions. aside from some exceptions, most transcripts depend on additional proteins  for efficient splicing. we call the ability to generate a multitude of isoforms from a single genomic locus alternative splicing . it is accomplished by skipping whole exons, using alternative splice acceptor and donor sites or retaining introns.

splicing allows cells to increase the number of potentially functional rnas and proteins without increasing the size of the genome. the current gencode  <cit>  gene annotation  for the human genome includes more than three times as many transcripts than genes . evidence has been gathered for the involvement of alternative splicing in neurological disorders , autoimmune diseases  and tumorigenesis . understanding this aberrant splicing behavior could translate into a health benefit for patients.

the advent of next-generation sequencing , and in particular rna sequencing , simplified the detection and quantification of splicing events in a broad range of genes in a single experiment and a number of tools have been developed for this task.

some assess alternative splicing by assigning reads to complete isoforms based on statistical models , while other tools focus on single exon coverage  or a combination of junction-spanning reads and exon coverage . to circumvent the problem of incomplete annotation, tools like cufflinks, trinity  <cit>  and trans-abyss  <cit>  perform a genome-guided or de novo assembly of transcripts. this also allows these tools to identify completely novel isoforms. manananggal visualizes novel splicing events  as incomplete isoforms that are reduced to the putative exon start and exon end surrounding the novel splice junction. however, it cannot detect completely new genes.

all tools usually generate vast lists of potential alternative splicing events between conditions. however, in many cases these events represent false positives, a finding that is supported by previously published tool comparisons that detected little overlap between the result lists of these tools  <cit> . hence, it is strongly advisable to validate alternative splicing events by other means. visual inspection of the data can already strengthen the evidence for an alternative splicing event without the necessity to validate a large number of events in the wet lab.

unfortunately, the few available interactive tools for visual inspection of alternative splicing in rnaseq data are scarce and in most cases not flexible enough to get a good visualization of the splicing events and the involved isoforms. therefore, we developed manananggal, a web application designed to facilitate the visual inspection of alternative splicing events.

implementation
manananggal was implemented in java using the freely available community edition of the zk framework. a server is required to deploy the application and a configuration file for the server must be prepared to specify where manananggal finds reference and project data. each sample of a project requires two input files: a bigwig file and a junction count file that must be specified in a project file along with some metadata. the user manual that comes with manananggal explains how these files can be obtained. for internal calculations, manananggal relies on size factors to adjust for differences in the library size. the size factors can be generated using the command line tool that is included in the manananggal.jar file . alternatively, users may add their own size factor estimates  to the project file.

when a data set is opened and a gene is selected in the web application, the manananggal method tries to identify all alternative splicing events in the gene. candidate events are added to a result list in the top right corner of the web interface. a short overview on how this algorithm works is shown in fig.  <dig> fig.  <dig> workflow of the manananggal method. junction counts are merged to generate one large table with all possible junctions. the table is indexed for random access and used to identify splice junction pairs that differ between conditions . one junction in each pair corresponds to a junction arguing for the inclusion and another for the exclusion of the exon. all possible inclusion/exclusion junction combinations for an exon are used to identify the combination that shows the largest difference between conditions. this combination is subsequently used in a t-test to provide a p-value for sorting of the results. if the best junction pair includes read counts of an unannotated junction we also report the best available result using only known junctions. the right side of the image illustrates the detection of coverage ratio changes. bigwig files are used to calculate size factors for each sample that are used to adjust for sequencing depth differences. b an automated isoform selection discards isoforms that contain exons with insufficient coverage from the analysis. c the arrow indicates an alternatively spliced exon that shows a large change in the coverage ratio  compared to the remaining exons . changes in the coverage ratios between different conditions are identified by testing the coverage ratios of each nucleotide of the query exon against the mean coverage ratios of the remaining exons/exon groups. d finally, a result list is generated that contains ase candidates that are supported by psi scores only, ratio changes only, or both




in brief, the algorithm works as follows: junction count files are used to calculate psi scores for each pair of conditions specified in the project file and bigwig files are used to identify changes in the coverage ratio of exons. we used a greedy implementation of the psi score that uses only a single junction for measuring the inclusion count of an exon. the reason behind this is, that terminal exons  of a transcript are only supported by a single junction and exon skipping events might refer to exons that are connected to more than one exon, resulting in an imbalanced count value for neighboring junctions that could yield wrong results. we compared our algorithm to other tools such as rmats, cuffdiff and dexseq. in our evaluation it performs comparable to rmats and dexseq and outperformed cuffdiff with respect to the detection of alternative splicing candidates . however, manananggal is significantly faster than rmats and cuffdiff  and can thus be used on the fly. please refer to the user manual if you would like to run the manananggal stand-alone console application to identify alternative splicing events in your project.fig.  <dig> comparison of detected as candidates to  <dig> rt-pcr confirmed as events. rmats was originally used by lu et al.   <cit>  and shen et al.   <cit>  for the detection of the as events in the pc-3e and gs <dig> li prostate cell lines. they chose  <dig> as events and validated  <dig> by rt-pcr. for two genes  the rt-pcr failed and, thus, it is unclear whether they represent real events. all events were identified by manananggal. however, several events showed only very small changes . rmats detected all events but the exon skipping in slc37a <dig> and reported a high fdr for the event in arfgap <dig>  dexseq detected all events but the one in igf2bp <dig> and cuffdiff failed to detect  <dig> of these exon skipping events




the manananggal user interface, shown in fig.  <dig>  offers a wide range of options. usually, users do not have to worry about most of them and can just use the default settings. however, genes with a very large number of exons might for example require that users define a larger window width to plot them correctly. a larger window width can also be used to zoom into the gene. the interface also offers ways to select or unselect certain samples  and isoforms . for each sample group users may select their own color that is a helpful feature for people with color deficiency or when certain colors are generally associated with a certain phenotype. further, an automatically generated list of predicted alternative splicing events, based on the algorithm described above, provides a comfortable way to focus on these events. exon skipping events that show differences in the exon coverage ratios and psi score are also indicated on the meta exon track in the isoform view, where meta exons are chromosomal regions defined by the minimum start and maximum end position of all overlapping exons. other types of ases are not highlighted because they tend to include more false positives if unexpressed isoforms are selected .fig.  <dig> overview of the manananggal user interface. a project specific selections, e.g. what condition type should be used for grouping samples. b options that affect the visual output shown in g and h, also includes a link to the user manual. c specific samples can be selected here. d colors for each condition can be defined here. e isoforms may be selected here. f additional options that affect the visual output and detection of alternatively spliced exons. also includes a button to create a html link to the current view. g coverage plots that by default show one coverage line per condition. h the isoform plot indicates overlapping transcripts in sense and antisense direction, highlights potential exon skipping events and shows each of the selected isoforms. please note that the image is not showing the complete manananggal interface. a multi-column table of alternative splicing candidates is located in the top right corner of the web interface that we omitted for reasons of clarity




another feature provided by manananggal is the ability to share your results with others. in the advanced options window is a button generates html links for the current selections, which includes the selected data set, gene reference, samples and isoforms. adding the keyword “&screenshot” to the url facilitates sharing of results when many samples or very large genes are involved. the viewer will generate a screenshot the first time the link is accessed and load this screenshot for every subsequent use of the url. further, users can rate and save interesting alternative splicing events to a list that is automatically loaded whenever someone opens the same project. this list is located in the top-right corner of the web interface.

sometimes it might be important to know in which tissues a gene or exon is expressed, e.g. when searching for very specific ases. to visualize this information we provide multiple options, but all of them require that users have access to tissue specific gene and exon expression data . option one opens a boxplot that shows the expression of the whole gene in all tissues. option two uses the meta exon track to highlight tissue specific exonic parts  that can be clicked to open a popup window that shows a boxplot for the exons expression in all tissues .fig.  <dig> tissue specific expression. a shows the tissue specificity for exonic parts on the meta exon track. one of the meta exons is colored in red with a specificity of  <dig> . the specificity ranges from  <dig>  to  <dig> . b shows the popup window that opens after clicking the red colored exonic part. it becomes apparent that the exon is almost exclusively expressed in different brain tissues 




a more detailed explanation of all the functions is given in the user manual that can be accessed by clicking on the “manual” button located in section b of fig.  <dig> 

RESULTS
in the following, we will show how manananggal can be used to inspect ases and discuss its advantages over other tools. if possible, we tried to use the same data set and gene for the comparison. we used the prostate cancer data set published with the rmats publication  <cit>  . the data includes three samples for each of two prostate cancer cell lines .

one tool that was developed to visualize alternative splicing is vials  <cit> . we used the publically available online installation of vials  to compare its features to manananggal’s. since the tool includes bodymap data, we decided to go for an alternative splicing event in pkig between heart and brain that we will also use for the comparison of another tool later. according to the gtex portal and also the tissue specific data stored in spliceseq, different isoforms of pkig are expressed in brain and heart that use two different promoters. figure  <dig> shows pkig in the vials web interface. the top view shows the frequency of all junctions in all samples. for demonstration purposes, we selected the first isoform, which shows all junctions of the isoform in wider columns. a larger difference between brain  and heart  can be observed for the first junction, which appears to be more frequently expressed in heart than brain. this data is supported by the isoform track below that shows isoform expression estimates to the right. as shown, the first isoform is more often expressed in heart and the second isoform is more often expressed in brain. the difference is not so obvious in the coverage tracks at the bottom, because the coverage for all samples is shown relative to the maximum coverage of all tissues, similar to manananggal. however, manananggal has an option to unselect groups or single samples dynamically, while vials relies on different source files that define the groups. therefore, users can unselect high coverage tissues that are not of interest in manananggal and get a clearer picture of the coverage tracks, which requires additional effort in vials. the dot and boxplots of the junction coverage track are helpful, but also a bit tedious because you have to compare each isoform to each other and then decide where the differences are. instead, one will usually rely on the isoform expression estimates by miso to detect alternatively spliced isoforms and then check the junctions for these. while this works very well in this example, isoform expression estimates are often very wrong for complex genes or when using gencode, which includes also incomplete isoforms. imagine a gene with multiple alternative splicing events that don’t allow for unambiguous isoform expression quantification. in this scenario miso estimates are less informative and it is necessary to identify the alternative splicing change manually by examining all junctions one by one, which is very time consuming for large genes. manananggal on the other hand is focused on single splicing events and provides a list of potential splicing events each time a new gene is opened. this facilitates the identification of splicing events even for complex genes if you don’t have prior knowledge of the events of interest. if desired, isoform expression estimates can also be shown behind each isoform in the isoform view of manananggal that are generated using mmseq. compared to vials, manananggal also offers additional features that vials lacks, such as: dynamic coloring of sample groups, direct comparison of isoform specific junction counts for identified alternative splicing events, interactive sample selection, merged coverage plots, ability to freely choose isoforms, saving and sharing the current view via html links, log <dig> transformation of the coverage, and some other features.fig.  <dig> vials visualization of an alternative splicing event in pkig that uses different promoters in hear and brain. junction frequencies are shown at the top, isoforms and miso isoform expression estimates in the middle and coverage tracks at the bottom




one very popular tool for visualization of next-generation-sequencing data is the igv viewer. it is a platform independent application that can visualize a broad range of data types. for the inspection of ases it includes an option to visualize the data as so called sashimi plot  <cit> . figure  <dig> shows an example of such a plot for an ase in aplp <dig>  the first three samples  refer to the gs689_li samples and the last three to the pc3e samples. for genes with few isoforms sashimi plots are easy to interpret. in the example, it is clear that the middle exon is lower expressed in the gs689_li samples than in the pc3e samples, and the count number of the exclusion junctions supports this as well. however, imagine you have four different conditions with  <dig> samples each. this would result in an enormous plot that would be much more difficult to interpret. the inability of the igv viewer to group samples into a single plot is a big disadvantage for larger projects. further, introns are shown to scale, resulting in very small exons. the list of isoforms at the bottom is also fixed and removing unexpressed isoforms is only possible by editing the gene annotation file.fig.  <dig> sashimi plot taken from the igv viewer that shows an ase in the gene aplp <dig>  each different color represents a different sample . the first three samples represent gs689_li samples and the last three samples belong to the prostate cancer cell line pc3e. the plot shows that gs689_li samples express the middle exon less frequent than pc3e samples. only junctions with a minimum read coverage of  <dig> are shown




dexseq comes with a plot function that could be combined with web frameworks  to create a somewhat interactive web interface that produces splicing images for single genes on demand. figure  <dig> shows such a plot using the same data set and gene as before. for easier interpretation we marked two alternative splicing events that are present in aplp <dig> by red rectangles. the first event corresponds to the event shown for the igv viewer. the top of the plot shows the coverage of exonic parts and the lower part shows a flattened gene model. the gene track at the bottom indicates differentially spliced exonic parts by adding color to them. especially the terminal exons are indicated as differentially expressed. the advantage of this plot over the igv sashimi plot is that it combines the coverage of all samples within a group and, thus, it can be effectively used to visually inspect a large number of samples. another plus is that the plot shows all exonic parts at once, thus, multiple events may be investigated at the same time. the largest disadvantage is the use of exonic parts. this obscures the true gene structure and makes it very hard to tell which exonic part belongs to which exon. further, the dexseq plot does not provide information on overlapping transcripts that could be the reason of false positive ases.fig.  <dig> dexseq’s plot for the visualization of alternative splicing events. shown at the top is the coverage for both sample groups separately. each line corresponds to a single exonic part. the outlined exonic parts are two strong ases. the bottom part of the image shows the gene structure and depicts differentially expressed exonic parts by adding color to the exonic part and the line connecting the exonic part to the x-axis of the coverage plot. two alternative splicing events were framed with red rectangles that represent the major ases in this gene




next, we tried to produce images for the same gene using spliceseq  <cit> . compared to the other tools spliceseq cannot use previously mapped data and, thus, requires fastq files that are then mapped using bowtie. on a windows computer this process failed for the whole data set. using a reduced sequence file  we were able to successfully map the data and import it into the spliceseq database. unfortunately, the program fails at the isoform generation step for an unknown reason. without the source code we could not dig deeper into the problem and, therefore, decided to discuss an example using the data set that is provided with the tool. figure 8a shows an alternative splicing event in pkig using data from brain and heart.fig.  <dig> visual representation of an alternative splicing event in spliceseq. a shows the visual representation inside the spliceseq viewer. all exons of the gene are shown in a single line. overlapping exons are merged into meta exons that indicate which part of the meta exon belong to which exon. expression numbers are given for each exonic part and junction. the ase is highlighted in yellow by spliceseq to make users aware of the elements involved in the splicing event. b shows some of the structure of three pkig transcripts that were copied from manananggal to emphasize that exon  <dig>  represents an alternative transcript start. c shows a combined image of the expression of the first and last transcript shown in b in multiple brain and heart tissues that was obtained from the gtex portal . it demonstrates that enst <dig> is expressed in heart and enst <dig> in brain




the graphical representation is very similar to the igv sashimi plots with three important differences. first, there is only a single graph showing the read counts for each group that allows the comparison of a large number of samples. second, introns are drawn with a fixed length allowing for the investigation of a much larger part of the gene at once, and third, alternative splicing events are highlighted. disadvantageous are the lack of coverage plots and a missing indication of overlapping transcripts that make it difficult to spot problems that arise from differential expression or antisense transcription. further, the example also shows how this representation can be very misleading. the highlighted event has been classified as an es  event by spliceseq and the visual representation also suggests that this is an exon skipping event. however, considering the read numbers it becomes clear that the major event might not be exon skipping. another disadvantage of spliceseq is that it is not possible to hide exons that belong to isoforms that are either absent or very lowly expressed , thus giving the sashimi plot a more complicated look than would be necessary.

we implemented several improvements over the other tools in manananggal. similar to the dexseq plot and spliceseq we combine the data of multiple samples into a single plot. dexseq also showed the per group coverage for each exonic part but only provides a single coverage value for each exonic part and does not indicate the range of the expression. in contrast, manananggal also shows the upper and lower quartile of the coverage at each base position and users can choose between mean or median representation. coverage differences between conditions may be large and, thus, we also provide options to show the log <dig> coverage and coverage ratios. coverage ratio plots proofed to be very helpful for spotting ases. figure  <dig> shows the aplp <dig> splicing event from the prostate cancer in the manananggal viewer.fig.  <dig> visual output for aplp <dig> from manananggal. a shows the standard coverage plot for both sample groups. the light shaded regions around each line represent the upper and lower quartile of the coverage. b shows the coverage ratio representation of the coverage plot. using ratios flattens the coverage for all exons and makes it easier to spot the alternatively spliced exons that appear at ‘bumps’ in the coverage ratio that otherwise remains very constant across all exons. c shows the isoforms that are likely involved in the ases. the antisense transcript track is empty and the sense transcript track only shows one exon of aplp <dig> that overlaps an intronic region of another transcript on the same strand . therefore, it is unlikely that overlapping transcripts influence the coverage of aplp <dig>  especially at the ases. further, the automatic ase detection algorithm of manananggal identified both ases and indicates them by coloring the respective meta exons in red. the percent numbers at the end of each transcript correspond to mmseq isoform expression estimates that can be generated if manananggal has access to mmseq. however, this also shows that mmseq assigned a large fraction of the coverage to other transcripts that are probably less important or not expressed at all




a standard coverage plot is shown at the top, the alternative coverage ratio plot in the middle and the isoforms at the bottom. colors for each condition may be freely changed to consider the needs of people with color deficiency. the isoform plot indicates overlapping antisense  and sense  transcripts. as transcripts, which are absent in this case, are shown in orange  and red . overlapping transcripts in sense direction are shown in light blue  and dark blue . while overlap to exonic regions of other genes is a frequent origin of false positive alternative splicing results, overlap with non-exonic regions usually does not result in false positive alternative splicing events, but we believe it is helpful to make the user aware of a potential overlapping transcript. the meta exon track indicates potentially alternatively spliced exons  and indicates the orientation of the gene. in the picture shown, uninformative isoforms  were unselected. if available to the server, manananggal can run mmseq to produce isoform quantifications that will be displayed at the end of each isoform for each condition. for large sample sets this can take a long time and might even exhaust the resources of the server, thus, it should be carefully considered whether to enable mmseq or not . in contrast to the dexseq plot and spliceseq, manananggal preserves the full transcript structure, thus, making it easier to tell which exon is actually involved in an ase.

although manananggal provides many abilities that were tailored to inspect alternative splicing event, all of the above mentioned tools might be sufficient to visually inspect simple splicing events, such as the one shown in aplp <dig>  however, the real strength of manananggal is the ability to investigate highly complex genes. figure 10a shows the cd <dig> locus using the igv viewer and the prostate cancer data set .fig.  <dig> visual representation of cd <dig> in the igv viewer, dexseq and spliceseq. a shows a sashimi plot of the cd <dig> gene with all junctions visible. a difference between the first three  and last three samples  is visible, but it is very challenging to identify which junctions belong to the ases or what ases are actually present in the data set. b shows a sashimi plot that was zoomed to the region of interest. junctions with a coverage below  <dig> were hidden from the picture to get a cleaner view of the region. it becomes clear that the gs689_li samples mostly skip all optional exons in this region, while cd <dig> expresses multiple of them. however, it remains difficult to tell which isoforms are expressed in cd <dig>  c shows the dexseq plot for cd <dig>  a large number of exonic parts appear to be differentially expressed. d shows the sashimi plots for all  <dig> samples in spliceseq. a coverage difference is visible for all optional exons that are lower expressed in the gs689_li samples. the pc3e samples show a large number of junctions




by looking at the image it becomes clear that there is some difference between the gs689_li samples and pc3e samples, but it is not possible to decipher what that difference is. the igv viewer offers to hide junctions based on a count threshold. figure 10b  shows the cd <dig> region after exon  <dig>  a region with multiple optional exons, using a junction count threshold of  <dig>  now it’s much more obvious that the gs689_li samples mostly express an isoform that skips all of the optional exons, while for the pc3e samples it remains less clear which isoforms are expressed.

similar, the dexseq plot  shows nicely that the gs689_li samples skip all the optional exons, but it does not help to identify the isoforms that may be expressed in pc3e. figure 10d  shows the spliceseq representation for cd <dig> for each sample separately . however, as spliceseq does not offer an option to hide lower expressed junctions, we expect that the combined graph for all samples would look equally complicated. however, similar to the other tools, also this example indicates a difference between the two sample groups, but it just does not provide enough information to identify the most important isoforms.

with manananggal we generated the image shown in fig.  <dig>  by removal of probably unexpressed isoforms  we limited the number of isoforms that are obviously expressed in the data set. compared to the other tools this image appears much cleaner without losing information. on the contrary, additional information becomes visible. the optional exons have different expression heights, thus, multiple isoforms must be expressed in the pc3e data set, and one exon appears to have a larger coverage in the gs689_li group. however, an exon of an antisense transcript  is overlapping this exon and, thus, this coverage difference is very likely not related to an alternative splicing event. further, the isoforms depicted show the most important splicing events that are necessary to explain the coverage pattern. however, one should bear in mind that not all isoforms included in gencode represent full transcripts, thus, some of the shorter isoforms shown here probably lack exons.fig.  <dig> manananggal’s visual representation of alternative splicing events in cd <dig>  the coverage plot at the top shows that multiple exons are only expressed in the pc3e samples. these alternatively spliced exons are also highlighted on the meta exon track. one exon appears to have a higher expression in gs689_li samples. however, this exon overlaps an exon of an antisense transcript  and thus does not represent a valid alternative splicing event. the isoforms shown at the bottom were selected in a way that represents the coverage plot best. please note that some of these isoforms  might represent incomplete transcripts that are included in the gene reference




discussion
existing viewers like the integrative genomics viewer   <cit>  provide ways, e.g. sashimi plots, to investigate alternative splicing, but the representation becomes very difficult to interpret once multiple samples are investigated or transcript models are complicated. spliceseq  <cit>  employs a visualization similar to igv and, additionally, provides functionality to compare sample groups. other programs, like dexseq provide single exon expression charts. while this also works well for multiple samples, it does not provide the user with information regarding the junction coverage or known transcript models.

CONCLUSIONS
we developed manananggal, a novel tool for the visualization of alternative splicing events that comes with its own method for as detection. compared to the other tools with similar functions, manananggal provides additional features that facilitate this process . additional features tailored to specific problems are available in manananggal . these features are thoroughly explained in the user manual that also includes a tutorial section. with manananggal we provide the community with a freely available web application that can be used by non-experts and experts alike to get more information on their data.table  <dig> comparison of manananggal to other visualization methods for alternative splicing events


ain principle manananggal should also work with other organisms. some functions, such as the cross-reference table are not available for other organisms and thus users would need to use gene ids rather than symbols to query genes

the dexseq plot is an r function that could be modified to add some of the missing features




availability and requirements

project name: manananggal


project home page:
https://github.com/barannm/manananggal



operating system: web application running in any recent browser


programming language: java


other requirements: installation requires a tomcat web server where the application can be hosted


license: gnu agplv3

additional files

additional file 1: details about the algorithm behind manananggal and detailed comparisons of the method to other tools. 


additional file 2: figure s <dig>  additional figure showing the example of cd <dig> alternative splicing visualized in igv. 


additional file 3: figure s <dig>  additional figure showing the example of cd <dig> alternative splicing visualized in igv . 


additional file 4: figure s <dig>  additional figure showing the example of cd <dig> alternative splicing visualized using spliceseq. 


additional file 5: figure s <dig>  additional figure showing the example of cd <dig> alternative splicing visualized in dexseq. 




abbreviations
asalternative splicing

asealternative splicing event

ngsnext-generation-sequencing

rnaseqrnasequencing

