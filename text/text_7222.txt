BACKGROUND
a central goal in modelling genome regulation is the identification of transcription factors  and their target dna binding sites, expressed as short nucleotide sequence motif models. this goal is becoming tractable even for higher eukaryotic genomes due to the availability of annotated reference genomes for numerous organisms, large scale protein-dna interaction and gene expression studies, and advances in regulatory binding site motif inference algorithms.

computational work to infer short dna motifs has resulted in publication of literally hundreds of algorithms for approaching the problem . perhaps most important computational advances in the field of dna-motif inference are the introduction of scalable motif inference methods that can be used for de novo regulatory motif inference on a genome scale, with annotated reference genome sequences as input  <cit> , and the effective use of supporting evidence such as gene expression microarrays  <cit>  or chromatin immunoprecipitation microarray   <cit>  or chip-seq data  <cit> . several high throughput dna-protein interaction assays have also been introduced during recent years. these include bacterial one-hybrid assays  <cit>  and protein binding microarrays  <cit> .

the most widely applicable model for short regulatory motifs is the position weight matrix , originally introduced by stormo et al  <cit> . the pwm is a model for gapless position-specific probability distributions of nucleotides which assumes independence of nucleotide positions  <cit> . departures of the position independence assumption have been reported in the form of variable length linkers, interdependencies between nucleotides at different binding site positions  <cit> , and compensatory mutations that maintain the binding energy and function of binding sites  <cit> . more complex probabilistic motif models based on for instance bayesian  <cit>  and markov networks  <cit>  have been developed to fit these observations. with the exception of the newest dna-protein interaction assays which provide deep coverage of dna interactions of proteins  <cit> , parameter estimation of motif models more complex than the pwmis however hard with often scarce biological data. the pwm therefore remains the model of choice for most large scale motif inference tools: it is intuitive to interpret as a sequence logo  <cit>  and retains more of the information contained in binding site patterns than sequence word based models  <cit> .

methods have also been developed for comparing and clustering motifs. one application of clustering is to infer information about possible function, such as likely binding partners. this is especially valuable for motifs from de novo inference methods which generally do not offer a predicted function for the signals they report. one specific application of clustering methods is the labelling of motifs with the protein dna binding domain most likely to bind them. this is based on the observation that the sequence specificity of structurally related binding proteins is similar. familial binding profiles  offer one early solution  <cit> . fbps are essentially average motifs derived from multiple alignments of motifs optimised to minimise the sum of squared deviations  between aligned motif columns amongst a familial multiple alignment of pwms. fbps for common transcription factor families are available through the jaspar motif database  <cit> .

motif clustering methods however suffer from the absence of a natural distance metric between motifs; different metrics are thought to provide complementary information of motif relatedness. a χ2- based distance metric was found an effective measure by  <cit> . a metric based on pearson correlations of motif columns was also described in the same publication. clustering based on various other distance metrics was suggested and systematically evaluated by  <cit> . a sum of squared deviations based metric was found to be the best single metric in this systematic comparison of a number of distance methods. the asymptotic covariance between hits of two motifs in a sequence has also been applied as a distance measure  <cit> . the most recent motif distance metric and clustering methods are probabilistic and draw special attention to the uncertainty in motif comparison and the importance of high-information columns in measuring distances of sequence motifs: a bayesian probability distance metric between motif columns  <cit>  and a fuzzy integral based metric  <cit> . in this work we also explore a probabilistic solution for the problem of comparing motifs.

supervised learning strategies have also been applied to classify motifs and infer motifs similar to previously known motifs from novel sequences. neural networks have been applied for classification of binding sites for the purposes of motif inference by  <cit> . other notable methods include a sparse multinomial regression  based binding site sequence classification described in  <cit> , and an application of this method for motif inference; the motif inference program priority assigns an smlr- derived prior probability for each sequence position for its potential to fit a motif of a given transcription factor family  <cit> .

we present here a probabilistic model for describing motif families and measuring relatedness of sequence motifs. we show sequence motif related machine learning uses for the model. at its simplest, a metamotif can be used to summarise gapless alignments of motifs of a given length, similarly as the fbp described above. as opposed to the fbp, we however do not model the recurring patterns found amongst a related set of motifs as a single motif alignment model but allow multiple components to describe a motif family.

we model a motif family as a series of motif components  where different positions of a pwm motif can potentially map to different metamotifs. not all positions are generated from a metamotif but some are treated as noise emitted by a background model. the metamotif includes a vector of column wise mean nucleotide weights, as well as variance for each column which is not modelled for example by the fbp. in this respect a metamotif is similar to the model used by motifprototyper  <cit> : both describe familiar prototypes of pwms that are estimated probabilistically with a sequence of position specific probability distributions and can yield a bayesian prior on the weight matrix columns . in contrast to motifprototyper, the metamotif inference algorithm we developed can account for intra-motif structure such as repeating or palindromic segments by treating motifs as a series of several metamotifs and background positions.

RESULTS
a metamotif is a generative model for pwm motif columns that can be used to represent a gapless alignment of position weight matrices. for each pwm position i  there exists a dirichlet distribution in the metamotif column at position i. a metamotif is therefore a parameter configuration for a product dirichlet distribution where position i of the motif alignment model corresponds to parameters αi. more intuitively, a metamotif of length k is a probability distribution over pwm motifs of length k . sampling motifs from the metamotif is also possible . this is analogous to computing a probability score for a sequence k-mer to measure the probability of the k-mer having been generated by a pwm, and drawing k-mer samples from a pwm.

below we first describe the metamotif in detail. we then expand the use of the model beyond simply constructing metamotifs as global gapless alignment models of motif sets. this expansion is made possible by a markov chain monte carlo  metamotif inference algorithm that simultaneously estimates multiple weakly represented metamotifs from a potentially large set of motifs. illustrative examples of metamotifs are shown in figure  <dig> alongside the input motifs for which the metamotifs were estimated.

the metamotif
a metamotif α is a matrix of l columns, each defining a dirichlet distribution over ℝk where k is the size of the alphabet .   

a motif x =  is a set of column vectors over the same alphabet. the probability of observing the column xi from the metamotif α is given by the density of dirichlet distribution with parameters αi at weights xi. the normalising constant b is the multinomial beta function, expressed in equation  <dig> via the gamma function.      

the log probability of observing a motif of length l is then given by equation  <dig>    

to motivate the use of the metamotif we note that the metamotif column αi can be understood as a combination of the mean nucleotide weights  and precision  .   

we have developed a visualization for the metamotif akin to the sequence logo. our visualization presents both the mean weights  and precision α <dig> aspects of the metamotif. a sequence logo is drawn for pwm with nucleotide weights . error bars are shown to highlight 95% confidence intervals of nucleotide weights of the dirichlet density at αi for each symbol i, j .

metamotif inference by nested sampling
the metamotif can be seen as a way to summarise a gapless alignment of motifs of a certain length, to yield a probability distribution of motifs. however, our goal in designing the metamotif framework was to describe recurring patterns seen in sequence motif data deposited in public motif databases such as transfac  <cit> , jaspar  <cit>  or uniprobe  <cit> . many sequence motif families cannot be described accurately by global gapless multiple alignments of motifs at a fixed length. motifs can for example consist of shorter repetitive signals, such as in the case of the heat-shock factor  motifs , or the basic helix-loop-helix  motif family that are completely or partially palindromic due to their dimeric binding mode  <cit> . inspection of the hsf motif set shows that a global alignment of its columns does not describe the regularly spaced fivebase repeat that is observed as part of the motifs in opposing orientations   <cit> . furthermore, even non-repetitive and non-palindromic motifs present challenges for gapless multiple alignments: the span of informative columns contributing to familial patterns in publicly available pwm data is often unclear because of different signal-to-noise ratios and varying information content criteria used for calling motif ends.

we wanted to develop an inference algorithm that allows simultaneous detection of n short metamotif signals from a set of motif data, allowing for varying length for different metamotifs, and optionally free orientation . the metamotif count n is a fixed, user settable parameter to the algorithm. for metamotif inference problems where n is expected to be large, the choice for the parameter should be informed by prior information of the motif set under study, for example clustering of the motifs to estimate a rough number of recurring motif segments. each metamotif has a priori an unknown length between lmin and lmaxcolumns, and is expected to contain one or more matches in a fraction f of motifs. motifs in the framework are thought to be generated by recurring metamotif patterns, each of which is potentially shorter than any of the motifs, and background positions that model "uninteresting" sections of the motifs . the background model in the framework is the maximum likelihood  dirichlet distribution estimated from all the motif columns in the input data. it is computed with the optimisation procedure described in  <cit> .

our metamotif inference algorithm is a variant of the nestedmica nested sampling algorithm described in detail in  <cit> . nested sampling, originally introduced by  <cit> , is a generic bayesian mcmc sampling strategy that allows drawing samples from a posterior distribution and directly estimating the evidence  of the model. in brief, nested sampling operates on an ensemble of states ranked by their likelihood. the initial state of the algorithm is drawn by sampling uniformly from the prior distribution. at each iteration, the state with the lowest likelihood is removed from the ensemble and replaced with a new state whose likelihood is bounded to be higher than that of the removed state. new states are created either by drawing samples from the prior distribution of states, or by decorrelating other randomly chosen states in the ensemble.

the metamotif inference algorithm allows estimating n metamotifs for a set of p motifs, with a variable metamotif length between lmin and lmax columns, and an expected fraction f of motifs containing any one of the n metamotifs. this is analogous to the nestedmica motif inference algorithm that estimates multiple motifs with varying length from an expected fraction of nucleotide or protein sequence data. the posterior distribution being sampled is over the sets of m metamotifs and so-called mixture matrices, given the motif data and a background model for the motifs. the mixture  matrix describes the pairing between metamotifs and motifs. the term mixing matrix is a reference to the algorithm treating pattern recognition as an independent component analysis problem: a likelihood function is written for the observations  and the motif set is assumed to be generated as a mixture of independent metamotif contributions and noise represented by the background model. each element qi, j in the n × p mixing matrix q is a binary indicator of the metamotif j being present one or more times in the motif i. if the metamotif is present, qi, j =  <dig>  otherwise qi, j =  <dig>  the likelihood of the motif set given the metamotif set is simply the product of likelihoods of each individual motif given the metamotif set and the mixture matrix.

likelihood of a motif given a set of metamotifs is calculated assuming the motif is emitted by a hidden markov model  we call the multipleuncounted motif-metamotif hmm mixture model, or mumm . this formulation allows for each motif to contain multiple metamotifs simultaneously, without the need to iteratively repeat sampling after masking previously inferred signals. computing the likelihood of a motif given metamotifs under the mumm model involves completing one-dimensional dynamic programming from the beginning of the motif to column c, closely in the same form as the protein or nucleotide sequence likelihood function described in  <cit>  .   

lc represents the likelihood of all metamotif and background column arrangements  in the input motif up to the column c. m is the set of metamotifs that have a mixing coefficient of  <dig> for the motif under consideration , and |m| is the number of metamotifs that have a mixing coefficient  <dig>  the length of the metamotif α is represented by lα. bc is the probability that the motif column at position c was emitted by the background. for the motif x of length lx the transition probability t to a metamotif is defined as t = 1/lx, i.e. one metamotif is expected per motif, and any motif position is equally likely to contain a transition.  is the probability that the motif segment from i to j was emitted by a metamotif m, and it is given by the metamotif density function . a metamotif can optionally be allowed to be present on either strand to improve our ability to detect repeating  features. alternating orientation of metamotifs are achieved simply by summing the probability contributions  of the metamotif α and its reverse complement at all possible offsets.

accounting for incomplete metamotif matches in a motif is an important consideration. this is because we wish to analyse data from different experimental and computational sources where motif start or end positions have not been chosen consistently, for instance with an information content criterion. incomplete hits are accounted for by adding lmax additional "un-informative" columns in the input motifs in both the 5' and the 3' motif ends. the un-informative columns are multinomial distributions that match the mean nucleotide weights of the background model dirichlet distribution. this effectively allows all possible offsets of the metamotif that overlap the motif with at least one column, whilst associating more uncertainty to those columns supported by only a subset of the motif data.

performance of the metamotif inference algorithm was tested using synthetic motif sets where samples from known metamotifs were inserted, or "spiked". the aim was to measure the relative frequency of metamotifs at which the expected metamotifs could be recovered by the algorithm from synthetic motif data containing metamotif instances. the evaluations were done in two stages. the ability of the algorithm to infer a single metamotif presented to it was tested first. after that, several metamotifs were presented to the algorithm to assess the ability of the algorithm to infer multiple metamotifs simultaneously.

to prepare the synthetic motif sets, metamotifs were first generated of examples of three structurally diverse transfac  <dig>  pwm families: six forkhead motifs , six gata-like cys <dig> zinc finger motifs  and five mads box motifs  were used . this was done by aligning the input each of the three motif sets with a greedy gapless sequence motif multiple alignment method similar to the one utilised in stamp motif toolkit  <cit> . a metamotif was then estimated from the motif multiple alignments with the mle method from  <cit> : mle dirichlet distribution was computed for motif alignment columns , with each motif column in the alignment mapping to a mle dirichlet distribution in the resulting metamotif.

motifs  from each of the three familial metamotifs were sampled in relative frequencies of 0%, 10%, 20%,...,100%, into synthetic input motif sets . each synthetic motif set contained  <dig> motifs, each  <dig> nucleotide columns long, with a maximum of one metamotif instance allowed per input motif. the synthetic motif columns in the input motif sets are samples from a dirichlet distribution with parameters α = { <dig> ,  <dig> ,  <dig> ,  <dig> }. the metamotif sample pwms were inserted at random positions within the  <dig> nucleotide long synthetic motifs . the metamotif inference algorithm was then run on the motif set to infer a single metamotif between length ranges  <dig> and  <dig>  allowing for the signal to be present in either orientation .

metamotif inference performance was measured qualitatively with visual inspection comparing the inferred metamotifs to the known spiked metamotifs, and quantitively measuring the cartesian distance between the metamotif mean nucleotide weights. the visual comparison, cartesian distances and empirical p-values for observed metamotif-metamotif distances are presented in figure  <dig>  the evaluation shows that metamotifs can be inferred from motif sets that contain them with relative frequencies of even 10%. at a relative frequency of 40% and above all three recovered metamotifs are found to be relatively similar to the respective source metamotif , although missing columns from metamotif ends are seen up to the relative frequency of 70% in the case of the forkhead and gata motif families.

the ability to predict multiple metamotifs was demonstrated in a second evaluation experiment where instances of all the three motif families were inserted into synthetic motif sets and the algorithm was required to infer three metamotifs. it was shown that the algorithm was able to infer multiple metamotif models concurrently at a relative frequency as low as 20% .

we demonstrated use of the metamotif nested sampling algorithm in inferring familial metamotifs from known experimentally determined regulatory motifs from the transfac database  <cit> . motifs retrieved from transfac were first divided to clusters with the ssd distance metric described in  <cit>  with cutoff  <dig> . three metamotifs were then inferred from each of the resulting clusters. examples of metamotifs inferred are shown in figure  <dig>  the metamotif nested sampler algorithm was found capable of detecting several recurring patterns from the motif clusters that are clear upon visual inspection of the motifs, in addition to finding overliers from the motif sets .

our results show that the metamotif nested sampler algorithm, the first metamotif inference algorithm to be described, can discover detailed structure from motif sets. we show the algorithm is capable of correctly inferring multiple familial metamotif patterns. this makes the algorithm applicable for example for finding redundant motif patterns from large scale de novo inferred motif predictions from different algorithms, or for inferring a complete set of familial metamotifs from a set of motifs.

metamotifs as a position weight matrix prior
de novo gene regulatory motif inference algorithms commonly suffer from lack of sensitivity when applied to large collections of long eukaryotic promoter sequences, rendering it impossible to describe complete sets of regulatory motifs with sequence alone. we therefore wanted to see if prior biological knowledge in the form of familial metamotifs could be used to improve the sensitivity of a motif inference algorithm. this was motivated by the work by  <cit>  which showed familial tendencies in the motifs of sequence specific transcription factors can improve motif inference sensitivity. we therefore wanted to test if a probabilistic model of the observed spectrum of dna specificity of known transcription factor motif families expressed as a metamotif could be used to improve the sensitivity of motif inference from novel sequence.

we extended the nestedmica motif inference algorithm to accept a series of metamotifs as a position specific prior probability function for motifs. the nestedmica algorithm was chosen for the purpose as it is known to perform well in large scale motif inference tasks  <cit> , and because the previously published version of the algorithm applies an uninformative dirichlet prior probability function to motif columns , which made it straightforward to change the algorithm to take use of column-specific informative dirichlet distributions.

the prior probability of motif x given a metamotif α is taken as the sum of metamotif densities of α with all continuous motif segments contained in x that have the same length l as the metamotif . a segment of motif x refers to a motif formed from columns of the motif starting from column i and ending at position i + l -  <dig>  the prior probability of a motif given series of metamotifs is simply the sum of prior density contributions of each of the metamotifs.

to test the performance of the metamotif prior, we conducted simulation experiments following the same principle as described for the nestedmica  <cit>  and the bayesmd  <cit>  algorithms. human intronic nucleotide sequence fragments randomly chosen from the homo sapiens ensembl database release  <dig>  <cit> ) were 'spiked' with five different types of motifs. the motifs used were those of zap <dig>  hif <dig>  tbx <dig>  tal <dig> and nf-κb transcription factors. these motifs were selected because they showed little similarity with each other when aligned, and because this set contains examples of differing motif length and information content. all sequence sets used contained  <dig> sequences, and the total length of the sequence was varied between  <dig>   <dig> ..., <dig> nucleotides. the nucleotide k-mers sampled from each of the five pwms in the evaluation were inserted at a constant relative frequency of 20% of the sequences, with a maximum of one motif present per sequence. in other words, motif density was varied by inserting the motif instances to sequences of different lengths. motifs of only one kind were present in each synthetic sequence set.

motif inference with three types of prior functions were tested with the sequences: firstly a single familial metamotif contributing to the prior function was used. secondly we tested a prior function with all of the five unrelated metamotifs contributing to the prior, with instances of only one motif family being actually present represented in the sequences. thirdly, we used an uninformative pwm prior similar to the previously published nestedmica version  <dig> . in each of the motif inference runs, the longest sequence length at which the algorithm infers the correct motif of interest is reported as a measure of sensitivity , with motif comparison pvalues computed as described in  <cit> . in all cases, five motifs were inferred from the sequences . the sequence background model used in all evaluations of the algorithm was a 4-class 1st order trained from the  <dig> nt long intronic sequences with nmmakebg.

the source motifs  were transformed to metamotifs to be used in the metamotif prior function by applying a pseudocount of  <dig>  to the motif column weights, and interpreting the resulting motif nucleotide weights as mean nucleotide weights in dirichlet distributions with precision set at  <dig>  . the metamotif priors used in the prior function evaluation were constructed from known pwms with a set precision and pseudocounts to test the most common hypothesis testing use of a motif prior function: user is aware of a set of potentially relevant motifs or consensus strings present in a sequence set and wants to inform the algorithm of them to increase sensitivity.

the informative motif prior function was shown to dramatically improve the capacity of the nested-mica algorithm to resolve weakly represented sequence motifs presented to it in longer nucleotide sequences, especially those with larger number of columns and higher information content . both the baseline motif inference sensitivity and the effect of the informative weight matrix prior was seen to vary based on the length  of the motifs, ranging from as high as fourfold difference in the motif recovery length for tal <dig> and nfkappa-β, to only a 1/ <dig> improvement from  <dig> bp to  <dig> bp sequence between the uninformative and the 'single' informative metamotif prior for the tbx <dig> motif. sensitivity to infer all but the tbx <dig> motif showed improvement with the combinatorial metamotif prior over the uninformative prior, with the effect less pronounced than when the prior function only contained a contribution from the correct metamotif. these results suggest that the metamotif prior is performing as hoped, and multiple metamotifs can be combined to a 'combination metamotif prior function' to detect motifs where information is available of candidate motifs.

we wanted to ensure that the metamotif prior did not have the propensity to bias motif inference to an incorrect solution, i.e. that it does not encourage the inference of a motif not supported by the sequence data. we tested this by spiking intronic sequence with the nf-κb motif, and using the zap1-like metamotif in the prior function. no motifs similar to zap <dig>  were recovered from the spiked intronic sequence between lengths  <dig> and  <dig> , indicating that the metamotif prior function does not have an adverse effect on inference specificity. a number of other combinations of spiked motifs and inaccurate informative metamotif prior functions were also tested, with no observed tendency for the algorithm to infer a motif that not supported by the sequence data .

the metamotif prior extension to the nested-mica algorithm is designed to function with any number of metamotif models, input pwms or iupac consensus sequences. pwms are treated as metamotif priors by interpreting its columns i as the  of a metamotif and applying a constant precision α <dig> to all columns of the metamotif. iupac consensus sequences are first transformed to pwms by applying pseudocounts and then transformed similarly as pwms. metamotifs inferred with our framework could also be applied to other bayesian motif inference algorithms which model a prior distribution over motif columns. metamotifs could therefore be useful in building large or even complete regulatory binding site motif libraries for novel genomes.

predicting regulatory motif type with metamotifs
the metamotif is shown above to improve motif inference sensitivity dramatically when used as a bayesian pwm prior. we however also wanted to test if metamotifs could be used to form functional predictions for novel motifs based on a database of previously known motifs. we developed a motif classification tool for the purpose, termed metamatti, for metamotif based automated transcription factor type inference.

the principle of our motif classifier is to compute the density function  of a large dictionary of familial metamotifs along the length of training set motifs, effectively "scanning" weight matrices with metamotifs. the optimal  and average metamotif densities of each metamotif with the motif are then extracted as features in a random forest classifier that tries to infer the transfac superfamily  or transfac family  of the motifs. random forest classification was chosen as the machine learning framework because it generalises naturally to multi-class problems and provides unbiased classification error estimates as part of model training  <cit> . the framework also automatically controls the sparsity of the feature set that contributes to the classification. the full list of feature types used in the metamatti classifier are shown in table  <dig> 

all motif families with at least  <dig> representatives were retrieved from the transfac  <dig>  database  <cit> , totalling  <dig> motifs of  <dig> domain families. for the motif domain superfamily classifier comparison made with motifprototyper  <cit>  , the set of motifs was reduced further to include only motifs annotated in transfac with the four superfamilies classified in  <cit> . similarly, for the motif family classification comparison with smlr  <cit>  , only motifs of the same six major classes classified in  <cit>  were included in our training set.

most features in the classifier are metamotif probability density scores of the training set motifs with metamotifs trained from motifs of each of the motif families. to compute the density features, we chose to first divide the motifs of each family into smaller clusters by complete linkage hierarchical clustering them with the ssd metric described in  <cit>  and cutting the clusters at a lenient clustering cutoff of  <dig> , resulting in  <dig> motif clusters. three metamotifs were trained from each motif cluster with nmmetainfer, resulting in  <dig> metamotifs to be used in the motif classifier . metamotif length was constrained between  <dig> and  <dig> columns, and the expected usage fraction was set at  <dig> .

motif classification performance of metamatti was compared to two methods with a related goal: motifprototyper  <cit>  which classifies motifs into four transfac superfamilies , and smlr which classifies motifs into six major classes of tf domains   <cit> .

classification accuracy comparison shows that metamatti outperforms motifprototyper  <cit>   across all motif superfamilies. there are several possible reasons for the difference in performance. firstly, the metamotif inference algorithm is not constrained to a fixed motif family model column count, unlike the algorithm utilised in motifprototyper. secondly, training several metamotifs per motif family, metamatti also accounts for the fact that not all columns in motif families can be accurately expressed as a single column wise probability distribution. instead, recurring patterns in a motif set can be generated by multiple potentially shorter familial metamotif components in our model. thirdly, the metamotif estimation algorithm treats some motif columns as noise with a column background model, improving our capacity to find the recurring patterns from sequence motif sets and reducing over-fitting of familial models due to reporting weak or nonexistent recurring trends.

motif family level classification was conducted with the same subset of transfac  <dig>  pwms that were classified with smlr by narlikar and hartemink  <cit> . the overall classification accuracy comparison shows that metamatti has a marginally improved performance at  <dig> % classification accuracy over the 87% reported for smlr. however, the class-by-class accuracy figures  and the confusion matrix of the 6-way transfac motif family classifier  make it evident that the higher classification accuracy comes at the cost of a 14% drop in the classification accuracy of the bhlh family . the e-box motif caggtg appears to be the most common type misclassified in the erroneous bhlh motif cases. inspection of motif family assignments in the transfac database shows that closely similar motifs with the caggtg consensus have been annotated with all of bhlh and c2h <dig> zinc finger families. in fact it has been proposed that certain bhlh and snail-like c2h <dig> like factors are thought to bind with closely similar specificities to compete for the same binding site positions  <cit> , highlighting a general limitation of a sequence pwm feature based motif family classification methods.

clustering of the motifs and training metamotifs from motif clusters was motivated by the requirement to choose a value for the metamotif count parameter of the metamotif inference algorithm, and to limit the metamotif search space. inspection of clusters at cut off  <dig>  showed no clusters with more than three strongly distinct recurring patterns. although for many motif clusters there were clearly less than three distinct recurring metamotif patterns present at the clustering cutoff of  <dig> , the metamotif inference algorithm was found to treat these cases by either inferring closely similar duplicate metamotifs  or short metamotifs with mean nucleotide weights with low information content, or occasionally splitting the metamotif segments in several independent parts. this suggested to us that that together with a sparse machine learning strategy such as a random forests, it would be advantageous to choose a high metamotif count that described the input motif set in as much detail as possible, with the price of some potentially redundant features in the feature set . we validated this assumption by retraining the classifier with two metamotifs per cluster . the classifier trained with two metamotifs per family resulted in a mild decrease in the classification accuracy , suggesting that the additional metamotifs were indeed informative.

we also wanted to assess the significance of the metamotif density score in the metamatti classifier by comparing it to a more naive classifier where we replace the metamotif average and maximum scores with average and maximum ssd distances computed between the training set motifs and 'average motifs' of each of the motif family, instead of scoring training set motifs with familial metamotif density average and maximum scores. the average motifs we used in the more naive classifier were the mean pwms of the metamotifs trained with nmmetainfer were used for classification by scoring the training set motifs with an ssd distance metric with each of the metamotifs. we found that the classifier accuracy achieved with the ssd metric was lower to the metamotif density based classifier by  <dig> % , suggesting that both the metamotif mean and the column wise precision values which contribute to the metamotif density scores are partially responsible for metamatti's high performance. furthermore, we tested training a classifier with cluster average motifs instead of the metamotif segments, resulting in an accuracy figure of  <dig> %, suggesting that not only is the metamotif density a suitable score, but that the motif segments identified by the metamotif inference algorithm provide a classifier that generalises better than simply using average motifs inferred by clustering and collapsing clustered motifs to an average representation.

independent validation of the transfac family prediction of motifs
previous motif classification work has relied on separating training and testing data from a single public database using cross-validation  <cit> , where most motifs originate from individual studies and therefore different experimental sources. recent advances in protein-dna interaction assaying have however resulted in several large high-throughput regulatory motif data sets becoming publicly available. we therefore wanted to assess the performance of metamatti with two homeodomain motif sets recovered from different species and via different experimental methods: mus musculus protein binding microarray motifs  <cit>  and drosophila melanogaster bacterial one-hybrid motifs  <cit> . this evaluation also allowed us to compare the classification accuracy achieved with the two independent datasets to the accuracy expected based on the out of bag classification error estimate of the metamatti random forest classifier training for the homeodomain motif family.

we trained a metamatti classifier with all  <dig> motif families present in the transfac  <dig>  with at least  <dig> examples per family  for evaluating classification of the two homeodomain motif datasets. the accuracy reported for both drosophila melanogaster and mus musculus datasets was the fraction of motifs labelled as homeodomain instead of any of the  <dig> incorrect labels.

the classification accuracy rates for both homeodomain motif sets were shown to be high, and in good agreement with the out-of-bag accuracy estimate of  <dig> % reported by the metamatti random classifier during classifier training:  <dig> % and  <dig> % of the homeodomain motifs in the berger et al.  and noyes et al.  sets were correctly classified, respectively. we studied the misclassified examples from the drosophila melanogaster homeodomain datasets in more detail to see where the misclassified motifs lie in the homeodomain specificity group clustering presented in  <cit> . interestingly, the misclassifications were shown to be atypical homeodomains which do not contain the canonical taatta core and fall amongst the smaller specificity groups described in  <cit> . the misclassified motifs included three tgif-exd-like motifs , two iroquis-like , one six-like  and an outlier from the specificity group clustering . a similar trend of non-canonical homeodomains being primarily amongst the misclassified was also noted for the mus musculus homeodomain motifs . this is most likely explained by atypical homeodomain motifs not being well covered well by the transfac  <dig>  training set; no closely matching homeodomain motifs were observed in transfac  <dig>  to many of the misclassified motifs.

we also wanted to test if a metamatti-like classifier could be trained to detect more detailed differences between motif groups than motif family or superfamily. we therefore labelled the drosophila melanogaster homeodomain motifs with the homeodomain specificity groups suggested by the noyes et al.  and estimated a single metamotif with nmmetainfer from each of the  <dig> specificity groups. we then trained a metamatti classifier with these metamotifs similarly as described above for the motif family and superfamily classifiers. we observed the remarkably high accuracy of 84% , when all noyes et al.  homeodomain motifs with  <dig> or more examples per specificity group were included in the classification . the applicability of supervised machine learning strategies that aim to learn motif type labels more precise than the dna binding domain family are however currently limited by the amount of available training data. for instance, the  <dig> motifs in the noyes et al.  dataset contain examples of  <dig> specificity groups which are very biased to the two largest groups , with several specificity groups containing as few as two to four examples . this makes classifier error estimation imprecise especially for the weakly represented classes, and results in the major classes which have as much as eightfold as many examples present in the training dataset to have considerable weight in predictions over the smaller classes . methods like metamatti can however become increasingly relevant once more high-throughput tf dna specificity data becomes available.

confusion matrix showing the metamatti predicted classifications of the noyes et al.  homeodomain motif data. all classes with at least three representative examples were included in the classification .

CONCLUSIONS
we present a novel motif family model, the metamotif. we show its use as an informative prior in a motif discovery algorithm, and describe a motif classification method based on metamotif density features. we find that the method compares favourably to previously published related methods. its performance with two novel experimental tfbs motif datasets is also found consistent with expected error estimates. the metamotif inference and visualisation tools are made openly available as part of the nestedmica motif inference suite, and the interactive motif inference analysis environment imotifs  <cit> . we also introduce a visual representation for the metamotif akin the sequence logo, which presents the metamotif as an average motif with confidence intervals for symbol weights.

we envisage that the metamotif will have further machine learning related uses in addition to the bayesian prior and motif family classification method we present. large scale computational motif inference frameworks especially could benefit from metamotif driven semi-supervised methods to either effectively estimate complete motif sets from novel sequence sets, or on the contrary to discriminatively infer motifs that do not not closely match known sequence motifs. further large-scale profiling of eukaryotic transcription factor dna specificity could also dramatically extend the data available for training metamatti-like motif classifiers that infer motif type labels, to allow more fine grained classification than the binding domain family or superfamily classification described in this work.

