BACKGROUND
due to limited existing biological knowledge at the molecular level, clustering has become a popular and effective method to extract information from genomic data. genomic data clustering may help to discover novel functional gene groups, gene regulation networks, phenotypes/sub-phenotypes, and developmental/morphological relationships among phenotypes  <cit> . due to the complex and challenging nature of the task, various clustering algorithms have been applied in genomic data analysis  <cit> , including statistical, model-based methods  <cit> , "nonparametric" graph-theoretic approaches  <cit> , stability analysis based consensus clustering  <cit> , agglomerative/divisive hierarchical clustering  <cit> , and partitional methods, such as self-organizing maps   <cit>  and k-means clustering   <cit> . the assignment of data points to clusters can also be either hard  or soft , the latter achieved by fuzzy clustering  <cit>  and mixture modeling  <cit> .

while there is a rich variety of existing methods, unfortunately when clustering genomic data, most of them suffer from several major limitations, which we summarize as follows.  clustering methods such as kmc and mixture model fitting are sensitive to the quality of model initialization and may converge to poor local optima of the objective function, which will yield inaccurate clustering outcomes, especially when applied to genomic datasets that have high dimensionality and small sample size  <cit> .  stability/reproducibility of clustering outcomes is also a critical issue  <cit> . some clustering methods, such as hc, may not give reproducible clustering outcomes in the presence of small dataset perturbations, additive noise, or outliers  <cit> .  for statistical, model-based approaches, traditional information-theoretic model selection criteria, such as minimum description length   <cit> , may grossly fail in estimating the cluster number due to inaccurate parameter estimation resulting from the "curse of dimensionality" or due to too many freely adjustable parameters  <cit> . as one alternative solution, stability analysis has been applied for model selection  <cit> .  unsupervised informative gene selection for sample clustering is a critical, difficult problem due to the existence of many irrelevant genes respective to the phenotypes/sub-phenotypes of interest  <cit> . existing iterative algorithms wrapping gene selection around sample clustering were developed and tested for the two-cluster case  <cit> . more research effort targeting multi-cluster unsupervised gene selection is needed.  confounding variables produce clustering structure that may not be associated with the biological processes of interest. effective removal or compensation for confounding influences still requires further research efforts  <cit> .  most clustering algorithms do not utilize prior knowledge, although some semi-supervised clustering methods do exploit gene annotations to help construct gene clusters  <cit> . besides database knowledge, the user's domain knowledge and human intelligence assisted by data visualization can also help to produce accurate and meaningful clustering outcomes for practical tasks  <cit> . for example, hierarchical data visualization schemes based on mixture models with human-data interaction were developed  <cit> .  many clustering algorithms have a non-adaptive nature, without a mechanism for incorporating and taking advantage of results from other methods or user knowledge. these algorithms may fail badly without a "backup plan" when the algorithm's underlying statistical or geometric cluster assumptions are violated. 

to address some of the existing methods' limitations outlined above and design a comprehensive and flexible clustering tool effectively applicable to cluster modeling, visualization, and discovery on genomic data, we developed a hierarchical data exploration and clustering approach, the visual statistical data analyzer . visda performs progressive, divisive hierarchical clustering and visualization, supported by hierarchical mixture modeling, supervised/unsupervised informative gene selection, supervised/unsupervised data projection, and user/prior knowledge guidance, to discover hidden clusters within complex, high-dimensional genomic data. the data exploration process in visda starts from the top level where the whole dataset is viewed as a cluster, with clusters then hierarchically subdivided in successive layers until all salient structure in the data is revealed. since a single 2-d data projection, even if it is nonlinear, may be insufficient for revealing all cluster structures in multimodal, high dimensional data, the hierarchical visualization and clustering scheme of visda uses multiple local projection subspaces  and consequent subspace data modeling to reveal both global and local cluster structures. consistent with the "divide and conquer" principle, each local data projection and modeling can be fulfilled with relatively simple method/model, while the complete hierarchy maintains overall flexibility and conveys considerable clustering information.

the inclusive visda framework readily incorporates the advantages of various complementary data clustering and visualization algorithms to visualize the obtained clusters, which not only give a "transparent" clustering process that can enhance the user's understanding of the data structure, but also provide an interface to incorporate human intelligence  and domain knowledge to help improve clustering accuracy and avoid finding nonmeaningful or confounding cluster structure. specifically, the interactive user participation guides the coarse-to-fine cluster discover via  the selection of a local visualization, from a suite of data projections, each sensitive to a distinct type of data structure, for best revealing a cluster's substructure;  user-directed parameter initialization for the new sub-clusters that divide existing clusters;  user-guided model order selection, applied in conjunction with mdl, for deciding the number of sub-clusters in the local visualization space.

based on its complementary building blocks and flexible functionality, visda is comprehensively suitable for multiple genomic data clustering tasks, including gene clustering, sample clustering, and phenotype clustering , albeit with customized modifications for each of these tasks. specifically, visda's sample clustering requires dimensionality reduction via unsupervised informative gene selection, whereas the phenotype clustering algorithm exploits the knowledge of phenotype labels in performing supervised informative gene selection, supervised data visualization, and statistical modeling that preserves the unity of samples from the same phenotype, which fulfils that in phenotype clustering known phenotypes, i.e. groups of samples with the same phenotype label, are taken as data objects to be clustered. an important goal of phenotype clustering is to discover a tree of phenotypes , i.e. a hierarchical tree structure with all phenotypes as leaves of the tree, which may reflect important biological relationships among the phenotypes.

in this paper, we show that visda gives stable and improved clustering accuracy compared to several benchmark clustering methods, i.e. conventional agglomerative hierarchical clustering   <cit> , kmc  <cit> , som  <cit> , and standard finite normal mixtures  fitting  <cit> . its model order selection scheme is also shown to be effective on high dimensional data clustering. visda detects critical co-expressed gene clusters associated with specific genomic functions or gene regulation networks in muscular dystrophy and muscle regeneration studies. it also captures the pathological relationships between phenotypes reflected at the mrna level, through phenotype clustering on muscular dystrophy data and multi-category cancer data. visda is a toolkit of cabig™  <cit>  and has been successfully applied on several biomedical research projects  <cit> . the open source cabig™ visda software package is free available at . matlab code implementing a full functional version is free available at .

methods
in this section, we first introduce the main steps of visda algorithm that directly describe the complete visda processing for the task of gene clustering. next, we extend the algorithm to work on sample clustering by adding unsupervised informative gene selection as a data pre-processing step. finally, we extend the algorithm for phenotype clustering by incorporating a cluster visualization and decomposition scheme that explicitly utilizes the phenotype category information.

visda algorithm
let t = {t <dig>  t <dig> ..., tn|ti ∈ rp, i =  <dig>   <dig> ..., n} denote n p-dimensional data points to be clustered. based on a hierarchical sfnm model, visda performs top-down divisive clustering as outlined in figure  <dig>  major blocks in the flowchart are introduced in the following subsections. suppose that the hierarchical exploration has already proceeded to the lth level, i.e. kl clusters have already been detected at level l and the posterior probability of data point xi belonging to cluster k  is zi, k.

visualization of cluster k by complementary structure-preserving projections
for cluster k, visda projects the given cluster onto 2-d spaces by five projection methods preserving different data structures associated with distinct types of sub-cluster tendency.

 principal component analysis   <cit> . sub-cluster structure is consistent with variation within the cluster. pca does an eigenvalue decomposition of the cluster's covariance matrix. the pca projection uses the eigenvectors associated with the largest two eigenvalues as the projection directions. measured by second order statistics, the pca projection preserves the largest variation within the cluster.

 principal component analysis – projection pursuit method   <cit> . although sub-cluster structure will surely impart variation within the cluster, the directions of largest variation will not always best reveal the sub-cluster structure  <cit> . projection pursuit calculates the kurtosis of the projected data distribution on each of the eigenvectors obtained by pca. if kurtosis is large, the projected data distribution presents a single sharp peak, which indicates no sub-cluster structure  <cit> . pca-ppm projection selects the two eigenvectors whose associated kurtoses are smallest as projection directions.

 locality preserving projection   <cit> . in lpp, the projection directions are obtained by minimizing a compactness cost function, which is a weighted summation of the pair-wise square distances between points in the projection space. the square distances between neighboring points are given large weights while the square distances between far apart points are given small weights. thus the minimization emphasizes keeping the neighboring data points close in the projection space to preserve the local data structure. the minimization is achieved by the generalized eigenvalue decomposition  <cit> . the eigenvectors are orthogonalized by the gram-schmidt process  <cit>  to form an affine projection matrix.

 hc-kmc-sfnm-dca  <cit> . dca refers to discriminatory component analysis, a supervised mode projection  method aiming to preserve as much as possible the discrimination/separability between known classes  <cit> . the main idea behind hc-kmc-sfnm-dca is to use an unsupervised clustering method to obtain a partition of the data and then use dca as a visual validation of partition separability. if a partition of the data is indeed consistent with the sub-cluster structure, the consequent dca projection will show distinct sub-clusters. the first three steps in hc-kmc-sfnm-dca sequentially execute hc, kmc and sfnm fitting, and use the clustering result of the previous step to initialize the next one. when performing hc, the user chooses a distance threshold to cut the cluster into sub-clusters on the dendrogram, which initializes sub-clusters and determines the sub-cluster number. after obtaining the partition, we take the obtained sub-clusters as known classes and use dca to present the separability among them. dca here maximizes the weight fisher criterion  <cit> , which is a modified version of the fisher criterion that is the trace of the multiplication of the inversed within-class scatter matrix and the between-class scatter matrix in the projection space  <cit> . compared to the fisher criterion, the weighted fisher criterion weights the class pairs in the between-class scatter matrix, thus confines the influence of class pairs that are well-separated, and emphasizes the class pairs that are overlapped to improve over-all separation of the classes  <cit> . the maximization of the weighted fisher criterion is achieved through eigenvalue decomposition and the two eigenvectors with the largest eigenvalues are orthogonalized by the gram-schmidt process  <cit>  to form an affine projection matrix. please see section  <dig> . <dig> of additional file  <dig> for formulas of maximizing the weighted fisher criterion.

 affinity propagation clustering – discriminatory component analysis   <cit> . similar to hc-kmc-sfnm-dca, apc-dca follows the idea of using dca to evaluate/confirm partitions learned in an unsupervised manner, but based on a different clustering procedure. by viewing each data point as a node in a network, apc recursively transmits along edges of the network real-valued messages, whose magnitudes reflect the current affinity that one data point has for choosing another data point as its sub-cluster center, until a good set of sub-cluster centers and corresponding sub-clusters emerges  <cit> . the messages are updated to search for minima of the cost function, which is the sum of dissimilarities between data points and their sub-cluster centers. it was shown that the affinity propagation method finds the best solution amongst those in a particularly large proximal region in the solution space  <cit> .

in each of the five projection methods, after the projection matrix wk for cluster k is determined, the data projection is achieved by

  xi=wkt, 

where xi is the image of data point i in the projection space, and μt, k is the mean of cluster k in the original data space. the subscript 't' indicates that these parameters model the data in the high-dimensional original data space. each point is displayed with an intensity proportional to the posterior probability zi, k . available prior/domain information about the data is also provided to the user via additional user interface. for gene clustering, prior information can be gene annotations, such as gene id and the functional category. for sample clustering, prior information can be array annotations, such as the experimental condition under which the array was generated.

each of these five projection methods preserves different yet complementary data structure associated with a distinct type of sub-cluster tendency. pca preserves directions with largest variation in the data. pca-ppm moderates pca to consider projection directions on which the projected data have flat distributions or distributions with thick tails. lpp preserves the neighborhood structure of the data. hc-kmc-sfnm-dca and apc-dca directly target presenting discrimination among sub-clusters via different unsupervised partition approaches. hc-kmc-sfnm partitioning is model-based and allows the user to determine the sub-cluster number, while apc partitioning is nonparametric and automatically determines the sub-cluster number. because each projection method has its own, distinct theoretical or experimental assumption of data structure associated with sub-clusters, while whether the underlying sub-clusters of interest are consistent with these assumptions is data/application dependent, using all of them simultaneously increases the likelihood that sub-clusters of interest are revealed.

after inspecting all five projections, the user is asked to select one projection that best reveals the sub-cluster structure as the final visualization. human interaction in choosing the best projection  provides an interface to incorporate human discernment and domain knowledge in cluster visualization, which gives potential to avoid confounding, irrelevant, and uninteresting substructures. the selection of a suitable/good projection is data/application dependent. several guidelines based on human discernment and prior knowledge are as follows:  select a projection in which the sub-clusters are well-separated and show clear sub-cluster structure.  select a projection in which no sub-clusters are simply composed of several outliers.  select a projection that does not oppose prior knowledge, i.e. if the user is certain about the relationship between some genes/samples under the particular experimental condition that produced the data, he/she can choose a projection that favours this relationship. in addition, when the data size is pretty large, pca and pca-ppm may be preferred over hc-kmc-sfnm-dca, lpp, and apc-dca, because the latter three projection algorithms have much higher computational complexity. more details, discussion, and empirical understanding of these projections can be found in section  <dig> . <dig> of additional file  <dig> 

decomposition of cluster k in its visualization space based on the hierarchical sfnm model
we use the two-level hierarchical sfnm model to present the relationship between the lth and the l + 1th levels of visda's hierarchical exploration. the probability density function for a two-level hierarchical sfnm model is formulated as:

  f=∑k=1klπk∑j=1kk,l+1πj|k g)∑k=1klπk=1∑j=1kk,l+1πj|k= <dig>  

where kk, l+ <dig> sub-clusters exist at level l +  <dig> for each cluster k at level l, πk is the mixing proportion for cluster k at level l, πj|k is the mixing proportion for sub-cluster j within cluster k, g is the gaussian probability density function, and θt,  are the associated parameters of sub-cluster j. we focus on the decomposition of cluster k in its visualization space. to achieve this, we maximize the expectation of the conditional log-likelihood of the sub-cluster model, i.e.

  l=∑i=1nzi,kln⁡)), 

where x = {x <dig>  x <dig> ..., xn|xi ∈ r <dig>  i =  <dig>   <dig> ..., n} are the projected points in the visualization space, subscript 'x' indicates these parameters model data in the visualization space, and θx,  are the associated parameters of sub-cluster j. equation  is a weighted log-likelihood, which can be maximized or locally maximized by the expectation maximization  algorithm  <cit> . the em algorithm performs the e-step and m-step iteratively until convergence. the e-step and m-step for training the hierarchical sfnm model are given by

  e step:zi,=zi,kπj|k g,Σx,)∑j=1kk,l+1πj|k g,Σx,)m step:πj|k=∑i=1nzi,/∑i=1nzi,k,μx,=∑i=1nzi,xi/∑i=1nzi,Σx,=∑i=1nzi,))t/∑i=1nzi,, 

where zi,  is the posterior probability of data point xi belonging to the jth sub-cluster in cluster k, μx,  and Σx,  are the mean and covariance matrix of sub-cluster j in cluster k. this training process decomposes cluster k by keeping the data point's posterior probability of belonging to cluster k unchanged and adjusting its conditional posterior probabilities of belonging to the lower level sub-clusters. for details and derivations of the model and the algorithm, please see section  <dig> . <dig> of additional file  <dig> 

to get an accurate and biologically meaningful initialization of the model parameters, which is a key factor for obtaining a good clustering result, visda utilizes human initialization of sub-cluster means in the visualization space. the user pinpoints on the visualization screen where he/she thinks the sub-cluster means should be, according to his/her discernment of the sub-cluster structure and domain knowledge. this initialization gives the potential to avoid learning uninteresting or biologically irrelevant substructures. for example, if a sub-cluster has several outliers, the user will most likely initialize the sub-cluster mean on the "main body" of the sub-cluster but not on the outliers.

models with different numbers of sub-clusters are initialized by the user and trained by the em algorithm. the obtained partitions of all the models are displayed to the user as a reference for model selection. the mdl criterion is also utilized as a theoretical validation for model selection  <cit> . when the data size is small, the classical mdl model selection with gaussian distributions has the tendency to select complex models in low dimensional space  <cit> . based on our experimental experience and reference to  <cit> , we use a modified formula to calculate the description length given by

  −l+ka×nk×ln⁡2nk=∑i=1nzi,kka=6kk,l+1− <dig>  

where ka and nk are the number of freely adjustable parameters and the effective number of data points in the cluster, respectively, and l is given in equation . this modified mdl formula not only eases the trend to overestimate the sub-cluster number when the data size is small, but also is asymptotically consistent with the classical mdl formula introduced in section  <dig> . <dig> of additional file  <dig>  to fully take advantage of human intelligence and domain knowledge, the user is allowed to override the mdl model selection by specifying a sub-cluster number based on his/her inspection of all the partitions resulting from models with different number of sub-clusters. again, this offers an opportunity to incorporate human intelligence and domain knowledge in the clustering process. for example, in gene clustering, the user can choose a model in which genes known to be co-regulated and co-expressed in the particular experiment fall in the same sub-cluster, even although the model's description length may not be the smallest, or the user can refuse a model with sub-clusters formed by a few outliers.

initialization and training of the full dimensional model
each sub-cluster in the chosen model corresponds to a new cluster at the l + 1th level of the hierarchical exploration. the parameters of the sub-clusters in all the selected models of lth level are transformed from the visualization spaces back to the original data space. this transform is achieved by

  μt,=wkμx,+μt,kΣt,=wkΣx,wkt, 

where μt,  and Σt,  are the mean and covariance matrix for the jth sub-cluster of cluster k in the original data space, and wk is the projection matrix for cluster k, as introduced in equation . obviously, these transformed parameters may not accurately describe the full dimensional distribution. from equation , we can see that the two-level hierarchical sfnm model can be written in the form of a standard sfnm model simply by putting πk inside the second summation, giving a mixture with components indexed by  and mass πkπj|k. thus we can use the transformed parameters as initialization for the sfnm model in the original data space and then further train this model using the em algorithm to refine the parameters. formulas for the sfnm model and the corresponding em algorithm are given in section  <dig> . <dig> of additional file  <dig>  when this training finishes, the l + 1th level in the exploration hierarchy is generated. if no new clusters are detected at level l+ <dig> compared to level l, or if the user believes all interesting cluster structure has been detected, the algorithm ends.

algorithm extension for sample clustering
the main clustering and visualization algorithm introduced above is directly applicable for gene clustering, which is a "data-sufficient" case due to the large ratio of gene number to sample number. sample clustering is usually a "data-insufficient" case that suffers from the "curse of dimensionality", because in sample clustering the number of data objects to be clustered is much smaller than the data dimensionality. many of the genes are actually irrelevant respective to the phenotypes/sub-phenotypes of interest  <cit> . thus we perform unsupervised informative gene selection as a preprocessing step before we use the above algorithm to cluster the samples. non-informative genes can be divided into two categories.  irrelevant genes, i.e. those which do not respond to the physiological event. these genes are normally constantly expressed over the experimental conditions.  non-discriminative genes, i.e. ones that do not contribute to cluster structure.

two variation criteria, the variance and the absolute difference between the minimum and maximum gene expression values across all the samples, can be used to identify and then remove constantly expressed genes. for each criterion, a rank of all the genes is obtained, with genes of large variation ranked at the top.

discrimination power analysis measures each gene's individual ability both to elicit and to discriminate clusters/components. these components are generated by fitting a 1-d sfnm model to the gene's expression values using the em algorithm. to determine the component number, we followed the iterative procedure in  <cit> . the 1-d sfnm model is initialized with a high model order , with randomly chosen means and uniform variances. in each iteration, we  trial-delete each component and rerun the fitting algorithm. the component whose removal yields minimum description length will be permanently removed. this iterative process ends when only one component remains, and the component number is determined by the mdl principle via comparing the description lengths of solutions in the sequence. once the sfnm models are trained, genes with a single component are removed, because they do not support any cluster structure. for the other genes, the accuracy in classifying samples to components resulting from applying the maximum a posteriori probability  rule quantifies the gene's discrimination power. the map rule assigns a sample to the component that it most likely belongs to, evaluated by the posterior probability learned through the sfnm fitting. thus, a rank of genes according to their discrimination power can be constructed.

based on the variation ranks and the discrimination power rank, a list of genes with large variations and large discrimination power can be obtained by taking the intersection of the top parts of the ranks. further details about these three gene ranking schemes can be found in section  <dig>  of additional file  <dig> 

algorithm extension for phenotype clustering
as an extension of the main clustering and visualization algorithm, phenotype clustering follows a similar hierarchical, interactive exploration process, shown in figure  <dig>  since the phenotype categories are known, cluster visualization and decomposition can exploit this information, which leads to the modified visualization and decomposition scheme indicated by the green blocks with dashed borders in figure  <dig>  suppose that the exploration process has proceeded to the lth level with kl phenotype clusters, each of which contains all the samples from one or multiple phenotypes. for phenotype cluster k , if it contains only one phenotype, we do not need to decompose it; if it contains two phenotypes, we simply split the cluster into two sub-clusters, each containing the samples of one phenotype; if it contains more than two phenotypes, we do the following to visualize and decompose it. let qk and n denote the number of phenotypes in cluster k and the number of samples from the qth phenotype in cluster k, respectively.

visualization of cluster k from a locally discriminative gene subspace
we first use supervised discriminative gene selection to form a locally discriminative gene subspace respective to the phenotype categories in the cluster. the locally discriminative gene subspace contains the most discriminative genes, where the discrimination power of a gene is measured by

  2)/,andrq=n/∑q=1qkn, 

where rq is the sample proportion of phenotype q in cluster k, μq and σ q are the mean and standard deviation of the gene's expression values in phenotype q. the number of genes in this gene subspace is qkng, where ng is the number of selected genes per phenotype, an input parameter of the algorithm. we use discriminatory component analysis  to project the samples from the gene subspace onto a 2-d visualization space. because an important outcome of phenotype clustering is the relative relationships among the phenotypes that are estimated directly based on the relative distances between samples of different phenotypes, to preserve the original and undistorted data structure, dca here maximizes the fisher criterion that treats all the phenotype pairs equally. the fisher criterion is calculated based on the known phenotype categories. maximization of the fisher criterion is achieved by eigenvalue decomposition and the projection matrix is obtained by orthogonalizing the eigenvectors associated with the largest two eigenvalues  <cit> . when the samples are projected onto the visualization space, prior information in the form of phenotype labels of samples are also provided to the user. for further details and formulas, please see section  <dig> . <dig> of additional file  <dig> 

decomposition of cluster k in its visualization space based on the class-pooled finite normal mixture model
phenotype clustering differs from sample/gene clustering in that it assigns a cluster label to each phenotype in its entirety , not to each sample/gene. based on this difference, we use a class-pooled finite normal mixture to model the projected samples in the visualization space. let {x,..., x,..., x} denote the projected phenotypes, where x = {xi, i =  <dig>   <dig> ..., n} is the set of samples from phenotype q. the probability density function for all samples from phenotype q is

  f|θx,π)=∑j=1kk,l+1πj∏i=1ng|θx,j)and∑j=1kk,l+1πj= <dig>  

where cluster k at level l is decomposed into kk, l+ <dig> sub-clusters at level l +  <dig>  πj and θx, j are the mixing proportion and parameters associated with sub-cluster j. the model parameters are learned by the em algorithm using the formulas introduced in section  <dig> . <dig> of additional file  <dig> 

similar to sample/gene clustering, the user is asked to initialize the sub-cluster means by pinpointing them on the visualization screen according to his/her understanding about the data structure and domain knowledge. models with different numbers of sub-clusters are initialized by the user, and trained by the em algorithm. the resulting partitions are shown to the user for comparison. the mdl model selection criterion is also applied for theoretical validation. details and formulas of mdl model selection can be found in section  <dig> . <dig> of additional file  <dig>  the user can override the mdl model selection by specifying the number of sub-clusters according to his/her justification and domain knowledge. once the best model is selected, the phenotypes are assigned to sub-clusters using the map rule.

after visualizing and decomposing the clusters at level l, all the sub-clusters become clusters at level l +  <dig>  thus the hierarchical exploration process proceeds to the l + 1th level. if all the clusters at the l + 1th level contain a single phenotype, the algorithm ends.

a demo application of visda on sample clustering
to show how visda discovers data structure, we consider the um microarray gene expression cancer dataset as an example and perform sample clustering  <cit> . this dataset consists of brain , colon , lung , ovary , and pancreas  cancer classes. we removed the pancreas category due to its relatively small size. the total number of genes is  <dig>  we applied our unsupervised gene selection method to choose informative genes. to emphasize the genes with discrimination power, those which manifest true, underlying cluster structure, we used a more stringent requirement on a gene's discrimination power than on its variation. we took the intersection of the top  <dig> discriminative genes, the top  <dig> genes ranked by variance, and the top  <dig> genes from the absolute difference ranking. a set of  <dig> genes was thus obtained and used as the input gene space for sample clustering. clustering of the  <dig> samples was performed in a purely unsupervised fashion, i.e. category labels and the number of categories were not used by the algorithm and were not known to the user during the clustering process. after clustering, we use colours to indicate different cancer categories, with the results shown in figure  <dig> 

RESULTS
evaluation of visda
in a comparative study of clustering algorithms  <cit> , we evaluated visda by comparing it to four other popular unsupervised clustering methods – conventional hc, kmc, sequential som, and sfnm fitting methods. the comparison was made with respect to clustering accuracy and stability, evaluated on one synthetic dataset and seven microarray gene expression datasets described in table  <dig> of additional file  <dig>  for a meaningful and well-grounded evaluation, we directly compared the sample clustering results to the ground-truth biological categories for measurement of algorithm performance. to assure the quality and suitability of the datasets with respect to the definitive ground truth for a rigorous and fair comparison, the datasets were preprocessed by a supervised informative gene selection method introduced in  <cit> . the preprocessed datasets covered both the "data-sufficient" case and the "data-insufficient" case, the latter having a small samples-to-genes ratio. the experiment was conducted based on n-fold cross-validation , i.e. in each trial, only an /n portion of the samples from each class were used in the model learning.

the bolded font indicates the best performance respective to a particular measure.

because the clustering results of kmc, som and sfnm fitting methods may depend on initialization, for each cross-validation trial we ran them  <dig> times with random initialization and took the best clustering result according to the associated optimization criterion. for kmc, since its algorithm tries to minimize mean squared compactness , which is the average square distance from each data point to its cluster center, we selected the result with the minimum msc. for som, we separately tried minimizing msc and maximizing classification log-likelihood   <cit> , which calculates the log-likelihood of the model by assigning each cluster a gaussian distribution whose parameters are calculated based on the samples within the cluster. not like the soft memberships in mixture modeling, cll calculates the log-likelihood in a "hard" manner, where each sample is generated only by the gaussian distribution of its cluster. for sfnm fitting, since the algorithm tries to maximize the likelihood of the sfnm model, we selected the result with the maximum likelihood. hc was applied with euclidean distance and average linkage function. for hc, kmc, som, and sfnm fitting method, we set the input cluster number at the number of ground-truth classes. because visda does not utilize any information about the number of classes and class labels of the samples, visda obtained the cluster number and clustering partition in a purely unsupervised fashion. we calculated the frequency that visda obtained the correct cluster number  across the cross-validation trials to evaluate its model selection accuracy. the partition accuracy, i.e. the percentage of correctly labeled samples after clustering, was used to evaluate the biological relevance of the obtained clusters. for soft clustering, to calculate the partition accuracy, we transformed the soft memberships to hard memberships via the map rule. the mean partition accuracy of all cross-validation trials was calculated and then averaged over all datasets . we also calculated the standard deviation of the partition accuracy resulted from cross-validation to see how stable the biological relevance was. the standard deviation of the partition accuracy was also averaged over all datasets and shown in table  <dig> 

visda obtained the correct cluster number across the cross-validation trials with an average frequency of 97% over all the datasets. this shows that the exploration based on the hierarchical sfnm model, mdl model selection in the locally discriminative visualization space, and human-data interaction for data visualization, model initialization, and model validation, is an effective solution for model selection working on high dimensional data. visda outperformed all other methods in average mean of partition accuracy, which shows that visda's clustering result was the most accurate among the competing methods. from the average standard deviation of partition accuracy, we can see that visda is also a stable performer among the competing methods. besides partition accuracy, we also evaluated the accuracy of the recovered parametric class distributions , where the result is similar  <cit> , i.e. visda provides a stable and most accurate recovery of class distributions among the competing methods.

identification of gene clusters from muscular dystrophy data and muscle regeneration data
on a muscular dystrophy microarray gene expression dataset   <cit> , we used visda to define gene clusters to discover functional gene groups and gene regulation networks. after performing the clustering, we superimposed existing knowledge of gene regulation and gene function from ingenuity pathway analysis database  to analyze some of the obtained clusters that had interesting expression value patterns. we found that one gene cluster that contained  <dig> genes was highly expressed in juvenile dermatomyositis  but lowly expressed in all other phenotypes. jdm is a relatively severe childhood autoimmune disorder that is thought to be associated with viral infections that stimulate muscle destruction by inflammatory cells and ischemic processes in a small subset of the children with the virus. ipa showed that this gene cluster pointed to gene regulatory networks involved in key inflammatory pathways. in the most significant network , shown in figure 4a, specific proteins that are known to be critical for initiating and perpetuating inflammation and subsequent cell death are seen as key focus genes . stat <dig> is an important signaling molecule that responds to interferons and other cytokines. both tnfsf <dig> and casp <dig> influence cell death via apoptosis. consistent with this, patients with jdm show extensive cell death and failure of regeneration in their muscle, leading to weakness. this network also points to drugs that would be expected to inhibit this process in jdm patients, which can be tested in a mouse model. figure 4b shows that this gene cluster was significantly associated with organismal injury/abnormalities and immune response in terms of gene function category.

in another study  <cit> , we used visda to define gene clusters in a  <dig> time point microarray gene expression dataset of muscle regeneration in vivo based on the mouse model. after pre-filtering by "present call",  <dig> genes were believed to be significantly present and were thus input to visda for gene clustering. two of the eighteen gene clusters detected by visda peaked at the 3rd day time point, which correlated with the expression pattern of myod, a prototypical member of myogenic regulatory factors that control the staged induction of genes important for interpretation of positional cues, proliferation, and differentiation of myogenic cells. these two clusters contained a subset of the in vitro myod down-stream targets identified in  <cit> , which characterized the relevance of in vitro myogenesis to in vivo muscle regeneration.

construction of tops on muscular dystrophy data and multi-category cancer data
we used visda to cluster phenotypes in the muscular dystrophy dataset   <cit> . the dataset includes  <dig> muscular dystrophy related phenotypes, i.e. als, aqm, bmd, calpain <dig>  dmd, dysferlin, lamin a/c, emerin, fkrp, fshd, hsp, jdm, and nhm  <cit> . the top constructed by visda with ng  equal to  <dig> is shown in figure  <dig>  aqm, jdm, als, and hsp were first separated from the rest, which is consistent with each of them having an underlying disease mechanism much different from the other classes. then, the tree showed two major branches. the left branch contained bmd, calpain  <dig>  dmd, dysferlin, and fkrp, most of which are the "dystrophic myopathies", inborn single gene disorders causing degeneration/regeneration of muscle fibers. the right branch contained lamin a/c, emerin, fshd, and nhm. the two nuclear envelope disorders, lamin a/c and emerin, form their own group, showing their close relationship reflected at mrna profiles. fshd disrupts chromatin attachment sites to the nuclear envelope, which supports its co-segregation with lamin a/c and emerin in the right branch.

on the  <dig> class mit microarray gene expression cancer dataset with  <dig> samples   <cit> , we applied leave-one-out stability analysis with ng equal to  <dig>  in each experimental trial of the leave-one-out stability analysis, one sample was left out and we constructed a top based on the remaining samples. thus totally  <dig> tops were generated and we took the tree with the highest frequency of occurrence as the final solution, which best reflects the underlying stable structure of the data. as a validation, we compared the most frequent top to the known developmental/morphological relationships among the various cancer classes, which was published in  <cit> .

forty three different tops occurred in the leave-one-out stability analysis. the most frequent top occurred  <dig> times; the second most frequent top occurred  <dig> times; the third most frequent top occurred  <dig> times; most of the other tops only occurred once. the most frequent top has an occurrence frequency of 121/ <dig> ≈  <dig> %. considering that some tops have only minor differences compared to the most frequent top, the underlying stable structure likely has even a higher occurrence frequency. we also applied visda on the whole dataset and obtained the same structure as the most frequent top. figure 6a shows the known pathological cancer tree  <cit>  and figure 6b shows the obtained most frequent top. we can see that the most frequent top captured some pathological relationships reflected in mrna profiles. the neoplasm of lymphoma and leukemia are hematolymphoid; appropriately, in the most frequent top, they were far away from the other cancer classes whose neoplasm is solid. cns and mesothelioma were separated from epithelial tumors. the ovary cancer and the uterus cancer are mullerian tumors and closely located in the tree. breast, bladder and pancreas cancer belong to the non-mullerian category and formed a tight subgroup.

discussion
visda is a data analysis tool incorporating human intelligence and domain knowledge. when applied by experienced users and domain experts, visda is more likely to generate accurate/meaningful clustering and visualization results. since different human-data interaction may lead to different clustering outcomes, to achieve optimum performance, the user needs to acquire experience in using visda on various kinds of data, especially on the dataset of interest. multiple trials applying visda are suggested when analyzing a new dataset. by comparing visda to several popular clustering methods, we see that the clustering outcome of visda is stable, probably because human initialization of model parameters has the potential to improve the clustering stability compared to the random parameter initialization applied by some other methods. notice that visda only requires the user to have common sense about cluster distributions, cluster separability, and outliers.

besides the two kinds of non-informative genes discussed in the methods section, "redundant" genes  provide only limited additional separability between sample clusters. however, this limited additional separability may in fact greatly improve the achievable partition accuracy  <cit> . thus, we take removal of redundant genes as an optional step for sample clustering. if the dimensionality of the gene space after variation filtering and discrimination power filtering can not be well handled by the clustering algorithm , we suggest removing highly correlated genes. here, we provide a simple scheme to remove redundant genes. in the gene list resulting from variation filtering and discrimination power analysis, keep the most discriminative gene and remove the genes that are highly correlated with it. then keep the second most discriminative gene in the remaining list and remove the genes that are highly correlated with this second most discriminative gene. keep performing this procedure until no further removal can be done. the correlation between genes can be measured by pearson correlation coefficient or mutual information normalized by entropy. a threshold needs to be set to identify the highly correlated genes.

various visualization techniques, such as dendrogram, heat maps, and projections, have been applied to present genomic data structures and clustering outcomes  <cit> . many linear/nonlinear projection methods, such as pca  <cit> , random projection  <cit> , variant of multi-dimensional scaling  <cit> , and projection based on frequency domain analysis  <cit> , have been used to visualize/analyze genomic data. in visda, data are hierarchically visualized using multiple local data projections, one at each node of the hierarchy. such a hierarchical visualization scheme allows each local data projection to be fulfilled by relatively simple method, i.e. linear projection, while the whole visualization hierarchy is capable to reveal both global and local cluster structures. since every clustering and visualization method has its own underlying assumptions about the cluster structure of interest  <cit> , visda provides users with an extensible visualization capability by a projection suite that can incorporate novel, effective, complementary projection methods to increase the likelihood of revealing the data/application-dependent cluster structure of interest. besides enhancing human understanding of the data structure, data visualization in visda has a further function of providing the basis for introducing human intelligence and domain knowledge to the clustering process.

one point needs to be noted is that visda selects a data model in the locally discriminative low dimensional visualization space. although visualization with dimension reduction may reveal only the main data structure and lose minor/local data structures within a cluster, these minor/local structures may become the main data structure captured at subsequent levels. visda discovers hierarchical relationships between clusters, which allows analyzing the data at different resolutions/scales.

larger clusters can be obtained by simply merging small clusters according to the hierarchy. the discovered hierarchical relationships among clusters may reveal important biological information, for example the developmental/morphological information revealed by tops. the top discovered by visda can also be used to construct a hierarchical classifier to solve the complex task of multiple diseases diagnosis by embedding a relatively simple classifier at each node of the top, which may obtain good classification performance  <cit> .

despite our successful applications of visda to real microarray gene expression data, there are remaining limitations of the reported method. for example, in sample clustering, dimension reduction via unsupervised informative gene selection is highly data-dependent and often achieves only limited success. this is a very challenging task due to no prior knowledge and potentially complex gene-gene interactions embedded within high dimensional data. furthermore, user-data interaction may bring certain subjectivity into the clustering process if not being properly orchestrated, and projection visualization may cause some unrecoverable information loss leading to only a suboptimum solution, although visda's hierarchical framework can partially alleviate this problem. lastly, visda presently assumes each cluster follows a gaussian distribution largely driven by mathematical convenience. however, small sample size problem can defeat this assumption and composite clusters at higher-levels of the hierarchy are not even theoretically normally distributed but are more generally mixture distributions.

our previous publications  <cit>  may also help practitioners in using visda for genomic data analysis. reference  <cit> , the cabig™ visda application note, is a brief and fast-track "software user guide" that provides users with information on the procedures and interfaces of cabig™ visda open-source software. reference  <cit>  focuses on a comparative experiment of several clustering algorithms including visda to study their relative performance and suitability for genomic data clustering. although these two papers do not discuss the principles/algorithms of visda, they are helpful to readers interested in using visda for practical tasks of genomic data analysis.

CONCLUSIONS
we designed a clustering and visualization algorithm for discovering structure in high dimensional genomic data. visda can discover and visualize gene clusters, sample clusters, phenotype clusters, and the hierarchical relationships between the detected clusters. visda visualizes data by structure-preserving projections and provides an interface for human-data interaction, which facilitates incorporation of expert domain knowledge and human intelligence to help achieve accurate and meaningful data visualization and modeling. the scalable and extensible visda framework can incorporate various existing clustering and visualization algorithms to increase the likelihood of revealing data structure of interest.

our evaluation study based on microarray gene expression data showed that visda provided an effective model selection scheme for high dimensional data and outperformed several popular clustering methods, i.e. hc, kmc, som, and sfnm fitting, in terms of clustering accuracy. applications to muscular dystrophy, muscle regeneration, and cancer data illustrated that visda produced biologically meaningful clustering results that can enhance users' understanding about the underlying biological mechanism and stimulate novel hypotheses for further research.

abbreviations
visda: visual statistical data analyzer; som: self-organizing maps; kmc: k-means clustering; hc: conventional hierarchical clustering; mdl: minimum description length; top: tree of phenotypes; sfnm: standard finite normal mixture; pca: principal component analysis; pca-ppm: principal component analysis – projection pursuit method; lpp: locality preserving projection; dca: discriminatory component analysis; apc: affinity propagation clustering; em algorithm: expectation maximization algorithm; msc: mean squared compactness; cll: classification log-likelihood; ipa: ingenuity pathway analysis; jdm: juvenile dermatomyositis.

authors' contributions
yz participated in designing and implementing visda, performing the experiment, and analyzing the experimental results. hl participated in developing cabig™ visda. djm participated in the technical design of visda on phenotype clustering. zw implemented the prototype of visda. jx participated in the technical design of the software and comparative study. rc and eph provided biological interpretation of the datasets and experimental results. yw participated in designing visda and the experiment, and provided technical supervision.

supplementary material
additional file 1
cabig™ visda: modeling, visualization, and discovery for cluster analysis of genomic data . the supplement includes derivations and details of the algorithm, more discussions, and introduction of the datasets used in the experiments.

click here for file

 acknowledgements
the authors want to thank bai zhang, guoqiang yu, and yibin dong for help in software implementation and experiment. this work is supported by the national institutes of health under grants ca <dig>  ns <dig>  ca <dig>  eb <dig> and cabig™.
