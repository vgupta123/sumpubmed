BACKGROUND
rna-sequencing  technology has become a preferred choice for studying transcriptomes  <cit> . compared to microarray, rna-seq provides a single nucleotide level measurement of mrna expression levels. it offers the chance to detect novel transcripts by obtaining tens of millions of short reads. when mapped to the genome or reference transcripts, rna-seq data are summarized by a number of read counts. the huge number of read counts enables researchers to quantify transcriptomes in ultra-high resolution  <cit> .

to study the dynamics of genome-wide mrna expression levels during a biological process, e.g., development, researchers often conduct time course rna-seq experiments. as in static rna-seq experiments , identifying differentially expressed  genes across different treatments or conditions is still a key task in time course rna-seq experiments. inferring de genes in time course rna-seq experiments has a number of interesting challenges. first, the de genes in time course data are those with different gene expression profiles along the time across treatments or conditions. however, most of the available methods treat expressions of a gene at different time points as replicates and test the significance of the mean expression difference between treatments or conditions irrespective of time, e.g., edger  <cit>  and deseq  <cit> . they thus fail to identify many de genes with different profiles across time. second, some methods have been developed recently to identify the de genes with different expression profiles over time. a recent work by oh et al.  <cit>  models time dependency using a hidden markov model. such a model requires the markov property. in particular, the markov property states that the conditional dependency of prior information from all time can be simplified to the conditional dependency of prior information of k time points . it is still unclear whether such markov property holds for general time course rna-seq data. finally, both edger and deseq use the total read counts of each gene and model the variation of the read counts across the replicates at gene level. when rna-seq experiments do not have replicates or the number of replicates is small, the statistical significance tests in edger and deseq have small degrees of freedom and may result in a high false discovery rate .

to surmount these challenges, we develop a novel statistical method to identify de genes in this article. the input of our method is the read counts at the exon level for each gene at each time point. the read counts of genes at the exon level across different time points are modeled by a negative binomial mixed-effect model . in this model, the mean gene expression profiles over time across treatments are modeled by a nonparametric bivariate function of time and treatments, while the time dependency is characterized by a parametric random effect. the nonparametric bivariate function has great flexibility in modeling different expression profiles over possibly non-equally spaced time points across treatments and conditions. the parametric random effects are used to define a variety of time dependency correlation structures. the model is fitted by a penalized likelihood method. in order to identify de genes unique to time course experiments, we define two types of de genes in time course rna-seq experiments: nonparallel differentially expressed  genes with nonparallel expression profiles over time across treatments, see fig.  <dig>  and parallel differentially expressed  genes with parallel expression profiles over time across treatments, see fig.  <dig>  pde genes are those consistently up-regulated or down-regulated over time across treatments, whereas npde genes are those that have significant expression profile changes over time across treatments. compared with pde genes, in many scientific investigations, npde genes are of primary interest. focused study of the npde genes may provide more information on how the cell responds differently to different stimulus or treatments. moreover, time course rna-seq experiments are commonly used in case-control studies and in clinical trials. in such experiments, mrna samples are taken from a small number of subjects over time in the treatment group and from another small number of subjects in the control group. because each group only consists of a small number of subjects, one subject with high baseline gene expression can cause a high average gene expression for the whole group. thus, there are many pde genes between treatments, but they are biologically irrelevant  <cit> . to distinguish the two types of de genes, we decompose the nonparametric bivariate function in our model into the main effects of time and treatment separately, as well as their interaction through a functional anova decomposition. the identification of de genes is equivalent to testing significance of treatment-time interactions in the functional anova decomposition. we fit this model to the exon level read counts data using penalized maximum likelihood. the tuning parameter is selected by cross-validation  <cit> .
fig.  <dig> npde gene. gene ss  was identified as non-parallel differentially expressed with p value= <dig> . different exons are represented by curves with varying colors. this gene participates in antennal development, antennal morphogenesis, and imaginal disc-derived leg segmentation. read counts on the y-axis are the average counts . the left panel and right panel represent the early and late embryonic developmental stages respectively

fig.  <dig> pde gene. gene i
d
g
f <dig>  was identified as parallel differentially expressed with p value= <dig> . different exons are represented by curves with varying colors. this gene participates in imaginal disc development. read counts on the y-axis are the average counts . the left panel and right panel represent the early and late embryonic developmental stages respectively



methods
nonparametric model and penalized likelihood method
we first provide a short review of nonparametric model and penalized likelihood method. consider the nonparametric model for data points , 
  <dig> yi=η+εi,i= <dig> ⋯,t, 

where η is the mean function and random noise εi are independently gaussian distributed. when η is assumed to be of form η=tiβ, which is linear in β, one has a standard linear model. the disadvantage of linear model is illustrated by a toy example, where we generated  <dig> data points, faded circles in fig.  <dig>  from a nonlinear function. the linear model fit, the dashed straight line in fig.  <dig>  does not provide a good fit. since linear model is too restrictive to model nonlinear function, we allow η to vary in a high-dimensional functional space, leading to diverse nonparametric estimators.
fig.  <dig> curve fitting examples. the curve fitted using penalized likelihood is in the solid line and the linear fit is in dashed line, with the interpolation fit superimposed in faded line and the data in circles



an approach to the estimation of η is via the minimization of negative log likelihood, 
  <dig> ∑i=1tyi−η <dig>  

without any constraint, the minimizer η^ in  simply interpolates the data and has no predicting power, see the faded line in fig.  <dig>  to avoid this problem, one uses penalized likelihood to get a smoothing estimator of η via minimization of 
  <dig> ∑i=1tyi−η2+λ∫η′′2dt, 

where η′′ is the second derivative and characterizes the smoothness of η,λ is a smoothing parameter, which controls the trade-off between the lack of fit of the nonparametric model and the roughness of η. to select the proper λ, researchers often use generalized cross validation  <cit> . an adequate fit by a proper selected λ is illustrated by the solid curve in fig.  <dig> 

negative binomial mixed-effect model
in time course rna-seq experiments, the short read counts cannot be adequately modeled by independent gaussian distribution. we extend the aforementioned modeling strategy to develop a negative binomial mixed-effect model  for modeling time course rna-seq data.

the model specification
suppose the time course rna-seq experiments are conducted across g conditions/treatments. for each gene, the mapped read counts on exon k at time ti in condition/treatment g, denoted by yigk, are assumed to follow a negative binomial distribution , 
  <dig> yigk∼negbin), 

where the negative binomial distribution has the probability distribution, 
  <dig> p=Γy!Γpν)y, 

where ν is a nuisance parameter, which is the number of reads that cannot be mapped to the reference genome, and 1−p is the probability that a read is mapped to exon k in condition g at time ti,g= <dig> ⋯,g, i= <dig> ⋯,ng,k= <dig> ⋯,k. in this setting, ng is the number of time points in the gth condition, and k is the number of exons. in most cases, we only have two treatments: case and control or mutant and wild type . to model the time trend and capture the time dependence, we use a nonparametric mixed-effect model with logit link  
  <dig> log{p/)}=log+η+zkbk, 

where βti,g is the effective library size, used in edger  <cit> , of the tith time point, mean expression η is assumed to be a smooth function of time t for each treatment g, zk is the length of the kth exon, bk represents the exon specific random effect to model the intra-exon variation with bk∼n, and the random effect variance σ <dig> is to be estimated from the data. the log term provides a convenient device to normalize the reads to a common scale.

in model , the bivariate function η is decomposed as 
  <dig> η=η∅+η1+η2+η <dig> , 

where η∅ is the baseline expression irrespective of time and treatment, η <dig> is the time effect at time t, η <dig> is the treatment effect of the gth condition, and η <dig>  is the interaction between time and treatment effects. the time and treatment effects are defined as the deviation from the baseline expression, and, therefore, ∫0tη1dt= <dig> and ∑g=1gη2= <dig>  analogously, the time-treatment interaction is defined as ∫0tη <dig> dt= <dig> for all g, and ∑g=1gη <dig> = <dig> for all t. this decomposition is referred to as the functional anova decomposition  <cit> . if the time-treatment interaction term η <dig>  is significant, we have η−η=η2−η2+η <dig> −η <dig>  for every t. in the right hand side, the first two terms are constants and the remaining terms vary with t. when the time-treatment interaction η <dig>  is not significant in , the model reduces to 
  <dig> η=η∅+η1+η <dig>  

which produces the parallel population mean time course profiles for different treatment conditions, i.e., η−η=η2−η <dig> for each t, where the right hand side of the equation is a constant which does not vary with t. to distinguish the expression profiles, we define the genes with significant time-treatment interaction term in , i.e., η <dig> ≠ <dig>  as non-parallel differentially expressed  genes. if genes have a significant main effect in treatment g but no time-treatment interaction in , i.e., η2≠ <dig> and η <dig> = <dig>  we define those as parallel differentially expressed  genes  <cit> .

estimation
by , one has a minus log likelihood 
  <dig> ∑k=1k∑g=1g∑i=1nglog1+elog{p/)}−νlogp/). 

substituting  into , we get the minus log likelihood of y conditioning on random effects b, where y=t, and b=t. therefore, the  likelihood  <cit>  of  is 
  <dig> logfb)∝∑k=1k∑g=1g∑i=1nglog1+elog+η+zkbk−νlog+η+zkbk+∑k=1kbk2/σ <dig>  

in , the fy|b denotes the conditional distribution  of y given b, and fb denotes the distribution  of b. in the end, we derive a penalized  likelihood  as 
  <dig> ∑k=1k∑g=1g∑i=1nglog1+elog+η+zkbk−νlog+η+zkbk+∑k=1kbk2/σ2+nλj, 

where n=∑k=1k∑g=1gng, the quadratic functional j quantifies the smoothness of η, and the smoothing parameter λ controls the trade-off between the goodness-of-fit and the smoothness of η. the minimization of  is performed in a reproducing kernel hilbert space ℋ⊆{η:j<∞}, in which j is a square semi-norm  <cit> . for model  with functional anova , we employ the following quadratic penalty, which produces a cubic spline estimate, 
  <dig> j=θ1−1∫0td2η1/dt22dt+θ <dig> −1∫0t∑g=1gd2η <dig> /dt22dt, 

where θ <dig> and θ <dig>  are extra smoothing parameters that adjust the relative penalties on the roughness of different components. see detailed examples in sect.  <dig>  of  <cit> . for model  with functional anova , we use penalty 
  <dig> j=∫0td2η1/dt22dt. 

to perform the penalized likelihood estimation of , we implement two nested iterative loops  <cit> . fixing the smoothing parameter, the inner loop minimizes , and the outer loop estimates the smoothing parameters and variance of random effects via the minimization of certain cross-validation score, see  <cit>  for details. for fixed smoothing parameter λ,  can be minimized through newton iteration. write 
  <dig> ligk=log−νζigk, 

where ζigk=log+η+zkbk. the quadratic approximation of ligk at ζ~igk is 
  <dig> ligk≈ligk+μ~igk+ω~igk2/2=ω~igk2/2+eigk, 

where y~igk=ζ~igk−μ~igk/ω~igk and eigk is independent of ζigk; μ~igk=p~−ν and ω~igk=ν). the newton iteration can thus be performed via iterated weighted least squares, 
  <dig> ∑k=1k∑g=1g∑i=1ngω~igk+η+zkbk)2+∑k=1kbk2/σ2+nλj. 

since ν is unknown, we estimate it from data. we apply the log operation to , and drop the terms that do not involve ν to get the individual objective function. then the joint objective function is the sum of minus individual objective functions, 
  <dig> 1n∑k=1k∑g=1g∑i=1nglog)−logΓ−νlog), 

where Γ is the gamma function. given ), one estimates ν via the minimization of . we iterate between the estimations of η and ν in  and   <cit> .

significance testing for individual gene
once the model  is fitted to the exon level read counts data, we identify npde and pde genes by testing the significance of the interaction and main effects in . to identify npde genes, we test the significance of the time-treatment interaction in , which is, 
  <dig> h0:η <dig> =0;h1:η <dig> ≠ <dig>  

to derive the needed test statistic, we first define the kullback-leibler distance  <cit>  
  <dig> kl=1n∑k=1k∑g=1g∑i=1ngνplog1−p1−p^+ν−η^). 

then, we use the following kullback-leibler distance ratio   <cit>  as our test statistic 
  <dig> klr=klkl, 

where η^f stands for a full model estimate given that h <dig> is true in the anova decomposition , and η^r represents a reduced model estimate under the hypothesis that h <dig> is true in . analogously, we define ηc as a constant function. for genes that are not considered as npde by the preceding test, we further investigate whether they are pde or not. in model  with functional anova , we are interested in testing 
  <dig> h0:η2=0;h1:η2≠ <dig>  

in testing for pde genes, the full model estimate η^f does not include a time-treatment interaction, and η^r only has an overall mean and time effect in .

the p values for identifying npde and pde genes are calculated through a permutation procedure. first, we compute a kullback-leibler distance ratio klr for a gene. second, the time labels for the gene are shuffled, and we recompute the statistic for the shuffled gene. we repeat the second step b times to obtain klr1∗,⋯klrb∗. in the end, the p value for the gene is given by, 
  <dig> #klri∗>klr,i= <dig> ⋯,b/b, 

where #{·} represents the cardinality of the set, i.e., the number of permuted klr∗s which is larger than the klr.

gene set significance testing
in many studies, researchers are not only interested in identifying individual de genes, but also in finding de gene sets. a gene set may be defined by known biological information, for instance, a group of genes within the same biological pathway. since genes within the same gene set are closely related, we increase statistical power of significance tests by borrowing information across genes. in addition, we obtain more robust results from gene sets than from individual genes. subramanian et al.  <cit>  proposed an approach named gene set enrichment analysis , which tested the significance of pre-defined gene sets through a kolmogorov-smirnov like test. efron and tibshirani  <cit>  proposed gene set analysis , which was shown to make a significant improvement over gsea.

following the ideas from gsea and gsa, we test for significant npde gene sets via the following steps. initially, pre-defined gene sets s <dig> s <dig>  …, sp are collected. then, we compute the kullback-leibler distance ratio klr based on  for all genes. for each gene set, sk, we calculate a gene set score, rk, defined as the average of the kullback-leibler distance ratios in , 
  <dig> rk=∑i∈skklri/#{sk}, 

where #{sk} is the number of genes in gene set sk. the gene set score rk defines an enrichment test statistic, with a larger value of rk suggesting a greater enrichment of npde genes. the pde gene sets can be tested in the same way.

to test the significance of the gene set, a threshold is needed. the following permutation procedure is used to determine the threshold, and gene sets with values of rk above the threshold are declared significant. in particular, we shuffle the time label for each gene and recompute the statistic for each permuted gene. we utilize formula  to calculate the permuted gene set scores r1∗,⋯,rb∗, where b is permutation times. in the end, we calculate the p value of the kth gene set, given by, 
  <dig> #ri∗>rk,i= <dig> ⋯,b/b. 

RESULTS
simulation study
we evaluated the performance of the proposed method by carrying out extensive analysis on simulated datasets. datasets were generated from both the nbmm model and an rna-seq simulator. all p values were adjusted by benjamini and hochberg  method for multiple testing corrections  <cit> .

single gene simulation
we simulated exon level read counts according to eqs. ,  and . the effective library sizes of all time points were estimated by edger. we have three settings in this section. for each setting, bk∼n,k= <dig> , <dig>  accounts for variation of different exons, z1= <dig> ,z2= <dig>  and z3= <dig>  and ν is set to be  <dig> for all those settings. each exon was simulated with both single replicate and three replicates.

first setting: linear pattern.
in the first setting, we generated exon level read counts of de genes, see the top panel in the fig.  <dig>  using the following function, 
  <dig> η=ci+ti), fig.  <dig> simulated read counts. simulated read counts generated from a negative binomial distribution. samples of de genes in the first, second and third setting are shown in the top, middle and bottom panel respectively. different exons are represented by curves with varying colors



where ti=i/ <dig> i= <dig> ⋯, <dig> g= <dig> , and c= <dig> is a scale factor, i is an indicator function which equals one when g= <dig> and zero otherwise.

second setting: exponential pattern
in the second setting, we simulated exon level read counts of de genes, see the middle panel in the fig.  <dig>  using the following smooth function, 
  <dig> η=exp104f111f26+102f13f29+cg, 

where f1=i+ti,f2= <dig> i+i+ti, and c1=c2= <dig>  the constants cg,g= <dig> , define fixed reference expression levels for different conditions.

third setting: cyclic pattern
in the third setting, exon level read counts of de genes, see the bottom panel in fig.  <dig>  were generated using the following smooth function, 
  <dig> η=sini+ti)+ <dig>  

there were two scenarios in each setting. in the first scenario, we simulated time course exon level read counts of  <dig> genes. half of the genes were de genes generated by the above mean functions, and the remaining genes were generated as non-differentially expressed  genes by using the same mean function for different conditions. in the second scenario,  <dig> de genes had the same profiles as those in the first scenario and  <dig> nde genes were modeled as flat profiles. we compared the nbmm with three methods, masigpro  <cit> , dynb  <cit>  and edger. the former two methods are designed for time course data. analysis followed the steps described in the r package documentation and unless stated otherwise default parameters were used.
table  <dig> the fdr and fnr of all methods for detecting de genes in simulation studies. if the method failed to report any significant genes, the fdr was na and fnr was  <dig>  for scenario  <dig> and  <dig>  for scenario 2

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
the best result in each scenario is shown in boldface



the performance of edger, dynb and masigpro in terms of fdr and fnr was not as good as that of nbmm in the first scenario. this is expected since edger is not designed for time course data and the accuracy of detecting de genes is affected by the estimated effective library size. when the nde genes do not show flat profiles, the prediction performance of edger and masigpro relying on tmm normalization  <cit>  will be impaired. masigpro had a better performance compared with nbmm method in the second scenario in linear and exponential settings. however, our method performed much better than other methods in more complicated patterns, such as a cyclic pattern. for this pattern, other methods either failed to detect any de genes or identified almost all the genes as de genes. in particular, in the first setting, the proposed nbmm method identified all de genes. in the third setting, our approach identified about  <dig> % of de genes with fdr  <dig>  in the first scenario, whereas the masigpro failed to detect any de genes. in summary, as the pattern of the mean function moves away from linear to nonlinear, the advantage of the nbmm over other methods is getting more significant in detecting de genes.

the nbmm took  <dig> s  to process  <dig> genes with three replicates. running cpu time for other settings are shown in table  <dig>  in summary, edger is not designed for time course rna-seq data, and, therefore, their performance is not as good as that of the nbmm and masigpro in most settings. the masigpro is applicable to time course rna-seq data and has a good performance in the roughly linear pattern. its performance in the highly nonlinear pattern is not as good as the nbmm.

simulation using rna-seq simulator
an rna-seq simulator, polyester  <cit> , was applied to simulate rna-seq experiments. the simulator takes a set of annotated transcripts as input and produces files containing simulated rna-seq reads after simulating the steps of an rna-seq experiment. the reference genome used in the simulation was from drosophila melanogaster. tophat  <cit> , samtools  <cit>  and dexseq  <cit>  were utilized to estimate the read counts data from the simulated fasta files. analysis followed the steps described in the documentations and unless stated otherwise, default parameters were used.

we simulated the data of  <dig> transcripts. by directly specifying the number of reads in each transcript, we simulated two expression patterns, linear expression pattern in  and nonlinear expression pattern in . in each pattern,  <dig> de genes were created. 
  <dig> vti,g=ri+ti), 

where r is the reference expression level defined in  and ti=1+3/ <dig>  
  <dig> vti,g=ri+ti)+2). 

the reference expression level is 
  <dig> r=20ι/υ, 

where ι is the length of transcript and υ= <dig> is the length of short reads. the expression values for nde genes in all time points are defined in .

removing genes with zero expression values over all time points, we came down with a data set including  <dig> genes, among which  <dig> genes were de genes.

we applied nbmm, masigpro and edger to the dataset and results were summarized in table  <dig>  nbmm and masigpro detected all de genes with linear change pattern, however, nbmm identified  <dig> de genes with nonlinear pattern whereas masigpro found no genes with this pattern. as we can see in table  <dig>  the fdr and fnr of nbmm are lower than those of masigpro. edger identified almost all the genes as de genes and resulted in a higher fdr in table  <dig> 
 <dig> 
 <dig> 
the best result in each scenario is shown in boldface



gene sets simulation
in this study, we simulated  <dig> gene sets, each with ten genes. all  <dig> genes in the first ten gene sets were npde genes generated by the first setting in . the rest of the gene sets were nde genes with the same mean function for two conditions. we chose ν= <dig> c= <dig> and calculated the gene set scores and p values for the simulated data. the r package gsa developed in  <cit>  was used to detect de genes enriched gene sets. in gsa package, we set method=“mean”, minsize= <dig>  resp.type=“two class unpaired” and other parameters as default. the p values for all  <dig> gene sets calculated by nbmm and gsa are plotted in fig.  <dig>  the nbmm method detected all npde genes enriched gene sets, whereas the gsa method did not identify any significant gene sets.
fig.  <dig> a comparison between result of nbmm and that of gsa. the p values of the proposed method are shown as pink cycles. the p values from gsa are shown as blue circles. the x-axis represents the gene set index, and the first  <dig> gene sets are the npde gene enriched gene sets



real data analysis
study of the development of drosophila melanogaster  is important since this biological process shares many common features among different organisms. graveley et al.  <cit>  reported a time course rna-seq experiment of drosophila melanogaster embryogenesis. the dataset included  <dig> embryonic samples collected at 2-hour intervals for  <dig> h. each sample was collected at different stages of development. sequencing was performed using the illumina genome analyzer ii platform. reads of length  <dig> were uniquely aligned to the drosophila melanogaster r <dig> genome using bowtie  <cit> .

since in the first six time points, fruit flies were in the cleavage and gastrulation processes, whereas in the remaining six time points, they were in the process of differentiation  <cit> , we divided the  <dig> time points into two developmental stages: early and late embryonic developmental stages. after data screening  <cit> , the dataset used in our analysis consists of  <dig> genes with different numbers of exons. among these  <dig> genes,  <dig> genes are related to embryo development   <cit> . we aim to identify de genes between the two developmental stages and find the significant pathways.

single gene testing
the nbmm model was fitted gene-by-gene and the klrs were calculated. the permutation procedure was used to obtain the p value for each individual gene. after multiple testing corrections, our method identified  <dig> npde genes and  <dig> pde genes at a significance level of  <dig> . we conducted functional annotation clustering for these genes using david  <cit> . for npde genes, eight annotation clusters with enrichment scores above  <dig>  were found. seven of them are related to embryo development. for pde genes, ten annotation clusters with enrichment scores above  <dig>  were found. these clusters are associated with the regulation of rna splicing, mitosis, and development related pathways.

moreover, edger was applied to this dataset and  <dig> de genes were found. there were  <dig> genes in common between the edger and proposed approach, see fig.  <dig>  therefore,  <dig> de genes were specifically found by nbmm and  <dig> de genes were identified exclusively by edger. among  <dig> genes in embryo development ,  <dig> genes were identified by nbmm method, whereas edger detected  <dig> genes. for genes exclusively selected by edger, only two clusters with enrichment scores above  <dig>  were found. these clusters are associated with certain catabolic processes. however, there were  <dig> clusters with enrichment scores above  <dig>  for de genes exclusively identified by the nbmm method. the biological processes associated with the clusters are the regulation of mrna processing, mitosis, nuclear division, determination of anterior/posterior axis, embryo, and neuroblast differentiation, etc.
fig.  <dig> a comparison between the result of nbmm and that of edger. the venn diagram between the sets of de genes identified by nbmm and edger



in addition, we compared the nbmm with masigpro, which detected  <dig> de genes. there were  <dig> genes in common between these two models, see fig.  <dig>  the nbmm specifically found  <dig> de genes and  <dig> de genes were identified exclusively by masigpro. the annotation clustering was applied to these specifically identified de genes. for genes exclusively selected by masigpro, five clusters with enrichment scores above  <dig>  were found. these clusters are associated with neuron projection morphogenesis, regulation of nuclear mrna splicing and stem cell maintenance, etc. there were three clusters with enrichment scores above  <dig>  for de genes exclusively identified by the nbmm. the biological processes associated with the clusters are the mitosis, embryonic hindgut morphogenesis, gut development, etc. for the detailed functional annotation clustering, see the additional files 1- <dig> 
fig.  <dig> a comparison of the result of nbmm and that of masigpro. the venn diagram between the sets of de genes identified by nbmm and masigpro



gene sets testing
the pathway gene sets of the fruit fly were compiled using the bioconductor package “org.dm.eg.db”. the entrez gene identifier  in each gene ontology term of org.dm.eggo2allegs was converted to official gene symbols using the org.dm.egsymbol. we selected the gene sets with  <dig> to  <dig> genes and at least five of the  <dig> genes were in the gene sets. we performed  <dig> permutations and chose pathways at the significance level of  <dig> . among  <dig> tested gene sets,  <dig> npde gene sets were selected by the nbmm, and  <dig> significant gene sets were selected by the gsa. among  <dig> npde gene sets, eight gene sets are involved in the cell differentiation and cell development, see table  <dig>  the  <dig> significant gene sets detected by the gsa are the induction of apoptosis, chromosome localization, establishment of chromosome localization, cytoskeletal anchoring at plasma membrane, sarcomere organization, etc. these  <dig> gene sets are not associated with embryonic pathways. for the detailed information, see the additional file  <dig>  this shows that gene sets detected by the nbmm are more biologically relevant to development.


discussion
time course rna-seq data provide valuable insights into biological development and identifying biologically relevant de genes is a key issue. we classify de genes into two types: npde and pde genes. compared with pde genes, npde genes are more likely to be biologically relevant. therefore, focused study of the npde genes may provide more information on the underlying biological mechanisms. in this article, we proposed a statistical method, nbmm, for identifying de genes in time course rna-seq experiments. compared to other available methods, such as edger, the nbmm models time dependency and exon variation using a mixed-effect model. moreover, the proposed nbmm method outperforms other approaches designed for time course rna-seq data in terms of de genes detection accuracy, such as masigpro and dynb. the advantage of the nbmm over other competing methods is significant when they are applied to single replicate time course rna-seq data. furthermore, gene sets significance test is shown to effectively detect de gene sets.

the nbmm method is applied to gene expression data on a gene-by-gene basis. thus, parallel computing can be employed for testing the significance of multiple genes simultaneously. we implemented a parallel computing option in our timeseq package to speed up the computing process.

CONCLUSIONS
in this paper, we developed a negative binomial mixed-effect model  to detect the differentially expressed  genes in time course rna-seq data. we showed that our approach outperforms other currently available methods in both synthetic and real data. the timeseq, an open source software package, is freely available from cran.

additional files
additional file  <dig> functional annotation clustering for npde genes. 



additional file  <dig> functional annotation clustering for pde genes. 



additional file  <dig> functional annotation clustering for genes specifically found by nbmm in comparison with edger. 



additional file  <dig> functional annotation clustering for genes specifically found by edger in comparison with nbmm. 



additional file  <dig> functional annotation clustering for genes specifically found by nbmm in comparison with masigpro. 



additional file  <dig> functional annotation clustering for genes specifically found by masigpro in comparison with nbmm. 



additional file  <dig> significant gene sets detected by the gsa. 



