BACKGROUND
chemical reaction networks are broadly used as a representation scheme for modeling and simulating a variety of systems from biochemical interactions at the molecular level to higher-level mechanisms. in ecology, some individual-based models enjoy compact representations in the form of chemical reaction networks. examples of these include lotka-volterra predator-prey systems  <cit> a and plant-pollinator systems  <cit> 

simulations on chemical reaction networks can be performed by resorting to various techniques and tools that implement deterministic or stochastic approaches. deterministic or stochastic approaches thus provide the two main ways of modeling systems governed by mass-action kinetics, and offer different advantages. the more traditional deterministic method uses ordinary differential equations to approximate the changes in population sizes. while this approach benefits from a greater availability of analysis techniques, it ignores the fundamental discrete and stochastic nature of the reactions, and this can be important, especially for smaller population sizes that are frequently seen in biological systems. in this respect, stochastic simulations provide advantages, for example, in capturing the intrinsic noise in the biochemical systems  <cit> , or species extinctions in the ecosystem models  <cit> .

with respect to the stochastic approach, chemical reaction networks are commonly mapped to a language with a stochastic simulation capability. for example, various implementations of stochastic petri nets , which are isomorphic to chemical reaction networks, provide a straight-forward means for this. however, the analysis techniques on stochastic simulations of reaction networks are still underdeveloped in comparison to the rich arsenal of differential equation analysis techniques that have their roots in newton’s physics. in particular, flux analysis on chemical reaction networks with differential equation representations are well established. within the deterministic setting, there is a growing number of studies on flux analysis that include issues related to simplification of models  <cit> , while a stochastic treatment of flux is still lacking.

in this paper, we study a class of markov chains that typically emerge in the stochastic simulations of chemical reaction networks. in these dynamical networks, the states are populations of agents of various species, and the state transitions are updates to subpopulations of the state. for example, in a model of classical chemical kinetics, there are finitely many chemical species, and the states are finite multisets of species. transitions are described by a finite set of reactions of the form

  m1r1+⋯+mlrl→ρn1p1+⋯+nrpr 

where the reactants are r <dig> …,r
l
, the products are p <dig> …,p
r
, each m
i
 is the number of instances of reactant r
i
 consumed by the reaction, and each n
i
 is the number of instances of product p
i
 produced by the reaction. for a particular choice of m <dig> reactants of species r <dig>  m <dig> reactants of type r <dig>  and so on, the probability that they react according to  in an infinitesimal time interval dt is ρdt. the ρ is sometimes called the stochastic rate constant.

mass-action kinetics is based on the assumption that the likelihood of reaction  occurring during a small time interval dt is ρdt multiplied by k, the number of ways of choosing the reactants  <cit> . the term ρk is often called the total reaction rate or, in the chemical physics literature, the propensity.

we present a method for flux analysis in stochastic simulations with reaction networks, where flux is the flow of resources between reactions of the network. each simulation is a trajectory of a markov chain, which is a sequence of computations of the underlying transition system. the trajectory imposes a total order on the transitions of the simulation trajectory that is emphasized by the unique time stamps of the individual transition instances. in this respect, a simulation on a model can be seen as reduction of a complex structure, that is, the model, into a simpler structure, that is, the simulation trajectory. however, during this reduction some of the information on the model is lost, and some is made implicit.

the idea here is to recover this implicit information: when these transitions are inspected from the point of view of their dependencies on one another, it is possible to relax the total order of the transitions into a partial order structure. we can then use this partial order, which we call simulation trace, as a representation of causal dependencies in the simulation, and process the simulation trace to observe the flux in the network with respect to the flow of the resources during simulation from a reaction to another.

based on these ideas, our method constructs several data structures from the log of the simulations with models that are designed to disclose otherwise implicit resource flow information. these structures hence reveal a variety of statistics about resource creation and consumption during the simulation. we use these structures to quantify the causal interdependence and relative importance of the reaction instances. this allows us to compare simulations at arbitrary time intervals, and use this information, for example, to construct reduced models that have the same behavior with respect to the flow of resources.

we validate our approach with an extended example that is based on a published ordinary differential equations model of the rho gtp-binding proteins  <cit> , and its stochastic version with its time series analysis given in  <cit> . using a deterministic analysis, the model in  <cit>  provides an explanation of the experimentally observed rapid cycling of the rho gtp-binding proteins between their gdp-bound off states and gtp-bound on states while displaying high activity with respect to the relative concentration of the active gtp-bound rho proteins. our stochastic flux analysis confirms the observations of the deterministic analysis of  <cit>  and extends the analysis of  <cit>  with network fluxes. moreover, it also provides observations that complement those provided by  <cit> . this is because our stochastic flux analysis makes it possible to quantify the flow of specific species between specific reactions at arbitrary time intervals. as this capability delivers a quantification of the specific resource distributions after being produced by reactions, it exposes the contribution of specific resource flows to system dynamics. for instance, the effect of reverse reactions that can produce counteracting reaction fluxes in a context of multiple reactions can be better observed. this makes it possible to single out the cases with respect to different initial conditions, in which the fluxes shift the simulation resources, and thereby tune the behavior of the network.

in the following, we first introduce our notion of flux on chemical reaction networks, and illustrate the definitions on a simple example network. we then illustrate these concepts on larger networks, which clearly show the distinguishing features of our approach at work. besides the rho gtp-binding proteins network, we apply our approach on an oscillator model  <cit> , the oyster reef ecosystem model  <cit> , and a phosphorelay model  <cit> . the contribution of our method to the analysis of chemical reaction networks and the example models below that illustrate these concepts can thus be summarized as follows:  the notion of flux defined here applies to discrete, stochastic models, and differs from the conventional definition of flux, which is applied instead to continuous, deterministic models, e.g., rho gtp-binding proteins model. this provides an advantage also in modeling biological systems with smaller population sizes, for which discrete, stochastic models are often more realistic than continuous, deterministic models, e.g., the oyster reef model.  the stochastic flux applies not only to steady state, but to arbitrary time intervals of the systems, which are not required to be in a steady state, e.g., the oscillator model and the phosphorelay model.  the stochastic flux shows the amount of each type of resource flowing from any specific reaction to any other reaction, thereby providing an explicit account of causality that cannot be revealed by counting reaction instances, e.g., the oyster reef model. in contrast, the conventional version of flux shows only the total amount of all resources generated by each reaction, however it does not distinguish the division of the resources among the reactions that use the resources.

as we show below, the algorithms that implement our stochastic flux analysis are linear in time and space, that is, the time and space requirements of the algorithms are linear functions of the simulation time. the algorithms can thus be included in any discrete event simulator of chemical reaction networks. for the implementation of the models, we used the spim language and simulation engine  <cit> , which implements the stochastic π calculus. for the flux analysis, we used our tool, written in ocaml, that implements the definitions below.

RESULTS
our method for stochastic flux analysis of chemical reaction networks can be applied to any discrete or continuous time discrete event simulation that implements reaction networks as markov chains. in the following, we illustrate our method on example networks of models from biology and ecology. for the formal definitions we refer to the methods section, where the algorithm is described in detail. below, we first introduce our method on a simple example simulation trajectory with a continuous time markov chain semantics. as in our case, gillespie algorithm  <cit>  is commonly used to generate such trajectories of chemical reaction kinetics that implement the law of mass action.

the algorithm is based on marking individuals that are transformed by the reactions, and using the markings to track the causal dependencies between reaction instances during the simulations. we process this causality information to obtain a quantification of the flow of resources between reactions, and thereby providing the network fluxes at chosen time intervals. this is easily implemented by assigning a unique identifier to each network species in the initial state and to each reaction product of every reaction instance. in our case, these identifiers are integers. a reaction instance is a random event whose probability is determined by the current state of the network. a reaction can be applied at a state to obtain a reaction instance if its reactants are available at that state and the reaction is picked by the simulation algorithm from all the applicable reactions. whenever a reaction is applied at a state the simulation algorithm updates the resulting state with the reaction products and their unique identifiers in a structure that we call simulation trajectory. because this information can be recorded in a bounded amount of time during simulation in real time, the method does not introduce any additional complexity to the simulation algorithm.

example <dig> 
consider the chemical reaction network below, where each reaction is named with an integer.

 1:a→p+p,2:p→b,3:p→c,4:b+c→d 

the initial state is {a}, where  <dig> is the unique identifier of the species a. a possible 4-step simulation trajectory is the sequence of quadruples on the left-hand-side of figure  <dig>  where the first parameter of the quadruple is the name of the reaction, and the second and third parameters are the sets of the reactants and the products of the reaction instance. the forth parameter is the reaction instance time in the simulation.

by using the unique identifiers of the species in a reaction trajectory, which implicitly indicate the production-consumption relationship between reaction instances of the simulation, we construct a directed graph structure. this graph structure, which we call the simulation trace, makes the causality relationship explicit. in this graph, each node is a species, parameterized with a triple that contains its identifier, the name of the reaction that created it, and the time it is created in the simulation. as an example for a simulation trace, consider the structure in figure  <dig>  which is obtained from the simulation trajectory of example  <dig> 

by further processing this graph, we obtain an edge-labeled directed multi-graph that reveals the independence and causality information of the transitions with respect to the flow of specific resources between reactions. the information displayed by this graph is different from the one given by the simulation trace, where the evolution of the species with respect to the reactions are shown. in this graph, which we call simulation configuration, each node is a pair that contains the reaction that is applied and its time in the simulation. each edge is labeled with the species that is produced by the reaction at the tail of that edge and consumed by the reaction at its head. as an example for this with respect to the simulation trajectory of example  <dig>  consider the structure on the right-hand-side of figure  <dig> 

below, we work with simulation configurations, and process them to obtain flux configurations as formally defined in the methods section. in the definitions in the methods section, in order to describe the edges of an edge-labeled graph algebraically, we use 〈u,v,l〉 to denote the edge from vertex u to vertex v whose label is l. thus in a simulation configuration, the edges are of the form 〈,,s 〉, where reaction j occurs at time τ, and it produces an instance of species s, which is consumed by reaction j′ at time τ′. since a reaction may produce several instances of species, the simulation configuration is in general a multi-graph.

flux configurations are obtained by compressing simulation configurations in order to quantify the flow of resources between the reactions within given time intervals of the simulation. a flux configuration is a graph, where the vertices are the reactions of the network. the edges connect some of these vertices, and each edge has two labels. the first label is a network species, and the second label is a positive integer. a label with a species s and number k from a reaction j to another reaction j′ means that there are k instances of the reaction j that deliver the species s to reaction j′. as described in definition  <dig>  we obtain a flux configuration first by merging the vertices of the simulation configuration such that all the vertices with a certain reaction within the given time interval are mapped to a single vertice by filtering out their time stamps. for each label that denotes a network species, we then count in the simulation configuration the number of edges from each vertice  to other vertices within the given time interval. the number of such edges are then used to decorate the edge for that species between the respective reactions.

example <dig> 
consider the chemical reaction network given in example  <dig>  a simulation trace for the initial state {a,a,a,a} is depicted on the left-hand-side of figure  <dig>  the figure demonstrates the simulation configuration and the flux configuration obtained from this trace. in the simulation trace, the vertices are decorated with triples that are respectively the integer identifier of the vertice, identifier of the reaction that created the vertice, and the time of creation. the simulation trace is first mapped to its simulation configuration, where each vertice is a reaction instance and it is denoted with a pair: the first item in the pair is the identifier of the reaction and the second item is the time of creation. the simulation configuration is then mapped to the flux configuration, where the vertices are reactions, and the edges are the pairs of species names and their counts.

a flux configuration provides the information on the intensity of the flow of resources between reactions of the chemical reaction network at given time intervals. this is different from the number of times each reaction fires, because a reaction can receive its resources from different reactions. this also contrasts with the view of flux based on flows between species as they are typically considered in the differential equations setting, which we discuss below.

the time and space complexity of generating the above data structures is linear in the number of simulation steps. this follows from the facts that there is a fixed number of reactions, and each reaction involves a fixed number of species. consequently, the simulation trace  is a graph of bounded degree, and the number of edges is linear in the number of nodes. adding each node and its incident edges requires only a bounded number of operations. the simulation configuration  can be constructed in linear time since the projection operators that we use need only access each node and edge of the simulation trace once. it is also evident that the flux graphs can be generated in linear time and space. in fact, the simulation trace can be generated in real time since it adds only bounded time to each simulation step. because the steps of this algorithm does not modify the generation of the individual events, it can be included in any discrete events simulator of chemical reaction networks.

a case study: rho gtp-binding proteins
rho gtp-binding proteins  <cit>  serve as molecular switches  <cit> . their role can be perceived as regulating the transmission of an incoming signal further to effectors in a molecular module by cycling between inactive and active states, depending on being gdp or gtp bound, respectively. gdp/gtp cycling is regulated by guanine nucleotide exchange factors  that promote the gdp dissociation and gtp binding, whereas gtpase-activating proteins  have the opposite effect and stimulate the hydrolysis of rho-gtp into rho-gdp. in the active gtp-bound state, rho proteins interact with and activate downstream effectors.

in  <cit> , goryachev and pokhilko give an ordinary differential equations  model of the rho gtp-binding proteins. the structure of the chemical reaction network of this ode model is depicted on the left-hand-side of figure 3: the three forms of the rho protein  in the middle layer form complexes with gef  in the bottom layer and with gap  in the top layer. all the reactions except gtp hydrolysis  are reversible.

with their model goryachev and pokhilko provide an explanation of the experimentally observed rapid cycling of the rho gtp-binding proteins between their gdp-bound off states and gtp-bound on states while displaying high activity, measured by the relative concentration of the gtp-bound rho proteins . in  <cit> , the fluxes are defined for individual reactions with respect to species concentrations and reaction rates such that the reaction flux j
lm
 that connects species l and m is defined with respect to the species concentrations and the reaction rate constants. for example, flux j
rd.rde
 connecting rd and rde is j
rd.rde
 = k
rd.rde
.rd.e-k
rde.rd
.rde where k
rd.rde
 and k
rde.rd
 are the corresponding reaction rates.

goryachev and pokhilko argue that at large e <dig> and a <dig> concentrations, only a subset of the reaction fluxes of the network is significant, while the remaining reaction fluxes have negligible values. to test this hypothesis, they introduce a reduced network and provide a comparison with the original network with respect to the flux vectors that substantiate the claim. goryachev and pokhilko argue that in the efficient regime the operation of the gef-gap control module is given with the cycling loop formed by the union of two linear reaction flux pathways. given that ⇒ denotes the reaction flux between the species, these two pathways are given as the gef arm rd⇒rde⇒re⇒rte⇒rt⇒rd and the gap arm rt⇒rta⇒rda⇒rd. these pathways are indicated by solid arrows on the left-hand-side of figure  <dig>  the right-hand-side of figure  <dig> puts in comparison the fluxes obtained by stochastic flux analysis as discussed below.

in  <cit> , cardelli et al give a stochastic π calculus model of the rho gtp-binding proteins, which is based on the ordinary differential equations model of  <cit> . the model in  <cit> , displays an excellent agreement with the ode model of  <cit>  with respect to the rt activity on simulations with varying network structures and different regimes of initial concentrations. in the following, we consider this model for flux analysis. the conversion from the continuous to the stochastic model is explained in  <cit> , where a stochastic model species encodes  <dig> μm of network molecules. with respect to this conversion, in our network we use the same rate values that are used in  <cit>  and  <cit> , listed in figure  <dig> 

the time series analysis indicates that this network is insensitive to the initial r levels in terms of activity, given by the rt/r <dig> ratio at steady state. the network has an activity maximum with the initial concentrations r =  <dig>  mm, e =  <dig>  mm and a =  <dig>  μm <cit> . in order to analyze the flux of the network at the high activity regime, we ran simulations with r0 =  <dig>  e0 =  <dig> and a0 =  <dig>  where we took the closest positive integer number value for a <dig> so that factoring of the other simulation parameters would not be required. this results in a near-maximum activity of approx.  <dig>  at the steady state with fluctuations due to stochastic simulation. a representative simulation plot with these parameters is in figure  <dig> .

we analyzed the steady state behavior of the network with respect to the simulations at this regime. for this purpose, we computed the flux for the time interval  <dig> <t< <dig> , that is, f. this provides a sufficient number of events with respect to the convergence time of the simulation. as with time-series analysis, flux analysis in stochastic simulations needs to be repeated on multiple simulations in order to increase the confidence levels. while some systems require a greater number of simulations, others converge quickly to their steady state as it is the case for the rho gtp-binding proteins network here. nevertheless, due to the observations being made on stochastic simulations, we have repeated our analysis on a set of  <dig> simulations to verify our results, where we repeated the observations discussed below. a representative flux configuration with this network is depicted on the left-hand-side of figure  <dig> 

the initial number of species are r0=  <dig>  e0=  <dig>  a0=  <dig> 

in order to compare our flux analysis with the differential equation analysis of  <cit> , we further process the flux configurations to remove the effect of the reverse reactions as this is the case in  <cit> . these reactions, which we call cyclic reverse reactions, are those consisting of a reaction and its reverse, where the products of one are consumed by the other in cycles without having a net flux product for the other reactions in their context. because the fluxes in  <cit>  are computed by factoring the counter effect of cyclic reverse reactions on reaction fluxes, below we work with net-flux configurations, formally defined in definition  <dig> in the methods section. net-flux configurations counteract the effect of the cyclic reverse reactions in the flux configurations by taking their difference and mapping them into weighted dags. for the case of reverse reactions that share multiple reactants and products, we consider the maximum flux that is shared by these reactions. the net-flux configuration obtained from a flux-configuration is depicted on the right-hand-side of figure  <dig> 

in definition  <dig>  in order to monitor the net influence of each reaction to others, we first obtain a dag  from : whenever there are multiple edges from a reaction to another in , we include in  the edge with the greatest weight by discarding others. we then obtain the dag  from  by taking the difference of the symmetric edges: whenever there is an edge from a reaction j to j′ with weight m and an edge from j′ to j with weight n such that m is greater than n, we exclude these two edges, and include instead an edge from reaction j to j′ with weight m-n.

a net-flux configuration provides a summary of the net influence of reactions on each other by counteracting the effect of reverse reactions in the flux configuration and taking the maximum of fluxes, when there are multiple fluxes between two reactions. although this reduction can reveal further aspects of a network, there are cases where the information removed can denote an important component of the network, as we discuss in the next section.

as a second step for the comparison of our stochastic flux analysis with the deterministic analysis in  <cit> , we reduce the net-flux configurations to dominant fluxes that account for most of the dynamical behavior. for this purpose, we determine a cut-off value that is given by the average of the fluxes as defined below.

definition <dig> .
given a flux configuration f with edges 〈j <dig> j1′,s <dig> n1〉,…,〈jℓ,jℓ′,sℓ,nℓ〉, the average flux is ∑k=1ℓnk/ℓ. for a net-flux configuration n, the average net-flux is defined analogously.

definition <dig> .
given a flux configuration f and its average flux σ, for an x∈ℝ+, the flux after cut-off at x, denoted by f, is the restriction of f to those edges 〈j,j′,s,n〉 satisfying n>xσ. for a net-flux configuration n, we define the net-flux after cut-off at x, that is n, analogously.

we computed the net flux, n, for the simulations with this network, and applied various cut-off values to compute the net flux after cut off, that is, n, for these cut-off values . table  <dig> demonstrates  <dig> representative simulation results with respect to the average flux and the size of the graph n with respect to various cut-off values for x. the size of the graph is here given with the number of its edges. as the cut-off values increase, the size of n converges to  <dig> fluxes. in figure  <dig>  we depict f and n of sim.  <dig> in table  <dig>  we have chosen sim.  <dig> because the cut-off value of this simulation, which results in convergence, is highest among these  <dig> simulations, and we observe the same behavior as in the other simulations.

in terms of net-flux, these simulations deliver the more dominant flux pathway in the network at steady state as depicted in the left-most graph in figure  <dig>  where the dashed arrows denote the fluxes due to enzymes a  and e . as depicted in figure  <dig>  this observation is in agreement with the results of  <cit>  with the exception that the reaction flux path rt⇒rd is not included in our analysis in contrast to the results in  <cit> .

it is important to note that the reaction fluxes in  <cit>  are defined between network species as depicted in figure  <dig>  as we discuss below, our notion of flux conserves the information of reaction fluxes between species. however, in our stochastic setting, we talk about flux if there is a flow of resources between two reactions. because of this, the presence of a flux in the pathway from rt to rd could be explained only with the presence of the reaction rte→rt+e  to the reaction rt→rd . although this flux can be read, for example, in sim.  <dig> in figure  <dig> with a weight of × <dig> in the flux configuration f , it is much smaller in weight in comparison to average flux in f and n.

another important aspect of this analysis is that the reaction rte→rt + e  and its reverse reaction rt + e→rte  deliver a strong cyclic flux in f, as depicted in figure  <dig>  which cancels itself in n. however, this flux has an impact on the network, which we discuss in the next section.

when we carry the analysis above to the simulations where a <dig> is increased to  <dig> and  <dig>  we get the simulation plots depicted in the middle and right-hand-side of figure  <dig>  we observe the same flux pathway patterns for these simulations with respect to the net-flux configurations, as depicted in the middle and right-hand graphs in figure  <dig>  however, for the case of flux configurations, as depicted in figure  <dig>  these regimes introduce other cycles: the a0 =  <dig> regime has a strong cyclic flux given with rda→rd + a  and its reverse reaction rd + a→rda , which cancel each other in the net-flux configuration. the a0 =  <dig> regime has besides this flux also the cyclic flux given with rte→rt + e  and its reverse reaction rt + e→rte , similar to the a0 =  <dig> regime. these fluxes are not considered in the ode analysis as depicted in figure  <dig> 

as reported in  <cit> , e and a play distinct and separable roles in cycling control: the activity  is mainly delivered by e <dig> and the turnover rate is a function of a <dig>  the increase in a <dig> does not only decrease the rt activity, but also increases the turnover rate, which can be seen by comparing the ratio of the fluxes and the length of the time intervals. this symmetric situation in fluxes with respect to a quantities, which we discuss below, can be an explanation for these observations.

it is important to observe that the graphs depicted in figure  <dig> are generated from the simulations with the network. along these lines, goryachev and pokhilko argue that a subset of the fluxes of the original network is significant in the actual biological system, while the remaining fluxes have negligible values, and substantiate this prediction by comparing the reduced network with the original model. in this respect, the graphs given in figure  <dig> depict a reduced network and agree with the predictions of  <cit>  with the exception of rt⇒rd as discussed above. this reduced network is obtained by including only those reactions that are included in these graphs. the reduced network suggested by our flux analysis is in agreement with the reduced network given in  <cit> . moreover, the graphs in figure  <dig> and the reduced network is generated automatically by stochastic flux analysis, and their delivery does not require a further analysis of the network or the modeled biological system. because our notion of flux is based on flow of resources between reactions, it provides a quantitative means to observe the causality within the system dynamics. moreover, the stochastic nature of the approach makes it plausible also for the simulations where the quantity of certain species can be arbitrarily small.

the role of cyclic reverse reactions in network behavior
the net flux configurations demonstrate the dominant tendencies of the rho gtp-binding proteins network that are in agreement with the results in  <cit>  with respect to the ode analysis of the same network. however, when we compare the time series plots of the simulations of this network with those of the reduced network that we obtain from the net-flux analysis , we do not get a satisfactory agreement between them. this can be observed by comparing the time series plots of the simulations in figure  <dig> with the beginning of the simulations in figure  <dig>  where the reduced network diverges from the steady state values of the complete network, with which it has been initiated. in fact,  <cit>  provides a comparison of the reduced and complete networks in terms of histograms that display their activity, where this shift in behavior can be observed as well.

when we consider the simulations with respect to flux configurations instead of net-flux configurations, it is possible to get a different description of the network’s behavior as it is exemplified in figure  <dig>  this is because there can be strong fluxes in a flux configuration, which do not appear in a net-flux configuration since they cancel each other. however, these fluxes can play an important role for tuning the behavior of the network during simulation. this is because these fluxes have a greater weight in comparison to the others, and they thus shift the simulation resources, thereby causing a shift in the time series of the simulation.

consider the flux configuration f for the sim.  <dig> in table  <dig>  which is depicted on the left-hand-side of figure  <dig>  we employ a cut-off value of  <dig>  with respect to the analysis in table  <dig> on the same  <dig> simulations as in table  <dig>  in contrast to the net flux configuration on the left-hand-side of figure  <dig>  the flux configuration exposes a cyclic flux, given with 21↦rt <dig>  21↦e <dig> and 6↦rte <dig>  in order to understand the role of this cyclic flux, we ran simulations with a network, which extends the reduced network  with the reaction  <dig> . this is because the reaction  <dig> is included in the flux configuration analysis, although it is excluded by the net-flux analysis.

the initial number of species are r0=  <dig>  e0=  <dig>  a0=  <dig> 

example simulation plots of the reduced network with reaction  <dig> are depicted in figure  <dig>  this network and the complete network have identical flux configuration structures when sufficiently high cut-off values that are in accordance with table  <dig> are used. that is, the flux configurations of the original network and this network provide flux behaviors with identical structures with the cut-off values that provide a convergence in the number of fluxes in table  <dig>  as it can be seen by comparing the example simulation plots of this network in figure  <dig> with those in figure  <dig> and figure  <dig>  this network is closer to the complete network also in time-series behavior.

we made the same observations also for the cases, where a0 =  <dig> and a0 =  <dig>  however, as it can be seen in figure  <dig>  the simulations at the a0 =  <dig> regime expose in addition only the cyclic flux, given with 11↦rd <dig>  11↦a <dig> and 2↦rda <dig>  whereas the a0 =  <dig> regime expose this cycle as well as the one given with 21↦rt <dig>  21↦e <dig> and 6↦rte <dig>  although these fluxes are not captured in the reaction flux analysis of  <cit> , the observations made on time-series plots such as those depicted in figure  <dig>  figure  <dig> and figure  <dig> suggest that these cycles play an important role in fine tuning the behavior of the network.

by approximating the sample fluxes as normal distributions, we measured the sample mean and variance of the stochastic fluxes on sets of  <dig> simulations for the three cases of initial a levels, given in the additional file  <dig>  for any given error factor, we computed the probability that the sample mean and variance differ from the true mean and variance by at most the error factor. with this analysis with a sample size of  <dig>  we get estimates of the true mean and variance, accuracy of which can be improved by increasing the sample size. an implication of this analysis is that the variance seems to increase as a <dig> gets larger, which may indicate a kind of instability in the system.

comparing the notions of flux
we are using the term flux to refer to the flow of resources, that is, the flow of network species, between reactions. however, in deterministic ode models of chemical reaction networks, it refers to the rates of the reactions themselves. this latter version of flux is often called “reaction flux,” and we follow this convention to distinguish it from our concept. in the following, we show how reaction flux can be defined within our framework.

consider a reaction network with species s <dig> s <dig> …,s
n
 and reactions numbered  <dig> …,m. we write the reactions in the canonical form

  l <dig> js1+⋯+ln,jsn→r <dig> js1+⋯+rn,jsn, 

meaning reaction j consumes l
i,j
 instances of species s
i
 and produces r
i,j
 instances of species s
i
, for i =  <dig> …,n and j =  <dig> …,m. the effect of all the reactions is summarized by the n×m stoichiometric matrix a. letting a
i,j
 denote the element in row i and column j of a,

 ai,j=ri,j-li,j, 

the effect of reaction j on species i.

to compute the net effect of a sequence of reactions on the state of the network, let the state at time t be given by the column vector x = ′, where ′ denotes the transpose of a matrix or vector, and x
i
 is the population size of species i at time t, for i =  <dig> …,n. suppose that in the time interval , there are u
j
 instances of reaction j in this sequence, for j =  <dig> …,m, and each step in the sequence is feasible, i.e., all the x
i
 are large enough to avoid any population size becoming negative. then, letting u=′, the state at time t + Δt will be

  x+au. 

a is not a complete description of the network because it does not specify the reaction probabilities. as described in the definitions, each reaction j has an associated rate constant ρ
j
. to obtain the total rate of reaction j, ρ
j
 is multiplied by the number of possible ways of selecting the reactants. if the state is x, the total stochastic rate of reaction j is

  vj=∏i=1nxili,j×ρj. 

mass-action kinetics assumes that for small time intervals Δt, the average number of occurrences of reaction j is approximately v
j
Δt. therefore by , the average state at time t + Δt is approximately

  x+avΔt. 

 the classical approach to modeling reaction networks is to approximate them by their average behavior. essentially, the stochastic rates  are treated as deterministic rates called reaction fluxes, and the transition equations summarized by  are approximated by ode’s. in general, states in ode models are concentrations of agents rather than numbers of agents, and the equations must be altered by coefficients that depend on the volume in which the reactions take place. for simplicity, we assume a unit volume. then, taking Δt→ <dig> in , the dynamics of the network can be approximated by the system of ode’s

 dxdt=av. 

to define reaction flux within our framework, consider a simulation trajectory, and let n
j
 be the number of vertices of the form  in its simulation configuration such that t≤τ≤t′. that is, n
j
 is the number of times reaction j is applied in the time interval , and

  njt′-t 

is the rate at which reaction j has occurred over the interval . although  is a random variable, in the deterministic ode approximation of the network, as t′-t→ <dig>  it approaches v
j
, the reaction flux of j at time t.

the term “reaction flux,” as used by goryachev and pokhilko, is actually a variation on the definition given by . for any reaction j, let j′ be the reverse reaction. that is, if j is given by the reaction , then j′ is

 r <dig> js1+⋯+rn,jsn→l <dig> js1+⋯+ln,jsn. 

in some cases, the rate of j′ is  <dig>  and it is usually omitted from the list of reactions. goryachev and pokhilko take the reaction flux of j to be vj-vj′. for the cases, where v
j
 and vj′ have relatively close values, this expression results in a negligible flux, which explains the omission of the cyclic fluxes in  <cit> .

other examples
in this section, we apply our flux analysis to networks of models from biology and ecology as illustrative case studies.

an oscillator
below we consider a network that models an oscillator  <cit> . in the simulations with this network, the amounts of different species increase and decrease at periodic time intervals. because of this we compare the fluxes of a simulation at these different time intervals. the reactions of this network are given in figure  <dig> together with a time series plot of this simulation for the interval  <dig>  to  <dig> . here, the initial quantities are a0 =  <dig>  b0 =  <dig> and c0 =  <dig>  and the species a, b and c increase and decrease periodically during the simulation. in our flux analysis, we consider the individual time intervals, where each of a, b and c increase and decrease. for the increase, we consider the following time intervals:

 increases→a:→b:→c:→ 

0


 = 900
, b

0


 = 500
 and c

0


 = 100
.

the flux configurations for these time intervals are depicted in figure  <dig>  in all three flux configurations, the reactions that produce the increasing species receive a stronger flux in comparison to others that feed these reactions with resources. as depicted in figure  <dig>  a cut-off value of  <dig>  removes the smaller fluxes, while preserving the similarities in the structures of the graphs figure  <dig>  a cut-off value of  <dig>  results in a similar situation where, for example, for the case of species a, only the fluxes resulting from the resource flow from reaction  <dig> to reaction  <dig> remain.

when we consider the time intervals where each species decreases, we obtain, for example, the following time intervals:

 decreases→a:→b:→c:→ 

the flux configurations for these time intervals, depicted in figure  <dig>  deliver similar observations to those made with respect to flux configuration in figure  <dig>  in all three flux configurations for the considered non-steady-state time intervals, the reactions that cause a decrease in species receive a stronger flux in comparison to others.

oyster reef ecosystem
the oyster reef model network  <cit>  describes the flow of matter between components in terms of first order reactions, that is, there is only one species on the left-hand-side of the reactions, and also on the right-hand-side of the reactions. the reactions are listed in figure ??. we ran  <dig> simulations, where we initiated the simulations with the following steady state values: filter_feeder0 =  <dig>  dep_detritus0 =  <dig>  microbiota0 =  <dig>  meiofauna0 =  <dig>  dep_feeder0 =  <dig>  predator =  <dig>  in the simulations, there is a multiplicity of the reactions with smaller propensities. we observed that for the time interval of  <dig> to  <dig>  all the  <dig> simulations result in flux configurations with identical structures with the cut-off value  <dig> . the reaction flux graph of this network, as described in previous subsection, is depicted on the left-hand-side of figure ??. a representative flux configuration of these  <dig> simulations is depicted on the right-hand-side of figure ??.

it is important to note that the flux configuration in figure  <dig> quantifies the flow of specific species between specific reactions and how these species are consumed and produced by cycling in the network between different reactions. this analysis provides the causality information between reactions in terms of their dependencies, which cannot be revealed by simple reaction counting. in this respect, the causality information does not only quantify the dominant reactions, but also makes the flow of the system resources more explicit by distinguishing their distribution between different reactions, while taking stochasticity into the picture. for example, the flux configuration in figure  <dig> clearly shows the flow of dd from producing reactions  <dig>   <dig>   <dig> to consuming reactions  <dig>   <dig>   <dig> and  <dig>  whereas the reaction flux diagram shows only the total activities of the reactions. as discussed in the previous subsection the stochastic flux analysis can be used to construct the reaction flux graph, however constructing flux configurations from reaction graphs is more challenging, in particular for the time intervals that are not in steady state and for the networks that do not consist of only first order reactions.

based on the flux configuration in figure  <dig>  we designed a reduced network, which excludes the reactions  <dig> and  <dig>  from  <dig> simulations that we performed with this network, two simulations provided flux configurations with identical structures with the cut-off value  <dig>  at the time interval  <dig> to  <dig> when compared with the flux configurations of the complete network. the disagreement with the eighteen other simulations is because at cut-off value  <dig> , sixteen of these simulations prune the flux 10⇒ <dig>  and two of them prune also the flux 1⇒ <dig> 

phosphorelay
phosphorelays are signaling networks that are found in various biological systems. we analyze the network given in  <cit> , which models the biochemical phosphorelay mechanism, shuttling the phosphate group from the first to the last layer. the reactions of the network are as follows.

 1:l1+b→ <dig> l1p+b2:l1p+l2→ <dig> l1+l2p3:l2p+l3→ <dig> l2+l3p4:l3p+l4→ <dig> l3+l4p5:l4p→ <dig> l <dig> 

reaction  <dig> describes the phosphorylation of l <dig> by b. reactions  <dig>   <dig> and  <dig> describe the transmission of the phosphate to the other levels. reaction  <dig> describes the dephosphorylation of l <dig> 

we ran simulations with  <dig> l <dig>  l <dig>  l <dig> and l <dig> at the initial state. we analyzed the steady state fluxes of this network with different input signals, given with the quantity of b in the network. the time series plots of the simulations for  <dig> and  <dig> b are depicted in figure  <dig>  the flux configurations for the time interval  <dig> to  <dig> are depicted in figure  <dig>  these flux configurations, from left to right numbered from  <dig> to  <dig>  are obtained from simulations with  <dig>   <dig>   <dig>   <dig> and  <dig> b. we observe in all five flux configurations that the fluxes are equally distributed at the steady state through out the simulation. we observe that up to  <dig> b, the turnover rate is directly proportional with the quantity of the b in the network. however, the turnover rate with  <dig> b approximates the turnover rate of the flux configuration with  <dig> b.

we analyzed the fluxes from the time point  <dig> to  <dig>  where the network is not in steady state yet, for the  <dig> b case. the time series plot of a simulation and the flux configurations for the time intervals  and  are depicted in figure  <dig>  at the beginning of the simulation, the network is biased towards lower-levels, which feed the higher levels. this is because the phosphorylation of the higher-levels requires the phosphorylation of the lower-levels.

related work
flux analysis is well established for the continuous simulations of chemical reaction networks. in this respect, there are many studies dedicated to flux analysis that exploit the differential equation representation of these systems to provide different insights on a variety of aspects from system behavior to model reduction, see, e.g.,  <cit> . as in  <cit> , these studies also include considerations of deterministic representations of flux analysis for explaining the behavior of stochastic systems. extensive earlier studies include a series of papers, where schuster and colleagues give a theory of flux in biochemical networks that is based on linear equation systems, e.g.,  <cit> . in this setting, a flux mode is defined as a steady-state distribution in which the proportions of fluxes are fixed. the fluxes are then computed by using linear algebraic operations to detect all elementary flux modes, which are defined as minimal sets of enzymes that can operate at steady state with all reverse reactions proceeding in the direction prescribed thermodynamics.

being inspired by studies on non-interleaving semantics of concurrent systems, the current study aims at providing a purely stochastic interpretation of flux in chemical reaction networks. partial orders reflecting interdependencies and causal relationships in computations have been extensively studied within non-interleaving models of concurrency  <cit>  such as event structures  <cit> . for sequences of computations in such systems  <cit>  presents an algorithm for extracting partial orders that exhibit event structure semantics. based on these ideas, preliminary results of the current paper have been presented in  <cit> . there, we have applied the algorithm of  <cit>  to spim models of closed systems for flux analysis, where in each reaction a single species can be traced.

the relationship between stochastic models and causality has been studied by various authors. in  <cit> , danos et al draw connections between computational models of biological systems, event structures and their causality interpretation, while considering conflict as a mechanism of inhibition in signalling pathways. in  <cit> , curti et al apply the ideas presented in  <cit>  to the π calculus models of biological systems where the causality information on the modeled system is retrieved by labeling the syntax tree of the process expressions. probabilistic model checking is another approach, which shares goals with this work. model checking has been applied to realistic biological examples, e.g.,  <cit> , however the state of the art in exhaustive ctmc analysis does not scale well to large systems. along these lines, in  <cit> , ballarini et al introduce preliminary ideas on an approach for flux analysis by sampling the probabilistic weights of transitions in ctmcs, which however does not scale to larger models due to exponential size of these structures.

an approach, which is closely related to our method is kazancı and tollner’s particle tracking method for analyzing ecosystem models  <cit> . the particle tracking algorithm extends the gillespie algorithm with a mechanism that labels each species with a unique id, and randomly picks one at each simulation step. in this method dynamic systems, which can be expressed as stock-flow diagrams, can be analyzed. the reactions are thus restricted to single species on the left and on the right-hand-side.

CONCLUSIONS
we have presented a method for flux analysis in stochastic simulations of chemical reaction networks. our notion of flux provides a precise means for monitoring the flow between reactions, which is different from the flow between species as it is the case in the deterministic setting. because of this, our approach provides an accurate account of causality within the system dynamics. because it is applied on stochastic simulations, it can be employed in simulations where species numbers can be arbitrarily small. moreover, the analysis is not restricted to steady state, but it can be performed on arbitrary time intervals of the simulations as in the case of the oscillator network above, and these intervals can involve arbitrarily big or small number of events. while greater number of events provide more convergent observations, smaller number of events highlight the stochastic nature of the simulations.

the algorithms for generating the data structures of our method apply not just to gillespie algorithm, but to any discrete event simulator. and not only are they linear in space and time, but the simulation trace can be generated in real time. that is, because the information on resource consumption-production can be recorded in a bounded amount of time during simulation in real time, the method does not introduce any additional complexity to the simulation algorithm. this also suggests our approach as an alternative to model checking of networks with larger ctmcs due to its linear complexity, contrasting with the state-space explosion problem that stochastic model checking faces.

our steady state analysis of the rho gtp-binding proteins agree with some of the observations of the analysis in  <cit> . however, our analysis also introduces new observations: while being in agreement with the notion of flux used in the ode analysis in  <cit> , the net-flux structures, which counteract the influence of reversible reactions, do not succeed in providing a satisfactory means for identifying the network fluxes that give rise to the time series behavior. in contrast, flux configurations, which also take into account the flow of different species between reactions, permit the observation of all the fluxes, including the cyclic and enzymatic ones, which influence the dynamic behavior of the network. in addition, our analysis displays the effect of different initial conditions that highlight the dominant effect of certain fluxes at different regimes. these different initial conditions give rise to cycles of reverse reactions that shift the simulation resources, thereby adjusting the time-series behavior.

the data structures obtained by the flux analysis algorithm permit the observation of different aspects of the simulations. while the labels of the fluxes as species make it possible to apply label filters for filtering out the fluxes of certain species, the cut-off values make it possible to threshold the fluxes of a chosen relative strength. this also provides the means for obtaining reduced networks from a given network by excluding the reactions that are not included in the flux configurations with a chosen cut-off value. because increasing the cut-off values results in pruning greater number of fluxes with their reactions, the choice of a cut-off value provides a quantitative means for comparing networks and simulations. the cut-off values employed in comparing the fluxes above can also be seen as a confidence measure, since establishing a similarity between compared simulations for a smaller cut-off value can be perceived more reliable. we have employed a cut-off function that is based on the average fluxes of the system. however, different notions of cut-off can be more appropriate for different systems, which remains a topic of future investigation.

topics of future research include investigations on the influence of different aspects of reaction networks such as the relative contribution of structure and non-linearity to the dynamical behavior of the system. although strong non-linearity does not always imply variability in behavior for the stochastic systems, in some cases, and often due to small molecule numbers, stochastic systems can have quite different behaviors from the deterministic ones  <cit> . in this respect, stochastic analysis can provide novel observations due to the fluxes in comparison with the deterministic approach. investigations with a more statistical nature can also provide an insight to this discussion as the data analyzed by our algorithms is generated by monte-carlo simulations. in this respect, a confidence measure on the results of the analysis as in other monte-carlo simulations can provide estimates to reach a desired level of confidence.

