BACKGROUND
the currently preferred tool for uniform data presentation in systems biology, the syntactic and document orientated extensible markup language , cannot satisfy the requirements of highly dynamic and integrated bioinformatics applications. however, semantic web  <cit>  provides a universal mechanism for information exchange by describing, in a machine-interpretable way, the content of resources on the web. the growing need for integration of diverse and heterogeneous data sets from distinct communities of scientists in separate biological research fields has thus been the major driving force to migrate from traditional xml to semantic web  <cit> .

gene ontology  <cit>   is by far the most widely used bio-ontology. as of august  <dig>  it contains approximately  <dig>  terms, linked to a database of more than  <dig> million annotations of genes and gene products, originating from about  <dig> organisms. as a semantic web application domain, gene ontology consortium provides a rdf-xml data file . it is an export of the database, containing both the go vocabulary and associations between go terms and gene products. however, this file has drawbacks, making it unsuitable for providing complex semantic query and inference services.

the first drawback is the lack of relationships between concepts among different go subontologies, limiting the power of inference based on them. go has three independent subontologies, cellular component, biological process and molecular function. the terms in the subontologies are structured as directed acyclic graphs , and may have one or more parents with two types of relationships: 'is-a' is a simple class-subclass relationship, while 'part-of' represents a complex part-whole relationship. however, neither of them reflects the biological relationships among various subontologies. several approaches, lexical  <cit>  and non-lexical  <cit> , have been used to tackle this issue.

lexical approaches are based on the fact that go terms and definitions are themselves a type of semi-structured natural language. about 65% of all go terms contain another go term as a proper substring  <cit> . for example, the mfmannosyltransferase activity  shares a substring with the ccmannosyltransferase complex . the obol project proposed a formal language to provide computable definitions that serve to differentiate a term from other similar terms  <cit> . furthermore, bada et al. designed  <dig> patterns to match term substrings to concepts and predicted an initial set of over  <dig> associations  <cit> . lexical methods mainly focus on the analysis of the compositional nature of ontology terms, which leads to an increase in the number of relationships. the same ideas also could be applied to identify the dependence among various domains of biological knowledge, such as the open biological ontology  family, chemical entity , brenda tissue ontologies, and so on  <cit> .

statistical approaches based on the assumption that since some pairs of terms coming from different go subontologies are annotated to the same gene or gene product, the relationships should reflect an actual interdependence between them. by analyzing the statistics of co-occurrence of go terms in the model organism annotation databases of the gene ontology annotation , bada et al. developed the gene ontology annotation tool   <cit> . goat assists the gene ontology next generation  project  <cit>  to convert go terms into a description-logic-based ontology . similarly, kumar mined the tigr database to establish the corresponding patterns of association between terms in go  <cit> . other non-lexical methods, such as computing similarity in vector space, association rule mining, ontologies analysis, have also be introduced to address this problem  <cit> .

the second drawback is that the rdf-xml data file is organized with a term-centric view of go annotation data. all information is stored in a single file. the loading, querying and visualizing of massive amounts of rdf datasets are the main bottleneck of semantic web prototype applications  <cit> . several semantic web tools, sesame  <cit> , kowari  <cit> , jena <dig>  <cit> , 3store and rdfstore, have been developed and made available. unfortunately, these repositories are not suitable for work with large amounts of data .

on the other hand, the scale of semantic web datasets of the life sciences increases dramatically. many communities, such as go, uniprot, umls, omim, kegg and mged, have provided download services for data encoded in rdf or web ontology language  format. correspondingly, semantic web prototype tools have been developed to address life science and health care requirements. for example, biodash  <cit>  provides a drug development dashboard that associates disease, compounds, drug progression stages, molecular biology, and pathways for a group of users. the yeasthub  <cit>  and bio2rdf  <cit>  projects explore how the needs for data integration can be addressed by the semantic web and how a life sciences data warehouse can be built. however, most of the semantic web prototype applications create an rdf repository using the computers' main memory to speed up performance. this solution poses a high demand on the application server and is unable to satisfy the need for rapid growth of semantic web applications.

the third drawback is the lack of support for goslim. goslims are cut-down versions of the go ontologies containing a subset of all terms in go. they are particularly useful for giving a summary of the results of go annotations of genomes, microarrays or cdna collections  <cit> . however, goslim properties are not considered in rdf-xml data files.

RESULTS
in this paper, we present a rdf model gorouter, which mainly demonstrates how to use multiple semantic web tools and techniques to integrate heterogeneous resources and to create additional semantic relationships between different rdf datasets.

by introducing glue system  <cit>  to create ontology mappings between pairs of terms coming from the three independent go sub-ontologies, introducing a set of inference rulebases, and using the oracle network data model   <cit>  as the native rdf data repository, we believe that gorouter has the capability to allow complex semantic queries and inference services for go and its associations.

datasets and software availability
gorouter is licensed under apache license version  <dig>  and available for free download from the sourceforge website . based on gorouter, we provide an application  for searching and browsing go and its associations, and which also delivers additional functions such as semantic inference services.

discussion and 
CONCLUSIONS
algorithm advance
in this section, we discuss some shortcomings of current algorithms for ontology mapping.

firstly, finding associations using non-lexical and lexical approaches has little overlap  <cit> . myhre et al. attempt multiple strategies to bridge this gap  <cit> . the glue system supports multiple learning strategies to generate join probability distribution. however, our project currently only employs an annotation statistics strategy. integrating lexical learning strategies into the project will be the main focus of the next development phase.

secondly, the glue system can currently not handle more sophisticated mappings  between go terms. as an extended version of the glue system, cglue  <cit>  can be used to exploit complex mappings.

thirdly, the glue system only focuses on finding correspondences among the taxonomies of two given ontologies. ontology specifies a conceptualization of a domain in terms of concepts, attributes and relations. the concepts provide model entities of interest in the domain, and they are typically organized into a taxonomy tree. despite taxonomies being central components of ontologies, attributes and relations also need to be considered during the process of exploit mapping.

rdf to owl
owl builds on rdf and adds more vocabulary along with formal computational definitions for reasoning. compared with rdf, owl facilitates greater machine interpretability of web content. the owl format is becoming the next generation of bio-ontology representation  <cit> . several ontology editors, such as obo-edit  <cit> , protégé-owl  <cit>  and cobra  <cit> , can be used to perform the translation and provide description logic reasoning.

we currently use oracle 10gr <dig> ndm as rdf repository, which does not incorporate native owl support. the next generation, oracle spatial 11g, will support both rdf and owl data management  <cit> . it is another important task for us to migrate gorouter from rdf to owl format.

refinement and extension
the go project is a collaborative effort to address the need for consistent descriptions of gene products in various databases. however, some molecular functions, biological processes and cellular components are not common to all life forms. go uses the designator sensu, 'in the sense of', to name those species-specific terms. for instance, bpinvasive growth   represents the invasive growth process of saccharomyces cell, which can only be used to annotate genes and gene products of the saccharomyces genome database . these species-specific terms violate the species-independent principle of the go vocabulary.

from another point of view, one could call this phenomenon a semantically-weak problem: the go vocabulary has no control over the semantic context of term names. we will address this problem by introducing the ncbi organism classification  into gorouter. by separating species-specific terms from the go vocabulary, we plan to create a set of special go subsets, which can be applied to the specified class of organism. furthermore, the taxon vocabulary can also be used to identify the species encoding gene products. by introducing taxon, we can create richer relations across various gos and their annotations.

similarly, we also plan to introduce sequence ontology  <cit>  , a sister project of go, to describe features and attributes of gene sequences and gene products. in recent years, the development of bio-ontologies has been very rapid  <cit> . as an essential part of obo collection, go development principles have been extended to many other biological domains and give an opportunity to introduce more ontology and annotations into gorouter to enrich the content of semantic relationships.

gene ontology is itself dynamic  <cit> . the development of go terms and annotations reflects the current status of biological knowledge. for instance, the go consortium has partially completed the subsumption hierarchy  for the cellular component ontology, and the project is expected to be completed in  <dig>  the plant-associated microbe gene ontology  interest group introduced a new set of terms representing pathogenic and symbiotic processes. alongside the continuous improvement of go ontology content, increasing model organism databases and genome annotation groups contribute annotation sets using go terms.

in summary, all these changes indicate that the content of gorouter needs to be correspondingly augmented, refined and reorganized. these requirements provide two challenges: one is to improve model flexibility and the other is to adapt performance to the continual increase in size. by using multiple semantic web technologies and tools, we believe that gorouter can overcome these problems.

