BACKGROUND
high-throughput technologies, including genome sequencing, expression profiling, and large-scale interaction and localization assays, have provided a wealth of data about proteins and their properties, particularly for the model organism saccharomyces cerevisiae  <cit> . the process of inferring functional information from these data is not straightforward. the data are not of uniformly high quality and must be weighted in an appropriate way  <cit> . computational methods such as machine learning hold promise for this task, but they require a clear definition of "protein function". gene ontology  has emerged as a unifying framework that makes it possible to carry out computational function annotation  <cit> .

go uses expert curation to systematically describe the role of proteins in the cell. three hierarchical ontologies are used: molecular function  describes the specific molecular task performed by a protein, biological process  describes the broader biological activity a protein participates in, and cellular component  describes the subcellular location or complex where a protein is found. the deeper an annotation is in one of the go hierarchies, the more informative and specific it is. for example, at a low level the yeast protein mcm <dig> is annotated with "catalytic activity" as a molecular function, but at the most detailed level of the mf hierarchy its description is "atp-dependent dna helicase activity". similarly, mcm2's biological process of "cell growth and/or maintenance" is refined to "dna unwinding", and the general descriptor "nucleus" is refined as "pre-replicative complex" at the most descriptive level of the cc classification. an important goal is to provide the most detailed possible annotations for all proteins. currently, however, only ~60% of the s. cerevisiae proteome has annotation at the most descriptive level of at least one of the mf, bp or cc classifications.

many groups have explored computational analysis as a way to expand functional assignments. for example, the genomic context of a gene can reveal functional relationships, especially in prokaryotes, as can patterns of co-evolution  <cit> . several methods have been proposed for using experimental protein-protein interaction networks to assign functional descriptors to unknown proteins on the basis of their interaction partners  <cit> . other researchers have developed methods for combining multiple sources of data  <cit> . troyanskaya et al. used a bayesian approach to increase the accuracy of functional predictions of go bp terms  <cit> , and jansen et al. predicted new members of protein complexes in this way  <cit> . tanay et al.  integrated several sources of experimental data to generate statistically significant protein "modules" and used the modules to assign go bp terms to  <dig> uncharacterized yeast proteins  <cit> . most recently, lee et al. used a bayesian framework to build networks reflecting functional relationships between  <dig>  yeast proteins  <cit> .

we present a method called avid  for predicting functional relationships among proteins. avid integrates the results of high-throughput experiments, and incorporates sequence data, to build unified, high-confidence networks in which proteins are connected if they are likely to share a common annotation. we illustrate one use of these networks by treating functional annotation as a classification problem and assigning go terms to individual proteins based on their neighbors in the networks. avid is distinct from previous computational function prediction methods in several ways that will make it a useful tool for experimental biologists. first, avid predicts functional annotation in all three go categories: mf, bp and cc. this provides a more complete view of an uncharacterized protein's possible role in the cell than any single term alone. second, the functional terms predicted by avid are very detailed. we adopted only the most specific terms in go as a list of possible annotations and refer to these as avid go terms. avid go terms have no functional subcategories. there are  <dig> avid go terms for mf,  <dig> for bp and  <dig> for cc that are used for yeast. such terms are considerably more useful than general ones, and they are also harder to predict. third, by considering five different types of input data, avid achieves good coverage; we report here predictions of new go terms for about half of the yeast genome. fourth, avid is reliable. the functional networks generated are 65–78% accurate and annotation of proteins is 52–67% accurate. the trade-off obtained between coverage and accuracy is superior to that obtained using a naïve bayesian framework. finally, avid predicts relationships among proteins that are largely distinct from those that have been suggested by other computational methods  <cit> .

here, we describe three stages used in avid to construct functional correlation networks and a fourth stage that is used to assign specific functions to individual proteins. we report the estimated accuracy of avid at different stages using known data. then we describe the results of applying avid to the entire yeast proteome to generate new go annotations.

RESULTS
description and performance of the four stages of avid
in stage  <dig>  diverse features, such as the presence or absence of sequence similarity, or the observation of a protein-protein interaction, are considered as potential indicators of whether two proteins share an avid go term . for each type of evidence, i, and each go category, j = {mf, bp, cc}, we define a correlation coefficient pijavid <dig> to describe how well the evidence predicts functional similarity. for all three ontologies, mf, bp and cc, there is a weak positive correlation between the experimental observation of an interaction  and similarity of annotation. sequence similarity is correlated with mf and bp, but less so with cc, consistent with the expectation that evolutionarily related proteins frequently have related functions but act in diverse parts of the cell. the cellular localization data of huh et al.  <cit>  correlate positively but very weakly with cc. this is because go cellular components, at the most detailed level, are protein complexes that are much more descriptive than this experimental localization data. avid go terms in the cc classification should often, in fact, be regarded as descriptions of protein interaction rather than cellular localization. thus it is not surprising that, e.g., two proteins sharing the location "nucleus" have a low probability of participating in the same complex . gene co-expression profiles correlate with all three go functional types; the higher the pearson correlation between two expression profiles is, the more likely the two proteins share a go term of any kind. most of the correlations between data and function are very weak; none of the correlation coefficients are greater than 35%. nevertheless, differences between the  and  data sets  make these sources valuable for inferring functional similarity.

stage  <dig> is a filter that combines data sources and removes protein pairs that lack sufficient evidence of functional relatedness. for each pair of proteins, a pjavid <dig> value is defined as the product of the normalized conditional probabilities pijavid <dig> from all sources of evidence in stage  <dig>  tests using known proteins show that pairs with a pjavid <dig> value greater than  <dig>  have more than  <dig> %,  <dig> % or  <dig> % probability of mf, bp or cc relatedness . pairs with pjavid <dig> <  <dig>  are not considered further. good coverage is preserved using this cutoff:  <dig> %,  <dig> % or  <dig> % of proteins in test sets with existing mf, bp or cc annotation are retained by the filter.

to improve accuracy while still making predictions for a large number of proteins, a machine learning scheme  is employed in stage  <dig>  <cit> . the tree takes the stage  <dig> conditional probabilities as input, and returns a binary decision about whether two proteins are likely to share a function. the entire process used to predict the similarity of three pairs of proteins is illustrated in detail in additional file  <dig>  which includes diagrams of the decision trees for mf, bp and cc.

stages  <dig>   <dig> and  <dig> result in the construction of a reliable protein correlation network for each of the go functional types. the three networks relate proteins likely to share a similar function or be part of the same protein complex. ten-fold cross-validation testing using proteins with existing go annotation showed that 77% of mf, 65% of bp and 78% of cc pair-wise relations predicted in stage  <dig> were correct. furthermore,  <dig>  proteins ,  <dig>  proteins  and  <dig> proteins  for mf, bp and cc, respectively, were retained in pairs judged to have functional similarity after stage  <dig>  alternative machine-learning strategies were tested but did not show any improvement in performance. all of the stages employed to construct the networks are important. in particular, a decision tree applied to unfiltered data was not as effective, resulting in 4–21% reduced coverage and 2–3% reduced accuracy for bp and cc, and ~10% reduced accuracy for mf, compared to the full 3-stage process.

in stage  <dig>  a "majority rule" algorithm is used to annotate uncharacterized proteins based on the correlation networks. avid often predicts several go terms for a protein. the average number of functions predicted  is  <dig>   for mf,  <dig>   for bp, and  <dig>   for cc. in testing, if any of the avid predictions were identical to an existing go annotation the prediction was counted as correct. if one term was correctly predicted, all terms were correctly predicted 85% of the time for mf, 74% of the time for bp and 83% of the time for cc.

as mentioned above, avid predicts  <dig>  to  <dig>  times as many avid go terms per protein as already exist in go. this is expected, because current annotation is incomplete. in tests on annotated proteins, the percentage of functional terms predicted by avid that are already included in go is 46%, 33% and 47% for mf, bp and cc, respectively. we recover 63% , 44%  and 60%  of previously annotated avid go terms.

new networks including unannotated s. cerevisiae proteins
we applied avid to the entire yeast proteome, generating three new networks that include proteins for which detailed avid go annotation is not yet available. these predicted networks have similar connectivity to the networks generated from existing go data for testing. the average numbers of edges per node in the testing networks were  <dig> ,  <dig> , and  <dig>  for mf, bp and cc, respectively, whereas in the prediction networks these averages were  <dig> ,  <dig>  and  <dig> . the distribution of connectivities in the different networks are provided in additional file  <dig>  using the predicted networks, we made two types of functional predictions. all predictions are available in additional files  <dig> and  <dig> 

refined predictions
first, we predicted a more detailed function or location for proteins previously characterized only at less descriptive levels in go, we refer to these as refined predictions. we evaluated whether refined predictions are consistent with existing coarser annotations at go levels  <dig>   <dig> and  <dig> for mf, bp and cc, respectively. an avid go prediction was judged consistent with a coarser one if the less descriptive term is its ancestor in the go hierarchy. there are  <dig> functional categories in mf level  <dig>   <dig> functional categories in bp level  <dig> and  <dig> functional categories in the cc level  <dig>  so this comparison is a non-trivial test. because the definition of "level" can be ambiguous, the categories used are listed in additional file  <dig> 

novel predictions
in a second type of prediction, we assigned one or more avid go terms to proteins without any existing annotation in go at any level, we refer to these as novel predictions. note that these are novel in the sense that they annotate proteins not previously included in go. other sources of evidence regarding function may exist, e.g. in the literature or at the saccharomyces genome database   <cit> . we made novel mf predictions for  <dig> proteins, novel bp predictions for  <dig> proteins and novel cc predictions for  <dig> proteins . the refined and novel predictions for mf, bp and cc together cover 51% of the yeast proteome and, when combined with existing annotations, provide avid go descriptors for ~80% of yeast proteins. cross-validation testing indicated that these predictions are ~52–67% accurate . the accuracy of specific novel predictions is hard to evaluate systematically, but we assessed the plausibility of a subset of both our refined and novel predictions using the experimental data of hazbun et al.  <cit>  , which were not included in the version of go used to develop our method. in this work,  <dig> uncharacterized open reading frames were labelled with a tandem affinity purification tag. mass spectrometry was used to identify proteins that form a complex with the gene product of interest. overlap with the high-throughput affinity purification data used as input to avid was very low . for each novel annotation predicted by avid for a protein localized to a complex by hazbun et al., we classified it as go-consistent if another member of the complex had the same annotation in go, and as avid-consistent if another member of the complex had the same annotation predicted by avid. we found that ~46% of mf, ~16% of bp and ~27% of cc predictions were go-consistent; ~73%  of mf, 63%  of bp and 71%  of cc predictions were go- or avid-consistent. among the annotations not formally classified as go- or avid-consistent some are nevertheless clearly relevant. for example, avid assigns "mitotic chromosome segregation" to ynl313c. in the hazbun experiments, ynl313c co-purified with tub3p, and tub3p is annotated in go with the very similar term "homologous chromosome segregation". thus, avid predicted the functional similarity of ynl313c and tub <dig>  and this was supported later by the co-purification of these proteins. notably, the avid prediction of similarity of ynl313c and tub <dig> did not come directly from experimental evidence; there is no direct edge between these two proteins in any of the avid networks.

avid predictions of mf, bp and cc were made using different weighting of the input data, different functional categories and different stage  <dig> correlation networks. for  <dig> proteins, avid provided novel predictions in all three of these categories. in many examples, the three novel predictions are related and consistent . here we list several examples from these  <dig> proteins where experimental data, or descriptions in sgd, support our predictions. first, yor179c  was assigned by avid a bp of "mrna polyadenylation", a mf of "cleavage/polyadenylation specificity factor activity" and ccs of "mrna cleavage factor complex" and "cleavage and polyadenylation specificity factor complex". go annotation added after our predictions were completed assigned yor179c "mrna cleavage and polyadenylation specificity factor complex" as a cellular component, based on the experiments of nedea et al.  <cit> . in another example, avid assigned "trna-intron endonuclease activity" , "trna splicing" , and "trna-intron endonuclease complex" , to ylr375w . sgd lists the description "involved in pre-trna splicing and in uptake of branched-chain amino acids" for ylr375w, although this information is not included in go or supported by literature references at sgd  <cit> . in a third example, avid assigned yel018w , yer092w  and ydl002c  to "histone acetylation" , "chromatin binding" , and "nucleosome remodelling complex" ; sgd reports for eaf <dig> the description "subunit of the nua <dig> acetyltransferase complex", and for ies <dig> "protein that associates with the ino <dig> chromatin remodelling complex under low-salt conditions". the involvement of nhp <dig> in chromatin remodelling is also supported by shen et al.  <cit> . similar consistency among mf, bp and cc predictions supports the annotation of ybr043c, yil121w  and yol137w  as plasma membrane-associated proteins involved in glucose transport and/or galactose metabolism and the assignment of yer084w, ygr017w, ylr154c  and ypl014w as being related to  protein kinase ck <dig> activity. many other suggestive examples are available in additional file  <dig> 

we have constructed an interactive web server that allows users to individually trace the data that contributed to any prediction  <cit> . for example, to understand the origins of the mf prediction made for yol137w, shown in figure  <dig>  a user can look up the identities and functions of all neighbors of this protein in the stage  <dig> networks. for each neighbor, we provide information about what experimental or sequence data was used to establish the relationship, as well as the stage  <dig> weight assigned to that data source, and an additional measure of confidence from the decision tree processing . we also give its status as "known", "refined" or "novel". this makes it possible to establish, for example, that yol137w was assigned go term  <dig>  because the majority rule vote by neighbors of known function was won by yol156w and ydl138w, which share go term  <dig>  the association of these proteins with yol137w was determined primarily from sequence similarity and mrna co-expression. users can also see, however, that yol137w is predicted to share functional similarity with other proteins, e.g. yol103w , also on the basis of sequence similarity and mrna co-expression. this demonstrates how examining avid network relationships can provide a broader picture than the stage 4-assigned terms alone.

comparison to other methods
a variety of methods have been proposed in the literature for the computational annotation of protein function, but these are difficult to compare given the lack of adequate "gold standard" data sets for universal testing. there are further obstacles to rigorous comparison. first, groups formulate the function prediction problem differently. for example, our use of highly specific go terms is distinct from the generally broad  functional classifications used by others. second, methods use different sources of evidence and training sets. finally, various methods provide different forms of output, ranging from sets of pair-wise relationships between proteins to functional modules to specific functional annotations.

bayesian frameworks are popular for data integration problems, and have been applied to the prediction of protein functional similarity and protein-protein interactions  <cit> . to compare the avid framework rigorously with a naïve bayesian net, we implemented the method of jansen et al.  <cit>  and applied it to our set of reference proteins. as shown in figure  <dig>  avid stages  <dig> and  <dig> perform comparably to this formalism for mf and bp, although they out-perform it for cc. with the addition of the decision tree in stage  <dig>  however, the trade-off between accuracy and coverage improves significantly for avid. whereas both methods are good at making high-confidence predictions at low coverage, the avid framework maintains much better true positive to false positive ratios than the naïve bayes net at higher coverage.

although implementing and comparing a large number of other approaches for the same data is beyond the scope of this work, we can compare overall results obtained by different groups. this turns out to be interesting and surprising. for six published methods that generate pair-wise relationships among yeast proteins, we compare the coverage and overlap of the predicted associations in table  <dig>  we compare methods at roughly comparable levels of accuracy to that of avid , using estimates of the original authors. avid predicts  <dig>  relationships among  <dig>  proteins. lee et al.  <cit> , referred to here and in table  <dig> as "marcotte") also obtain very high coverage:  <dig>  high-confidence associations among  <dig>  proteins. string further predicts  <dig>  functionally related pairs. however, the largest overlap between any two methods in table  <dig> is only  <dig>  pair-wise associations predicted by both marcotte and string  <cit> . both of these methods use genomic context as an important predictive element. avid does not consider genomic context and shares only  <dig>  predictions with string. these make up 9% of the total avid predictions, and no other method shows greater overlap. out of  <dig>  high-confidence associations predicted by avid and  <dig>  by marcotte, only  <dig>  of these are in common. in light of the fact that all methods show incomplete coverage and imperfect accuracy, the distinct predictions made by different methods are a significant advantage because they provide alternatives that can profitably be considered by experimentalists.

CONCLUSIONS
computational annotation of the proteome has a critical role to play in post-genomic analysis. although hypotheses about function can often be reached by carefully reading the literature and critically examining high-throughput data, computation can speed and assist this process. further, computational methods can help discriminate reliable data amidst false positives and negatives. as a tool for this purpose, avid notably provides functional descriptors at a high level of detail. the strategy of predicting mf, bp and cc terms also provides a more comprehensive description of protein function than many alternative approaches. finally, avid performs better than simple naïve bayesian integration, and the predictions of avid are largely distinct from those that have been made by other methods.

the stage  <dig> networks generated by avid are very accurate  and are useful in the absence of stage  <dig>  the specific predictions made in stage  <dig> are accurate enough to be of practical utility, but they do have limitations. the imperfect majority rule algorithm will sometimes select one function over others that may be equally relevant. further, because we consider only the most detailed go categories in training and prediction, some predictions will be incorrect because they are overly specific, even when they correctly reflect the general cellular role of a protein. for these reasons, consideration of the entire stage  <dig> functional networks is likely to be most useful to experimental biologists. other algorithms for assigning function based on the avid networks may give better performance. this is an active area of research  <cit> .

avid can be used to assign new proteins to existing go functional categories. the catalogue provided by go is incomplete, however. accurate descriptors have not yet been defined for all possible functions, processes and compartments. because of this, proteins with new functions will not be successfully assigned by avid. within the limitations imposed by go, however, performance on novel proteins may be better than estimated by our testing. when assessing the performance of stage  <dig>  we treated known proteins as unknown. this reduced the size of the training set for stage  <dig> to less than half of that available when making new predictions; this decreases predictive accuracy. furthermore, most proteins have more than one function, and many are found in more than one cellular compartment or complex. when assessing avid stage  <dig>  predicted functional similarities among test proteins that are not yet annotated in go are counted as wrong and thus reduce the estimated success rate, even though many are likely to be correct.

algorithmic function prediction can be approached from different perspectives, and it will be important for computational biologists to explore various formulations of the problem as well as solutions to it. ultimately, the value of any approach will be justified through the cumulative success of experiments that it inspires. our functional networks provide numerous candidate proteins for involvement in important biological processes. biologists who consult avid as part of their work are likely to find new predictions of function for their genes of interest that are accurate enough to guide experimental characterization. thus, avid is sure to provide a useful resource for the yeast community.

