BACKGROUND
our understanding of the role of rna has changed and continues to be redefined. it was once believed that the sole purpose of rna is to carry the information needed to construct a specific protein. this information is obtained from the protein’s gene and carried from the nucleus of the cell to the machinery outside the nucleus in the cell where the protein is then constructed. that is, rna carried the protein’s code. it is now known that rna is a major player in many gene regulatory networks and that there are numerous rna structures whose function does not involve coding for a protein. thus, we now refer to rna as either coding or non-coding. novel non-coding rna structures are still being found and the number of non-coding rna structures now exceeds the number of coding rna  <cit> . the role of non-coding rna in gene regulatory networks places the study of rna in the forefront of efforts to understand the complexities in systems biology.

a number of algorithms have been developed to predict the secondary structure from the primary structure. most of these algorithms use the thermodynamic parameters based on the principle that the most likely secondary structure is one having the minimal free energy. but some suggest the actual rna secondary structure may have local instead of a global minimum free energy  <cit>  and thus many algorithms try to simulate rna folding processes by iteratively adding stems rather than pairings  <cit> .

rnaalifold  <cit>  integrates thermodynamic and phylogenetic information in a modified energetic model. there is general agreement that there is still room for improvement in each of these approaches  <cit> . the database rag: rna-as-graphs represents secondary rna using graph theory  <cit> . the details of the graph-theoretic representation are provided in the following section. we utilize the information in the rag database to develop a novel predictive tool for secondary rna structure. when our tool is applied to predict secondary rna structures that are listed in the database, our results concur with the database. we then predict additional secondary rna structures with our graph-theoretic based predictive tool. given that most algorithms return several predicted secondary structures, ranking them in order of likelihood, we provide an additional tool to assist in the determination of which of the predicted structures is most likely.

modeling rna
rna structure is divided into three classes: primary, secondary and tertiary. the rna sequence is the primary structure. the primary structure forms the secondary by folding back onto itself. when this folding occurs, it forms watson-crick base pairs with intervening unpaired regions. these regions occur in four types of structures known as hairpins, bulges, internal loops and junctions. paired regions connecting these are usually referred to as stems. secondary rna structure can be represented by a two-dimensional drawing. tertiary rna, or the three dimensional rna molecule, can be best described as being built from combinations of secondary structure. thus, the study of the secondary structure of rna has received and will continue to receive much attention.

since secondary rna is represented by a two-dimensional schematic, graph theory nicely lends itself as a modeling tool for secondary rna structure. the basic skeletal structure of secondary rna is captured by representing the stems as edges of the graph and the regions with unpaired bases as vertices. the resulting graph is a graph known as tree graph, or simply a tree. the rna trees used in this work were first developed by le et al. in  <cit>  and morosetti  <cit>  to determine structural similarities in rna.

to quantitatively organize and archive all possible rna tree representations, it is necessary to first generate the collection of all possible trees for a given number of vertices . for example, for the set n = { <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  9}, there are a total of { <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>  47} distinct trees, respectively  <cit> . the rag database catalogs all tree structures for trees up to order  <dig>  <cit> . according to  <cit> , the second eigenvalue λ <dig> measures a motif’s topological complexity. for example, a more linear tree graph has a lower λ <dig> value while a highly-branched tree graph has a high λ <dig> value. the rag database catalogs each potential rna motif by . for easy reference, each rna motif has a specific index , where z represents an integer corresponding to the λ <dig> ranking.

the trees with  <dig> through  <dig> vertices have been fully classified as known , candidate or non-candidate. the research compiled in  <cit>  organizes all known, candidate and non-candidate rna trees of order  <dig> or less by a color coding scheme. red trees represent known rna, blue trees are candidate rna and black trees are non-candidate trees. a tree that is either a known tree or candidate tree is referred to as an rna-like tree and a non-candidate tree is referred to as not-rna-like. the remaining trees on  <dig> or higher vertices have not be grouped into these three categories. this catalog of rna trees is intended as a tool for searching existing rnas and to stimulate the search for candidate rna motifs not yet discovered in nature or a laboratory.

there are a number secondary rna structure prediction algorithms available online such as zuckers mfold and vienna rfold. given the primary rna sequence, the web server will return a list of predicted secondary folds. these programs are based on finding the secondary structure with the total lowest free energy by calculating the free energy of a number of base-pairing schemes and returning the lowest energy potential secondary structure as the most probable  <cit> . in the majority of cases, even for long sequences, the predicted structure is a structure whose tree representation is a small ordered tree . however, there are secondary rna structures whose tree representation is a tree with  <dig> or more vertices. for example, the 5s ribosomal rna clavibacter michiganensis  has a  <dig> vertex tree representation.

research description
in this work we consider the possibility that a larger secondary rna structure is formed by the bonding of two smaller secondary rna structures. we model this bonding process by defining a graph merge that occurs on the vertices of the trees. if our hypothesis is valid, then larger secondary rna structures should arise from trees that are unique to secondary rna structure, and not from arbitrary trees. that is, only trees that represent rna, and hence are thermodynamically stable structures, can be used to produce a tree which is still stable. we test this hypothesis and find, under specified constraints, stable trees are produced by merging two stable trees. furthermore, by applying a predictive model, we find that some of the trees in the rag database that are listed as candidate rna structures are not clearly rna-like in structure by our method. our approach is novel, and may be considered as a valuable tool for refining prediction algorithms. it also illustrates the applicability of graphs as models, not only for secondary rna, but for biomolecules in general. in order to formalize this idea, we introduce the graph-theoretic terminology and concepts.

basic terminology of graph theory
in graph theory, trees have been heavily studied both for application purposes and theoretical investigations. as defined in  <cit> , a graph g = , e) is a nonempty, finite set of elements called vertices together with a  set of unordered pairs of distinct vertices of g called edges. the vertex set of g is denoted by v, and the edge set of g is denoted by e. here we consider only simple graphs, that is, graphs with no loops or multiple edges. a tree is commonly defined as a connected graph with the property that no two vertices lie on a cycle. these two properties, connected and acyclic, completely characterize a tree since the removal of any edge will disconnect the graph, and the addition of any edge will create a cycle. further, this implies that any tree with n vertices contains n –  <dig> edges.

an isomorphism of graphs g and h is a bijection between the vertex sets of g and h, f : v → v, such that any two vertices v and w of g are adjacent in g if and only if f  and f  are adjacent in h. this kind of bijection is commonly called an edge-preserving bijection or a structure-preserving bijection. if an isomorphism exists between two graphs, then we say the graphs are isomorphic and we write g ≃ h. to illustrate these terms, figure  <dig> displays two isomorphic trees. figure  <dig> shows the six non-isomorphic trees of order  <dig>  figure  <dig> shows the index value and color codes of the six trees on  <dig> vertices as shown in  <cit> . two vertices joined by an edge are said to be neighbors and the degree of a vertex v in a graph g, denoted by degg, is the number of neighbors of v in g. a vertex of degree one is called a leaf, and its neighbor is called a support vertex. for use in this paper, a vertex v in a tree t is an internal vertex if it is neither a leaf or support vertex.

two vertices u and v are said to be identified if they are combined into a single vertex whose neighborhood is the union of the neighborhoods of u and v. the binary operation merge of two graphs g <dig> and g <dig> forms a new graph guv by identifying a vertex u in g <dig> with a vertex v in g <dig>  figure  <dig> demonstrates vertex identification at the colored vertices for the pictured trees.

RESULTS
we consider the possibility that a larger secondary rna structure could be formed by the bonding of two smaller secondary rna structures. we model this bonding process by defining a merge operation on two trees. in this research, we determined all possible tree merges which result in a tree with  <dig> or fewer vertices. we use the rna online-database rag and the tree color code developed by schlick et al. in  <cit>  and discussed in the introduction. recall that red trees are rna-like , blue trees are rna-like  and black trees are not rna-like . note that in a tree model of a secondary rna structure, a hairpin corresponds to a vertex of degree one, internal loops and bulges are vertices of degree two, and junctions correspond to vertices of degree three or more.

initially, we hypothesized that the color of the merging trees would be indicative of the color of the result tree. however, we found that this is not necessarily the case. our hypothesis held when merging rna-like tree motifs at vertices of degree one  or degree two . that is, when identifying vertices of degree two or less, almost all red to red or red to blue tree merges produced a red tree. however, this was not always the case when the vertices being identified included a vertex of high degree .

using these findings, we trained a neural network to recognize the known classification of a tree as rna-like or not rna-like in structure. the network assigned a value between  <dig> and  <dig> to classify these trees. table  <dig> shows the interval values used to classify the trees as rna-like or not-rna-like. paralleling the work completed in  <cit> , our artificial neural network was trained on two classes of trees: the known rna  trees and the non-candidate  trees. there are  <dig> red trees of order  <dig>   <dig> and  <dig> along with  <dig> black trees of order  <dig> and  <dig> 

the training and the predictions of the neural network were analyzed using standard methods in machine learning. to ameliorate overfitting, neural network training used leave-v-out cross-validation  <cit> . this involves partitioning the data into a majority training set and a minority complement . as the network is trained on the training set, its performance is assessed on the complement. in each of the  <dig> repetitions of the classifier experiment, the root-mean-square error for the complement predictions was less than 5% of the class value of  <dig> . in addition, the predictions were assessed using a receiver operating characteristic, in which the true positive rate  is a function of the false positive rate  for a binary classifier system as its discrimination threshold is varied  <cit> . specifically, the area under the roc curve  is equal to the probability that a classifier will rank a randomly chosen positive instance higher than a randomly chosen negative one. the auc for the predictions roc curve is  <dig> .

predictions for the classified rag trees
the mlp artificial neural network correctly predicted 100% of the known rag trees to have a value greater than  <dig> . further, the network correctly calculated a prediction value below  <dig>  for nine of the eleven black trees. however, two non-candidate rag trees, indexed as  <dig>  and  <dig> , received an mlp prediction value between  <dig>  and  <dig> . therefore, we label all trees with an mlp prediction value within the range  to . <dig> as “unclassifiable”. table  <dig> displays the rag classification and corresponding predicted class for each of the classified  <dig> trees on  <dig>   <dig> or  <dig> vertices.

predictions for the unclassified rag trees
after using the mlp to predict the classified rag trees, we calculated the prediction value for the  <dig> unclassified trees on  <dig> vertices from the rag online web database. for these  <dig> trees, the mlp predicts a total of  <dig> trees to represent rna motifs:  <dig> trees are highly-rna-like and four are only rna-like. further, there are  <dig> trees which the artificial neural network predicts to not represent rna secondary structure:  <dig> trees are highly not-rna-like with four trees grouping into the not-rna-like category. overall, the mlp calculated an unclassifiable value for seven of the  <dig> trees. these values are listed in table  <dig> 

a comparative analysis
a predictive tool based on domination parameters was used in  <cit>  to classify the all trees on  <dig>   <dig> and  <dig> vertices. here we compare our results to the original tree categories determined in  <cit>  and to results found in  <cit> . our comparison is summarized in table  <dig> 

all three studies agreed on the classification of nine of the eleven non-candidate  tree graphs. the two exceptions are graphs  <dig>  and  <dig> , which our study finds to be unclassifiable. further, with the exception of tree  <dig> , all three research studies concluded that all known  tree graphs on  <dig>   <dig> and  <dig> vertices were rna like based on their respective structural calculations. the model in  <cit>  predicted tree  <dig>  to be rna-like in structure, however, their predictive model reported the highest amount of error for the classifications of this tree. we calculated a  <dig>  likelihood that tree  <dig>  contains rna-like structure. as a result, both predictive models were unable to confidently classify tree  <dig> .

most notably, the predictive model used in previous rna motif research supports the major results of this paper. as seen in table  <dig>  the predictive model in  <cit>  classified  <dig> of the  <dig> unknown rna trees to be rna-like. when examining these results, the authors of  <cit>  felt their model over predicted the class of rna-like tree graphs. accordingly, we found a total of  <dig> trees to be highly-rna-like in structure. of those,  <dig> of the  <dig> trees in the highly-rna-like category from this study are included to be rna-like from the results compiled by  <cit> . consequently, the predictive model of our study narrows the class of rna-like motifs from previous findings.

additionally, of the  <dig> trees on  <dig> vertices that we predicted to be not-rna-like in structure from our model, previous findings agreed with  <dig> of those classifications. the model in  <cit>  predicted trees  <dig>  and  <dig>  to be rna-like, whereas we found both motifs to be highly not-rna-like. from the other direction, of the  <dig> trees predicted in  <cit>  to not-rna-like in structure, our prediction agreed with  <dig> of the  <dig>  trees  <dig>  and  <dig>  are both predicted to be not rna-like in  <cit> , but were classified as potential rna structures in our study. hence, our predictive model provides more descriptive information about the structural classification of the unknown rag tree motifs on  <dig> vertices than the findings from  <cit> . in summary, when comparing our results with those in  <cit> , we highlight two improvements. first, our neural network outcomes were not solely rna-like or not rna-like. rather, our model assigns a probability, which is a measurement of a tree's rna likeness. second, our model predicts fewer of the trees on  <dig> vertices to be rna-like, and thus seems to be a more discriminating predictive tool.

methods
we use graph theory to model the bonding of secondary rna structures and a predictive neural network to quantify our results.

graph theoretic model
the binary operation merge of two trees t <dig> and t <dig> forms a new larger tree tuv by identifying a vertex u in t <dig> with a vertex v in t <dig>  merging two trees of n and m vertices produces nm total trees, some of which can be isomorphic, and each resulting tree has a total of n + m −  <dig> vertices.

to accurately model rna bonding, we must consider all possible vertex identifications between two rna tree models. for example, there are  <dig> possible vertex identifications for merging trees  <dig>  and  <dig> . of these  <dig> merges, the four non-isomorphic trees are shown in figure  <dig>  figure  <dig> displays the official rag identification and color classes for the trees from figure  <dig> 

our research determined all possible merges forming trees on  <dig> and fewer vertices. when tracking the information from all possible vertex identifications between two trees, the resulting trees were noted and their frequencies counted. for example, in figure  <dig>  the merge of tree  <dig>  and  <dig>  results in the following tree set:  <dig>  +  <dig>  = { <dig> ,  <dig> ,  <dig> ,  <dig> }. trees  <dig> ,  <dig> ,  <dig>  and  <dig>  occurred with frequencies  <dig>   <dig>   <dig>  and  <dig> respectively. additionally, we noted the type and degree of the vertices at each merge. table  <dig> displays all the information for the vertex identifications of the merges between trees  <dig>  and  <dig> .

for all  <dig> graphs on  <dig> through  <dig> vertices, every possible vertex identification resulting in a graph on  <dig> or fewer vertices was calculated and recorded. additional file  <dig> displays the vertex identification results for all tree merges. then information from additional file  <dig> was translated into data vectors. each data vector displays the composition information for the result tree in the following manner:

, where for i  ∊ { <dig>  2},

deg is the degree of the identified vertex of ti, and

y <dig> =  <dig> and y <dig> =  <dig> if the result tree is an rna-like tree, and y <dig> =  <dig> and y <dig> =  <dig> if the result tree is not rna-like.

an artificial neural network
in their numerical form as data vectors, the vertex identification results are used to predict the rna-like status of the  <dig> unclassified trees on  <dig> vertices. the data vectors from the  <dig> known  tree graphs on  <dig>   <dig> and  <dig> vertices along with the data vectors of the  <dig> non-candidate  tree graphs on  <dig> and  <dig> vertices make up the training data. to check the validity of our model, we then predicted the status of the  <dig> known tree classifications on  <dig>   <dig> and  <dig> vertices. then, the model is used as a predictive tool for the  <dig> unclassified trees of order nine. this research parallels previous work by the authors in  <cit> . in this section, we discuss the details of designing, training and using an artificial neural network as a prediction tool.

description
following the network created in  <cit> , our approach is to train a multi-layer perceptron  artificial neural network using a standard back-propagation algorithm. results from a back-propagation mlp can be reproduced independently by other researchers and can also provide information beyond simple predictions. the 3-layer mlp is used to predict the rna-like status of the trees. the first layer, or input later, contains four perceptrons corresponding to the data vector from one vertex identification of the complete merge between two trees. the last layer, or output layer, consists of two perceptrons with activations y <dig> and y <dig>  where y <dig> =  <dig> and y <dig> =  <dig> if the result tree, which corresponds to the input data vector, is predicted to be an rna tree and where y <dig> =  <dig> and y <dig> =  <dig> if the result tree is not rna-like. the middle layer, or hidden layer, is comprised of  <dig> perceptrons. the weights between the input and hidden layers will be denoted by w jk and the weights between the hidden and output layers will be denoted by αij.

implementation
the data vectors from the vertex identifications of the  <dig> trees on  <dig>   <dig> or  <dig> vertices that either are an rna tree or not an rna-like tree determine the training set

where  is the data vector, qi = 〈 <dig>  0〉 if the tree is known or predicted to be an rna tree, and qi = 〈 <dig>  1〉 of the tree is not rna-like. the back-propagation algorithm is used to implement a gradient following minimization of the total squared error

where y = 〈y <dig>  y2〉 is the output due to an input of pi and the norm is generated by the corresponding dot product.

the weights are initially assigned random values close to  <dig>  then, for each pair  the weights αjk are adjusting using

αjk → αjk + λδjξk

where  where λ >  <dig> is a fixed parameter called the learning rate, and where  

the weights ωkr are adjusted using  

in each training session, the patterns should be randomly permuted to avoid bias, and training should continue until e is sufficiently close to  <dig>  <cit> .

the mlp artificial neural network was trained and tested by predicting complements. during this procedure, the vertex identification data vectors of the  <dig> classified tree motifs were randomly partitioned into a training set and a complement set. predicting complements was performed with 15% of the data vectors in the complement set for each trial.

the network was trained using the data not in the complement until the total squared error was close to  <dig> . once the network is trained, it is used to predict the classification of the data in the complement set. this is known as leave-v-out cross-validation. according to  <cit> , cross-validation is a reliable measure of the generalization error of the network when the training set is not too large.

in order to most accurately utilize our data, each tree’s final classification was calculated as an average of a linear combination of prediction values from the vertex identifications. to do so, we began this procedure by using the mlp to predict the value for each vertex identification for a given tree. then, this value was multiplied by a weight which refers to the total number of graph isomorphisms for the vertex identification. this weight was noted for each identification and can be referenced in the “total graphs” column of additional file  <dig>  to normalize the result, the linear combination of all the vertex identification values was divided by the sum of the weights. this final average determined the prediction value for the tree. table  <dig> outlines this procedure for tree  <dig> .

once the mlp was fully trained, the network was used to predict the classification of the  <dig> red or black rag trees on  <dig>   <dig> and  <dig> vertices. for these trees, the final mlp prediction values range from  <dig>  to  <dig> . as a result, the key in table  <dig> uses a range to classify the final values. the roc curve for the results in table  <dig> are shown in figure  <dig>  it is worth noting that roc analysis suggests that  <dig>  is the “best threshold” between rna-like and not rna-like, thus supporting the use of the key in table  <dig> 

CONCLUSIONS
using a tree representation of secondary rna structure, we model the creation of a larger structure from the bonding of two smaller structures by considering all combinatorial possibilities. we model the bonding with a graph operation called  merge. data from this process included information on the degrees of the vertices identified in the merge and the classification of substructures. we created data vectors and then utilized these data vectors from known rna trees on  <dig>   <dig> and  <dig> vertices together with the data vectors from the non-candidate rna trees on  <dig> and  <dig> vertices to create and train a neural network to recognize a tree as rna-like or not-rna-like in structure. we applied this predictive tool to categorize known rna classifications and to predict unknown rna trees.

the results for the  <dig> red trees of orders seven, eight, and nine agree with the classifications from the rag database and previous research in  <cit> . further, our neural network correctly classified  <dig> of the  <dig> black, or non-candidate, trees on  <dig> and  <dig> vertices to agree with previous research. however, the authors of  <cit>  felt their model over predicted the class of rna-like trees for those  <dig> unclassified trees on  <dig> vertices. their results classified  <dig> of the unknown trees as rna-like in structure, and  <dig> as not-rna-like. as a result, this study narrows down the class of highly-rna-like tree structures on  <dig> vertices from the  <dig> predicted in  <cit>  to  <dig> according to the values calculated by the mlp artificial neural network.

we revealed that graphical operations from the field of mathematical graph theory can successfully model secondary rna motifs. further, we demonstrated that these numerical values from these operations can enable the training of an artificial neural network to recognize the difference between likely and unlikely rna structures. these findings, along with those from previous predictive models, exhibit the power of mathematical graph theory as an effective modeling method. by representing bimolecular structures with graph theory, modern researchers enter an extensive and unexplored field of quantitative biology. although trees have previously been used to model secondary rna structure, the applications of techniques from graph theory have been limited. there are numerous binary operations on graphs, such as the cartesian product and graph join. in this paper, we have introduced graph merge as a novel approach to the study of rna binding.

as a follow up to this study, future research could combine the data from  <cit>  and this paper to create a more powerful predictive model. a more intelligent artificial neural network, or another predictive tool, could utilize all three sets of data to predict the classifications for all the rag trees. additionally, future projects could examine the effect of other graphical invariants and operations on the structural properties of the rag motifs. another potential research project could be to use the ideas of our research, and those from  <cit> , to examine the structural components of the unclassified rag trees on  <dig> vertices from  <cit> .

competing interests
the authors declare that they have no competing interests.

authors' contributions
drk produced the tree merge data, trained the neural network, and contributed to writing the paper. djk conceived of the study, participated in its coordination and execution, and was involved in drafting the manuscript and revising it critically for important intellectual content. jk designed and helped train the neural network. th participated in the coordination of the study, helped with the graph theory, and was involved in drafting the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
click here for file

 acknowledgments
we are grateful to the national science foundation, division of graduate education, grant number dge- <dig>  we are indebted to tamar schlick and her research group at nyu for the creation of the rag database. the authors appreciate the efforts of undergraduate research participants cade herron and jordan shipley. we also thank the reviewers for their helpful comments and suggestions.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2010: proceedings of the seventh annual mcbios conference.  bioinformatics: systems, biology, informatics and computation.  the full contents of the supplement are available online at http://www.biomedcentral.com/1471-2105/11?issue=s <dig> 
