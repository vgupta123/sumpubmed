BACKGROUND
realistic deterministic dynamic models of complex biological systems are difficult to assess with respect to behaviour, since they are characterised by a large number of parameters and state variables as well as nonlinear functional relationships and intricate feedback loops. the relationship between the output from such models and their input parameter variation and initial conditions, and control of built-in functional relationships, can become extremely complex. the traditional analytical tools of nonlinear systems theory are mainly aimed at studying the effects of few parameters on low-dimensional phenomena such as steady states and limit cycles. the high-dimensional models emerging in systems biology bring new challenges such as increasing the speed of numerical solvers, developing tools for automated model simplification and global sensitivity analysis . metamodels of a dynamic model, which are statistical models mapping parametric variation to variation in the state variables throughout the entire relevant parameter space  <cit> , will be helpful in meeting several of these challenges.

there is currently little tradition for making use of metamodelling in advanced computational biology, but based on experiences from other fields  <cit>  we anticipate that this is up for change. since computationally demanding multiscale modelling is an emerging field in computational biology, we foresee that metamodel-generated mappings will be very useful as a model reduction technique for speeding up simulations, for performing global high-dimensional sensitivity analyses for a whole range of purposes, for comparing the high-dimensional prediction spaces of competing models as well as for comparing models to high-dimensional phenotypic data. input parameters and initial conditions can also be predicted from the model output or empirical data, providing opportunities for identification of biologically relevant parameters. however, for these anticipations to be fulfilled we need to develop a robust metamodelling methodology capable of producing accurate predictive mappings for a whole range of different biological models and which allows for extensive automation. despite that considerable progress has been made in other fields, in particular engineering  <cit> , there is a need for substantial development to make this approach generally applicable in biology and feasible for implementation e.g. as part of the model repositories like the cellml repository  <cit> .

most metamodelling efforts published to date make use of ordinary least squares  regression and response surface methods based on ols that require the covariance matrix of the regressors  to be invertible  <cit> , that is, the regressors must be linearly independent. these methods are primarily focused on prediction of one single output variable at a time, and usually ignore strong inter-correlations between the output variables. an exception is artificial neural networks , but these methods produce models of a format that do not allow easy interpretation. using a bayesian approach, conti and o'hagan  <cit>  recently demonstrated that it is possible to emulate the output of a dynamic model to a high degree of precision using only a few hundreds of training runs. however, such gaussian emulators are only effective for model structures having a small number of significant main effects and very mild interactions  <cit> . hence, one may claim that none of the current metamodelling approaches do make transparent how all inputs, auxiliaries and outputs are related to each other jointly under a broad range of different conditions. they are also, with few exceptions, unable to utilise inter-correlations between the output variables. furthermore, according to li et al.  <cit> , most sensitivity analysis methods require the regressor variables to be linearly independent, something that is not likely to be the case in many biological modelling situations . hence, there is a need for new methodologies for mapping the entire space of biologically relevant parameters and initial conditions to the outcome of the corresponding dynamic models, that can handle linearly dependent input parameters, utilise strong inter-correlations between the outputs, as well as model highly nonlinear and non-monotone input-output relations, which characterise many biological systems. mild nonlinearities can to some degree be modelled by polynomial regression, using e.g. square- and interaction terms as extra regressors  <cit> , but a robust metamodelling methodology must be capable also of handling strong nonlinearities, in particular non-monotone input-output relationships  <cit> .

a candidate approach is to make use of locally linear or locally polynomial regression modelling of carefully selected subsets of the input-output space of the original complex model. locally linear approaches to modelling large and complex data sets have been successfully demonstrated in a variety of applications, most of which include a separation of the data into blocks based on prior knowledge about the structure of the data being analysed  <cit> . this suggests that nonlinear and non-monotone response surfaces can be handled by local high-order polynomial models. in order to also account for linearly dependent regressors and inter-correlations between the responses, alternatives to ols are needed. bi-linear methods based on estimated latent variables, e.g. principal component analysis   <cit>  and partial least squares regression   <cit>  , have shown considerable success in analysis and interpretation of a large number of highly multivariate and complex data sets. martens and martens  <cit>  demonstrated the use of plsr as an alternative to analysis of variance  to facilitate the interpretation of multi-response data from designed experiments. plsr maximises the explained covariance between the regressors and the responses. in contrast to most other linear regression methods, plsr also utilises inter-correlations between the response variables for model stabilisation, and does not require the regressor variables to be linearly independent. plsr is efficient for compressing inputs, intermediate states and output variables into their most relevant subspaces ), and hence provides a versatile means for data compression by reducing the rank of both regressors  and responses . this, in turn, provides an effective approach to identification of important features in a complex system. plsr is equivalent to ols when the regressor rank is not reduced, that is, when all pls components are included. modelling based on such estimated latent variables  also have the advantage of being suited for graphical visualisation, inspection and interpretation via their associated sets of loadings, i.e. the coefficients describing the relationship between the score vectors and the original variables/parameters. theoretical aspects of plsr and its relations to the more commonly used method principal component regression   <cit>  are given in  <cit> . campbell et al.  <cit>  have shown that metamodels based on subspaces found by plsr, when compared to legendre polynomials and pca, gave the simplest and most predictive basis for sensitivity analysis for a set of computational models. in  <cit> , the suitability of plsr for interpretation of complex biological systems and use of plsr in sensitivity analysis was demonstrated. this motivated us to probe the versatility of a new variant of local modelling, here named hierarchical cluster-based pls regression , which assumes no prior knowledge about the data structure. besides presenting the hc-plsr method, we report the metamodelling performance of hc-plsr, global plsr and global ordinary least squares regression on three dynamic model systems in order of increasing complexity: i) six different gene regulatory network models with various types of feedback  <cit> , ii) a dynamic model of the mammalian circadian clock  <cit>  and iii) a model of the mouse ventricular myocyte function  <cit> . these three test beds encompass large classes of dynamic models. we show that the hc-plsr approach is superior in all cases and that the difference in terms of explained variance and prediction accuracy increases with the degree of nonlinearity and the presence of positive feedback loops.

methods
in silico data sets
gene regulatory networks
gene regulatory networks were modelled using the sigmoid formalism  <cit> . in this formalism the state variable xi denotes the expression level of gene i, and the i-th differential equation describes production and decay of the gene product as well as regulation of these processes by other genes in the network . the dynamics of three state variables  were computed over  <dig> time steps in six different gene regulatory network motifs with different feedback systems  <cit> . the initial conditions were varied in a full factorial design  with five equally spaced levels for each, resulting in  <dig> different starting conditions between  <dig> and  <dig> for each state variable. since differences in feedback loops lead to qualitatively different behaviour  they should also lead to large differences in the nonlinear terms in the regression analysis. we therefore used five levels of each factor in order to explore these nonlinear terms thoroughly. the parameter values of maximal production rates, decay rates and regulation thresholds were constant, and chosen to ensure that the steady state levels for all three variables were ranging from  <dig>  to  <dig> for a maximal production rate. for each of the gene regulatory network motifs, the time series data for the three state variables were concatenated into a matrix representing  <dig> starting conditions ×  <dig> time points, corresponding to the set of  <dig> ×  <dig> initial conditions. the connectivity diagrams for the six simulated gene regulatory network motifs are shown in figure  <dig>  and illustrate that motif  <dig> and  <dig> have positive feedback, motif  <dig> and  <dig> have negative feedback and motif  <dig> and  <dig> have no feedback. the simulations were carried out in matlab® version  <dig> . <dig>    <cit> , using in-house code that can be obtained from the authors upon request.

mammalian circadian clock
the simulations of the mammalian circadian clock were generated using a model developed by leloup and goldbeter  <cit> . the ordinary differential equation  model describes a mammalian consensus system of three key genes: bmal <dig>  per and cry which regulate circadian rhythms by means of intertwined positive and negative feedback loops. the model consists of  <dig> coupled differential equations with state variables representing mrna, nonphosphorylated and phosphorylated proteins for the three genes, as well as protein complexes. the original publication  <cit>  contains four different parameter sets and we used parameter set  <dig>  as the basal parameter set. a curated cellml implementation  <cit>  of the model was downloaded from http://models.cellml.org. the parameter combinations used to generate the calibration set were generated using an optimised multi-level binary replacement  design  <cit>  of  <dig> factors  with  <dig> equally spaced levels each. this resulted in  <dig> simulations with the circadian clock model. a full factorial design of  <dig> factors at  <dig> levels each would result in  <dig> >  <dig> million runs. hence, the ombr design was chosen, in order to explore the effects of as many factors as possible while revealing possible nonlinear effects of parameters on phenotypes. this was considered important in this example, since the mammalian circadian clock model is widely used and explored previously, and an optimisation study is therefore most relevant. detailed insight into the nonlinear behaviour of the model is obtained using a large number of levels of each factor. in the ombr design method, the values of the original parameters are replaced by multi-bit binary representations, and the binary factor bits are then combined in a fractional factorial design according to the chosen confounding pattern. thereby drastically reduced experimental designs are obtained, yet maintaining reasonable coverage of the parameter space. the ombr design used here was optimised by establishing a number of alternative binary confounding patterns, and choosing the one that best satisfied the quadratic d-optimality criterion. this ombr design has been compared to central composite designs and random sampling, and has been shown to have good predictive ability  <cit> . the range of each parameter is given in table  <dig> 

for each parameter combination the resulting differential equation model was solved from the original initial conditions  until convergence to a stable limit cycle. the differential equations were solved in sundials  <dig>   <cit>  using a wrapper for pysundials http://pysundials.sourceforge.net. the resulting data set consists of values of  <dig> state variables  calculated over  <dig> time steps each for the set of  <dig> combinations of values of the nine input parameters. the test for convergence was done as follows: first the system was solved with rootfinding for variable mb to extract two complete cycles. convergence of the cycle period was tested by requiring that the period difference relative to the mean of the periods for the two cycles should be less than  <dig> . convergence to synchronous oscillations was tested by  interpolating all  <dig> state variables at  <dig> equally spaced time points for each cycle,  linearly transforming each state variable such that the minimum and maximum values of each cycle was  <dig> and  <dig>  respectively, and  requiring that the sum of absolute difference between the two cycles across all the  <dig> interpolated time points should be less than  <dig> .

mouse ventricular myocyte
data for the murine heart cell function was generated using the model recently published by li et al.  <cit> , built to account for the action potential and calcium transient of the cardiomyocyte in terms of its constituent ion currents and gating channels. the model extends that of bondarenko et al.  <cit> , with more realistic calcium handling, detailed re-parameterisation to experimental data and consistency checking by conservation of charge. state variables include concentrations of sodium, potassium and calcium in the cytosol, calcium concentration in the sarcoplasmic reticulum and the state distribution of ion channels. formulated as a system of  <dig> coupled odes, this model provides a comprehensive representation of membrane-bound channels and transporter functions as well as fluxes between the cytosol and intracellular organelles.

the integration was carried out in cvode  <cit> , which is part of the sundials  <dig>  package  <cit> , using in-house code that can be obtained from the authors upon request. ten different parameters  were varied in an ffd with three levels of each parameter , resulting in  <dig> simulations. because the parameter space of the mouse heart cell model has been less extensively explored than that of the mammalian circadian clock, we designed for screening rather than optimisation here. screening designs are typically used to identify which factors are most important, while optimisation studies aim for a more detailed insight into the relationships between the various factors and the response. the range of each parameter is given in table  <dig>  the data set resulting from the mouse ventricular myocyte function simulations consists of values of  <dig> state variables and  <dig> auxiliary variables ) calculated over  <dig> time steps  each for the set of  <dig> combinations of values of the ten input parameters. the time steps were adaptively chosen by the solver . the pacing protocol was a stimulus setting the transmembrane potential to - <dig> mv for  <dig> ms. this was repeated until convergence or a maximum of  <dig> stimuli. the convergence criterion for each state variable was based on its value at the beginning of each interval and the integral of its trajectory over that interval, both being constant to within a relative tolerance of  <dig> . a running history of ten intervals was kept, and after each interval we checked for a match against the previous ones. cell dynamics was categorised as "failed" if dynamics did not converge to period  <dig> within  <dig> stimulus intervals. details of alternans were not pursued.

only the state variables were included in the regression analysis , and the constant state variable ikss was omitted. for this data set  <dig> of the  <dig> simulations ) failed, and were therefore omitted in the analysis. in order for the time series to be comparable, interpolation to a fixed set of time points was needed. for the entire time series to be analysed, the data set had to be separated into three parts, according to the stimulus period . the time series for each part of the data set were then interpolated using the matlab®  <cit>  system function "interp <dig> m" into  <dig> equally spaced time points between  <dig> and the stimulus period.

metamodelling procedures
implementation of the hc-plsr was based on an initial global second order polynomial plsr using all observations in the calibration set with a 10-fold cross-validation  to identify a preliminary  model . the global model ) was then chosen according to the minimum cross-validated mean squared error  of prediction of the response matrix y, with the extra requirement that each included component accounts for at least 1% of the total cross-validated y-variance. using cross-validation to find the optimal rank is a well established technique to minimise the risk of overfitting. when modelling empirical data, the portion of the variance accounted for by the omitted pcs are assumed to be caused by noise. however, in this case, we used data from deterministic modelling which is free from noise, but since we aimed for an as simple and easily interpretable metamodel as possible , we regarded variations not accounted for by a second order polynomial as stochastic noise and used cross-validation to truncate the model. the cross-terms and second order terms were calculated from mean-centred parameter values.

thereafter the observations were clustered by fuzzy c-means  clustering  <cit>  of the x- or y-scores using euclidian distance for a chosen number of pls components . this allowed separation of the overall data set into subsets where local polynomial regression was hypothetically more likely to improve prediction results. in our matlab® implementation the fcm fuzzifier parameter was chosen equal to  <dig> . the fuzzifier parameter can be interpreted as an increased sharing of points among all clusters. fuzzy clustering was chosen because the fcm algorithm is simple, efficient and less prone to local minima than crisp clustering algorithms. the fcm algorithm is also flexible with respect to the distance measure used, and it is easy to incorporate various types of penalties in the distance measure  <cit> . it is therefore a good choice in making the hc-plsr method widely applicable.

to prevent possibly unstable regression models due to a small number of calibration observations, we post-processed the clustering with the requirement that each cluster should contain at least ten observations. smaller clusters  were regarded as outliers, and not included in the subsequent local regression modelling. local second order polynomial plsr models were finally calibrated individually for each of the remaining clusters, using 10-fold cross-validation to find the optimal number of pls components in the same manner as in the global modelling. using polynomial plsr instead of ols  is an advantage in hierarchical regression modelling, especially for large data sets, since with ols one would have to cluster on the regressor matrix  itself, instead of the response -relevant x-scores. this would be much more computationally demanding than clustering on the reduced rank x-scores. in addition to this, ols requires the regressor covariance matrix to be invertible, that is, the regressor variables need to be linearly independent. even in cases where the original regressor matrix is generated using an experimental design method that ensures that the design variables are linearly independent in the full data set, this may still not be true within the clusters used in the local regression modelling. the matlab®  <cit>  function "plsregress.m"  was used for the plsr both for the global and the local regression analyses. figure  <dig> gives an overview of the hc-plsr "pipeline". the matlab® code can be obtained from the authors upon request.

*see additional file 1: appendix  <dig>  eq. a <dig> and a <dig> 

new observations  were classified based on x- or y-scores calculated by projection into the global plsr model. x-scores for test set observations were calculated based on loading weights from the global plsr model . if y-scores were used in the clustering, the global plsr model was used for prediction of y to acquire the y-scores from the loading weights of the global plsr model . four different ways of classifying an observation into the appropriate cluster were compared: i) the nearest cluster centre from the fcm clustering , ii) linear discriminant analysis   <cit> , iii) quadratic discriminant analysis   <cit>  and iv) naive bayes  classification  <cit> . we used the matlab® functions "classify.m" and "naivebayes.m" from the statistics toolbox™ v <dig>  for classification options ii)-iv), and in-house matlab® code for option i).

predictions of response variables for the test set observations were done both by a) selecting the local model for the most probable cluster and by b) computing the regression coefficients as a probability-weighted sum of the local regression models. outlier-check of new observations was based on the euclidian distance matrix from the clustering of all non-outliers in the calibration set . the maximal occurring distance from the cluster centre was found for each cluster by inspection of the calibration results, and  <dig>  times these values were used as outlier limits for the respective clusters. prediction of the outliers  was by convention handled by the global plsr model.

to further improve the prediction accuracy we also considered an alternative hc-plsr approach based on hierarchical regression modelling of the residuals from the global plsr model. local modelling was here used only on the y-residuals , and the final predicted y was the sum of the global predictions and the local predictions. the clusters were based on the global x-scores as described above, and we therefore used the same number of clusters as for the hierarchical regression modelling of the entire y-matrix. this gave a small gain in prediction accuracy . however, this approach was not chosen since some interpretability is lost due to the more complex y-loadings based on the y-residuals.

evaluation of the metamodelling performance of hc-plsr
the three test applications were chosen in order to represent a wide range of dynamic model types, in order to obtain a valuable evaluation of the metamodelling performance of hc-plsr in systems biology. this is important in order for the method to be generally applicable e.g. as part of model repositories like the cellml repository  <cit> . the first model setting represents very simple models, where differences between various types of feedback can be explored. the two other model settings represent more complex models with many parameters and state variables, connected through various types of feedback loops. as described above, model setting  <dig> and  <dig> represent an optimisation study and a screening study, respectively.

in the applications described above, a set of parameter combinations and state variable initial conditions were used as input to an ode-based dynamic model, and the output was a set of state variables calculated over a number of time steps. in metamodelling of the dynamic models, the parameter values and initial conditions were then used as regressors  and the state variable time series were used as response variables  in a regression analysis, in order to predict the state variable time series directly from the parameters and initial conditions.

second order polynomial hc-plsr  was compared to global, second order polynomial plsr  and global second order polynomial ols  with respect to test set prediction accuracy. polynomial plsr is equivalent to implicit non-linear latent variable regression   <cit> , except that in inlr cross-terms are not included. table  <dig> gives an overview of the variables included in the regressor- and response matrices and shows which test sets were used in the three application examples. the same data were used with all three regression methods. the squared correlation coefficient  and root mean squared error of prediction  values for the state variable time series of the test set observations were used as measures of prediction accuracy.

*the three parts of the mouse ventricular myocyte data set separated according to the stimulus period were analysed separately, and only the simulations that did not fail were used.

in hc-plsr, only the local model corresponding to the most probable cluster for each observation was used in the test set prediction, since this approach gave slightly better results than using a weighted sum of all local models. the appropriate numbers of hc-plsr clusters were chosen by inspection of the r <dig> and rmsep values of y within the calibration set, resulting from predictions using a range of different numbers of clusters. here the calibration set observations were first used for calibration and subsequently treated as "new observations" and classified prior to prediction, that is, the same procedure as for the test set was used in the prediction stage. the minimum number of clusters in hc-plsr giving  maximum obtained predictive ability  was chosen for each state variable time series.

model setting 1: gene regulatory networks
in metamodelling of the six gene regulatory networks, the initial values of the state variables were used as regressors   and for each gene regulatory network, the concatenated time series for the state variables x <dig>  x <dig> and x <dig> were used as response variables  . the state variable data generated for the gene regulatory network motifs are shown in additional file 1: appendix  <dig>  figure a <dig> . sine and cosine terms  of x were included in the regressor matrix, while cross-terms and second order terms were omitted here. this was the result of a "trial and error" procedure to choose between different types of nonlinear terms to include in the regression equation. this could be afforded here due to the relatively small size of the data set. adding sine and cosine terms to the regressor matrix turned out to be advantageous in order to model the nonlinearities present in this data set. all regressor and response variables were mean-centred prior to the regression analysis.

in the hc-plsr, fcm clustering on the y-scores was chosen due to the low number of x-variables , and the fact that these were derived by a full factorial design. fcm clustering on the first three pcs of the y-scores was used to establish the local plsr models, since this gave a very distinct clustering of the observations. qda based on globally predicted y-scores for new observations gave the best classification results for this data set, and was therefore used for the test set prediction, using 33% of the observations  as a separate test set . the test set was chosen randomly from all possible combinations of parameter values in order to be representative for the population.

model setting 2: mammalian circadian clock
in metamodelling of the mammalian circadian clock model, the state variable time series  were modelled as functions of the parameters of the dynamic model and their cross- and second order terms . each of the time series for the  <dig> state variables  was modelled separately, giving  <dig> regression models for each regression method. each regression model could thus predict the response in  <dig> time steps for one of the  <dig> state variables. the state variable time series  were log-transformed, and all variables were mean-centred prior to the regression analysis.

fcm clustering on the x-scores from the global plsr model was used in the hc-plsr, and the classification of new observations was based on the distances to the cluster centres  from the fuzzy clustering. clustering on the x-scores is in general more safe compared to using the y-scores, since the y-scores for new observations to be predicted have to be calculated from predicted y-values from the global plsr model. the x-scores are calculated from the x-data for new observations, and their accuracy is therefore not dependent on the quality of the global plsr model. however, only the first three pls components of the x-scores were used for clustering, in order for the clusters to be as relevant as possible for both y and x .

the circadian clock test set consisted of  <dig> new parameter combinations generated by random monte carlo sampling  <cit>  from a uniform probability distribution within the same parameter ranges as for the calibration set. hence, the test set had the same size as the calibration set. the reason why we chose to generate a separate test set based on monte carlo sampling instead of sampling randomly from the original design as in the gene regulatory network example is that here a highly reduced design was used instead of an ffd. a test set sampled from a highly reduced design is less likely to be fully representative for the population than a test set sampled from an ffd . furthermore, sampling from the ombr design to generate a test set would reduce the calibration set further, and the calibrated regression model would be less representative. since the ombr is optimised with respect to quadratic d-optimality  <cit> , using part of the design as test set would also make the calibration set less optimal for inclusion of second order polynomial terms in the regression analysis.

model setting 3: mouse ventricular myocyte
in metamodelling of the mouse ventricular myocyte model, the state variable time series  were modelled as functions of the parameters of the dynamic model and their cross- and second order terms , using the same procedure as for the mammalian circadian clock model. each of the time series for the  <dig> state variables  was modelled separately. the parameters were mean-centred and standardised  due to the large differences in absolute values for the parameters, and the state variables were mean-centred prior to the regression analysis.

in this study, 33% of the observations  were used as a separate test set. the rest of the observations were used for calibration. the data set was separated according to the stimulus period, and the regression calibration and test set predictions were carried out for each part of the data set separately. the average r <dig> and rmsep values over the three data set parts were then calculated for each state variable.

RESULTS
model setting 1: gene regulatory networks
based on the results in figure  <dig>  hc-plsr with two clusters was chosen for motif  <dig>  while for motif 2- <dig> using three clusters was considered to be optimal. figure  <dig> illustrates the clustering results obtained from the global plsr y-scores prior to the hc-plsr calibration for gene regulatory motif  <dig> and motif  <dig>  the range within which the starting conditions for the three state variables x <dig>  x <dig> and x <dig> varied in each cluster used in the hc-plsr modelling of gene regulatory network motif  <dig> and  <dig> are shown in additional file 1: appendix  <dig>  table a <dig> .

the prediction results from hc-plsr, plsr and ols on the separate test set for the gene regulatory network data are shown in figure  <dig>  and show that the hc-plsr approach performs better than both global plsr and ols in modelling the state variable time series from their initial conditions, especially for the gene regulatory network motifs containing positive feedback loops . the mean r2test set over all motifs was  <dig>  for hc-plsr and  <dig>  for both plsr and ols.

when clustering on the y-scores as is done for the gene regulatory motif data set, a relatively good global plsr model is needed for reasonable prediction of the y-scores for the test set. in this example, the lowest global model r2test set value  was obtained for gene regulatory network motif  <dig>  this is good enough for a reasonable y-scores prediction for this data set, since hc-plsr results in an r2test set value of  <dig>  . it should, however, be kept in mind that the global model needs to provide some reasonable information to be used for prediction of the y-scores. the required quality of the global model depends on how distinct the separation of the clusters is. less distinctly separated clusters need a higher quality of the y-scores predictions for the y-scores to give reliable classification results.

model setting 2: mammalian circadian clock
the optimal number of clusters to be used in hc-plsr for the circadian clock data set was found to be  <dig> or  <dig> for most of the state variables , but for two of the state variables a two-cluster solution was sufficient. figure  <dig> shows the global plsr x-scores and corresponding clustering result  for the observations prior to the hc-plsr calibration for the state variable mp, while figure  <dig> shows the corresponding global x- and y- correlation loadings . figure  <dig> shows that loading plots are useful for illustration of the relations between x- and y-variables in the estimated latent variable space, and indicates that the parameter vmp accounts for the variation in pc <dig>  and is negatively correlated with the state variable mp time series . hence, globally, vmp has a large, negative effect on the state variable mp, since pc <dig> accounts for the largest part of the covariance between x and y. the parameters vmb and k <dig> account for most of the variation in pc <dig>  while pc <dig> is made up of vmc, vmb and k <dig> 

the accuracy of the test set predictions for the three regression methods is compared in figure  <dig> as histograms of r <dig> and rmsep values for the  <dig> state variables, indicating that hc-plsr is superior to global polynomial plsr and global polynomial ols with regard to predictions of the state variable time series. the mean r2test set over all state variables was  <dig>  for hc-plsr,  <dig>  for plsr and  <dig>  for ols. the hc-plsr results in r2test set values larger than  <dig>  for all state variables . the prediction results from ols and plsr are less robust. for the state variables pc, pcp, pcc, cc, ccp, pccp, pcn, pcnp and in , hc-plsr works much better than plsr and ols. in light of that hc-plsr excels at positive feedback motifs for the gene regulatory networks in model setting  <dig>  and that these state variables are all involved in a large positive feedback loop , a possible explanation is that the presence of the positive feedback loop is the reason why hc-plsr gives much more accurate results than plsr and ols for these state variables. as shown in additional file 1: appendix  <dig>  figure a <dig> , most observations in the test set have relatively low prediction residuals from hc-plsr, and the mean prediction error  decreases as the distance from the nearest cluster centre decreases .

model setting 3: mouse ventricular myocyte
the optimal number of clusters to be used in hc-plsr was found to be between  <dig> and  <dig> for most state variables in the mouse ventricular myocyte data set . figure  <dig> shows the global plsr x-scores and corresponding clustering result  for the observations used in the hc-plsr calibration for the state variable v , while figure  <dig> shows the corresponding global x- and y- correlation loadings. for simplicity we show only the results for the part of the data set having a stimulus period of  <dig>  ms . figure  <dig> indicates that the parameters having the largest impact on the mouse ventricular myocyte action potential  are ko, p_cal, nao and g_kr.

the test set prediction results from hc-plsr, plsr and ols on the murine heart cell data  are shown in figure  <dig>  also for this data set, hc-plsr results in a higher prediction accuracy than the other two regression methods in prediction of the state variable time series. the mean r2test set over all state variables was  <dig>  for hc-plsr and  <dig>  for both plsr and ols. figure  <dig> shows that the results from hc-plsr are good for all state variables. as shown in additional file 1: appendix  <dig>  figure a <dig> , most observations have relatively low hc-plsr prediction residuals. the results from global polynomial plsr and ols are less robust. this indicates that there are nonlinearities or non-monotone input-output relations that a global polynomial regression model is not able to model correctly, but that local modelling by hc-plsr can account for. the difference between the results from hc-plsr and the other two regression methods is largest for the state variables po <dig>  pc <dig>  ona, cna <dig> and cna <dig>  perhaps due to a higher degree of nonlinearity and/or a non-monotone response surface .

discussion
hc-plsr provides a very flexible metamodelling methodology, since the number of local models  can be adjusted and the model adapted to suite the complexity of the response surface of the dynamic model. hence, even very complex data sets containing a large number of different types of input-output relations can be quite accurately modelled through modelling each type of response surface separately. hc-plsr using only one cluster is equivalent to a global plsr model. in principle, the least complex among several types of regression methods leading to good predictions should be chosen, in order to favour model interpretation and to avoid overfitting. in our approach to the hierarchical plsr, both the global and the local regression models are kept for comparison. hence, for each case of metamodelling one can evaluate the gain of using local modelling compared to the global model. the combination of local and global modelling is also useful for revealing regional differences in model sensitivity to the various parameters, e.g. by exploring the loading plots or regression coefficients for the local models. the local models also provide the opportunity to zoom into regions of the parameter space and identify the operative domains of the parameter space in an efficient manner.

the gain in prediction accuracy from using hc-plsr was larger for metamodelling of the circadian clock data set than for the mouse ventricular myocyte data, implying that the circadian clock model exhibits behaviour which is harder to capture with linear polynomial models. this indicates that the circadian clock model contains more non-monotonicity or other complex nonlinear relationships between parameters and behaviour, but the systemic explanations are not easy to pinpoint as both dynamic models contain complex wiring. even though polynomial plsr and ols gave reasonable predictions for many of the state variables in both the circadian clock and the mouse ventricular myocyte data set , the hc-plsr results were superior to both plsr and ols in terms of metamodelling robustness. ols gave slightly better results than global plsr for both these data sets, since the rank was reduced in plsr compared to ols. projecting the data into estimated latent variables and thereby decreasing the rank of the data has great advantages with respect to interpretation. hence, there is a trade-off between interpretability and prediction accuracy. one may argue that the present criterion for choosing the number of components to include in the plsr model  is a bit conservative in this case, since the regression modelling is based on noise-free data from deterministic models. using hc-plsr, we achieve a better prediction accuracy than both global polynomial plsr and ols, while keeping the advantages of reduced rank and increased overview and interpretability compared to ols by using plsr in the local modelling.

our hc-plsr using fcm clustering of the observations may be considered as a more or less automatic, "top-down" approach. in contrast, most existing hierarchical approaches are "bottom-up", that is, they start by estimating latent variables  for individual, a priori known data blocks, and then combine these block scores into a second level linear plsr model  <cit> . the use of fuzzy clustering to separate the observations into groups makes the hc-plsr approach presented here applicable also in cases where prior knowledge about different blocks of data is not available. however, when such information is available, it should be used instead of clustering to separate the observations into groups. the number of clusters to use is here specified in advance. more computationally demanding alternatives exist, however, that allow automatic identification of the optimal number of clusters  <cit> . an alternative would be to include an automatic optimisation of the number of clusters . this would allow for a semi-automatic metamodelling methodology which would be feasible for implementation e.g. as part of the cellml repository  <cit> .

in contrast to crisp clustering methods, such as k-means clustering, which allocate each observation to a unique cluster, fuzzy clustering returns membership values for the different clusters for each observation  <cit> . this provides the opportunity to compute the regression coefficients for each observation as a weighted sum of the regression coefficients for the different clusters, where the membership values are used as weights. predictions of response variables for the test set observations were here done both by a) selecting the local model for the most probable cluster and by b) computing the regression coefficients as a weighted sum of the local models. the first approach gave the best prediction accuracy in our case. the reason is probably that all data sets used in this paper were generated from experimental designs, and not by random sampling in the parameter space. for data sets with very distinct separations of the clusters, the first approach performs best, while for more continuous data, a weighted sum of the local models will probably be a better choice. moreover, using a weighted sum will help avoiding discontinuities in regions where local models meet in more continuous data sets. we found that using only the first three pls components in the fcm clustering gave the most distinct separation of the clusters for the three data sets tested here. this ensures that the most relevant information about the covariance between x and y is being used for clustering when using the x-scores as basis. however, using only three pls components may not be appropriate in general. for some data sets, one may want to use a larger number of pls components. in order to use the y-scores as a basis for clustering and classification, the separation of the observations needs to be quite distinct, since the y-scores are based on predicted y-values and therefore contain some prediction error that may disrupt the classification when the clusters are not distinctly separated.

ols is less computationally demanding than both hc-plsr and plsr, and is a suitable metamodelling method in cases where the response surface is monotone, moderately nonlinear and the regressor variables are linearly independent. however, for the metamodelling approach to be feasible for automation, we need a robust regression method that can be automatically adjusted according to the properties of the response surface of the dynamic model to be emulated. hc-plsr has advantages over other regression methods such as global plsr and ols in cases where the response surface is complex, highly nonlinear and non-monotone , and the number of clusters used can be adjusted to suit the complexity of the response surface allowing for a robust automation of the metamodelling procedure.

CONCLUSIONS
our results show that it is possible to emulate dynamic models in systems biology to a high precision using multivariate regression, and that local modelling can improve the results substantially when the parameter to phenotype map is highly nonlinear. hc-plsr was superior to both global polynomial plsr and global polynomial ols regression in all three model settings reported here. since these model settings represent large classes of dynamic models and because the hc-plsr method can be adjusted to suite the complexity of the dynamic model behaviour in a very flexible way inviting automation, it qualifies as a promising candidate approach for metamodelling within systems biology.

authors' contributions
kt contributed to conception, wrote the matlab® code for the hc-plsr pipeline, performed the data analysis and wrote the paper. ugi participated in designing and debugging of the hc-plsr code, and participated in writing the paper. abg performed the computational experiments with the gene regulatory network models and the mammalian circadian clock model, while jov performed the computational experiments with the mouse ventricular myocyte model. swo contributed with ideas for test cases and participated in writing the paper. hm contributed to conception and writing of the paper. all authors read and approved the final manuscript.

supplementary material
additional file 1
'additional file.pdf' contains appendix  <dig>  which provides background theory on the multivariate analysis methodology used, and appendix 2- <dig> with supplementary figures and tables for each of the three test cases.

click here for file

 acknowledgements
this study was supported by the national program for research in functional genomics in norway   and by the norwegian escience program  . ingunn berget is thanked for providing us with the code for fuzzy clustering and supervision in how to use it.
