BACKGROUND
dna microarray technology has the potential to create enormous quantities of data in short times. the vast amounts of information generated by microarray experiments have led to the need for methods for analyzing such data. clustering has proved to be an important tool for this purpose. the ability of clustering methods to extract groups of genes with similar functions from huge datasets stems from the fact that genes with similar functions evince similar expression patterns of co-regulation  <cit> .

clustering methods can be broadly classified into two types according to the method adopted to define clusters  <cit> : hierarchical and partitional clustering methods. hierarchical clustering  <cit>  produces dendrograms, in which each branch represents a group of genes that have a higher order relationship. one major shortcoming of this approach is that it cannot identify co-expressed genes in large gene expression datasets when such datasets are collected under varying conditions  <cit> . in addition, hierarchical clustering does not produce a unique dendrogram and does not reflect the multiple ways in which expression patterns of genes can be similar  <cit> . partitional clustering attempts to directly decompose the dataset into a set of disjoint clusters. the representative partitioning around medoids   <cit> , k-means  <cit> , and hierarchical clustering methods assign each gene to a single cluster, even if the expression profile of that gene has a number of similar cluster patterns. although these methods work well when applied to datasets with well-defined clusters, they are inappropriate for microarray data due to the complicated structures of such biological datasets. in addition, it is difficult to find distinct clusters in gene expression data using hard clustering methods, because clusters of genes in gene expression data do not have well-defined boundaries  <cit> .

to overcome the limitations of these hard clustering methods, here we apply fuzzy partitional clustering based on the fuzzy c-means  algorithm  <cit> . fcm clustering provides a systematic and unbiased way to change precise values into several descriptors of cluster memberships  <cit> . thus, this method provides more information regarding the degrees of membership of each gene to each cluster of genes. the main advantage of using fuzzy clustering to analyze gene expression data lies in its ability to handle noisy data  <cit> . fcm clustering also attempts to find the most characteristic data point in each cluster, which can be considered the center of the cluster, and then the degree of membership for each gene in the cluster  <cit> . when implementing fuzzy algorithms, it is very important to choose appropriate values for parameters like the weighting exponent, m . especially, in fuzzy models the minimization criterion for the objective function depends on m. in the fuzzy clustering literature, a value of m =  <dig> is commonly used, but this value is not appropriate for gene expression data  <cit> . moreover, the optimal value of m depends on the dataset used, and the clustering results are sensitive to m. thus the appropriateness of a value of m for use in cluster analysis of a dataset is very sensitive to the characteristics of the dataset. two factors that affect the dataset characteristics are the noisiness of the data and the method used to normalize the dataset. therefore research into normalizing and removing noise from datasets has been a very important component of previous work on clustering analysis. in particular, for the same dataset and cluster analysis method, we expect that the results of clustering will vary depending on the method used to normalize the data. normalization of microarray data is required to remove systematic variations introduced in the experiments, which affect the measured expression levels. in microarray experiments, there are many sources of systematic variation, for example differences in labeling efficiency between different fluorescent dyes. we used the two common scale and location transformation methods  and lowess normalization method.

in the present study, we compare fcm clustering with three hard clustering approaches: the pam, k-means and hierarchical methods. in addition, we evaluate the effect of the method used to normalize microarray data on the results obtained when clustering analysis is applied to the normalized dataset. this comparative analysis is performed using three normalization methods, applied to three microarray datasets and three simulated datasets. in the materials and methods section, we introduce the fcm clustering algorithm for finding groups of genes with similar expression patterns in microarray data, and review in detail validation techniques for evaluating the final clusters.

RESULTS
before applying the clustering algorithm to each dataset, all data were preprocessed by appropriate transformation and normalization methods, and determined the optimal fuzzification, m. we then used this value of m in applying the fcm method to each normalized dataset, and compared the clustering results to determine the effects of the data normalization. after determining the fuzzification, m, the number of clusters has to be determined. in the present work, the number of clusters, c, was taken as the number that gave the maximum value of the silhouette index. this procedure was performed on three microarray datasets, referred to as the serum  <cit> , sporulation  <cit>  and yeast  <cit>  datasets. finally, we compared the fcm clustering method with other clustering methods using the adjusted rand index.

determination of the fuzzification parameter
the fuzzification parameter, m, was obtained using an approach based on the work of dembele and kastner  <cit> . they proposed that the commonly used value of m =  <dig> is inappropriate for fcm clustering of microarray data. following this previous work  <cit> , we determined the fuzzification parameter for each normalized dataset. the values of m and the number of clusters, c, used for the fcm clustering of the three datasets and three normalization methods are given in table  <dig>  the fuzzification parameter varies depending on both the normalization method and the dataset used. figure  <dig> shows boxplots of the membership values for each gene from the fcm clustering of the three datasets after normalization by the three methods. when m is fixed to  <dig>  for the sporulation and yeast datasets, the membership values for most genes are close to 1/c, and the membership values are relatively insensitive to the normalization method. when the optimal value of m is used, by contrast, most membership is shared by the first and second highest membership values. in particular, the first and second highest membership values of all genes are well separated by the lowess normalization for most of the datasets normalized using this method. here, the first highest membership values are used to allocate each gene to a single cluster, as in hard clustering methods. in addition, the membership values can be used to find genes strongly associated to given cluster. we used the median of the membership values as the threshold membership for specifying that a gene is tightly associated with a particular cluster  <cit> . compared to the only scale and location transformations, normalization using the lowess method gives many more genes strongly associated to a given cluster due to the high median of the first highest membership in the lowess method of figure  <dig> and figure  <dig> 

the distribution of the highest two membership values is observed using a scatter plot of these values for each gene for the optimal m by each normalization method . the results displayed in figures  <dig> and  <dig> show that when the optimal m is used, the distribution of the membership values varies markedly depending on the normalization method applied to the dataset. in each of the three datasets, the median of the first highest membership differs greatly depending on the normalization method used. for the serum, sporulation and yeast datasets, the median of the first highest membership is greatest when the dataset was normalized using the lowess method, with values of  <dig> ,  <dig> , and  <dig>  respectively. moreover, in the case of the serum and yeast datasets, the gene activities can practically be determined from their first and second highest membership values, whereas the sporulation dataset has low membership values. on the other hand, the serum dataset shows a larger dispersion of genes over samples than the other two datasets. in addition, for each dataset, the distribution of membership depends on the normalization method applied to the dataset. in the case of the lowess method, the association of the first and second highest membership is strong in each dataset because the median memberships are relatively high. in the case of the r-transformation, by contrast, only a weak association is observed in each dataset of figure  <dig>  these results indicate that relatively high membership values can be obtained for the dataset with small variability among samples, and that the lowess normalization appears to be more effective to the other methods.

effect of data normalization
sensitivity of clustering to the fuzzification parameter
box plot representations of the membership values for each gene, in decreasing order, are shown in figure  <dig> for four values of m . these values were selected based on the knowledge that if m is close to  <dig>  the clusters obtained are almost crisp, and if m is close to  <dig>  the distribution of membership values becomes more spread out, with m values higher than  <dig> resulting in the loss of any useful information about membership values  <cit> . to identify the effect of normalization technique on the clustering results, we applied each normalization method to the serum dataset and compared the membership values obtained by the fcm method for a range of m values. this dataset was chosen because it has a large variation of gene expression levels, unlike the other two datasets. for the data transformed by the z and r methods, the first highest membership of genes decreases rapidly with increasing m. in contrast, the data normalized using the lowess method shows the highest membership values of all genes and the membership values decrease slowly with increasing m. the data in figure  <dig> thus indicate that the clusters obtained using lowess-normalized data are more robust to different values of m than those obtained using only z- and r-transformed data.

stability of clusters using fcm
we compared the performances of the three normalization methods when applied to three simulated datasets, referred to as sd1/ <dig> and sd2/ <dig> and sd3/ <dig>  the true number of clusters in each of these datasets was known to be c = 9; the nine clusters in sd1/ <dig> and sd2/ <dig> are well separated, whereas those in sd3/ <dig> have some overlap as shown in figure  <dig>  here the performance of each normalization method was quantified using the adjusted rand index, which is a measure of the agreement of determined clusters in comparison with the true clusters. cluster allocations were determined from the first highest membership, and compared with the correct clusters for fcm clustering. the results of these comparisons are shown in table  <dig>  the values of the adjusted rand index obtained by comparing the true clusters to those obtained by applying fcm clustering  to the datasets normalized by the z, r and lowess methods showed that the lowess-normalized dataset performed better than those normalized by the other two only scale and location transformation methods. in fact, even when m was fixed at  <dig>  the analysis results obtained using the lowess normalized data were similar to those obtained using the optimal m. in contrast, the z and r transformations did not work well.

the results presented above  showed that the lowess normalization outperformed the other two transformations methods. to further analyze the efficacy of the fcm approach, we used the adjusted rand index to compare the true clusters in the sd1/ <dig>  sd2/ <dig>  and sd3/ <dig> datasets with those obtained by applying fcm using the optimal m values for each dataset and three hard clustering methods  to these three simulated datasets after lowess normalization. the results are shown in table  <dig>  for the sd1/ <dig> and sd2/ <dig> datasets, which have well separated clusters, the pam and hierarchical clustering methods performed very well; the performance of the fcm clustering was good, although not as good as those of the pam and hierarchical clustering methods. in the case of the sd3/ <dig> dataset, which has overlapping expression patterns across samples, fcm clustering slightly outperform other hard clustering methods. also, fcm clustering has similar values of index over three datasets, in contrast, hard clusterings have very different values of index. this means hard clustering is unstable on data with overlapping clusters contrary to fcm clustering. fcm clustering of microarray data using the common fuzzification parameter value of m =  <dig> is known to give poor performance compared to the results of hard clustering; however, the present results show that if the optimal fuzzification parameter value is used, the clustering performance similar to that obtained using hard clustering is achieved for the dataset with overlapping clusters.

on the basis of these results, we can find merits for fcm clustering as follows; first, the membership values of fcm clustering can be used on several levels. basically, the membership values can be used assign each gene to one cluster, resulting in an effect equivalent to the hard clustering method; second, using membership values, it is possible to find genes which display a strong association to a given cluster and the most likely to work together even in different pathways. for example, there are  <dig> strong association genes in serum dataset as shown in figure  <dig>  in the figure, we find genes with first highest membership values that are greater than the median value of  <dig> . thus we can expect these genes are always co-expressed and co-regulated under all conditions.

comparative analysis of fcm and pam clustering of noisy data
the fcm method provides a systematic, unbiased formalism for transforming precise values into several descriptors of cluster membership  <cit> . compared to the hard clustering methods, the fcm method provides more information on the degree of biological similarity of each gene. the main advantage of the fcm method in microarray data analysis is that it explains the noise in the data. expression levels with low membership values for all clusters may be considered as noise points, and the final clustering results may depend on those noise points. in other words, because noisy data contain many points that have low membership values for all clusters, such data cannot be well clustered across all samples. therefore, identifying noise points is essential to gene clustering using the fcm method.

to test the ability of the fcm method to handle noisy data, we performed additional clustering calculations on versions of the serum, yeast, and sporulation microarray datasets that had been modified to include noise and subsequently normalized by the lowess method as shown in figure  <dig>  the noisy datasets were generated by adding a small gaussian random variable of mean  <dig> and standard deviation  <dig> to the gene expression levels in the original microarray dataset, and then the resulting dataset was normalized by the lowess method. the noisy gene expression datasets were clustered and the results compared to the clustering of the original dataset by measuring the agreement between the clustering results as shown in figure  <dig>  the agreement measures the degree to which the pairs of genes allocated to a cluster in one clustering calculation agree with those allocated to the same cluster in another calculation. to identify the ability of the fcm method to cluster noisy data, we compared the results obtained using this approach with those obtained using pam clustering known as representative partitional clustering method with good performance. for each type of dataset, we used the same number of clusters for each clustering method in both the original and noisy datasets.

finally, to evaluate the robustness of fcm clustering to noise in data, we computed the agreement of pairs of genes assigned to the same clusters in the clusterings of the original dataset and the corresponding noisy dataset as shown in figure  <dig>  in the analysis of the original serum dataset and its noisy counterpart, pam and fcm clustering allocated similar percentages  of the pairs of genes to the same cluster in the analyses of the original and noisy datasets. in the clustering analysis of the original and noisy sporulation and yeast datasets by fcm clustering, however,  <dig> % and  <dig> % of pairs were in the same clusters, respectively, which were slightly higher than the percentages obtained using pam clustering . these results are briefly illustrated with the two serum and sporulation datasets which indicate the low degree of agreement of pairs of genes assigned to the same clusters between original and noisy added datasets. figure  <dig> shows the expression patterns from the original and noisy serum and sporulation datasets for cluster <dig> and cluster <dig> obtained using fcm and pam respectively. the upside and the downside of the figures indicate clustering patterns for original and noisy dataset respectively. fcm clustering of the noisy and original datasets gives similar expression patterns for cluster <dig>  and similar patterns for cluster <dig>  the pam clustering, in contrast, gives different expression patterns for cluster <dig> depending on whether the original data or its noisy counterpart is used, and likewise for cluster <dig>  in the clustering analysis of the original and noisy sporulation datasets as shown in figure  <dig>  the fcm and pam clusterings show similar expression patterns for each cluster from the original dataset and its counterpart from the noisy dataset.

from these results, we can see that the fcm clustering method is slightly superior to the pam method in extracting expression patterns from datasets with larger variations across samples, such as the serum dataset, whereas the fcm and pam methods show similar performance when applied to data with smaller variations, such as the sporulation and yeast datasets. importantly, fcm clustering is a little better than the pam method at handling noisy datasets. in summary, hard clustering methods perform well in particular applications, and are often used for clustering microarray data. however, these methods cannot find co-expressed genes under all conditions and in all samples and do not reflect the multiple ways in which the expression patterns of genes can be similar when analyzing large amounts of noisy microarray data collected under various biological conditions.

CONCLUSIONS
microarray technology enables the simultaneous measurement of expression levels of thousands of genes. however, the vast amounts of data generated in microarray experiments have led to the need for methods for analyzing such data. clustering has proved to be an important tool for this purpose. the first step in most statistical analyses of microarray data is to normalize the data so as to remove systematic variations due to non-biological factors. however, the results of clustering analysis of a normalized dataset may depend on the normalization procedure used. in the present study, we considered the effect of data normalization on the results obtained when clustering analysis was applied to the normalized dataset. six datasets were used: three microarray datasets and three simulated datasets. in particular, we concentrated on the sensitivity of fcm clustering analysis to data normalization and to the value of the fuzzification parameter. to elucidate the performance of fcm clustering relative to other methods, we compared the fcm clustering results with those obtained by applying hard clustering methods to the same normalized datasets. in these comparisons, the performance of each method was quantified using the adjusted rand index. we found that for all of the datasets examined, lowess normalization of the dataset gave superior cluster robustness and accuracy compared to the two common data transformations when fcm clustering was applied to the normalized dataset. moreover, the lowess normalization method gave robust clustering results when applied to noisy datasets and to datasets containing overlapping clusters.

fcm clustering is a convenient method to find genes exhibiting strong associations to given clusters. besides, sub-groups of genes can be expected to be contained in several pathways and thus assigned to several clusters but still be co-acting under all conditions. especially, the performance of fcm clustering is similar to that of hard clustering in respect of allocating a gene to a single cluster for noisy data. the hard clustering forcedly assigns all genes to a respective cluster, even those for which the variations in expression do not fit into any global pattern  <cit> . in fcm clustering, the genes can belong to more than one cluster where the genes may only be marginally relevant for biological significance of the cluster  <cit> . therefore, this method is very useful if we focus on finding genes showing coherent behaviour within clusters. we also expect the fuzzy type clustering might be a significant tool to dissect the several regulatory pathways that control the gene expression patterns of given genes when handling complex datasets.

as the related work, kim et al.  <cit>  presented the comparative results of three fuzzy type clustering such as fcm, possibilistic c-means and fuzzy possibilistic c-means using a common value of  <dig> as the fuzzification parameter, and belacel et al.  <cit>  compared performance of fuzzy j-means and vns method to that of fcm. they also proposed that the performance of the fcm, without considering effect of data normalization, is slightly weaker than those of other fuzzy methods respectively. however, according to dembele and kastner  <cit> , it is not appropriate for fuzzification parameter to be set to a common value of  <dig> when the fuzzy method is applied to microarray data cluster analysis. thus, the work of kim et al.  <cit>  may be clear in only a few cases, but it seems to be difficult to select the best one of three fuzzy methods because the optimal fuzzification parameter was not used. on the other hands, as mentioned earlier, microarray data normalization is basically an important step for obtaining data that are reliable and usable for subsequent analysis. our analysis also presented that the choice of different normalization methods drastically affects the result of the cluster analysis. in the light of belacel et al.  <cit> , fcm was inferior to other methods for some dataset but all the three methods had similar performance for the dataset with large variation for each group and for each sample point. again, the fcm method is faster method compared to the other two methods  <cit> . also, the performance of fcm method can be as good as those of fuzzy j-means or vns method when the refined data normalization such as the lowess method is used. besides, the fcm method can typically be chosen to classify microarray data because a popular and freely available implementation is available in the statistical software package r. moreover, various other freely available microarray data handling packages have incorporated this fcm method. in summary, we would emphasize that the identification of these two factors that affect cluster results is required when fuzzy clustering methods are used in the microarray data analysis successfully.

although in the present work the lowess normalization was found to be superior to the other two normalization methods examined in transforming of data scale and location , previous studies have described the problems associated with choosing the parameter values for the lowess method  <cit> , and berger et al.  <cit>  pointed out that the normalization results obtained using this method may depend on the parameter values used. in the recent literature on the normalization of microarray data, zhao et al.  <cit>  presented a mixture model based method and highlighted the importance of normalization in microarray data analysis to find differentially expressed genes across arrays. to our knowledge, however, the present study is the first to test the normalization effect in cluster analysis of microarray data. in future work, we plan to further evaluate normalization methods in regard to microarray experiment conditions, data formats, and the degree of variation in detail. the information gained from such a study should aid in extracting biological information, such as co-expressed genes with similar expression patterns or genes that act in concert in cells, from microarray datasets. for example, this approach could be used to extract biological information that is important for all lung cancer cells regardless of the cell type.

