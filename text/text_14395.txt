BACKGROUND
rna molecules play vital roles in the cell, and their function is often determined by structural properties. these properties may be static, such as structural motifs, or dynamic, such as the ability to adopt different conformations as riboswitches do. the latter emphasises the importance of studying rna folding kinetics, which is the dynamic behaviour of rna structure over time.

most approaches to the stochastic simulation of rna folding kinetics can be described as monte carlo simulations  <cit>  or continuous time markov chains   <cit> . a monte carlo simulation requires a large number of samples of individual trajectories to achieve accuracy, rendering these methods computationally expensive. the same holds true for ctmc-based simulation, as long as it is based on a complete enumeration of the folding space. the program treekin <cit>  implements a ctmc-based simulation, and for short sequences , can simulate exact folding kinetics. for longer sequences, however, the exponential growth of the underlying state space requires restricting the analysis to a subset of the folding space. for this purpose so called “macrostates” were introduced in  <cit> , each of which can be seen as a local minimum and all structures that are connected to it by a gradient walk. a macrostate is represented by its local minimum secondary structure. the problem that arises from the macrostate definition is that neighbouring macrostates cannot easily be identified. the program treekin uses barriers to compute saddle points connecting macrostates and the corresponding transition rates. the dependence on barriers limits this approach to sequences of moderate length , which can be partially overcome by restricting the analysis to conformations within a specified energy range above the minimum free energy. to overcome the length restriction and reduce the computational burden tang et al.  <cit>  use a sampling strategy called probabilistic boltzmann-filtered suboptimal sampling. in their approach, sampled structures are connected by transition paths computed using a simple greedy algorithm  <cit> . these transition paths are weighted with their barrier energy. the procedure may be suboptimal in two ways: first, the sampling may miss important structures in the folding space, and second, the greedy pathway prediction may overestimate energy barriers and lead to inaccurate transition rates.

the computation of exact, globally optimal folding pathways between any two secondary structures  is np-hard  <cit> . many heuristic approaches for computing folding pathways have been proposed. the first approach was proposed by morgan and higgs  <cit>  by selecting the least “clashing” base-pairs as the next intermediate structure from a set of neighbouring structures. subsequently, the idea was extended by flamm et al. <cit> . instead of selecting the best structure as the next intermediate structure, the k best candidates are maintained during the folding pathway construction . in contrast to these direct path heuristics , dotu et al. <cit>  presented a heuristic including indirect paths. li et al. <cit>  proposed an evolutionary algorithm in which a pathway is represented by an action chain that is mutated by different strategies to find a better solution.

in general there are two central challenges in ctmc-based folding simulations for rna. how can the energy landscape be decomposed in a complete, compact and non-heuristic way? and how can the transition rates between partitions be calculated accurately and efficiently?

our contributions in this paper address these challenges. in previous work  <cit> , we introduced hishapes as classes of structures sharing the same helices. these hishapes intrinsically decompose the folding space into disjoint classes, which are represented by the member with minimum free energy, called the hishrep. this partitioning is complete and non-heuristic, and its coarse-graining can be adjusted based on its abstraction levels, which differ in the type of structural elements they consider. here, we analyse the degree to which hishapes overlap with locally optimal structures. additionally, we provide a new folding space restriction, called strictly negative structures, that eliminates suboptimal structures with positive energy substructures. we present hipath <dig> as an improved version of hipath <cit>  and show that it computes lower energy barrier folding pathways for most cases in our benchmark set. finally, we combine these methods in hikinetics, a tool for simulating rna folding kinetics using strictly negative hishapes for the folding space decomposition and energy barriers estimated by hipath <dig> to derive transition rates using arrhenius’ equation. we apply our novel kinetic analysis tool termed hikinetics to two well-studied rnas.

RESULTS
hishapes revisited
we begin with a brief recapitulation of the central concepts and notations of hishapes. for formal definitions, we refer the reader to our previous manuscript  <cit> . for hishapes, we consider an rna secondary structure as a set of helices terminated by loops . the innermost base pair  of a helix corresponds to the closing base pair of the terminating loop, and we define / <dig> to be the helix index of this helix. additionally, we mark the helix index with m, b, or i for multiple, bulge, or internal loop, respectively. using a mapping function π, we can now map any secondary structure to a helix index shape , which is simply a list of helix indices. figure  <dig> illustrates the relationship among helices, helix indices and hishapes. to provide different levels of abstraction, we make use of different mapping functions. the function πh retains only hairpin loop helices and πh+ additionally keeps track of the nesting within multiloops. the functions πm and πa extend πh+ through retaining multiloops and all helices, respectively. a hishape defines a class of similar structures, and we use the member with minimum free energy as the hishape representative .

reducing the search space to strictly negative structures
the number of feasible secondary structures grows exponentially with the length of the rna. we recently presented hishapes, which abstract from helix lengths and, depending on the abstraction type, also from certain loop types. compared to suboptimal structures, the number of possible hishapes is dramatically reduced, but it still grows exponentially with sequence length.

hishapes provide deep insight into the folding space of an rna molecule while keeping the output at a manageable size. analysing one of our favourite toy examples, the spliced leader rna from leptomonas collosoma, we recognised that there are pairs of hishapes where the hishrep with an additional helix has a higher energy, as shown in figure  <dig>  here, due to the additional helix with helix index  <dig>  the energy of hishape <cit>  is worse than the energy of hishape <cit> .

the formation of this helix imposes an energy cost of  <dig>  kcal/mol and, thus, is thermodynamically unfavourable. to eliminate such unfavourable structures, we cannot simply exclude all positive energy substructures within our recursive dp calculation. doing so would for example disallow nearly all hairpin loops and thereby the computation of many biologically significant structures. we take the view that closed substructures within the external loop or within a multiloop must not have positive energy. we are aware that disallowing positive energy substructures within multiloops may even remove the minimum free energy  structure from the structure space. in fact, a test on  <dig>  randomly selected sequences from rfam showed that for  <dig> % of the sequences, the mfe structure is removed. for these  <dig> sequences, the strictly negative optimal structure has a Δg that is on average  <dig>  kcal/mol  worse than the mfe. however, these differences are on the same scale as  the uncertainties present in the thermodynamic parameters used for computation.

a further reason we think that removing substructures with positive energy is reasonable is that they seem kinetically unfavourable. a helix nucleates by formation of the terminal hairpin loop, which is the time dominating step, and is subsequently stabilised by the stacking of base pairs. for positive energy substructures, the Δg of the hairpin loop is very large, which results in a low probability of nucleation, and/or the Δg of the stacking pairs is small, which renders the melting of such helices very likely. for these reasons, we believe that disallowing positive energy substructures is a reasonable method to reduce the search space, although it is a heuristic filtering.

because we can check for substructures with positive energy during the recursive calculation, this filter has nearly no computational burden. on the contrary, the reduced number of intermediate results actually speeds up the calculation. restricting the analysis to strictly negative  hishapes significantly reduces the search space . it still grows exponentially with sequence length, but much more slowly, which is reflected by the much smaller base in the exponential growth asymptotics.

hishreps versus local optimal structures
we were interested in the question of to what extent hishreps overlap with the set of locally optimal structures. as described, e.g., in  <cit> , a locally optimal structure has the lowest free energy compared with its neighbouring structures, which are the structures that differ from it by a single base pair. because our approach disregards any structure that contains isolated base pairs, we slightly modify the concept of the neighbourhood. commonly, a neighbour  of the observed structure  is defined by adding  a base pair in a. this definition also holds true for our purposes, as long as a′ does not carry a lonely base pair. if a′ does contain a single lonely base pair as the result of previously removing a base pair, then we also delete the isolated one, resulting in the structure , which will still be treated as a neighbour of a. vice versa, if a′ carries an isolated base pair due to its addition we close, if possible, an adjacent base pair. the resulting structure a′′ is then a neighbour to a. note that in the two described cases, a and a′′ differ by two adjacent base pairs. this version of the neighbourhood should be essentially the same as the 'nolp’ move set from barriers.

based on this definition, we check whether our predicted hishreps are locally optimal or not. table  <dig> shows, for the different abstraction levels and for strictly negative hishapes and all hishapes, the fractions of hishreps that are local optima. overall, the fractions are quite high, sometimes reaching 100%. the sequence for the s-box leader constitutes a negative outlier, especially in the case of strictly negative structures, where at most only 15% of the πhhishreps are locally optimal. strikingly, strictly negative hishreps less frequently correspond to local minima compared to the unrestricted case. this result is somewhat counterintuitive but may be explained as follows. filtering for strictly negative hishapes removes many hishapes. because most hishapes are actually local minima, as can be seen for the unfiltered version, these hishapes are also affected the most strongly. thus, the fraction of non-local optima increases in the case of strictly negative hishapes. so what are these non-locally optimal hishreps? in our opinion, they are mainly the result of replacing helices by single stranded regions. because the formation of the removed helix would result in a neighbouring structure with better energy, the hishrep of the resulting hishape is not a local minimum.
hishreps


π


a

π


m

π


h

+
π


h

in each cell, the upper number represents the fraction of the set of hishreps that are also locally optimal |ℋ∩ℒ||ℋ| and the lower number represents the fraction of the set of local optima that are also hishreps|ℋ∩ℒ||ℒ|. we restricted the computation of hishapes to the best  <dig> and the computation of the local optima to the corresponding energy range max{Δg:x∈ℋ} above the mfe. the dataset is taken from  <cit> . sn strictly negative hishapes.

this reasoning together with the fact that in abstraction type πa the largest number of helices is taken into account, also explains to a large degree why hishreps for abstraction type πa are less often locally optimal than hishreps of types πm, πh+ and πh.

the opposite question, “do all locally optimal structures belong to distinct hishapes” is easier to address. for abstractions πm, πh+ and πh the structures do not have to belong to distinct hishapes as two locally optimal structures differing, e.g., by an internal loop, will be mapped to the same hishape. the situation is different for πahishapes, as they account for differences in all loop types. starting from any locally optimal structure, the extension and shortening of helices cannot lead to another locally optimal structure. reaching another locally optimal structure is only possible by adding or removing complete helices or by helix interruption, i.e., the introduction of internal or bulge loops. all these events will introduce new helices into the πa abstraction, thus resulting in different hishapes. this point is nicely reflected by the fractions of locally optimal structures that are also hishreps . while locally optimal structures have a fairly high overlap with hishreps of the least abstract types πa and πasn, the overlap drops significantly for the other abstraction types, as many local optima differ in the composition of their internal and bulge loops and are thus not retained on these abstraction levels, as described above.

improved barrier energy estimation
pathways connecting alternative structures are important features of the folding space, especially when studying folding kinetics. here, transition rates computed based on the energy barriers, which are derived from the pathways between structures, are commonly used. it has been shown that the problem of computing the globally optimal folding pathway between two structures is np-hard  <cit> . in our recent publication  <cit> , we provided an overview of current pathway estimation tools and introduced hipath, outperforming the other analysed methods. here, we present an improved version, which we term hipath <dig>  one of the essential features of hipath is that it uses a set of related hishapes as anchors for estimating a  optimal pathway between two structures. these related hishapes correspond to hishapes that consist of individual helix indices from the start and target structures or combinations thereof. by detailed inspection of the optimal folding pathways obtained by barriers, we observed that pathway intermediates sometimes carry helices with helix indices that are not identical, but very similar to the helix indices of the start or target hishape, differing by only a few positions. therefore, we implemented fuzzy related hishapes that also take into account the neighbourhoods  of related hishapes.

hipath <dig>  which is based on fuzzy related hishapes was benchmarked against existing methods  on  <dig> conformational switches taken from  <cit>  . they consist of two parts: five of them are riboswitches  taken from  <cit> , and the remaining  <dig> are taken from parnass <cit> . all of the algorithms were used with the same energy rules   <cit> . we use the “microstate” grammar  <cit> , which corresponds to the “-d1” option of rnaeval from the vienna rna package  <cit> . all other parameters were kept as the defaults.

the dataset was taken from  <cit> , the results for bfs and rnatabupath from  <cit>  and the results for ea from  <cit> . energy barriers are given in kcal/mol. the maxkeep value k was  <dig> for bfs itself and for the bfs used within hipath and hipath <dig>  hipath <dig> was used with auto-adjusted fuzzy related hishape numbers, πa and θ= <dig> . hipath was used with the default parameters. bold numbers represent the minimum value for the respective sequence. the symbol "*" means barriers could not be applied because either the start or the target structure was not locally optimal. the symbol "-" means computation did not finish within one day. the energy range used with rnasubopt for barriers was determined using hipath <dig> and set to the barrier energy of hipath <dig> +  <dig> kcal/mol. note that the results may be different from the ones shown in  <cit>  since the used start and target structures may differ. here we used the ones provided in  <cit> , while in  <cit>  we derived them for ourselves.

the results in table  <dig> show that in most cases, hipath <dig>  together with other methods, produces the lowest energy barrier estimates. in the four cases where exact pathways are known, the sum of errors is reduced from  <dig>  to  <dig>  compared to hipath. compared to the second best method, rnaeapath, hipath <dig> produces slightly  less optimal pathways in four cases . however, in eight cases it performs better by  <dig>  to  <dig>  kcal/mol. a major difference is found in the runtimes of the two. table  <dig> compares the runtimes of hipath <dig> and rnaeapath. while rnaeapath spends approximately  <dig> min., hipath <dig> only needs approximately  <dig> min., thus being  <dig>  times faster.

run times were measured as described before  <cit> , and both programs were used with default parameters. sequences were taken from  <cit> , and all tests were run on an 8x amd opteron  <dig> machine with  <dig> gb ram under opensuse  <dig>  .

simulating folding kinetics
our approach for simulating folding kinetics is based on a set of hishapes connected by pathways with their corresponding barrier energies. the most straightforward approximation of transition rates can be done using arrhenius’ equation. consider the two hishapesα and β. we initially compute the hishape ensemble energy ,Δg) via the hishapes partition function contribution calculated by rnahelices . next, using hipath <dig>  we estimate the barrier energy Δg between the two hishreps of α and β. finally, we derive the transition rates using arrhenius’ equation . using the hishape ensemble energy can be seen as weighting the energy by the size of the hishape class, which takes into account that the more members a hishape has, the higher the probability of a transition into the hishape. in contrast, transition out of a large  hishape is less likely. our approach is conceptually similar to the macrostate model introduced with treekin. here, the folding space is partitioned into macrostates, based on local minima and their basins of attraction. these macrostates are computed by the program barriers, which also computes the transition rates based on the barrier energies. the latter are computed on-the-fly, which is elegant, but has one major drawback: the depth  of the analysis must be sufficiently large to ensure that saddle points connecting all local minima  of interest are present. for real-world examples, this depth can easily reach 10- <dig> kcal/mol , resulting in a large computational effort to compute the transition rates, especially for long sequences. our approach circumvents this problem, as the computation of the transition rates is separated from the computation of the macrostates, i.e. hishapes, and the latter is more efficient, especially when restricted to strictly negative hishapes. therefore, hikinetics is able to simulate folding kinetics for longer sequences than is possible with barriers and treekin. of course, this ability does not come for free, and we expect our transition rate estimate to be less accurate than the one made using barriers. the results we present in the next section show that this inaccuracy seems to have only a minor influence.

spliced leader rna from leptomonas collosoma
the spliced leader rna from leptomonas collosoma <cit>  has two alternating conformations of nearly equal free energy. figure  <dig> shows the results of hishape analysis. the two πmhishapes  represent the two native conformations of the spliced leader rna. the probabilities of conformations  <dig> and  <dig> are  <dig>  and  <dig> , respectively, which is in agreement with the bistable character of this rna.

the kinetic analysis in figure  <dig> shows that the two major hishapes  dominate from t= <dig> μs until equilibrium. at the end of the simulation, their equilibrium occupancies are the same as the probability calculated by the partition function. interestingly, both alternative hishape classes build plateaus that persist for a long period  and cross at approximately t= <dig>  μs. if the spliced leader rna degrades within this period, hishape  <cit>  would be kinetically preferred, achieving almost 50% occupancy. however, if the lifetime of the spliced leader rna exceeds the time needed to reach equilibrium, hishape  <cit>  would win.

to determine the degree to which strictly negative filtering influences the analysis, we performed a simulation based on strictly negative hishapes on the same sequence . here, the  timescale of the process is altered, while the characteristics are the same. note that the two hishapes , which are related to  <cit> , are not strictly negative and thus are no longer present. as a result of the filtering, the equilibrium probabilities are also altered from  <dig>  to  <dig>  for hishape  <cit>  and from  <dig>  to  <dig>  for hishape  <cit> . this result is mainly due to the reduced state space, such that each state occurs with higher frequency. direct computation of the probabilities for the strictly negative hishapes using rnahelices results in the same values.

next, we compared our hishape-based kinetics simulation to the simulation from treekin whose results are shown in figure  <dig>  focussing on the two dominant hishapes  <cit>  and  <cit> , the similarity to the kinetics based on strictly negative structures  is higher than the similarity to the kinetics for the unrestricted approach . by design, the latter retains more detail, which is reflected by the presence of the two not strictly negative hishapes  <cit>  and  in this simulation. again, however, the simulated kinetics is significantly similar to the treekin results. overall, this result shows that our approach to the simulation of folding kinetics is accurate enough to capture major features of the folding space, such as the late crossing of hishapes  <cit>  and  <cit> .

the c-di-gmp riboswitch of the tfox from candidatus desulforudis audaxviator
in the second example, we analysed the c-di-gmp riboswitch of the tfox gene from candidatus desulforudis audaxviator ,  <cit> . as shown in figure  <dig>  it has two states that differ by approixamtely  <dig>  kcal/mol in free energy. the c-di-gmp riboswitches, like all riboswitches, are composed of two domains: an aptamer and an expression platform. the aptamer is more conserved and is responsible for binding c-di-gmp, while the expression platform controls expression by alternative conformations. here, helix  <dig> , which is present in the second hishrep constitutes a rho-independent terminator hairpin.

we simulated the folding kinetics based on strictly negative hishapes and chose the stable helix  of the aptamer as the initial population . the hishape , which corresponds to the native on conformation, dominates from t= <dig>  μs until thermodynamic equilibrium. other hishapes such as , ,  and  appear transiently in different periods. the first two correspond to off conformations , and their fraction is significantly increased from approximately t= <dig>  μs to t= <dig>  μs. the hishape  likely represents a folding intermediate between the on and off conformations, as it is composed of helices from both structures. its share increases briefly at time point  <dig>  μs and drops shortly after, while the fraction of hishape  increases, which supports the assumption that hishape  is a folding intermediate between the on and off conformations. the hishape  appears late  in the simulation. the short time span  where off conformations achieve a significant fraction of the folding space reflects the kinetic control of this riboswitch  <cit> . the folding kinetics restricts the time period during which the rna is accessible for regulation.

CONCLUSIONS
in this paper, we present several methods for improving folding space analysis. first, we introduce strictly negative hishapes that represent a reasonable subset of the folding space, i.e., those hishapes composed of helices that all have negative energies. we analysed hishapes and their strictly negative variant for correspondence to local optima, and found a large overlap. this result supports our idea of using hishapes for folding space analysis. second, we present hipath <dig>  an improved algorithm for calculating suboptimal folding pathways between two given secondary structures. a benchmark confirms that hipath <dig> outperforms its predecessor and other heuristics on the chosen dataset. finally, we present a new approach for simulating rna kinetics, which is based on hishapes and uses hipath <dig> to compute transition rates. the simulated folding kinetics of two well-studied rnas show that using our approach allows us to draw functional conclusions. the results for the c-di-gmp riboswitch make us wonder if kinetics can help in identifying new riboswitches. to the best of our knowledge, the existing methods for the identification of riboswitches  <cit> , are based on sequence and/or secondary structure conservation or on structure comparison. no methods use folding kinetics.

our strategy to disentangle folding space partitioning and barrier energy estimation makes it possible to simulate folding kinetics for fairly long sequences. the most time-consuming step is the computation of pairwise energy barriers using hipath <dig>  because these computations are independent, this step can be easily parallelised, which we already exploited. for massively parallel applications, gpu-accelerated computing is the method of choice, and might be a reasonable option to significantly speed up folding kinetics simulations using hikinetics.

