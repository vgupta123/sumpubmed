BACKGROUND
the identification of peptides by searching tandem mass spectrometry  spectra against a protein database is an essential technology in shotgun proteomics. current peptide search engines such as mascot  <cit>  and sequest  <cit>  work on the principle of “query by spectrum”. they mainly use the spectrum-associated information such as peak location , peak intensity and peak types  to perform peptide identification. such spectrum-based database searching methods are far from satisfactory since random peptide-spectrum matches  occur frequently in the identification results. these false assignments can be attributed to the poor quality of spectra, post-translational modifications  of proteins and other unpredictable factors, making it challenging to distinguish correct identifications from incorrect ones.

to improve the identification performance, one possible solution is to incorporate extra information. for example, mass spectrometry is usually coupled with liquid chromatography , which provides retention time measurement associated with the general biophysical characteristics of a peptide. the idea of using retention time for peptide identification has been discussed recently  <cit> .

we note that peptides are correlated with each other. this observation motivates us to exploit the inter-peptide relationship as an additional source of information. the most straightforward and reliable relationship between two peptides is their coexistence in proteins. two peptides are said to be “related” or “similar” if they belong to the same protein. we define the similarity between two peptides as the probability of their simultaneous occurrence in the same protein. intuitively, the identification of one peptide will indicate the existence of its related peptides. therefore, it is reasonable to extend this intuition to the following hypothesis: related peptides should have similar ranking scores. such a consistency pattern within related peptides can be utilized to re-order psms through the manipulation of ranking scores. in this paper, we formulate the consistency-based psm re-ranking problem as an optimization problem of balancing the score from initial identification against the scores of related peptides. we attempt to unify two contending goals in one single objective function:

 <dig>  smoothing consistency: the psms with similar peptides should have similar scores.

 <dig>  fitting consistency: the initial ranking score provides valuable information. thus, the new score of each psm should not deviate too much from its original one.

here we use a linear combination of these two objectives and introduce a regularization parameter to control their relative importance. this optimization problem has a closed-form solution. we apply the proposed method to several real ms/ms data sets. experimental results show that our method consistently outperforms the baseline method.

the rest of the paper is organized as follows: section  <dig> presents the problem formulation and our method. section  <dig> shows the experimental results. section  <dig> discusses related methods and section  <dig> concludes the paper.

methods
in this section, we first introduce the problem and illustrate the underlying assumption using a motivating example. then, we present a probability-based similarity measure to quantify the inter-peptide affinity. finally, we provide an optimization formulation under the regularization framework and discuss how to find the optimal solution efficiently.

problem statement
let ℂ = {, , …, } be a set of psms, where pi is a peptide sequence and si is a ms/ms spectrum. the set ℂ is associated with a vector of initial ranking scores x = t provided by a standard peptide search engine . there is no special requirement about the input ranking score, i.e., it may be any type of score .

as the baseline ranker tends to be imperfect, the goal of our re-ranking method is to find a new score vector y = t using the inter-peptide relationship to improve the ranking.

note that it is possible to have pi = pj for i ≠ j since the same peptide may be identified by multiple spectra.

a motivating example
practically, the assumption that “peptides from the same protein should have similar ranking scores” is often violated. this is because different peptide sequences may have different physicochemical properties and fragmentation pattern, which will result in different scores from database search engines, even if they are from the same protein. however, imposing such a consistency constraint is still beneficial for peptide identification. we shall explain our idea using a toy example.

suppose a hypothetical protein consists of two detected peptides. fig. <dig> shows four possibilities according to the distribution of ranking scores and a pre-defined threshold value.

• case 1: one psm has a very high score and the other psm has a score below the threshold. the consistency constraint will force them to move towards each other in terms of ranking scores. this may provide the second psm a higher score above the threshold. this change will improve the identification performance if the second psm is correct, but will lower the performance otherwise. fortunately the probability that the second psm is correct is higher since the probability that its parent protein exists is high .

• case 2: the score of first psm is barely above the threshold and that of second psm is very low. penalizing their scores according to the consistency assumption will pull down the first psm . though the constituent peptide-level match scores of a truly present protein may vary widely, it is unlikely that all these scores are not high. therefore, the probability that the first psm is incorrect is high. in other words, there is a good possibility to detect this incorrect identification via consistency-based score adjustment.

• case  <dig> and case 4: the result will not change.

the above example shows that penalizing inconsistent psms per protein may help us improve the initial identification performance. this observation motivates us to investigate the possibility of utilizing consistency hypothesis in psm re-ranking, even when such an assumption does not always hold in real proteomics experiments.

graph construction
each peptide may belong to multiple proteins. we use ui to denote the set of proteins that contains pi. given n peptide-spectrum pairs, we construct an n × n symmetric similarity matrix w with its element wij measuring the similarity between pi and pj. concretely, wij is defined as the probability that these two peptides belong to the same protein:   

where ui ∩ uj denotes the set of proteins that contains both pi and pj, and |·| denotes the number of elements in a set.

given w, we define a diagonal matrix d as:   

the matrix d will be used in the next subsection.

in fig. <dig>  we use a toy example to describe the graph construction procedure. in this example, there are five peptide-spectrum pairs and three proteins {a, b, c}. according to the peptide-protein relationship in the left part of fig. <dig>  we obtain ui for each peptide pi:

u <dig> = {a}, u <dig> = {a, c}, u <dig> = {b}, u <dig> = {b, c}, u <dig> = {a}.

then, we construct a similarity graph as shown in the middle part of fig. <dig>  the corresponding w and d read:  

here are some characteristics of w:

• it is a sparse matrix, which can be loaded using a relatively small storage space.

• the number of non-zero entries in each row varies significantly. this is because one peptide may have many neighbors while another peptide may have only a few neighbors.

• there is no self-loops in the graph since its diagonal entries are zeros .

regularization framework
given the vector of initial scores x and the similarity matrix w, we compute a vector of new scores y for the same set of psms by considering two objectives: smoothing consistency among similar peptides and fitting consistency between new scores and initial identification scores.

smoothing consistency
we use the following cost function to quantify the inter-peptide inconsistency:   

where dii and djj are the diagonal elements of matrix d.

if related peptides  have very inconsistent scores, then the value of l will be high.

it is important to mention the following equation  <cit> :   

in the spectral graph theory  <cit> , i – d–1/2wd–1/ <dig> is called the normalized laplacian. the appendix gives the detailed proof of equation  and corresponding interpretations based on the spectral graph theory.

fitting consistency
we define another cost function to penalize the inconsistency between the initial identification score and the new score:   

if peptides have scores that are inconsistent with their original scores, then the value of f will be high.

score regularization
we use a linear combination of l and f to compose the regularized objective function:   

where λ ∈  is a regularization parameter controlling the balance between the smoothing consistency and the fitting consistency.

thus, the consistency-based psm re-ranking problem is formulated as finding an optimal y* such that:   

the above optimization problem has been studied in machine learning  <cit> . it has a closed-form solution. concretely, we set the derivative of q  equal to zero:   

where s = d–1/2wd–1/ <dig> and i is the identity matrix.

after some algebraic derivation, we obtain the closed-form solution :

y* = λs)–1x.        

for the toy example shown in fig. <dig>  the closed-form solution gives a new ranking list .

miscellaneous issues
isolated nodes
to compute the closed-form solution, each d in d can not be zero. in other words, there should be at least one non-zero entry in each row of w. this means that each peptide must have some similar peptides in the graph. for those isolated peptides, we have two choices:

• exclude these peptides during graph construction, but keep their identification scores during re-ranking.

• introduce a dummy node as the neighbor of each isolated node. meanwhile, set the corresponding similarity value to an extremely small positive number .

in this paper, we adopt the second strategy for the sake of implementation simplicity.

large-scale implementation
the matrix s is usually very sparse and needs a relatively small storage space. however, s)– <dig> may be very dense and requires a huge storage space. when the computation of s)– <dig> is infeasible due to space limitation, we use the following iteration  <cit>  to find the solution:

y = λx + sy.        

it has been proved that the iteration process will converge to the closed-form solution y* <cit> . since s is sparse, this method requires less storage space than computing the closed-form solution directly. intuitively, the iteration can be understood as an information diffusion process on the graph. in each round, every node updates its score by linearly combining its own score and the scores of its neighbors.

protein inference
peptide identification is only one intermediate step of protein identification. though the psm re-ranking strategy is able to effectively improve peptide identifications, one may wonder if it really helps in protein identification. indeed, the fact that better peptide re-ranking results will lead to better protein inference have been experimentally verified for several times . therefore, we will focus on the identification performance comparison at the peptide level in this paper.

RESULTS
we apply our method to four real data sets  in table  <dig>  we use x!tandem  <cit>  as the baseline ranker to search against a composite target-decoy database. in the composite database, we use proteins from the swiss-prot database  as target entries and shuffle these target protein sequences to generate decoy entries. each decoy protein sequence is a random permutation of residues in the corresponding target protein. here we use t and ℝ to denote the set of target proteins and the set of decoy proteins, respectively.

their urls and file names are provided in the appendix.

we use the following parameters for peptide identification: mono-isotopic masses, mass tolerance of 2da for precursor, mass tolerance of 1da for fragment ion, fixed modification on cys and one missed cleavage site. we only consider b and y fragment ions in psm scoring. we use the negative logarithm of e-value of each psm provided by x!tandem as the initial ranking score. the criterion for filtering psms is e-value ≤  <dig> . our method generates a set of new scores that better distinguishes correct identifications from incorrect ones. through the experiment, the regularization parameter λ is fixed to  <dig>  unless it is explicitly specified. in performance evaluation, a peptide-spectrum pair  is labeled as a false positive if pi belongs to a decoy protein; otherwise, it is a true positive. given a vector of ranking scores x = {x <dig>  x <dig> …, xn} and a score threshold δ, the true positive rate  is defined as the number of true positives above the threshold divided by the total number of true positives:

trp = |{pi ∈ t|xi ≥ δ}|/|{pi ∈ t}|.        

similarly, the false positive rate  is defined as:

fpr = |{pi ∈ ℝ|xi ≥ δ}|/|{pi ∈ ℝ}|.        

we plot the receiver operating characteristic  curves of the baseline method and our method in fig. <dig>  we also use the area under roc curve  as a single numeric indicator of overall performance. fig. <dig> shows that:

 <dig>  our consistency-based re-ranking method provides consistent and substantial performance improvement on the data set ds <dig>  ds <dig> and ds <dig>  note that our method does not require any prior knowledge or training data.

 <dig>  though there is only a marginal improvement of the overall performance on ds <dig> , we note that our method achieves significantly higher true positive rate than the baseline method when the false positive rate is around 10%. it is a nice property since the false positive rate is usually set to a relatively small value in practice.

to test the sensitivity of our algorithm to the regularization parameter, we vary λ from  <dig>  to  <dig>  and plot the auc values in fig. <dig>  it shows that the identification result is robust with respect to λ. the increase of λ  will lead to the decrease of auc since the regularized score will be identical to the initial score when λ =  <dig>  though we cannot determine the optimal λ automatically, we suggest to set λ =  <dig>  as a rule of thumb in practice since this setting exhibits good performance on average.

we also plot the initial score distribution and the updated score distribution in fig. <dig>  here we use the min-max normalization to transform both the initial identification score and the new re-ranked score into the interval  <cit> . it reveals that the consistency constraint will shrink scores in each group  towards their mean value. although the consistency-based re-ranking method cannot completely separate true identifications from decoys, it does reduce the score overlap on ds <dig>  ds <dig> and ds <dig>  note that the consistency-based re-ranking procedure is less effective on ds <dig> since there is a serious score overlap. even in this case, we find that the separation between true and decoy identifications is improved at lower score region.

discussion
here we briefly review previous works related to the ideas discussed in this paper.

psm re-ranking
many psm scoring algorithms have been developed to facilitate accurate peptide identification. mascot  <cit> , sequest  <cit>  and x!tandem  <cit>  are the mostly used psm scoring algorithms. these algorithms use information in each single ms/ms spectrum to perform peptide inference. as discussed in the introduction, they suffer from the problem of generating incorrect psms due to various reasons. an effective post-processing strategy is to re-order psms so as to reduce the overlap between correct identifications and incorrect identifications.

machine learning techniques are widely used to build re-ranking models  <cit> . these methods require high-quality ms/ms spectra as training data to generate an accurate classification or regression model.however, it is very difficult to obtain a discriminative model that is universally applicable to different platforms and experimental conditions.

one may argue that some semi-supervised learning methods such as percolator  <cit>  do not require any training data. this is not true since they still need to build a predictive model, in which the training set is constructed automatically on the fly: the psms derived from searching a decoy database are used as negative examples and the high-scoring psms derived from searching the target database are used as positive examples. eliminating the need of constructing a training set manually cannot be interpreted as being free of training data.

the proposed method is similar to those learning-based re-ranking approaches in the sense that it borrows information from different spectra. the novelty that distinguishes our method from previous ones is that we explicitly exploit the rank dependence between/among peptides from the same protein.

overall, the consistency-based re-ranking model offers several advantages:

 <dig>  it does not need ms/ms spectra as training data. this flexibility makes the algorithm applicable to ms/ms data generated from different platforms and experimental conditions.

 <dig>  it utilizes the inter-peptide relationship during the re-ranking process. such information is readily available in the protein database. furthermore, this peptide-peptide connection encoded in protein sequence is very stable and noise-free.

 <dig>  the optimization problem in this paper has a closed-form solution, which enables us to obtain the optimal re-ranking list easily.

discrete regularization
the idea of regularization has been widely studied in the literature. in particular, similar optimization formulations have been used in semi-supervised learning  <cit>  and information retrieval  <cit> . to the best of our knowledge, there has been no previous work that applies this idea to peptide identification and psm re-ranking.

since we use the regularization technique in a different problem setting, some subtle differences among different methods exist. for instance, the methods in machine learning  <cit>  and document retrieval  <cit>  usually generate equal number of neighbors  for each node. while the number of neighbors of different peptides in our similarity matrix may vary significantly.

peptide dependency
the idea of incorporating dependencies of peptides from the same protein has been used in proteinprophet  <cit> . here we highlight that there are at least three key differences between our formulation and proteinprophet.

 <dig>  our objective is to re-rank psms while proteinprophet aims at protein inference.

 <dig>  our method can lower the score of a high scoring psm in the presence of low scoring matches from the same protein. this will improve the identifications of some one-hit wonders. otherwise, they may be overwhelmed. in contrast, the adjustment mechanism in proteinprophet favors peptides having many neighbors.

 <dig>  we can find the optimal solution while proteinprophet doesn’t has such a property.

CONCLUSIONS
this paper introduced a consistency-based psm re-ranking method: given an initial set of identification scores and the inter-peptide similarity matrix , the new method finds a set of new scores by minimizing the score inconsistency among similar peptides and the score inconsistency between updated identification and initial identification. since the new method only requires the initial identifications as input, we can apply it to initial rankings from any peptide search engines. thus, this consistency-based score regularization can be used as a general post-processing step in peptide identifications.

the affinity measure in this paper only considers inter-peptide relationship and ignores other sources of information contained in the peptide-spectrum pairs. for instance, many valuable features such as peak offset and sequence composition can help us define more comprehensive similarity metrics. such extensions will generate an enhanced affinity graph since two peptide-spectrum pairs may become similar even when their peptides do not belong to the same protein. we will study whether such an extended graph model can further improve the identification performance in the future work.

our model is based on the hypothesis that “similar peptides should have similar ranking scores”. this hypothesis can have different interpretations, making it possible to formulate different optimization problems. for example, we can use the relative rank instead of the ranking score in the objective function. the investigation of alternative optimization formulations is another interesting topic.

competing interests
the authors declare that they have no competing interests.

authors contributions
zh performed the implementations and drafted the manuscript. hz and wy conceived the study and finalized the manuscript. all authors read and approved the final manuscript.

appendix
rationale behind normalized laplacian
in this section, we present the rationale of using normalized laplacian in the cost function of smoothing inconsistency.

to penalize the smoothing inconsistency, one straightforward method is to use the weighted squared difference among scores of similar peptides:   

the spectral graph theory  <cit>  shows that the following equation holds:   

in the spectral graph theory, d – w is the unnormalized laplacian  <cit> . recall that different peptides may have different number of neighbors, the cost function based on unnormalized laplacian will place more penalties on those peptides with more neighbors. to address this issue, we use the normalized laplacian to replace the unnormalized laplacian in l.

detailed data description
in table  <dig>  we list the urls and file names of the ms/ms data used in the experiment.

some proofs
theorem  <dig> and theorem  <dig> imply the positive semi-definiteness of unnormalized laplacian and normalized laplacian, respectively.

theorem  <dig> for every vector y , we have   

proof. here we repeat the proof of  <cit>  for completeness.  

theorem  <dig> for every vector y , we have   

proof.  

to compute the closed-form solution, the matrix  must be invertible, where α =  <dig> – λ. here we provide the detailed proof for the sake of completeness since it is omitted by  <cit> .

before we proceed to prove the existence of the inverse, we first show that the following two lemmas are correct.

lemma  <dig> both  and  are positive semi-definite, where s = d–1/2wd–1/ <dig> 

proof. according to theorem  <dig>   is positive semi-definite since  is always non-negative.

similarly, we can show that. . thus,  is also positive semi-definite.

lemma  <dig> the eigenvalues of matrix s = d–1/2wd–1/2fall into .

proof. according to lemma  <dig>   is positive semi-definite. meanwhile,  is symmetric. thus, all the eigenvalues of  are nonnegative. let e be an eigenvalue of s and the associated eigenvector is v, i.e., sv = ev. then,

v = v – sv = v – ev=v.

therefore,  is the eigenvalue of  and v is its corresponding eigenvector. thus,  <dig> – e ≥  <dig>  i.e.,all the eigenvalues of s are not larger than  <dig> 

similarly, we can prove that each eigenvalue of s is at least - <dig> 

theorem  <dig>   is invertible, where s = d–1/2wd–1/2and α ∈ .

proof. a matrix is invertible if and only if all its eigenvalues are non-zero. here we show that each eigenvalue of  is non-zero.

let e be an eigenvalue of s and the associated eigenvector is v. then,

v = v – αsv = v – αev= v.

obviously,  <dig> – αe is the eigenvalue of  and v is the corresponding eigenvector. according to lemma  <dig>  we know that – <dig> ≤ e ≤  <dig>  thus,  <dig> – αe >  <dig> holds since α ∈ .

