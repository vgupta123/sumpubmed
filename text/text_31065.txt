BACKGROUND
gene selection methods for microarray data analysis are important to identify the significant genes that distinguish disease classes and to use these selected genes as diagnostic markers in clinical decisions. due to the significance of this matter, many gene selection methods have been introduced. each method demonstrated a proper level of quality to predict disease states in its own test datasets, but the performance level was only partially validated in the sense that a limited number of sample datasets, gene selection algorithms, and the parameters in the test were used. it is not only difficult to choose the best performing gene selection method among many methods for a newly introduced dataset, it is also doubtful if such methods exist that can always guarantee the performance with all types of microarray datasets. a desirable approach would be to find and use a gene selection procedure that is optimized for each microarray dataset in question through a rigorous performance test of representative types of methods while varying the parameters in the methods. to complete these complex works conveniently and efficiently, the tool should automate the comprehensive tests and facilitate high-performance computing.

there have been several tools that support a comparative analysis of different gene selection methods. prophet enables a comparison of the performance of different feature selection methods and classifiers with leave-one-out cross-validation  errors  <cit> . the procedures are automated to test the multiple classifiers but the user should select each feature selection method. gene expression model selector  provides an automatic selection of several feature selection methods and different types of multi-category support vector machine  algorithms  <cit> . the authors concluded that mc-svm was the most effective classifier after a test of several different types of classifiers, including tests involving an ensemble classification method, k-nearest neighbors and neural networks. m@cbeth  <cit>  is a tool designed to compare only classification algorithms. the aforementioned tools are useful but each has room for improvement in terms of automation, the diversity of method comparisons, or the information content in the output report.

the present study introduces figs, a new web-based gene selection workbench. figs automates the generation and evaluation of various gene selection procedures in a parallel computation environment. in addition to the well established feature selection methods and classification algorithms, figs uniquely incorporates several methodological options which can improve performance in certain types of datasets. those involve the specified selection of up- or down-regulated genes in the feature selection step, feature discretization, and new feature vector formation with the addition of the expression vectors of the selected genes in classifier training step. a test using six cancer microarray datasets showed that different types of gene selection procedures should be applied to obtain the optimal gene sets for each dataset.

implementation
figs generates gene selection procedures having two separate steps: feature selection and classifier training . the feature selection step is used for the prioritization of differentially expressed genes. the distributional assumption for microarray data can change for each dataset based on the dataset size, presence of experimental artifacts, underlying gene expression setup and other factors  <cit> . one of our goals is to find proper statistical measures that match these unknown types of microarray data distributions automatically. to facilitate this process, three proven test statistics were selected from among a wide range of parametric and non-parametric or model-free methods. the t-test and the wilcoxon rank sum test were included as a representative parametric and non-parametric analysis, respectively. in addition, an information gain method using an entropy-based discretization measure  <cit>  was included as another type of non-parametric method. using these methods, figs can evaluate the significance of genes with diverse input data features: the original numeric values, the rank-transformed values and discretized values. in addition, we designed a new option to specify up- or down-regulated genes for input. the genes are assigned to up- or down-regulated genes based on their differential expression in two classes. in some cases, the selection of genes in those separate groups can enhance the classification power . during the classifier training step, the support vector machine   <cit>  and the random forest  <cit>  methods were incorporated. these are the state-of-the-art classification algorithms that showed excellent performance in recent comparative analyses  <cit> . the features used for classifier training can be diversified in two types: the original values and the discretized values. previous studies showed that feature discretization can considerably improve classification performance  <cit> . in addition, we developed a new form of feature vector for classifier training. it forms a new feature vector by adding the gene expression features of selected genes . as shown in figure  <dig>  it can generate an improved feature by amplifying a similar expression pattern or offsetting the outliers. the performance of classifier is evaluated by the .632+ bootstrap method  <cit> .

k is the number of selected genes; and error is the .632+ bootstrap error achieved by the best performing gene selection procedure tested on  <dig> bootstrap samples. in the case of the leukemia and breast datasets, the multiple gene selection procedures are the best.

all algorithms in the introduced gene selection procedure are implemented in r  <cit> . the e <dig>  <cit>  and randomforest  <cit>  r-package were used to implement the svm and the random forest, respectively. the computations are parallelized using the parallel virtual machine  via the rpvm  <cit>  and snow  <cit>  in the r-packages on a cluster of  <dig> nodes, each with dual quad-core intel xeon  <dig>  ghz cpus and  <dig> gb ram.

in the web-based user interface, figs takes a two-class microarray dataset as input in a tab-delimited text file. users are allowed to run the default setup suggested by figs or to design their own comparative study by selecting from among the methods and techniques described above. users can specify several desired numbers of genes to be selected. the output reports the performance of each gene selection procedure with the selected genes. the output is available through the web site or can be automatically emailed upon a user's request.

RESULTS
several analyses were conducted to demonstrate the necessity and usefulness of the comprehensive approach of figs. we tested the performance of all the possible gene selection procedures that can be generated by figs to six binary  microarray datasets. the microarray datasets were chosen from the literature because they have been extensively analyzed in previous publications. the six microarray datasets were as follows: leukemia   <cit> , colon   <cit> , prostate   <cit> , adenocarcinoma   <cit> , breast   <cit> , and diffuse b-cell lymphoma    <cit> . figure  <dig> shows the range of .632+ bootstrap errors in the classification models generated by all the gene selection procedures for each microarray dataset. even in the same dataset, the errors differ greatly depending on which gene selection procedure is used. the deviation between the best and worst .632+ bootstrap error for a dataset is in the range of  <dig>   to  <dig>  . this range implies that there is a high chance of getting a much poorer classification model if an inappropriate gene selection procedure is used without caution. in addition, the best performing gene selection procedures for each datasets are different. we examined the best performing methods which produce the smallest .632+ bootstrap errors with a minimum number of genes for each dataset. the best optimized methods for each dataset are listed in table  <dig> with their .632+ bootstrap errors and the number of selected genes. for the feature selection step, we found in all six cases that the model-free or non-parametric methods are preferable to the parametric t-test. according to the literature, non-parametric methods are more applicable in the analysis of microarray data, where the sample size is often small and an underlying distribution can be hardly assumed  <cit> . nevertheless, some microarray datasets can be appropriate for the parametric t-test, especially studies involving large numbers of samples. within two non-parametric methods, we can notice that there is no dominant appearance of a single method. both wilcoxon rank sum test and the information gain method can be used for leukemia and breast datasets. however, the best feature selection method for the adenocarcinoma and dlbcl datasets is the wilcoxon rank sum test, and the best method for the colon and prostate datasets is the information gain method. for the classifiers, the svm and the random forest are both competitive, though as with the feature selection methods the applicability of each method differs for each dataset. the random forest was chosen for the colon, prostate, adenocarcinoma, and dlbcl datsets; the svm was selected for the breast dataset. there is no correlation between the types of feature selection method and classifiers among the best selected procedures. note also that our newly developed methodological designs in figs are frequently selected as part of the best gene selection procedures for those datasets. those are the strategy to select the genes in a separate group having up- or down-regulated pattern and the feature vector addition technique. all the results underscore the need for a comprehensive comparison of the many applicable procedures.

using the same six microarray datasets, we compared the classification performance of the best gene selection procedures found in figs with those of typical gene selection approaches. six gene selection procedures were fabricated by combining three feature selection methods  with two classification algorithms . the number of genes to select was set to  <dig> on the assumption that  <dig> is a sufficiently large number for those six methods to give their best performance. while substantially optimizing the number of genes, figs could find better, or at least comparable, level of classification accuracy than that achieved by the six methods  with much fewer genes. the number of genes that satisfies the level of accuracy for figs as shown in figure  <dig> is  <dig> for leukemia,  <dig> for colon,  <dig> for prostate,  <dig> for adenocarcinoma,  <dig> for breast, and  <dig> for dlbcl. we also tried to compare the performance of figs with recently published methods. however, it is hard to fairly and comprehensively evaluate the performance of different gene selection methods due to the different setups of the experimental design, datasets, and the performance definitions  <cit> . of the various methods, we found varselrf, a gene selection method based on random forest backward feature elimination  <cit> , as an appropriate method that can be readily compared with figs. the classification performances of varselrf for all datasets that figs has tested except the dlbcl dataset are available in  <cit> . for the dlbcl dataset, we obtained the results by using the varselrf tools provided by the r-package. figure  <dig> shows the results of two versions of varselrf. the best optimized gene selection procedures by figs outperform the two different modes of varselrf in terms of the classification accuracy for all tested datasets. although varselrf automatically selected very few genes on the basis of its internal optimization strategy, the classification performance seems to have been compromised.

during our comprehensive comparison of the various gene selection procedures in figs for the six real microarray datasets, we found no single method is dominant in its performance. thus, a comprehensive search for various gene selection procedures is both necessary and useful. although the gene selection methods included in figs are not a complete spectrum of all available methods, the set of methods selected in figs seems reasonable. most methods in figs were selected almost equally frequently in the final best gene selection procedure for the different datasets. the best optimized gene selection procedures selected by figs for the tested cancer microarray datasets outperformed other typical approaches and recently developed methods.

CONCLUSIONS
finding and using a proper gene selection procedure specific to a given microarray dataset is necessary and useful. figs facilitates this procedure. it is an easy-to-use workbench that selects promising genes for disease classification on the basis of a rigorous and comprehensive test of various gene selection procedures for a given microarray dataset. figs helps researchers efficiently and conveniently determine biomarker candidates for clinical application with a greater level of accuracy and reliability.

availability and requirements
project name: figs

project homepage: http://gexp.kaist.ac.kr/figs

operating system: platform independent .

programming language: r, perl and java script.

other requirements: a web brower.

license: none for usage.

any restrictions to use by non-academics: none.

authors' contributions
gsy conceived and designed this study and interpreted the results. th designed and carried out the analyses, and wrote the r-based source codes and the web-based interfaces. th and gsy participated in writing the manuscript. chs and ty contributed to building and testing the infrastructures for parallel computing and the benchmark test.

