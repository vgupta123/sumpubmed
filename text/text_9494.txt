BACKGROUND
with the overwhelming growth of biological sequence databases, handling of these amounts of data has increasingly become a problem. protein sequences constitute one such data type. the number of unique entries in all protein sequence databases together exceeds now about a million. however, biological evolution lets proteins fall into so-called families, thus imposing a natural grouping. a protein family contains sequences that are evolutionarily related. generally, this is reflected by sequence similarity. therefore, one aims at organizing the set of all protein sequences into clusters based on their sequence similarity.

clustering a large set of sequences as opposed to dealing only with the individual sequences offers several advantages. a frequent problem is the identification of sequences that are similar to a new query sequence. this task can be executed much quicker when only one comparison to an entire cluster has to be performed rather than one comparison per database sequence. another application lies in the possibility of analyzing evolutionary relationships among the sequences in a cluster and of the species they come from. moreover, the presence or absence of sequences of a group of species can give useful information about their evolutionary relationship, if their complete set of protein sequences is known.

the aim of clustering protein sequences is to get a biologically meaningful partitioning. one of the simplest well-studied and computationally cheap methods to construct a clustering of data points is single linkage clustering. starting with the pair of data points of least distance, one incrementally merges single data points or already existing clusters. such a hierarchical clustering can be viewed as a tree, called the single linkage tree. the leaves represent the individual data points, while the root of this tree corresponds to just one large cluster representing the whole data set. all other layers in between can be seen as cluster sets at different levels of similarity. however, it is not clear which layers give a meaningful partitioning of the data. they should be chosen so that they neither produce small trivial clusters nor form huge uninformative clusters.

several approaches already deal with the problem of partitioning a protein sequence database into protein families. automatically generated cluster sets like protomap  <cit> , protonet  <cit> , or clustr  <cit>  typically provide a hierarchical classification at several different levels of similarity. others, like iproclass  <cit>  or pirsf  <cit>  include further knowledge, e.g., from domain based classifications, or require manual interaction. kawaji et al.  <cit>  recently developed a graph-based clustering method for the detection of distantly related sequences of a protein family. tribemcl  <cit>  is a method for clustering proteins into 'protein families' using a markov clustering method. it is primarily used for comparing protein sequence sets of completely sequenced genomes. reviews of currently available cluster sets can be found in: heger et al.  <cit>  and liu et al.  <cit> .

in our approach we first exploit the branching structure of the single linkage tree, which elucidates an unexpected structuring of the sequence space. traversing the tree from a leaf towards the root we inspect the sizes of the merging subtrees. first one notices relatively small increases that correspond to very similar proteins. later on, sequences merging in correspond to weakly related proteins. at one point, however, we observe an enormous increase in the size of the subtree, where a large part of the database merges in. all sequences below this point in the tree are assumed to belong to the same superfamily. each superfamily typically covers several closely related protein families. they can be determined by revealing the connectivity of the sequences belonging to a superfamily. since the single linkage tree is built using only the smallest distances connecting subtrees, information about the connectivity within these subtrees is lost in the hierarchy. for each superfamily, we construct a superfamily distance graph by including only those nodes labeled with sequences belonging to the respective superfamily. these graphs are then split at reasonable cut sites into highly connected subclusters. for historical reasons  <cit> , we call our procedure as well as the resulting cluster set systers, which is short for systematic re-searching.

up to that point, the hierarchy consists of superfamily and family clusters. however, protein sequences are built up of smaller entities, called domains. they again can be grouped independently of a certain order in a protein sequence. for this level we rely on one of the currently established domain databases, i.e., the pfam database  <cit> . to allow the user to explore protein sequence space through the complete hierarchy, we present an interface to our cluster set on the internet. it is possible to enter the hierarchy at each of the layers through various entry points and change to another layer whenever desired. additional information like a multiple alignment or a phylogenetic tree is given for each of the family clusters.

here, we explain in more detail the systers algorithms developed to determine superfamily and family clusters. each step is illustrated by an example. we report our results on clustering the non-redundant protein sequence space consisting of about  <dig> , <dig> sequences. an overview of the availability and accessibility of the cluster set is given. finally, we present a comparison of our clustering method with two other currently available and widely used clustering methods, namely single linkage clustering and tribemcl.

RESULTS
clustering
we have applied our algorithms as described in the methods section to a sequence set consisting of all known protein sequences from the swiss-prot rel.  <dig> and trembl rel.  <dig> databases  <cit> , and from several completely sequenced organisms  <cit> . the original set contains  <dig> , <dig> sequences. sequences which are too short to yield a result in the database search are removed from this set. sequences which are identical sequences of other sequences are sorted together and only the longest sequence is retained as the representative. in a pairwise comparison of all remaining  <dig>  non-redundant sequences, this results in a triangular matrix sparsely filled with  <dig> , <dig> e-values better than or equal to  <dig> . comparisons of a sequence to itself are not considered. by temporarily removing all those sequences which are at least 80% identical over at least 80% of their entire length to another sequence, this number decreases. these sequences are considered redundant, and are added to the cluster set again later in order to retain their annotation. by reducing the number of sequences to  <dig>  non-redundant sequences, the remaining number of pairwise comparisons decreases significantly. fortunately, the resulting triangular distance matrix turns out to be sparsely filled with only  <dig> , <dig> values . constructing the distance graph with these values, the data splits into  <dig>  connected components with  <dig>  components consisting of only one sequence. the resulting single linkage tree divides into  <dig>  superfamilies with  <dig>  of them consisting of only one sequence. the subclustering splits the data further into  <dig>  family clusters with an overall number of  <dig>  single sequence clusters.

access to the cluster set
the systers cluster set  <cit>  is available over the internet at . there it is possible to explore the protein sequence space by navigating through the complete hierarchy consisting of superfamilies, family clusters, and domains. for the last layer in the hierarchy, the domain level, we rely on one of the currently established domain databases, namely the pfam collection of protein domains. it is possible to enter the hierarchy at any layer, e.g., by searching for a keyword, choosing a species, or selecting a domain. for each family cluster a consensus sequence is generated. all consensus sequences together build a database searchable by blast. thus, a clear assignment of a new protein or nucleotide sequence to a family and a superfamily is possible. additional information like a multiple alignment or a phylogenetic tree is given for each of the family clusters. whenever possible, links to external resources are provided to allow for further information, e.g., about structural properties or underlying genes.

validation
for the validation of our clustering procedures we needed on one hand a "true" biologically verified cluster set and on the other hand results of other clustering procedures on this data set. unfortunately, for large scale analyses such validated data is not available. thus, we decided on performing our evaluations on two biologically meanigful data sets, namely well characterized sequences from swiss-prot and trembl with  pfam domain annotations and  enzyme annotations.

clustering of such large data sets is not an every day routine. normally the software to handle such data sets is not publicly available and only the results of their application are published. although these results are mostly publicly available for browsing on the web the underlying primary data differs in all of these data sets. additionally a systematic, unbiased and independent comparison would be intractable on a large scale by querying the web.

one of the simplest well-studied and computationally cheap methods to construct a clustering is single linkage clustering. we implemented procedures to perform a single linkage clustering on the two data sets at various different cutoffs. this corresponds to performing single sequence searches with a certain e-value cut-off for all sequences in the data set with subsequent determination of the connected components of the results. additionally we decided to compare our clustering procedure to one of the most widely used and publicly available methods for large scale protein sequence clustering, namely tribemcl.

we applied the single linkage clustering as well as the systers clustering to the pfam data set and computed the jaccard coeffcient, the sensitivity and the selectivity of the clustering results in comparison to the "true" cluster set as described in the methods section. all clusterings were performed on the non-redundant data set as described under preprocessing in the methods section. after the clustering, redundant sequences were added again to the cluster sets to allow for a comparison with the "true" cluster sets.

for the pfam cluster set the best single linkage clustering with respect to the "true" cluster set can be achieved at an e-value cutoff of 1e- <dig> . the systers clustering results in a slightly higher jaccard value. note that the "best" single linkage clustering result can not be determined from the clustering itself, but was selected after comparison with the "true" cluster set, which is not available when clustering new sequence data. thus, the systers clustering turns out to be superior to the single linkage clustering in the sense that it is able to determine the correct cluster granularity without manual interaction.

in total we get only weak results for the pfam data set. one of the reasons is the choice of the "true" cluster set. figure  <dig> shows an example where sequences composed of the same domains and belonging to the same family of adenylate cyclases end up in different "true" clusters. the repetition of one domain and the presence/absence of another domain lets them fall into different "true" clusters. these sequences are in a biological sense correctly clustered by systers but cause a problem when comparing them to the "true" cluster set. in this case the "true" clusters build subsets of the systers subclusters.

another reason for the weak results in comparison with the pfam data set are fusion proteins. they bring together sequences belonging to otherwise unrelated families.

we applied the single linkage clustering, the systers clustering and the tribemcl clustering to the enzyme data sets and computed the jaccard coeffcient, the sensitivity and the selectivity of the clustering results in comparison to the "true" cluster sets as described in the methods section. for this data set the systers clustering turns out to be superior to both the single linkage clustering and tribemcl . in both enzyme data sets the tribemcl clustering shows the best ability to reject unrelated sequences but at the expense of finding distantly related sequences. as expected, the systers subclustering shows the best result on the lowest level of the enzyme data set where individual enzymes are identified.

in total all methods perform significantly better on the enzyme data set. this data set is much smaller than the pfam data set and contains well annotated enzymes. in contrast to the pfam data set, the "true" cluster set was chosen on the basis of enzyme annotation, namely ec numbers, as described in the methods section. sequences belonging to the same "true" cluster thus may show the same domain composition but may also differ in this sense. although this is a somehow weaker definition of a "true" cluster set it is more focussing on the functional properties of the proteins.

CONCLUSIONS
we have presented a hierarchical clustering of protein sequences into biologically meaningful superfamily and family clusters. a combination of an upward sweep with dynamic determination of superfamily cutoffs and a downward pass that divides superfamilies into families has been introduced. we determine a superfamily by detecting the largest increase in the size of the merging subtree traversing from a leaf in a single linkage tree to the root. we assume that at this point the twilight zone begins because suddenly a large number of supposedly unrelated sequences enters the cluster. each of the superfamilies is further cut into family clusters by detecting weak connections in the underlying distance graph.

it is interesting that both the superfamilies as well as the family clusters are generated solely from the structure of the single linkage tree , without any knowledge of the biological information represented. such self-structuring properties have also been observed in other large data sets such as phone-call or web-link graphs  <cit> .

an alternative approach for cluster determination is presented by sharan et al.  <cit> . their click algorithm  uses graph-theoretic and statistical techniques to first identify tight groups of highly similar elements , which are likely to belong to the same cluster. several heuristic procedures are then used to expand the kernels into the full clustering. in our much simpler approach, we produce a hierarchical clustering based on the partitioning into superfamilies, which already results in a biologically meaningful set of family clusters.

although the vast majority of cases we looked at are in agreement with biological knowledge, there exist some inconsistencies due to peculiarities in the data. distinct protein families may end up erroneously in the same superfamily because of a fusion protein covering sequence information from both families. the same effect can be seen at multidomain protein families linked together by a single highly conserved common domain. although the subclustering in most cases splits these superfamilies again into distinct families, we would prefer to take care of these cases already in the process of superfamily determination. nevertheless, comparisons with other methods showed that our clustering methods are able to produce a biologically meaningful clustering.

thus far, our hierarchy consists of two layers representing protein superfamilies and families. for the third layer located at the domain level, we currently rely on well-established domain databases, but intend to follow our methodology also in the direction of deriving so far unknown domains.

future plans also include a regular update of the systers cluster set. since the most time consuming part are the all-against-all sequence searches, new sequence similarities will be incrementally added instead of recalculating all similarity values. the clustering procedures themselves rely on the topology of the whole sequence space and can be run on the whole data set whenever the underlying sequence set changes. other future developments will be in the direction of the so called tree of life. we plan to combine the evolutionary information given by each of the protein clusters to extend the knowledge about the relationship between different groups of species.

