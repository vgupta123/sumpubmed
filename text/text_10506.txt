BACKGROUND
computationally based functional inference can be considered a two step process:  finding functional correlation between annotated and unannotated proteins by one or more experimental or computational methods, and  formulating a decision rule for transferring the function of annotated proteins to unannotated proteins. in general one can expect that the stronger the correlation, the greater the precision of transfer; similarly, one expects that the more data sources by which a correlation is found, the greater the precision. the integration of heterogeneous data sources by various methods is therefore an important component of the procedure  <cit> .

in the first step, the result of a search for correlations between all proteins – annotated and unannotated – using any particular experimental or computational procedure, is conveniently displayed as a graph, the nodes representing proteins, and the links  between them expressing a correlation. the links are generally weighted, reflecting the degree of correlation or functional similarity based on various experimental and computational evidence  <cit> , such as physical interactions detected by yeast two hybrid experiments  <cit> , correlated gene expression by microarray  <cit> , and correlated phylogenetic profiles  <cit> . if the average number of links per protein is sufficiently large, the result will be a network of interactions, a so-called functional linkage network .

although an fln can be constructed by any of the above sources, different sources usually vary in reliability and coverage. for instance, while microarray and yeast two hybrid experiments can provide a great deal of information about the functional relationships between genes, they are noisy and subject to high false positive rates. while sophisticated statistical frameworks have been utilized to improve functional inference based on individual data sources  <cit> , the coverage and reliability of single data source are inherently limited as one data type illuminates only limited aspects of the underlining biological mechanisms. to overcome these drawbacks, multiple data sources are often utilized and integrated using machine learning procedures, such as bayesian methods, neural network, and decision tree. previous integration results indeed support the intuitive expectation that such integrated flns can be more reliable than flns based only on a single data source  <cit> .

after fln construction, the second step is network based functional inference  <cit> . some methods have been developed which first identify network modules of related proteins  <cit>  followed by annotation of these modules based on the known functions of its members. alternatively, various decision rules can be employed to directly infer a protein's function based on its connections in the network. the simplest decision rule, standard guilty by association , casts the annotations of all neighbors to the unknown protein so long as the linkage weight exceeds a threshold  <cit> . although sga usually assigns at least one correct annotation to a target, the number of false positives is high due to lack of a selection metric to weight candidate annotations. two factors could be considered as selection metrics to weight annotation predictions for a target protein:  occurrence frequency of an annotation among the neighbors  weights of the relevant links contributing to a particular annotation. to improve sga, another decision rule, "majority rule" , first applies sga, and then weights the annotations in accordance with their occurrence frequencies  <cit> . it thus converts the annotations made by sga into a rank ordered list. the performance of this method is dependent on where the list is truncated. recently mcdermott et al  <cit>  suggested a generalization in which annotations are weighted by the sum of linkage weights. this "neighborhood weighting"  procedure therefore considers both linkage frequency and weight. the above decision rules are illustrated in fig  <dig>  in addition to sga, mr and nw which base annotation on local network connectivity, other algorithms are based on global network connectivity. some methods repeat the application of mr or nw until the entire network reaches an extreme of some target function, for example  a minimum in the number of links connecting proteins with disparate functions, or  a maximum in the weighted sum of links connecting proteins sharing the same functions  <cit> . another framework exploiting global network connectivity applies a markov random field  model by calculating the probability that a protein has a function given the functions of all other proteins in the network  <cit> . additionally, a flow based method has also been developed, which simulates the functional annotation of proteins as the spreading of functional flow in a fln  <cit> .

in a weighted fln, network based functional inference can achieve high precision when using a stringent network linkage weight cut-off, but that comes at the price of low proteome coverage. alternatively, when a less stringent linkage weight cut-off is used, frequency-based inference rules can achieve good coverage, but at the expense of a high false positive rate. to address this challenge, using saccharomyces cerevisiae as a model organism, we explore a two-step function-annotation framework:  construction of a high-coverage and reliable fln through the integration of heterogeneous data sources using machine learning methods;  development of a matching decision rule for the constructed fln to optimize functional annotation. the goal of this study is to provide precise functional annotation for as many proteins as possible by combination of both steps. we choose kegg  <cit>  as our functional ontology because its endpoint, pathway presence, is relatively well defined. go is also useful and has been employed extensively  <cit> , but the inherent variance in go tree depth for different functional families can complicates test statistics. in the first step, we find that various machine learning methods can all combine diverse sources to construct a high-coverage and relatively reliable fln with comparable quality. in the second step, we introduce an adjustable decision rule. empirical tuning of this adjustable rule for the constructed fln results in a relatively simple maximum weight  rule, which uses maximum linkage weight to assign functional annotation. we find that mw increases the precision over other methods, and at high coverage it can be up to  <dig>  fold more precise than mr and nw, and up to a  <dig> fold more precise than sga. we also develop a scoring scheme to estimate annotation precision for individual predictions.

RESULTS
general procedure
the overall procedure  consists of two steps. the first step combines various data sources by a machine learning method to construct a high sensitivity network such that for any node , at least some nearest neighbors are likely to be functionally related. in the second step, various decision rules are then explored for the ability to prune the set of functional linkages to obtain high precision annotation while still covering a large number of proteins.

fln construction by machine learning classifiers
a machine learning classifier is applied to assign linkage weights, a measure of tendency of pathway sharing, to protein pairs by incorporating information from multiple data sources as described in methods section. the result is a functional linkage network . a high-quality fln would have both high linkage precision and high proteome coverage  <cit> , where the number of "covered" proteins is the maximum number of proteins that can be annotated. we expect that a principled integration of multiple information sources will result in performance that is better than for any single source. a comparison of performance between integrated sources obtained using a linear svm  and single sources, clearly confirms this expectation . in addition to linear svms, we use linear discriminant analysis, naïve bayes, and neural network, and find that all four have comparable integration performance .

decision rules for prediction of protein function
given a network of linked proteins and correlations assigned to each link based on integrated data sources, the problem is to assign unannotated proteins to kegg pathways, with a high precision. to this end we propose an adjustable decision rule, with a single parameter alpha. the rule is such that the score relating a protein to a particular annotation is the sum of edge weights which link the unannotated protein to proteins with the given annotation, raised to the power alpha . to determine the optimal alpha value for application to the s. cerevisiae fln we select three alpha values which correspond to special instances of the decision rule. first, we select an alpha value of zero, which is equivalent to the previously described majority rule decision rule   <cit> . with the mr rule, annotation frequency among neighboring proteins is used to determine the annotation score. second, we select an alpha value of one, which is equivalent to the previously described neighborhood weighting rule   <cit> . with nw, both the edge weights and frequency of annotation are considered, as the sum of the edge weights of neighbors belonging to a particular annotation category determine the score for that category. finally, we test a maximum weight rule , which is the rule approached as alpha becomes infinitely large. with the mw rule, an annotation score for a particular annotation category is determined by the maximum edge weight among neighbors belonging to that category. in addition to the mr, nw, and mw rules derived from our adjustable decision rule, we also evaluate the naïve standard guilt-by-association   <cit> , where all annotations of neighbors are assigned without considering edge weights or frequency.

rank and linkage weight cut-off affect annotation performance
the performances of mr and nw were previously indicated to be determined by two parameters, linkage weight cut-off and rank cut off   <cit> . these two factors also determine the performance of annotation precision-coverage characteristic curve  obtained using mw . in particular, for each linkage weight cut-off, the candidate annotations of all neighbors of a protein are listed in descending order according to equation  <dig>  a cut-off of  <dig> means only the highest ranked annotation is used; a cut-off of  <dig> means the top  <dig> annotations are assigned etc. schwikowski, et al. applied a similar procedure for selecting predictions with a fixed rank cut-off  <cit> . the result clearly shows that the best apcc is obtained by using the most stringent rank cut-off; i.e. the top ranked annotation. as the rank cut-off drops, mw loses precision, with an increasing number of false positives, and in the limit gives the same apcc as sga.

comparative performances of decision rules
linkage weight cut-off and rank are common factors affecting precision in mr, nw, and mw, though each has its own criterion of assigning rank, and the best precision at a given coverage is obtained by assigning only the highest ranked annotation. a comparison of the annotation precision-coverage curves for the different decision rules using only the top ranked annotation indicates that  as expected, sga is worse than the other three at all degrees of coverage and  the other three rules perform comparably at low coverage , but mw diverges rapidly from the other two for coverage greater than  <dig> , remaining precise at all degrees of coverage . comparisons with the top  <dig> or  <dig> ranked predictions show similar trends. these results are obtained using linear svm, but similar results are obtained using other classifiers  . in addition, we also compare mr, nw, and mw rules by annotation precision-recall analysis and obtain similar results. at a low linkage-weight cut-off , mw outperforms nw and mr ; at a high linkage-weight cut-off , the three decision rules have similar performance, all with low recall  and high precision  . the performances of these decision rules are also evaluated in random control networks. the results indicate that relative to performances with the real network, the random control curves for different annotation methods have roughly similar poor performances . annotation precision-recall analysis using yeast gene ontology slim terms  as the annotation ontology shows similar trends  .

the superior performance of mw can be understood by considering the properties of the integrated fln and the effect of decreasing the linkage cut-off in an attempt to increase proteome coverage. in the fln derived from integration of multiple data sources with machine learning, the linkage weight is proportional to linkage precision  . therefore a low linkage weight cut-off generates a high-coverage and relatively noisy network, and a high linkage weight cut-off generates a low-coverage and relatively confident network. as the linkage weight cut-off is decreased, and more low confidence links are incorporated in the network, mr and nw by definition consider all these weak links in determining the ranks of different annotations . furthermore, mr weights strong and weak links equally and thus performs worse than nw. mw on the other hand, selectively uses only the highest quality link contributing to each relevant annotation, to rank different annotations  and therefore acts as a better noise filter on a high-coverage and relatively noisy fln.

to fix ideas, consider the unannotated yeast protein ykl154w, which is linked to  <dig> annotated neighbors participating in  <dig> pathways . sga, by definition, chooses the annotations of all neighbors. the other  <dig> methods prune the results in accordance with rank cut-off. at a weight cut-off of  <dig>  , all methods choose "protein export" as the only prediction. however, when the much less stringent linkage weight cut-off of  <dig>  is used , the top ranked prediction for mw is "protein export", while nw and mr choose "ribosome proteins" due to its high occurrence frequency. although ykl154w is not annotated in kegg, it is annotated in sgd, described as "signal recognition particle  receptor beta subunit; involved in srp-dependent protein targeting; anchors srp101p to the er membrane". in kegg database, srp  dependent protein targeting process is defined to belong to "protein export" pathway. srp receptor beta subunit is not part of the ribosome complex, thus "protein export" is the most appropriate prediction. only mw ranks "protein export" as the top prediction independent of the network quality.

above we have compared mw with mr and nw, which are special instances of our adjustable decision rule, with specific values of the alpha parameter. to make sure that there is not some intermediate alpha value which is in fact optimal, we empirically test a range of alpha values and as shown in fig.  <dig> and the result shows that performance increases with alpha, indicating that mw is the optimal rule.

an obvious question to consider is how performance of the mw decision rule varies with choice of classifiers. as is evident from fig.  <dig>  the annotation precision-coverage curves generated using mw with different classifiers are virtually super imposable. so at least for the  <dig> classifiers considered in this paper, which one is used is more or less irrelevant – all that matters is the decision rule.

generation of final predictions and estimate prediction precisions using mw scores
although the four classifiers show similar performance in combination with mw decision rule, we have some preference for using a linear svm classifier because  it is linear and therefore simpler  and  naïve bayes and linear discriminant analysis require additional assumptions about input data .

although the best overall precision is obtained by assigning the top ranked annotation only, and full coverage can be achieved with high precision, proteins have multiple functions, and many of these will be missed. a more informative procedure would be to choose the top few annotations, evaluate the precision of each, and then pick those annotations that exceed a prespecified precision. in particular, we begin with a low weight cut-off of  <dig>  to obtain a full-coverage fln, and then choose an arbitrary rank cut-off, for example top  <dig>  to assign up to  <dig> annotations per protein, with each annotation associated with a mw score. finally we estimate a specific annotation precision for each prediction by calibrating the mw scores against annotation precision  <cit>  .

the calibration curve is obtained by binning the mw scores, assigning a precision estimate to each bin by comparing the predicted annotations and the original annotations for known proteins , and then fitting the results to a logistic regression function. the result is shown in fig  <dig>  using  <dig> equal bins. the good match between the binning results and the fitted curve suggests that the mw score is positively correlated with annotation precision and can be used to estimate the latter. for instance, for ykl154w , only the most appropriate prediction, "protein export", has a high estimated precision of above  <dig> , all other predictions are less than  <dig> . more examples are also provided . we list pathway predictions for all the proteins covered in input data sources, each associated with a precision estimate .

we summarize our prediction results by filtering the predictions with increased mw score cutoffs and evaluating the predictions based on proteins with known annotations . for instance, at precision of  <dig>  and recall of  <dig>  , with  <dig> proteins among  <dig> pathways as annotation source,  <dig> unannotated proteins are assigned into  <dig> specific pathways. we are able to assign multiple pathways to a protein: from precision of  <dig>  to  <dig> , up to  <dig> pathways can be assigned to a protein and the average number of pathways per protein is larger than  <dig> . our predictions cover large number of pathways. even at high precision of  <dig> , our method still enriches  <dig> pathways, and as the kegg database continues to expand, we expect methods such as those developed here to provide increasingly comprehensive understanding of protein function and pleiotropy.

evaluation of framework robustness and potential for applicability to less well studied organisms
we have demonstrated that our framework performs well in yeast. similarly, we have applied linear svm in combination with mw rule in e. coli and we find that the framework also performs well  . while these results are encouraging, we are aware that our mw rule is a linkage weight based local decision rule, i.e. uses only immediate network neighbors for functional prediction. as a local decision rule, mw will tend to perform best with a network where on average unannotated proteins are well connected to annotated proteins with high precision links. for an integrated fln, these network properties are primarily dependant on the number of annotated proteins in the network and the availability of diverse data sources. with our analysis in yeast and e. coli, our flns meet these ideal criteria, with the level of annotation being relatively high, and multiple high quality data sources being integrated using machine learning.

however, less studied organisms likely won't have as many annotated proteins or data sources available. in order to more rigorously assess whether our framework is likely to meet with success when applied to less studied organisms, we have performed analyses in yeast and e. coli to test how the performance is affected by  decreasing the number of annotated proteins in the network and  reducing data sources to include only those which are likely to be available for most organisms . we find that using just  <dig> annotated proteins  as annotation source, the precision at various degrees of coverage is still over  <dig>  in yeast and over  <dig>  in e. coli  . additionally in yeast, we leave out high-throughput ppi  and gi  data as those data are not available for most eukaryotes. using only sequence based phylogenetical profile, domain fusion, and sequence similarity as well as expression data, the precision remains over  <dig>  at various degrees of coverage in yeast  . in e. coli, using only sequence based data sets , as these data sets will be readily available for any sequenced prokaryote, the precision remains over  <dig>  at various degrees of coverage, although the coverage does drop to  <dig>   . in both tests the performance reduction is small relative to the overall performance for both species, and it is therefore likely that our framework can be applied to less studied organisms.

although these analyses demonstrate some degree of robustness in our framework, in a very poorly annotated organism with few available data sources, most unannotated nodes will on average have few annotated neighbors, resulting in relatively little additional annotation. in such a situation methods that use new  annotations as they are assigned, could increase performance  <cit> , the reliability of the final annotated network will, however, be critically dependent on the quality of local inferences; i.e. the local decision rule remains crucial. the approach we have taken here, which uses kegg annotations, starts with a relatively sparsely annotated network, since only around 20% of saccharomyces cerevisiae genes are kegg annotated. many genomes of interest exceed this annotation percentage, so even in its present form of being strictly local, we can expect a fair degree of general applicability, despite the fact that there may indeed be flns in which a global decision rule is preferable.

to demonstrate the importance of the local decision rule, we have compared the annotation performance of the mw rule with the previously published functional flow method  <cit> , using the integrated yeast fln as the test network. the functional flow method exemplifies global decision schemes, as node annotation includes the iterative application of a local rule as a means to propagate annotation from non-adjacent nodes. as a first step in our analysis, we compare mw to functional flow, with propagation limited to the adjacent node ) . this is in effect a comparison of mw to the local decision rule used by functional flow, as there is no propagation of information beyond neighboring nodes. as the local decision rule underlying the functional flow algorithm is a variant of the nw rule, we find that unsurprisingly, mw shows performance increases similar to those seen in the previous comparison to standard nw at high coverage. additional comparisons in which functional flow is implemented with varying propagation distances show similar results, indicating that the benefit of global propagation is unable to compensate for the use of a suboptimal local decision rule. despite this comparison, we expect that a method which incorporates the optimal local decision rule into a global framework will result in further improvement in results, and will be a subject of future work.

additional considerations for future application of the proposed framework
in addition to potential performance improvements achieved by embedding our local decision rule in a global framework, we also expect that small improvements can be gained in the future with more sophisticated data handling. specifically, some data sources such as ppi and gene expression are noisy, which has the potential to result in spurious linkage weights. although our machine learning based data integration substantially improves the reliability and coverage of linkages when compared to linkages based on individual data sources , it is possible that if we adopted some of the more sophisticated methods used to remove noise and improve functional inference with microarray and ppi measurements  <cit> , we might further improve performance. our currently analysis and conclusion about mw are based on experiments in yeast and e. coli. in the future, we plan to further explore the application and extension of the framework in other species, especially higher eukaryotes such as human.

CONCLUSIONS
in this study, we have developed a general two-step function-annotation framework, and show that high coverage, high precision annotations can be achieved by constructing a high-coverage and reliable fln through integrating multiple data sources using a machine learning method, followed by the application of an adjustable decision rule. for fln construction, we demonstrate four commonly used machine learning techniques all show comparable performance. for decision rule selection, mw rule is identified as optimal for the integrated fln after the tuning of the adjustable decision rule. taking advantage of the correlation between mw score and prediction precision, a scoring scheme to estimate the precisions of individual predictions is also provided. finally, we also test the robustness of our framework and find that our framework can likely be applied to less studied organisms.

