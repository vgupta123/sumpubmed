BACKGROUND
the increasing importance of high throughput molecular biology techniques, such as whole genome genotyping and next generation sequencing, has boosted the identification of novel biomarkers for diseases having a genetic component  <cit> . in particular, the evaluation of single nucleotide polymorphisms  is very promising, because they represent established single base variations with respect to the wild type, and their knowledge can be exploited to characterize each subject by associating a specific phenotype with the corresponding genomic pattern.

the human genome counts more than  <dig> million of snps  <cit>  and the number of snps with a minor allele frequency over 10% is estimated to be perhaps as many as five million  <cit> . snps are distributed throughout the human genome and their effect on phenotype depends on the biological role  and state  of the genomic regions where they occur.

snp knowledge is widely exploited for genome wide association studies   <cit> , identification of copy number variations   <cit> , and observations about population stratification  <cit> . nowadays, chip technologies allow the analysis of up to one million snps for each patient. the selection of snps to be included in the analysis is a critical problem for genotype array providers, which employ the non-random inheritance of these genomic variations to identify tag snps representing haplotype blocks. a widely used approach to optimize the snp probe set relies on the concept of linkage disequilibrium   <cit> , which exploits a statistical similarity measure between adjacent snps to compute, for each couple of snps, the information improvement using both of them or only the most representative one. ld mapping is used to optimize the experimental information content by containing the number of probes employed for the genotype analysis into  <dig> million of tag snps.

snps filtering and prioritizing methods are also very important in case of custom genotyping chip design, defining disease-oriented arrays by pre-selecting a set of snps that can be related to a specific pathology. in this general scenario, no automatic methods have been proposed to support the identification of the most probable snps associated to a pathology relying on the available biomolecular knowledge.

on the other hand, gwas can identify snps associated to a disease working on genotypes and phenotypes analysis. generally, a gwas output has to be interpreted considering the biological context to enrich the pure statistical results, in which the effective disease related variations could be dispersed among many less critical snps. this process means to "re-rank" gwas scores relying on snp properties , in order to shed light on variations that are effectively critical for the pathology in analysis.

herein we describe snpranker  <dig> , a system that enables the prioritization of snps, which relies on a previous published version of the system  <cit> . snpranker  <dig>  ranks snps according to a user-selected set of features, which in this version has been enriched with epigenetics and functional genomics attributes, by employing a novel data mining approach. snpranker  <dig>  provides a machine learning derived scoring schema, which consists of a data mining model, optimized against experimental evidences by employing a genetic algorithm, for characterizing snps related to an input dataset of genes, biological processes or gwas results. the system provides a ranked list of snps as output, with annotations about their statistical enrichment with respect to the most represented pathologies.

related works
the bioinformatics analysis of genotype experiments is a complex task, which is usually addressed with statistical methods, if sufficient knowledge is available to formulate hypotheses, or using machine learning approaches, if it is necessary to create classificatory rules relying on data themselves.

statistical approaches are commonly used in genetic epidemiology and in many researches these methods achieved good results  <cit> . despite these successes, they show some limits, which are mainly related to the underlying statistical hypotheses. the computation of p-values, which is a typical approach in gwas, is prone to bias in the selection of the studied population and the capability of inferring correlations between genomic variations and pathologies is inevitably restricted to the set of tag snps used as probe set . statistical approaches are solid, but the abstraction they use to manage data often provides results difficult to interpret, because best hits are selected without any correlation to real genomic features that can be identified as causes of the disease.

on the other hand, machine learning approaches are very flexible thanks to their ability to directly create a model from the data, although in well defined analysis context  are considered less reliable. considering snp prioritization as a classification problem, we chose a supervised machine learning approach to generate a function able to map inputs to desired outputs. while employing a supervised method, the selection of the training and validation sets must be carefully achieved, usually employing a cross-validation approach, since the model is created on them.

machine learning approaches have a long tradition in bioinformatics, which requires the development of tools and methods capable of transforming 'omics' data into real knowledge about the biological underlying mechanism  <cit> . nonetheless, there are only few applications developed to exploit machine learning approaches for genetic features ranking in relation to specific diseases. an example is endeavour  <cit> , a software that performs gene prioritization for ranking candidate genes involved in biological processes or diseases relying on their similarity to known genes related to these phenomena.

concerning snp prioritization some solutions are available, such as pupasnp finder  <cit> , wjst's system  <cit> , polymapr  <cit>  and snpselector  <cit> . these servers usually integrate information from a variety of databases and analytical tools in order to create a knowledge base for snp annotation, starting from public domain databases, such as dbsnp  <cit> , goldenpath  <cit>  and snpper  <cit> , which contain well-organized catalogues of snps and provide portals to search for fundamental information about them. more recent solutions, which can be used in the frame of gwas, are fastsnp  <cit> , which employs a complete decision tree to assign risk rankings for snp prioritization, f-snp  <cit>  that integrates more than  <dig> features for snp annotation, spot  <cit>  that relies on gin  scores which are cumulative measures of the biological relevance obtained by combining information across multiple domains, and fitsnp  <cit>  that provides predictions about snps involved in diseases relying on a meta-analysis of microarray data. even an r package available in bioconductor  <cit>  has been developed in this context, based on variance prioritization, which selects snps having significant heterogeneity in variance per genotype using a pre-determined p-value threshold.

the first version of snpranker  <cit>  was also a web tool for snp prioritization. as many of the listed resources, it relied on a data-warehouse approach for collecting as many data about snp features as possible, to provide users the most complete annotation schema according to the public available information. the innovation of snpranker concerned the use of an ontological expansion to enrich the set of input snps with data about semantic-associated genomic traits that could have statistical correlations and functional influences on the data provided by users. nonetheless, in the first version of snpranker, as in many of the discussed solutions, users must select weights of the snp features upon their expertise. at the best of our knowledge, no methods are available in literature to evaluate snps by features scoring through machine learning algorithm using data mining approaches.

methods
the core of the designed system can be decoupled into five levels:  data integration, which consists in the creation of an integrated database starting from sparse and heterogeneous biomolecular annotation data sources;  ontological expansion, which enables the exploitation of gene ontological annotations to enrich the initial list of genes provided as input;  features set definition, which includes the choice of the features characterizing each snp and the related weight in the scoring computation;  scoring computation through web interface, which is the computation of the function that provides a final score for each snp;  dataset enrichment analysis, which allows to verify the statistical significance of most represented diseases and pathways. figure  <dig> describes the logical schema of the snpranker  <dig>  pipeline. following subsections present in details the levels mentioned above.

data integration
similarly to the first implementation of snpranker, snpranker  <dig>  relies on a data-warehouse architecture, which integrates public information about genes and genes products, in order to provide a solid knowledge base for the snp scoring engine. as discussed in our previous work  <cit> , the advantage of this database is the use of a strong systems biology approach for data organization, combined with an ontology layer for the annotation of retrieved data. an improvement of snpranker  <dig>  is the use of the ndb engine of mysql cluster as backend server that, in combination to the optimization of the database schema, overcomes the latency problem of some complex query requests.

the peculiarity of the developed database is represented by the multi-level approach to data integration  <cit> , which enables a more comprehensive view of the examined process or disease, therefore leading to a better selection of the set of snps to be included in a disease-oriented custom chip or a better re-scoring of gwas data.

the snpranker  <dig>  database presents a gene-centric approach, which means that all tables are related to each other using the concept of gene to create relation in the data-warehouse schema, allowing the connection of molecular levels to the pathway level. human genes are annotated employing, among other features, their symbols, descriptions, aliases and sequences. data about snps are downloaded from goldenpath  <cit> , with reference to the hg <dig> genome assembly, which allows the integration of data about chromosomal and contig positions, heterozygosity, alleles and functions of the related dna portions. data about known genes and snps involvement in particular diseases have been downloaded from omim  <cit> .

from the epigenetics point of view, ucsc tracks about dnase clusters, chromatin structures and methylation patterns have been downloaded and integrated in our database for different tissues and cell lines in order to characterize the specific activity of snps in particular environments.

concerning transcriptomics data, gene products have been collected as lists of mrna sequences, considering alternative splicing patterns and mirna binding regions  <cit> , which can be useful to characterize snps in the corresponding dna regions. since snps can modify the mrna produced from the same locus, by varying the transcription start sites , the protein coding dna sequences  or the untranslated regions , gene isoforms are also stored in the snpranker  <dig>  database, according to the ncbi refseq annotations  <cit> .

data concerning proteins have been retrieved from uniprot  <cit> , for the identification of functional domains, and from the protein data bank  <cit> , to integrate information about structural models.

the systems biology knowledge base has been created by querying databases of biochemical pathways  and reactions  searching all human gene products, while information about protein-protein interactions , collected from biogrid  <cit> , have been employed to complement the available data about hub proteins and neighbourhoods that are crucial for network based analyses.

snpranker  <dig>  exploits this multilevel knowledge integration as key infrastructure to perform snp scoring. in this updated version of the database the set of features considered for snp prioritization consists of more than  <dig> elements. a complete overview of integrated features is presented in additional file  <dig> 

ontological expansion
the snpranker  <dig>  database has been built on a strong ontology layer, in order to provide a reliable framework for data integration and an improved engine for gene and snp lists enrichment and annotation. in particular, genes and pathways data have been annotated with terms from the gene ontology  <cit>  and the kegg pathway ontology, respectively. by exploiting the ontological annotation of genes, in fact, it is possible to measure gene similarity, which then can be used to expand the initial gene lists. snpranker  <dig>  provides two similarity measures, which differ for taking into account the bare ontological terms  or for considering also the ancestor terms following the ontological tree .

considering one of the ontologies provided by snpranker  <dig>  and a particular similarity measure, from an input gene list g <dig> the system generates the list g <dig> g <dig>  which contains also the genes that correlate with the genes in the list g <dig> according to the selected similarity threshold.

features weight definition
the features are the characteristics of snps that represent the a priori knowledge of their underlying biology, which is the base for modelling the biomolecular information related to these polymorphisms. in this data mining approach, users can select the features they would like to consider for snp evaluation and assign a custom relevance to these features in the score computation.

an added value of this work is the pre-computation of an optimal set of weights for the features to provide by default suitable ranked snp lists associated to the disease genes provided as input. the idea is to give a general scoring model, which can predict the importance of each attribute in a generic pathological context, assuring a valuable snp ranking. a machine learning approach has been used to find this parameter setting, which is proposed by default in the snpranker  <dig>  web site. to find the appropriate weights, we formulated an optimization problem, solved using a genetic algorithm, which considers as fitness the system sensitivity and involves cross-validation during the assessment of candidate weights. in other words, we exploit a genetic algorithm to optimize a model from the data, which is a classical method of supervised machine learning. the combination of this machine learning approach with a framework that allows users to perform a fine-tuning of the system parameters  realizes the data mining approach.

in detail, feature weights must be processed through the scoring function in order to obtain a single and significant score for each snp. the scoring function g  maps the values returned by the selected features and the weights vector w∈ℝn  to a single final value, used to calculate the snp ranking. the function g  is computed as the sum of the values returned by the single features according to their weights w :

  g:…fn,w↦w1f1+w2f2+…+wnfn 

this strategy allows the computation of the final snp score as a single real number.

starting from a set of genes associated by experimental evidence to specific pathologies, a genetic algorithm has been implemented in order to achieve the w  that minimizes the distance among the set of snps retrieved by the system and the list of snps experimentally associated to the same disease. the optimal values of the weights w  were found taking into account the specificity of the snpranker  <dig>  predictions. to this end, we considered, as input, all the genes and snps associated with a set of  <dig> pathologies, reported in additional file  <dig>  as described in omim. given the set s of snps sii∈{ <dig> ,...,s} containing all the snps associated to the genes of the considered pathologies, taking into account a flanking region of  <dig>  bp, and defining a as the set of snps certified by omim as involved in the disease, we minimise

  argminw∈ℝ301-|p||p|+|n| 

where the sets p⊆a is the set of true positives included in the high scoring snp list. y={si|σi>ε}, where σi is the score of the snp si and ε  is a constant value and n⊆ap∩n=∅ is the false set of negatives. the optimisation process was carried out by evaluating feature coefficients by employing a genetic algorithm for all the pathologies in our set. the system was implemented in python and the machine learning approach was developed employing the pygene library  <cit> . score calculations and snp sorting were implemented by embedding c code with swig  <cit> , in order to minimize the time needed for fitness evaluations. in our model, all individuals are generated randomly by selecting coefficients between  <dig> and  <dig>  the fitness is calculated first by filtering scores with a threshold tε defined as

  tε=εσiw 

where ε  is computed with steps of  <dig>  starting from  <dig>  to  <dig>  and then by evaluating the sensitivity of the method as defined by eq.  <dig>  since in our model the objective of optimization is the sensitivity, we have forced unlikely fitness to configurations that are unable to filter out a reasonable number of snps. to control the filtering capability, we decide to ensure that the ratio between filtered snps and the total amount of snps considered must be lower than the threshold tr, defined as:

  tr=|y||s| 

in order to estimate how well our predictive model performs, we chose to exploit the leave one out cross validation approach. this model implies that a single disease of the considered set is used as validation data, while the remaining pathologies are used for training the model. this operation is repeated for all the pathologies in the set used for this machine learning approach, such that each disease is employed once as validation data. then, the average of the sensitivity in each test case is evaluated in order to compute the predictive capability. the genetic algorithm was run considering  <dig> generations, each of which composed by  <dig> individuals. the top  <dig> individuals are selected for the next generation. in detail, in each generation  <dig> new randomly generated individuals are added to the population,  <dig> individuals are taken unmodified from the previous generation and  <dig> individuals are generated by the recombination of the best  <dig> individuals of the previous generation. figure  <dig> shows the fitness trend during the optimization.

in this way, a total of  <dig> simulations were run, by choosing iteratively one of the  <dig> pathologies as test set and evaluating  <dig> steps of tε  and  <dig> steps of tr . once all the simulations were completed, we validated the parameters configurations against each disease previously chosen as test case for such simulation: for each validation test, we evaluated the fitness with eq.  <dig> and we determined the sensitivity, the specificity, and the accuracy of that parameter configuration. then, we calculated the average values of such indexes for all the  <dig> simulations with the same tε and tr, in order to estimate how accurately our predictive model will perform in practice. all the data relative to genetic evolutions of parameter configurations have been collected according to same values of tε and tr, in order to estimate the performance of the predictive model, as reported in additional file  <dig>  the best parameters for assigning higher scores to diseases associated snps determined using our machine learning approach are visible as default feature weights in the snpranker  <dig>  home page. pathologies, however, are characterized by different traits, and so each parameter configuration may work better with certain diseases rather than others. for this reason, users can directly set each feature weight on the basis of the aims of their specific study. this fine-tuning procedure is possible by associating each feature to a weight that represents the importance attributed by users to the feature in the final snp score computation.

scoring computation through web interface
we developed the web site using object oriented programming languages exploiting php and javascript technologies. performances are improved using the ndb engine of the mysql cluster, which works as backend database, in order to minimize times needed for query executions. through the web interface, users can run analyses using three types of input: a list of genes, a biological process, and a list of snps. for each of these three choices, it is possible to perform the ontological expansion, customizing the similarity measure and its relative scoring threshold.

once users complete their selections and start the computation, snpranker  <dig>  first extracts all the snps related to the selected genes , then computes the ontological expansion , and finally computes the score for all the input snps according to the selected features and weights. for each snp, all selected features are presented in a final table combined with each score, showing both the original data, for annotation purpose, and the related scores. the web interface displays on the fly all the results and, at the end of the computation, output snps can be effectively ranked according to their scores, which are available in the last column of the output table. when the result page is completely loaded, a link to download output data in compressed format is presented at the bottom of the table and the snp list enrichment tools about pathways and diseases become available to users.

dataset enrichment analysis
the enrichment of the ranked snp list, considering kegg pathways  <cit> , go  <cit>  terms and omim gene and genetic disorders  <cit> , is a valuable tool to interpret the output of the system. for example, considering the annotation of the top ranked snps in terms of kegg pathways, it is possible to verify if the system has privileged genomic features belonging to a particular biological network. at the same way, an enrichment of best hits in a particular genetic disorder according to omim can be a clear indication that identified snps are effectively involved in a specific disease. the enrichment is computed by comparing the total number of genes that have a particular ontological annotation with respect to the number of top ranked genes with the same annotation . statistical significance of the enrichments is assessed with appropriate hypergeometric tests, which permit to verify if the number of occurrences of a particular ontological annotation in the top ranked list of snps is by chance. due to the high number of p-values computed for this analysis, the statistics is corrected using the false discovery rate control method  <cit> , using the "phyper", "dhyper" and "p.adjust" routines available in r  <cit> .

RESULTS
snpranker  <dig>  is available to users through a web interface accessible at the url http://www.itb.cnr.it/snpranker. figure  <dig> shows a screenshot of the home page.

system input and features selection
the system takes as input a list of genes, a set of snps or a biological process. genes and snps can be provided as comma separated values of ids . for the biological process option, the web interface provides an auto-completion box with the go names of biological processes. once a particular biological process is selected, all genes annotated with this go term are provided as input to the system. since many snps are not directly associated to genes because of their inter-genic localization, snpranker  <dig>  provides a parameter for customizing the flanking regions.

ontological expansion
the ontological expansion is an important method for studying snps related to pathologies, since it allows to extend the analysis to snps that could potentially be involved in a pathology onset, but are not annotated as disease associated and have not being highlighted in more traditional approaches. the inclusion in the computation of snps belonging to genes that are annotated similarly to those provided as input permit to increase the number of associated snps under analysis. for this reason, the ontological expansion enriches the input list g <dig> by adding new genes that are biologically related with them, relying on go terms. the biological relationship among genes is evaluated through two semantic similarity metrics , which compare the go terms associated with each gene. depending on the interests of the user, for each gene in g <dig>  the system retrieves a number of genes with the highest semantic similarity according to their gene ontology annotations.

features set
the home page of snpranker  <dig>  shows to users all the available features for the final snp ranking, grouped by semantic and functional characterization. default values of feature weights derive from our machine learning algorithm and are listed in table  <dig>  although the huge presence of snps in introns, these are localized at lower positions within the ranked list obtained with the optimised feature weights, while at the top of it many "frame shift", "missense" and "start codon" are concentrated. other snps occur, in order of appearance, hence of decreasing importance, in "start codon", "missense", 3' and 5' utr regions, or even 3' and 5' near gene. importantly, users can customize the set of features to process for the final score both by selecting or deselecting each feature and by modifying the weights of the features according to their expertise. tuning a weight means changing the relevance of a biomolecular aspect, which reflects on the final snp prioritization. for instance, if users are interested in studying the effect of a polymorphism on the abundance of a transcript, they can assign higher relevance to snps occurring in regulatory regions, such as the 5' near gene region.

the table presents the snp features used by snpranker  <dig>  with their default weights, according to the optimization performed using the genetic algorithm .

a description of each feature is available within the web interface in an intuitive balloon text close to each feature name. for example, considering the epigenetics features, a user can select a particular tissue or a cell line, while in case of selection of the general feature only, without the detail of tissue or cell line, the average values are considered for the score computation.

snp ranking
once all values have been computed, the last step consists in ranking all snps relying on their scores. due to the great amount of snps potentially reported as output, snpranker  <dig>  allows users to cut the list at a given threshold, based on a percentile of the total number of snps. moreover, the enrichment tools allow testing if the provided snp list is enriched of genes associated with a particular disease or pathway. the final list of enriched snps with scores is specifically aimed at supporting the evaluation of disease associated snps.

discussion
the snpranker  <dig>  tool has been validated using omim data, considering a set of pathologies influenced by recognized snps. for each disease the list of associated genes has been given as input to the system and the list of ranked snps has been compared to the set of snps provided by omim for the same disease.

optimal feature weights were found in order to obtain the best sensitivity, which is the system capability of detecting correct cases, but other indexes such as specificity, which evaluate the capability of the system to filter incorrect cases, and accuracy, which measure the degree of closeness of our classification to real cases, should be taken into account. this is due to the fitness dependence on tr , which makes sensitivity more unfavourable in case of higher tr.

therefore, fitness values proposed by the machine learning algorithm should be carefully considered, because simulations that can identify almost all the disease associated snps do not filter out snps with the same effectiveness, and so the specificity and the accuracy indexes tend to lower values. vice versa, greater values of accuracy and specificity mean less predictive power of the system.

the use of tr= <dig>  and tε= <dig>  seems reasonable, since it results in 81% of associated snps with an accuracy and specificity of 76%. in some considered cases,  the top ranked snps show a statistically significant enrichment  concerning snps known to be associated with the tested pathologies. in huntington's disease, the first three snps appearing in the ranked list are exactly those reported in omim for this pathology.

we tested snpranker  <dig>  using different parameters and here we discuss two case studies: the first scenario is a search for semantic annotation and the second case is a comparison with a gwas output.

in the first case we started from a gene, bcl <dig>  known be associated with a disorder, b-cell cll/lymphoma  <dig>  as reported in omim. we collected all pathologies related to bcl <dig> from the genecards database  <cit>  and we looked at these disorders into omim, finding related genes. in genecards, blc <dig> is mentioned in different disorders, from lymphoma to cancer and leukaemia. we queried omim for the most important genes associated to these pathologies and we obtained a list of genes. we validated snpranker  <dig>  results considering output genes  with respect to this list and we found that most disease related genes are effectively identified by an ontological expansion performed using the wang similarity measure with threshold of  <dig> . table  <dig>  reports these results, summarizing the similarity scores.

given two scenarios of different disorders, the table shows the similarities, computed using the wang metrics score, among genes that are known to be associated with the pathologies and the ontologically enriched output gene lists.

for the second case, we compared our results with the tests of chen et al.  <cit>  looking at the "bipolar disorder" in the gwas catalogue  <cit> , using the reference of le-niculescu et al.  <cit> . considering the gene klf <dig> as input, since it is mentioned as one of the most important gene related to bipolar disorders, the ontological enrichment using the wang similarity measure with a threshold of  <dig>  returns a large set of  <dig> genes that belong to similar go biological processes. considering these genes, we confirmed that 52% of disease genes have been correctly returned, while the remaining are genes that could indirectly affect disease associated genes. table  <dig>  summarizes the similarity scores that we obtained from our ontological similarity enrichment given the input gene klf <dig>  with respect to known disease genes. the list of output prioritized snps, computed with default weights, returned most of the confirmed disease associated snps, according to chen et. al  <cit>  data, as reported in table  <dig>  we noted that scores slightly depends on user settings and thus outputs can differ among diverse input parameters set up. statistically, the more genes are semantically similar to the input ones the more their related snps appear at higher positions within the ranked list.

given the best results of the gwas concerning the bipolar disorder  <cit> , the table shows the snps that have been correctly predicted in our final snps table.

CONCLUSIONS
given the need of tools for snp prioritization, we updated our prototype system by developing snpranker  <dig> , a web based system that performs data mining of public available biomolecular knowledge of snps. snpranker  <dig>  is based on a gene-centric data-warehouse approach, which exploits a machine learning method to rank snps and compute final scores. it relies on the identification of a set of crucial features characterizing snps related to a list of input genes. this represents the a priori knowledge that employing our data mining approach allows the assessment of a final score for each snp, which can be tuned by users according to their preferences. by employing a genetic algorithm we created a supervised classifier, which estimates the optimal weights of the snp features. using these parameters, snpranker  <dig>  provides a scored list of variations, which can be statistically analysed to verify its enrichment about particular pathways or diseases genes. concrete scenarios of usage are the identification of the most important snps in population genetics studies, in order to create custom genotyping chips, and gwas output re-scoring for interpreting top ranked snps in a specific biological context.

competing interests
the authors declare that they have no competing interests.

authors' contributions
im conceived the study, developed the reference database, and drafted the manuscript. ac conceived of the study, developed the web interface, designed the scoring algorithm, and drafted the manuscript. pc implemented the machine learning algorithm, provided the results of the analysis and optimized system performances. fv developed the reference database, identified the test cases, and drafted the manuscript. em participated in the design of the study, formalized the optimization problem, and worked at the enrichment analysis. lm coordinated the project, granted access to the computational facilities and maintained the bioinformatics resources. all authors read and approved the final manuscript.

declarations
the publication costs for this article were funded by the italian ministry of education and research  through the flagship  "interomics" project.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2013: computational intelligence in bioinformatics and biostatistics: new trends from the cibb conference series. the full contents of the supplement are available online at http://www.biomedcentral.com/bmcbioinformatics/supplements/14/s <dig> 

supplementary material
additional file 1
snpranker  <dig>  features set. all the available snp features at snpranker  <dig>  web site, grouped in semantic sections.

click here for file

 additional file 2
the omim diseases employed for the machine learning approach. the table shows the list of diseases employed for training the scoring algorithm, providing information about the genomics regions, the disease names, the omim disease ids, and the involved genes, summarized as gene symbols and entrez ids.

click here for file

 additional file 3
results of the genetic algorithm optimization process. for each disease of the training set, the table summarizes snp counts, sensitivity, specificity and accuracy achieved with the optimal feature weights found with the genetic algorithm.

click here for file

 acknowledgements
this work has been supported by the italian ministry of education and research  through the flagship  "interomics", italbionet , hirma  and the european "mimomics" projects.
