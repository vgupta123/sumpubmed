BACKGROUND
high-throughput sequencing has revolutionized biological science and biomedical research. however, erroneous base calls reduce the information value of each sequence, and polymerase chain reaction  bias leads to inaccurate quantification of sequences. to address these limitations several methods have been developed where randomly generated oligonucleotides are used as a molecule tag . molecule tagging should not be confused with barcoding  where short oligonucleotides are used to tag individual samples, which are then pooled and simultaneously sequenced. the resulting reads are then informatically sorted by the sample barcode. molecule tagging is a similar idea where unique tags are attached to individual dna template molecules within a sample prior to exponential pcr amplification . after pcr and sequencing, reads sharing the same mt likely originated from the same template molecule, meaning that discrepancies among these reads can be attributed to technical error. forming consensus sequences  from reads with the same mt corrects these errors. additionally, any preferential pcr amplification biases are mitigated because conseqs represent the original population of templates .

molecule tagging is useful for a variety of applications. for instance, kinde et al.  <cit>  used molecule tagging to test polymerase fidelity, accuracy of in vitro synthesized oligonucleotides, and prevalence of mutations in nuclear and mitochondrial genomes of normal cells. jabara et al.  <cit>  used molecule tagging to detect and quantify single nucleotide polymorphisms  in the hiv— <dig> protease gene in complex viral populations. kivioja et al.  <cit>  showed how molecule tagging improves quantification of mrna sequencing experiments. faith et al.  <cit>  used a molecule tagging method called low-error amplicon sequencing  for metagenomic 16s gut profiling and observed a substantial reduction in the observed microbial community complexity due to the elimination of spurious sequences. lundberg et al.  <cit>  saw a similar reduction in 16s microbial complexity when profiling microbially diverse bulk soil samples. in each of these studies, molecule tagging allowed greater confidence in the amplicon sequences and their quantification.

despite extensive efforts developing and using these error-reducing protocols, software for building conseqs in the previously cited projects  is not readily available or is highly specific for a particular application . for example, lea-seq scripts can only be run on a small number of 16s amplicons sequenced using paired-end 108 bp illumina reads with a single 12-20 bp molecule tag. this specificity makes lea-seq scripts less practical for most amplicon experiments that could benefit from molecule tagging. consequently, we developed mt-toolbox , a flexible and user-friendly software package to generate conseqs from molecule tagged reads produced from several different mt protocols.

implementation
the primary purpose of mt-toolbox is to categorize reads by mt and build conseqs . mt-toolbox can categorize and correct single-end , overlapping paired-end , and non-overlapping pe reads. with overlapping pe reads, a preprocessing step runs flash  <cit>  to merge corresponding pe reads into a single sequence. regular expressions, a common pattern matching technique, are used to identify the expected regions  of each read . reads matching the regular expression are then categorized by their mt.figure  <dig> 
mt-toolbox overview. single-end or paired-end  reads can be input into mt-toolbox. overlapping paired-end reads are merged after which all reads, regardless of their type, are categorized by their mt. next a square alignment matrix is created for each mt category using either an msa algorithm  or by read stacking. from these matrices, conseqs are built and quality control measures remove low-quality conseqs. when using the mt-mt-toolbox plugin, conseqs are subjected to traditional 16s profiling analyses including otu clustering, chimera filtering, contaminant filtering, and assigning taxonomy.



the first step in identifying and correcting errors among reads having the same mt is building a square alignment matrix, m . this matrix is described as each row, r, representing a read and each column, c, containing a single base from read r at position c. the number of rows  in m is referred to as the mt depth and is an important parameter in evaluating the accuracy of final conseqs. multiple sequence alignment  programs such as clustalw  <cit>  or muscle  <cit>  can be used to generate such a matrix. however, computational overhead from operations like file input/output associated with these programs requires a substantial amount of time . alternatively, m can be created without using an msa program by simply stacking reads. because reads in an mt category are likely to originate from the same template molecule, they are likely to have uniform lengths . furthermore, illumina sequences rarely incorporate insertions or deletions into sequenced reads . in the rare case where reads in a single mt category differ in lengths, reads are clustered by length and only reads from the largest cluster are used to build the conseq. if multiple clusters are equally represented as the largest cluster, one of them is arbitrarily chosen to build the conseq. comparisons of conseqs generated by clustalw, muscle, and the read stacking method show that conseqs derived from stacked reads are only slightly less accurate , and reduce runtime by ~54%. while options for using either clustalw or muscle are available in mt-toolbox, the default is to stack reads.

from m a consensus sequence can be built by choosing the mode base in each column . the quality score of the consensus base is set to be the mean of the original quality values of the mode base. ties are resolved by choosing the base with the highest average quality score. if a tie cannot be resolved using quality scores, an iupac encoding is used as the consensus base. using quality score information provides a major advantage because conseqs can be generated from mts represented by only two reads thereby keeping a larger proportion of reads. this is especially important for samples with high amplicon population diversity because it captures a larger fraction of the population. this is an improvement over lea-seq, which cannot build conseqs from mts having a depth of two where the reads are not identical. furthermore, other conseq building software  use only sequence information to build consensus sequence and thus are only able to generate conseqs from mts having a depth greater than two reads.

the primary output file contains conseqs and corresponding quality scores in fastq format. a second fastq file contains single read categories  that can optionally be included in downstream analysis . however, srcs retain all technical errors associated with sequencing and pcr because no consensus sequence can be generated from a single read. quality control parameters  allow filtering of low quality conseqs and srcs, conseqs with low depth, and conseqs where a single mt tags two different templates by chance   <cit>  .

mt-toolbox also includes the following features: 1) jobs can be started via a graphical user interface  or command line interface , 2) an additional plugin provides features for 16s microbial profiling, namely—building operational taxonomic units , assigning otu taxonomy, and removing contaminant otus  using the metagenomics plugin , 3) the bioutils library , digital normalization  <cit>  parameters , and optional load sharing facility  based cluster parallelization  reduce runtime and memory requirements, and 4) an mt-toolbox website provides descriptions, tutorials, installation instructions, updates, and other important documentation  <cit> .

mt-toolbox is implemented as a suite of object-oriented perl modules and scripts . it has been successfully tested on perl versions  <dig> . <dig>   <dig> . <dig>  and  <dig> . <dig>  several external perl modules are required, and can be easily downloaded and installed via a simple build command before building and installing mt-toolbox. the gui was built using the perl/tk library and requires an x window system. mt-toolbox also uses gnuplot  <dig>  for generating simple summary graphs. the optional mt-mt-toolbox plugin allows for standard 16s microbial profiling analysis. mt-mt-toolbox requires usearch v <dig> . <dig>  <cit>  or greater for otu clustering and chimera filtering, the rdp classifier  <cit>  as implemented in qiime  <cit>  for otu taxonomy classification, and blast +  <dig> . <dig>  <cit>  for contaminant sequence removal.

RESULTS
to show the utility of conseqs generated by mt-toolbox, we used data from  <cit>  which consists of a clonal plasmid containing a known 16s gene. from this single clonal plasmid, separate dna samples were created by performing two replicate dilutions of 1x, 50x, or 100x, for a total of six samples. each sample was molecule tagged and pcr amplified. it is important to note that each sample should contain just one “real” amplicon matching the original 16s amplicon in the clonal plasmid. samples were barcoded, pooled, and sequenced on an illumina miseq platform using standard  <dig> × 250 bp protocols. after demultiplexing samples, conseqs were generated using mt-toolbox .

diluted samples result in a greater number of mts having high depth ; the diversity of the original amplicon population, however, is reduced. in theory, molecule tags having high depth should generate the most accurate conseqs by overcoming the effects of sequencing error. this creates a trade-off between creating highly accurate conseqs and capturing the diversity of the amplicon population. low-complexity samples benefit from dilution because a large number of accurate conseqs can be created without sacrificing information about the diversity of the amplicon population. alternatively, for high complexity samples like soil microbial communities it may be better to sacrifice conseq accuracy to observe a larger portion of the amplicon population.figure  <dig> 
read and mt counts per sample. here reads are defined as the number of raw reads that can be categorized . in other words, the read matches the expected regular expression pattern for merged reads . mt-toolbox assigns each categorizable read to an mt category. mt counts are the number of mt categories . the sum total of reads in each mt category equals the number of categorizable reads.
mt depth histograms for each sample. the number of reads in each mt category influences the accuracy of the resulting conseqs. mts with higher depth are likely to generate more accurate conseqs. diluting samples helps generate more mts with higher depth at the cost of reducing the amplicon diversity.



the most accurate conseqs were generated from merged pe reads. average errors per base  for conseqs built from clustalw or muscle alignments of merged pe reads was measured at ~ <dig> . without using an msa , conseqs had ~ <dig>  epb. removing conseqs with a c-score ≤ <dig> reduced the epb to ~ <dig>  . in general, conseqs derived from any type of molecule tagged read were more accurate than any type of raw read . also, as depth of coverage for each mt increased, consensus sequence epb decreased. however, for depths > <dig>  epb increases slightly. this trend is primarily driven by a single sample . why this particular sample has higher mean epb is unclear, however it is unlikely to be caused by sample contamination or sequencing error . in general, this outlying sample appears more error prone even at depths where other samples have very few errors . two examples of errors in high depth conseqs from this sample suggest that nucleotide misincorporation during early pcr cycles contributes to increased epb . additionally, this sample has relatively fewer conseqs at these high depths  indicating that outlier conseqs may be inflating the mean epb. in any case, nearly all conseqs in this sample still have fewer epb than raw reads.

in general, mt-toolbox outperforms lea-seq in terms of accuracy  and data retention. for mt depths of  <dig> , lea-seq failed to generate conseqs because it is unable resolve difference between only two reads. alternatively, mt-toolbox uses read quality scores to resolve such difference thereby retaining mts of depth  <dig>  for mt depths between  <dig> and  <dig> , mean epb of mt-toolbox conseqs generated from merged pe reads is lower than lea-seq conseqs. for the remaining mt depths  mt-toolbox conseqs were either on par or slightly less accurate than lea-seq conseqs. furthermore, because lea-seq was implemented to recognize only specific amplicons, a substantial number of changes to the source code were required to run lea-seq on these reads. this highlights the utility of mt-toolbox where users can easily adjust parameters to build conseqs from virtually any amplicon or sequencing technology.figure  <dig> 
conseqs error profile. mt-toolbox derived conseqs have fewer epb than raw reads, and errors within conseqs are reduced as mt depth increases. mt-toolbox conseqs generated from overlapping pe reads are the most accurate even at low mt depths. conseqs built from forward and reverse reads are slightly less accurate then overlapping pe conseqs. raw reads of any type are the least accurate. mt-toolbox conseqs generated from pe reads at depths ≤ <dig>  are more accurate than those generated by lea-seq. epb were calculated by averaging individual epb of conseqs having the same depth. error bars represent standard error and grow in length as depth increases due to fewer mts having high depths .



CONCLUSIONS
molecule tagging is a practical technique applicable to a variety of amplicon sequencing experiments, however generalizable and easily accessible software for processing custom mt data is not readily available. mt-toolbox fills this niche by enabling efficient processing of mt data generated from a variety of protocols . by forming conseqs, mt-toolbox reduces technical errors and biases associated with pcr and sequencing thereby enabling precise measurements of dna template abundance in mixed amplicon samples.

availability and requirements
 
project name: mt-toolbox.

 
project home page:https://sites.google.com/site/moleculetagtoolbox/.

 
operation system: unix-based system.

 
programming language: perl.

 
other requirements: perl  <dig> . <dig> or higher, select perl libraries, clustalw  <dig> , muscle  <dig> . <dig>  flash  <dig> . <dig>  gnuplot  <dig> , an x window system, select unix system commands.

 
license: freebsd.

 
any restrictions to use by non-academics: none.



electronic supplementary material
additional file 1:
supplementary information. note s. <dig>   building the alignment matrix. note s. <dig>  single read categories. note s. <dig>  optimizing conseq accuracy. note s. <dig>  filtering ‘birthday paradox’ conseqs using the c-score. note s. <dig>  mt-mt_toolbox . note s. <dig>  bioutils. note s. <dig>  digital normalization. note s. <dig>  cluster parallelization. note s. <dig>  clonal plasmid accuracy. note s. <dig>  protocols compatible with mt-toolbox. figure s <dig>  the implementation of molecular tags used in lundberg et al.  <dig>  figure s <dig>  runtime in cpu seconds of clustalw and muscle for mt categories of different depths. figure s <dig>  the length distribution of reads is very narrow. figure s <dig>  the number and types of errors seen in conseqs generated without using an msa algorithm  for all clonal plasmid samples. figure s <dig>  accuracy of conseqs generated from clustalw, muscle, or stacked reads  alignments. figure s <dig>  a general schematic of how five overlapping pe molecule tagged reads are used to generate highly accurate consensus sequences. figure s <dig>  c-score distributions for conseqs generated using different methods. figure s <dig>  the correlation between c-score and read errors. figure s <dig>  a screen shot for the gui for the basic version of mt-toolbox. figure s <dig>  for fastq file io, bioutils is significantly faster and scales better than bioperl. figure s <dig>  errors per base profile for individual samples for merged pe reads where conseqs are built without using an msa. figure s <dig>  higher errors per base in sample 100x b are unlikely to be caused by contamination or sequencing errors. 

 additional file 2:
source code for bioutils-v <dig> . <dig> 


 additional file 3:
source code for mt-mt-toolbox-v <dig> . <dig> 


 additional file 4:
source code for mt-toolbox-v <dig> .0


 abbreviations
mtmolecule tag

pepaired-end

sesingle-end

msamultiple sequence alignment

srcsingle read category

guigraphical user interface

otuoperational taxonomic unit

epberrors per base

snpsingle nucleotide polymorphism

rdpribosomal database project

lsfload sharing facility

iupacinternational union of pure and applied chemistry

lea-seqlow error amplicon sequencing.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

sy designed and implemented the software and wrote the manuscript. dl gave valuable feedback on the design, did the lab work associated with the sequencing tests, and revised the manuscript. dl, jd, and cj were involved in the project design and manuscript revisions. all authors read and approved the final manuscript.

