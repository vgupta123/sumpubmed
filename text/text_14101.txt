BACKGROUND
a variety of recently available high throughput data sets, such as protein-protein interaction networks, microarray data and genome sequences, offer important insights into the mechanisms leading to the accomplishment of a protein's function. however, the complexity of analyzing these data sets manually has motivated the development of numerous computational approaches for predicting protein function  <cit> . for a recent comprehensive survey on this topic, see pandey et al   <cit> .

one of the most popular methods used for predicting protein function from biological data is classification  <cit> . under the traditional classification framework, each protein is represented by a set of features, such as the expression profile of its corresponding gene or the set of proteins it interacts with. now, for each functional class, a model is constructed using the feature sets of the proteins annotated with this class. this model is then used to decide if an unannotated query protein should be annotated with this class. the key premise underlying this methodology for predicting protein function is that proteins belonging to the same functional class have "similar" biological attributes.

standard classification or predictive modeling techniques for function prediction rely on positive and negative examples from functional classification schemes, such as the gene ontology  <cit>  or funcat  <cit> , and typically treat each functional class separately. however, this standard approach fails to capture one of the key properties of such classification schemes: most schemes not only provide annotations to functional classes, but also capture inter-relations between the functional classes. for example, the gene ontology  is arranged as a directed acyclic graph in which the go terms form a hierarchy capturing everything from relatively general functions  to specific biological roles . such an organization of classes, particularly in the case of go, poses two important challenges for predictive modeling techniques for function prediction. first, several studies  <cit>  have concluded that proteins in inter-related, or similar go functional classes tend to have similar biological attributes. this limits the applicability of the key premise of classification-based function prediction discussed above, since distinguishing between such similar go classes becomes hard.

the second important issue that arises is that it is often hard to construct reliable classification models for several functional classes from a given data set due to complex issues including noise in the data, low relevance of the data set for some functional classes, and an insufficient number of training examples for building accurate classification models  <cit> . these issues, particularly the last one, are expected to most severely affect functional classes having few members, which also include classes located deep in a functional hierarchy. this difficulty of constructing reliable classification models is illustrated in figure  <dig> for two classes from the go biological process ontology, which have  <dig> and  <dig> member proteins in mnaimneh et al's gene expression data set  <cit> , representing a large class  and a class of median size  respectively. the histograms in this figure show, for each protein in these classes, how many proteins in its neighborhood belong to the same class. neighborhood is restricted to the twenty proteins with the most similar expression profiles to the query protein, using correlation as the similarity measure. these plots show that for most of the proteins in both the large, as well as the much smaller class, only a limited number of similar proteins in the same class are available. for instance, in the large class,  <dig> of the  <dig> member proteins have less than three similar proteins in the same class, while two is the maximum number of neighboring proteins of the same class for proteins in the smaller class. in fact,  <dig> of the  <dig> proteins in the smaller class have no proteins of the same class in their neighborhood. this lack of enough training examples having characteristics similar to the query protein, which occurs due to the issues discussed above, illustrates the difficulty of building classification models for functional classes, particularly for the small ones.

however, the availability of the same well-defined structure of relationships between functional classes in the form of gene ontology raises the following key question: "can the performance of standard classification algorithms for function prediction be improved by incorporating these inter-relationships into them?". in this paper, we address this question using an approach shown visually in figure  <dig>  as illustrated by this figure, our approach uses evidence in neighboring proteins belonging to similar classes to bolster the evidence for annotation of the query protein with the target class. evidence for the abundance of proteins belonging to classes similar to the target class in the neighborhood of a query protein, and hence the applicability of such an approach is presented in figure  <dig> for the target class of median size  discussed in figure  <dig>  here, the semantic similarity of all the classes with the target class, calculated using lin's measure  <cit> , is plotted against the average number of nearest neighbors of the corresponding class in the nearest neighborhood of a protein belonging to the target class. as can be seen from this scatter plot, even though the average frequency of the target class  is very small , there are several classes, such as go: <dig>  go: <dig> and go: <dig>  that are more abundant, and have a substantial semantic similarity with the target class . this similarity can be used to enrich the information available in the neighborhood of proteins being tested for a target class. our approach is based on this principle.

more specifically, using lin's measure  <cit>  for evaluating the semantic similarity between classes in an ontology, we incorporate such functional interrelationships into the k-nearest neighbor classifier  <cit> . we evaluate our algorithm on two large microarray data sets  <cit> , a recent protein interaction data set  <cit>  and a combination of interaction and microarray data sets, each of which is used for the modeling and prediction of over hundred classes from the go biological process ontology. the results show that, compared to the base k-nn classifier, this incorporation produces more accurate predictions for many of the functional classes considered, and also that the classes benefitted most by this approach are those containing the fewest members. we also illustrate how the proposed framework can be used for integrating information in the entire go biological process ontology to improve the accuracy of prediction over a set of target classes. finally, we provide qualitative and quantitative evidence that this incorporation of functional inter-relationships enables the discovery of interesting biology in the form of novel functional annotations for several yeast proteins, such as sna <dig>  rtn <dig> and lin <dig> 

note that since the rest of the discussion in this paper will be concerned with classification within the context of go, the terms  class,  term, node  and label will be used interchangeably in the rest of the text.

related work
recently, some approaches have been proposed to address the problem of incorporating inter-relationships between functional classes in go into function prediction algorithms. these approaches can be categorized using the following two types of relationships between classes constituting the dag-based functional hierarchies in go:

parent-child relationships
the basic structure of the ontologies in go is constructed from edges between parent and children terms. some approaches have recently been proposed for enforcing the consistency required by these relationships, namely a protein annotated with a child node must be annotated with the parent node, into function prediction algorithms. barutcuoglu et al  <cit>  proposed a bayesian network-based approach for this incorporation. in this work, they trained individual svm classifiers on all the nodes of the hierarchy. then, by constructing a bayesian network using the structure of the ontology, the predictions of all the nodes were corrected iteratively in order to ensure consistency between parent-child annotations throughout the hierarchy, obtaining significant improvements over the individual classifiers. carroll and pavlovic  <cit>  proposed a similar approach using probabilistic chain graphs for this problem. however, due to the limited evaluation experiments on small hierarchies, it is unclear how the performance of this approach would scale for a large set of classes from go. some other researchers, such as shahbaba and neal   <cit> , have also studied this problem, although their techniques are limited to tree-structured hierarchies.

sibling and other distant relationships
an effect of the structure of the ontologies in go is the formation of sibling relationships between nodes that are children of the same parent. these relationships can be further generalized to extended family relationships, such as cousin and other more distant relationships. king et al  <cit>  approached the problem of incorporating these distant relationships into function prediction algorithms by predicting the functions of a protein using the decision tree and bayesian network models trained on the patterns of annotations of other proteins. tao et al  <cit>  extended king et al's approach further by augmenting the prediction model with the semantic similarity between different classes. here, they used lin's similarity measure  <cit> , also used in our study but using a different definition, to measure the interrelationships between the functional classes in go, and thus to measure the similarity between the sets of functional labels of two proteins. this similarity measure is then used within the framework of a k-nearest neighbor classifier for predicting whether an unannotated protein belongs to a certain functional class or not. the results of this study provided important evidence for the utility of semantic similarity between functional classes for enhancing the performance of function prediction algorithms. however, since this technique uses the known annotations of a protein to predict its other potential annotations, it can not make predictions for proteins with no known annotations, since such a protein will have no similarity to the other proteins using this measure. this motivates the need for methods that can incorporate external genomic data into the prediction process, so that similarity can be computed for both characterized and previously unannotated proteins alike. our work takes this approach of augmenting biological data-based functional classification algorithms with inter-relationships between functional classes measured using standard semantic similarity measures. notably, yu et al have recently proposed a similar approach for this problem  <cit> , where they use taxonomic similarity measures between functional classes to modify a simple protein function prediction algorithm. we compare our method with this approach.

the incorporation of both these types of relationships is important for making use of the information available in the entire hierarchy. one of the advantages of the direct incorporation of distant functional relationships, which is the focus of the latter set of studies, is that it is possible to incorporate information from nodes farther away in the hierarchy, as compared to the hierarchical incorporation approaches, which only utilize the subgraph of the hierarchy corresponding to the set of target classes. our work provides a framework for incorporating these distant functional inter-relationships into standard function prediction algorithms. notably, this task is more challenging than the hierarchical consistency enforcement problem since there is a much larger number of relationships between nodes to be considered than just the parent-child relationships, which are relatively fewer. this factor makes the incorporation of non-hierarchical relationships more challenging. furthermore, as discussed above, we perform this augmentation using the biological characteristics of proteins captured in high-throughput genomic data, thus addressing one of the limitations of king et al's  <cit>  and tao et al's  <cit>  studies. this enables us to make predictions for poorly annotated and unannotated proteins, for which experimental data, such as their interactions and expression profiles, are available. our experimental results provide both qualitative and quantitative evidence for this advantage of our approach. we also present the results of a comparison between the performance of our and yu et al's gest  <cit>  approach.

our work is also related to the field of hierarchical and multi-label classification in machine learning and data mining  <cit> . however, most of the work in this field is not directly applicable to the problem of hierarchy-based protein function prediction, since these techniques don't take the hierarchical and multi-label nature of this classification simultaneously into account. also, they consider limited, if any, relationships between the classes, which is the primary subject of this study.

methods
preliminaries
semantic similarity in an ontology
in go, nodes  are connected to other nodes through parent-child edges, which impose hierarchical inter-relationships between them. also, the nodes contain member proteins that have been annotated with the corresponding functional class. thus, it is possible to compute the similarity between two go nodes, referred to as semantic similarity, on the basis of their relative positioning in the hierarchy, their contents, or a combination of both. several information-theoretic semantic similarity measures have been developed for computing similarity between two concepts in a hierarchy, such as those by lin  <cit> , resnik  <cit>  and jiang  <cit> . these measures evaluate the similarity of two nodes in terms of their proximity in the ontology, as well as their content. in particular, we use lin's measure  <cit>  as defined in equation  <dig> 

   

here, l <dig> and l <dig> are the labels  between which similarity is being calculated, while p denotes the probability of a protein being annotated with label l, and is estimated from the available set of go annotations for an organism. also, , where s is the set of common ancestors of l <dig> and l <dig>  thus, pms denotes the probability of the minimum subsumer of l <dig> and l <dig>  intuitively, this formulation measures the semantic similarity of l <dig> and l <dig> in terms of the contents of their minimum subsumer node in the ontology. clearly, linsim =  <dig> when l <dig> = l <dig>  and linsim =  <dig>  when their minimum subsumer is the root of the ontology. an additional advantage of this measure is that it is bounded between  <cit> . these fixed bounds are very useful for the incorporation of functional inter-relationships into prediction algorithms, as explained in the proposed approach section.

an example of a label similarity matrix computed for the set of functional classes used in this study is shown in figure  <dig> 

k-nearest neighbor classifier
one of the most intuitive classification algorithms is the k-nearest neighbor  classifier  <cit> , which is based on the principle of abundance of the target label in the neighborhood of the query example. we use a weighted variant of this classifier, similar to the direct k-nn classifier used by kuramochi and karypis  <cit> , which counts the abundance of each label in the neighborhood of size k of a protein, weighted by the feature similarity of the neighboring proteins having the corresponding label. thus, if the feature set of a protein p is denoted by feature, then the likelihood score of a label l for a protein p is given by equation  <dig> 

   

here sim, feature) denotes the similarity between the feature vectors describing proteins p and p', and i is an indicator function that returns  <dig> if l belongs to the set of labels p' is annotated with,  <dig> for the other labels. applying this formula for p for each label, and then repeating the calculation for all the proteins, produces a |proteins| × |labels| matrix, named llbasic, of likelihood scores. the performance of this algorithm for each label can then be evaluated using any threshold-free evaluation measure, which was chosen to be the area under the roc curve   <cit>  in our study.

we chose k-nn as the base classifier in our study since it is much simpler than other classification methods, such as svm  <cit> , and hence it is easier to incorporate additional factors into the model. also, for the problem of protein function prediction, some authors have reported that with suitable parameter settings, k-nn produces comparable performance to svm  <cit> .

proposed approach
modified classification algorithm
it can be observed from equation  <dig> that k-nn is an additive model, i.e., the likelihood scores are obtained by adding the contributions of all the examples in the neighborhood of the test example. thus, it is intuitively easy to incorporate contributions from examples annotated with similar labels. this is implemented in our approach using equation  <dig> 

   

equation  <dig> represents a direct extension of the model described in equation  <dig>  where, in addition to the label being tested , contributions are also taken from labels similar to l. the latter factor is incorporated into the model using the second term , which denotes the sum of lin's similarities between the target label l and all the other labels l' assigned to a neighboring protein p'. in fact, if llbasic represents the |proteins| × |labels| like-lihood matrix derived using the direct k-nn model , and linsim is the matrix of pairwise label similarities computed using lin's similarity measure , then the above equation can be written conveniently as follows, where lllabelsim contains the final likelihood scores.

   

equation  <dig> makes the implementation of our approach much easier.

filtering of label similarities
the label similarity matrix contains a value  for each pair of labels. many of these similarities, especially the smaller ones, are likely to be uninformative, since all the labels  are not expected to interact with all the others, particularly in a large diverse set of labels. indeed, we observed a significant deterioration in the performance of the label similarity-incorporated classifiers when the raw label similarity matrix is used for incorporating inter-class relationships. in order to handle this issue, we used the following heuristic approach for filtering or sparsifying the label similarity matrix. for each label, we determined a filtering threshold using a cross-validation procedure. this threshold was determined by running a grid search over the interval  <cit>  in steps of  <dig> . for each such threshold t, all the label similarities for this label that are less than t are converted to  <dig>  and a leave-one-out cross-validation procedure is run over the training set to determine the auc score of the resulting label similarity-incorporated classifier for this label. the threshold that results in the highest auc score for the resultant label similarity-incorporated classifier is chosen as the filtering threshold for this label. repeating this process for each label produces a set of thresholds, which is used to generate a filtered version of the original label similarity matrix. a filtered version of the label similarity matrix shown in figure  <dig> is shown in figure  <dig> 

note that such a cross-validation-based filtering procedure is expected to produce a more informative version of the original label similarity matrix that is expected to perform well for the unseen test set. however, one issue to consider for this filtering approach is that of consistency between the thresholds computed for the different labels using different training sets. we observed that this issue did not affect our results significantly, but should be considered when applying this approach to other data sets or problems.

RESULTS
in this section, we compare the functional relationship-incorporated knn classifiers with the base knn classifiers for protein function prediction. this evaluation is conducted using both a cross-validation methodology, as well as a quantitative and qualitative evaluation of the predictions made by these classifiers for independent sets of test proteins. however, before presenting these results, we detail the data sets and the experimental methodology used for these evaluations.

data sets
we used several high-throughput data sets for evaluating our approach. the first was mnaimneh et al's gene expression data set  <cit> , which measures the expression of all s. cerevisiae  genes under a set of  <dig> titration experiments. the second was another large scale dataset known as the rosetta gene expression compendium  <cit>  prepared by subjecting yeast cells to a set of  <dig> diverse mutations and chemical treatments. pearson's correlation coefficient, used commonly for measuring the similarity between the expression profiles of two genes  <cit> , was used as the feature similarity function sim  for these data sets. we also evaluated our approach on krogan et al's recently published data set of  <dig> highly reliable physical interactions between proteins in yeast  <cit> . this data set was represented as an n × n adjacency matrix a, with the a cell containing the reliability of the interaction between proteins i and j, if any. we used the h – confidence measure for measuring the similarity between the interaction profiles of two proteins in this matrix, which has been shown in a previous study  <cit>  to handle the noise and incompleteness problems of protein interaction data robustly. finally, we also considered a combined data set, which was prepared by combining the yeast protein interaction data in the biogrid database  <cit>  with the two microarray datasets discussed above. this dataset was constructed by preparing the adjacency matrix for the biogrid interaction dataset, and concatenating the rows of this matrix with the gene expression profiles of the constituent genes. also, any columns in the resultant data matrix that have less than two non-zero values are removed, since they do not contribute to the similarity computation. for this data set, we used the cosine similarity measure, since most of the data set is constituted by sparse interaction data.

in addition to these data sets, the structure of the go biological process ontology, and the go annotations for s. cerevisiae proteins were obtained from the gene ontology website  in february,  <dig>  at this point, only non-iea annotations were included in the s. cerevisiae annotations. these annotations were processed, and all the terms are assigned proteins annotated to any of their descendants, in order to ensure the hierarchical consistency of the annotations. next, each of the data sets mentioned above is used to construct classification models for a subset of  <dig> functional classes from the biological process ontology of go , that have at least  <dig> members in the corresponding data set. we chose these classes, since, using expert opinion, myers et al  <cit>  have estimated that the predictions made for these classes are likely to be testable in a wet lab and thus are of interest to biologists. another important reason for the choice of these classes is that no parent-child relationships exist between these classes, and thus it is difficult to use hierarchical relationship-based approaches for these classes. also, these classes are spread throughout the ontology, and thus are suitable for illustrating the use of semantic similarity to improve predictions by incorporating information from several distant but related functional classes.

experimental methodology
our overall experimental methodology is shown in figure  <dig>  below, we discuss the details of some of the individual components.

computation of label similarity matrix
the first step of our experimental procedure is the construction of the similarity matrix between the labels, or the inter-relationship matrix between the corresponding classes, for each of the above data sets. for each set of labels, the original set of annotations are collected from the yeast go annotations, and the |proteins| × |labels| binary matrix corresponding to the functional classes used for each of the data sets is prepared, where a  <dig> denotes that a protein is annotated with the particular class, and  <dig> otherwise. equation  <dig> is then applied to all pairs of labels in this matrix to obtain the final label similarity matrix. note that only the training examples are used for computing this matrix, both in the cross-validation and independent test set prediction experiments. an example of the matrix constructed from one of the training sets derived from mnaimneh et al's data set is shown in figure  <dig> 

classification and evaluation
here, for each protein p in the test set, equation  <dig> is used to calculate the likelihood score for p to be annotated with each class c. in the cross-validation experiments, where a five-fold cross-validation procedure is followed, repeating this process for each protein in each fold, using the other four folds as training sets, produces the global protein-label likelihood score matrix, which can then be evaluated by computing an auc score for each label. although the results reported for these experiments are based on five-fold cross validation, we obtained very similar results with other fold configurations also. the use of this methodology for making predictions in the independent test set experiments is straightforward, and is described in detail in a later section. also, the values of k chosen for each data set, shown in the last column of table  <dig>  is chosen in accordance with the density or the sparsity of the corresponding data set. thus, k is chosen to be high  for the dense microarray data sets, low  for the sparse protein interaction data set , and an intermediate value  for the combined dataset constructed by combining both microarray and interaction data. however, we obtained similar results using other values of k. finally, an important intermediate step in our method is the filtering of the original label similarity matrix, which is implemented as explained in the proposed approach section earlier.

using this general classification framework, we evaluated the performance of the base knn classifiers and the functional or label similarity-incorporated classifiers using two validation methodologies. in the first set of experiments, we used a five-fold cross-validation methodology for this evaluation on the four data sets detailed in table  <dig>  in the second set, we used these portions of the rosetta and mnaimneh data sets as training sets, and made predictions for the proteins covered in the go annotation database but not in the cross-validation experiments. using annotations added to the go database between february–september  <dig>  we validated these predictions quantitatively, and also examined independent evidence that validated three of these novel predictions biologically. the following two sections discuss the results from these two evaluation methodologies in detail.

results from cross-validation experiments
in this section, we compare the performance of the label similarity-incorporated classifier with the base k-nn classifier using a five-fold cross-validation approach, and illustrate how the use of inter-relationships between classes can help improve the accuracy of predictions made over a set of target classes. note that all the auc scores and the associated statistics presented in this section are obtained as the average of fifty five-fold cross validation runs of each classifier, unless otherwise stated.

improvement of performance for a large set of classes
we also examined the effect of our approach on the performance of classification for each class individually. figure  <dig> shows the comparison of performance of individual base k-nn classifiers for each functional class, and their functional similarity-incorporated versions for mnaimneh et al's data set. in this figure, the aucs of individual k-nn classifiers for each class are plotted on the x-axis, while those of the functional similarity-incorporated k-nns are plotted on the y-axis. thus, the points above the y = x line indicate an improvement in the auc score of the corresponding class, and vice versa. using this interpretation, it is easy to see from this plot that the performance of a substantial fraction of the classes  are improved by incorporating contributions from similar classes. another encouraging aspect of this plot is that almost none of the classes suffers a major loss of prediction accuracy due to the incorporation of label-similarity, and in most cases, the difference can be accounted for by the effect of randomization in the cross-validation process. this implies that for those classes whose performance is invariant, the label similarity filtering process is able to infer that incorporating label similarity is not appropriate for these classes, and does not identify irrelevant relationships in the filtered label similarity matrix. similar results are obtained for the other data sets as well.

improvement of performance for small classes
one of the primary motivations for the incorporation of label similarity into standard function prediction algorithms was to improve the prediction accuracy for data-poor classes, as discussed in the background section earlier. our approach is expected to be useful for this task, as, in our model, the small classes can seek a contribution from classes of bigger sizes that have a high semantic similarity with them. to test this hypothesis, we selected classes of size at most  <dig> in all the data sets being used, and analyzed the results obtained using label similarity, as against those from basic classification. table  <dig> provides detailed statistics about these results. indeed, it can be seen from these results that the improvements, both in absolute terms and as a percentage of the average auc score of the base classifiers, for these classes are significantly higher than the corresponding figures in table  <dig>  this shows that the label similarity-based classification approach is indeed able to help improve the accuracy of the predictions made over data-poor classes, for which it is hard to build very accurate base classifiers.

the class-by-class improvements for each small class in mnaimneh et al's data set are shown graphically in figure  <dig>  while the performance of some classes is invariant , several classes show a large improvement in performance. in particular, we investigated the class go: <dig> , which has only  <dig> members in mnaimneh et al's data set, and shows the maximum auc improvement of almost 40%. in order to identify the classes that contributed to the improved performance of this class , we identified the classes that had a non-zero semantic similarity with this class in the filtered label similarity matrix shown in figure  <dig>  table  <dig> provides details of the eight classes so found.

as can be observed from table  <dig>  all the classes contributing to the improvement of predictions made for go: <dig> are fairly large in size, and their high semantic similarity with the target class enables the label similarity-incorporated classifier to make use of the members of these classes to acquire more information about the data-poor class. also, interestingly, most of these classes are biologically related to the target class, since most of them are related to the processes of transport  and regulation . these semantic relationships are shown graphically in additional file  <dig>  which shows the positions of these classes in the biological process ontology, and their structural relationships in the ontology suggest that it is useful to incorporate such relationships into the prediction process for small classes, such as the one discussed in this example.

this analysis also supports our hypothesis that the label similarity filtering process is able to capture the most meaningful relationships between functional classes in a given label similarity matrix, and the label similarity-incorporated classification process is able to utilize these relationships to improve the predictions over individual classes.

incorporating information in the whole go biological process ontology
unlike the hierarchical consistency enforcement approach discussed in the related work section, which focuses on the subgraph of the functional hierarchy corresponding to the target classes, one of the advantages of the direct incorporation of relationships into the classification model is that relationships in the entire hierarchy can be incorporated into the classification model, while holding the set of target classes constant. this can be done by simply modifying the label similarity matrix to include the semantic similarities between the target classes and all the other classes in the hierarchy. thus, instead of using an |l| × |l| matrix of similarities, one can use a |l| × |l| matrix, where |l| is the number of target classes, and |l| is the number of all the  classes in the hierarchy. the rest of the approach, as shown in figure  <dig>  remains the same.

we tested this idea for mnaimneh et al's data set, using the go biological process ontology as the source of all the functional inter-relationships, which produced a  <dig> ×  <dig> label similarity. the results of this experiment, generated using ten rounds of five-fold cross validation, are summarized in table  <dig>  for all the classes and for the small classes. it can be observed that these results are comparable to those obtained from mnaimneh et al's data set using only the target classes for identifying functional relationships. however, some results are improved when the whole hierarchy is used, namely the average and the maximum improvement over the small classes , showing once more that the small classes are able to utilize the label similarity matrix more effectively. however, it is important to carefully identify the relationships to be utilized due to the very large number  of possible relationships, many of which are expected to be uninformative. this task may need a more sophisticated methodology than that used for only the target classes which had fewer  possible relationships.

in summary, these cross-validation-based results show that the incorporation of direct relationships between functional classes constituting the go functional hierarchies, measured using a suitable semantic similarity measure, is a useful method for improving the accuracy of the predictions made over a set of target classes, particularly for classes with a small number of member proteins.

comparison with yu et al's gest approach
as mentioned before, yu et al proposed the gest approach  <cit>  for incorporating semantic similarities between functional classes into a protein function prediction algorithm. they used two different semantic similarity measures, namely pk-ts and sb-ts, in this study. here, we present a comparison of the results produced by our label similarity-incorporated classification algorithm and gest for our target set of  <dig> classes.

in the first experiment, we compared the accuracy of the predictions of our approach and gest in the case where only the similarities between the target classes are incorporated into the prediction algorithm, corresponding to the results presented in the improvement of performance for a large set of classes section. note that the sb-ts measured used in gest is not applicable in this experiment, since it only considers similarities between classes that have an ancestor-descendant relationship between them, and our set of target classes do not have any such relationships among them. thus, the results presented here are generated using the pk-ts similarity measure. table  <dig> provides comparative statistics about the auc scores obtained for all the target classes using our approach and gest on all the test data sets with the same parameter values as used earlier.

the statistics in table  <dig> show that for a substantial number of classes, more than half in most cases, our approach is able to produce more accurate predictions than gest, particularly in terms of the maximum improvement over at least one of the classes. this overall improvement is illustrated in greater detail in additional file  <dig>  where the auc scores for each class considered for mnaimneh et al's data set using our method is plotted against those generated by gest. this plot shows that several classes indeed obtain a significantly high improvement in the auc score using our method.

in another set of experiments, we compared the accuracy of the predictions made by our method and gest, using the similarity between the target functional classes for mnaimneh et al's data set and all the non-empty go biological process classes, using a methodology similar to the one used in the incorporating information in the whole go biological process ontology section. the sb-ts measure was also used in these experiments, since all the relationships in the biological process ontology are considered here. table  <dig> details the results of the comparison between the results produced by our method and those by gest-pk-ts and gest-sb-ts.

similar to the results discussed earlier, the results in table  <dig> also show that our method is able to improve the results of gest for a significant number of classes. these improvements in both the set of experiments can be explained on the basis of the following two differences between our and gest's methodologies:

• the semantic similarity measures used in gest are only computed on the basis of the structure of the ontology, while the formulation of lin's similarity measure used in our method also takes the set of members at each node into account. this can help uncover similarities between nodes that are otherwise reasonably distant in the ontology, but have very similar set of proteins contained in them, thus indicating a semantic relationship between them that is not captured by the structure of the ontology.

• gest uses the maximum of the similarities of all the annotations of a neighborhood protein to the target class as the contribution to the score of the target protein for this class. on the other hand, our cross validation-based method for filtering the label similarity matrix is more adaptive, since it determines which classes should contribute to the score of a given target class on the fly. this can help avoid collecting spurious contributions due to small values of similarity between the target and the contributing classes.

these conceptual differences lead to the differences between the results produced by our method and yu et al's gest method. however, we would like to stress here that for several classes, gest is able to produce more accurate predictions than our method. this indicates the possibility for the development of a hybrid system that makes the best use of both the methods, although this is beyond the scope of the current study.

validation of function predictions for proteins in the test set
one of the important distinctions between our approach and some other approaches that address the problem of incorporating functional inter-relationships into function prediction algorithms  <cit>  is that we perform this incorporation into classifiers that make predictions based on genomic data instead of annotation patterns. this offers the important advantage of the ability to make predictions for proteins that have not been assigned any functional annotations so far. in order to illustrate this advantage, we tested if the ability of the label similarity-incorporated classifiers to make more accurate predictions than the base classifiers, demonstrated in the previous section through cross-validation experiments, can help uncover the annotations of currently unannotated proteins. we tested this hypothesis both quantitatively, using a historical rollback-type strategy  <cit> , and qualitatively, by showing that three predictions made by the label similarity-incorporated are supported by independent evidence from the literature.

in the quantitative evaluation, we made predictions for proteins not used in the cross-validation experiments, i.e., those proteins that were not annotated with any of the classes considered, using the set of proteins considered in cross-validation as the training set. in order to use our approach for this task, we randomly split the original training set in an  <dig> –  <dig> ratio, with the larger set serving as the final training set. the smaller set is used as a validation set for determining the thresholds to be used for filtering the label similarity matrix. the likelihood scores generated for the test set using both the base knn and the label similarity-incorporated knn classifiers for the classes considered were averaged over ten rounds. this computation was performed for the mnaimneh and rosetta gene expression data sets to maximize the coverage of the test set, and the same value of k =  <dig> as for the cross-validation experiments, was used here. also, we used only the version of the label similarity matrix containing pairwise similarities between the classes over which predictions are being made, such as the one shown in figure  <dig> 

the scores produced by both the classification algorithms  were ranked in descending order independently for each class, and proteins with the same score  were sorted by their orf name. the complete ranked lists of predictions for the mnaimneh and rosetta data sets are available as additional files  <dig> and  <dig> respectively. now, since we had used the current annotations as of february,  <dig> in constructing the training set, we used the annotations added for these classes to the go database between february and september,  <dig> to evaluate the accuracy of these predictions. more specifically, we compared how the ranks of accurate predictions compared between the base knn and the label similarity-incorporated classifiers. table  <dig> details the results obtained from this validation. as can be noted, the median ranks assigned to the valid predictions by the label similarity-incorporated classifiers are significantly lower than that by the base knn classifiers, showing that an accurate prediction is uncovered much earlier using label similarity than by the base classifiers. the difference between the distribution of the entire set of ranks of validated predictions is quantified by a p-value, which is computed using wilcoxon's signed-rank test for comparing two paired distributions  <cit> . these p-values are also low, particularly for mnaimneh's data set , indicating that these sets of ranks are significantly different. combining these pieces of evidence, it can be said that label similarity-incorporated classifiers generally assign better ranks to annotations that are subsequently found to be valid.

looking further into these results, we examined the distribution of the difference between the ranks assigned by the base and label similarity-incorporated classifiers to the valid annotations, i.e. -, shown in figures  <dig> and  <dig> for the mnaimneh and rosetta data sets respectively. it can be seen from these plots that in the cases where the label similarity-incorporated classifiers assign lower ranks than those assigned by the base classifiers , the difference is significantly higher than that in the converse cases . in numbers, the median difference of ranks in the former case for mnaimneh's data set is  <dig>  while that in the converse case in  <dig>  and the numbers for the rosetta data set for these cases are  <dig> and  <dig> respectively. this shows that for the valid predictions, whenever the label similarity-incorporated classifiers assign a worse rank than the base classifiers, the difference is significantly smaller than in the converse case.

as the final test in the historical rollback-based evaluation, we examined how many of the top-n ranked predictions  for each class could be validated using the annotations added to go between february–september  <dig>  figures  <dig> and  <dig> show these numbers of accurate predictions made from the mnaimneh and rosetta data sets respectively. it can be seen clearly that for every value of n, the label similarity-incorporated classifiers are able to make more accurate predictions than the base classifier. this again shows that the incorporation of functional inter-relationships into function prediction algorithms can help improve both the precision and recall of valid functional annotations, even for proteins currently not members of the functional classes considered.

these results quantitatively illustrate the effectiveness of incorporating label similarity into protein function prediction algorithms for uncovering the functions of unannotated proteins. to show that this incorporation can also help characterize some proteins for which little functional information is available, we investigated the predicted functions for several uncharacterized proteins to determine whether there is independent evidence to support our predictions. indeed, we found several instances where predictions unique to the label similarity-incorporated classifiers are supported by compelling independent evidence, which makes these proteins promising candidates for further experimental validation. these examples are discussed in detail below.

possible novel link between vacuolar -atpase dissociation and microtubules supported by ydl123w
ydl123w  is a protein that is known to localize to the outer vacuolar membrane, but its biological role has not yet been characterized  <cit> . our label similarity-based classifier, based on the rosetta expression dataset, made a high-confidence prediction of this protein to be involved in the function go: <dig> , ranking it as the 3rd highest prediction. this prediction is interesting, since the vacuolar atpase is known to dissociate in yeast in response to glucose depletion  <cit> . this process of dissociation has not been extensively characterized, but recent studies have demonstrated that nocodazole, a drug that disrupts microtubules, specifically inhibits v-atpase dissociation  <cit> . thus, we hypothesized that sna <dig> may support the microtubule-based dissociation of the v-atpase. this hypothesis is supported by independent high-throughput evidence. for example, sna <dig> shares physical interactions with three components of the v <dig> domain of the v-atpase   <cit> . in addition, sna <dig> interacts physically with hxt <dig>  <cit> , a low-affinity glucose transporter, which may suggest a connection to the main environmental signal known to signal v-atpase dissociation, i.e., glucose deficiency. we were unable to find any specific sna <dig> connections to microtubule-related proteins, but the fact that this prediction appeared in the high-confidence region of this particular go term along with independent physical evidence supporting a potential role in v-atpase dissociation suggest that this is a promising candidate for further experimental exploration and validation. notably, this prediction was only made by the label similarity-incorporated classifier, and it appeared at a low rank of  <dig> in the predictions from the base knn classifier for this term. the auc score for this term, to which only  <dig> members in the rosetta data set were known to be associated, was  <dig>  using the label similarity-incorporated classifier, as compared to  <dig>  using its base knn classifier.

ydr233c may play a previously uncharacterized role in mannoprotein metabolism
glycoproteins are an important class of proteins characterized by the addition of oligosaccharide chains to their polypeptide side-chains. glycosylation of these proteins typically plays an important role in their function, and they are known to be central for several cellular functions including the recognition of cell structures, inter-cell signaling and transport  <cit> . mannoproteins are glycoproteins with high enrichment for mannose oligosaccharides, and in yeast, these have been specifically associated with regulation of the porosity of the cell wall  <cit> .

our label similarity-incorporated classifier predicted the previously uncharacterized protein ydr233c  to have a strong association to the term go: <dig>  based on the rosetta expression dataset. rtn <dig> has been localized to the endoplasmic reticulum  and er membrane in yeast  <cit> , but little else is known about its function, as indicated by no annotations in either the molecular function or biological process ontologies in go. we found its predicted role in mannoprotein metabolism interesting because glycoprotein biosynthesis is largely carried out by the er, and specifically relies on the activity of proteins in the er membrane  <cit> , which is consistent with the confirmed localization of rtn <dig>  another important piece of independent evidence for our prediction of rtn <dig> involvement in mannoprotein metabolism is its reported genetic interaction  with dpm <dig>  <cit> , an essential protein known to be involved in mannose-specific glycosylation in the er  <cit> . due to these pieces of strong evidence, we suspect that rtn <dig> would be a promising direction for follow-up experiments for biologists interested in mannoprotein metabolism. again, this prediction is unique to the label similarity-incorporated classifier for this term, as it appeared as the 392nd highest prediction by the base knn classifier but the 9th highest prediction by the label similarity-incorporated classifier. the auc score for this term, to which only  <dig> members in the rosetta data set were known to be associated, was  <dig>  using the label similarity-incorporated classifier, as compared to  <dig>  using its base knn classifier.

elucidation of an uncharacterized protein's involvement in rna processing
yhr156c  is a protein whose function is largely uncharacterized . interestingly, lin <dig> appeared at the top of several lists of predictions made by the label similarity-incorporated classifiers for processes related to rna metabolism or processing, including snorna metabolism , rna 3'-end processing , and mrna metabolism . the same protein was not predicted at a similar confidence level by the base classifiers for these classes .

interestingly, although this protein's function is not captured by current biological process or molecular function annotations, it is known to be involved in the u <dig> small ribonucleoprotein , which is a component of the spliceosome in yeast  <cit> . the spliceosome is a highly conserved nuclear component involved in pre-mrna splicing  <cit> . given lin1's involvement in the spliceosome, its association with general mrna metabolism is not surprising or particularly novel, but it does provide good validation of our methodology of incorporating functional inter-relationships into function prediction algorithms. however, we do find it interesting that lin <dig> is predicted more specifically to play a role in snorna metabolism and rna 3'-end processing. snornas are typically encoded within introns of other genes, and recent evidence has shown a striking dependence of splicing efficiency on the proximity of the 3'-end of the snorna and the intron branch point  <cit> . thus, our predictions might suggest a more specific role of the u <dig> snrnp in the production of snornas.

all of these validations represent instances where a protein with relatively shallow previous characterization has been associated with a specific go term using our prediction methodology, which has allowed us to generate non-trivial hypotheses about its cellular role. furthermore, all of the functional associations discussed here were unique to the label similarity-incorporated classifiers, which indicates that such an approach can be used to predict reliable, specific, and novel biology. we have provided the ranked prediction lists for both the versions of the classifiers as additional files  <dig> and  <dig>  which may help in the discovery of novel functional annotations other than those discussed above.

in summary, the cross-validation experiments and the quantitative and qualitative evaluation of the predictions for previously unannotated proteins shows how the incorporation of inter-relationships between functional classes into standard function prediction algorithms can help expand the set of annotated proteins in s. cerevisiae and other genomes to include proteins for which currently no or very little functional information or annotations are available.

CONCLUSIONS
in this paper, we demonstrated the utility of incorporating functional interrelationships into protein function prediction algorithms, in order to improve the predictions made by them. we modeled these relationships using lin's semantic similarity measure  <cit>  and modified the commonly used k-nearest neighbor classification algorithm in order to seek contributions from other classes, weighted by their semantic similarity with the target class. cross-validation results on several large genomic data sets showed that this approach is able to improve the results for a large majority of the classes considered. in particular, a bigger improvement was seen for smaller classes, which are otherwise harder to model and predict. in addition, we also provided qualitative and quantitative evidence that this incorporation of functional inter-relationships enables the discovery of interesting biology in the form of novel functional annotations for several yeast proteins, such as sna <dig>  rtn <dig> and lin <dig> 

our work can be extended in several directions. it will be useful to incorporate the concept of functional similarity into svms, which do not have the additive characteristic like k-nearest neighbor, and other function prediction algorithms, such as functionalflow  <cit>  for protein interaction networks. another important direction will be to carefully analyze the relationships between a set of target classes with all the other classes in the hierarchy, in order to incorporate more information into the classifiers, while reducing the effect of spurious relationships. as noted in the related work section, incorporating both parent-child and more distant relationships between classes into function prediction algorithms will be required for making optimal use of relationships constituting go. for this, it will be useful to integrate our framework with the bayesian network-based approach of barutcuoglu et al  <cit>  for enforcing parent-child consistency between the results of standard prediction algorithms. as an example of a possible methodology of integrating these approaches, distant functional relationships could be incorporated first using our technique, and then the resulting likelihood scores could be propagated hierarchically using the bayesian network approach. investigation of such schemes will be a topic of our future research.

availability and requirements
• project home page: 

• operating system: platform independent.

• programming language: matlab .

• license: none.

• any restrictions to use by non-academics: this paper must be cited.

authors' contributions
gp, clm and vk conceived the study and developed the proposed approach and the evaluation methodologies. gp prepared the implementation and experimental results. clm helped in interpretation and literature validation of the predictions. all the authors participated in the preparation of the manuscript and approved the final version.

supplementary material
additional file 1
details of the go classes used for evaluation. details of the  <dig> functional classes from the go biological process ontology whose subsets  are used for evaluation using several genomic data sets in this study.

click here for file

 additional file 2
arrangement of the functional classes aiding the improvement of the auc score of the go: <dig>  class in the go biological process ontology. this figure shows the arrangement of the functional classes aiding the improvement of the auc score of the go: <dig>  class  in the go biological process ontology. their structural proximity to the target class  suggests their potential to help improve the predictions for this class.

click here for file

 additional file 3
comparison of auc scores from our approach and gest. this figure shows the comparison of the performance of our functional similarity-incorporated k-nn classifiers with individual gest classifiers for mnaimneh et al's data set.

click here for file

 additional file 4
ranked list of predictions from the mnaimneh gene expression data set. a detailed list of ranked predictions produced by the label similarity-incorporated knn classifiers  and base knn classifiers  for the test genes extracted from the mnaimneh gene expression data set. the go terms, arranged in columns, are sorted from left to right in the order of decreasing auc improvements by incorporating functional relationships into their base classifiers. the genes in each column are ranked in descending order by the score assigned by the corresponding knn classifier. genes with the same score  are sorted by their orf name.

click here for file

 additional file 5
ranked list of predictions from the rosetta gene expression data set. a detailed list of ranked predictions produced by the label similarity-incorporated knn classifiers  and base knn classifiers  for the test genes extracted from the rosetta gene expression data set. the go terms, arranged in columns, are sorted from left to right in the order of decreasing auc improvements by incorporating functional relationships into their base classifiers. the genes in each column are ranked in descending order by the score assigned by the corresponding knn classifier. genes with the same score  are sorted by their orf name.

click here for file

 acknowledgements
we are thankful to zafer barutcuoglu, yves lussier and jianrong li for several fruitful discussions, and for providing us with useful information and data for the project. this work was supported by nsf grant cns- <dig> and umr bicb seed grants. access to computing facilities was provided by the minnesota supercomputing institute.
