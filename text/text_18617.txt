BACKGROUND
the analysis of composite protein mixtures by use of mass spectrometry techniques has become a standard methodology for characterizing the proteomic profile of a cell or tissue sample  <cit> . mass spectral data has proven valuable in addressing complex problems such as the reconstruction of metabolic pathways  <cit>  and protein-protein interaction networks  <cit> , and is of great utility in applications spanning from the quantification of bacterial proteomes  <cit>  to the investigation of infectious states in soybeans  <cit> .

efficient use of the ms/ms technique  <cit>  in large scale protein characterization studies requires robust and consistent data analysis procedures. to this end, the combination of spectral data and the vast amount of genomic sequence information available in public databases has proven extremely rewarding. algorithms such as sequest  <cit> , mascot  <cit> , and x!tandem  <cit>   can correlate thousands of mass spectra with theoretically derived peak lists from database peptide sequences, thus effectively automating the interpretation of experimental data. for the above mentioned algorithms, the result of a single spectrum searched against a database typically consists of a set of highly correlated peptide sequences along with a correlation score and a number of additional metrics intended for validation of the specific peptide-spectrum match.

there is, however, often no direct interpretation of these scores in terms of statistical significance  <cit> , therefore simply ranking well-correlated peptides by metrics provided from the initial database search procedures and selecting a cut-off for filtering true matches from false ones is not desirable. depending on the choice of threshold such a procedure will either be too conservative or yield a high rate of false-positives  <cit> . on the other hand, manual validation of the large amount of data produced by mudpit style  <cit>  experiments would be time consuming and out of tune with the high-throughput experimental work-flow characterizing the field at present. thus, to ensure an effective production pipeline, a fully automated method for confident validation of the results produced by the above mentioned search algorithms is essential.

a number of procedures for validating peptide-spectrum matches have been suggested, either as direct extensions of the sequest or mascot algorithms or as supplementary post-processing tools  <cit> . our focus here will be on the analysis of the search results produced by the sequest algorithm  <cit> , and how to efficiently improve the number of true peptide-spectrum matches identified at a controlled false positive rate.

currently, the most widely used tool for evaluating sequest search results is the peptideprophet methodology developed by keller et al.  <cit> . by use of an empirically determined probabilistic mixture model based on the fitting of assumed distributions of various metrics  the search results are evaluated. the procedure returns a probability estimate of a peptide being present given the database search results. while giving much higher sensitivity measures than simple threshold based methods, this approach does suffer from two short-comings: first, there is no theoretical work supporting the assumptions made regarding the distributions used to fit the features utilized. second, the model may not be easily extendable when potentially discriminatory information from novel types of data become available.

machine learning provides an attractive platform for addressing the above concerns since no prior assumptions about the distribution of the individual features have to be made. in addition, the flexibility in feature handling of most machine learning algorithms makes further improvement of predictive power and robustness straight forward as new information becomes available. in recent years a number of bioinformatics problems have been addressed using machine learning  <cit> , for example, the prediction of protein-dna interactions  <cit>  and protein-membrane interactions  <cit> . likewise, previous works have used machine learning methods for identifying true peptide-spectrum matches through different formulations of the problem. anderson et al.  <cit>  were the first to apply such procedures to mass spectral data in their study of support vector machines  classification of sequest search results from iontrap data. razumovskaya et al. conducted a similar study demonstrating how a neural network could improve the filtering of sequest search results over simple threshold-based procedures. in a study using ion-trap data elias et al. demonstrate how the identification of peptide-spectrum matches can be improved through probabilistic modeling of fragment intensities observed in the spectrum at hand  <cit> . ulintz et al.  <cit>  developed an approach using tree-based ensemble algorithms and demonstrated that these were superior to the svm protocol used in previous studies. a recent study have further demonstrated how physiochemical properties of the peptide in question can provide discriminatory power between true and false matches without using database search engine scores  <cit> .

from the above review it is clear that a variety of supervised classification regimens, using many different sources of information, have been tested thus far. here we present a work that improve on three separate aspects on the above mentioned machine learning procedures for identifying correct peptide-spectrum matches from the sequest database search procedure.

first, our classifier performs 6% better as measured by the area under the roc compared with results by ulintz et al.  <cit>  on the same dataset. the improvement is achieved by introducing a number of global dataset features that take into consideration factors such as the total number of peptide-spectrum matches belonging to a given protein and the percentage of potentially observable peptide sequence from a given protein actually appearing in the search result.

second, by using the alternating decision tree   <cit>  classification algorithm we are able to represent the developed model as a tree with a limited number of nodes, thereby rendering the model interpretable to humans. while this trade does not add anything in terms of predictive power, interpretability of the model makes the procedure clearer to experimentalists and allows us to compare the prediction rules to expert rule-of-thumb, giving an empirical validation of such rules.

third, we build a straight-forward probabilistic procedure for extending the machine learning identification of the peptide-spectrum matches into the protein prediction problem , by converting the classification scores into true probability estimates by means of logistic calibration. the latter of the two problems is often of most interest to experimentalists, as one is interested in knowing the probability of a protein being in the sample, not simply which peptide fragments were confidently identified.

methods
reference dataset
our method was tested using a publicly available maldi ms/ms dataset obtained from a sample of  <dig> known proteins  <cit>  published on proteomecommons.org  <cit> . the peaklists were searched using the sequest algorithm  <cit>  on the ipi human fasta database ver.  <dig>   with the post-translational modification methylation, oxidation, and phosphorylation. comparison with the peptideprophet  <cit>  validation results of the sequest output was done using output from ver.  <dig> . the peptideprophet roc curve and evaluation metrics reported below were obtained from this output.

to correctly evaluate our approach the original dataset was split into two, one for method validation and one for training the machine learning protocols. each of these datasets consists of a total  <dig>  examples of which  <dig>  are correct peptide-spectrum matches. in contrast to the works we are comparing with  <cit>  all  <dig> top-ranked tentative peptide matches from each spectrum searched are included in the training and testing set. including all potential matches is important, as 34% of the true matches have been found not ranked first. furthermore, only including the top one or top five ranked matches will exclude some potentially difficult instances that may add valuable information for identifying novel proteins.

classification algorithms
models were constructed using four different binary classification procedures, namely adaboost  <cit>  applied to c <dig>   <cit>  and willow tree  <cit> , random forest  <cit>  applied to c <dig> , and alternating decision tree  <cit>  . all algorithms used in this study are supervised classifier, a model does thus need to be trained on a labeled training dataset  and can thereafter be used to predict new examples without further parameter tuning . casting the problem in a binary classification framework, we refer to each peptide-spectrum match as an instance , with the ith instance consisting of a feature vector xi ∈  and a label yi ∈ { <dig>  1}, with n denoting the feature count. all algorithms described construct a function, g, that minimizes the empirical risk of misclassifying an instance, under the assumption that all instances are drawn with respect to the same  probability distribution. in the following we limit ourselves to describing conceptual details of the utilized algorithms, referring the reader to cited works for technical details.

c <dig>  and willow tree are both decision trees algorithms iteratively growing a classifier tree by finding splits of the dataset with respect to the feature value which results in the greatest gain in shannon entropy . the procedure halts when all instances in a leaf node are of the same class or a pre-defined stopping criterion has been reached.

we apply two so-called meta-classifier techniques to the above mentioned tree algorithms, namely adaboost  <cit>  and random forest  <cit> . both work by training a collection of decision trees over iteratively modified versions of the original training set and combining the prediction power of these models into one superior ensemble-classifier. the adaboost procedure iteratively updates importance weights for the dataset instances for each tree model constructed during training. the distribution of weights is changed such that higher weight is given to instances misclassified in the previous iteration. the final classification of an instance is made by the majority vote on classes returned by the tree collection. in the case of random forest each tree is trained on a bootstrap sample of the available instance and each node split only considers a number m of the available features . the final class label of an instance is assigned by taking the mode of the class labels returned by the constructed tree set.

the adtree algorithm also utilized the adaboost technique, but unlike abc <dig>  and abwillow it has the advantage of producing models that are easily represented as a tree with a limited number of nodes . this property is achieved by constructing a tree that is a conjunction of rules which all contribute real-valued evidence toward a given instance being classified as either true or false. unlike traditional tree models the classification of instances by adtree is thus not determined by a single path traversed in the tree, but rather by the additive score of a collection of paths. the adtree is graphically represented with two types of nodes: elliptical prediction nodes and rectangular splitter nodes . each splitter node is associated with a value indicating the rule condition: if the feature represented by the node is less than or equal to the condition value for a given instance, the prediction path will go through the left child node, otherwise the path will go through the right child node. the final classification score produced by the tree is found by summing the values from all the prediction nodes reached by the instance, with the root node being the precondition of the classifier. if the summed score is greater than zero, the instance is classified as true.

in addition to providing a classification label, the tree score of an instance  is a measure of confidence in the classification label, a feature that makes is possible to convert these into true probability estimates. to this end we use logistic calibration  <cit> , providing a one-to-one mapping between the marginal score and a probability estimate.

evaluation metrics
all instances will be classified into one of the following categories: true positive , false positive , true negative , or false negative . by determining the count of instances in each category, the following quality metrics can be estimated:

 accuracy=tp+tntp+tn+fp+fnsensitivity=tptp+fnspecificity=tntn+fpnet. prediction=sensitivity+specificity <dig> 

additionally, the area under the curve  of the receiving operator characteristic  is used to have a metric that is unbiased towards the class distribution of the dataset. the roc is defined as the -curve, with each point corresponding to a specific threshold for class separation. an auc value of  <dig> corresponds to an error-free performance over the entire range of thresholds, whereas a random classifier achieves an auc value of  <dig> . in addition to the auc measure we use precession-recall curve   to judge whether a classifier is truly superior to another, as it has been shown that domination in roc-space does not always result superiority in prc-space  <cit> .

availability and requirements
the maldi toftof dataset used for constructing and validating the procedure is publicly available on proteomecommons.org https://proteomecommons.org/dataset.jsp?i= <dig> <cit> . the code for constructing the models presented is freely available as part of our in-house machine learning workbench, malibu  <cit> , available at http://proteomics.bioengr.uic.edu/malibu/. malibu is used for both training and validation of the classifiers. all algorithm parameter tuning was done with standard settings for the malibu package  <cit> .

RESULTS
the developed machine learning protocol for identification of true peptide-spectrum matches was constructed in three steps: calculation of features for representation of each instance in the dataset; construction of classification models based on the annotated instances; and evaluation and interpretation of the resulting models. in the following, we present the details of each step and describe a method for extending the developed protocol into a probabilistic protein identification method.

feature calculation
a summary of the features utilized in this work can be seen in table  <dig>  we divide the features into three groups reflecting how they are derived. the sequest group contains features that can be obtained from the output of the sequest algorithm, such as the correlation score  between the theoretically calculated and experimentally obtained spectra and the difference between parent ion mass and database peptide mass,  amongst others . as these values are well characterized elsewhere  <cit>  we will not go into further detail here.

for each individual feature we give a brief description and indicate whether the feature was obtained from the output of the sequest algorithm or calculated from the identified peptide, the mass spectrum, or database statistics. the features have been divided up into three subgroups sequest, published, and novel, denoting those features that can be derived directly from the sequest algorithm output, those used in published studies of the identification problem, and those introduced in this work, respectively.

the published group contains features that have been used in previously published results on classifier construction for the problem at hand. the computations needed to derive these features are self-explanatory given the description in table  <dig>  we will refer the reader to the study by ulintz et. al. for further details on computation and the underlying intuition leading to the inclusion of these features  <cit> . the novel group consists of features not previously included in other machine learning formulation of this classification problem, and includes features for quality assessment of the spectral data as well as probability measures specifying the likelihood of observing the entire dataset. six novel features are calculated and their rationale is described below.

intuitively, one would be more confident in identifying a borderline peptide-spectrum match as being true if other peptides from the same parent protein are observed in the search result. in other words, given prior knowledge, one would favor specific peptide-spectrum matches over others with similar correlation values, due to our overall knowledge of the search result. this intuition leads to the implementation of two novel features, namely the protein hit count  and the potential coverage ratio .

we formulate the phc as the following probability: given a database containing a certain number of observable peptide d  and a search result containing p samples from this database, we want to calculate the probability that k or fewer observations of a given protein would be made by randomly sampling from this database. for each peptide stemming from a protein that has been matched k times in a search we will specify the phc by the binomial distribution, where n is the number of potentially observable peptides from this protein:

 phc=∑i=1k ip−i 

the above probability is estimated using a poisson distribution and is reported in negative log-space in order to avoid numerical artifacts. notice that since both the database size and the number of spectra are included in the calculation of the above term, any learning algorithm trained on a specific training set with given a database and a collection of spectra should work equally well on datasets obtained from a different database size searched with a different number of spectra.

one concern that may be raised when utilizing information from the parent protein, as is the case with phc, rather than the peptide-spectrum match itself, is how such features will handle the fact that some peptides can be mapped to several parent proteins due to the existence of orthologs and homologs in the database searched. one should, however, recall that a spectrum and a peptide fragment match provided by the sequest protocol is always linkable to the specific parent protein that gave rise to the theoretical peptide-fragment matched to the spectra. consequently there is never any doubt which parent protein the specific peptide-fragment should be counted towards. in fact, in instances where two proteins  have a certain degree of sequence similarity the phc may actually help weed out false-positive hits from distant homologs as hits from such homologs will have a lower phc  than hits from the protein actually present in the sample.

the pcr is simply defined as the percentage of residues belonging to observable peptide fragments that are observed in the set of peptide-spectrum matches from the sequest search. further, we include the ptm percentage, which denotes the percentage of potential post-translational modifications  included by sequest to obtain the present correlation scores. the logic behind including the ptm percentage is as follows: ptms are often functional modifiers of proteins. the need for the hypothetical inclusion of a high-percentage of the potential ptms in a short peptide fragment in order to get a good correlation with the spectra at hand could indicate that the match is not a true-positive as it seems unlikely to have a large number of functional modifiers close together in a relatively short peptide-fragment.

previous works  <cit>  have shown that an automated quality assessment of the spectral data can help validate peptide-spectrum matches by sorting out low quality spectra. the simplest features incorporating this notion are intensity mean and peak count, which specify the average intensity of all peaks in the raw spectrum and the total number of peaks, respectively. both of these values are often used in human assessment of spectral quality  <cit>  and have discriminatory power in sorting out spectra of poor quality  <cit> .

classifier performance
we compare the performance of a collection of classification algorithms using datasets including different subsets of features. one set includes the sequest and published feature-groups from table  <dig> and another one includes all features, referred hereinafter as the s+p dataset and all dataset, respectively. each dataset is divided into a training set for classifier construction and parameter tuning , and a distinct test dataset for evaluating the classifier performance. we choose to evaluate our method using a test set rather than by using cross-validation on the training set to ensure that dependencies between features from different instances within the dataset do not inflate the performance metrics .

an interpretable model
as observed above, the adtree algorithm is among the strongest performers on the dataset incorporating all features, rivaled only by abwillow tree. in comparison with machine learning algorithms such as svm, the adtree algorithm provides the advantage of being represented as a collection of user interpretable rules. figure  <dig> shows a graphical representation of the adtree model learned from the all dataset .

the base-rules in the tree are numbered in accordance with their order of discovery , which can be interpreted as the rule importance or predictive power of the feature  <cit> . given that interpretation, surprisingly, the phc appears to have the strongest discriminatory power amongst true and false instances in that a phc > <dig>  adds significant weight towards a positive prediction . thus the learned model suggests that a higher than expected number of peptides from one protein in the sequest search result, is indicative of these peptide-spectrum matches being true hits. the second and third base rules discovered are cut-offs for the xcorr score and deltacn, two of the main attributes of the sequest algorithm used for judging how well the theoretical peptide spectrum correlates with the experimentally obtained spectrum. ).

to better interpret the possible paths traversed by a dataset instance, subsets of base-rules have been highlighted in color in figure  <dig>  we will now examine these paths more closely to see how the classifier is able to discover meaningful knowledge, while at the same time providing high accuracy classification results.

the blue path is made up of only one feature, namely ntt. if the peptide has at most one missed cleavage side, this provides evidence toward the hit being positive, though an instance satisfying this requirement could still ultimately be classified as a false hit. if we examine the red path we see that a phc < <dig>  is negative evidence towards the hit being true, as it is unlikely that we would observe only a few peptides from a protein that is indeed present in the sample. if the peptide-spectrum match does, however, have a strong correlation score  this effect is reversed, giving the path a net positive score. interestingly, an xcorr score lower than the  <dig>  threshold does not add significant evidence toward the match being false. thus high xcorr scores add evidence towards an instance being true, while scores below constitute a borderline region where other factors determine the faith of the instance.

the fact that the phc feature only comes into play when the xcorr score is below as certain threshold is an important model feature, as the phc score might otherwise "hurt" the classification of proteins with few "mass specable" peptide-fragments. the phc is, in other words, not used unless the quality metrics correlating the spectrum and the proposed peptide do not provide sufficient evidence to conclusively determine whether the peptide-spectrum match is correct. in situations where there are only one or two "mass specable" peptides from a protein one would want the quality metrics of matches to be highly confident when using them to identify the parent protein, the strategy learned by the model is thus reasonable when handling such instances.

a related mechanism is observed when following the green path, here deltacn values of at least  <dig>  add evidence toward the instance being a true hit. the following xcorr filter shows that correlation values below  <dig>  are strong evidence towards the instance being negative, values above this threshold do not add evidence towards the instance being positive. the yellow path does not add any new features to the classifier, but simply acts as a further filter on the phc feature, constructing intervals with increasing summed evidence towards the instance being positive. the purple path, on the other hand, adds two new features. if the instances following this path has a deltacn < <dig> , and at the same time an ionfrac value of less than  <dig> %, there is substantial evidence towards the instance being false, whereas higher ionfrac values are indicative of a true instance when combined with a low deltacn. in other words, small differences in the mass of parent ion of the mass spectrum and the theoretical mass of the peptide that it has been matched with is a strong indicator of a true hit only if a certain fraction of the spectral peaks are accounted for by that specific peptide.

we observe that none of the features intended to address the issue of spectral data quality were found to be instrumental in significantly improving the classification accuracy for the adtree model. this is somewhat surprising, since well above 85% of spectra were considered to be of bad quality in studies addressing the problem of identifying such cases  <cit> . thus, one would expect that a feature identifying such spectra would provide certain discriminatory power. one possible explanation for this observation is that these cases are already covered by other rules from the adtree, thus including the spectral quality feature to the model would not add additional predictive power. for instance, one might reason that cases with inferior spectral quality will only give rise to database hits with low xcorr score, which would render these cases false hits due to this feature.

the rules discovered above using the adtree agree well with expert criteria previously used as conservative estimates for identifying hits that would be true with high probability. washburn et al.  <cit>  did, for instance, settle on the following conjunction of rules as criteria for correct hits: xcorr > <dig> , deltacn < <dig>  and the peptide has to be fully tryptic . the classifier developed is comprised of rules with similar cut-off values for the features used by experts, but does also utilize novel rules when making predictions, identifying true instances that would otherwise have been missed. take for instance the xcorr cut-off: we found that values above  <dig>  provide strong evidence towards an instance being a correct match. if the value, on the other hand, is below this cut-off we did not find it to be significant evidence toward the hit not being correct unless the value fell below  <dig> , providing room for a number of borderline instances that can be correctly classified using the additional features in the model.

extending the peptide prediction protocol to the protein prediction problem
the ultimate goal of ms/ms experiments is not necessarily the confident identification of peptides, but rather determining a probability measure for the presence of their parent proteins in the sample analyzed. one software application addressing this issue is the proteinprophet software  <cit>  by nesvizhkii et al., which identifies a minimal set of proteins accounting for the observed peptides by use of the expectation-maximization algorithm. following the formulation in this work we show a straight-forward way of extending our peptide identification protocol to a protein identification protocol.

a conservative estimate of the probability, p, that a given protein is present  is given by

  p=1−∏i) 

where the product index i is over all distinct peptides from this protein, the index j is over all matches obtained for one specific peptide and p denotes the probability of the jth identification of peptide i being a true match. we take the maximum over all identification from all identical peptides, as these should not be considered independent. note further that this formulation theoretically allows for a specific peptide to be considered as evidence for two distinct proteins.

by use of logistic calibration we convert the classification scores obtained from the adtree algorithm into probability estimates of a given peptide-spectrum match being correct ). combining these estimates with  we can calculate probability estimates for each protein that has at least one peptide identified in the database search actually being present. using this relatively simple extension of the classification framework we are able to identify 87% of the proteins present in the sample at false positive rate 5%. in comparison, using the probability estimates from peptideprophet only achieved an identification rate of 85%. this is not surprising as we previously saw that the adtree procedure identifies more correct peptide-spectrum matches than peptideprophet.

CONCLUSIONS
supervised machine learning provides an attractive platform for examining the peptide prediction problem since no prior assumptions of the distribution of the utilized features have to be made when constructing the model. this is in contrast to generative/unsupervised models such as the peptideprophet procedure, that assumes specific distributions  when classifying matches. while it has been shown that the assumption regarding a specific data distribution is reasonable  <cit>  in certain instances of the identification problem there is no general evidence or theoretical framework supporting this claim for all types of instrument or data. as conveyed in this work another attractive property of the supervised machine learning framework is the relative ease with which the developed models can be extended with novel features in order to improve predictive power. it thusly becomes possible to construct a tailored peptide identification framework for specific experimental procedures and equipment choices, thereby providing stronger guarantees on the control of error rates than would be possible with a generic setup. one drawback of the supervised learning approach is of course the need to construct a training dataset from a know protein sample to do the initial parameter tuning of the model and determine the performance metrics. however, once the training is done the trained model will perform equally well on large scale and sparse datasets, since one does not have to be concerned with having too little data to properly estimate model parameters.

since large-scale proteomics studies are often concerned with characterizing the proteomic make-up of the cell in a number of states, a reliable probabilistic measure for the presence of a given protein is essential. above we demonstrated how predictions from the adtree model  combined with logistic regression can be used in a simple probabilistic framework to give a high protein identification rate at a low fpr.

in sum, we have improved on previously published machine learning procedures for identification of correct peptide-spectrum matches by introducing novel features adding to the predictive power of all the tested algorithms. furthermore, we have introduced the adtree procedure into the problem domain, constructing an interpretable model that correlates well with previously published rules addressing the classification problem at hand. finally, we show how the protein prediction problem can be addressed within the presented framework.

in this work we demonstrate how a generic classification model for ms/ms data obtained by use of the maldi ionization can be constructed. in future work, we intend to extend the classification framework to take advantage of experiment specific parameters  creating models tailored specifically to the instrumental set-up used to obtain the spectral data.

authors' contributions
mk conceived the idea, designed the study, carried out the analysis, and drafted the manuscript. hl conceived of the study, participated in its design and coordination, and helped draft the manuscript. both authors read and approved the final manuscript.

