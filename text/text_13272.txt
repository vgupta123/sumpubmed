BACKGROUND
recent advances in genotyping technologies have greatly improved genotype call rates and accuracy. this consequently enhances our understanding of genetic variations that are responsible for complex human traits. in particular, studies with snps show great promise to identify genetic determinants of complex disorders. despite these achievements, the large number of snps in today's genome-wide studies poses a number of serious challenges. for example, one important issue is how to handle missing genotypes. simply excluding subjects that have any missing genotypes is impractical in many situations, as most subjects usually have one or more missing genotypes in large genotyping efforts. consequently, ignoring missing genotypes may lead to huge loss of genetic information.

genotypes of snps are usually determined one at a time based on signal intensities of alleles. and depending on the availability of training data, the assignment of genotypes is often treated as a clustering or classification problem. when the allele signal intensities of a snp are not well separated, currently available genotype calling algorithms make no calls  on data points that are not assigned to a genotype cluster with a high posterior probability. many strategies have been exploited to reduce the impact of missing genotypes on association analyses. one of them is to take genotype uncertainties into account when conducting association tests. for example, plagnol et al.  <cit>  treated posterior probabilities as weights of genotype assignments and used a weighted score statistic, and kang et al.  <cit>  incorporated genotype uncertainties into their haplotype estimation algorithm. another strategy is to impute missing genotypes from called genotypes. for example, souverein et al.  <cit>  modelled a snp and markers that are in ld with the snp using the polytomous logistic regression model, and dai et al.  <cit>  used a classification tree method. a detailed comparison of several of those imputation methods can be found in yu and schaid  <cit> . imputation of missing genotypes can also be a by-product of haplotype reconstruction, which estimates missing genotypes and unknown haplotype phase simultaneously  <cit> . all those imputation strategies are based on the fact that when snps are in ld, the unobserved genotypes can be imputed accurately based on genotypes observed at other snps.

essentially, the above described approaches try to use information from two different perspectives: incorporating genotype uncertainty into association tests focuses on making full use of information from the signal intensities of each snp, and imputing missing genotypes based on ld focuses on borrowing information from neighbouring snps. as each of them uses only partial information from the data, we would expect that genotype determination can be greatly improved in an approach that takes advantage of both "fuzzy" call and imputation of missing values on called genotypes. here, we propose a new method that uses both signal intensities and ld information, with the two parts connected by jointly estimating the underlying cluster parameters and haplotype frequencies for multiple markers.

to show better the motivation for combining signal intensities and ld information, let's examine the clustering results of the signal data from illumina beadarray platform for about  <dig> individuals at a snp. figure  <dig> shows the normalized signal intensities of two alternative alleles: a and c. using the genotype calling algorithm illuminus  <cit> , most data points can be clustered into one of three genotype groups: aa, ac, or cc. however, there are several data points that are located between two clusters. these data points are usually treated as missing values and their genotypes have to be imputed by some statistical methods. despite the genotype uncertainty, the positions of these data points nevertheless provide some information for genotyping. for example, if the posterior probability for a data point to have genotype aa is  <dig> , then it will be treated as a missing value when the threshold to assign genotype calls is set to  <dig> ; however, in the case that it is in ld with a neighbouring snp, this partial genotype information, together with the ld between the two snps, can help to identify its underlying genotype.

methods
notation
n: number of subjects.

m: number of markers.

h: number of distinguishable haplotypes.

xi = : vector of signal intensities for subject i, i =  <dig>  ..., n.

gi = : genotype for subject i, i =  <dig>  ..., n.

hj = : the j th haplotype, j =  <dig> ...,h. hjm is  <dig> for the rare allele and  <dig> for the common allele at snp m.

yi = : phased genotype  for subject i, where hi <dig> ∈ {h <dig> ...,hh} and hi <dig> ∈ {h <dig> ...,hh} are the haplotypes. i =  <dig>  ..., n.

hj: number of copies of haplotype hj in yi.

θs = m =  <dig> ...,m : cluster parameters, where μmt, Σmt, πmt are the mean, covariance matrix , and probability of genotype cluster t at snp m, respectively.

θh = : ld parameters, where θhj is the frequency of haplotype hj.

in the notation, xi is observed, and gi and yi are unobserved. xi =  denotes signal intensities that are after proper normalization or transformation. different normalization or transformation methods may be used for data generated by different platforms. for example, for signal data from illumina beadarray, xim is the contrast variable at snp m. similar to the algorithm illuminus by teo et al <cit> , we define contrast as the ratio of the difference to the sum of the normalized signal intensities of two alternative alleles. for data from affymetrix genechip  <dig> k arrays, xim is a two dimensional variable, with each dimension corresponding to the normalized signal of one allele, as in the chiamo  <cit>  software.

our new method
in our method we partition parameters into two sets: the cluster parameters θs, and the ld parameters θh. although they contain redundant information, i.e., all πmt are known when θh is given, we adopt this parameterization to simplify the presentation of our algorithm. our algorithm correlates the signal intensities of multiple markers by jointly estimating cluster parameters and ld parameters . we assume signal intensities of different markers are independent, conditional on given genotypes. in addition, we make three reasonable assumptions:

 conditional on phased genotypes and cluster parameters, the distribution of signal intensities does not rely on ld parameters θh i.e., f = f;

 conditional on ld parameters θh the distribution of yi does not depend on cluster parameters θs, i.e., f = f;

 snps are in hardy-weinberg equilibrium .

the complete data likelihood is then:

 f = ff = ff 

we use the em algorithm to estimate parameters in our method  <cit> . with some algebraic manipulation, we can show that the e step is equivalent to calculating the genotype posterior probability for the ith subject to have genotype t at the mth locus, given estimated parameters and observed signal intensities. based on the relation between phased and unphased genotypes, the genotype posterior probability can be expressed as

 wimt=pr⁡=∑yi:gim=tf 

this is essentially a sum of probabilities of phased genotypes, conditional on estimated parameters and observed signal intensities. the probability of a phased genotype conditional on estimated parameters and observed signal intensities is

 f=ff∑yiff 

where

 f=∏m=1mff=θhi1θhi2) 

for given yi and θs, we assume that the signal intensities at different markers are independent, and they follow a distribution suitable to the normalized signal data, such as gaussian distribution or t-distribution.

the m step in the em algorithm calculates the set of θs and θh that maximizes the expected log-likelihood. the estimate for the frequency of haplotype hj is

 θhj=12n∑i=1n∑yifhj 

since θs and θh contain redundant information, there is no need to update the πmt's in θs once θh is updated; as a result, we only need to estimate the mean and covariance matrix of each genotype cluster. in the m step of the conventional em algorithm, the means and covariance matrices are updated by the set of values that maximizes the expected log-likelihood. for illumina beadarray data, our estimators for cluster parameters are based on data points with large genotype posterior probabilities , since our study shows they are more robust than the estimators in the m step of the conventional em algorithm. this strategy is also used in  <cit> . for data generated by the affymetrix genechip  <dig> k arrays, we first obtained the regular estimates for the mean and covariance matrix of the tth cluster at snp m, then estimated the cluster mean μmt by using the  data points that have the smallest mahalanobis distances, and finally updated the covariance matrix Σmt by a weighted estimator based on estimated μmt and all data points.

in our method, once the em algorithm converges, we make genotype calls based on the genotype posterior probabilities and a predetermined threshold δ. specifically, for a subject at a given snp, if the posterior probability for the subject to have genotype t is greater than δ, we assign t to the corresponding data point; if the posterior probabilities for all of the three genotypes are less than δ, then the data point is labelled as missing and no call is assigned.

we emphasize that our method is different from treating signal intensities of different markers as a multi-dimensional variable. to show the difference, here we consider the case of two snps. the number of possible genotypes is nine for two snps. if we treat the contrast variable of the two snps as a bivariate t-distribution with known degrees of freedom, then we need to estimate  <dig> parameters, including nine two-dimensional means, nine two-by-two covariance matrices , and eight cluster probabilities. by contrast, we only need to estimate  <dig> parameters in our method: six means, attributed to three genotype clusters for each snp; six variances, attributed to three genotype clusters for each snp; and three haplotype frequencies, attributed to four possible haplotypes. in addition, the cluster parameters in our method are estimated marker by marker; as a result, the difficulty brought by a snp with a rare allele or low signal quality has little effect on the cluster parameters of other snps.

to assess the performance of our method , we compared it with two other methods: the one-snp-at-a-time method m <dig> and the ld based method m <dig>  the method m <dig> models the cluster parameters θs, and the method m <dig> models the ld parameters θh. m <dig> and m <dig> use only part of the information from data: either the signal intensities of individual snps, or ld structure of multiple snps. by contrast, our method m <dig> uses both signal intensities of individual snps and ld structure between snps. in the method m <dig>  we used the algorithm illuminus  <cit>  for data from illumina beadarray and the algorithm chiamo  <cit>  for data from affymetrix genechip  <dig> k arrays. those two algorithms are used because they outperform other existing algorithms for their respective platforms  <cit> . the illuminus algorithm assumes that the contrast and strength  follow a t-mixture model and it uses the em algorithm  to estimate cluster parameters; the chiamo algorithm uses a bayesian hierarchical mixture model to call genotypes from normalized signal intensities. in the method m <dig>  we first computed the posterior genotype probabilities for the missing genotypes based on the ld structure of genotypes assigned by illuminus or chiamo, then assigned genotype calls to the missing ones based on whether the calculated posterior probabilities were greater than a threshold. the posterior genotype probabilities are calculated by using the em algorithm  <cit>  for our simulated data with two snps, and they are calculated by using the algorithm fastphase  <cit>  for the two real data sets considered in the paper, due to the large number of snps in the real data sets.

simulated data
to evaluate the performance of different methods, we simulated data by mimicking signals generated by illumina beadarray. in our simulation, the cluster parameters were based on snps in a real data set; the allele frequencies and ld levels were pre-determined to reflect different data structures. we considered two snps with the same allele frequencies. the minor allele frequency was chosen to be  <dig> ,  <dig> , or  <dig> , and the ld was chosen at a variety of levels, with the square of the pearson's correlation  being about  <dig>   <dig> ,  <dig> , or  <dig> . hwe was assumed for both snps. the threshold for assigning calls or no calls, δ, was chosen to be  <dig> ,  <dig> ,  <dig> , or  <dig> . the signal intensities  for a given marker were assumed to have a three-component t-mixture distribution , with six degrees of freedom. contrast and strength were assumed to be independent from each other. to study the effect of signal quality, we considered three sets of cluster parameters:

 high quality, with means for contrast being - <dig> ,  <dig> ,  <dig> , means for strength being - <dig> , - <dig>  - <dig> , standard errors for contrast being  <dig> ,  <dig> ,  <dig> , and standard errors for strength being  <dig> ,  <dig> ,  <dig> ;

 low quality, with means for contrast being - <dig> ,  <dig> ,  <dig> , means for strength being - <dig> , - <dig> , - <dig> , standard errors for contrast being  <dig> ,  <dig> ,  <dig> , and standard errors for strength being  <dig> ,  <dig> ,  <dig> ;

 mixed quality, a situation with one snp in high quality and the other one in low quality.

these parameters were taken from two snps in real data, representing snps with high or low genotype call rates. the sample size was  <dig> 

to quantify the performance of the methods, two quantitative metrics are computed: call rate and genotyping error rate. the call rate was the number of non-missing calls divided by the total number of calls, and the genotyping error rate was the proportion of incorrectly called genotypes among all assigned calls. for a set of chosen parameters, we used  <dig> replicates to estimate the two metrics. as both the ld based method m <dig> and our method m <dig> estimate haplotype frequencies, it is interesting to investigate whether one method gives more accurate estimation for haplotype frequencies. and for two snps, the accuracy of haplotype frequencies of the two methods can be reflected by the square of the pearson's correlation  based on estimated haplotype frequencies.

real data
we considered two sets of real data from two different genotyping platforms.

the first data set consists of  <dig> unrelated case-control subjects  from a breast-cancer candidate-gene study conducted in the university of california at irvine. for each subject,  <dig> snps in  <dig> candidate genes were genotyped by illumina beadarray. normalized signal data were obtained from beadstudio. we used the algorithm illuminus to make genotype calls in the one-snp-at-a-time method m <dig>  in the ld based method m <dig>  due to the large number of snps, we used the algorithm fastphase to compute the posterior probabilities for the missing genotypes  assigned by the algorithm illuminus. jointly analyzing the signal data of all the  <dig> snps is computationally prohibitive. to solve that problem, for each snp, we searched all other snps to find the one with the maximum r <dig> with the given snp, then analyzed the two snps jointly if their r <dig> is greater than  <dig> . a t-mixture model with fixed degrees of freedom was then used to cluster the contrast of two alternative alleles for each snp. in all the three methods , we used  <dig>  as the threshold to assign genotype calls.

the second data set consists of signal data from affymetrix genechip  <dig> k arrays for  <dig> unrelated controls from the  <dig> british birth cohort  <cit> , obtained from the wellcome trust case control consortium . we focused our study on the  <dig> snps in chromosome  <dig>  we chose the algorithm chiamo as the one-snp-at-a-time method m <dig>  since it outperforms other genotype calling methods  <cit> . this method uses a bayesian hierarchical mixture model to cluster quantile normalized data, and its default threshold of posterior probabilities for making a call is  <dig> . for the no-calls assigned by chiamo, we imputed them using the algorithm fastphase. the joint analysis of signal and ld was similar to that applied to the first real data set, except that here we used a gaussian mixture model for the two-dimensional signal data. to compare the performance of different methods, we downloaded the illumina infinium  <dig> k data from the wtccc. among the  <dig> subjects with affymetirx  <dig> k data,  <dig> of them were also genotyped by the illumina infinium  <dig> k. and the number of common snps on chromosome  <dig> in the two platforms was  <dig>  for direct comparison, in each method, we computed the discordance rates between the most probable calls at the  <dig> common snps. the reason why we use the most probable call for each data point is that the thresholds for different methods and platforms are not comparable.

RESULTS
simulated data
the results for the simulated data are reported in tables  <dig> to  <dig>  they are mean values from  <dig> replications. tables  <dig>   <dig>  and  <dig> show the call rates and genotyping error rates of the three methods when  both of the two snps were in high quality,  both of the two snps were in low quality, and  snp <dig> was in high quality while snp <dig> was in low quality, respectively. table  <dig> reports the estimated r <dig> and mean square errors. since the patterns of the results for different allele frequencies p were similar, here we only show the results for p =  <dig> . our study indicates that different thresholds δ led to very similar conclusions, thus only those of δ =  <dig>  are described. and the results for r <dig> =  <dig> are not shown, because when r <dig> was close to  <dig>  the performance of all the three methods were very similar, as expected.

m1: the one-snp-at-a-time method; m2: imputation based on estimated genotypes from m <dig> and ld structure; m3: our method that jointly analyzes the signal of two snps.

snp <dig> was in high quality and snp <dig> was in low quality.

the first row shows true values of the square of pearson's correlation. numbers in parentheses are mean square errors.

the call rates of the two ld based methods  depend significantly on the ld level between the two snps. as the method m <dig>  calls one snp at a time, the ld level does not affect its call rates, which can be seen from the almost identical call rates at all ld levels. when the two snps were independent from each other, as expected, the call rates of the three methods were very similar . when the two snps were in ld, our method m <dig> consistently improved the call rates of m <dig>  and with the increase of ld, its advantage became more considerable. when ld was not very strong, such as when r <dig> was below  <dig> , the increment brought by m <dig> over m <dig> was very small; in contrast, our method still improved the call rates in the same situation.

now we examine the effect of signal quality on the call rates. when the signal quality of both snps was high, all the three methods gave very high call rates and our method gave the highest, as illustrated in table  <dig>  when the signal quality of both snps was low, although the call rates of all methods were lower, as shown in table  <dig>  the benefit of using our method was more noticeable. to study if our method would improve the genotype calling of one snp but deteriorate that of the other, we tested it on the simulated data of mixed quality, and the results are shown in table  <dig>  here, because the two snps were assumed to have the same rare allele frequency, the signal intensities of the snp in low quality were more difficult to cluster than those of the snp in high quality. as a result, the call rates of m <dig> for snp <dig> were much lower than those of snp <dig> for all three methods. however, by jointly modelling signal intensities and ld, our method significantly increased the call rates of snp <dig>  in addition, the call rates of snp <dig> were also increased. this might seem implausible at the first sight, but it can be explained by the fact that, although the signal intensities of snp <dig> were noisy, they were nevertheless useful to help cluster the signal intensities of the associated marker snp <dig>  consequently, jointly calling the two snps increased the call rates for both of them.

now let's examine the other important metric – the genotyping error rate. for a given method with different thresholds, genotyping accuracy and call rates are often trade-off of each other. it is therefore important for an algorithm not to gain higher value of one at the cost of the other. the results in tables  <dig>   <dig>  and  <dig> illustrate that our method not only achieved greater call rates than m <dig>  but also achieved higher genotyping accuracy, which is most obvious when ld was moderate or strong. by contrast, although the method m <dig> increased the call rates when ld was strong, this increase was gained at the sacrifice of genotyping accuracy. for example, when both snps were in low quality and r <dig> was about  <dig> , both m <dig> and our method have higher call rates than m1; however, the genotyping error rate of m <dig> was  <dig> %, which was  <dig> times of the error rate of our method  and  <dig>  times of that of m <dig> .

when the signal intensities of a snp are in low quality, the estimated genotypes are prone to genotyping errors. this error was amplified by the method m <dig> , because m <dig> is directly based on called genotypes. by contrast, our method achieved higher genotyping accuracy. this is because, for a snp whose signal intensities are not well separated, its genotype assignments can be improved by the ld between itself and other snps. strikingly, in the situation of mixed quality, when the two snps were in high ld, our method improved the genotyping accuracy for both snps over the method m <dig>  again, this can be attributed to the fact that although the signal of snp <dig> was noisy, it still provided some clustering information for snp <dig> 

real data
for the data set of the breast-cancer candidate-gene study, we computed the call rates of the  <dig> snps using all the three methods. the median call rates of m <dig> , m <dig> , and our method m <dig> were  <dig> %,  <dig> %, and  <dig> %, respectively. compared to the one-marker-at-a-time method illuminus, our method increased the call rates of  <dig> snps for at least 1%, and  <dig> snps for at least 5%. by contrast, fastphase increased the call rates of only  <dig> snps for at least 1%, and only  <dig> snps for at least 5%. although there is no additional data to compare the genotype accuracy, the results here show convincingly that our method significantly improves the call rates of the other two methods.

in the wtccc data,  <dig> snps on chromosome  <dig> were genotyped for  <dig> unrelated controls using the affymetrix  <dig> k platform. here we computed the discordance rates between the calls from the three methods and the calls from the infinium  <dig> k. the discordance rates were  <dig> % for chiamo,  <dig> % for fastphase, and  <dig> % for our method. those discordance rates were calculated based on the most probable calls. among the data points with chiamo scores below  <dig> , i.e., the data points with "no calls" by chiamo with its default threshold  <dig> , the discordance rates of fastphase and our method were  <dig> % and  <dig> %, respectively. note that the discordance rates for data points with low chiamo scores were much higher than the overall discordance rates. we examined the pattern of chiamo scores, and found that most of the data points with low scores were in a few snps that have relatively low call rates, which is likely an explanation for the high discordance rates. all those discordance rates indicate that our method increases the genotyping accuracy.

discussion and 
CONCLUSIONS
in existing analyses, genotype calling and imputation of missing genotypes are usually considered as two separate problems. in this paper, using simulated data and real data, we have demonstrated that it is advantageous to treat the two problems simultaneously. currently, approaches based on ld between snps have been widely used to impute missing genotypes. those approaches, however, might decrease genotyping accuracy, when comparing to the traditional one-marker-at-a-time genotype calling method. by contrast, our method outperforms the traditional one-marker-at-a-time method in the respects of both call rate and genotyping accuracy. besides genotype calls, our method also yields a weight matrix consisting of genotype probabilities. this weight matrix can be used in association analyses, in a similar way described by plagnol et al  <cit> .

although in our method snps are assumed to be in hardy-weinberg equilibrium, we found our method still improves the results of call rate and genotyping accuracy for data with moderate departure from hwe . another assumption we made is that subjects are from a random sample of a population, which means subjects are unrelated and there is no population stratification. in the future, we plan to modify our method so that related subjects with known pedigree structure and population substructure can also be taken into account.

our method does not put any constraint on the number of snps that can be called jointly. however, because the number of haplotypes increases exponentially with the number of jointly-analyzed snps, it is computationally demanding for the traditional em algorithm to process a large number of snps. to solve this problem, what we have done in the application of our method to the real data is that, for each snp, we made genotype calls by using another snp that had the highest pearson's correlation with the original snp. although this significantly mitigates the computation requirement, it might not be the best strategy. an alternative way is to use a sliding window method to fix the number of snps that are called together; however, here we decide not to do that, because ld between snps is usually a localized phenomenon and the number of snps that are analyzed together should be determined by local ld structure. other alternatives include several recently proposed methods that can provide rapid and accurate estimation of haplotypes  <cit> .

what we considered here are signal intensities obtained from two different platforms: the illumina beadarray and the affymetrix genechip  <dig> k arrays. there is no reason, however, to limit the method to those platforms. in fact, the idea of jointly analyzing signal intensities of multiple markers is quite general. it can be applied to other platforms, such as multiple inversion probe technology  <cit> , and other dna variations, such as copy number variants. the advantage of combining signal intensities and ld is confirmed by a few recent publications  <cit> , where the signal data and dependence between neighbouring markers are integrated to infer copy numbers and loss of heterozygosity.

authors' contributions
zy designed the study, developed the statistical method and computational tool; djs was involved in designing the study; cg, za, and ha-c contributed one real data set. all authors were involved in writing the manuscript.

