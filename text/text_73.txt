BACKGROUND
systems biology focuses on the analysis of whole biological systems and interactions occuring within them. for this purpose, it transcends classical boundaries between domains and levels of granularity and follows an integrative approach towards the discovery of biological knowledge. instead of reducing complex biological phenomena to their basic parts, systems biologists perceive and study these phenomena as components of a network of interrelated processes spanning multiple domains  <cit> . the methods used to investigate systems' behavior rely on the integration of multi-scale data across levels of granularity, the "integration of in-silico, in-vitro, and in-vivo research"  <cit> , and the construction of computational models to predict and simulate complex systems' behavior. key challenges that systems biology research faces today are to integrate data within and across domains and levels of granularity, to integrate data that is available in different formats and locations, to provide validation procedures for computational biosimulation models as well as to develop standards for the exchange and integration of models, simulations and results  <cit> .

to address these challenges, the research community has proposed standard languages for modelling and model exchange, and has developed common community standards for the annotation of models. in particular, the systems biology markup language   <cit> , the cell markup language   <cit>  and the biopax standard  <cit>  are standardized model exchange languages that aim to facilitate basic interoperability between the research results that are produced by different research communities. to support the adoption of standard languages, tools that are capable of validating models with respect to their specification language  <cit>  or additional guidelines and constraints associated with a modelling standard  <cit>  are available. model annotation standards include the minimum information required in the annotation of models   <cit> . miriam specifies which information should be added as metadata to systems biology models and other resources. a part of this metadata is intended to refer to the biological phenomena that a model intends to represent. for this purpose, the annotations can be made using an identifier that belong to an external resources such as a biomedical terminology or ontology. ontologies focus on a qualitative description of the biomedical domain and are commonly represented in formal languages which facilitate automated discovery of contradictory statements and flexible access to knowledge through automated reasoning.

most efforts in using ontologies in systems biology modelling are currently limited to the annotation of models with ontologies in which the terms from ontologies are treated as metadata. we argue that an integration of the research areas of systems biology modelling and biomedical ontologies can establish an information flow  <cit>  between them. such an integration can make a significant contribution towards achieving the aims of system biology while addressing some of the key challenges systems biology faces today. information flow from biomedical ontologies to systems biology would enable biosimulation modelling and simulation frameworks in systems biology to access the information that is available in data repositories through biomedical ontologies and use this information both to enrich and constrain the scientific analyses of biological systems.

from the perspective of systems biology, the main difference between annotation with ontologies and integration with ontologies is that annotations are metadata about a model, a simulation or a particular result, while integration entails that the ontologies are used as a component of a model, a simulation or a result. in particular, when biosimulation models are integrated with ontologies, it becomes possible to translate the structure of a model  into a representation of the biological phenomena that the model represents. an explicit ontological commitment  <cit>  of a modelling language is a formal specification of how a model's structure corresponds to the structure of the represented phenomena.

using automated reasoning, the restrictions employed by biomedical ontologies can be applied to verify the biological consistency of biosimulation models, i.e., whether or not a model represents phenomena that are biologically possible. ultimately, integration of computational models and biomedical ontologies, combined with the possibility for model verification, may lead to a genuine standardization of the semantics of modelling languages based on the biology represented through their use: modelling languages would contain a knowledge-based layer that formally represents the structure of and the interactions within a biological system.

here, we demonstrate a method to integrate biosimulation models in systems biology with representations of in vivo biology as described by biomedical ontologies in a common formal framework such that information can flow between both disciplines. to evaluate this framework, we apply it to all computational models in the biomodels database  <cit>   that are available in sbml  <cit>  and annotated with biomedical ontologies using the miriam community standard  <cit> . we provide an ontological analysis of the sbml and specify its ontological commitment  <cit> , i.e., we formalize how the structure of a model in sbml determines the structure of the biological phenomena it represents. we implement the result of our analysis and developed the sbml harvester software, which converts annotated sbml models into owl. we use the sbml harvester to create a formal representation of  <dig> computational models contained in the biomodels database. based on this representation, we verify the consistency of the models and their annotations with respect to the biological phenomena they represent. after establishing the consistency of both, we use the converted models to demonstrate how reasoning over biomedical ontologies can address data integration problems that systems biology faces today: we use the knowledge base of computational models to perform complex biological queries that cross multiple domains and levels of granularity and we demonstrate how to retrieve model elements that represent specific biological phenomena. to achieve these goals, we employ automated reasoning in the expressive description logic underlying the web ontology language   <cit>  and automatically infer information from the combined knowledge base that consists of multiple large biomedical ontologies as well as the representation of  <dig> computational models and their biological semantics.

the sbml harvester software, a web interface to access the sbml harvester as well as the ontologies we created are freely available under a bsd license at http://sbmlharvester.googlecode.com.

RESULTS
definitions and scope
the main goal of our proposed framework is the integration between in silico biosimulation models and representations of in vivo biological phenomena expressed through biomedical ontologies. for this purpose, our method relies on the availability of systems biology resources that are annotated with terms from biomedical ontologies or resources that can be mapped to biomedical ontologies.

we draw a distinction between representations of in vivo versus in silico phenomena. representations of in vivo phenomena directly represent biological phenomena. representations of in silico phenomena, on the other hand, focus on representing a particular biosimulation model, and biological phenomena are represented only as a secondary consequence, since the biosimulation model is an in silico representation of in vivo phenomena. in this manuscript, in vivo representations also include representations of in vitro phenomena, since these methods also deal directly with biological phenomena and molecules.

we use the term biosimulation model to describe a mathematical abstraction that is intended to represent the structure, functions, capabilities and qualities of a class of biological systems. a biosimulation model can be expressed in a biosimulation modelling language and executed within a simulation framework. a biosimulation modelling language is a formal or semi-formal language that is a component of a biosimulation modelling framework and can be used to specify a biosimulation model. biosimulation modelling frameworks provide a set of explicit constraints and assumptions about how biosimulation models represent the structure of biological systems and may include guidelines for the documentation and implementation of software systems that support the modelling framework. for example, biosimulation modelling frameworks can fix a specific theory of space and time based on which biological systems are represented within the simulation framework. simulation frameworks can further define the methods by which connections and transitions in biological systems are performed, or they may include assumptions about the basic types that can be used to represent biological systems. types include both basic data types  and the classes expressed using conceptual modelling languages . examples of biosimulation models are guyton's model on circulatory regulation  <cit>  or the model of the cell cycle in yeast  <cit>  contained in the biomodels database as model biomd <dig>  the model biomd <dig> is expressed in the modelling language sbml. although sbml is primarily intended as a lingua franca for the exchange of models and not as a modelling language in itself  <cit> , we will refer to sbml as a biosimulation modelling language within the context of our work. other biosimulation modelling languages include cellml, matlab or biopax. many of these languages evolved into or form part of biosimulation modelling frameworks and include guidelines, resources and software tools for the creation, visualization, simulation, documentation and distribution of biosimulation models.

model ontology
in our method, we employ an upper-level ontology , both for the in silico domain of models and for the domain of biology. upper-level ontologies provide general classes that are applicable in any domain  <cit> . the upper-level ontology for biosimulation models is used to facilitate the integration between modelling frameworks and must accommodate the types of entities occurring in these frameworks. the upper-level ontology's role for in vivo types is to facilitate the integration of data and knowledge across domains and levels of granularity.

as an extension to our upper-level ontology, each class in the ontology is further extended with biomedical domain ontologies. we assert the class biological process of the gene ontology   <cit>  as a subclass of process, the molecular function class of the go as a subclass of function, the cellular component class of the go as well as all classes from the celltype ontology  <cit> , the chemical entities of biological interest  ontology  <cit>  and the foundational model of anatomy   <cit>  as subclasses of physical object and all classes from the pato ontology  <cit>  as subclasses of quality.

we further introduce and use a set of binary relations, i.e., relations that have two arguments which are filled by instances of classes in our ontology. the part-of and has-part relations are applicable to both in silico and in vivo entities. we use the part-of relation to assert, as axioms, that model components must be part of a model, that physical objects can only have physical objects as part and that processes can only have other processes as part. the participates-in relation relates physical objects to the processes in which they participate and has three sub-relations, based on the different modes of participation distinguished in sbml: has-input, has-output and has-modifier. the has-input relation is used to assert that an individual participates in the beginning of a process, has-output to assert that an individual participates in the end of a process, while has-modifier is used to assert that an individual is essential for a process, participates throughout its occurrence and is not permanently changed by the process  <cit> . the function-of relation is used to assign a function to a physical object and the realizes relation can be used to assert that a process realizes a function. the occurs-in relation is used to denote the physical object at which a process occurs. finally, the quality-of relation is used to relate a quality to the individual it is a quality of. here, we assume that a quality is always the quality of exactly one individual. the relations in the model ontology together with associated axioms and inverse relations are listed in table  <dig> 

our main contribution arises from establishing the link between in silico model entities and in vivo entities in biology. for this purpose, two relations in table  <dig> are used to relate model entities to those biological entities they represent. the represents relation links model entities, including whole models and model components, to physical objects and the model-of relation links models  to the physical objects they represent. the use of these two relations allows us to specify what is being represented by a computational model and how the components and structure of models in their modelling languages reflect the components and structure of the represented part of the world.

formalizing models
based on the upper-level ontology we developed, we analyze the kinds of entities that are used within a modelling language as well as the kinds of relations in which these entities can stand and explicitly assert what kind of biological entities are represented by a language element . such an analysis establishes an explicit correspondence between the representation of in silico methods employed in biosimulation models and the in vivo phenomena that they intend to represent and makes the ontological commitment  <cit>  of a modelling language explicit. to perform such an analysis, classes from several biomedical ontologies can be employed, depending on the modelling framework and the kind of phenomena that the models in this framework represent. to establish the ontological commitment of a modelling language, we assume that models are artifacts of human creation and they attempt to represent possible ways that the world, or a part of the world, could be  <cit> . the modelling language and its semantics provide constraints and a structure for the description of these worlds, while a particular model characterizes a class of possible biological scenarios. the result of our formalization is a formal characterization of the distinctions that are made by a modelling language as well as how the structure of a model within this language reflects the structure of the biological phenomena it represents.

for the purpose of this analysis, we assume that every model entity represents a class of physical objects. for example, a model can be a model of the eukaryotic cell or of entities that have the capability for apoptosis. we assume that model entities that capture the dynamic aspects of a model  represent capabilities of physical objects that are realized through processes.

we utilize the miriam compliant annotations of biosimulation models to generate ontology-based representations of these models. in our implementation, we currently restrict our analysis to annotations that use qualifiers that connect a model entity to a class of biological entities using the biomodels.net biology qualifiers is, isversionof, hasversion, haspart and ispartof  <cit> , since these enable us to directly link model entities to existing biomedical ontologies: the qualifier is is intended to be used whenever a model entity exactly represents the annotated entity, isversionof and hasversion are intended to be used whenever the model entity represents a subclass of the annotated entity, ispartof is intended to be used when a model entity is always part of some instance of the annotated entity and haspart is used when a model entity always has some instance of the annotated entity as part. in the methods section, we present the details about our automatic method for generating owl representations from the sbml files provided by the biomodels database and their miriam annotations.

as a single example, figure  <dig> illustrates parts of the automatically created representation of a specific model of adenylate cyclase inhibition  within our ontological framework. the left side of figure  <dig> shows a simplified and abbreviated snippet of the model's sbml representation. while the model biomd <dig> includes one compartment, six reactions, ten parameters and ten species, we list only one of the model's reactions and three species in figure  <dig>  the right side of figure  <dig> illustrates the representation of the in vivo phenomena as produced by the sbml harvester software. we label the class of entities that biomd <dig> represents "world of biomd0000000082". the sbml harvester software that we described earlier connects the sbml model to the in vivo phenomena it intends to represent using the represents relation. in figure  <dig>  assertions of the represents relations are illustrated as black dashed lines.

the process of transforming parts of sbml models into owl makes some aspects of sbml's semantics explicit which are currently implicit in the sbml text. for example, the sbml model biomd <dig> has a single compartment, "cell", which is annotated with the class cell . we make explicit that this model represents a physical object that has a cell as part. furthermore, species in the sbml model are linked to compartments and we make the assertion explicit that species that are linked to a compartment represent physical objects which are located in the object represented by the compartment. for example, all species in biomd <dig> are linked to the compartment "cell" and therefore all physical objects that these species represent are located in the cell represented by the compartment. we assert that, if a species is annotated with a class c using the is or isversionof qualifiers , it represents a kind of c. for example, the species "gtp" is annotated  with the chebi class gtp  and therefore we assert that the species labelled "gtp" represents gtp that resides in the cell represented by the compartment. in the right side of figure  <dig>  the nesting of entities represents parthood relations.

we assume that reactions in an sbml model are intended to represent processes. in biomd <dig>  "gtp binding with drg" is a reaction that is annotated  with gtp binding . based on this information, we assert that a gtp binding process occurs in world of biomd <dig>  furthermore, based on the list of reactants, products and modifiers listed in an sbml model, we assert inputs , outputs  and modifiers  to the process. for example, the species "gtp" and "drg" are listed as reactants of "gtp binding with drg". based on this information, we assert that the reaction "gtp binding with drg" represents a gtp binding process that has two entities as input: the entity represented by the species "gtp" and the entity represented by the species "drg". similarly, we formalize the list of products of "gtp binding with drg" and assert that the reaction represents a gtp binding that has a physical object as output which is represented by the species "drg_gtp". in figure  <dig>  inputs of reactions are illustrated with red lines and outputs are illustrated with dashed red lines. the methods section describes the precise method for formalizing sbml models.

we developed the sbml harvester software that automatically converts sbml models into owl using this method and our basic model ontology. the harvester creates an integrated representation of both the structure of a model and the biological phenomena that a model intends to represents. we applied this software to the biomodels database, release  <dig>  and automatically converted  <dig> models. the result of this conversion is a knowledge base  composed of more than  <dig>  classes which are characterized based on more than  <dig>  logical axioms . the knowledge base includes the go  <cit> , the chebi ontology  <cit> , the celltype ontology  <cit> , the foundational model of anatomy  <cit>  and the pato ontology  <cit> , all of which are freely available from the obo foundry ontology repository  <cit> . in addition to these ontologies, we create two classes for each model, compartment, species or reaction, one for the in silico entity represented within sbml, the other for the in vivo entity characterized through biomedical ontologies. furthermore, in some cases, a class of concentrations, charges or amounts is created for species. the details of the conversion process are described in the methods section. the knowledge base and the software to convert sbml models are available as supplementary material on our project website.

consistency verification
automated reasoning over the biomodels knowledge base provides a means to verify models and their annotations. upon applying this analysis to the formalized biomodels database, we detect several contradictions in the knowledge base. these contradictions arise from annotations in  <dig> models. for example, in a model of the mitotic cell cycle  we identify  <dig> annotations as problematic: the model contains a compartment annotated with cell, in which the species "spn" annotated with spindle assembly  is located. according to our analysis, however, species represent physical objects, while spindle assembly is a kind of process. consequently, the annotation of a species with a process class will cause an inconsistency that we automatically detect. another type of consistency violation in the same model relates to the annotation of a reaction which is annotated with a class of physical objects. the reaction "assoc with net1p to form rentp" is annotated with rent complex, a subclass of cellular components. however, according to the method we propose, a reaction may represent something that has a rent complex as participant, but it cannot represent a kind  of physical object.

kinds of consistency violations
mixing physical objects, functions and processes
the most basic problem that leads to a contradictory class definition is the disjointness of physical objects, functions and processes. we assume in our analysis that species and compartments represent physical objects, while reactions represent functions or processes. however, in some cases, a species is annotated with a function or process with the intended meaning that the species is a physical object that either has the annotated function, or a species that has some function that is realized through the annotated process. for example, in biomd <dig>  the species "protease" is annotated with peptidase activity  with the intention that the species represents peptidase, i.e., molecules with the function peptidase activity.

in most cases, an automated reasoner is capable of disambiguating the intended meaning. for models in the sbml, the following three interpretations are disjoint:

• the model is a subclass of c,

• the model is a subclass of things that have the function c, and

• the model is a subclass of things that have a function that must be realized by c.

in each of these alternatives, c is interpreted differently: as a kind of physical object, a kind of function or a kind of process. because all these interpretations of c are disjoint, an automated reasoner will eliminate two options and select exactly one  <cit> .

a similar list of possible interpretations of annotations can be created for sbml's reactions. although the incorporation of these disjunctive interpretations of annotations would lead to a formally consistent knowledge base, incorrectly annotated model entities would not cause an inconsistency anymore and therefore prevent us from automatically identifying incorrect annotations through automated reasoning. in our sbml use case, we perform a disjunctive interpretation for annotations to model, but not for annotations to species, compartment or reaction.

extending features of modelling languages
in some cases, inconsistencies in the knowledge base indicate the use of modelling language features for purposes different from what may have been intended by the language designers. for example, in biomd <dig>  sbml's species elements are used to represent temporal stages. the model biomd <dig> is a model of the cell cycle in yeast  <cit>  and includes a compartment annotated with nucleus that contains, among others, the species g <dig>  g <dig>  s and m annotated with g <dig> phase, g <dig> phase, s phase and m phase, respectively. within the model, the amounts of these species can be either  <dig> or  <dig>  and the initial amount of g <dig> is  <dig> and the initial amounts of g <dig>  s and m are  <dig>  the values of these species serve as a basic representation of temporal stages of the cell cycle, and the species' values are used as preconditions for reactions within the model. while the choice to represent stages of the cell cycle as species will not lead to biologically incorrect models and may be motivated by limitations in the simulation environment, our method can be used to identify the cases in which the intended use of sbml by modellers does not coincide with the ontological representation of sbml features. with an appropriate extension of the biology qualifiers that can be used to link model entities to biological entities, we would be able to incorporate such model annotations.

biological impossibility
a third kind of contradictory class definition that we can automatically identify is due to a violation of biological constraints. for example, recently added definitions of classes in the go  <cit>  define an atpase activity  as a catalytic activity that has water and atp as input, adp and phosphate as output and is a part of an atp catabolic process. water and atp are classes in the chebi ontology that cannot have common instances and therefore should be declared as disjoint classes, although such a restriction is not yet included in chebi. similarly, although the go class definitions do not explicitly state that atp and water are the only inputs of an atpase activity, such a restriction may be added to the go. to demonstrate the utility of ontologies for identifying biologically inconsistent classes, we add the assertion that water, atp and alpha-d-glucose 6-phosphate are disjoint as well as the definition of atpase activity to the knowledge base that we generated.

when querying for models containing contradictory definitions in this extended knowledge base, we obtain biomd <dig> and biomd <dig> as a result. the models biomd <dig> and biomd <dig> are models of anaerobic glycolysis in yeast  <cit>  and both contain a species labelled "atp" that is the input of a reaction labelled "atpase". the reaction "atpase" is annotated with atpase activity. the species "atp", however, is annotated with alpha-d-glucose 6-phosphate , not with atp. based on the definition of atpase in the go , the class that is represented by the atpase reaction becomes unsatisfiable, and this problem is automatically identified through reasoning. in the two models, the cause of the inconsistency is an incorrect annotation of the species "atp" with alpha-d-glucose 6-phosphate instead of atp. as ontologies are further extended with expressive class definitions  <cit> , more of these annotation problems can automatically be identified and subsequently corrected.

a consistent representation of knowledge is necessary to utilize automated reasoning. the correction of the problems that we identified in the annotations and models contained in the biomodels database requires substantial knowledge about both the model structure and their applications. therefore, we do not perform a manual repair of the identified inconsistencies and ignore the  <dig> models that contain contradictory class definitions in further analyses.

knowledge discovery and composition
retrieving models
we utilize the resulting knowledge base for automated reasoning to perform inferences across the combination of models and the biological phenomena they intend to represent. since these phenomena are described using biomedical reference ontologies, inferences can take the information contained in these reference ontologies into account to perform queries across multiple connected domains as well as distributed knowledge bases. table  <dig> shows a list of queries for the biomodels knowledge base, including the number of results. we obtained these results using the pellet owl reasoner  <cit>  and the protege ontology editor  <cit> .

list of examples for querying the biomodels  knowledge base. the results of these queries are based on automated reasoning . every result listed in the table is the result of a formal proof that is based on the constraints formalized in the sbml harvester software, the annotation assertions of models in biomodels and the knowledge contained in biomedical ontologies.

if an answer to any of the queries is incorrect, then this inaccuracy must be the consequence of either an incorrect assertion in a biomedical ontology, an inappropriate use of sbml model elements, an incorrect model, a faulty model annotation or a mistake in our assumptions about sbml's ontological commitment.

quantifying these cases and correcting the underlying problems requires a manual analysis of the models and their annotations, and we intend to collaborate with the biomodels database curators on identifying and correcting possibly incorrect model annotations. the sbml harvester software can further provide the means to verify models before inclusion in the biomodels database.

using inference over both ontologies and the formalized model structures, we are able to ask detailed queries, most of which are currently not possible with the current biomodels database query interface. in addition, use of automated reasoning enables us to utilize the biological semantics of models explicitly, in contrast to search methods based on lexical matching that rely on names and terminology.

the most basic question we can ask is the retrieval of models which represent an entity of a certain kind. for example, we can query for models  that represent the cell cycle and, based on the ontology-based annotation of models and our conversion, we retrieve  <dig> models.

via the integration of biomedical ontologies into our framework, we can also perform queries that rely on the ontologies' axioms. for example, we are able to query for models that represent biological processes in which sugar  participates. this query depends on the chebi ontology  <cit> , the gene ontology   <cit>  as well as the complex ontology-based descriptions that result from the application of our method. as a result of performing this query over the ontological representation of the biomodels database, we obtain  <dig> models .

retrieving model components
we can further refine our query to retrieve all parts of this model that represent processes involving sugar and retrieve  <dig> reactions. for example, the reaction labelled "pyr" has 5-o-phosphono-alpha-d-ribofuranosyl diphosphate  as input, which is a kind of sugar. we can extend this query further: we can add restrictions taken from reference ontologies  or add restrictions arising from the model .

bridging levels of granularity
combining the inferences over the biomedical ontologies and the representation of computational models enables the specification of queries of high biological complexity as well as using automated reasoning over biomedical ontologies to bridge levels of granularity. for example, we can query our ontology for any model that represents the uptake of any mutagenic central nervous system drug by the gastrointestinal system. using the terms mutagen  and central nervous system drug  from the chebi ontology as well as gastrointestinal system  from the fma enables us to retrieve a model of the tolerance to pressor effects in caffeine uptake .

furthermore, we can use ontologies to perform queries for anatomical or physiological phenomena and retrieve specific molecular biosimulation models that satisfy the specified conditions. for example, we can query the biomodels knowledge base for models that represent catalytic activities involving sugar in the endocrine pancreas and obtain a model of phosphofructokinase and glycolytic oscillations in the pancreatic beta-cell  <cit>   as result. this model has a compartment annotated with type b cell of pancreatic islet , and according to the fma, these cells are part of the pancreatic islet which is part of the endocrine pancreas. furthermore, this compartment contains several species annotated with subclasses of sugar  which are inputs and outputs of reactions that represent catalytic activities .

since we have combined multiple models in a single ontology, we can ask for connections between models based on connections between the biological phenomena they represent. this has the potential to lead to a powerful ontology-based method for composing models. for example, we can query our ontology-based framework for kinds of processes that are part of the cell cycle and then ask for models or model components that represent them. based on these components, we could then construct a new model that consists of the components necessary to represent the cell cycle. a method for automatically or semi-automatically generating models based on ontology-based queries is a viable area for future research.

performance of reasoning
to apply our method within software systems such as simulators, or utilize it as part of an analysis method, it is critical that queries be answered efficiently, especially when a large number of queries are considered. our method uses automated reasoning in owl, and, in the worst case, the time needed to answer queries increases exponentially with the number of logical axioms in the ontology  <cit> . using the pellet owl reasoner  <cit>  on hardware consisting of two intel® xeon®  <dig>  ghz quad-core cpus with  <dig> gb memory, classification of the biomodels knowledge base requires more than one hour while the time required to answer queries depends on the query's complexity and ranges between  <dig> and  <dig> minutes in our experiments.

to address this problem, we leverage recent research around the development of owl profiles  <cit>  that restrict owl's expressivity in order to improve the speed of automated reasoning and, in particular, to guarantee polynomial-time reasoning. to utilize reasoning in these profiles, we use the el vira software  <cit>  to perform an automatic conversion of the biomodels knowledge base into the owl el  <cit>  profile and then applied the cel reasoner  <cit> . using cel after applying the el vira modularization approach, we were able to classify the biomodels knowledge base in less than one second and perform queries in  <dig> to  <dig> milliseconds.

discussion
limitations and related work
ontologies in systems biology
the potential to utilize biomedical ontologies for the discovery and integration of models has been recognized within the systems biology community, and several efforts make use of ontologies. both domain-specific ontologies that target a particular aspect of systems biology are being developed and applied, and ontologies for several areas of biology are used to annotate, retrieve and compose biosimulation models. for example, the systems biology ontology   <cit>  is applied, amongst others, within the sbml  <cit>  to describe and restrict model components. the model format ontology   <cit>  further provides structural restrictions and constraints for the sbml and the biopax standard  <cit>  is based on an ontology for representing pathways and reactions. the kisao and teddy  <cit>  domain ontologies can be used to characterize the dynamic aspects of systems' behavior. model repositories, including the biomodels database  <cit> , contain large corpora of models, some of which are richly annotated with classes from biomedical ontologies.

annotations of biosimulation models with biomedical domain ontologies are already widely being applied for knowledge extraction and discovery  <cit>  as well as model composition  <cit> . statistical methods and semantic similarity  <cit>  can be used to rank models, identify similarity between model components and suggest modules that can be recombined into new models. methods based on semantic similarity provide a powerful means to identify and discover associations between entities that are annotated with ontologies and rank them based on how similar two entities are with respect to a certain similarity metric. however, semantic similarity methods use the intended meaning of ontology-based annotations only indirectly and often rely on distance measures between nodes in graphs, information content or set comparisons  <cit> . our method, on the other hand, uses the intended meaning of model annotations directly through deductive inference. the use of deductive inference guarantees absolute certainty about inferred statements  <cit> , provided that the biomedical ontologies and model annotations that were used for the inference are correct. for example, all results to queries that we list in table  <dig> are the result of a formal proof across the combination of biomedical ontologies and the formalized models in our knowledge base.

automated reasoning can reveal complex relations between both model entities and terms in biomedical ontologies, while similarity-based approaches have the potential to suggest genuinely novel hypotheses that cannot be derived from existing knowledge. consequently, our method can complement existing knowledge extraction and knowledge discovery methods in systems biology: first, ontology-based annotations are verified, formalized and additional knowledge inferred through automated inference, as described in our method; in a second step, established methods for knowledge discovery, ranking and model composition can be utilized based on the verified and enriched representation generated through our method.

similarly to our method, the rule-based semantic mediation  method  <cit>  has been used to apply automated reasoning and enrich the knowledge available within a biosimulation model. to achieve this goal, rbm uses the mfo  <cit>  to represent the syntax of sbml in owl, embeds several biological databases in a common ontology-based model, adds an expressive core ontology about the biological domain that is being modelled and interrelates syntactic information and knowledge contained in the core ontology using rules. through the combination of these methods, rbm can partially automate the model annotation process and it has been demonstrated that rbm is able to infer novel and biologically meaningful relations between the entities that are represented within a model  <cit> . in contrast to our method, rbm does not formalize and implement the ontological commitment of the modelling language itself nor does it provide a foundation of model entities in an upper-level ontology that integrates in silico and in vivo entities. furthermore, rbm does not yet utilize the large number of pre-existing biomedical ontologies for inferences. instead, rbm relies on the creation of a core ontology containing expressive axioms to capture the constraints in the biological domain. we make use of biomedical ontologies that rarely use expressive axioms and their weak formalization limits the capabilities of our method for verification and knowledge extraction. therefore, a combination of our approach with rbm is a viable subject for future research.

further related work on data integration in systems biology and biosimulation includes the work on biopax  <cit>  and its integration with sbml  <cit>  as well as the integration of sbml with the taverna workflow system  <cit> . while we have not used these approaches to improve our framework yet, we plan to combine our framework with different methods for data integration in systems biology in the future.

availability of model annotation
a bottleneck in our method is the availability of ontology-based annotations for systems biology resources. while our method can be used to generate complex definitions from these annotations and verify them with respect to biomedical ontologies, it relies on the availability of ontology-based annotations. to annotate models, software tools such as semanticsbml  <cit> , saint  <cit> , metannogen  <cit>  and other miriam-aware modelling tools  <cit>  and annotation libraries  <cit>  will continue to play a prominent role. the software we developed could be added as a component to existing model annotation frameworks to verify the annotations which are added by curators, and we make our source code available for this purpose.

complexity and expressivity of automated reasoning
another limitation of our work is the complexity of reasoning over ontologies in owl. to address this problem, we have used a method of converting the ontology created by the sbml harvester to owl el, a fragment of owl that enables polynomial-time automated reasoning. however, owl el does not support the use of the universal quantifier , negation or inverse relations, and queries that involve these owl constructs can no longer be performed. in our conversion, we make use of the universal quantifier to relate functions to the processes that can realize them. the use of universal quantification is required to ensure that functions can remain unrealized  <cit>  . as a consequence, we can no longer answer queries for the phenomena represented by sbml's reaction model elements since we use universal quantification in their formalization  and these axioms are lost after conversion to owl el.

however, although the use of the universal quantifier is applied in several biomedical ontologies  <cit>  and applying it in our framework will improve interoperability with these ontologies, we may also replace the universal quantification with another construct  to enable more expressive queries at the cost of interoperability with some ontologies. for this purpose, we implemented an option in the sbml harvester software to create owl el ontologies as output. when this option is activated, the universal quantifier is replaced with an existential quantifier in the formalization of process- and function-based annotations and we import only ontologies  that we converted into the owl el fragment using the el vira software  <cit> . investigating alternative formalizations of the constraints employed in the sbml harvester to improve query performance and expressiveness is an important subject for future research in collaboration with the users of our system.

upper-level ontologies
we utilize a basic upper-level ontology, as shown in figure  <dig>  and we intend to expand this ontology in the future. in the case of sbml, the mfo  <cit>  represents the structural constraints of the modelling language and can be used to extend the in silico entities within our upper-level ontology . established ontologies such as the general formal ontology   <cit> , the descriptive ontology for linguistic and cognitive engineering   <cit> , the suggested upper merged ontology   <cit>  or the basic formal ontology   <cit>  are comprehensive upper-level ontologies and can replace the in vivo side in our upper-level ontology. while established upper-level ontologies can provide more classes for in vivo entities as well as useful axioms and distinctions  <cit>  that could improve our method further, they can also enforce a philosophical commitment that is not necessarily shared across domains and communities  <cit> . therefore, we utilize a minimal upper-level ontology that specifically addresses our use-case and which can be mapped to existing upper-level ontologies if and when needed. in the upper-level ontology we employ, we only commit to those distinctions that are necessary for implementing and demonstrating our method. in the future, we intend to collaborate with other researchers, the developers of tools for processing model annotations and the users of our system to provide a more comprehensive framework that can accurately represent all the types of entities that are used within specific modelling frameworks.

an ontology-based layer for model exchange and verification
while it is uncertain whether a single standard representation and exchange language for systems biology models will ever be agreed upon, there is a great potential for unifying the semantics of these languages on their ontological level. in other words, a model of apoptosis can be represented using sbml, cellml, matlab, fortran, and several other languages, and agreeing on a single common language that is suitable for all purposes and simulators is as unlikely as agreeing on a single programming language. however, agreeing on the meaning of "apoptosis" and formally specifying this meaning using a class apoptosis seems much more achievable, in particular as apoptosis is already specified and defined in ontologies such as the go. consequently, while the syntax of model representations may never be combined in a single uniform format, their underlying ontological commitment may provide a means for achieving genuine interoperability and integration between models and modelling languages. annotation of computational models alone will not achieve this goal, since genuine integration requires a framework for information flow between the structure of the model and the biological phenomena it represents. despite considerable efforts in semantically representing and characterizing models  <cit> , such an integration has not yet been achieved. the framework we propose demonstrates a strategy for integrating parts of systems biology and biomedical ontology, and we believe it has the potential to address some of the key challenges that systems biology faces today.

identifying only  <dig> models that violate the formal constraints we place on the use of sbml and its annotations demonstrates the great care that the biomodels database curators have used in their model annotation efforts. based on this well-curated database, we could demonstrate that our framework has the potential to facilitate the verification of the biological consistency of model annotations through automated reasoning. since model annotations are currently used as metadata, a verification of the models based on their annotations is not yet common. consequently, the majority of the contradictions we identify arise from the model annotations and not the models per se. however, if the model annotations would cease to be treated as metadata and become part of a standard according to which models can be verified, our method could be of utility to curators in their annotation task as well as aid in the discovery of modelling problems.

we have identified three major kinds of inconsistencies in the biomodels database. the first group of inconsistencies is due to our ontological analysis of sbml and the resulting restrictions we place on the use of its components. in particular, while we assume that some language elements in sbml refer exclusively to physical objects, functions or processes, it is possible to refer to physical objects through their function , or to functions through the processes that occur when the function is realized . although we show how our analysis could be extended to accommodate these three alternative interpretations in each case, such an extension would hide other problems in the biomodels knowledge base from automated discovery. instead, an appropriate extension and use of annotation qualifiers  <cit>  could help to provide a consistent and verifiable transformation of annotated sbml models into owl.

a second group of inconsistencies arises through the use of sbml language features for purposes different from what they are commonly used for. in particular, we have identified a model in which sbml's species are used to simulate a basic theory of . in this model, species represent temporal intervals and are consequently annotated with process terms. the underlying ontological commitment of sbml's use in such a model is substantially different from the constraints that we make explicit through our analysis, and consequently, we cannot consistently incorporate this model in our knowledge base. to accommodate these models, the modelling language could be extended to include additional features when not available  or additional model annotation qualifiers can make such complex relations between model elements and their intended meaning explicit.

finally, the third group of consistency violations is due to constraints in biomedical ontologies that further restrict biosimulation models and their annotations. consistency violations of this group arise when a model represents biological phenomena that are impossible according to the current knowledge of biology, as expressed in biomedical ontologies. to detect problems of the third kind, the first two groups of problems must be resolved and expressive, richly formalized ontologies must be used.

extension to other modelling languages and domains
to apply our framework across modelling languages, the part of our model ontology that represents in silico entities must be extended to accommodate the kinds of model entities that are used in other modelling languages. in addition, the ontological commitment of such modelling languages must be made explicit. for example, to apply our method to cellml, our model ontology must be extended with cellml specific types. based on such an extended ontology, the correspondence between the structure of cellml models and the structure of the biological phenomena that they represent must be established. as a result, models in different modelling languages can be compared based on an ontological characterization of the biological phenomena they represent.

to achieve this goal rapidly, conversion methods between modelling languages can be used, such as a conversion between cellml and sbml  <cit> . the cellml2sbml effort establishes a mapping from cellml language elements to identifiers, units, compartments, species, parameters, reactions and rules in sbml, and consequently, our sbml conversion could be used to provide a representation of models converted through this method. however, both for the tasks of consistency verification and data retrieval, a cellml-specific ontological analysis would be preferable to the use of such a translation, since some features of cellml may be lost through a conversion into another modelling language.

a further extension of our method is to incorporate the dynamic aspects of modelling. models, according to our analysis, represent static entities in which only the capabilities for processes are present.

simulations of models, on the other hand, represent processes in which the entities represented by the model components participate. for this purpose, a simulator can trigger the functions of model entities that represent physical objects, and, as future work, the complex relations between biosimulation models, the simulations and the structures and processes that both represent can be made explicit. for this purpose, our method could be extended to accommodate the minimum information about a simulation experiment   <cit>  standard and could apply a similar approach as we demonstrated here with sbml to the sed-ml language  <cit> . the extension of our method to incorporate biosimulations and their results is subject to future research.

CONCLUSIONS
we have demonstrated how to formalize the biological meaning of models in systems biology. we used this formalization to both validate and verify the biological consistency of models, as well as to demonstrate semantic retrieval of biosimulation models based on the structure of the biological phenomena they represent. together, these capabilities have the potential to improve access and understanding of models, and ultimately to integrate biosimulation knowledge across domains and levels of granularity.

for large-scale analyses and applications, we demonstrate that a reduction into a tractable fragment of owl  is required so that inferences can be performed efficiently. our method is applicable to any kind of information that can be represented using sbml and annotated with biomedical entities using the biomodels.net biology qualifiers. we have applied our method to the biomodels database as well as to yeastnet, a consensus metabolic network for yeast  <cit> , and make the resulting owl ontologies as well as the sbml harvester software we created freely available on our website.

while ontologies in biomedicine have traditionally been limited to single domains  <cit> , recent achievements contributed to making these ontologies interoperable by characterizing their relations  <cit> , specifying the semantics of ontology representation languages used for biomedical ontologies  <cit>  and incorporating axioms that link the classes of one ontology to classes in other ontologies  <cit> . the links between the classes of multiple ontologies provide relations that facilitate data integration across domains, levels of granularity and species. similar dimensions of data integration are faced by systems biology. therefore, an integration of biomedical ontologies and systems biology models can provide a formal representation framework based on which the data relevant to the study of biological systems can be integrated across domains, granularity and species, and made available to scientific analyses of biological systems.

