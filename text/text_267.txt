BACKGROUND
the advancement of high-throughput technologies, such as dna chips, has enabled the study of interactions and regulations among genes on a genome-wide scale. recently, many algorithms have been introduced to determine gene regulatory networks based on such high-throughput microarray data, including linear models  <cit> , boolean networks  <cit> , bayesian networks  <cit> , neural networks  <cit> , and differential equations  <cit> .

in the linear modeling of a genetic network, the expression data is fitted using a regression model, where the change in expression levels is a response for all other genes  <cit> . although such standard linear modeling approaches enable the analysis of many different features of the modeled system, they are not effective in genome-wide network discovery. this is because the number of candidate parameters and models is very high and therefore it is difficult to search efficiently and reliably with tight control on many false positives.

bayesian network algorithms have limitations with regard to the determination of an important network structure because of their complex modeling strategies  and a long computation time for searching all potential network structures on genome-wide expression data. these limitations of the bayesian network may be overcome by the dynamic bayesian network , which models the stochastic evolution of a set of random variables over time  <cit> . although some improvements have been proposed, the accuracy of prediction of the dbn is relatively low, and its excessive computational time is still very high  <cit> .

recently, studies on the hierarchical scale-free network in lower organisms  <cit>  have indicated the necessity of a network method for the simultaneous analysis of thousands of genes. the human b-cell network analysis using mutual information  <cit>  is a type of hierarchical scale-free analysis. although this analysis successfully constructs gene networks with thousands of genes, the method is based on mutual information between two genes; therefore, it cannot obtain the response of a target gene when more than two genes simultaneously affect the target gene.

among these methods, the boolean network  is useful to construct gene regulatory networks observed by high-throughput microarray data because it can monitor the dynamic behavior in complex systems based on its binarization of such massive expression profiling data  <cit> . the boolean function of a gene in a bn can describe the behavior of the target gene according to simultaneous changes in the expression levels of the other genes.

boolean networks
bn models were first introduced by kauffman  <cit> . in these models, a gene expression is simplified with two levels: on and off. a bn g is defined by a set of node v = {x <dig>  ..., xn} and a set of boolean functions f = {f <dig>  ..., fn}. a boolean function fi, where i = { <dig>  ..., n}, with k specified input nodes  is assigned to node xi. the regulation of nodes is defined by f. more specifically, given the values of the node  at time t -  <dig>  the boolean function are used to update these values at time t.

the model system has been developed into a so-called random bn model  <cit> . bns have attracted attention since the introduction of probabilistic boolean network  models by shmulevich et al.  <cit> . many algorithms have been proposed for the inference of bns. for example, the reveal algorithm has been introduced by liang et al.  <cit>  for causal inference by using mutual information, which is the most fundamental and general measure of correlation. akutsu et al.  <cit>  have constructed a bn structure based on the consistency problem, which can be used to determine the existence of a network that is consistent with the observed data. in one of the most recent studies on the bn algorithm, the best-fit extension problem  <cit>  is used for the inference of pbns  <cit> . in pbns, every node  can have a chance of acquiring different boolean functions. the probabilistic selection of boolean functions adds flexibility in the determination of the steady state of bns and monitoring of the dynamical network behavior for gene perturbation or intervention  <cit> .

recently, several software packages have been developed for constructing bns. the random bn toolbox  <cit>  and the pbn toolbox  <cit>  are available in matlab. netbuilder   <cit>  is a genetic regulatory network tool used to simulate genetic network using a bn. the bn has been widely used to describe biological processes. for example, huang  <cit>  has used these networks to represent cell growth, cell differentiation, and apoptosis. a transcriptional network model in yeast has been studied using a random bn  <cit> . further, johnson  <cit>  has studied the signal transduction pathways in a b-cell ligand screen.

advantages and disadvantages of boolean networks
the estimation of gene regulatory networks using the bn offers several advantages. first, the bn model effectively explains the dynamic behavior of living systems  <cit> . simplistic boolean formalism can represent realistic complex biological phenomena such as cellular state dynamics that exhibit switch-like behavior, stability, and hysteresis  <cit> . it also enables the modeling of non-linear relations in complex living systems  <cit> . second, boolean algebra is an established science that provides a large set of algorithms that are already available for supervised learning in the binary domain, such as the logical analysis of data  <cit> , and boolean-based classification algorithms  <cit> . finally, dichotomization to binary values improves the accuracy of classification and simplifies the obtained models by reducing the noise level in experimental data  <cit> .

however, the bn has some drawbacks. one of the major drawbacks is that it requires extremely high computing times to construct reliable network structures. therefore, most bn algorithms such as reveal can thus be used only with a small number of genes and a low indegree value. for higher indegree values, these algorithms should be accelerated through parallelization in order to increase the search efficiency in the solution space  <cit> . the consistency problem  <cit>  works in time complexity o
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaqadaqaauaabeqaceaaaeaacqwgubgbaeaacqwgrbwaaaaacagloagaayzkaaaaaa@3106@·m·n·poly) , the time required to compare a pair of examples respectively) for a fixed indegree k; this is because 22k
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqaiyagmdaahaawcbeqaaiabikdaymaacaaameqabagaem4aasgaaaaaaaa@304a@ boolean functions must be checked for each of the possible nck combinations of variables and for m observations. the best-fit extension problem  <cit>  also works in time complexity o
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaqadaqaauaabeqaceaaaeaacqwgubgbaeaacqwgrbwaaaaacagloagaayzkaaaaaa@3106@·m·n·poly). although the improved consistency algorithm and best-fit extension problem work in time complexity o
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaqadaqaauaabeqaceaaaeaacqwgubgbaeaacqwgrbwaaaaacagloagaayzkaaaaaa@3106@·m·n·poly)  <cit> , they still exhibit an exponential increase in the computing time for the parameters n and k. such high computing times are a major problem in the study of large-scale gene regulatory and gene interaction systems using bns.

chi-square-test-based boolean network
in order to overcome the time complexity problem of the bn method, we propose a variable selection method based on the chi-square test . the proposed cst-based bn adopts the best-fit extension problem, which is commonly used in the pbn to effectively determine all possible relevant boolean functions. in our method, the maximum indegree of networks is assumed to be three. we also focus on the boolean functions that comprise three different literals . each literal is connected by the three boolean operators not, and, or; for example, f = x <dig> ∧ ¬x <dig> ∨ x <dig>  then, the time complexity of the cst-based bn reduces to o
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqaiyagmdaahaawcbeqaaiabikdaymaacaaameqabagaem4aasgaaaaakiabgwsixpaaqadabawaaabmaeaacqghfly1daqadaqaauaabeqaceaaaeaacqwgubgbdawgaawcbagaegomaijaeiilawiaemyaakmaemoaaogabeaaaoqaaiabdugarbaaaiaawicacaglpaaaasqaaiabdmgapjabg2da9iabigdaxaqaaiabd6gaunaabaaameaacqaixaqmcqggsaalcqwgqbgaaeqaaaqdcqghris5aawcbagaemoaaomaeyypa0jaegymaedabagaemoba4ganiabgghildaaaa@4ece@·m·poly), where n is the total number of genes, k is the indegree, m is the total number of time points, n <dig>  j is the number of first selected genes for the jth gene, and n <dig>  ij is the number of second selected genes when the ith gene is selected in the first step. we have found that the dichotomization of the continuous gene expression values allows us to efficiently perform the independence test for a two-way contingency table on each pairwise network mechanisms. we use the cst to identify genes that are associated with a target gene. a target gene would be expressed in accordance with a boolean function related to the selected genes. since the genes have only two levels, , we use  <dig> ×  <dig> and  <dig> ×  <dig> ×  <dig> contingency tables to identify the relationship between two and three genes respectively. the proposed method is used along with the best-fit extension problem. this method is described in detail in the methods section.

RESULTS
simulation study
for our simulation study, an artificially generated network structure is illustrated in figure  <dig>  it comprises  <dig> nodes and the maximum value of the indegree  is three. the network structure is composed of  <dig> boolean functions that are randomly generated from  <dig> nodes. forty sets of binary data are obtained sequentially from the network structure. each data set has different initial states and seven time points. since the data sets are generated from definite boolean functions, the genes in the boolean functions tend to have strong associations. the cst-based bn uses two thresholds α <dig> and α <dig> where α <dig> is used for selecting variables for the main effect and α <dig> is used for the conditional effect. a detailed description is provided in the methods section. the smaller the values of α <dig> and α <dig>  the stronger is the association of the variables. in order to select the nodes that have strong associations with the target nodes, we used very small cutoff values – α <dig> =  <dig> - e <dig> and α <dig> =  <dig> - e <dig> – for the cst-based bn. table  <dig> shows the result of the original bn and the cst-based bn for various noise levels. the random noise is added to the binary data generated sequentially by the boolean functions. for example, if the noise level is  <dig> %, a boolean function, which generates  <dig> when the noise level is zero generates  <dig> with a probability of  <dig>  and generates  <dig> with a probability of  <dig> %. since we have  <dig> time points  and  <dig> time lag, the total noise level of a gene is  <dig> % 301) when the noise level is  <dig> % in a boolean function. for the correction of the multiple comparison problem, we compare the results of the original bn and cst-based bn when the noise level of a boolean function varies from  <dig> % to  <dig> %.

* total number of boolean functions .

the cst-based bn method yielded the same estimated boolean functions as those obtained by the original bn method for various noise levels. however, there are large differences between the computing times. table  <dig> shows the selected number of nodes in the first and second steps of the variable selection method. the first column shows the node number. the second and third columns show the number of nodes in the first and second steps, respectively. each number in the third column, separated by a comma, is the number of selected nodes for each node selected in the first step. for example, in the second line of table  <dig>  there are two selected nodes in the first step. for these two nodes, there are  <dig> and  <dig> selected nodes in the second step, respectively. from the result of the variable selection , the ratio of the time complexities of the two methods can be obtained as follows:

time complexity of original bntime complexity of cst-based bn=o⋅n⋅m⋅poly)o⋅m⋅poly)=⋅n∑j=1n∑i=1n <dig> j⋅= <dig> 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqaaewabaaabawaasaaaeaacqqgubavcqqgpbqacqqgtbqbcqqglbqzcqqggaaicqqgjbwycqqgvbwbcqqgtbqbcqqgwbaccqqgsbabcqqglbqzcqqg4baecqqgpbqacqqg0badcqqg5bqecqqggaaicqqgvbwbcqqgmbgzcqqggaaicqqgvbwbcqqgybgccqqgpbqacqqgnbwzcqqgpbqacqqgubgbcqqghbqycqqgsbabcqqggaaicqqgcbgqcqqgobgtaeaacqqgubavcqqgpbqacqqgtbqbcqqglbqzcqqggaaicqqgjbwycqqgvbwbcqqgtbqbcqqgwbaccqqgsbabcqqglbqzcqqg4baecqqgpbqacqqg0badcqqg5bqecqqggaaicqqgvbwbcqqgmbgzcqqggaaicqqgdbwqcqqgtbwucqqgubavcqqgtaqlcqqgibgycqqghbqycqqgzbwccqqglbqzcqqgkbazcqqggaaicqqgcbgqcqqgobgtaaaabagaeyypa0zaasaaaeaacqwgpbwtcqggoaakcqaiyagmdaahaawcbeqaaiabikdaymaacaaameqabagaem4aasgaaaaakiabgwsixpaabmaabaqbaeqabiqaaaqaaiabd6gaubqaaiabdugarbaaaiaawicacaglpaaacqghfly1cqwgubgbcqghfly1cqwgtbqbcqghfly1cqwgwbaccqwgvbwbcqwgsbabcqwg5bqecqggoaakcqwgrbwacqggpaqkcqggpaqkaeaacqwgpbwtcqggoaakcqaiyagmdaahaawcbeqaaiabikdaymaacaaameqabagaem4aasgaaaaakiabgwsixpaaqadabawaaabmaeaacqghfly1daqadaqaauaabeqaceaaaeaacqwgubgbdawgaawcbagaegomaijaeiilawiaemyaakmaemoaaogabeaaaoqaaiabdugarbaaaiaawicacaglpaaaasqaaiabdmgapjabg2da9iabigdaxaqaaiabd6gaunaabaaameaacqaixaqmcqggsaalcqwgqbgaaeqaaaqdcqghris5aawcbagaemoaaomaeyypa0jaegymaedabagaemoba4ganiabgghildgccqghfly1cqwgtbqbcqghfly1cqwgwbaccqwgvbwbcqwgsbabcqwg5bqecqggoaakcqwgrbwacqggpaqkcqggpaqkaaaabagaeyypa0zaasaaaeaadaqadaqaauaabeqaceaaaeaacqwgubgbaeaacqwgrbwaaaaacagloagaayzkaagaeyyxictaemoba4gabawaaabmaeaadaaewaqaaiabgwsixpaabmaabaqbaeqabiqaaaqaaiabd6gaunaabaaaleaacqaiyagmcqggsaalcqwgpbqacqwgqbgaaeqaaagcbagaem4aasgaaagaayjkaiaawmcaaawcbagaemyaakmaeyypa0jaegymaedabagaemoba42aasbaawqaaiabigdaxiabcycasiabdqgaqbqabaaaniabgghildaaleaacqwgqbgacqgh9aqpcqaixaqmaeaacqwgubgba0gaeyyeiuoaaagccqgh9aqpcqai2agncqgguaglcqai4aaocqai4aaocqai2agncqai1aqnaaaaaa@f955@

in summary, the cst-based bn method was approximately  <dig>  times faster than the original bn method. if the network had a larger number of nodes , then the difference between the computing times of the two algorithms would be significantly high.

yeast cell cycle data
in order to demonstrate the improvement in the computing times, we apply the proposed variable selection method to yeast cell cycle data  <cit> . the data comprises  <dig> time points . in this example, the computing time and accuracy of network estimation of the original bn method are compared with those of our cst-based bn method.

comparison between the network structure estimation accuracies of the cst-based bn and the original bn
our variable selection method significantly improves the computing time of the bns. however, the accuracy of our method should be assessed before comparing the computing times of the two methods. the improvement in the computing times primarily depends on the cutoff statistical significance levels, α <dig> and α <dig>  for the selection of genes at time t -  <dig> via the cst . depending on the choice of appropriate values of α <dig> and α <dig>  the proposed cst-based bn method may not be able to determine some boolean functions that can be estimated by the original bn method. this may be attributed to the missing essential variables due to the usage of extremely stringent cutoff values.

we define the error rate as the discrepancy between the boolean functions estimated by the original bn and the proposed cst-based bn as follows:

error rate=1−number of number of      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqgfbqrcqqgybgccqqgybgccqqgvbwbcqqgybgccqqggaaicqqgybgccqqghbqycqqg0badcqqglbqzcqgh9aqpcqaixaqmcqghsisldawcaaqaaiabb6eaojabbwha1jabb2gatjabbkgaijabbwgaljabbkhayjabbccagiabb+gavjabbagamjabbccagiabcicaoiabdkeacjabdaeagnaabaaaleaacqwgpbwtcqwgybgccqwgpbqacqwgnbwzcqwgpbqacqwgubgbcqwghbqycqwgsbabcqwgcbgqcqwgobgtaeqaaogaeyykicsaemoqaikaemoray0aasbaasqaaiabdoeadjabdofatjabdsfaujabdkgaijabdggahjabdohazjabdwgaljabdsgakjabdkeacjabd6eaobqabagccqggpaqkaeaacqqgobgtcqqg1bqdcqqgtbqbcqqgibgycqqglbqzcqqgybgccqqggaaicqqgvbwbcqqgmbgzcqqggaaicqggoaakcqwgcbgqcqwggbgrdawgaawcbagaem4ta8kaemocainaemyaakmaem4zacmaemyaakmaemoba4maemyyaemaemibawmaemoqaikaemota4eabeaakiabcmcapaaacawljagaaczcamaabmaabagaegymaedacagloagaayzkaaaaaa@8af0@

where bforiginalbn and bfcstbasedbn are sets of boolean functions estimated by the original bn and the cst-based bn, respectively. three data sets with randomly selected  <dig>   <dig>  and  <dig> genes were used to compute the error rate. we have calculated the error rate for various values of α <dig> and α <dig> , and figure 4–). figure  <dig> shows the error rate when the error size of the best-fit extension problem is  <dig>  while figure  <dig> shows the error rate when the error size is  <dig>  in each plot, the y-axis represents the error rate and the x-axis represents the value of α <dig>  the error rate decreases with an increase in α <dig> and α2; this implies that a less conservative cutoff value would be more suitable to construct a bn.

in order to select appropriate values of α <dig> and α <dig>  the error rates were obtained for various combination of . some of the results are shown in figures  <dig> and  <dig>  to obtain an error rate of zero, the values of α <dig> and α <dig> should be greater than 1% and 2%, respectively, when the error size is zero ,). however, when the error size is one, larger values of α <dig> and α <dig> are required to obtain an error rate of zero –). based on these results, we suggest that the following values be used when the error size is  <dig>  α <dig> = 1%, α <dig> = 2% and when the error size is  <dig>  α <dig> =  <dig> %, α <dig> = 10%.

comparison between the computing times of the original and the proposed bn algorithms
in order to compare the computing times, we executed the bn program based on the best-fit extension problem . figure  <dig> shows the computing times with a change in the number of genes from  <dig> to  <dig>  we set the value of error size in the best-fit extension problem as  <dig> and  <dig> and used the variable selection criteria α <dig> = 1%, α <dig> = 2% and α <dig> =  <dig> %, α <dig> = 10%, respectively. the line with circles represents the computation time of the original bn. the dotted line with rectangles and the dashed line with triangles represent the computation times of the cst-based bn when the error size are  <dig> and  <dig>  respectively. as shown in figure  <dig>  the original bn required  <dig>  s to estimate all boolean functions with  <dig> genes for k =  <dig>  on the other hand, the proposed cst-based bn required only  <dig>  s for α <dig> = 1%, α <dig> = 2% and  <dig>  s for α <dig> =  <dig> %, α <dig> = 10%. therefore, the overall computation times of the proposed cst-based bn are approximately  <dig>  times  and  <dig>  times  faster than those of the original bn method.

construction of gene networks with yeast cell cycle related  <dig> genes
we also applied the cst-based bn to the subset of the yeast cell cycle data with  <dig> genes  <cit>  for demonstration. figure  <dig> shows a partial structure of the gene network structure constructed by using the cst-based bn. the best-fit extension problem provided several boolean functions for a gene at time t. for the demonstration, we randomly selected a boolean function from the estimated boolean functions of each gene; the method used for this purposed was similar to that used by the pbn  <cit>  to select a set of boolean functions for a given gene using the coefficient of determination .

for all  <dig> genes, the cst-based bn required approximately three days to construct the network structure. in order to estimate the total computation time of the original bn, we selected the first target gene and constructed the bn, which required approximately  <dig>  s. therefore, the total computation times for all  <dig> genes will be approximately  <dig> days to build the network structure. hence, the computing time of the proposed cst-based bn method is approximately  <dig> times faster than that of the original bn method.

discussions and 
CONCLUSIONS
recent studies  <cit>  have emphasized that thousands of genes must be considered simultaneously in order to construct gene regulatory networks in an organism. the bn method is useful for constructing a gene regulatory network. if the gene expression data contain a considerable amount of noise, the binary transformation of these data can reduce the error  <cit> . the bn has been successfully used to model a nonlinear system  <cit>  and the dynamic behavior of living systems  <cit> . despite these advantages, it is difficult to apply the bn method to large-scale gene regulatory network studies due to the extremely high computation times.

in order to overcome this computational drawback, we proposed the variable selection method using the cst for the two-way and three-way contingency tables of boolean count observations. this method reduces the computation times significantly; for example, for  <dig> genes, the computation time is approximately  <dig>  times faster than that of the original bn method. if the total number of genes and the value of k increase, the improvement in the computation time is expected to be significantly greater than the original bn method. also the proposed method can be easily implemented with the existing bn modeling algorithms such as the pbns by efficiently selecting only the most relevant genes for determining the boolean functions. this method is thus demonstrated to reduce the false positive rate, which is an important problem in network studies conducted on a genome-wide scale.

in our method, the value of k is assumed to be three. however, it is possible to use a large value of k greater than  <dig>  since our method uses the best-fit extension problem, a gene can be controlled by more than one boolean function. therefore, it appears that k =  <dig> provides a large number of boolean functions that can model the gene regulatory network successfully.

the proposed cst-based bn used the two-step discovery of 3-indegree boolean functions because the prediction information of addtional genes in such high-dimensional boolean functions is mainly observed after considering, or conditional on, primary genes' effects. this strategy, in turn, resulted in much more efficient discovery of the most predictive high-dimensional boolean functions in our bn modeling.

the result of the proposed cst-based bn may be sensitive to the sample size n. when n is small, the contingency table may contain many cells with low and zero frequencies. to ensure that the expectation value is not equal to zero, a continuity correction is used by adding a small constant  <dig>  to the observed frequency in each cell  <cit> . this simple correction produces a successful result in the real data set  <cit>  that contains  <dig> time points. however, we should be more careful while applying the cst method to data with small time points because the result of the cst can be less reliable for the sparse data set. in this case, we suggest that the cst be replaced with fisher's exact test that provides a more reliable result for the small sample size data  <cit> . the small sample size problem also makes it difficult for the original bn algorithm to produce a reliable result. we think that in the near future the advancement of high throughput techniques and the cost-down of microarrays will enable us to solve the sparse data problem by producing large data sets easily.

the improvement of the computing times using the cst-based bn will significantly increase the utility and applicability of the bn to the inference of various regulatory networks, particularly those based on current large screening biological data such as microarrays. in order to apply the proposed variable selection method, we must first select the values of α <dig> and α <dig>  a small values of α cause the exclusion of essential boolean functions and produces a high error rate. on the other hand, large values of γ cause the inclusion of most of the genes, thereby resulting in long computing times. for the yeast cell cycle data, we applied various combinations of . as shown in figure  <dig>  it appears that the cutoff values do not significantly affect much the accuracy of the method for the yeast cell cycle data, provided the values of α <dig> and α <dig> are greater than 1% and 2%, respectively, when the error size of the best-fit extension problem is zero.

therefore, for practical application, we suggest that α <dig> = 1% and α <dig> = 2% be used when the error size of the best-fit extension problem is zero. we select the cutoff values such that the boolean functions obtained by the cst-based bn are the same as those obtained by the original bn. however, we can use smaller cutoff values to reduce the number of false positive boolean functions, because the original bn method tends to yield many false positive relationships, as shown in the simulation result.

in addition, a more careful dichotomization is required for a more accurate biological interpretation of the network structure. for example, since microarray data have continuous expression values with a considerably large amount of information, the dichotomization may require the selection of an appropriate threshold value depending on the biological function of each gene  <cit> . the performance may not be remarkable when a small number of time points and genes are available. however, we show that the proposed variable selection method is significantly more efficient for large-scale gene regulatory network studies. for example, the cst-based bn is approximately  <dig> times faster than the original bn for  <dig> genes .

the next step would be to perform a biological evaluation of the selected network structure. however, the main focus of our study is to improve the computation times of the bn by using the cst. our approach allows the application of the bn to genome-wide network construction and discovery. a future study will evaluate the accuracy of the bn and compare it with other network methods such as the bayesian network and hierarchical scale-free network.

