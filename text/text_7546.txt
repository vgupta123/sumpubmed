BACKGROUND
metagenomics is the study of dna sequence data from genomes of the microbial community  associated with an environmental sample. these data can provide previously unattainable insights into the types of microorganisms that make up a system and the processes that they mediate. metagenome sequencing has changed our understanding of energy metabolism in the oceans  <cit> , biomass degradation in the gut of termites and cows  <cit> , microbial bioremediation of metals and hydrocarbons  <cit> , and the human microbiome  <cit> , but its power has been limited by the difficulty to explore microbial communities at multiple levels of granularity to gain a systems-level understanding of their role in the habitat.

metagenome datasets are produced by shotgun sequencing  <cit>  after which individual sequence reads are usually assembled, annotated, and assigned to individual organisms. de novo assembly of sequence data provides improved accuracy of sequences by removing most random sequencing errors and results in longer and more specific contigs than found in unassembled sequencing reads  <cit> . assembly – the process of combining sequence reads into contiguous stretches of dna  – is based on sequence overlap between reads  <cit> . the consensus sequence for each contig is either based on the highest quality nucleotide in the aligned reads at each position or based on majority rule. the number of reads underlying each consensus base is called “depth” or “coverage”. coverage serves as an indicator of both the quality of the assembled sequence and the abundance of the organism from which it derives. these assemblies are extremely challenging to analyze because they contain sequences from many organisms at different abundance levels, usually combined into a single file that may contain hundreds of thousands of contigs, which lack meaningful context. phylogenetic prediction and annotation usually follow the assembly process: each contig is scanned for known dna features  which are assigned to putative functions and taxa using homology based prediction methods .

visual analysis of metagenome data at the level of gene, genome, and ecosystem is of critical importance due to the huge volumes and complexity of the data produced, yet relatively few interactive visualization tools are specifically geared toward microbial community data. several visualization tools or packages exist for microbial community data, but most  focus on phylogenetic profiling using 16s rrna or other marker genes. others visualize coverage data integrated with alignment information  or comparative analysis of complex metagenome data , but produce mostly static images. these tools, as well as current non-visual metagenome analysis platforms, treat metagenomes essentially as low quality genome and annotation data. adding consideration of the rich information on organism abundance and adaptation conveyed by contig  sequence depth and heterogeneity  <cit>  offers multiple advantages. to explore the relationships among these metadata  investigators must still create a static plot, which, using conventional methods, requires time-consuming manual steps. changing display parameters or exploring different relationships within the data requires repeating these steps. this process is slow, and it requires that the investigator knows exact questions to ask beforehand.

to facilitate comparative metagenomics analyses, we designed a web-based interactive tool, elviz, that eliminates time-consuming manual step in the analysis of metagenome assemblies. elviz enables the interpretation and visual exploration of assembled metagenome data, including sequence composition, assembly metrics, preliminary functional predictions, and phylogenetic affiliations. integration of this information can aid in quickly defining microbial community structure and retrieving sequences and annotations of specific subsets of the data. these capabilities create a true discovery tool that allows for the recognition of phenomena before they can be quantified. similar recognition tools have been revolutionary for other data-intensive fields  and while elviz has been developed to address questions predominately relevant to microbiologists and specifically to provide the infrastructure necessary to explore metagenome datasets, most of the framework, libraries, and user interface of elviz can also be utilized for visualizing data from areas other than microbiology.

implementation
elviz architecture
elviz is a web application, written primarily in angularjs, javascript, and webgl, and nearly all of the logic and computation occurs on the “client” side, in the browser. users can load their own data into elviz or explore metagenome assemblies created at the joint genome institute  and provided through the “server” side of elviz, a thin rest server, written in java, that sends data to the client in json or tabular text format.

web browser vendors have put great effort into making the web platform a viable environment for fully featured applications that previously were squarely in the domain of the desktop operating system. this creates the opportunity to develop tools that harness the benefits of the internet  while preserving the computational power and graphical interactive interfaces that were previously limited to the desktop environment.

elviz takes advantage of two recent technological developments that have greatly accelerated the ability to create rich, efficient, and interactive visual tools on the web, namely webgl  and html <dig>  in particular the localstorage api .

webgl is a web-based implementation of the gl framework, which allows a web application to execute graphics commands using the client computer’s graphical processing unit . the gpu is specialized hardware for graphics processing, with most graphics cards now supporting hardware-accelerated 3d rendering. elviz uses this capability to increase the number of objects  that can be displayed and manipulated in a responsive fashion. elviz also leverages the wide variety of advanced visual effects available in the webgl api to differentiate selections and show varying data parameters. the localstorage api provides access by the browser to the native file system. with the ability to store and access files on the user’s computer, an application can minimize expensive transfers of data between the server and the client. additionally, this enables the local exploration of private datasets. localstorage also offers the possibility of caching remote datasets so that the user can revisit work in progress without retrieving information from the server.

elviz has been successfully tested with google chrome, mozilla firefox, and opera on os/x and windows, with internet explorer  <dig> on windows, and with safari on os/x.

the elviz graphical interface
the elviz interface is comprised of two primary components:  an interactive bubble-plot displaying metagenomic contigs , and  a floating panel of controls  for configuring and manipulating the plot .figure  <dig> the elviz interface. a. the bubble-plot displays assembled contigs. the floating “application tools” panel in the upper right controls plotting parameters. b. “application tools” are shown with two different panels expanded. the legend panel  controls the coloring and highlighting of different data groups in the plot. here, contigs predicted to belong to flavobacteriaceae and anaerolinea thermophilia are highlighted. the plot controls panel  controls axis selection, plot navigation, and data filtering.



the plot and the legend panel
each point in the elviz plot represents a single contig of the assembled metagenome. points are displayed along four user-controllable dimensions: x-axis, y-axis, point size, and point color. for instance, in figure 1a, gc content is plotted on the y-axis while “ave. fold coverage” – a measure of contig abundance – is plotted on the x-axis. the color of each point indicates the predicted taxonomic assignment of the contig  while the point size is proportional to the length of each contig. the particular choice of parameters in this example is designed to support a visual assessment of the quality of taxonomic assignments in the sample. contigs that derive from genomes of the same organism should have similar gc content and read coverage as compared to contigs that derive from separate organisms. thus, if contigs of a particular color cluster together over these axes , the corresponding taxonomic assignment is corroborated.

the legend panel allows the user to hide, highlight , and specify colors for contigs assigned to specific phylogenetic groups. these groups can be specified in a variety of ways, as will be described later. in addition, hovering the mouse over legend entries temporarily highlights the corresponding points in the plot, allowing for quick identification.

with jgi metagenomes, such as the example shown in figure  <dig>  colors are assigned for a finite set of phylogenetic classifications. this set is determined by an algorithm run during preparation of the datasets that determines the taxonomically “deepest” set of 25– <dig> taxa that can account for all of the contigs. the complete phylogenetic classification for each contig is, however, preserved in a metadata field called “complete lineage” which can be seen when hovering the mouse over a contig . this field, like all other contig metadata, is scanned when using search , making it possible to locate the set of contigs belonging to a taxon at any phylogenetic level.figure  <dig> exploring individual contigs. a. when the mouse moves over contig_ <dig> in the plot, a panel appears showing all of the metadata for this contig. b. clicking on the contig brings up the contig detail viewer. here the user can explore gene annotations on the contig, navigating with the slider at the top of the panel. red and black glyphs represent predicted gene models in forward and reverse orientation respectively. the yellow-filled gene model is currently selected. details for this annotation appear in tabular form, including the feature name and position, and predicted cog and pfam classifications.



plot interaction and navigation
the ability to distinguish and visually separate points or groups of points within a dense and overlapping plot represents a central challenge in the visualization of large datasets. elviz provides a number of features, including plot navigation, filtering, and search, that help to identify contigs of interest.

the elviz plot can be navigated with mouse operations as well as through the “plot controls” panel . zooming and panning are accomplished by using the mouse scroll wheel and by click-dragging within the plot, respectively. the same result can be accomplished by setting the boundaries of the axes using their respective sliders. sliders for variables other than the x- and y-axis operate as filters, which allow the user to reduce visual noise  in the plot or to focus only on contigs within specific parameter ranges.

within the plot, hovering over any contig brightens this point and displays a panel showing the details of the given contig. when using elviz with jgi projects, clicking on a point opens the “contig detail viewer” in which the user can navigate along the contig to explore predicted genes and other functional annotations .

contigs on the elviz plot are searchable. figure  <dig> shows the results of using the “search controls” to locate contigs containing a particular pfam annotation. matching contigs appear as black-outlined circles in the plot and are presented in two tables. the first table shows hit counts for each “group”, which can be shown or hidden using the associated check boxes. the second table lists the individual contigs. when viewing jgi projects, clicking on these contigs will bring up the contig detail viewer.figure  <dig> elviz search. a. contigs containing one or more of eight pfam domains from the mtr gene  are identified using search, appearing as solid circles ringed in black. point color still represents predicted phylogeny  creating a ready visual indication of the distribution of search results across taxa in the sample. b. because “emphasize mode” is checked, contigs containing search terms are emphasized and others de-emphasized. c. d. search result tables present the distribution of contigs with hits across taxa and a count of hits within each contig.



via the “download panel”, elviz supports the export of subsets of contigs from search or visual selection  in a variety of formats, including csv, and, when available for jgi datasets, gff  and fasta .

case study: metagenomics of the santa barbara channel oil seep
here we demonstrate the use of elviz to investigate the metagenome of the microbial community associated with natural crude oil that seeped into the santa barbara channel  <cit> . the assembled metagenome contains a total of  <dig>  contigs  of which  <dig>  are at least 1 kb long and only  <dig> exceed 50 kb in length. this dataset is publicly available for exploration with elviz at: http://genome.jgi.doe.gov/viz/plot?jgiprojectid= <dig>  a download link for this dataset is also provided at the beginning of the “upload” section of help  in order for users to try out the various features of custom data upload.

looking at the plotted gc vs. read coverage for this dataset, the users’ eyes are immediately drawn to the putative bacillales point, contig_ <dig> , which is both very large  and noticeably over-represented in the sample . clicking on this contig brings up the “contig detail viewer” , allowing us to explore predicted gene models and functional annotations in the sequence. contig_ <dig> contains a large fraction of cds encoding hypothetical proteins and it is also flanked by cds that are predicted to encode phage proteins . it is possible that this contig represents a mobile genetic element composed of individual modules derived from various microbial sources, which might explain the unusual average fold coverage. a more detailed analysis of this contig and its genetic content would be essential before a final conclusion of the contig’s origin and its potential viral nature could be established. using the export feature we could obtain this contig’s sequence and examine it in further detail.

prior to examining this assembly with elviz, we identified the presence of key genes for anaerobic methane oxidation  within this community, a form of reverse methanogenesis that is energetically favorable when coupled to sulfate reduction. we hypothesize that this microbial activity is of importance for methane  biofiltration during which significant amounts of the ch <dig> released from the seafloor are converted into the less potent greenhouse gas co <dig>  <cit> . by analyzing the same data with elviz one is able to quickly assess the phylogenetic distribution of these genes across the sample and to explore the gene content of each of the contigs containing them. we begin by searching the assembly for contigs that contain pfam domains associated with amo  and conserved in enzymes encoded by fmd, ftr, mch, mtd, frh, mtr and mcr . entries for mer and hdr were not available from the pfam database  and were therefore not included in our analysis. from the assembled  <dig>  contigs, we identify a total of  <dig> contigs that contained one and  <dig> contigs that contained two or more conserved regions associated with one of the seven amo/methanogenesis key enzymes. twelve of the contigs with two or more amo/methanogenesis key enzymes were assigned to the euryarchaeota, the phylum that contains the only two phylogenetic groups  reported to be capable of amo  <cit> . while these enzymes could also potentially mediate methanogenesis, the homologs in this particular community are most closely related to those in anme genomes . using the download function in the project resources panel  we exported a csv file of the contigs identified in the search  for further analysis. the archaeal contigs with amo/methanogenesis key enzymes can be assigned to six distinct genome bins using their average fold coverage and gc content. additional file 1: table s <dig> summarizes the properties of the contigs that contain a pfam domain associated with amo/methanogenesis and that were identified during this study. contig bins and their assigned contigs are listed in additional file 1: table s <dig>  using elviz, these results were generated within a short period of time and may now provide the basis for more detailed analyses of the genomic repertoire of this metagenome and some of larger genome bins within it.

elviz data
a number of metagenomes produced by doe’s jgi and annotated in the integrated microbial genomes with microbiome samples  database  <cit>  are currently accessible for exploration in elviz. these projects can be browsed via the “projects” link at the top of the application.

in addition, users can import their own metagenomic assemblies and annotation into elviz in an easy and highly customizable fashion using the elviz upload wizard. the user simply provides a tab or comma delimited metadata file in which each row represents a contig and each column defines a feature  of the contigs. column headings must be located in the first row of the table. after uploading the file, the elviz upload wizard guides the user through a process of assigning columns in the data to the contig id, and default x-axis, y-axis, and point size properties of the plot . in this step the user also specifies which columns should be included in the upload. elviz will automatically assign numerical columns not assigned to plot properties, as “filter” parameters, for which a filter slider will be created. all parameters marked as included  will be displayed in contig popups.

next, the wizard asks the user to name the column to be used for point color and the method by which the color should be assigned. in the simplest case, the selected column contains ordinal names  to which colors can be assigned. in the case of columns containing quantitative values, elviz supports  statistical binning of these values, with a single color then assigned to each bin or  creation of a “heat map” such that each point in the plot will be colored along a gradient representing the range of values in the chosen column.

finally, the wizard provides the user with the option to load annotation data corresponding to the contigs in their dataset. annotation files are accepted in gff format.

the user is also given the option to store uploaded data securely and privately on jgi’s elviz server, provided that a login with the jgi is created. this will allow the user to revisit the imported project later from any computer without having to repeat the upload.

RESULTS
data-intensive fields are often limited by the ability to extract meaning from large datasets. easily maneuverable software to process and visualize biological  data is critical to leveraging biological meaning from the “omics” datasets now generated in large amounts by thousands of individual investigators around the world. elviz is a general-purpose tool for visualization of multidimensional data with a set of features that make it of particular value for a visual and efficient exploration of metagenomic data. in addition, elviz allows one to explore and mine private as well as already published databases. in the example illustrated above, a simple assessment of a metagenomic data set comprised of  <dig>  contigs totaling ~ <dig> mbp generated an instant picture of the distribution of function and phylogeny across the sample, and the immediate visual identification of outliers. this exercise required no bioinformatics expertise or software configuration beyond using a computer with a web browser. with the ability to search and export data from the tool, it was possible to further investigate hypotheses generated from visual exploration with statistical means.

the interface and backend of elviz are a platform from which a wide range of exploration capabilities will be added in the future. many metagenomics research projects involve the collection of multiple samples, either from different environments or as part of time series surveys in order to understand dynamics of microbial communities in natural and laboratory conditions. hence we have identified comparative metagenomics as the most critical next direction for elviz, and we are currently looking into ways to efficiently visualize the similarities and differences among two or more metagenomic assemblies. additionally, we recognize a need to integrate metagenomics data with complementary “omics” datasets . we are thus exploring methods for visually overlaying these modalities onto assembly data.

CONCLUSIONS
the versatility of elviz will facilitate metagenomic analyses that would otherwise require extensive bioinformatic skills and a substantial infrastructure, both not readily available to many individual principal investigators. elviz thus represents a valuable contribution to the scientific community, in particular to the field of microbiology and microbial ecology.

availability, requirements, and performance
elviz is freely available at http://genome.jgi.doe.gov/viz. elviz requires a computer containing a graphical processing unit  compatible with webgl rendering in the browser  and runs in web browsers that support webgl, including chrome v31+, firefox v35+, and ie v.11+ . safari, which currently has only partial support for webgl, is not recommended for use with elviz. we have successfully tested elviz using chrome, firefox, and opera in mac os/x, internet explorer in windows, and firefox and chrome in linux operating systems. with fairly large datasets , we find that the initial load of the elviz plot takes from 3– <dig> seconds over a dsl or broadband connection . subsequent loads of the same project take 2 seconds or less when the project has successfully been cached on the client using localstorage.

additional file
additional file 1: table s <dig>  genomic features of contig_ <dig>  table s <dig>  features of contigs containing key enzymes for amo/methanogenesis. table s <dig>  archaeal genome bins involved in methane oxidation/methanogenesis.



michael cantor and henrik nordberg contributed equally to this work.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

id and st designed the study. mc and hn devised the algorithms and developed the software. ts provided graphic and user interface design. st and mh designed biological experiments and interpreted results. id, st, mc and hn wrote the manuscript. the final version of the manuscript is approved by all authors.

