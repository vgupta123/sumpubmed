BACKGROUND
much progress has been made in next generation sequencing  data analysis. more and more geneticists are introducing this technology in their routine work to exploit a wide, cost-effective approach in identifying and studying genetic variants across the genome. whole-genome and whole-exome sequencing are widely used to investigate these variants as cause of rare and complex diseases. handling genome or exome data is a powerful opportunity but not poor in challenges, due to technical difficulties in managing such big amounts of data. transforming raw sequence reads into meaningful information might be a tough task, especially for small labs. although exome sequencing reports much less variants compared to genome sequencing  <cit> , the output coming from the entire pipeline of variant calling is a huge vcf  file containing hundreds of thousand rows. the vcf file contains both single-nucleotide polymorphisms  and small insertions and deletions , annotated using several variants identification tools, such as annovar  <cit> , snpeff  <cit> , anntools  <cit> . these software provide several information such as the affected genes, the effects of the variants at the level of the protein products, or the minor allele frequency. however, they do not support any further investigation aimed to identify genes significant to the topic of study. to give a biological meaning to the obtained data, the scientist needs to filter the relevant information from hundreds of thousands of snps and indels called, since only a subgroup of variants is pertinent to the given domain of interest  <cit> .

a large amount of scientific literature proves that the gene ontology , from the gene ontology project  <cit> , is an invaluable source of the most sophisticated meanings of biological systems available to scientists  <cit> . go annotations provide a bridge between the gene product and its function, its cellular localization and the biological processes in which it is involved. this knowledge is organized into three different go ontologies: molecular function, cellular component and biological process, respectively. we focused on the go annotation as a structured, precisely defined, common, controlled vocabulary for describing the roles of genes and gene products in any organism  <cit> .

many tools have been developed to annotate lists of genes in terms of the biological role of their products, and to filter the huge vcf variants lists. however, they often require advanced computational skills for both the installation process and their usage  <cit> . when a web service is available, as in  <cit> , usually only a list of genes is given in output, thus requiring further processing to match the initial data with the list of new annotations. this is an essential step to retain all the information collected during the pre-processing steps , since they might be used to better investigate among variant features and obtain more reliable results.

as a consequence, the initial variant list is often greatly reduced by applying simple filtering criteria such as variants effect prediction, novelty and genotype. while this approach might help in reducing the size of the data, it greatly increase the risk of losing meaningful pieces of information.

examples of available tools for gene annotation include: gogene  <cit> , which is conceived to allow gene annotation through go and mesh  vocabularies. it requires a list containing gene names/identifiers as input. the output list with annotation is easily viewable by the web interface, but, although the links to export the list in different file formats are provided, they do not seem to have any content. furthermore, it does not work with input list containing more than  <dig> genes; annokey  <cit> , which is usable exclusively from command line and it has a gene number limit in online mode; snp2go  <cit> , which is an r package, hence requiring the user to have programming skills. moreover, it is not available for all the recent r versions .

other software are conceived to allow the direct interaction with the variant table to apply filtering strategies: gemini  <cit> , kggseq  <cit> , plink/seq  <cit> , which are more focused on variant rather than gene annotation, and all exclusively usable from command line. one available tool for visualizing annotated sequence variants and interacting with the vcf input file is sva  <cit> , which requires high-performance workstations or servers to properly work. other available software include vcf-miner  <cit>  and eva  <cit> , but both of them need the installation of a complete web stack as a prerequisite. the most user-friendly tool is varsifter  <cit> , a java-based software which requires a minimal installation. however, it can be mainly used as a filtering tool, since it does not offer further annotation features.

to support the researchers in the process of annotating and filtering all the variants obtained from sequencing experiments, we have developed a web-based tool named var2go. to the best of our knowledge, var2go is the first web tool which permits to upload a complete raw variants file, to annotate both the variants and the related genes, and filter them in an interactive way, obtaining a reduced file with all the needed information. var2go accepts as input either a raw vcf file or a tab-delimited annotated table with a maximum size of  <dig> mb. in the first case, the user must select the reference genome for the variant annotation . the vcf file is annotated using the snpeff  <dig>   <cit>  which produces a new vcf file in a format compliant with the latest annotation standard. after, the resulting file is converted in table format using snpsift  <cit> . snpeff annotates more than one transcript for each gene variant. we decided to keep and show the most relevant one, based on the selection strategy described in the software documentation available at the snpeff website  <cit> . instead, when uploading a file in table format, the user must select the species of interest and the fields containing the essential information . var2go extracts the annotations for each gene among the three go ontologies, and creates on the fly a relational database in which all the fields of the table and the relative content are stored. through the web interface, it is possible to specify a list of key terms  considered by the user as pertinent to the specific topic of study. furthermore, var2go permits to dynamically interact with the input table applying filters to the information contained into the columns. lastly, it is possible to select columns to be included in the resulting output file.

implementation
the var2go web interface is implemented using the php language on an apache webserver. javascript and jquery are used for client side programming. the plupload  <dig> . <dig> plugin  <cit>  is used to manage chunked transfers of large files. the input file pre-processing and the on the fly database building steps are implemented using the perl language and a mysql dbms . variants annotation are obtained through snpeff  <dig>   <cit> . table conversion is performed using snpsift  <cit> . annotation from go are fetched using the online mysql service provided by the go consortium. the main page of var2go website allows the user to select the file to upload. the input file must be either a raw vcf or a tab-delimited table file. the user will be asked to specify some details on the uploaded file. for the raw vcf the assembly version should be provided. for the table file, the user must choose the species among the common ones used by go. moreover, the user must select which column headers contain relevant data: the chromosome id, the starting position of the variant, the reference sequence, the alternative sequence, and the gene name. these information are mandatory and essential for the correctness of the subsequent elaboration.

it is also possible to choose whether to convert the gt  characters into hom/het/homref nomenclature by a pre-processing step. after the database creation, the user can visualize the loaded data and specify the keywords and filters to use, using dropdown lists. the query is built using the specified filtering criteria on the columns content and keywords connected by selecting boolean operators.

after the annotation and filtering processes are complete, the user can download the resulting table in a tab-delimited format. if the variants annotation step is requested, two gzip files, one for the complete table and one for the relative transcripts info, are available for downloading. furthermore, it is possible to download the entire database created by var2go. this option has been thought for users who have more advanced computational skills and can store the information ready to be filtered and parsed.

RESULTS
var2go has a simple and user-friendly interface . the users is guided through the few steps needed to upload and create the database. after, the choice of the filters and key terms can be performed using a very intuitive approach. results can be downloaded either as a simple tab-separated file or as a complete database, for more experienced users. the usefulness of var2go is tested on a data set coming from an exome sequencing experiment.
fig.  <dig> screenshot of the result page of var2go webapp. top left: "query filter" area. the user defined filtering criteria are shown. bottom left: "results" area. the genes satisfying the filtering criteria are shown. the name of the gene symbol, the number of associated variants and go annotations are reported. the total number of retrieved genes is given at the bottom of the table . bottom right: gene details area. when a gene is selected from the "results" area, its details appear here. two tables are shown, one concerning the go annotation and the other one containing some basic information on each associated variant. clicking the "view details" button a new page will show the whole detailed information. top right: download area. the downloadable files are shown




case study: glycogen storage disease exome sequencing
we used an exome sequencing dataset coming from a variant discovery study on a family with polyglucosan body myopathy  <cit> . polyglucosan body myopathies  are a group of glycogen storage diseases  which affects almost exclusively the striated muscle  <cit> . the glycogen storage disease are rare inherited metabolic disorders caused by malfunction of enzymes involved in synthesis or degradation of glycogen  <cit> . there are over  <dig> different types classified accordingly to the involved enzyme and affected tissue. since exogenous glucose is metabolized and stored in the liver and skeletal muscle, these are the two most involved tissues  <cit> . the dataset we used was composed of samples coming from three affected relatives  who presented a late-onset pgbm. the vcf file was obtained through a variant calling pipeline performed by the authors. snpeff  <cit>  and annovar  <cit>  tools were used to annotate each called variant in terms of amino acid change, gene name, functional class, impact, frequency in nhlbi exome variant server   <cit>  and  <dig> genomes project  <cit> , and causative effects by the sift prediction algorithm  <cit> . the annotated vcf file was then converted to a tab-delimited format by variantstotable, a walker of the genome analysis toolkit   <cit> . the table, composed by  <dig> columns reporting variant information obtained from both calling and annotation steps, and  <dig> variant rows, was uploaded to var2go. we filtered the variants by several annotations, such as esp  <dig> allele frequency, vqslod filter , snpeff functional class, genotype and depth of coverage. in detail, we asked var2go to retain not silent variants which passed the vqslod filter, had a esp  <dig> minor allele frequency smaller than  <dig> , a depth of coverage per sample greater than  <dig>  and were in common to the three samples. applying these filtering criteria we obtained a table containing  <dig> genes, less than  <dig> % of the initial list . in order to narrow the search to the genes which had functionality related to the topic of interest, we applied a filter to the go annotation field by typing the following keywords: ‘gluc’ , and ‘glyco’ . the resulting table contained  <dig> genes, each with more than one variant called and multiple go annotations. then, we applied a filter also to the field of the  <dig> genome allele frequency  and we obtained  <dig> genes. at this point, the reduced table was ready to be downloaded and easily handled and interpreted. the reduced size of the resulting gene list allowed to retrieve additional information from pathway and/or gene-disease association studies, using, for example, the database for annotation, visualization and integrated discovery   <cit> . the submission of our list to this resource and the selection of kegg  <cit> , biocarta  <cit> , reactome  <cit> , omim  <cit>  annotation categories, resulted in  <dig> chart records ranked in according to the p-value. the most significant term was ‘react_474:metabolism of carbohydrates’ from reactome, enriched by  <dig> genes and with a fold enrichment score of  <dig> . at this point, we better investigated these  <dig> genes and we found that  <dig> of them are associated to glycogen storage disease as reported by the human phenotype ontology project   <cit> , namely ldha, phkg <dig>  eno <dig> and gyg <dig>  hence, the use of var2go allowed to easily find the gyg <dig> variant, confirming the result obtained by fanin et al.  <cit> . handling a reduced list of genes permits to better exploit the available knowledge and the online resources, thus to deeply investigate the variant genes without losing precious information. moreover, besides known disease genes, var2go allows to explore variants in genes which may be involved in the pathophysiological process.

CONCLUSIONS
we developed var2go to support researchers in handling and interpreting gene variant data obtained from high-throughput sequencing experiments. thanks to an user-friendly and web-based interface, this tool allows to annotate, filter and search large variant files with a small effort from the user and no programming skills or computational resource required, except a modern browser. few easy steps are needed to reduce the initial table to variants having the desired quality and features, and to genes having ontology terms related to the domain of interest. we are currently working to add the hpo annotation for human genes, and more genomic databases to allow the variants annotation of different species. further, we are planning to provide var2go as a cloud app in order to improve performance and allow the processing of larger files.

availability and requirements

project name:var2go;project home page: http://www-labgtp.na.icar.cnr.it/var2go
operating system: platform independent.programming languages: perl, php, java-script, jquery, css, html5;other requirements: a javascript-enabled browser is required;license: gplv3;any restrictions to use by non-academics: no.

abbreviations
ngsnext generation sequencing

vcfvariant calling format

snpssingle nucleotide polymorphism

indelsinsertion and deletion

gogene ontology

dbmsdata base management system

gtgenotype

hom/het/homrefhomozygous/heterozygous/homozygous reference

pgbmspolyglucosan body myopathies

gsdsglycogen storage diseases

ldhalactate dehydrogenase a

phkg2phosphorylase kinase gamma 2

eno3enolase 3

gyg1glycogenin 1

