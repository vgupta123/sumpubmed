BACKGROUND
type ii crispr/cas adaptive defense systems employ a single, large multi-subunit endonuclease  and a pair of rnas that as a complex mediate sequence-specific targeted cleavage of foreign dna  <cit> . this system has been repurposed into a powerful two-component system ) for targeted genome editing  <cit> . the cas9-sgrna complex is straightforward to target to a desired dna sequence because sequence-specific recognition is achieved primarily through watson-crick pairing of the associated sgrna. the short protospacer adjacent motif , which is recognized by the cas <dig> protein, is the chief constraint on the target site design density within a genome, although the activity of the cas9-sgrna complex is influenced by both target sequence composition and biological features  <cit> . because of its simplicity and efficacy, this technology is revolutionizing experimental approaches in the biological sciences and holds tremendous promise for therapeutic applications  <cit> .

cleavage of unintended sequences within the genome is one concern associated with the therapeutic application of crispr-cas <dig> nucleases  <cit> . s. pyogenes cas <dig> -based nucleases can cleave an imperfect heteroduplex formed between the guide sequence and a dna sequence containing a functional pam , where the number, position and type of base mismatches impact its level of activity  <cit> . deep sequencing analysis of potential off-target sites  from populations of spcas9-sgrna treated cells revealed that the majority of mismatched sequences are not appreciably cleaved, but that a subset of these “off-target” sites are functional , where up to six mismatches  <cit>  or a single base bulge  <cit>  between the guide and genomic sequence can be tolerated under some conditions. to address this inherent promiscuity, spcas <dig> variants with improved precision have been developed  that can dramatically reduce off-target activity. in addition, other cas <dig>  <cit>  and cpf <dig>  <cit>  orthologs have precision that is comparable or superior to spcas <dig>  despite these advances nuclease precision is still target site dependent. consequently, for therapeutic applications an unbiased assessment of genome-wide nuclease activity is warranted, since dna breaks at unintended sites could alter gene expression or gene function through direct mutagenesis or genomic rearrangements .

a new suite of genome-wide off-target detection methods have been described that can identify genomic sites with moderate to low cleavage activity within a population of nuclease-treated cells . one of the most sensitive and straightforward methods to employ is guide-seq  <cit> . this method relies on nhej-mediated dna repair to capture co-introduced blunt-ended double stranded oligonucleotides  at nuclease-induced breakpoints within the genome, thereby tagging these loci for selective amplification and subsequent deep sequencing. guide-seq is quite sensitive, as off-target sites with > <dig> % indel frequency can be detected  <cit> . importantly, the frequency of dsodn insertion appears to be correlated with the frequency of cas9-induced lesions at each site  <cit> . guide-seq has been used successfully to evaluate the precision of spcas <dig>  <cit> , spcas <dig> variants  <cit>  and two cpf <dig> orthologs  <cit> .

while the guide-seq method is straightforward to employ, its data processing is complex  <cit> . guide-seq combines two complementary libraries to define the location of dsodn insertions within the genome. in addition, it uses a non-standard indexing method with a unique molecular index to filter out duplicate sequences that arise during the pcr amplification steps. currently, only a single bioinformatics application has been released to the community to support the analysis of guide-seq data  <cit> . although the existing tool has successfully been used for analyzing guideseq data from spcas <dig>  <cit> , the released version is not ideal for nucleases that employ guides of longer length or more complex pam recognition patterns, where control over the number of mismatches allowed within each element for off-target identification is potentially valuable  <cit> . in addition, the existing tool does not support the comparative analysis of guide-seq studies across related guides or cas <dig> variants, which can be useful when evaluating guide/cas <dig> variant combinations with the most favorable precision.

in the course of establishing guide-seq in our laboratories  <cit> , we developed an extensively documented bioconductor package guideseq that provides a flexible tool for the analysis of guide-seq datasets interrogating nuclease specificity. guideseq utilizes a rich parameter set that permits adaptation to the characteristics of alternate nuclease platforms , such as different length and complexity in their guide and pam recognition sequences or their dna cleavage position. importantly, these parameters facilitate flexible filtering criteria for peak calling and for off-target site assignment, which can be critical for the capture of potential off-target sites depending on the type of nuclease system that is employed. our software can also annotate off-target sites to indicate whether they fall within a critical region of the genome, such as the exon of a gene. in addition, our algorithm allows multiple guide-seq datasets from different experiments to be compared to identify cleaved genomic sites that are overlapping or unique for a particular guide rna/nuclease within a group.

implementation
implementation platform

guideseq implements a common workflow for guide-seq data analysis and annotation as a bioconductor package in r  <cit> . developing guideseq as a bioconductor package allows us to leverage a large number of existing genome analysis  and visualization  <cit>  tools supported within the bioconductor project. in addition, the rich annotation data for assembled genomes that are available can be used to associate genomic features with identified off-target sites. bioconductor is an open source and open development software project , which is updated twice a year, where the current release  consists of more than two thousand software and annotation packages. these include many species-specific bsgenome packages for accessing different reference genomic sequences, as well as orgdb and txdb annotation packages for accessing annotation information for a variety of species. in addition, utilities are provided within the bioconductor project to forge customized bsgenome and txdb packages. these resources provide end-users with a flexible, stable and up-to-date platform for implementing data analysis for a variety of different systems or for customizing the output for a specific system of interest.

read preprocessing, mapping, filtering, peak calling and off-target identification
in the guide-seq protocol  <cit> , two different paired-end sequencing libraries are generated from the genomic dna from each nuclease treatment group. these libraries  differ in the primers  that are utilized to amplify genomic regions that are “tagged” by guide-seq oligonucleotide integration. during the construction of these libraries a umi is incorporated during the distal adaptor ligation, which identifies unique sequencing reads within the paired-end sequencing run. unique sequencing reads are then aggregated within a defined window and peaks that are potential off-target sites are identified using data from both libraries based on end-user supplied filtering criteria.

within our guideseq package, we have integrated powerful sequence analysis algorithms and functionalities from other bioconductor packages for many stages of the guide-seq data processing. in addition, our guideseq package provides more than  <dig> adjustable parameters to describe the nuclease sequence preference and allow customized data analysis. for simplicity, the majority of nuclease-specific parameters are preset to correspond to the standard spcas <dig> nuclease system, but they can be modified to conform to the characteristics of alternate nuclease platforms . the data analysis parameters permit detailed adjustment of the read filtering criteria, peak-calling parameters , and peak merging criteria. importantly, extensive documentation is included describing the parameters for customization of this package.

an overview of the guideseq analysis workflow is given in fig.  <dig>  species-specific genomic sequence and annotations are loaded using bsgenome, txdb and organn packages. preprocessing scripts to extract the umi sequence, bin sequencing reads associated with different libraries based on the index sequences, remove the constant dsodn sequences, and map the resulting sequencing reads to a desired genome assembly are available at http://mccb.umassmed.edu/guide-seq/. preprocessing steps are described in detail in the supplementary methods section . within the guideseq package, read alignments are filtered to remove paired reads that lack a segment of the guide-seq oligonucleotide sequence . in addition, paired reads that are too far away from each other, or that are of insufficient length or mapping quality are removed. because pcr amplification leads to a biased representation of the starting sequence population, paired reads from the same library that share an identical genomic location for the genomic adaptor ligation site, dsodn insertion site, and umi sequence are collapsed together into a single paired read . for the purposes of peak calling at the putative nuclease cleavage site, these data are represented as a single genomic position defined by the guide-seq dsodn insertion site with the strand corresponding to read  <dig> . all alignment filtering criteria have a default setting but can be easily adjusted by users.fig.  <dig> overview of guideseq analysis workflow. schematic representation of the guideseq analysis pipeline. input files required for preprocessing and guideseq package are represented by annotated color arrows. first, preprocessing utilities are supplied to demultiplex the illumina fastq files based on the index information and map the sequence files to the reference genome. this generates the experimental input files  needed for the guideseq pipeline, which are supplemented with information on the guide rna  and pam element by the end-user. key steps carried out by the algorithms within the guideseq pipeline are indicated under the different headers. details about the r-based commands and variables used within guideseq are presented in the use cases within the main text, and are described in full in the installation and usage section  and in the manual pages associated with the program


fig.  <dig> schematic of the guide-seq library features used for unique read identification. schematic overview of the two sequencing libraries that are generated using the guide-seq method  <cit> . each library  has a different guide-seq oligo tag fragment  that is a part of the resulting read  <dig> sequences. paired-end reads from different libraries are aggregated based on the p <dig> and p <dig> indices. unique reads within each library are defined based on three identifiers: the unique molecular index  in the p <dig> index read, the p <dig> adaptor genomic ligation site, and the guide-seq dsodn integration site. redundant reads are discarded. for the purposes of peak calling, unique paired-end reads are condensed into single-base genomic ranges that define the position of the guide-seq dsodn integration site and the genomic reference sequence strand associated with read 2




unique putative cleavage sites from the forward and reverse libraries are merged and clusters of these sites on the same strand  are aggregated over a user-defined sliding window of a specific sequence length . the height of each strand-specific peak equals the sum of the unique putative cleavage sites within the window, and its position is defined by the center of the  <dig> base window. peak calling also filters out clusters with a small number of putative cleavage sites or a high pvalue calculated from a poisson distribution based on the local background estimate . next, the incorporated chippeakanno package merges neighboring peaks on the watson and crick strands within a defined distance threshold if they have the correct polarity   <cit> . the height of the merged peaks equals the sum of the heights of the individual peaks, and the location parameter captures the positions of the merged peaks. by default, peaks that lack a watson/crick pair and that are only present in one library  are filtered out  <cit> . if desired,  genomic hotspots for oligonucleotide integration can be removed by comparison against a nuclease-free treatment group  <cit> .fig.  <dig> unique read aggregation into peaks for the identification of potential nuclease cleavage sites. strand-specific unique reads defined by the guide-seq dsodn integration site and the read  <dig> genomic reference sequence strand are aggregated over a user-defined window size  to define strand-specific peaks. windows with a read number greater or equal to a user-defined threshold  are called peaks. in addition, the signal to noise ratio  and a p-value are computed based on the local background window size , which can also be employed as filters if desired. for each integration site, the crick peak should precede the corresponding watson peak based on the library construction method  <cit> . consequently, this order is required to combine counts from the watson and crick peaks over a user-defined window size . this aggregate “score” is used to rank peaks. the genomic region surrounding each peak  is used to search for sequences with homology to the nuclease sequence preference  and the pam sequence , and the allowed mismatches within each element defined by the parameters: max.mismatch, pam.pattern and allowed.mismatch.pam. the guide-seq data shown were generated in house for spcas <dig> programmed with a sgrna to recognize vegfa site  <dig>   <cit> , where the most common dsodn integration site falls at the expected cleavage site within this sequence 




identified peaks are classified as potential off-target sites based on their sequence homology to the guide sequence and the pam preference of the cas <dig> nuclease  that was employed. guideseq provides multiple parameters to adjust the threshold for the calling of potential off-target sites within or around peaks passing the filtering criteria to allow adaptation to the type of nuclease  and guide sequence that is employed. classification of an off-target site is defined by a maximum number of allowed base mismatches to the guide sequence and a separate number of allowed base mismatches to the user-defined pam, which is implemented using the crisprseek package and integrated into the guideseq suite  <cit> . this separation of the filters for the guide and pam sequences allows different emphasis to be placed on these elements in the search for potential off-target sequences neighboring guide-seq peaks. guideseq calculates an off-target cleavage prediction score for all identified potential off-target sites using mismatch penalty scoring models generated from an experimental dataset for spcas <dig>  <cit>  or a user supplied scoring matrix. based on the available genome annotation, off-target sites in potentially critical regions, such as exons, are flagged. these data for all identified potential off-target sites are output in a tab-delimited format for easy manipulation within spreadsheet or graphing applications. finally, if a visual comparison of the overlap in identified potential off-target sites between different nucleases or treatment conditions is desired, a venn diagram of peak overlap in up to five different datasets can be plotted through the integrated limma package  <cit> . more detailed information on the commands and instructions for running the software are included in the installation and usage section  and in the associated user guide .

RESULTS
analysis of published guide-seq dataset
to evaluate the performance of our guideseq analysis package, we analyzed several datasets produced in house and successfully identified the intended target sites and validated guide-seq identified off-targets using deep sequencing of pcr amplicons spanning these genomic loci from nuclease-treated cells  <cit> . in addition, we analyzed a dataset generously supplied by the joung laboratory , and then compared our list of identified off-target sites with their previously published analysis  <cit> . an example guideseq output file for this dataset is displayed in additional file 3: table s <dig>  each potential off-target site is listed on a separate row ranked based on the peak score . in addition to the sequence of the potential off-target site, the output includes: the genomic position, its dna strand, the number of mismatches to the guide sequence and their position and type, and the number of mismatches to the canonical pam pattern supplied by the user. when gene annotation is supplied for the genome assembly, the transcript  in which the off-target site falls is noted, and whether it occurs within an exon. in addition, for spcas <dig>  the predicted cleavage score is listed for each site based on the mismatch scoring model generated from the experimental data  <cit> , where a score of  <dig> indicates predicted activity similar to the target sequence.

when comparing our output to the previously published analysis from the joung laboratory  <cit> , the number of potential off-target sites and unique reads associated with each peak  are very similar . both outputs are in agreement over the top  <dig> peaks with only minor differences in the rank order of peaks. the discrepancies between the peak lists are likely due to methodological differences in the sequence filtering, aggregation, and peak-calling criteria that are employed. the unique contributions of our package include its easy adaptability to the analysis of guide-seq datasets from various nuclease platforms, the ability to incorporate annotations of genomic features for identified off-target sites and its comparative analysis and visualization features between different guide-seq datasets, which are illustrated in the following use cases.

use cases
to simplify the use of the guideseq analysis package, all steps have been integrated into a single workflow function guideseqanalysis. once the package is loaded and all of the experiment-specific parameters are set, one line of code  can perform all the analysis by calling various helper functions. below are a few examples illustrating how to analyze a guide-seq dataset from three commonly used nucleases, with different pam orientation, pam sequence preference, pam length, grna length and reference genome.

example  <dig>  analysis of spcas <dig> guide-seq data
although the analysis workflow function guideseqanalysis has more than  <dig> parameters for customized analysis, the majority of these parameters are pre-set for analyzing guide-seq data from the most commonly used nuclease, spcas <dig>  consequently when analyzing spcas <dig> data only a small number of target-specific inputs are required from users. detailed description of these parameters and the input files are available at http://bioconductor.org/packages/release/bioc/manuals/guideseq/man/guideseq.pdf. information on these parameters can also be accessed from the manual pages by typing help in an r session. below is an example that defines the required parameters for analysis of spcas <dig> data.

next create and set the desired working and output directory.


then set the file paths for target sequence , sequence alignment  and umi input files . the following code assumes that the input files are located in the current working directory. the grna file contains the grna sequence in fasta format.

finally, call the guideseqanalysis workflow function and save the analysis results in guideseqresults. the annotated potential off-target sites are output as a tab delimited file  in the output directory specified by the user.

by default, the predicted cleavage score is calculated using the weight matrix and scoring algorithm from the zhang laboratory  <cit> . to use the algorithm developed by the root laboratory  <cit>  set the scoring.method = "cfdscore". in addition, combineofftargets  can be used to remove off-targets common with a nuclease-free control .

example  <dig>  analysis of nmcas <dig> guide-seq data
compared to spcas <dig>  nmcas <dig> has a longer grna , and different pam sequence preference   <cit> . below is an example of the parameters and code needed to analyze guide-seq data from nmcas <dig>  there are only a few additional parameters must be set, i.e., pam, pam.size, pam.pattern, allowed.mismatch.pam
,
grna.length and weights . currently, there is no position-specific mismatch penalty matrix available for nmcas <dig>  however, if desired the weight matrix from spcas <dig> can be borrowed by simply padding  <dig> zeros at the beginning of the weight matrix, or an alternate weight matrix can be input . in addition, other parameters that influence the homology search for potential off-target sites within identified peaks should be adjusted. the maximum number of mismatches to the guide  and pam  can be tuned to increase/decrease the specificity/sensitivity of the analysis. in addition, pam.pattern allows the user to require a specific pam sequence pattern to be present for additional constraint on the recovered sequences if desired. in the example below potential off-target sites are allowed ten mismatches within the guide sequence , three mismatches within the pam , but the pam is required to have a g at the fifth position.

example  <dig>  analysis of cpf <dig> guide-seq data
ascpf <dig> is an rna-guided nuclease recognizing a t-rich pam, tttn, on the 5' side of the protospacer  <cit> , unlike spcas <dig>  which recognizes an ngg pam on the 3' side of the protospacer. below is an example of the parameters and code to analyze a guide-seq dataset for ascpf <dig>  in addition to the parameters discussed for nmcas <dig>  there is one more parameter to be changed, i.e., pam.location, which sets the pam to the 5’ side of the protospacer.

another advantage of our guideseq package is the ability/flexibility to plug in additional annotation packages within bioconductor. although we only present examples for the analysis of human genome datasets, bsgenomename can be set to analyze data from other species, such as the mmusculus package for mouse , the rnorvegicus package for rat , the scerevisiae package for yeast , the celegans package for c. elegans , and the dmelanogaster package for d. melanogaster . for a list of available species-specific bsgenomes, please search for keyword “bsgenome” at https://bioconductor.org/packages/ <dig> /biocviews.html#___annotationdata. for genomes not available as bioconductor packages, users or the core team can create one using the utility detailed at http://www.bioconductor.org/packages/release/bioc/vignettes/bsgenome/inst/doc/bsgenomeforge.pdf.

example  <dig>  annotate off-targets
with parameters txdb and organann set to an organism-specific transcript object and gene id mapping object, off-target sites are annotated if they overlap with gene bodies and if they fall within an exon. here is an example for spcas <dig> guide-seq data processing that annotates identified potential off-target sites with features from the human genome.

to annotate off-targets in other genomes, set txdb and organn accordingly. for example, set txdb to txdb.mmusculus.ucsc.mm <dig> knowngene and organno to org.mm.eg.db for mouse, txdb to txdb.rnorvegicus.ucsc.rn <dig> refgene and organno to org.rn.eg.db for rat, txdb to txdb.dmelanogaster.ucsc.dm <dig> ensgene and organno to org.dm.eg.db for d. melanogaster, and txdb to txdb.celegans.ucsc.ce <dig> ensgene and organno to org.ce.eg.db for c. elegans. for a list of existing txdb and gene id mapping packages search for keywords “txdb” and “orgdb” at http://www.bioconductor.org/packages/release/biocviews.html#___annotationdata. please refer to genomicfeatures package for creation of additional transcript packages.

example  <dig>  merge off-targets from multiple experiments to facilitate comparisons among different nuclease configurations or variants
when evaluating novel nuclease treatment conditions or different cas <dig> variants, it is common practice to include off-target analysis of standard platforms as controls. to aid in comparisons between different nucleases, off-targets identified by guide-seq can be easily merged using the combineofftargets function. here is the example code to merge three experiments and generate a venn diagram to depict the off-target overlaps among experiments .fig.  <dig> venn diagram generated using combineofftargets to depict the overlaps of off-target sites between three different nuclease variants. example of the output from the combineofftargets function  comparing the overlap in guide-seq identified off-target sites for wild-type cas <dig>  split-cas <dig>   <cit> , and the highly specific spcas9mt3-zfp  <cit>  programmed with a sgrna recognizing vegfa site  <dig>   <cit> 




if desired combineofftargets can be used to remove off-targets common among different grnas by setting remove.common to true. furthermore, if a control sample without nuclease is available, peaks present in the control sample can be removed from the grna samples by setting the control.sample.name.

CONCLUSIONS

guideseq provides a flexible analysis platform for the identification and annotation of nuclease-based off-target cleavage sites that are tagged through the guide-seq methodology developed by the joung laboratory  <cit> . harnessing the diverse software resources and databases available within bioconductor  <cit> , guideseq provides a streamlined environment for the identification of off-target sites in a wide variety of species. in comparison to the recently released guideseq analysis pipeline in python  <cit> , our package provides a rich parameter set that allows users to easily modify the processing of guide-seq data to adapt to a variety of different types of nucleases by accommodating different target sequence characteristics, such as grna length, canonical pam sequence composition and position of the pam relative to the protospacer. in addition, guideseq allows the definition of different filtering and peak calling criteria, as well as different target site complementarity thresholds for both the guide sequence and pam element for the capture of potential off-target sequences that are associated with guide-seq peaks. this flexibility, which is absent in the python analysis pipeline  <cit> , allows the differential tuning of these features for the more liberal capture of potential off-target sites for subsequent validation.

furthermore, our guideseq package has a number of additional distinct features. it can output an off-target cleavage prediction score for each site based on the complementarity to the input target sequence using activity models generated from a variety of experimental datasets  <cit> . deviations in the off-target cleavage rates from the predicted score may identify sites where biological factors are impacting nuclease cleavage rates, which could inform subsequent iterations of these activity models. our guideseq package also permits the utilization of different annotation packages such as bsgenome and txdb to define putative off-target sites that overlap features of interest within a genome. this information can be used to prioritize the validation of identified potential off-target sites. in addition, our package allows a comparative analysis of nuclease precision and visualization of identified off-target sites from different experiments in a venn diagram. this feature may be particularly valuable when different nuclease treatment conditions or nuclease platforms are being compared to define the most promising nuclease framework to pursue for future studies.

user information
a step-by-step user guide with working code snippets for the guideseq analysis package is available at http://bioconductor.org/packages/release/bioc/vignettes/guideseq/inst/doc/guideseq.pdf. detailed parameter definition, default setting and usage are available at https://bioconductor.org/packages/release/bioc/manuals/guideseq/man/guideseq.pdf. guideseq depends on r version  <dig> . <dig> or later.

additional files

additional file 1: supplemental methods for guide-seq data preprocessing. 

 
additional file 2: installation and usage of guideseq for novice r users. 

 
additional file 3: table s <dig>  an example output of guideseq analysis. 

 
additional file 4: table s <dig>  common and unique off-targets identified by guideseq and published in tsai  <dig>  <cit> . 

 


abbreviations
crisprclustered regularly interspaced short palindromic repeats

dsbdouble-strand break

guide-seqgenome-wide unbiased identification of dsbs enabled by sequencing

pamprotospacer adjacent motif

electronic supplementary material

the online version of this article  contains supplementary material, which is available to authorized users.

