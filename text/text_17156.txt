BACKGROUND
metabolic flux analysis
metabolic fluxes essentially represent the phenotype of cellular function and regulation. accordingly, the determination and analysis of cellular flux distributions is a central concern of systems biology. restricting to steady state analysis, available methods contributing to the determination of fluxes within metabolic networks can be roughly divided into two mainstreams which are both based on the stoichiometry.

the first type, metabolic network analysis , involves tools suitable for exploring the solution space of the stoichiometric equations for comprehensive models. typically, topological properties of genome-scale networks are under investigation in order to derive information about the set of all feasible flux patterns that would emerge under predefined assumptions. extreme pathway analysis  <cit> , elementary flux mode analysis  <cit> , and flux balance analysis  <cit>  are among the most prominent approaches in this field assessing the theoretical capabilities of metabolic networks. the second type is metabolic flux analysis , which, in contrast to mna, is concerned with the quantitative determination of metabolic fluxes in a concrete cell under in-vivo conditions. supplementing stoichiometry with experimental data produces precisely one such flux distribution.

isotope labeling networks  are the structural backbone of mfa  <cit>  and the tracing of isotopic labeling became the dominating method for the determination of fluxes in the central metabolic pathways of microorganisms and higher cells in-vivo  <cit> . the knowledge of these fluxes under a variety of growth conditions or genetic modifications of an organism constitutes one important building block in the omics data family called the fluxome  <cit> .

in contrast to mna, the networks subject to mfa are typically confined to the central metabolic pathways of an organism and the surrounding biosynthesis pathways of particular interest. for example, the e. coli network discussed in this contribution  contains all amino acid production pathways and, thus, is already a rather large representative network for typical mfa applications. the difference in size between genome-scale networks and metabolic networks suitable for mfa studies is currently due to limited knowledge about atom transitions outside the biosynthesis on the one hand, and by problems with the measurement techniques when low concentrated metabolites are to be analyzed on the other hand.

the centerpiece of all computational mfa routines is the determination of the emerging labeling distribution . this simulation step is the essential operation for all further steps in the course of experimental evaluation – i.e. parameter fitting, statistical analysis, or experimental design  <cit> . several computational tools are available for mfa which facilitate the evaluation of isotopic labeling data generated by nmr and ms instruments  <cit> . although the algorithms underlying these tools are different, basically all of them rely on the structure of the iln associated with a metabolic network.

current challenges
the recent years brought up several new experimental techniques and requirements resulting in increasing performance demands for mfa tools:

• high-throughput mfa procedures with hundreds of 13c labeling experiments running in parallel are now possible and will be certainly used frequently in the future, in the field of systems biology  <cit> .

• when mfa is used in screening investigations, detecting the presence or absence of certain metabolic pathways is an important issue and requires a fully automated evaluation of different network variants in a sequence of data evaluation runs   <cit> .

• more and more complex metabolic networks are now being studied including not only the central metabolism but also the biosynthesis pathways or the compartmentation in higher cells  <cit> . the availability of elaborate analytics facilitates the use of novel substrates which provide isotopic labelings also in non-carbon atoms   <cit> . thus, the dimension of isotope labeling systems dramatically increases.

• the computation of confidence regions for the estimated fluxes based on nonlinear statistical methods is usually based on monte-carlo simulations for which a large number of simulation runs have to be performed  <cit> . in particular, this way, the usually badly determined exchange fluxes of bidirectional reactions can be quantified more reliably  <cit> .

• whereas the classical ile is based on a measurement from the isotopically stationary phase of an experiment, isotopically instationary methods are now possible due to the rapid development of ms technology  <cit> . these experiments require a change from stationary isotopomer balance equations  to dynamic differential equation systems. this in turn increases the computational complexity of the problem by several orders of magnitude  <cit> .

altogether, the computational requirements for these new techniques emphasize the importance of the development of new high performance algorithms for the solution of the arising simulation problems.

attempts to overcome the performance bottleneck of mfa algorithms
several strategies for solving labeling equation systems have been discussed in the literature  <cit> . however, they all suffer from poor performance, or even do not converge in any case. most of them have a computational complexity of o where n is the number of labeled species in the system, i.e. isotopomers, which typically are much higher than  <dig> 

having this fact in mind, the current computational bottleneck of isotopic mfa can be illustrated by the following consideration: assume that the simulation of label distribution for given flux values usually takes a few seconds on a current pc, e.g. for the large e. coli network discussed in this contribution. then, flux estimation is accomplished by an iterative parameter fitting procedure .

depending on the problem, several hundred simulation steps have to be performed for a single fit. clearly, each parameter fit should be recurred some times to avoid local optima. for high-throughput mfa the whole procedure has to be repeated for each of possibly several hundreds of samples  <cit> . when finally the network size grows by some factor >  <dig> , the total time for performing a high-throughput mfa study ends up at a couple of weeks which is unacceptable.

several attempts have been made to speed up the central computational steps for mfa. most of them rely on an analysis of the specific network for the biological system under investigation and thus, cannot be generalized to an arbitrary network structure. all these methods are based on special assumptions on the reversibility of fluxes  <cit> , path tracing in bidirectional computation steps  <cit> , computer algebraic solution of subsystems  <cit> , or the derivation of special relations between measured labels and flux ratios  <cit> . however, none of these methods is comprehensively applicable.

an universally applicable framework for solving the simulation task which is able to deal with any given network structure and any type of unidirectional or bidirectional fluxes is the cumomer method  <cit> . using the graph-based methods described in this contribution a speedup of factor  <dig> has been achieved for the presented e. coli network. recently, the elementary metabolite unit  approach for modeling isotope labeling systems has been proposed in  <cit>  which is specially suited for systems with many labeled species . relying on the back-tracing of measured mass isotopomer spectra to precursors in the central metabolism a special flux analysis algorithm has been developed that reduces the dimension of the forward simulation problem compared to the cumomer concept. hence, depending on the given measured data set the computation time can be reduced considerably. interestingly, both approaches – cumomers, and emus describing the flow of labeled material in a metabolic network – share the same network structure. restricting ourselves on cumomers, nevertheless, all methods derived in the present contribution should be profitable for the emu approach, too.

in this contribution a major effort was taken to translate the structure and terminology of iles to graph theoretical terminology. hence, it is assumed that the reader of this contribution is familiar with elementary graph theory and its formalism. the reader should be familiar with the notion of algorithmic complexity. moreover, this text should not be considered as a tutorial for isotope-based mfa. a short introduction into the general procedure of isotopic mfa can be found in appendix a. for more details the reader is referred to more comprehensive texts like  <cit> .

labeling networks and associated balance equations
an illustrative example
a broad variety of approaches for the description of the flow of labeled material through a metabolic network exist in the literature. these approaches generally differ in the representation of the labeling state. examples include carbon atoms  <cit> , isotopomers  <cit> , cumomers  <cit> , bondomers  <cit> , and emus  <cit> . basically, all of these representations result in a similar structure of network graphs composed of labeled compounds , and metabolic fluxes  figure  <dig> 

an illustrative example shall be used to explain the general strategy for improving the performance of mfa algorithms as proposed by this contribution. fig.  <dig> shows a section of a general iln along with the corresponding set of labeling balance equations  which quantitatively describe the distribution of labeled material over the network. for the comprehension of the subsequent sections the following properties of lbes are of importance:

 <dig>  for each node x of an iln exactly one equation is formulated, which relates node x with its direct neighbors.

 <dig>  the balance equation for node x always contains x and its coefficient is the sum of its label effluxes.

 <dig>  additionally, the balance equation associated with node x contains the labeling fractions corresponding to all upstream neighbors feeding node x with labeled material.

 <dig>  in contrast, the downstream nodes fed by x do not contribute to the balance equation of x.

 <dig>  the balance equations contain nonlinear terms when hyper-edges with multiple sources w <dig> .. wn and a single target x occur in the network, i.e. in the case when larger molecules are assembled of smaller molecules.

 <dig>  the iln and the corresponding system of lbes contain the same information, meaning that each one can be constructed from the other.

cyclic interdependencies
these properties establish the correspondence between networks and equation systems which is well known from the theory of general equation solving  <cit>  where the structural network representation of an equation system is known as a computational graph. in particular, it has been shown that the performance of equation solvers can be highly optimized by analyzing and exploiting the topology of this graph. roughly, the general solution of n linear  equations is at most  an effort in the order o which becomes prohibitive when n grows beyond a certain limit. if an equation system can be decomposed into k consecutive subsystems of dimension n <dig> + ... + nk = n the effort consequently reduces to o+...+o which entails a tremendous speedup if n <dig> ..., nk ≪ n.

fig.  <dig> illustrates this idea on the small example network. obviously, the network nodes x <dig>  x <dig> and x <dig> are cyclically linked which means that the corresponding balance equations are closely coupled and have to be solved simultaneously, e.g. by gaussian elimination, or – in the nonlinear case – the application of the newton algorithm  <cit> . the same holds for nodes x <dig>  x <dig> and x <dig>  last, the node x <dig> is linked to both cycles by a hyper-edge.

obviously, it is not necessary to solve all seven equations in a single o run because x <dig>  x <dig> and x <dig> do not depend on xj, j =  <dig> ..., <dig> which are lying downstream in the network. consequently, x <dig>  x <dig>  and x <dig> are to be computed in o steps first, followed by another o computation for x <dig>  x <dig>  and x <dig>  finally, x <dig> can be determined from the predecessor node solutions for x <dig> and x <dig> by evaluating the quadratic term x <dig> = /v <dig> = x2·x <dig> in o steps. for the simple example this is already six times faster than the unpartitioned solution, but for realistic networks the speedup factor is usually much higher .

graph isomorphisms and tracing of labeled compounds
a closer inspection shows that, due to their very special origin, ilns are not just ordinary computational graphs. because of the combinatorial way an iln is constructed from a much smaller atom network the iln is expected to contain redundancy to a great extent. in this context cyclic sub-networks, i.e. the sets of cyclically interdependent nodes, are of special interest. for the small network shown in fig.  <dig> such node sets are {x <dig>  x <dig>  x3} and {x <dig>  x <dig>  x6}. as a major result it will turn out that ilns naturally break up into a high number of these sets, always yielding an enormous computational speedup when solving the associated lbes.

moreover, many of the cyclic components are isomorphic. in the example network in fig.  <dig> the two cycles describe isomorphic components since the nodes matched by x <dig> ≡ x <dig>  x <dig> ≡ x <dig>  and x <dig> ≡ x <dig> are connected by the same flux values. since these isomorphic components essentially describe identical subsystems of the equations, their identification gives precise statements about the redundancy contained in the iln. by preventing repeated solution of these isomorphic subsystems additional speedup is possible.

last but not least, the global topological analysis of ilns yields a complete understanding of the flow of labeled material in the network which is extremely helpful information for experimental design. hitherto, this information could only be obtained for specific networks by the manual tracing of labeled compounds through the network.

the focus of this contribution is on topological network analysis and not on the algorithmic details of equation formulation and solution which will be treated in a future publication. nevertheless, a first prototype of a topology-based lbe solver has been implemented which demonstrates that a speedup factor of about  <dig> can be achieved for a realistic e. coli carbon iln. this speedup will already solve most of the current performance problems mentioned in the introduction. moreover, to keep the exposition short, the ilns are described from the viewpoint of the cumomer method  <cit> , although the introduced concepts apply to any of the above mentioned types of network graphs.

methods
networks in mfa
the formal structure of ilns is well documented in literature  <cit> . however, to give a precise definition of the terminology and nomenclature used in this contribution a brief summary of the basic concepts is given in this section.

metabolic networks and isotope labeling networks
the subject of isotope-based mfa and the context of this work is the quantification of the material flow between a cell's intra-cellular metabolite pools. mfa is based on the forward simulation of an iln, which determines how metabolic reactions distribute an isotope labeling, taken from the substrate , among the cell's metabolic pools when the reaction rates  are assumed to be known.

the metabolite network  is the most basic graph representation used in this context and shows how metabolic pools are connected by the biochemical reactions. these networks can be formalized by hyper-graphs since they contain hyper-edges for bimolecular reactions. the representation in fig. 2a lacks the information about how atoms are transported between the pools, which is crucial for mfa. this missing information about the reactions atom transitions  is contained in the atom transition network . as opposed to the metabolic network the atom transition network can be represented by a standard directed graph.

unfortunately, labeling data are seldomly directly related to single atom positions. to explain nmr and ms measurements, a more detailed representation of molecular labeling states is necessary. for this purpose, a third graph representation is introduced – the isotopomer network.

isotopomer networks
isotopomers are isotopic isomers, i.e. molecular entities that differ solely in their isotopic composition. unlike the atom transition networks, isotopomer networks are a well-suited basis for the evaluation of iles because they allow the balancing of metabolic pools in all possible labeling states . from a structural viewpoint, isotopomer networks do not contain more information than the carbon atom networks because the one is derived from the other.

the simulation of lbes in terms of isotopomers suffers from a combinatorial explosion of the number of nodes, because a metabolite with s atom positions available for isotopic labeling is expanded into a set of 2s different isotopomers. even for a small atom transition network this may result in a large iln graph; depending on the size of the molecules included.

fortunately, the whole iln can be transformed into a network of cumomers , henceforth called cumomer labeling network  which enables the partitioning of the network graph. since the resulting partitions contain only unimolecular transitions and special degenerated types of bimolecular transitions, the corresponding system of cumomer balance equations is linear in its unknowns  <cit> .

cumomer networks
a cumomer is a virtual particle which is called cumulative because it describes a set of isotopomers. while each atom position in an isotopomer is either in state labeled/● or unlabeled/○ the atom positions in cumulative isotopomers are in one of the two states labeled/● or don't care/. here, the special state don't care/ represents a wildcard which is expanded into the set of states {•, ○} so that cumomers containing these wildcards describe sets of isotopomers . likewise, the cumomer transitions described by metabolic reactions can be understood as one-to-one mappings between sets of isotopomers.

in other words, the labeled atom positions in a cumomer describe a labeled fragment which is shared among its set of isotopomers. from this perspective the reactions in a cumomer network describe how labeled fragments of certain size are transported by the metabolic reactions. these fragments may be permuted by the metabolic reactions so that they are not necessarily contiguous . paths through the cumomer network graphs can be characterized by the property that a certain subset of atoms is retained by a chain of metabolic reactions .

definition  <dig> . if the term weight is used in connection with cumomers it shall denote the fragment size which coincides with the number of atom positions that are in state labeled/●.

the weight of cumomers induces the partitioning of the cumomer space:

• in weight-0-cumomers all atom positions are occupied by wildcards () and a cumomer of weight  <dig> and size s always describes the full set of 2s isotopomers in all possible labeling states, i.e. the metabolic network itself.

• another important special case is the network described by the transitions between weight-1-cumomers. this network describes the transport of single-atom fragments, and therefore the atom transition network. since all balanced atoms in the metabolite pools originate in the network's input pools the transitions in this special network connect every atom in the system with one or more atoms of the substrate pools.

• weight-k-networks constitute the subset of reactions that transport a labeled fragment of size k. a metabolite with k atom positions has exactly one representative on level k and none on the weight levels > k.

assembling cumomer networks
the change from isotopomer to cumulative isotopomer pools raises the important question how the cumulation of isotopomer pools affects the transitions in the network and therefore the topology of network graphs. as shown by the following rules the translation of unimolecular transitions, as well as bimolecular assembly transitions, is straight forward. for bimolecular split transitions the central concept of weight conservation applies which prevents transitions that would reduce weight, i.e. distribute the labeling of an educt on more than one product. the rules for the translation of isotopomer networks into cumomer networks can be summarized as follows :

definition  <dig> . the transformation of isotopomer transitions into cumomer transitions can be performed by application of the following basic translation rules:

 <dig>  replace all unlabeled atom positions ○ by wildcard labels .

 <dig>  if transitions associated with splitting reactions violate the weight conservation constraint, i.e. more than one product has a non-zero weight, replace the transition by an efflux into a virtual sink pool Ω.

 <dig>  remove all weight-0-cumomers together with all incident edges from the network.

application of these rules on the example network in fig.  <dig> leads to the cumulative isotopomer network in fig. 3a: rule no.  <dig> replaces unlabeled positions by wildcard labelings. rule no.  <dig> replaces the splitting reaction  → c• + d• by an efflux into the special pool Ω. finally the weight-0-cumomers  and the edges leading to and coming from these pools are removed from the network by rule no.  <dig> 

rule no.  <dig> can be justified by intuition: in a weight-0-cumomer every position is occupied by a wildcard . in other words: the whole cumomer is in state don't care. since a weight-0-cumomer describes a fragment of size zero and is the complete set of isotopomers comprising all possible labeling states they do not contain any information at all and can be removed from the network .

structure of this contribution
so far, it has been shown how isotopomer networks are converted into cumomer networks. in contrast to the ilns, the clns presented in the previous section possess a weight conservation property which establishes a subdivision of cumomer networks and a partitioned solution. the following section will briefly review this long-known property in order to pave the way for two new graph-theoretical features, proven in the subsequent parts.

the first new feature unveiled is decreasing connectivity with increasing cumomer-weight, which describes an incremental break-up of cumomer networks for larger fragments. the second new feature is the inherent isomorphism of subgraphs, which can be characterized as an effect introduced by the combinatorial fashion the isotopomer and cumomer networks are built. isomorphism also affects the cumomer network graph's strongly connected components which is further exposed at the end of this section.

section example network then shows the practical consequences of the obtained results for a realistically sized e. coli 13c labeling network, consisting of a cascaded cumomer network containing about  <dig> cumomer nodes. in sec. global connectivity and reachability an important application of the connectivity concepts is given by the global study of connectivity and reachability of network nodes. the general concept of a reduced network is introduced which explains the formation of a certain labeling state in a desired subset of metabolic pools. it turns out that the dimension of the e. coli cumomer network can be strongly reduced depending on the measurement configuration and the present input labeling mixture.

RESULTS
topological properties of cumomer networks
this section summarizes the topological consequences of the transformation rules presented in sec. cumomer networks and introduces new theoretical results. for the comprehension of the following sections basic knowledge of graph theory is assumed and only the basic concepts shall be briefly introduced here .

in order to describe the topological properties of the cumomer cascade it is helpful to introduce the notion of a labeled digraph:

definition  <dig> . a labeled directed graph  g =  is a structure which consists of a set v of "nodes" labeled  <dig>   <dig> ..., n, a set Σe of "edge labels" and a mapping e ⊆ v × Σe ↦ v called "edges".

in contrast to the commonly used definitions for directed graphs this definition allows to have multiple edges with different edge labels between a pair of nodes.

the cumomer cascade
the first important consequence of the rules presented in def.  <dig> is that cumomer networks have a natural partitioning by weight  <cit> . by the application of rule no.  <dig> all weight-reducing transitions induced by splitting reactions are removed from the network. since all remaining transitions are either unimolecular, weight conserving bimolecular splitting reactions or bimolecular assembly reactions, all transitions either conserve or increase the weight of cumomers.

grouping cumomers by weight leads to a natural partitioning into cascaded network graphs  with kg =  for  <dig> ≤ k ≤ s . within these graphs kg, transitions ke are weight-conserving  <cit> :

• unimolecular transitions are always weight-conserving. for example, in fig.  <dig>  the unimolecular transitions induced by reactions σ <dig>  and σ <dig>  transport the complete isotope labeling from the educt to the product cumomer.

• splitting transitions transport the full weight of the educt cumomer to a single product cumomer. in the splitting reactions σ <dig> of fig.  <dig>  this holds for the transitions  → c• and  → d•. there is no such transition for  because distributing the weight on c• and d• is not allowed.

• in assembly transitions, the full weight of the product cumomer is originated in only one educt cumomer. for reaction σ <dig> in fig.  <dig> this holds for transitions c• →  and d• → . the transition c•, d• →  creates a product of higher weight and connects the cascade levels.

if, for an assembly transition, there is more than one educt cumomer with weight >  <dig>  the assembly reaction induces a hyper-edge which connects multiple educt cumomers with one product cumomer by crossing levels of the cascade. within the levels of the cascade, the remaining assembly transitions are weight-conserving.

from the viewpoint of cumomer balance equations hyper-edges are treated as ordinary influxes from source pools and do not require special treatment. clearly, these hyper-edges are not covered by def.  <dig>  since edges are defined to connect exactly two nodes. because the weight level cumomer network graphs kg discussed in the following are free of hyper-edges, the associated hyper-graphs are not needed, and hence not formally introduced here.

decreasing connectivity with increase of weight
the following lemma states that weight level  <dig> is always the most connected graph in the cumomer cascade and the global connectivity decreases with increasing cascade level:

lemma  <dig> . let kg =  denote the cumomer cascade's graph on weight level k. let εdef¯¯|ek|/|vk|denote the average node degree , which is a measure for the graph's connectivity. with increasing weight level k the average node degree decreases monotonically, i.e. ε ≤ ε for k =  <dig>   <dig> ..., s -  <dig> 

the proof can be found in the appendix. tab.  <dig> illustrates the consequences of lemma  <dig> on three minimal networks, each consisting of a single reaction. the '#'-notation used for the cumomers in this example was introduced in  <cit>  and is employed throughout the whole contribution: the "1" denotes a labeled/● atom position and the "x" a don't-care/ atom position, while the order of labeling positions •/ characterizes a reaction's specific atom transport properties. tab.  <dig> shows the cumomer nodes and transitions on the individual weight levels for each of the minimal networks. for the unimolecular reaction, connectivity does not change over the weight levels while for the bimolecular types connectivity decreases monotonically.

three different networks consisting of a single reaction. connectivity ε decreases monotonically with increasing weight level k.

a reaction's permutation property not only defines which pairs of cumomer nodes are connected by an edge, it also defines how many edges can be found on the individual network levels. to quantify this observation, it is helpful to introduce the term width of a reaction:

definition  <dig> . the term width of a reaction shall denote the maximum size of a fragment transported between the reactants on both sides of the reaction:

 <dig>  the width of an unimolecular reaction r : a#a1a <dig> .. as ⇌ b#b1b <dig> .. bs simply corresponds to the number s of transported labeling positions, i.e. widthdef¯¯s.

 <dig>  for any bimolecular reaction r : a#a1a <dig> .. aq + b#b1b <dig> .. br ⇌ c#c1c <dig> .. cs where q + r = s the width is defined by the number of labeling positions transported between the pools, i.e. widthdef¯¯min⁡{q,s}=q and widthdef¯¯min⁡{r,s}=r.

 <dig>  the width of a sequence of reactions, r <dig> ...,rℓ, which transport molecular fragments through pools p <dig> ..., pℓ are inductively defined as the maximal size of a transported fragment, i.e. the minimum of widths of the involved reactions which is given by the size of the smallest atom backbone in the reaction sequence: width)def¯¯min⁡i= <dig> ...,ℓ{width}

 <dig>  width = width, i.e. the width of a reaction shall not depend on its reversibility.

example: in fig.  <dig>  the width of the unimolecular reactions a → b and d → e is three since three atom positions are transported. the width of the bimolecular splitting reaction b → f + c is one for b → f and two for b → c. the width of the reaction sequence a → ... → e is the minimum of the individual widths, i.e. the reaction sequence transports a fragment of size two.

lemma  <dig> . the number of edges induced by a metabolic reaction on a specific weight level k of the cumomer cascade depends on its width:

 <dig>  an unimolecular reaction r : a#a1a <dig> ... as → b#b1b <dig> ... bs induces

k)=edges on weight level k of the cascade.

 <dig>  a bimolecular reaction r : a#a1a <dig> ... aq + b#b1b <dig> ... br ⇌ c#c1c <dig> ... cs induces

k)+k)=+edges on weight level k of the cascade.

the simple proof is left to the reader. again, tab.  <dig> can be used to illustrate lemma 2: the unimolecular reaction induces  edges and both bimolecular reactions induce + edges  for k =  <dig>   <dig>   <dig>  thus, lemma  <dig> shows that the number of edges induced by a metabolic reaction on a certain level of the cumomer cascade depends only on the number of atoms transported between the individual educt-product pairs.

isomorphic subgraphs within the cascade
although the cumomers originating in the same metabolic pool can be found on different weight levels of the cascade, they are connected by edges with the same flux labels Σe that connect the underlying metabolic pools. this similarity of graphs can be formalized by the notion of graph isomorphism:

definition  <dig> . a subgraph gs=  of a graph g =  is given by a set of nodes vs ⊂ v and an associated set of edges es ⊂ e where  ∈ es ⇔  ∈ e ∧ u, v ∈ vs. two subgraphs g <dig> =  and g <dig> =  are isomorphic if and only if there exists a bijective function  π : v <dig> ↦ v <dig> which relabels the nodes of v <dig> with the properties v <dig> = π, and  ∈ e <dig> ⇔ , σ, π) ∈ e <dig>  the isomorphism between g <dig> and g <dig> shall be informally denoted as g <dig> = π resp. g <dig> = π- <dig> 

a directed path of length ℓ from a node p to a node r is a sequence of edges  such that ei = , q <dig> = p, and qℓ = r. the following lemma, whose proof can be found in the appendix, quantifies the appearance of isomorphic subgraphs defined by a directed path's nodes q <dig> ..., qℓ:

lemma  <dig> . given a sequence of reactions r <dig> ...,rℓthat transports a  fragment through the pools p <dig> ..., pℓ. assume that all participating metabolite backbones in this path can be labeled on at least s atom positions, i.e. width = s.

then the original reaction sequence induces disjoint isomorphic paths on levels k =  <dig> ..., s of the cascade  which are "copies" of the original reaction sequence and do not share common cumomer nodes .

fig.  <dig> illustrates lemma  <dig> on a sequence of reactions transporting a fragment of size two from pool a to pool e: a#abc → b#abc, b#abc → f#a + c#bc, c#ab + g#c → d#abc, d#abc → e#abc: pool c has the shortest atom backbone within the reaction chain and limits the fragment size to two atoms. as lemma  <dig> predicts, there are two isomorphic copies of the reaction chain on level one of the cascade and a single copy on level two. there are no isomorphic paths left on weight level three because of the disappearance of pool c. summing up, there are  <dig> +  <dig> +  <dig> =  <dig> -  <dig> isomorphic paths from pool a to e in the cascade. for the shorter sub-path from pool a to b, which carries a fragment of three atoms, there are  <dig> +  <dig> +  <dig> =  <dig> -  <dig> isomorphic paths in the cascade.

isomorphic paths naturally extend to isomorphic subgraphs. likewise a reaction sequence that transports a fragment of size s leads to  isomorphic paths on weight level k of the cascade, there are  isomorphic copies of a metabolic network's subgraph iff all reactions transport a fragment of at least size s. it follows, that a connected subgraph of a metabolic network induces connected isomorphic subgraphs in the cumomer cascade as long as weight level k does not exceed the size s of the shortest fragment transported between the metabolic pools.

components of cumomer network graphs
as motivated for the illustrative example at the beginning, the smallest structural units of an iln are the subgraphs containing cycles. in order to describe how labeled fragments cycle through the network this informal conception can be formalized by introducing the notion of strongly connected components :

definition  <dig> . a subgraph gs =  of labeled digraph g =  is strongly connected if there exists a directed path  ∈ es∗between any pair of its nodes  ∈ vs. gs is a strongly connected component of g if it cannot be enlarged by adding more nodes and associated edges without losing the property of being strongly connected.

again, fig.  <dig> illustrates the concept: obviously, the nodes within the two cycles are strongly connected. starting at a node of the right cycle there is no way to reach the nodes of the left cycle. consequently, there are two groups of strongly connected nodes. since adding x <dig> or x <dig> to either groups would break their strongly connectedness the two cycles already represent the sccs of the network. by convention, a solitary node shall be treated as a scc consisting of a single node, hence the example network graph consists of four sccs.

the component graph is an important graph associated with a graph's decomposition into sccs. its nodes are the sccs of the original graph and it contains a directed edge between two nodes if there is at least one edge in the original graph which connects nodes of the corresponding sccs. hence, the component graph is acyclic and there exists an order on its nodes , which is called topological sort. the component graph is topologically sorted iff for all edges from i to j node i appears before node j  <cit> . a topological sort for the example network in fig.  <dig> is . the following definition introduces the notion of a connected component . the ccs of a digraph describe a weaker form of connectivity:

definition  <dig> . a connected component is a subgraph gs =  of a labeled digraph g =  which were a scc if its edges es could be traversed in any direction.

obviously, a digraph is said to be connected if it consists of a single cc. in particular ccs describe a partition of a digraph's nodes and edges into disjoint subsets, i.e. disconnected subgraphs. any of these ccs is either a scc or can be further split into a set of sccs.

e. coli example network
this section illustrates the practical consequences of the theoretical results of the previous sections on the basis of a realistic 13c labeling network which models the central metabolism and the attached biosynthesis pathways of e. coli .

two variants of this metabolic network will be discussed in the following. in the first variant, network "a", the reversibilities of metabolic reactions are assumed to be realistic, i.e. the majority of metabolic reactions is considered to be bidirectional. tab.  <dig> summarizes the setup of network "a". the detailed reaction network can be found in the supplementary material. in the course of this section network variant "b" is introduced. this extreme variant of network "a" shares the same metabolic reactions, however all reactions are considered to be unidirectional. although this assumption is certainly not realistic, the comparison of both network variants is valuable for emphasizing the topological effects of reversible reactions.

sccs and ccs represent recognizable subsystems that can be found throughout the weight levels of the whole cumomer cascade. for this reason ccs are an ideal test case to illustrate the theoretical results of the previous section.

incremental break-up of the network graphs
the number of weight levels of the corresponding cumomer cascade is given by the size of the largest carbon atom backbone in the system – the amino acid l-tryptophan . the cascade's subgraphs kg =  are characterized in tab. 3: column |kv| contains the number of nodes for the respective level of the cascade and therefore the number of cumomers of weight k. as predicted by lemma  <dig>  the graphs' connectivity ε decreases monotonously with increasing weight level k.

likewise the global connectivity ε decreases with increasing cascade level k  the sccs have a tendency to break up into smaller sccs: weight level one consists of a single cc which contains large sccs. with increasing weight level the number of ccs increases, while the average number of nodes per cc decreases. the higher levels of the cascade are mainly disconnected, e.g. level  <dig> has  <dig> nodes but only  <dig> smaller sccs and  <dig> disconnected nodes. level  <dig> is completely disconnected except a single scc of size  <dig>  in level  <dig> finally only detached nodes remain.

the impact of bidirectional reactions
the presence and size of sccs is mainly governed by the reversibility of metabolic reactions: every bidirectional unimolecular reaction trivially causes two nodes to be strongly connected and every linear chain of bidirectional reactions results in a strongly connected subgraph. only few sccs in the cascade's graphs are actually caused by cyclic reaction chains in metabolic pathways. to quantify this statement an extreme variant of the e. coli network, referred to as network "b" in the following, is examined where all metabolic reactions are assumed to be unidirectional.

the results are shown in tab.  <dig>  at first, it is important to note that this modified network has the same ccs, i.e. the restriction of reversibilities does not disconnect the network graphs. furthermore, the carbon atom network  is still connected in the sense that every carbon atom in the system can be reached by a path coming from the substrate atoms. for this reason, the sccs of network "b" describe  cyclic reaction chains, fig.  <dig> 

the large scc on level one of dimension  <dig> covers the full tca cycle and describes two independent paths of single carbon atoms through the cycle's metabolites. these two paths are connected by the glyox#x <dig> cumomer and the anaplerotic reactions. a similar cycle is described by the scc of size  <dig> shown in fig.  <dig> where pool succoa is bypassed completely by a path through cumomer glyox#1x. this bypass via the glyox pool has the ability to transport a fragment of size two and is found as the scc of size  <dig> on level two of the cascade . since there is no scc on weight level two which includes cumomers of pool succoa, only a single carbon atom may be kept on a cyclic path through all the pools of the tca cycle.

the graphs on weight levels  <dig> and  <dig> contain no edges at all, which indicates that the cumomers of the corresponding weight are fed from the lower levels of the cascade as the product of assembly reactions.

isomorphic sccs
as stated above, the sccs of the cumomer network describe cyclic pathways of certain labeled fragments. on the other hand sccs represent distinguished subsystems of cumomer network graphs they are a convenient test case to demonstrate the consequences of lemma  <dig>  i.e. a cumomer network can be expected to contain isomorphic sccs if only a strongly connected subgraph transports a fragment of more than one atoms.

the standard approach to find a graph isomorphism, i.e. to compute at least one possible node renaming π, is to perform a clever backtracking through all |v|! possible node assignments  <cit> . although, there is no polynomial-time algorithm known for the general graph isomorphism problem this standard algorithm performs well, especially if graphs are as loosely connected as the cumomer network graphs.

the key to even more efficient isomorphism testing is to partition the node set into equivalence classes such that two nodes in different classes cannot possibly be mistaken for each other  <cit> . for cumomer network graphs, the basic equivalence classes are a-priori given by the nodes' origin in the underlying metabolic pools. these classes can be further split into subclasses by comparing node degree and labels of incident edges. therefore, the detection of isomorphic sccs in cumomer network graphs is efficient in practice.

because of the greater practical relevance, and the more interesting scc distributions the weight level graphs of network "a" were analyzed for graph isomorphisms. tab.  <dig> shows the results of this analysis. the surprising outcome is that there are only very few unique sccs: the largest graph, 4g, contains  <dig> sccs with ≥  <dig> nodes but only  <dig> distinct scc equivalence classes. the largest equivalence classes found in graphs 2g through 8g belong to a single isomorphic scc of size six that describes transitions between cumomers of the pools chor, phe and tyr which transports a fragment of eight carbon atoms, shown in fig.  <dig>  this example is exceptional, since sccs tend to break up with increasing cascade level – in fact, in 1g this subsystem is embedded in a larger scc. therefore, the scc distribution cannot be expected to follow lemma  <dig> precisely.

underlined classes belong to an isomorphic scc that transports a fragment of eight carbon atoms . columns "s'up" and "s'up " give the theoretical speedup factor obtained when running the o linear equation solver on the networks decomposed into sccs and isomorphic sccs.

fig.  <dig> shows the component graph of 1g. a component graph can be constructed from a digraph by contracting the digraph's sccs into nodes and removing multiple edges between these new nodes. the component graph is a directed acyclic graph  by construction. the component graph in fig.  <dig> contains two isomorphic sccs of size four which lie on parallel paths and cannot be reached from each other.

global connectivity and reachability
in a reasonable iln, every labeling position in every pool can be traced back to at least one labeling position of a substrate pool through a path of metabolic reactions. on the other hand, this means that every isotopomer  can be synthesized by the network if only the substrate pools consist of a suitably labeled mixture of isotopomers.

therefore, at least if the fully labeled isotopomer substrate is part of the input substrate mixture, all labeling positions in the network are affected. on the other hand, not all labeling positions of the substrate may be needed to describe the synthesis of a certain isotopomer. hence, every node of the iln can be associated with a set of essential substrate nodes which fully determines its labeling state.

furthermore, any node can be associated with a reduced network defined by a set of essential nodes which can be found on paths leading from the node's essential substrate nodes to the node itself, i.e. a set of topological predecessors. such a reduced network is typically much smaller than the original network and clearly, a network reduction also yields a dimension reduction of the corresponding ibes.

path tracing
in general, when tracing paths of isotopes through the metabolic network, there are two distinct perspectives:

 <dig>  forward-tracing describes how an isotopic labeling of the substrate distributes among the network's pools, i.e. the result of a forward tracing analysis is a the set of nodes affected by a certain labeling of the substrate.

 <dig>  back-tracing describes the set of nodes feeding a certain node with isotopic labeling, and ultimately the set of input nodes involved in the formation of a metabolite's certain labeling state.

a forward-tracing of the labeling found in the isotopomers of a certain substrate mixture can be performed in the cumomer network e.g. by a depth-first-search starting at the associated substrate cumomers. special care has to be taken for assembly reactions, i.e. when the depth-first search crosses the levels of the cumomer cascade: the product is reachable from the substrate if and only if all educts are reachable from the substrate. tab.  <dig> summarizes some results for the e. coli network "a".

it turns out that single carbon atom positions influence nearly all cumomers in the network . as expected, the coverage increases with an increasing number of labeled carbon atoms, and, as stated above, the fully labeled substrate isotopomer covers all cumomers in the network. curiously, the third carbon atom of the glucose substrate influences only a very small number of cumomers.

the back-tracing can be performed by computing the transitive closure of the cumomer cascade. for a selected cumomer, the result of the back-tracing analysis describes a reduced cumomer network. such a reduced network is minimal for the cumomer node in question, since it contains only cumomer nodes that are essential for the computation of the selected cumomer's labeling state. in essence, this dimension reduction results in a more efficient solution of lbes, since only a minimal se of required lbes has to be solved. for example, tab.  <dig> gives the sizes of the reduced networks necessary to describe the isotopomer labeling distributions of the nineteen amino acid pools found in the e. coli network "a".

in case only a small subset of cumomers needs to be simulated, e.g. all cumomers of a single amino acid pool, a reduced network can be extracted from the full cumomer network. the reduced network provides a significant dimensional reduction and is minimal in the sense that it consists of the smallest subset of cumomers necessary to describe the desired set of cumomers subject to simulation. as an example the sizes of the reduced networks for all nineteen amino acid pools in the e. coli network are shown. note that if the network size reduces to p percent, then also the running time of the simulation algorithm reduces to o percent.

clearly, when forward- or back-tracing hits a node contained in a scc, immediately all nodes of the scc are reachable from the substrate nodes and contained in a node's set of essential nodes, respectively. hence, forward- and back-tracing benefit from the global topological analysis of the cumomer network, since it is much faster to perform this analysis on the component graph than on the unpartitioned network.

by the topology of the cumomer cascade, a cumomer node never depends on a cumomer node of higher weight and therefore the number of a node's topological predecessors naturally increases with increasing weight level of the node. the following statements exemplarily summarize the dependencies for the selected pools ga3p  and lys  of the e. coli network discussed in sec. example network. this dependency information is generated by evaluating the transitive closure of a graph containing the complete cumomer cascade of network "a", comprised of  <dig> cumomer nodes.

• the cumomers of pool ga3p depend on  <dig>  other cumomers of the network and only  <dig> of the  <dig> cumomers of the three substrate pools glc1_in, glc2_in, and glc3_in are used in the formation of ga3p. because ga3p consists of only three carbon atoms, this is below the theoretical maximum, since there are  <dig> substrate cumomers with up to three labeled carbon atoms. furthermore, ga3p depends on the full sets of cumomers of the following metabolites: accoa, co <dig>  dhap, fthf, gly, glyox, m13pga, m2pga, m3pga, pep, pyr, ser.

• the cumomers of pool lys depend on all cumomers of pool ga3p and additionally on the full set of cumomers of the pools asp, fum, mal, oaa, succ, succoa, and thr. although l-lysine has six carbon atoms, it only depends on the same  <dig> substrate cumomers as ga3p. because the cumomers of l-lysine depend on  <dig> other cumomers, a simulation would include only  <dig> % of the network's cumomers.

general flow of material
the component graph, a dag that shows the relations between the sccs of the network, describes the general flow of material through the network. while in level one of the cascade every labeling position in the network is reachable from at least one labeling position of the substrate, this situation changes with increasing fragment size which causes the cumomer network graph to break up into many ccs.

the decomposition of the cumomer network graphs into sccs also reveals interesting information about how a certain fragment cycles through a sequence of reactions. for example, in fig.  <dig> a fragment of eight carbon atoms is transported by a cyclic sequence of four reactions.

another example is the scc consisting of  <dig> nodes found on level one of the cumomer cascade in the unidirectional network "b" . this scc describes a cyclic path of a single carbon atom through all reactions of the tca cycle. because of the fact, that this is the only scc describing such a closed path, it can be concluded that only a single carbon atom has the potential to stay on the tca cycle for one or more rounds. for larger fragments, the tca cycle is broken up like in the example shown in fig.  <dig> 

CONCLUSIONS
speeding up metabolic flux analysis
metabolic flux analysis  by using isotopic tracers currently is the most reliable tool for the experimental determination of metabolic fluxes in a living cell. in contrast to more specialized mfa approaches, universal methods for the evaluation of isotope labeling experiments  do not rely on special assumptions on network topology, flux reversibility or measurement configuration. one major drawback of universal methods is that they inevitably involve the solution of the full set of nonlinear isotope labeling balance equations  describing the flow of labeled material in the network. moreover, this operation needs to be repeated in a nonlinear parameter fitting procedure for flux estimation.

consequently, computational complexity can be seen as a major drawback of the inverse simulation method which prohibits its application to larger networks, high throughput experiments or the usage of advanced statistical methods. the present contribution addresses this problem by revealing so far unknown properties of the underlying isotope labeling networks  and introducing a novel algorithm for the solution of ibes by exploiting these properties.

compared to the classical ibe solution method by cumomer fractions, which can be considered as the state of the art, the new algorithm provides a speed-up by a factor of  <dig> for a realistically sized e. coli central metabolic example network with about  <dig> cumomer nodes . a prototypical c++ implementation performs a single ibe solution run in only  <dig> milliseconds. clearly, by speeding up this central computational step, all further mfa algorithms based on simulation are accelerated by about the same factor.

network decomposition
the functional principle of the novel ibe solution algorithm is closely related to the structure of the iln which describes the isotopic label flow by a directed graph. the computational speed-up is achieved by decomposing the  iln's weight levels into smaller components. although this technique for dealing with linear equation systems is well-known from other fields of scientific computing, it strongly depends on the structure of the underlying equations whether this approach is successful. in general, the application domain must have certain physical or geometrical properties that naturally lead to weakly connected or even disconnected network structures.

in fact, the first weight level of iles  is known to be quite strongly connected, i.e. a network decomposition will only yield a minor speed-up here. this might be the reason why, in this context, network decomposition methods have not been considered before. the new discovery of the present investigation is, that the higher weight level networks tend to break up into a large number of very small components, the strongly connected components . since the networks on upper weight levels are usually of much higher dimension compared to the atom transition network  this explains the dramatic speed-up of equation solution.

the theoretical foundation of ile network decomposition is given by lemma  <dig> which, for the first time, rigorously proves the incremental dissolution of weight level networks as an inherent property of ilns. in particular, the network connectivity decreases monotonously with increasing weight level. this special feature of ilns is demonstrated for the e. coli network where  <dig> of  <dig> network components have a size smaller than  <dig> 

tracing of isotopic labeling
knowing the fate of labeled molecules in a cle is an important information for experimental design. since the 1980ies many researchers have manually traced labeled molecular fragments through ilns. however, this strategy will never yield a complete structural understanding of label flow. by applying graph theoretic concepts and algorithms such a global understanding of ilns has been achieved for the first time. in particular, the sccs reveal all kinds of cyclic flows which is of special interest because these cycles introduce interdependencies between ibes.

there are two diametral perspectives when tracing isotopic labeling through the network: on the one hand, the forward-tracing describes the fate of labeled compounds by identification of the set of affected nodes. this is an especially interesting application for biochemists who are interested in how the metabolic reactions distribute a specific isotopic labeling through the network. on the other hand, the back-tracing elucidates the origin of certain fragments, explains their formation and transport through the network. once a single node of a scc is involved, all other nodes of the same scc can be reached, too.

both, forward- and back-tracing become particularly simple. knowing the sccs the global label flow can be described by an acyclic graph connecting cyclic subnetworks. if one node of a sccs is involved then all other nodes of the same scc are reachable by labeled material, too.

as an example for path tracing, the isotopomer distributions of the amino acid pools found in the discussed e. coli network were shown to be influenced by only of 5–20% of the nodes found in the original network. when the simulation is allowed to restrict to the metabolic pools that are actually measured, this additionally leads to a considerable dimension reduction. by the application of a similar back-tracing scheme a comparable network reduction for mass isotopomer networks was obtained in  <cit> .

computational efficiency
generally, the running time for the solution of a nonlinear equation system, without exploiting any additional structural features, is in the order of ℓ·o where n is the system's dimension and ℓ the number of iteration steps of a newton-type method. in the case of ibes the system naturally decomposes into s +  <dig> weight levels, i.e.

  n = n <dig> + n <dig> + ... + ns. 

moreover, each level only needs the solution of a linear equation system. this cascaded structure of the ibe equation system was already exploited in  <cit>  and gave rise to a direct numerical solution of complexity

  ∑k=1so. 

this algorithm can be considered as the present state of the art for ibe solution and is widely applied in the mfa community  <cit>  and it already yields a significant speed-up of ibe solution. however, the largest nk is typically in the same order of magnitude as n, thus dominating the computational effort. for example, in the e. coli network max{ni} = n <dig> =  <dig> ≈  <dig> ·n.

the global topological analysis now revealed that, particularly, the higher weight level networks with larger values of nk decompose into many smaller subnetworks, i.e.

  nk=nk,1+nk,2+...+nk,tk. 

consequently, the overall computational effort for solving the ibes reduces to

  ∑k=1s∑j=1tko. 

clearly, the precise values of the nk,j depend on the specific network under investigation and can be influenced by different modeling assumptions on reaction reversibilities . nevertheless, an approximate upper bound for computing time can be provided, when the size of the largest network component  is known. because for sufficiently large ν it holds

  m13+...+mν3≪ <dig> 

all network components smaller than max{nk,j} can be rearranged into groups of total size ≈ max{nk,j}. this is possible because  there will be naturally a majority of very small sccs. after grouping the sccs it follows

  ∑k=1s∑j=1tko≪nmax⁡{nk,j}⋅o. 

in practice, this upper bound is very pessimistic as shown with the e. coli network. here, it turned out that max{nk, j} = n <dig>   <dig> =  <dig> ≈  <dig> ·n, but  <dig> % of the sccs had a size smaller than  <dig>  this explains the achieved speed-up factor compared to the standard method.

isomorphic subnetworks
another important result of the present investigation proven in lemma  <dig> is the natural occurrence of many isomorphic subnetworks in an iln. as the lemma suggests, the network is composed of many isomorphic subnetworks which actually lead to classes of identical subsystems sharing the same equation systems, though having different inhomogeneous terms. in fact, the presence of hundreds of isomorphic components could be verified for the e. coli network. here,  <dig> of the  <dig> components of size >  <dig> have isomorphic images. this further reduces computational complexity because matrices only need to be factorized once.

moreover, isomorphism also explains a fact that was known before from an instationary analysis of isotope labeling systems. it turned out empirically by numerical computations that many eigenvalues of these systems occur repeatedly. this multiplicity of eigenvalues is simply caused by classes of isomorphic sccs. knowledge on eigenvalues is very important for determining the time constants of an ile  <cit> .

towards genome-wide networks
a great challenge of isotopic mfa is the extension to larger networks up to genome-scale applications. generally, it is no problem to apply the algorithms for topological analysis to much larger networks with n ≫  <dig>   <dig> nodes because network decomposition is computationally cheap  ≈ o). moreover, this network analysis procedure needs to be carried out only once. in contrast, the bottleneck is the subsequent solution of the ibes.

at first glance, the third powers in eq.  indicate that genome-scale networks are still out of reach. however, the following consideration reveals that one can be much more optimistic: by eq.  the total computing time is dominated by the largest scc in the network. moreover, lemma  <dig> guarantees that this scc will always lie in network level one . if the size of the largest scc subnetwork is limited the growth of computational effort will only be moderate, even for genome-wide networks.

it follows, that in order to judge the applicability of the new method to a large network only the atom transition network has to be inspected. clearly, an example network is required to verify these considerations. fortunately, during the reviewing process of this paper, a first genome-wide metabolic network for e. coli was published in  <cit>  which contains not only  <dig> metabolites and  <dig> reaction steps but also the corresponding carbon atom transition information for  <dig> reactions thereof. although the proposed network cannot be considered to be fully verified at the moment it was prepared for processing with the new ibe solution algorithm. during this process some inconsistencies had to be removed, some corrections were necessary and a few reaction steps have been added. this results in a network containing a total of  <dig> metabolites and  <dig> reaction steps. for the sake of brevity the details cannot given here. the metabolic network can be obtained from the authors on request.

this genome-wide network contains  <dig> carbon atoms . because the largest metabolite in the network has  <dig> carbon atoms the complete network has  <dig> cumomer nodes in total. the largest cumomer level  has  <dig> nodes. fig.  <dig> shows the scc statistics of the genome-wide network. the largest scc on level  <dig> has dimension  <dig> which is about three times the largest scc dimension in the e. coli model discussed above. comprehensive sccs of the dimensions  <dig>   <dig> and  <dig> where found on different levels; however,  <dig> % of the sccs are of size lower than  <dig>  the number of isomorphic sccs is growing tremendously. for example there is a large class of  <dig> isomorphic sccs of size four and even six isomorphic sccs of size  <dig>  the percentage of non-trivial sccs  without isomorphic copies is only  <dig> %.

the solution of the linear equation system of level  <dig>  using a general o method takes in the order of  <dig> minutes which clearly shows the limitations of the current standard method for repeated ibe solution. in contrast, one single ibe solution step of the genome-wide network, including the decomposition of the  <dig> balance equations into ccs and sccs, can be performed within a computing time of about one second, which suits well for mfa application. since the largest scc in the genome-wide network is about three times larger than the one in the smaller e. coli network an increase of computing time of about factor  <dig> ≈  <dig> can be expected – indeed an increase about factor  <dig> is observed. these computing times demonstrate that, by exploiting the topology of ilns, universal methods for isotopic mfa can now be applied to genome-wide networks.

general experimental limitations
because there is currently no way to establish an universal mfa algorithm  without solving ibe systems any such algorithm will profit from the achieved speedup. this puts the frontier of possible applications further into unknown territory: larger networks, advanced statistical methods and high-throughput evaluations are now within the range of isotope-based mfa methods.

clearly, the application of the new ibe solution algorithm does not affect the principal applicability of the isotopic flux analysis method because the set of equations that are to be solved remains the same. in particular, the problems of statistical or structural non-identifiability due to insufficient measurement information and of incorrect representation of the biological network persist  <cit> . however, it should be noticed that universal algorithms have less problems here than more specific approaches to mfa which, unlike universal approaches, can never exploit all ibe constraints and the full measurement information.

further potential for speeding-up mfa
recently, an alternate approach to formulate ibes was introduced in  <cit> . hereby, the dimension of ilns can be dramatically reduced using the concept of elementary metabolite units . noting that this emu framework relies on exactly the same network structure as treated in the present contribution, any network decomposition will also be beneficial for emu models. in fact, our method to reduce the computational effort for isotope labeling systems by decomposition into smaller units is orthogonal to the emu approach. this actually means that both approaches – cumomer network decomposition and emu modeling – can be combined and will certainly yield another speedup which is certainly even higher compared to that of the single methods. summarizing, network decomposition and emu modeling are not rivalling approaches but rather synergetic methods. a future contribution covering more numerical details will answer the question how beneficial the combination of both concepts is.

abbreviations
cc, connected component; cln, cumomer labeling network; dag, directed acyclic graph; ibe, isotopomer balance equation; ile, isotope labeling experiment; iln, isotope labeling network; lbe, labeling balance equation; mfa, metabolic flux analysis; mna, metabolic network analysis; ms, mass spectrometry; nmr, nuclear magnetic resonance; scc, strongly connected component

authors' contributions
mw developed the methods for the graph theoretical analysis of ilns including the improved algorithms for forward simulation of labeling networks in isotopically stationary state. kn and ww conceived of the study, participated in its elaboration and coordination and helped to draft the manuscript. all authors read and approved the manuscript.

appendix a: short introduction to isotope-based mfa
metabolic flux analysis
metabolic fluxes, or synonymously in-vivo reaction rates, represent the operative determinants of cellular function and regulation. metabolic flux analysis  aims at the precise quantification of all metabolic fluxes in the central metabolic pathways of a microorganism and has become a key technology for systems biology. it is an invaluable tool for genetic engineering since the resulting flux map is essential for evaluating the effects of varying growth conditions or genetric manipulations.

intracellular fluxes are per se not directly measurable and have to be estimated from measured quantities through model-based interpretation with the aid of computational routines. balancing intracellular metabolite pools in a given reaction network and observing extracellular fluxes  constitutes the stoichiometric mfa approach. in order to determine all unknown fluxes several critical assumptions have to be met which inherently limit the capabilities of this simplest form of flux analysis. clearly, bidirectional fluxes, metabolic cycles or unknown co-factor utilization are out of reach for stoichiometric mfa  <cit> .

performing isotope labeling experiments  makes the labeling state of cellular compounds a measurable and highly informative quantity. its exploitation can effectively remove the bottleneck of flux determination immanent to stoichiometric mfa. in an ile, 13c-labeled substrate  is fed to the cell in a continuous culture using a chemostat in order to maintain metabolic stationarity. driven by the highly specific enzymatic reactions, the 13c isotopes distribute among the cell's metabolites until the isotope labeling becomes equilibrate throughout the network. in the classical, stationary 13c mfa the metabolic intermediates are sampled. the metabolites' emerging specific isotope isomer  patterns can be measured using mass spectrometry  or nuclear magnetic resonance  methods.

computational procedure
in order to reconstruct the unknown fluxes from the measured data a complex mathematical modeling and computational simulation procedure has to be applied. accepting as basic assumptions that the metabolites are homogeneously distributed and no mass isotope effects occur, the general computational sequence shall be illustrated here with the example network shown in fig.  <dig> which is already discussed in the main text. despite of its simplicity, this toy example is sufficient to outline the main aspects here. for an introduction into the general modeling framework of classical, stationary 13c iles reader is referred to  <cit> . in the classical, stationary 13c mfa the metabolic intermediates are sampled, .

step 1: stoichiometric equations
as a preliminary, the model of the metabolic network under investigation has to be set up. following the law of mass conservation, stoichiometric equations of the stationary reaction system can be formulated  <cit>  without including any labeling information. one balance equation has to be specified for each intermediate metabolite pool in the system, i.e. the sum of all fluxes arriving in a pool equals the sum of the fluxes that leave it :

  poolinfluxeffluxa:v0+v3=v1b:v1=v2+v4c,d:v2=v <dig> 

step 2: flux constraints
eqns.  constitute four equations for five fluxes. due to the redundancy of the equations for pools c and d this leaves two degrees of freedom for the system solution, i.e. if two of the fluxes are known all other fluxes can immediately be calculated. commonly, the uptake flux v <dig> is assumed to be measurable. if then, for instance, v <dig> is fixed, the cycle is determined. the fluxes v <dig>  v <dig> are called free fluxes, while all other fluxes are called dependent. notice, that the choice of free fluxes is usually neither unique  nor is any set feasible . by appointing the free fluxes which are subject to the parameter fitting procedure  a parameterization of the stoichiometric model is achieved. thus, in order to determine the free fluxes at least some additional information is required that can be supplied by cles.

step 3: simulation of a cle
the required structural information for tracing isotopic labeling through the atom backbone of the metabolic pathways is described by the atom network . for realistic networks this information nowadays can be taken from biochemistry textbooks. based on this representation the isotopomer labeling network  is derived  which explains the formation of every isotopomer in the reaction system.

as starting point for the computation of synthetic labeling distribution arising from a specifically labeled input substrate, mass balance equations are derived for every isotopomer fraction in the iln. for instance, three of the twelve isotopomer balance equations for the network in fig. 2c are:

   

the first equation reveals a fundamental problem of ibes: assembly reactions introduce nonlinear terms into the equations • in this case). besides the large number of ibes, say n, their nonlinearity is the major reason why the running time of basically all numerical methods used for their solution is at least o.

applying the translation rules given in def.  <dig> the ibes  are transformed into a set of cumomer balance equations  having cumomer fractions as unknowns. interestingly it turns out that cbes can be partitioned by weight  positions, cf. def. 1).

here, the cbes which correspond to cumomers with an  label in all positions  are redundant because the value of the associated cumomer fractions is always  <dig>  hence, they reduce to the stoichiometric equations . for the network shown in fig. 2c this results in the modified network shown in fig.  <dig> and then following eight cbes:

   

as a main difference to ibes, there are no splitting reactions in a cumomer network, in the sense that a cumomer distributes its labeled positions to more than one product. the equation for  shows that the transformation into cumomers did not remove all nonlinear terms. if, however, the subnetworks defined by the cumomers' weight are solved consecutively in the order of ascending weight the nonlinear terms can be easily evaluated because they appear as constants in the subsequent equations. this cascaded structure of the cbes makes them accessible for accurate and efficient direct solution methods  when both the free fluxes and the input specification of e are given. the calculation step towards the stationary cumomer/isotopomer state is referred to as forward simulation problem. the obtained solutions, cumomer fractions, can be easily converted back into isotopomer fractions by a linear transformation.

step 4: modeling of measurements
to actually evaluate the ile one operative step is still missing: the relation between the isotopomer/cumomer fractions of a metabolite pool and their quantitative labeling measurements. accordingly, the example is now extended by a measurement scenario to illustrate the modeling process. to this end, the metabolite b is exemplary assumed to be observable by the use of ms technique. analogous equations can be derived for other measurement methods like 1h- or 13c-nmr  <cit> . in case of ms, molecules with  <dig>   <dig> or  <dig> labeled carbon atoms are distinguishable. thus, ideally three mass isotopomer fractions can be observed. after correcting the mass shift due to naturally occurring stable isotopes  <cit>  the associated measurement equations read:

   

here, the samples yb, i, i =  <dig>   <dig>   <dig> are affected by measurement errors εi which are typically assumed to be independent and normally distributed with zero mean and standard deviations σi. these quantities are estimated by repetition of experiments or expert knowledge about the overall sampling and analytic procedure. notice that one of the three values yb, i, i =  <dig>   <dig>   <dig> is redundant with the other two because their sum must always be one.

it turns out that the measurement information  alone is not capable of determining all the isotopomer fractions of b. at the utmost, sophisticated combination of several data sets from different analytic methodologies can provide that. clearly, the ratio between the number of available ms measurements and from such data identifiable isotopomers becomes worse when the number of carbon atoms increases.

step 5: flux estimation
relying on the steps 1– <dig> a mathematical model for flux estimation is composed which describes the relation between free fluxes and measured data. typically, the flux distribution is identified by fitting the fluxes to the observed data, whereby the difference between simulated and measured isotope labeling patterns is minimized in an iterative procedure  <cit> , figure  <dig> 

the general optimization problem is given by minimizing the sum s of residuals subject to the free fluxes:

  =arg⁡min⁡v <dig> v2s 

in order to mimic the varying precision of the data, each residual is weighted with the inverse variance of the associated measurement error. for the running example the weighted sum of squares reads:

   

where v0meas is the observed uptake rate with variance σv <dig> and the arguments are left out for convenience. application of state of the art optimization routines  in an iterative procedure then provides the desired flux estimates v^ <dig>  v^ <dig> 

the question whether the measured information is sufficient to determine the unknown free fluxes is referred to as identifiability analysis and requires sophisticated statistical methods. e.g., data consistency checking can be done by performing a χ <dig> test. it is not aimed to assess these advanced topics here. for details the reader is referred to  <cit> 

appendix b: proofs
proof of lemma 1
lemma  <dig> states that the connectivity of kg, i.e. ε = |ke|/|kv|, decreases monotonically with increasing weight level k, i.e. ε ≤ ε. the lemma can be justified by a counting argument:

proof
the fixed number of cumomer nodes of a metabolite on weight level k is given by the number of combinations, i.e. , where s is the number of available labeling positions in the metabolite. obviously, only metabolites with at least k labeling positions contribute cumomers to weight level k.

• for unimolecular reactions of type a → b, pools a and b necessarily have the same number of labeling positions. the number of edges linking the cumomers of both pools equals the number of cumomers of pool a or b, since pool b is obtained from a by a permutation of labeling positions. hence, the number of edges is proportional to the number of nodes by a constant a throughout the levels k of the cascade, i.e. |ke| = α·|kv|, and consequently ε = ε.

• for any bimolecular reaction a + b ⇌ c where molecules a and b have sa and sb labeling positions, and pool c has sa + sb labeling positions, there exist weight conserving cumomer transitions a ⇌ c, b ⇌ c. since the inequality +≤ holds , the number of cumomers of pool con level k of the cascade is always greater than or equal the number of cumomers of pools a and b. hence, with increasing level k, there exist cumomers of pool c which have no reaction partners in pools a and b and the number of cumomers grows faster than the number of transitions, i.e. ε ≤ ε.   □

proof of lemma 3
lemma  <dig> states that a sequence of reactions transporting a maximal fragment consisting of s labeling positions induces  disjoint isomorphic paths on weight level k of the cascade:

proof
because width  = s the reaction sequence transports a fragment of size s. it follows, that there are  isomorphic paths on weight level k of the cascade and ∑k=1s=2s− <dig> isomorphic paths on weight levels  <dig> ..., s.

furthermore, there are no isomorphic paths beyond weight level s: if the largest participating atom backbone has more than s atoms then at least one of the atom backbones of size s is the result of a splitting reaction. the split off atoms must not be labeled otherwise the weight-conservation constraint would be violated . for the same reason, assembly reactions may only append unlabeled atoms, because any labeled atom would increase the weight.

all isomorphic paths on weight level k are guaranteed to be disjoint, i.e. they do not share common cumomer nodes, since reactions r <dig> ...,rℓ are always one-one mappings  of labeling positions.   □

supplementary material
additional file 1
reactions and carbon atom transitions of the e. coli example network. the list contains the subset of metabolic reactions considered for the e. coli example network shown in fig.  <dig>  the letters following the "#" symbol denote the metabolite's carbon atoms and the specific transfer of carbon atoms performed by an enzyme  <cit> . only the reactions shown in tab.  <dig> are assumed to be unidirectional.

click here for file
