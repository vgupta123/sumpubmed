BACKGROUND
chromatin-immunoprecipitation on chip  is a technique for identifying protein-dna interactions. for this purpose, the chromatin is bound to the protein of interest, then trimmed to yield a protein-bound fraction of dna. the protein-bound fraction of dna is then immunoprecipitated with a protein-specific antibody and hybridized to tiling microarrays  <cit> . the complex experimental procedure and the high dimensionality of the output data require thorough bioinformatical analyses which assess the quality of the experiments and ensures the reliability of the results  <cit> . the practical need for a chip-chip analysis tool has led to the development of either gui-based or command line-oriented software . we favor the command line solution, which has been realized in our software, because virtually every chip-chip experiment requires flexible adaptations to its individual design as well as customized methods to test the hypotheses under investigation.

implementation
we present the open-source software package starr, which is available as part of the open source bioconductor project  <cit> . it is an extension package for the programming language and statistical environment r  <cit> . starr facilitates analysis of chip-chip data, with particular but not exclusive support of the affymetrix™ microarray platform. its functionality comprises remapping of probe sequences to the genome, data import, quality assessment, and visual data exploration. starr provides new high level analysis tools, e.g., the alignment of chip signals along annotated gene features, and combined analysis of the chip signals and complementary gene expression measurements. it uses the standard microarray data structures of bioconductor, thus building on and fully exploiting the package ringo  <cit> . the sequence mapping algorithm and some functions for peak finding are implemented in c to increase computation speed. the mapping of the probes to the position of the genome are stored in an object of the bioconductor class probeanno. intensity measurements from the chip experiments are stored in an expressionset object, which makes the results of starr accessible to all other r packages that operate on these common classes.

RESULTS
preparation
sometimes a remapping of reporters to the genome may be necessary. this prevents probe sequences matching to either none or multiple sites of a current genome sequence, which might happen in the case of a probe annotation file being built upon an outdated version of the target species' genome sequence. mending these false matches is mandatory, because all subsequent steps rely on correct probe annotation. until now, this task required external programs like xman  <cit>  or mummer  <cit> , which can be inconvenient and time-consuming. starr contains a novel update function for microarray probe annotation  files. it implements the aho-corasick algorithm  <cit> , which is designed for efficient string matching. remapping all probe sequences with starr takes only seconds for small genomes like yeast and minutes for larger genomes like human . the result is a corrected, ready-to-use bpmap file.

preprocessing
we facilitated data import as much as possible, since in our experience, this is a major obstacle for the widespread use of r packages in the field of chip-chip analysis. data import from the microarray manufacturers nimblegen and agilent has already been implemented in ringo, the affymetrix array platform is covered by starr. there are two kinds of files that must be known to starr: the .bpmap file which contains the mapping of the reporter sequences to their physical position on the array, and the .cel files which contain the actual measurement values. all data, no matter from which platform, are stored in the common bioconductor object expressionset, which makes them accessible to a number of r packages operating on that data structure. the built-in import procedure of starr furthermore automatically creates r objects containing additional annotation , which is indespensible for our purposes. there exist alternative import functions, e.g., in the packages affytiling, oligo or rmat  <cit> , but these do not extract all the information we need, and often they use a different format. genomic annotation can either be read directly from a gff file or obtained via the biomart package  <cit> .

it would be desirable to discuss the structure of cel and gff files and of the expressionset/probeanno classes at greater length, but this is beyond the scope of this paper. we refer to the vignette of the starr package, which addresses these more technical aspects in detail.

the obligatory second step in the analysis protocol is quality control. the complex experimental procedures of a chip-chip assay make errors almost inevitable. a special issue of affymetrix oligo arrays is the intensity bias caused by the sequence-specific gc-content of the oligomer probes  <cit> . sometimes this bias is not appropriately corrected due to improper normalization. thus we included a new quality control plot routine for examining measurement bias and variation before and after normalization. starr displays the average expression of probes as a function of their gc-content, and it calculates a position-specific bias of every nucleotide in each of the  <dig> positions within the probe . we used this visulization to check whether the mat normalization method  <cit>  does accurately correct for sequence-specific hybridization bias. we used the r implementation rmat  <cit>  of the algorithm for normalization. as is shown in figure  <dig>  it partly removes the systematic errors in the unnormalized data, yet the diagnostic plot reveals a strong residual bias in the processed data. we compared the performance of mat to that of a normalization by a reference experiment. such control measurements are obtained by either performing a mock immunoprecipitation, i.e. an immunoprecipitation which is designed to reflect unspecific antibody binding, or by simply digesting and processing genomic dna of that organism. it turns out that a rank percentile normalization of experiment and reference, followed by a simple subtraction of the reference from the experiment measurements yields substantially better results than rmat . we therefore advise experimentalists to perform at least one control immunoprecipitation for normalization purposes. moreover, starr provides many other quality control plots like an in silico reconstruction of the physical array image to identify flawed regions on the array, or pairwise ma-plots, boxplots and heat-scatter plots to visualize pairwise dependencies within the dataset. for the purpose of bias removal , starr interfaces the package limma. it also contains standard normalization methods like the loess normalization, or the median-rank-percentile normalization proposed by buck and lieb in  <dig>  <cit> . for a comparison of chip-chip normalization methods, see recent publications  <cit> .

high-level analysis
we demonstrate the utility of starr by applying it to a yeast rna-polymerase ii  chip experiment. one of the most prominent purposes of chip experiments is the identification and localization of peaked binding events on the genome. although, by virtue of compatibility, we can draw on the facilities of other peak detection algorithms like ringo  <cit> , acme  <cit>  or bac  <cit> , we implemented a novel algorithm - cmarrt - which was developed by p.f. kuan  <cit>  and performs well in practice. for further postprocessing of chip-enriched regions, we suggest the r package chippeakanno.

starr provides functions for the visualization of a set of "profiles"  along genomic positions. our profileplot function relates to the conventional mean value plot like a box plot relates to an individual sample mean: let the profiles be given as the rows of a samples × positions matrix that contains the respective signal of a sample at a given position. instead of plotting a line for each profile , the q-quantiles for each position  are calculated, where q runs through a set of representative quantiles. then for each q, the profile line of the q-quantiles is plotted. color coding of the quantile profiles further aids the interpretation of the plot.

another useful high-level plot in starr is the correlationplot, which displays the correlation of a gene-related binding signal to its corresponding gene expression. figure  <dig> shows a plot in which the mean polii occupancy in various transcript regions of  <dig> genes is compared to the corresponding mrna expression. each region is defined by its begin and end position relative to the transcription start and termination site . the regions are plotted in the lower panel of figure  <dig>  for each region, the correlation between the vector of mean occupancies and the vector of gene expression values is calculated and shown in the upper panel. the correlation plot reveals that polii occcupancy at the transcription start is not a good predictor of mrna expression, but the mean occupancy of polii in the elongation phase  is. we expect that a more detailed analysis of particular gene groups, and a comparison of polii profiles under different environmental conditions will yield valuable new insights.

CONCLUSIONS
apart from covering the standard processes of data acquisition and preprocessing, starr is a bioconductor package that offers a range of novel high-level tools that greatly enhance the exploration of chip-chip experiments. those include functions like peak finding, summary visualization of gene groups, and correlation analysis with expression data. on the side of the low-level analysis, we implemented a convenient probe remapping algorithm that helps to keep annotation standards high. by relying on standard bioconductor object classes, starr can easily interface other bioconductor packages. it therefore makes the full functionality of ringo amenable to the analysis of affymetrix tiling arrays. all functions and methods in the starr package are well documented in help pages and in a vignette, which also contains a sample workflow in r. altogether, starr constitutes a powerful and comprehensive tool for tiling array analysis across established one- and two-color technologies like affymetrix, agilent and nimblegen.

availability and requirements
the r-package starr is available from the bioconductor web site at http://www.bioconductor.org and runs on linux, mac os and ms-windows. it requires an installed version of r , which is freely available from the comprehensive r archive network  at http://cran.r-project.org, and other bioconductor packages, namely ringo, affy, affxparser, and vsn plus the cran package pspline and mass. the easiest way to obtain the most recent version of the software, with all its dependencies, is to follow the instructions at http://www.bioconductor.org/download. support is provided by the bioconductor mailing list and the package maintainer. starr is distributed under the terms of the artistic license  <dig> . an r script reproducing the entire results of this paper, together with the data files can be found in the supplements as additional file  <dig>  and on the website http://www.lmb.uni-muenchen.de/tresch/starr.html. chip-chip data of yeast polii binding was published by venters and pugh in  <dig>  <cit>  and is available on array express under the accession number e-mexp- <dig>  the gene expression data used here is available under accession number e-mexp- <dig>  transcription start and termination sites were obtained from david et al.  <cit> .

authors' contributions
bz implemented the starr package and did the analysis. pfk contributed his implementation of the cmarrt algorithm. at initiated and supervised the project. at and bz wrote the manuscript, and all authors approved of its final version.

supplementary material
additional file 1
r script of high level analysis. the r script that generates the plots of this paper is contained in the supplements. the data files that are needed to run the script can be downloaded either from public databases , or they can be obtained from http://www.lmb.uni-muenchen.de/tresch/starr.html.

click here for file

 acknowledgements
we thank michael lidschreiber, andreas mayer, matthias siebert, johannes soeding and kemal akman for useful comments on the package, joern toedling for help on ringo, and anna ratcliffe for proofreading. this work is supported by the 'sonderforschungsbereich' sfb <dig> 
