BACKGROUND
the construction of gene regulatory networks is an extremely difficult problem owing to their complexity and the difficulty of obtaining the relevant time series data, in terms of sampling rate, measurement accuracy, and quantity. for instance, microarray data usually come in samples much too small for accurate inference, have a very low sampling rate relative to most cell signaling, measure average transcript across many cells, and are susceptible to many confounding factors which adversely affect the signal-to-noise ratio. in particular, for human cells, with data coming from patients, there are no time-course data and the data come from cells that have already undergone a sequence of mutations, so that the regulatory mechanisms of the original cell are no longer intact. rather than depend on expression data, one can use known pathway information to construct regulatory relations and thereby develop an uncertainty class of networks whose regulatory dynamics are consistent with the pathway knowledge. an algorithm for doing this has been developed in the context of boolean networks  <cit> . if one could obtain wild-type time-course data, then one could reduce this uncertainty class by standard boolean network inference methods. given that in practice we usually only have access to stationary patient data and that the progression of mutations leading to the cancerous state has already occurred, we would like to use the available data to reduce the uncertainty class. in fact, since all we require is that we have an uncertainty class to begin with and wish to use the tumor data, from an algorithmic perspective it does not matter whether the uncertainty class arises from prior biological knowledge, wild-type data, or a combination of both. the proposed algorithm operates on the basis of probabilistic sequential fault-detection, which views regulatory alterations, such as gene mutations, as faults in the network wiring  <cit> . it estimates the sequence of faults leading to the current  regulatory structure, and from these estimates, a reduced uncertainty class for the original  network. by taking this approach the algorithm simultaneously accomplishes a dual purpose: network inference and fault detection.

the methodology is based on certain fundamental notions regarding cancer development, in particular, that the formation of a tumor is a complex process usually proceeding over a period of decades. normal cells evolve into cells with increasingly neoplastic phenotypes. tumor progression is driven by a sequence of randomly occurring mutations and epigenetic alterations of dna that affect the genes controlling cell proliferation, survival, and other traits associated with malignant cell phenotype. to wit, tumor progression is a multi-step process of changes in the regulatory pathways. a set of pathways must be deregulated during the tumor progression until the tissue reaches a cancer state. a wide variety of normal adult human cell types can be transformed experimentally by perturbing five pathways  <cit> . certain normal human cells require a greater or lesser number of changes before they will become transformed. moreover, the regulatory pathways can be altered in many different ways leading to the same cancer. for instance, studies on colon cancer show that the great majority  of colon carcinomas suffer inactivation of the apc gene on chromosome 5q as an early step in this process, about 40% to 50% acquire a k-ras mutation, 50% to 70% show an loh of chromosome 17p involving p <dig>  and about 60% show an loh on chromosome 18q. most colon cancers will therefore begin with a chromosome  <dig> alteration, but then will take alternative genetic paths on the road toward full-fledged malignancy  <cit> .

in sum, although some common alterations may happen in tumor progression, different patients confront with different types of alterations during the progression, thereby making it important to find a way to identify mutations in order to apply appropriate intervention. very little work has been done on the identification of genetic alterations  in cancer progression using network models. one such example is the work by gerstung et al.  <cit> , where they predicted cancer progression by applying a conjunctive bayesian network, in which the order of gene mutations is extracted.

in this paper, we use the boolean networks with perturbation  framework to model signaling pathways and ultimately predict the gene mutations that occurred during the tumor progression process. boolean networks  have been used in a variety of other contexts and with different objectives in biological applications. kauffman  <cit>  proposed that the cell types are the attractors. he introduced randomization into the networks, in terms of environmental noise  and mutation , which refers to changes in the wiring of the network. random bns and their characteristics have been extensively studied by aldana et. al  <cit> . in a random bn, the average function in-degrees are constant and function outputs are assigned randomly. serra et al.  <cit>  investigated the effects of perturbation in the context of random bns by knocking out a single gene. additionally, intervention in bnp has been also studied by dougherty et al.  <cit>  and qian and dougherty  <cit> .

in this work, we focus on bns with perturbation owing to their role in modeling gene regulatory networks, a key point being that their dynamics can be modeled as markov chains, thereby facilitating the modeling of genetic alterations in signaling pathways by shifting the network steady state distribution  from the normal  ssd toward the cancerous ssd. having this tool in one hand to model signaling pathways, and the cancerous ssd extracted from the malignant tissue  on the other hand, one can test all the possible alterations on the bn satisfying the pathway information to see which one makes the ssd of the altered bn as close to the cancerous ssd as possible. this allows one to track the sequence of mutations. however, there are two concerns for using bnps to model signaling pathways:  the network perturbation probability should be determined, and  signaling pathways provide us with incomplete information, which means that there may be too many bns that satisfy the pathway information. the first issue can be mitigated by finding a good estimate of the perturbation probability. for example, inferring a bnp from a sequence of gene expression data has been studied in  <cit> . in fact, the second issue is the main source of uncertainty in our problem. to the best of our knowledge, the paper by layek et al.  <cit>  is the only work that proposed a method to extract the bn underlying the normal tissue from a set of biological pathways. although this paper introduced an elegant method for extracting the information needed for constructing boolean networks from biological pathways, it yields a large number of networks since the available network knowledge is often incomplete and not enough to point out the true network. to address this issue, we define the notion of a family of boolean networks, which is the set of all bns that satisfy the constraints that are imposed by a given set of pathways. for instance, for a 6-gene signaling pathway, the resulting family can contain  <dig> networks, all of which satisfy the constraints imposed by the pathway.

as mentioned earlier, the main goal of this paper is twofold:  to infer the normal network underlying healthy cells from this family, and at the same time,  to find the set of alterations that have occurred during the cancer progression. toward this goal, we propose a probabilistic sequential fault detection algorithm that can effectively identify the best candidates for the original normal  network and the accumulated gene mutations.

methods
boolean networks 
a boolean network g  is defined by a set v = {x <dig>  x2…,, xn} of binary variables, xi ∈ { <dig> }, i =  <dig> …, n, and a list f =  of boolean functions. the value of xi at time t +  <dig> is completely determined by a subset {xi <dig>  xi <dig>  … ,xiki} ⊂ v at time t via a boolean function fi : { <dig>  1}ki → { <dig> }. transitions are homogeneous in time and we have the update:   

each xi represents the state  of gene i, where xi =  <dig> and xi =  <dig> represent gene i being expressed and not expressed, respectively. it is commonplace to refer to xi as the ith gene. the list f of boolean functions represents the rules of regulatory interactions between genes. that is, any given gene transforms its inputs  into an output, which is the state or expression of the gene itself. all genes are assumed to update synchronously in accordance with the functions assigned to them and this process is then repeated. at any time t, the state of the network is defined by a state vector x = , x <dig>  …,xn), called a gene activity profile . given an initial state, a bn will eventually reach a set of states, called an attractor cycle, through which it will cycle endlessly. each initial state corresponds to a unique attractor cycle and the set of states leading to a specific attractor cycle is known as the basin of attraction  of the attractor cycle.

a boolean network with perturbation  is defined by allowing each gene to possess the possibility of randomly flipping its value with a positive probability p. implicitly, we assume that there is an i.i.d. random perturbation vector γ = , where γi ∈ { <dig>  1}, the ith gene flips if and only if γi =  <dig>  and p = p for i =  <dig>   <dig> …, n. if x is the gap at time t, then the next state x is either f) with probability n or x ⊕ γ with probability  <dig> – n, where f is the multi-output function from the truth table and ⊕ is component-wise addition modulo  <dig>  perturbation makes the corresponding markov chain of a bnp irreducible and ergodic. hence, the network possesses a steady state distribution, ssd, describing its long-run behavior. a bnp inherits the attractor structure from the original boolean network without perturbation, the difference being that a random perturbation can cause a bnp to jump out of an attractor cycle, perhaps then transitioning to a different attractor cycle prior to another perturbation. if p is sufficiently small, then the ssd will reflect the attractor structure within the original network. we can derive the transition probability matrix  p if we know the truth table and the perturbation probability p for a bnp. the tpm of a bnp can be decomposed as:   

where, q is the tpm of the corresponding deterministic bn and h is a 2n × 2n matrix depending only on n and p  <cit> .

we assume there exists a “normal” bn, denoted nnormal, corresponding to a healthy wild-type phenotype, and a family  of bns possessing identical predictor sets as nnormal such that . we refer to this family  as the “uncertainty class” relative to nnormal.

given a bn, we define an “alteration” to be a change in the rule structure . a “path” path = {alt <dig> , alt <dig>  …, altm} is defined as a sequence of m alterations. from a modeling perspective, m denotes the number of alterations that have occurred during the tumor progression and altj refers to the jth alteration. we assume that each alteration affects only a single gene and no two alterations in the same path affect the same gene. the result of applying a path of alterations to a boolean network n is to produce an “altered network” . if we begin with a normal bn, nnormal, and apply a “cancerous path”, pathc, we obtain a cancerous network ncancer =. the following commutativity and associativity properties follow from the definition:   

alterations in cancer progression are commonly gene mutations, and the accumulation of gene mutations is usually responsible for cancer. gene mutation includes both oncogene activation and tumor suppressor gene deactivation, resulting in either continuous activation or deactivation of the corresponding genes. in the context of the bn model, such alteration in gene xi leads to permanently setting the boolean function to fi ≡  <dig> or fi ≡  <dig>  we denote a gene mutation by a pair , which indicates that gene xi is stuck at k ∈ { <dig>  1}. for convenience, we define  and . if a boolean network n is altered by a mutation , this mutated bn is denoted as . for example, for a 4-gene boolean network n,  refers to a mutated version of n, where gene x <dig> is permanently deactivated and gene x <dig> is permanently activated. in this case, in the regulatory truth-table, we will have f <dig> =  <dig> and f <dig> =  <dig> for every set of predictors. gene mutation, also called “1-gene function perturbation”, has been studied  <cit> . it should be noted that, physically, the order of mutations can make a difference in cancer progression, since alterations affect the regulatory structure, thereby affecting subsequent cancer progression. there is, however, no way to take this into account given that we only have steady-state data and no data on transient behavior. from a mathematical perspective, the commutativity in  means that a path is a set of alterations rather than a sequence of alterations; however, we employ the latter terminology owing to its commonplace usage.

now the problem to be addressed in this paper can be stated as follows: given a family  of boolean networks, the steady state distribution  of the cancerous network, and the number of alterations m, what are the best candidates for nnormal and pathc? searching for the best candidate for the normal network involves estimating the distance between altered networks and the cancerous network. since the only available information about the cancerous network is its ssd, we need to define a distance measure between two networks based on their ssds. given two bns with perturbation  and , we compute their distance as follows:   

where , , and ρ is the kullback-leibler divergence  between the ssds πi and πj. this distance measure can be extended to bns by first building the corresponding bnp for each bn using  and a given probability of perturbation p and then computing the distance between the resulting bnps. without any ambiguity, in what follows, we use the same notation for a bn and the induced bnp for notational simplicity.

gene mutation effects
effects of gene mutation in a bnp
in this section, we study the effect of a gene mutation  on the tpm of a bnp and its ssd. gene mutations affect only the regulatory matrix q in , where the mutation of each gene can be modeled as a multiplicative perturbation. thus, for every mutation , we can find a corresponding transformation matrixti,k such that the tpm of the altered bnp is given by:   

where i is a 2n × 2n identity matrix. based on this observation, we can easily prove the commutativity property shown in  . according to the associative property shown in , a sequence of multiple gene mutations can be represented by a single transformation matrix, which is a product of the transformation matrices, each corresponding to a single gene mutation in the sequence. for example, the tpm of a bnp altered by a threefold mutation, , is given by:  

the effect of rank-one perturbations in the tpm of a markov chain on the ssd has been studied in the context of structural intervention in gene regulatory networks  <cit> , and more generally in the framework of markov chain perturbation theory  <cit> . we can utilize these results to analyze the ssd of the altered bnp, whose tpm is given by .

in order to see how existing work on markov chain perturbation can be used to analyze the effect of gene mutations on the ssd, consider two tpms p and  that arise from the original network and the altered network, respectively. let π and  be the ssds of the two networks, such that πτp = πτ and . we can find the analytical expression of the change in ssd using the fundamental matrix z = – <dig>  where e is an all-one column vector  <cit> . the fundamental matrix z exists for any ergodic markov chain. consider a rank-one perturbation, where the tpm of the perturbed markov chain is , where a, b are two arbitrary vectors satisfying bτe =  <dig>  and p is the tpm of the original markov chain. in this case, it can be shown that  <cit>  the following is true:   

now, by representing the change of tpm due to a gene alteration as a sequence of rank-one perturbations, we can utilize  to predict the overall effect of the given mutation on the ssd of the network. to be more precise, suppose the bnp at hand undergoes a single mutation, . the transition probability matrix  of the mutated bnp can be represented as follows:   

for some vectors aj and bj satisfying , and a positive integer u ≤ 2n –  <dig>  the proof can be found in additional file  <dig>  based on  and , the ssd of the altered bnp can be iteratively calculated in at most 2n– <dig> iterations.

example: effect of mutations in a 3-gene network
for illustration, let us consider a simple 3-gene bnp. suppose the bnp is altered by , which means that the gene x <dig> is permanently deactivated such that x <dig> =  <dig>  as a consequence, there cannot be any destination state in q, which is the deterministic part of the tpm p in that arises from the regulatory structure of the bn, that corresponds to x <dig> =  <dig>  hence, if we let q = , where qj is the jth column in q, the corresponding columns in q should be shifted as follows:  

where qj corresponds to the destination state with decimal representation j –  <dig>  and qj ←qi means the jth column should be updated to qi + qj and the ith column to  <dig>  therefore, we get the following transformation matrix:  

and we have:   

note that the rank of q is at most 2=  <dig>  now,  can be decomposed as follows:   

where  for all bi. from  and , we get:   

which is in the form shown in . now, by utilizing the result in , we can analytically compute  through sequential rank-one perturbations as follows:   

where π and  are the ssd vectors for p and , respectively, which satisfy πtp = πt and . zj are the corresponding fundamental matrices, as defined earlier.

overview of the proposed algorithm
suppose we are given a family  of boolean networks that contains the normal network nnormal. based on our definition, the cancerous network can be written as:  

let ssdcancer denote the ssd of the cancerous network ncancer. we define the residual value for a given boolean network n as:   

where np is the bnp with the regulatory matrix q determined by the boolean network n and the perturbation probability p. at each step, the algorithm alters the networks in the current family of networks through a single mutation. after the alterations, the algorithm keeps only those networks that lie within a certain distance from the cancerous network, where the distance is computed by . for the selected networks, the algorithm also keeps a record of the alterations that leads to these altered networks. figure  <dig> provides an illustrative overview of the algorithm. suppose that initially, the network family  contains three 3-gene networks. we assume that n <dig> is the true normal network nnormal, and the cancerous network ncancer is obtained by taking the cancer progression path pathc = {, }, hence ncancer = . given the family , the ssd of the cancerous network ssdcancer, and the number of mutations , the algorithm tries to identify the best candidates for the normal network nnormal and the path pathc that may lead the original network into the cancerous network in two steps.

initially, for each network , there can be  <dig> possible altered networks based on a single gene mutation. these altered networks are shown in the first row of figure  <dig>  in the middle plot. among these networks, the algorithm only selects the networks whose ssds are close to ssdcancer. suppose we select the altered networks that are within β1-distance of cancerous network. the selected networks constitute a new  uncertainty class of networks . next, each network in  can be altered into  <dig> different networks based on an additional single gene mutation. these networks are shown in the second row of figure  <dig>  in the middle plot. among these networks, the algorithm selects only those that are within β2-distance from the cancerous network, resulting in a further reduced uncertainty class of networks . the family  contains the best candidates for the normal network and the cancerous path. for example,  in figure  <dig> contains two candidates  for the normal network. for n <dig>  the cancerous path {, }, and equivalently, {, }, may lead it to the cancerous network with the given steady state distribution ssdcancer. similarly, n <dig> may be another candidate for the normal network, which may get close to the cancerous network also through the path {, }. note that the actual number of networks in  and that in  will depend on the parameters β <dig> and β <dig>  respectively.

details of the proposed algorithm
the detailed procedure of the proposed algorithm is shown in algorithm  <dig>  at each step, one additional single gene mutation is considered. therefore, to detect all m alterations that may have led the normal network into the cancerous network, the algorithm needs to go through m sequential steps. in the first step, we consider all possible single mutations of the form  for every network n in the family , which results in  altered networks. among these networks, we select only those networks whose ssd can get close enough to ssdcancer, after m –  <dig> additional gene mutations. based on this criterion, we select the network-mutation pairs, whose residual values  are smaller than a threshold β <dig>  in the second iteration we start with a new family of bns  that contains the networks selected in the previous iteration. since the gene that was mutated in the first step cannot go through another mutation, every network in  can go through one of  <dig> possible single gene mutations. among these possible altered networks, we select only those networks whose residual values are smaller than a threshold β <dig>  after repeating these steps m times, the final class  will contain the best network-path pairs, where each pair consists of a candidate for the normal network and the cancerous path that may drive the given network into the cancerous state with the given ssd. in each iteration, the threshold βj can be used as a control parameter for trading between efficiency and accuracy. in general, we will have β <dig> ≥ β <dig> ≥ … ≥ βm.

performance metrics
in order to evaluate the performance of the algorithm, we define two metrics. the first metric is the probability that the algorithm will miss the true normal network nnormal and the actual cancerous path pathc of length m:   

we can estimate this probability as follows. let us define:   

where fd is the cumulative distribution function  of the distance d between a bnp  and its altered version obtained by  mutations. estimation of this cdf will be further discussed in the next section. now, if we define:   

we can show that:   

the proof can be found in additional file  <dig>  the second metric to be used is the probability that the algorithm will not be able to detect any network within ∈-distance of the true normal network nnormal :   

these two metrics can be used to evaluate the accuracy of the proposed algorithm.

it would be also interesting to evaluate the computational complexity of the algorithm. when performing an exhaustive search, the total number of residual value computations that would be needed to find the final network family  would be:  

which is exponential with respect to the number of mutations m.

now, suppose that in the ith iteration of the proposed algorithm, αi% of the networks are selected  by controlling the parameter βi. for finding , our algorithm would need:   

residual value computations, where α <dig> =  <dig>  a smaller βi will lead to a smaller αi, thereby reducing the overall complexity of the algorithm. however, this will also increase the probability of missing the true network, hence the parameters βj can be used to control the trade-off between computational efficiency and the prediction accuracy of the algorithm. as we can see from , the computational complexity of the proposed algorithm is polynomial with respect to the number of genes n , while it is exponential with respect to the number of mutations m . however, the parameters αj  allow one to trade between computational efficiency and prediction accuracy. as a result, the proposed algorithm can accurately reconstruct the cancer progression path in a much more efficient manner compared to the exhaustive search, as will be demonstrated in our simulation results.

cumulative distribution function of the distance between a random bnp and its mutated version
we estimate the cdf of the distance between a network and its altered version based on random bns. we define a random boolean network  as a bn:  whose gene predictors are randomly chosen such that every gene has k predictors, and  the truth table of every boolean function fi follows an independent and identically distributed bernoulli distribution, where pb is typically called the bias of the boolean function fi. by allowing random perturbations with probability p in the rbn, we can obtain a random bnp . first, we generate large number of rbnps with certain properties. second, for each rbnp np, we randomly introduce m mutations to obtain an altered network , and measure their distance . based on these observations, we can estimate the cdf,  where m is the number of single gene mutations and p is the perturbation probability in the rbnp.

RESULTS
estimating the cdf of the distance between networks
to execute the algorithm, we first estimated the cdf  of the distance d between an rbnp and its mutated copy. as with ensemble analysis in  <cit>  <cit>  <cit> , we estimate these cdfs based on a large number of randomly generated networks with similar structural properties. the two most important parameters for generating random bns are their bias probability pb and connectivityk. as described earlier, pb is the mean of the bernoulli distribution used to randomly generate the predictor function for each gene in a bn, and k is the maximum number of input variables for each of these functions. we randomly generated  <dig>  bnps with these properties. for each network, we introduced random gene mutations and computed the distance between the original bnp and the altered bnp. we used the matlab function ksdensity to find the cdf that best fits the observed distance distribution. we repeated the overall experiment for different numbers of genes n, different perturbation probabilities p, and different numbers of mutations m.

the estimated cdfs are shown in figure  <dig>  for several different parameters. figure 2- shows the estimation results for 6-gene networks for one or two gene mutations. we can see that the distance increases when we increase the number of mutations while keeping the probability of perturbation fixed. similar behavior can be observed for 8-gene networks shown in figure 2-. we can also see that the distance is generally larger for the 8-gene networks.

as we can see from figure 2-, for 6-gene networks, increasing the perturbation probability from p =  <dig>  to p =  <dig>  decreases the distance. this is intuitive, since gene mutation ) only affects the regulatory part, which plays less important roles as the perturbation probability p increases. as a result, changing the regulatory structure of a bnp will have less significant effects when p is larger. figure 2- shows the results for 8-gene networks, which show similar tendencies.

performance of the algorithm on synthetic network families
we evaluated the performance of the proposed algorithm based on randomly generated families of boolean networks through monte carlo simulations. all random networks in each of these families have identical structural properties . in each family, one network whose boolean functions are canalizing functions was selected as the true normal network nnormal. a canalizing boolean function is a function in which an input with a specific value determines the output of the function regardless of the other inputs. for instance, f = x1orx <dig> is a canalizing function, where x <dig> =  <dig>  will make the output f =  <dig>  regardless of the value of the other input variable. we randomly chose a path of length m and altered the normal network according to the given path to obtain the cancerous network. the steady state distribution  of the cancerous network was computed, to be used as an input for the proposed algorithm. next, we used the proposed algorithm to find out whether it was able to infer the true normal network from a given family of networks and correctly predict the actual cancer progression path, when provided with the number of mutations m and the cancerous ssd. in our simulations, we used pcancer =  <dig> , pb =  <dig> , and k =  <dig>  we considered 6-gene networks with m =  <dig> mutations and 8-gene networks with m =  <dig> mutations. for the case of 6-gene networks, we considered families of size  and . for the case of 8-gene networks, we considered families of size . the algorithm was implemented using matlab  <dig> . <dig> , and all simulations have been performed on a desktop computer with  <dig> ghz intel core i <dig> cpu and 12gb ram. each ssd computation took around  <dig>  × 10– <dig> sec and  <dig>  × 10– <dig> sec for n =  <dig> and n =  <dig>  respectively.

performance of the proposed algorithm evaluated on  <dig> randomly generated network families. each family contained  6-gene networks 

performance of the proposed algorithm evaluated on  <dig> randomly generated network families. each family contained , 6-gene networks .

we also evaluated the performance of the proposed algorithm based on randomly generated network families, each of which contains  networks with 8-genes, with m =  <dig> gene mutations. the experimental results are summarized in table  <dig>  the first column in this table shows the probabilities p <dig> and p <dig> that were used to choose β <dig> and β <dig>  using . the threshold β <dig> was set to β <dig> =  <dig> . table  <dig> shows that increasing the threshold values result in a higher probability of success  but also a higher computational cost, as we would expect. in practical situations, the actual perturbation probability pcancer may not be exactly known, in which case we would have to estimate the probability. to evaluate the robustness of the proposed algorithm, in the presence of model mismatch, we performed another set of simulations, whose results are summarized in table  <dig>  we used randomly generated network families, each with  6-gene networks, and considered m =  <dig> mutations. as we can see in table  <dig>  there was no significant performance degradation when the perturbation probability p used by the algorithm was different from the true perturbation probability pcancer. the results for families with  networks are summarized in table  <dig>  which show that the proposed algorithm is robust to model mismatch. finally, table  <dig> shows the results for network families with  8-gene networks with m =  <dig> gene mutations, which also clearly shows the robustness of our algorithm.

performance of the proposed algorithm evaluated on  <dig> randomly generated network families. each family contained  8-gene networks 

performance of the proposed algorithm in case of model mismatch. evaluated on  <dig> randomly generated network families. each family contained  6-gene networks .

performance of the proposed algorithm in case of model mismatch. evaluated on  <dig> randomly generated network families. each family contained ,  <dig> 6-gene networks .

performance of the proposed algorithm in case of model mismatch. evaluated on  <dig> randomly generated network families. each family contained  8-gene networks .

performance on cancerous networks involving the p <dig> gene
next, we evaluated the performance of the proposed algorithm based on a family of bns constructed from pathways that involve the p <dig> gene. tumor suppressor gene p <dig> has been extensively studied and it is known to be involved in various well-known biological pathways. it has been observed that p <dig> is mutated in 30-50% of common human cancers  <cit> . in fact, in the presence of dna damage, a mutant p <dig> may lead to the emergence of abnormal cells. figure  <dig> shows the atm-p53-wip1–mdm <dig> pathways that involve the tumor suppressor gene p <dig>  <cit> .

these pathways operate in different ways depending on the context, determined by the presence  of a dna damage event that results in dna double-strand breaks. here, we consider the case when dna damage is present, which may lead to the development and progression of tumor. under this context, we consider single and double mutations in the given pathways, where we focus on the mutation of p <dig> and mdm <dig>  each gene alteration can be one of the three forms: mutation, amplification, or deletion. sequencing data of  <dig> patients with glioblastoma, provided by tcga, showed that 32% and 12% of the patients suffered from the alteration in the p <dig> and mdm <dig> genes, respectively. also among  <dig> patients with serous ovarian cancer, 96% suffered from the mutation of p <dig>  a similar study has revealed that about 26% of  <dig> patients with sarcoma have amplified mdm <dig>  mutation in p <dig> and amplification in mdm <dig> have been also simultaneously observed in some cases. based on these observations made in existing cancer studies, we consider the following types of alterations in our experiments: , , and {, }, where p <dig> is permanently deactivated and/or mdm <dig> is permanently activated. in a recent work  <cit> , it has been shown that the pathways in figure  <dig> do not uniquely determine the normal boolean network nnormal that governs healthy cells. we used the method proposed in  <cit>  to enumerate all possible boolean networks that satisfy the constraints imposed by the given pathways. following  <cit> , we constructed four karnaugh maps, one for each gene in the given pathways. karnaugh maps have been used in logic circuit design to simplify a given boolean function and derive its minimal representation. in a karnaugh map  <cit> , each position in the map  corresponds to a specific state , such that neighboring states have unit hamming distance. the value at each position indicates the value of a particular gene at the next time point, which is a boolean function of the current state. the resulting maps are shown in figure  <dig>  in these tables, each line-segment, attached to a gene, shows the locations where that gene the takes value  <dig>  the symbol x is used to indicate positions where the available pathway information was not enough for uniquely determining the table entries. these entries may take either  <dig> or  <dig> without violating the constraints. as a result, the given karnaugh maps give rise to an uncertainty class of networks  that contains  <dig>  where  <dig> is the number of entries in the given maps that cannot be uniquely determined. since mdm <dig> is directly connected to three genes in figure  <dig>  we assume the connectivity to be k =  <dig>  which is used to estimate the cdf of the distance between a random bnp and its altered version. the bn reported in  <cit>  is assumed to be the true normal network nnormal, as this network was shown to faithfully reproduce the experimentally observed behavior of the genes in published literature. we assumed pcancer to be  <dig> . as in the previous section, we evaluated the performance of the proposed algorithm under two different cases: when we have a perfect estimate of the perturbation probability  and when there is a model mismatch .

case-1: deactiviation of p53
we considered the alteration of the boolean network reported in  <cit>  through the permanent deactivation of p <dig> ). we used our algorithm to detect the true normal network and the gene mutation. table  <dig> shows the simulation result when the threshold was set to β <dig> =  <dig> . the second column in the table shows the number of networks in the final network family, and the third column shows the total number of network-path pairs predicted by the algorithm. the fourth column shows the number of different paths in the predicted result. we also categorized the result of each experiment as a “success ” or a “failure ”, based on whether the final prediction contained the true network-path pair or not. as we can see, our algorithm was able to reduce the uncertainty class of networks without missing the true network for p =  <dig> , <dig> , <dig> . for p =  <dig> , the algorithm missed the true network, mainly because the perturbation probability was high enough to render the effects of the regulatory structure of the network relatively insignificant. increasing β <dig> from  <dig>  to  <dig>  increases the number of network-path pairs included in the final prediction, thereby preventing the algorithm from missing the true network, as shown in table  <dig>  in terms of fault detection, the proposed algorithm performed very well. as shown in table  <dig> and table  <dig>  the algorithm was able to correctly pinpoint the actual gene mutation out of  <dig> possible mutations, when it was successful.

performance of the proposed algorithm in the case when p <dig> is deactivated. threshold was set to β <dig> =  <dig>  and the true perturbation probability was assumed to be .

performance of the proposed algorithm in the case when p <dig> is deactivated. threshold was set to β <dig> =  <dig>  and the true perturbation probability was assumed to be .

case-2: amplification of mdm2
next, we altered the normal network by mutating mdm <dig> such that it is amplified ). the results are summarized in table  <dig> and table  <dig> for β <dig> =  <dig>  and β <dig> =  <dig> , respectively. for β <dig>  our algorithm was able to reduce the uncertainty class of networks without missing the true normal network for p =  <dig>  and p =  <dig> . when the perturbation probability became larger, the regulatory structure from the pathways was obscured, and the algorithm was not able to effectively reduce the uncertainty class . by increasing β <dig> from  <dig>  to  <dig> , the algorithm could successfully reduce the uncertainty class for p =  <dig> , as shown in table  <dig> 

performance of the proposed algorithm in the case when mdm <dig> is amplified. threshold was set to β <dig> =  <dig>  and the true perturbation probability was assumed to be .

performance of the proposed algorithm in the case when mdm <dig> is amplified. threshold was set to β <dig> = <dig>  and the true perturbation probability was assumed to be .

case-3: simultaneous deactivation of p <dig> and amplification of mdm2
finally, we considered the case when p <dig> was deactivated and mdm <dig> was amplified at the same time. table  <dig> and table  <dig> summarize the results of applying the proposed algorithm for the case of double gene mutations:  and . as we would expect, the proposed algorithm did not perform well in this case, since introducing two gene mutations in a 4-gene network almost completely obscures the regulatory structure in the original normal network. in fact, the networks in the initial uncertainty class  will yield similar  ssds once we mutate two genes. these results lead to an interesting insight into the expected performance of the proposed algorithm. as mentioned throughout the paper, the proposed algorithm aims to backtrace the set of gene mutations that has led to an  cancerous gene regulatory network with a given ssd. suppose the number of mutations m is relatively small compared to the total number of genes n in the network . in such a case, the dynamics of the cancerous network would be largely governed by the regulatory mechanisms in the original healthy network. even though it is theoretically possible that a few gene alterations lead to significant changes in the overall ssd, identifying these alterations would be still feasible since the regulatory structure of the original network would remain mostly intact. however, if the number of mutations gets larger , the activity of many genes would be “frozen”, either being permanently deactivated or permanently amplified, in which case the dynamics and the regulatory structure of the original network would be significantly lost. as a result, networks that originally have very distinct structures may yield similar ssds as a result of the accrued mutations. in this case, it would be difficult for the algorithm to make predictions with high accuracy, since the available information would be too small to effectively cope with the present uncertainty.

performance of the proposed algorithm when p <dig> is deactivated and mdm <dig> is amplified. several different values of β <dig> was used , and β <dig> was set to  <dig> . the perturbation probability was assumed to be known .

performance of the proposed algorithm when p <dig> is deactivated and mdm <dig> is amplified. several different values of β <dig> was used , and β <dig> was set to  <dig> . we assumed that the true perturbation probability is unknown, hence there is a model mismatch .

CONCLUSIONS
we proposed an effective probabilistic algorithm for reconstructing the tumor progression process. given an uncertainty class of networks, which arises from our partial knowledge of the true gene regulatory network represented by biological pathways, and the steady state distribution of a cancerous network, the proposed algorithm tries to simultaneously infer the true gene regulatory network that underlies healthy cells and to predict the sequence of gene mutations that occurred during the tumor progression process. as demonstrated by our experiments, based on both randomly generated networks and realistic networks constructed from known biological pathways that involve the tumor suppressor gene p <dig>  our algorithm can effectively cope with the uncertainty present in gene regulatory networks and accurately infer the normal  network and the actual path of tumor progression with high probability. furthermore, the proposed algorithm is robust to model mismatch and provides us with effective means for trading prediction accuracy for computational efficiency.

the computational complexity of the algorithm depends on the number of genes in the network, the number of mutations, and the number of networks in the initial uncertainty class, and increasing any of these numbers will increase the computational overhead. based on the mathematical representation of boolean networks, increasing the number of genes will exponentially increase the number of possible networks. however, this rapid increase does not necessarily mean that the size of the uncertainty class of networks that we need to deal with will increase at the same rate. for example, many of the mathematically possible networks may not be considered biologically viable, hence may be omitted in practice. moreover, although the total number of states in a boolean network with n genes is 2n, many states may be eliminated via state reduction, and the reduced network may consist of considerably fewer states  <cit> . in fact, the whole idea of network reduction is relevant to the present problem, just as it is to determining control polices for gene regulatory networks, where computational intractability prohibits the design of control policies without constraining the network size  <cit> . for example, even when the gene expression levels are restricted to be binary, a network with  <dig> genes, absent some form of state reduction, cannot be considered, because the size of the resulting transition probability matrix would be  <dig> ×  <dig>  making any kind of dynamic or control analysis intractable. another possible way to reduce the complexity of the algorithm is to restrict the possible gene mutations via the use of prior knowledge. for example, we may restrict the possible mutant genes only to a smaller subset of genes that are known to be susceptible to mutation. furthermore, prior knowledge concerning the expected type of mutation for a susceptible gene  can be taken into account. although we did not constrain the possible gene mutations nor applied any network reduction technique in this study, such modifications are fairly straightforward and may be used to enhance the overall computational efficiency of the proposed algorithm.

authors' contributions
conceived and designed the experiments: mse, erd. developed the algorithm and performed the experiments: mse. analyzed the data: mse, erd, bjy. wrote the paper: mse, erd, bjy.

competing interests
the authors declare that they have no competing interests.

supplementary material
additional file 1
click here for file

 acknowledgements
this work was supported by the w. m. keck foundation.

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2011: proceedings of the eighth annual mcbios conference. computational biology and bioinformatics for a new decade. the full contents of the supplement are available online at http://www.biomedcentral.com/1471-2105/12?issue=s <dig> 
