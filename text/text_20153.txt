BACKGROUND
massively parallel sequencing  has and will continue to produce tremendous biological insights  <cit> . however, the ability to answer certain genomic questions is dependent on read length, and in some cases, the most commonly available read lengths are shorter than what is required  <cit> . for example, read length may limit the robustness of de novo genome assembly  <cit> . single molecule, high molecular weight  dna sequencing by pacbio has had success producing significantly longer read lengths than many other technologies  <cit> , but even their impressive maximum read length, 40 kb, may still be too short to answer some questions regarding genomic structural variants  <cit> . until sequencing technologies are able to characterize longer molecules, alternative methods for hmw dna assembly are required. restriction fragment length analysis has long been a preferred method for analyzing longer dna molecules .

recent technical developments commercialized by the company bionano genomics  increased throughput for this type of long molecule characterization. their method uses modified restriction enzymes to incorporate single-strand breaks at restriction sites, which are then labeled by using polymerase to incorporate fluorescent nucleotide analogs. labeled sample is loaded into an array of nanofabricated channels that linearize the dna. waves of dna can be loaded into the channels and imaged with a high-powered microscope and high-resolution camera. individual molecules are assembled based on shared patterns of restriction sites into representations of the entire genome.

as with any single molecule technology, there is significant noise in the raw data. sources of noise in this type of mapping include limitations in camera resolution, enzyme efficiency , and non-uniform behavior of fluorescent molecules and the dna duplex  <cit> . additionally, depending on genome size and complexity, restriction fragment length patterns may be similar at different genomic loci by chance. successful assembly algorithms must compensate for this noise in order to reconstruct accurate models of chromosomes. these algorithms incorporate noise compensation measures such as fuzzy matching for lengths between restriction sites, modeling enzyme error probabilities, and requiring whole molecule alignments that are long and similar enough to be unlikely results of chance alone  <cit> . these compensating measures rely in large part on descriptions of the data error profile, which are provided by the user as input parameters. therefore, optimum assembly requires that a user select appropriate input parameters.

there are methods for empirical estimation of error profiles, many of which rely on significant genomic resources. for example, bng provides software that maps a random subset of molecules to a reference genome sequence assembly, and selects error parameters that maximize both the number of molecules that align, and the goodness of fit for those alignments. however, this method depends on a highly contiguous sequence assembly for the organism of interest, which might not be available. one potential alternative for selecting accurate parameters is trial and error. using a variety of input parameters yields a variety of assemblies, from which an optimal solution might be chosen.

trial and error is a computationally expensive strategy. in order to be feasible, it should minimize redundant calculations and re-use intermediate results wherever possible. bionano genomics produces their own software for de novo assembly, which, internally, can make use of intermediate results. however, the user interface for that software makes result re-use impractical. therefore, to test the effectiveness of the trial and error strategy, a new interface had to be developed.

we approached the problems of short read limitations, noise in physical map data, and the computational intensity of the trial and error strategy using a specific dataset. gossypium raimondii is a cotton species that is the closest living relative to one of the subgenome progenitors of the agriculturally significant allopolyploid, gossypium hirsutum  <cit> . gossypium raimondii has a high quality reference genome sequence assembly that was created using mps, as well as genetic and traditional physical maps  <cit> . an extended abstract describing a portion of this work has been published previously  <cit> .

methods
mapping high molecular weight dna molecules
young leaf tissue from several gossypium raimondii plants was flash frozen in liquid nitrogen and shipped on dry ice to kansas state university, a certified service provider for long-range dna mapping with bng’s technology. they performed hmw dna extraction according to a proprietary protocol that includes physical disruption of the cell wall, polyphenol isolation with pvp, and embedding of unlysed nuclei in agarose gel to prevent dna shearing. dna molecules were subjected to sequence-specific, single-strand nicking at sites recognized by two modified restriction enzymes, nt.bspq <dig> and nt.bbvcl, simultaneously. these enzymes were selected by simulating digestion of the reference genome sequence assembly  <cit>  with a variety of enzymes, and selecting the enzyme or pair of enzymes that gave the expected label density closest to  <dig> nicks per  <dig> kilobase-pairs . restriction sites were labeled with fluorescent nucleotide analogs, which were incorporated by taq polymerase, and the dna backbone was stained with the non-specific, intercalating dye, yoyo- <dig>  finally, labeled, stained dna molecules were linearized by physical constriction in nanoscopic channels, immobilized with an electric current, and imaged with a high-powered microscope and high-resolution camera. software provided by bng converted raw images into digital representations of individual molecules.

parameter estimation by trial and error
the user interface provided by bng allows the user to specify a number of input parameters that are known to affect map assembly algorithms . a significance threshold for accepting pairwise molecule alignments is an assumption about genome complexity, which frequently, but not necessarily, scales with genome size. it is an indication of how probable an alignment between two molecules is expected to occur because of random chance instead of a common genomic locus. false positive and false negative label rates explain, respectively, the density of observed labels found at locations other than the expected restriction sites, and the proportion of restriction sites that are not labeled, due to enzyme inefficiency. it is an assumption of the algorithm that false positive labels and false negative labels are distributed randomly throughout the genome. minimum molecule length and minimum labels per molecule are not assumptions about the data error profile, or the genomic complexity. rather, they represent a compromise between the amount of data included and the reliability of each data point, where longer, more label-dense molecules are more reliable. additionally, the user interface has multiple parameters to describe variance in observed distances between labels compared to actual restriction site distributions, which is caused by molecule stretching and non-uniform stain behavior, as well as options relevant to the assembly refinement processes . although all of these parameters do not apply uniformly to all of the steps in the assembly process, the user interface only allows a single designation for each.

we designed and wrote python code that would facilitate automatic assembly using a variety of values for those input parameters. this approach is similar to that used by kansas state university in their program stitch  <cit> , except that it does not perform assembly refinement steps , and it breaks each assembly into its component parts in order to reduce the computational resources required. we used our code to generate  <dig> unrefined de novo assemblies of our gossypium raimondii dataset, each with a different combination of the input parameters shown in table  <dig> table  <dig> input parameter values


min. is short for minimum



we assessed the quality of the assemblies based on their contiguity, their internal consistency, and their accuracy according to the reference genome. assemblies were scored for total length, contig n <dig> length, and length of longest contig for contiguity. internal consistency was divided into two metrics, the average number of overlapping molecules in which each label is observed, and the proportion of molecules not excluded from the assembly as singletons. finally, we measured accuracy by comparing our assemblies to a highly contiguous reference genome sequence, using software provided by bng. we report the weighted average confidence score, where confidence is the negative, 10-base logarithm of the p-value of an alignment.

RESULTS
data collection
we collected a total of  <dig>  gigabase-pairs  of physical map data over nine, two-flow-cell runs of bng’s irys® machine. this is enough data for ~241× coverage of the similar to  <dig> megabase-pair  g. raimondii genome. data statistics for individual flow cells are shown in table  <dig>  the weighted average across datasets for the molecule n <dig> length was  <dig>  kbp. the expected label density using nt.bspq <dig> and nt.bbvcl was  <dig>  labels per  <dig> kbp. our observed label density was consistently lower than the expected .table  <dig> map data collected



a tool for efficient trial and error
in order to generate a large number of assemblies in a reasonable amount of time, we developed the code omware, available at  <cit> . our code generates a set of unrefined assemblies that results from a certain combination of input parameters. it automatically detects and runs only the minimum number of compatible precursor steps. unrefined assembly with bng’s software proceeds in four steps. first, input molecules are sorted. second, they are split into files of approximately equal sizes, for computational efficiency. third, each unique pair of molecules is aligned to produce an overlap score based on label pattern similarity. finally, genomic regions are assembled using overlap scores in an overlap-layout-consensus graph. in order to produce  <dig> unrefined assemblies, omware performed only nine pairwise alignment steps, and a single split and sort step. the combinations of input parameters that affect certain steps, as well as the computational resource requirements of those steps, are shown in table  <dig>  the code also includes an interface to read and write data in the file formats used by bng.table  <dig> compute resources required for de novo assembly


ainput parameter applies only as an output filter; it does not affect the algorithms internal workings. a step run with lenient parameters can serve as input for a more stringent downstream step, which will filter its input


bestimation of resources required if all  <dig> sort, split, and pairwise alignment steps were run



assembly quality
contiguity and internal consistency varied widely between assemblies, and were predominantly controlled by two input parameters, minimum molecule length and significance threshold. the maximum total length of any assembly was about  <dig>  gbp, which is larger than the expected genome size of about  <dig> mbp. the shortest assembly covered only  <dig> mbp. contig n <dig> lengths ranged from  <dig> to  <dig> kbp, and the maximum length of any single contig was  <dig>  mbp. in every assembly, a large proportion of input molecules, from  <dig>  to  <dig> , were excluded as singletons. across parameter combinations, the average number of molecules in which each label was observed was between five and nine.

the accuracy of assembled contigs also varied, and appeared to correspond very little with measures of contiguity or internal consistency. the lowest average confidence score of any assembly was  <dig>  , and the highest was  <dig>  . there were no outliers in confidence. the confidence scores are more responsive to changes in false positive and false negative label rates than metrics of contiguity appear to be. the distribution of both contiguity and confidence scores as they are affected by various input parameters can be seen in figs.  <dig> and  <dig> fig.  <dig> assembly accuracy and contig n <dig> lengths are affected by different input parameters. contig n <dig> lengths are relatively stable to permutations of false positive label rates , false negative label rates , and minimum labels per molecule  . when the same assemblies are grouped by minimum molecule length  and significance threshold  , more substantial changes in response to these input parameters are observed. some inaccurate assemblies have high n <dig> lengths. the converse is also true

fig.  <dig> several metrics of assembly contiguity and internal consistency fail to predict assembly accuracy



discussion and 
CONCLUSIONS
a major limitation of this study was data quality. in the data, we observed label densities that were consistently lower than expected. it may be worth noting that bng recommends keeping false positive and false negative label rates below  <dig>  erroneous labels per  <dig> kbp and  <dig>  of restriction sites unlabeled. even with very conservative false positive label rate estimates, our data has a false negative label rate above this recommended threshold. this may be due to the inherent difficulty of extracting contaminant free hmw dna from plants  <cit> . additionally, it is reasonable to suspect that by using two nicking enzymes simultaneously in a buffer that was optimized for only one of the two, we inadvertently reduced enzyme efficiency. these factors may help explain the low internal consistency observed in our assemblies.

it is clear that omware is far more efficient than the bng software at generating a large number of unrefined assemblies. trial and error showed promise for use in scenarios when no reference genome is available. however, without using a reference genome, we were unable to detect reliable, genome-independent predictors of assembly quality in the five metrics of contiguity and internal consistency that we examined.

in scenarios where a reference genome is available, alternative software for empirical estimation of input parameters exists and requires fewer computational resources than omware. in the case of bng’s software, there are some input parameters that omware assays that their software does not, such as minimum sites per molecule, minimum molecule length, and significance threshold. there are also input parameters that omware does not test. molecule stretch or stain inconsistencies manifest as variable distances observed between labels. we did not incorporate this into omware because bng’s internal assembly algorithm uses three separate parameters to compensate for variable distances, permutations on which would have substantially increased the necessary compute resources.

this analysis does yield some interesting insight into the behavior of the de novo assembly algorithm. for example, contiguity and internal consistency change far more in response to significance thresholds and minimum molecule lengths, and by extension, coverage, than they do to false positive and false negative label rates. however, assembly accuracy, as measured by significance of alignments to the reference genome, does respond to these assumptions about enzyme efficiency.

abbreviations
bng, bionano genomics; gbp, gigabase-pairs; hmw, high molecular weight; kbp, kilobase-pairs; mbp, megabase-pairs; mps, massively parallel sequencing.

acknowledgment
we thank the employees of bionano genomics, particularly palak sheth, for answering technical questions regarding the use of their software. we thank members of the udall lab for beta testing omware. we thank chris hanson and zach liechty for maintaining gossypium raiimondii plants and collecting tissue for dna extraction. we thank lindsay chaney for her insight into effective data visualization. we thank three anonymous reviewers for helpful insight into the paper.

declarations
publication of this article was supported by the nsf plant genome program  and cotton inc. .

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2016: selected articles from the 12th annual biotechnology and bioinformatics symposium: bioinformatics. the full contents of the supplement are available online at https://bmcbioinformatics.biomedcentral.com/articles/supplements/.

authors’ contributions
as wrote the manuscript, developed the code for omware, and implemented assembly quality assessment. ju helped with project design, edited the manuscript, and provided guidance and feedback throughout. both authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.
