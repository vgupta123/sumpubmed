BACKGROUND
experimental biologists who incorporate high-content profiling experiments within their research often face the difficultly of understanding results from many different experiments, under different conditions, and at different layers of regulation. results from such experiments report the activity of groups of genes that function together to give rise to changes in cellular phenotype. it is often desired to compare the results from studies such as mrna expression microarrays, chip-chip or chip-seq , rnai screens, proteomics and phosphoproteomics in one coherent global framework. several advanced data mining techniques have been developed to address the challenge of analyzing the complexity of such datasets. approaches fall into different categories which include: network reconstruction, gene-set enrichment analyses, and dynamical modeling  <cit> . gene-set enrichment analyses are probably the most practical and successful approach so far. with this approach groups of genes identified experimentally are associated with prior biological knowledge to identify overlap similarity with sets of annotated genes for the purpose of suggesting functional biological themes  <cit> . the usefulness of such analyses was demonstrated first in what is now a classical study by mootha et al.  <cit>  who examined changes in gene expression in muscle biopsies from diabetic patients to discover a group of genes associated with oxidative phosphorylation that are coordinately down regulated in diabetic muscles. their study led to the development of the gene set enrichment analysis  software and the development of the msigdb database, a database containing over  <dig>  lists of mammalian gene-sets where each gene-set is associated with a specific experiment or a specific common biological function used to label each gene-set  <cit> .

a recent review by huang, sherman and lempicki  <cit>  enlisted  <dig> bioinformatics tools that perform enrichment analyses on lists of genes. most of these tools use the gene ontology  database  <cit>  as the only source for gene-sets with specific functional category. however, several other enrichment tools are capable of linking gene lists with other annotated gene-sets, i.e., pathway databases such as kegg  <cit> , biocarta, and genmapp  <cit> . systems such as gsea  <cit> , david  <cit> , gfinder  <cit> , webgestalt  <cit>  are similar to the software lists2networks  we present here in a sense that they go beyond gene ontology enrichment analysis to integrate other types of biological prior knowledge. for example, david, which started as a gene ontology enrichment tool, now provides enrichment analysis capabilities to examine lists of genes for enrichment in pathways, structural domains, protein interactions, disease association, tissue expression and more  <cit> . another important feature that is implemented in some of these systems is the visualization of the overlap among lists. for example, biovenn is a web-based tool that takes as input two or three lists and draws venn diagrams showing the overlap among lists of genes  <cit> . another feature that is only provided by few systems is the ability to manipulate and merge lists. such functionality exists, for example, in webgestalt which allows users to apply set operations such as union, complementation, and intersection on loaded lists  <cit> .

all gene-set enrichment tools compute statistics of whether the overlap among two sets of genes is significant. this is an important feature since it is possible for two lists of genes to have some overlap but such overlap can be due to chance. computing the statistical significance of overlap among pairs of gene-set lists can be achieved using different contingency table statistics such as fisher exact, binomial proportions, or chi-squared tests. these tests compute the probability of finding the same genes in two or more experiments, or in two or more functional categories. the fisher exact test computes this statistics exactly whereas the binomial proportions or chi-squared tests are approximations. the goal of applying these tests is to find gene-sets with unexpected significant overlap, an overlap which deviates from what is expected by chance. regardless of the test used, the results are often similar but are sensitive to list size  <cit> . alternatively, in many cases the ranking of genes/proteins identified experimentally is known. for example, the fold-change or p-value of the observed gene/protein level as it is compared with an experimental control. hence, several enrichment tools also use non-parametric tests such as kolmogorov-smirnov and wilcoxon tests to compute enrichment with consideration of ranks  <cit> . for the lists2networks system we only implemented the fisher exact test to compute gene-list enrichment and overlap  <cit> . the fisher exact, the binomial proportions, or the chi-squared tests are based on the null normal distribution assumption which treats gene as independent. such an assumption is obviously inaccurate but it simplifies the task and capable of producing useful results.

implementation and 
RESULTS
the lists2networks  system is implemented using a combination of php, jsp/java, and javascript. the data is stored on the server side in a mysql database. to make the application have a look-and-feel of a desktop application asynchronous javascript and xml  is used for concurrent updating of parts of the web-site without full page refreshes. the system contains several modules  which include: an interface to upload lists, an interface to expand lists using background networks, a tool to manipulate lists using set operations, an interface to analyze lists for overlap and enrichment of functional terms, a protein-protein interaction browser, and a user communication system which allows users to share lists with other users. the following is a brief description of the different components/modules of the system:

the starting page and the user communication system
one of the obvious advantages of a web-based system is the ability to access data from any desired location, not being bound to a single computer. additionally, data and analysis can be shared in a collaborative way. the start page of l2n provides users with the ability to communicate with other researchers using an integrated messaging system. for this we use a similar approach found on popular social networking sites such as facebook. the system provides users with the ability to locate other users through a user search utility. once users identify each-other, a friendship can be initiated by a friend request. after establishing a friendship, users can exchange messages and share gene lists. a message-board displays incoming messages and gene lists sharing requests. by accepting a gene-list, sent by another user, the list is automatically integrated into the user-lists-workspace, ready to be analyzed by the analysis components of the system.

the upload component
after starting the system for the first time, the user-lists-workspace is empty. in order to populate the workspace, gene lists have to be uploaded to the system. the upload component of the system allows users to upload lists of mammalian genes in entrez gene symbol format. l2n implements four upload options within the upload component of the system: the first option allows users to drag-and-drop multiple text files containing lists of genes into a java applet. this feature allows fast upload by bypassing the restriction of html forms. alternatively, a standard html form can be used. both the java applet and the html form allow for annotation of the uploaded gene-list with a detailed text-based description. the third and fourth options for uploading lists of genes are self contained and do not required user data. the third option allows users to enter any search term into a pubmed search. the system uses pubmed e-utilities to return a set of abstracts that match the searched term. these abstracts are converted to a list of human entrez gene symbols using generifs. generifs is a manually curated dataset that links publications with genes. the resultant gene list can be uploaded into the workspace. the final and forth upload option uses gene ontology. here users can type biological terms in a search box. the matching terms from the gene ontology database with the associated genes are then displayed and made ready for upload into the workspace.

the expand-lists component
this component of the l2n system provides users with the ability to expand lists based on networks created from known protein-protein interactions, co-expression correlations, or co-annotation correlations. these background knowledge networks are represented as graphs made of nodes and links  <cit> . interactions from those networks are used for "connecting" the genes/proteins from input lists similarly to the way we achieved this for the software system genes2networks  <cit> . the shortest paths between pairs of nodes  from the input list are found to form a subnetwork that "connects" the input list nodes using additional genes/nodes from the background network . the resultant subnetworks are visualized using a flash-based interactive network viewer that is embedded within the application. additionally, the output subnetwork, besides being visualized within the web-page, is made available for download in sif format, amenable for import, analysis and visualization with cytoscape  <cit> . furthermore, the subnetwork that is generated from the input list is automatically converted into a new list that can be added back into the user's workspace as an expanded list. the subnetwork reconstruction process and implementation also contains features that give users the flexibility to set a threshold for inclusion of intermediate nodes and links in the subnetwork. the threshold settings are based on the specificity of the additional proteins/genes  to interact with the input list, as well as the number of steps/links used to connect the nodes. the specificity calculation is using the proportions of links to seed nodes from the intermediate nodes compared with total interactions for the intermediate nodes in the background respective network. intermediates are ranked based on their counts of links in the subnetwork as compared with their total links in the background prior knowledge protein-protein, co-expression or co-annotation networks.

the expand lists component gives users the ability to choose the background network to use when expanding lists. there are three options: a protein-protein interactions network, a co-expression network, and a co-annotation network. the protein-protein interaction network is compiled from a variety of experimentally determined mammalian  interactions recorded in the following databases: biogrid  <cit> , reactome, biomolecular interaction network database   <cit> , the human protein reference database   <cit> , intact  <cit> , database of interaction proteins   <cit> , molecular interactions database   <cit> , pdzbase  <cit> , protein-protein interaction database   <cit> , as well as the interactions described in references  <cit> . all interactions from these databases/datasets were determined experimentally and include a pubmed reference to the primary source article. for creating the co-expression network we used coxpresdb  <cit> , a database which contains a downloadable table of co-expressed genes in mouse and human. to create the co-annotation network we defined a pair-wise distance between genes:   

the co-annotation is based on the co-appearance in annotated gene-set lists from msigdb  <cit> . the pair-wise dependency between genes can be represented as a graph where nodes are genes and edges represent the co-appearance level between two genes in respect to inclusion in an annotated gene-set list.

the set operation component
once lists have been uploaded, and if desired expanded, users can apply set operations on lists to generate additional lists. this feature of the system is useful for performing common steps in the analysis of many different experimental data scenarios. for example, it is often desired to obtain a consensus list of genes that appeared in a set of repeated experiments, i.e., genes that appeared to be consistently up-regulated in several microarray experiments. for applying such operation, users can apply the "intersection" function. similarly, analysis of proteomics data often requires removal of sticky non-specific proteins, for example, removing all ribosomal proteins, which commonly reappear in immuno-precipitation followed by mass-spectrometry  type of experiments. for applying this operation users can apply the "not" function.

the overlap component
the overlap component of l2n is the most extensive, useful and powerful feature of the system. with this feature users can select certain lists from their library of lists to generate an overlap representation between the loaded lists, as well as overlap with categories of prior biological knowledge in the form of collections of labeled gene-lists stored in the gene matrix transposed  flat file format  <cit> . each gmt file contains rows of gene sets where the first two columns in the file describe the list, while the rest of the entries in each row are entrez gene symbols. similarity among lists is computed using the fisher exact test and the overlap is visualized as a distance table matrix . the resultant similarity matrix displays the overlap among user-selected lists and libraries of gene-sets.

the overlap analysis section allows the identification of biological themes that can be associated with multiple lists from the user's-list-workspace. moreover, lists from the workspace can be studied for similarity to each other and to previously annotated gene-sets from many biological categories . a complete list of prior biological knowledge gene-list libraries is provided in table  <dig>  to start the analysis, a gmt file which represents a category of a biological theme has to be selected. as an example, we show the results when the user chooses the kinase-substrate prior knowledge category  applied on a sample set of user inputted lists . before the analysis can begin, the user needs to select the gene lists that should be included in the overlap analysis. after selecting the lists and pressing the large green arrow, the overlap matrix is computed and displayed right next to the listings of the gene lists.

columns include: a) file name as it appears in the drop-down box in the overlap feature on the web-page; b) description of the content of the gene-list library; c) url of the source of the data. d) library created by.

the screenshot in fig.  <dig> shows the results after a sample overlap matrix was created. the matrix itself is interactive. by hovering over the squares in the matrix, information about the content of each square is displayed on the right panel. the large green numbers in fig.  <dig> are the p-values of the overlap enrichment computation using the fisher exact test before applying the bonferroni or benjamini-hochberg corrections. by clicking on the red squares from the row of red squares, columns are sorted by their p-values which represent overlap with annotated gene-list libraries. after the sorting is done a table of ranked enriched terms is displayed on the right panel. the row of red squares, used for sorting, separates the matrix into two separate sections. below the red line is the overlap between the input gene lists and the lists belonging to the chosen biological category. each column of the matrix represents one of the input files, whereas each row below the red line represents a labeled gene list from a prior knowledge library. it is also possible to click on any of the squares of the matrix to see the genes that overlap. the matrix allows fast browsing of enriched functional annotations that match many input lists. furthermore, the enrichment of terms from different categories associated with many input lists can be compared easily where common biological themes can be identified.

in addition to the overlap matrix display, users can view overlap between input lists as a network. such network can be displayed by clicking the "show network" button on top of the overlap matrix . this network visualization displays the input files as nodes, as well as enriched gene lists from a specific prior knowledge category as nodes. only gene lists that are enriched  with at least one other list after the bonferroni correction with a p-value <  <dig>  are connected with an edge and included in the network for visualization. an edge  in the network represents a significant overlap between pairs of lists. input lists are colored in blue, enriched gene lists from a prior knowledge category are in green or black. black nodes are gene lists from the prior knowledge category that have significant overlap with more than one input list. in the example in fig.  <dig> the biological category is kea_kinases and it shows that different lists of proteins from the input lists are associated with different kinases.

the data for the prior biological knowledge enrichment analyses was created using original gmt files we developed, as well as few gmt files downloaded from msigdb  <cit>  . the original gmt files  that we created are: pathways from wikipathways, data from chip experiments, predicted microrna-mrna interactions from mirbase and tragetscan, kinase-substrate interactions from kea, protein-metabolite interactions from hmdb, disease genes from omim, disease-gene neighborhoods using omim and genes2networks, protein interaction hubs using genes2networks and protein structural domains using pfam and interpro. additional available libraries previously created by others are: pathways from kegg, biocarta and genmapp, as well as chromosomal location  <cit> . to generate the micrornas gmt file we processed the data from mirbase  <cit>  and targetscan databases. such databases contain gene lists predicted to be regulated by microrna families. for the kinases, we used a database of experimentally determined kinase-substrate interactions we recently developed for kea  <cit>  by consolidating several web-based resources reporting kinase-substrate relations. the metabolites gmt file was created from data downloaded from hmdb  <cit> , and the disease neighborhood gmt file was created from lists of genes from omim  <cit>  and expanded using protein-protein interactions as described above. expanding lists of disease genes using known protein-protein interactions assisted us in discovering shoc <dig> as a novel noonan syndrome disease causing gene  <cit>  justifying the disease gene neighborhood concept. the gene-lists libraries will be updated manually periodically. specifically we are mostly interested in updating the protein-protein interactions data, kinase-substrate interactions data, datasets from rnai and chip screening, and microrna-mrna target interactions. such datasets will be quality controlled using manual and automated filtering methods. users are welcome to contribute gene-list libraries to the system. however, these contributions will be monitored by the authors for quality.

the list sharing component
since the system is web-based, we provide users with the ability to share lists and communicate results and messages with other users through a dedicated messaging system. the system provides users with the ability to locate other users through a user search utility. once users identify each other and want to communicate and share lists with one another, a friendship request message can be initiated. such request needs to be approved by the requested party for establishing communications. once such friendship has been established, both users can share lists and exchange messages.

the protein-protein interactions browser component
additional feature that is desired by experimental and computational biologists is to explore which proteins directly or indirectly interact with a specific protein of interest. it is also desired to see how lists of interactors of one protein overlap with other experimentally developed lists. for example, results from ip-ms proteomics experiments, pulling down and characterizing interactions for specific protein baits are logically compared to already known interactions for specific proteins based on literature and other resources that previously characterized protein-protein interactions. this can be used to assess how consistent the ip-ms results are with what is already known about protein-protein interactions with the bait. for this, l2n has a protein-protein interactions browser feature where users can quickly identify all direct interactors for a specific gene/protein. users can upload lists of interactors as input lists for comparison, enrichment, expansion, and visualization, as part of the integrated analysis provided by the other parts of the l2n system. the implementation of such browser is delivered as a dynamical text-based expansion system where the original gene/protein is selected from a list and then the lists of direct interactors are dynamically displayed in a recursive manner. protein-protein interactions have been compiled as described above.

flash based network viewer
to visualize networks within a web-page in a dynamic representation, we used flash/actionscript <dig> which allows the efficient development of interactive web content. the advantage of using flash over other recent web technologies such as java applets and ajax is that flash/actionscript <dig> integrates the classes of sprites, which are a powerful vector graphics entity with attached action listeners for user interaction. since the latest version of actionscript , the programming language used in flash is no longer restricted as with previous versions. as <dig> has strong emphasis on visual output and user interactivity, making it ideal for dynamic web-based network visualization purposes. the network viewer is implemented using a force directed layout algorithm to place nodes by minimizing a stress function considering optimal edge length and node repulsion.

case study: integrating proteomics and phosphoproteomics studies applied to profile embryonic stem cell differentiation
to illustrate how l2n can be utilized to integrate results from different but related high-content genome-wide profiling studies, we created a case study . we integrated and analyzed data from the following four proteomics and phosphoproteomics studies applied to profile differentiating mouse and human embryonic stem cells: lu et al.  <cit>  who profiled the nuclear proteome after silencing of nanog; two phosphoproteomics studies of human embryonic stem cells driven to differentiate by two different methods  <cit> ; and the nanog interactome as determined by a serial set of proteomics experiments  <cit> . although our focus and aim of the case study is to demonstrate to novice users the capabilities of the l2n software system, we obtained some interesting results. for example, there are  <dig> proteins that overlap between the nanog-ko-nuclear-day5-up from the lu et al. study and the brill et al. list of phosphoproteins identified four days after inducing differentiation with retinoic acid. this is a statistically significant overlap with a p-value of ~ <dig>  . the proteins from this list are great candidates for further functional experimental validation and characterization as components of an early differentiation pathway. additionally, to further identify proteins that potentially belong to the nanog interactome, we cross referenced an expanded subnetwork made of the nanog interactome reported by wang et al. and the expand list feature of l2n with the lu et al.-day5-down-list. we found that eed, jarid1b, pno <dig>  smarca <dig> and utf <dig> are identified in both lists from such cross-reference analysis. these candidates should be further validated as bona-fide self-renewal components belonging to the nanog interactome. eed and jarid1b are already known components of the self-renewal machinery as was discovered recently .

CONCLUSIONS
lists2networks is a user friendly powerful system that is expected to significantly ease the computational analysis process of experimental biologists employing high-throughput experiments at multiple layers of regulation. it simplifies gene-list enrichment analyses and provides means to expand lists with three types of prior biological knowledge networks, apply list operations, browse protein-protein interactions and communicate lists between users. the ability to form networks of lists based on list similarity is a powerful method to integrate many different experiments with background knowledge for hypothesis generation. while other similar tools may already exist, l2n has several features not implemented in existing systems or partially implemented in other systems. these include, for example, the ability to expand lists using protein-protein interactions, co-expression data, and co-annotation data; the ability to share lists and communicate by a messaging system in a collaborative fashion; web-based application of list operations such as union, complementation and subtraction; never before assembled prior knowledge gene-lists libraries such as: data collected from high-throughput chip experiments, expanded disease gene networks, protein interaction hubs, and kinase substrates; uploaded lists are saved on the server not requiring users to re-upload lists every time they used the system whereas users can manually edit the content of lists with built-in synonym resolution feature. additionally, users can create original gene lists using any search term through pubmed and generifs or easily integrate lists from the gene ontology database.

in regards to future plans, we can implement the system for other model organisms and improve the id matching features. additionally, we plan to provide plug-ins that would enable the exporting and importing of lists using other software systems. in summary, l2n stands out being user-friendly, web-based, robust and simple, making it more accessible for novice users as compared with other existing academic or commercial packages aim to address similar needs.

availability and requirements
project name: lists2networks

project home page: http://www.lists2networks.org

programming languages: php, java, mysql, actionscript/flash

requirement: web browser and internet access, java support, javascript enabled browser, flash player 10

authors' contributions
al and am designed the system. al implemented the system. am wrote the manuscript.

supplementary material
additional file 1
lists2networks case study: integration of proteomics data applied to embryonic stem cells. a demonstration of how to use lists2networks for the analysis of protein lists collected from several proteomics and phosphoproteomics studies that profiled differentiating mouse and human embryonic stem cells.

click here for file

 acknowledgements
this research was supported by nih grant no. 1p50gm071558-01a <dig> and start-up fund from mount sinai school of medicine to am. we thank amin mazloom, ben macarthur, shan zhao and seth berger for help in creating gmt files.
