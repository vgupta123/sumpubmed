BACKGROUND
estrogens  are key regulators in many biological processes, along with a highly recognized role in breast cancer where they control key cellular functions by diffusing through the cell membrane and interacting with the estrogen receptors , transcription factors which play an important role in controlling multiple cellular processes mainly via changes in the expression of selected genes  <cit> . complexity of the cellular responses to estrogen and their receptors can ideally be investigated only with comprehensive analytical approaches, including in particular gene expression profiling with microarrays  <cit> . these technologies allow to assess at genome-wide scale changes in gene activity resulting, for example, from hormonal and pharmacological treatments or pathological and divergent physiological conditions. as changes in gene expression are driven by a dynamic process, the influence of time should not be neglected, but the use of this technique to study kinetics of gene expression changes has not been fully exploited yet. indeed, few statistical methods are available which enable to fully evaluate time series. most of the methods to identify differentially expressed genes adapt classical techniques originally designed for static experiments. this ‘static’ approaches have the disadvantage of not taking into account temporal relationship among samples, leading to results that are often invariant under permutation of the values representing different time points, thus ignoring the biological causality which can be inferred from the temporal response. they do not accurately consider the existing temporal structure in the data which can have as consequence a falsely calculated significance of the genes.

for example, the popular microarray analysis package sam   <cit>  was recently adapted to handle time course data, by considering different time points as distinct groups; the anova  <cit>  approach can also be applied to time course experiments by treating the time variable as a particular experimental factor and other methods  <cit> , including the limma package  <cit>  which uses linear models, follow similar approaches.

on the other hand, most classical time series algorithms, mainly used for signal processing, are quite rigid, including requirement of a large number of time-points, uniform sampling intervals and absence of replicated or missing data-points, which microarray experiments rarely meet.

recently the time variable is starting to be much more considered in the analysis of regulation of gene expression, leading to new developments in the area of analysis of time-course microarray  <cit> . due to the constraints in microarray data structure, however, the problem of detecting and estimating gene expression profiles becomes extremely challenging and robust statistical methodologies are still missing. on the other hand, very few large scale comparisons are available in order to illustrate benefits and drawbacks of current methodologies.

with the aim of setting up a workflow adapted for time course experiments, we tested the available methods tailored for time series analysis and established an analysis protocol to be used in subsequent experiments. the first method we considered introduces the time variable through a gene expression response curve which is expanded over the polynomial or b-spline basis with the coefficients estimated by the least squares procedure  <cit>  . the second method uses a novel multivariate empirical bayes approach to rank genes in the order of interest from longitudinal replicated microarray time course experiments  <cit>  . however, this last method does not consider time curves from a functional point of view, neither provides any cut-off to select statistically significant genes. the third method is a functional bayesian approach in which each gene expression temporal profile is estimated globally by expanding it over an orthogonal basis  <cit>  .

our aim here, rather than to propose new methodologies, is to provide a detailed comparison of different methods which can be used as suitable protocol for analysis of time course gene expression data from microarray experiments.

methods
cell-lines cultures and array hybridizations
human estrogen-responsive breast cancer cells  cultured in steroid-free medium for  <dig> days were stimulated with a mitogenic dose  of 17β-estradiol and rna was extracted before or after  <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> hours hormonal stimulation. cells were collected from multiple parallel cultures and pooled before rna extraction as described before  <cit> . hybridization reactions were performed with illumina human wg- <dig> beadchips following manufacturer's protocols, in duplicate for each sample, except the reference sample  which was in quadruplicate and the 4h sample in triplicate. in the illumina arrays the oligonucleotides are attached to microbeads which are then put onto microarrays using a random self-assembly mechanism  <cit> . also, due to the small dimension of the beads, each bead-type  is present in a number of the order of ≈ 30- <dig> copies, thus providing an internal technical replication that other platforms usually lack. in the present paper, we use the term ‘probe’ and ‘bead’ indifferently, since in each case we use as signal the mean value of each bead population of signals present on the array.

the complete datasets will be submitted to the public repository of microarray data arrayexpress upon publication.

pre-processing
five different normalization algorithms were applied on data, three of them present in the chip manufacturer's analysis software beadstudio and two of them performed using r/bioconductor statistical environment  <cit> . the average method simply adjusts the intensities of each signal so that the average signal of each array becomes the same. the rank invariant is very similar, the only difference is that the scaling factor is calculated only on a subset of rank-invariant genes and not on all genes  <cit> . the cubic spline is the only non-linear method present in the beadstudio software, similar to an existing algorithm  <cit>  and described in the software manual  <cit> . the quantile method  <cit>  acts to uniform the quantile distribution of each array signal population and is widely used as standard in single-channel arrays  <cit> ; it is available through the r/bioconductor packages affy  <cit>  or limma  <cit>  and many other popular analysis software. lumi <cit>  is a new method especially designed for illumina beadchips, based on a modification of the variance stabilizing normalization algorithm  <cit>  to make use of the bead standard deviation associated to each signal, only available in this microarray platform.

after normalization, probe signals were checked for detection against negative controls with a beadstudio internal algorithm and missing values were introduced to replace signals under the detection limit. probes in which the reference sample had less than  <dig> out of  <dig> detected signals were filtered out. then log <dig> transformation was applied on data, except in the case of lumi which uses its own variance stabilizing transformation. ratios of each signal against the average reference signal were calculated and probes with more than 15% missing values of the resulting time series were filtered out.

time series analysis
the following sections contain a brief description of the methods used in this paper to perform the statistical analysis of a microarray experiment made in the course of time. for a detailed description of each method, we refer the reader to each method's reference. some preliminary considerations are however necessary: the number of time points t, j =  <dig> …, n at which each sample is taken is relatively small  and the experimental design is not generally regular, with very few replicates at each time point  =  <dig> …, k, k =  <dig>   <dig> or 3); on the other hand a very large number of genes  are simultaneously measured, some data points might be missing due to technical error and the noise is usually not gaussian.

sliding window analysis
we first extracted a list of differentially expressed genes at each time-point using the internal diffscore test of beadstudio software  <cit>  by using thresholds of different stringency . we denoted as ‘differentially expressed’ genes those which were selected at least in three consecutive time-points. the limits of this procedure are the lack of statistical formalization and the fact that the fixed window does not account for irregularly spaced grid assigning to all points the same weight.

edge
the method proposed in storey et al.  <cit>  apply both to longitudinal and independent data. for each gene the effect of the treatment is modeled as a mathematical function and expanded over the polynomial or p-dimensional b-spline basis . in our case data are not truly longitudinal since the biological source is a cell line, cultured in parallel, under identical and controlled conditions, hence the method is applied in its simplified version.

let zij,k be the relative expression level of the gene i in the kth replicates at the jth time point t where there are i =  <dig> …, n genes and j =  <dig> …, n time points, k =  <dig> ..., ki replicates for time point. the relative observed gene expression values are then modeled by

 zij,k = μi) + ζij,k 

where µi) is the  relative expression time curve for gene i evaluated at time t and can be written in terms of a p-dimensional linear basis :

 μi = β <dig> i + βi,1s1 + βi,2s2 + ... + βi,psp 

where, β <dig> i is the intercept term, p is the same for all genes , and ζij,k are modeled as independent random variables with mean zero and gene dependent variance σi <dig>  under this setup the interest is to test the null hypothesis h <dig> i that μi =  <dig> against the alternative h <dig> i formulated under the general parametrization μi = βi,1s <dig> + βi, 2s <dig> + … + βi,psp with some non zero coefficients. to assess differentially expressed genes, the goodness of model fit under the null hypothesis is compared to that under the alternative hypothesis, by calculating for gene i a f statistic similar to the one used in anova:

 fi = ssi0 − ssi1ssi <dig>  

where ssi <dig> is the sum of squares of the residuals obtained from the null model, and ssi <dig> from the alternative model. however, storey et al.  <cit>  do not impose assumption of normality: the distribution of these statistics is treated as unknown and studied via bootstrap  <cit> , which may require high computational cost. finally, to account for the multiplicity of comparisons, the most significant curves are selected by controlling q-values using an fdr-like procedure  <cit> .

this method is implemented in the user-friendly software edge  <cit> . we used the software with default parameter setting  and q-value thresholds of  <dig>  and  <dig> . the ‘k nearest neighbor’  method  <cit>  is provided to impute missing values, since the method itself does not account for missing data. in order to separate the effect of the method from the procedure to impute the missing values, we repeated the analysis both by filtering out all the genes with missing observations and by using the knn method to impute them.

timecourse
this method applies the novel multivariate empirical bayes approach described in tai et al.  <cit>  to rank genes in the order of interest from longitudinal replicated microarray time course experiments. similarly to storey et al.  <cit> , timecourse can be applied both to the ‘one-sample’ and ‘two-sample’ case, however in the last case it is applicable only to data sets with identical time grids. on the other hand, differently from storey et al.  <cit>  where both longitudinal and independent sampling designs are accounted or from angelini et al.  <cit>  where only the independent sampling is considered, this method is designed for data where replicates are biologically meaningful, for example when a full series of time-points is drawn from the same individual . indeed, biological samples are treated under the ‘fixed effects’ rather than the ‘random effects’ design model. hence, since in this context one replicate is a full time curve , missing data are not allowed and the same number of arrays is required at any time point. on the other hand, different number of replicates are allowed between different genes.

for each gene i and individual k the n-dimensional vector of observations zik = t on the grid t,…,t is assumed to be conditionally independently drawn from a multivariate n-variate normal distribution with unknown mean μi and covariance matrix Σi, i.e.,

 zik|μi, ∑i ∼ nn 

the method only seeks a statistic for ranking genes in the order of evidence against a null hypothesis and does not attempt to find a threshold to select the significant genes. the null hypothesis corresponding to a gene mean expression level being zero is defined as h <dig> i: μi =  <dig>  Σi >  <dig> and the alternative as h <dig> i : μi ≠  <dig>  Σi <  <dig>  an n-dimensional indicator random variable i is defined to reflect the status of the genes:

 ii = { <dig> if h <dig> i is true <dig> ifh <dig> i is true 

with a bernoulli distribution with success probability ω,  <dig> < ω <  <dig>  the multivariate hierarchical bayesian model is built by elicitating the following priors:

 μi | ∑i, ii = 1 ∼ nn  and μi | ∑i, ii = 0 ∼ δ                        ∑i ∼ inv-wishartν −1) 

where η >  <dig> is a scale parameter, ν >  <dig> and ν Λ <  <dig> are the degrees of freedom and scale matrix, respectively. since conjugate priors are elicited on the unknown parameters, all computations for the posterior distributions and the form of the statistics are carried out in a analytical form. moreover, the hyper-parameters, whose amount however increases with the number of time points, can be estimated from the data.

finally, the hotelling t2-statistic is calculated and used to rank genes when the same number of replicates are available for all genes, while the m b-statistics is used when the number of replicates is not equal for all genes  <cit> . for further details on the statistics and on parameters estimation, we refer the interested reader to the original reference. here we only note that, due to the way the data model was conceived, the quantitative information about the time measurements is not explicitly used by this method. the method is implemented in the timecourse r/bioconductor package  <cit> . we applied the method using the first two replicates per time point, since the number of replicates has to be the same along the time curve. also since missing values are not allowed, we repeated the analysis both by filtering out all the genes with missing observations and by using a knn algorithm implementation present in r  <cit> .

bats
bats  software  <cit>  is a newly-developed user friendly tool which implements the functional bayesian approach described in angelini et al.  <cit> . although independently developed, the method appears to be a compromise between edge and timecourse. indeed, similarly to edge, the method treats records as functional data, thus preserving causality and taking into account the temporal nature of data. similarly to timecourse, the bayesian approach is applied in the method at all stages of analysis, but the priors are elicited on the space of the function coefficients, hence the time variable enters in the model in explicit form trough the design matrix.

bats is designed for data consisting of the records on n genes and describing the difference in gene expression levels between treatment and control in a context of independent sampling time course experiment. a gene record is defined as a vector of size mi, containing all the measurements available for gene i. each record is modeled as a noisy measurement of a function μi at a time point t ∈  as in equation  where for each gene i, its expression profile μi is expanded into series over some standard orthonormal basis  on   of gene specific degree  <dig> ≤ li ≤ lmax with coefficients ci, l =  <dig>  ⋯ , li:

 μi =∑l=0liciϕl . 

similar to edge, the objective is to identify the genes showing different functional expressions between treatment and control  ≠ 0), and additionally to explicitly evaluate the effect of the treatment ), which in edge is hidden in the model but it could be obtained by least squares fit of  under model . following angelini et al.  <cit> , genes are treated as conditionally independent and modeled as

 zi=dici+ ζi 

in which di is the block design matrix, the j-row of which is the block vector  replicated kji times; zi= t, ci = t and ζi = t are, respectively, the column vectors of all measurements for gene i, the coefficients of μi in the chosen basis, and random errors. the following hierarchical model is imposed on the data:

 zi|li,ci,σ2lici|li,σ2              ∼∼∼               ntruncated poisson π0δ+n 

all parameters in the model are treated either as random variables or as nuisance parameters that are recovered from data. noise variance σ <dig> is assumed to be random, σ <dig> ˜ ρ in order to account for possibly non-gaussian errors which are quite common in microarray experiments.

three different bayesian models are contained in bats providing the user a more flexible theoretical set-up to accommodate various types of error distributions, namely, all scale mixtures of a normal distribution: delta-type prior ρ=δ, the inverse gamma prior ρ = ig and the exponential type prior ρ = cμσmi−1e−σ2μ/ <dig> which lead to normal, student t and double-exponential errors, respectively. the choice of differentially expressed genes is made on the basis of bayes factors which are used for multiplicity control and are computed using the procedure described by abramovich et al.  <cit> . once significant genes are detected, the coefficients c^i and, subsequently, the curve μ^i are estimated by the posterior means. hyperparameters π <dig> and σ <dig>  γ, b or μ are estimated from the data, or can be entered as known by the user. gene specific parameters τi <dig> and li are estimated by maximizing the marginal likelihood p and the posterior mean or mode of p, respectively.

the advantage of the bayesian model described above is that since all priors are conjugate , all posterior inference can be carried out analytically with very efficient computations.

the method is used for simultaneous estimation of the curves, as well as for ranking the curves  according to their significance level. moreover, significance testing of the curves is carried out by controlling the multiplicity of comparisons from a bayesian perspective  <cit> , providing an automatic cut-off. we performed the analysis by using two error models  and a range of values of the parameter λ, which influences the prior degree of the polynomial curve estimated for each gene.

simulations
to compare performances of edge, timecourse and bats, we carried out a small simulation study by generating data with the simulation utility of bats. we generated data to mimic the structure of the real data set described above, with n =  <dig>  n =  <dig> and kij= <dig> for all j =  <dig>  …,  <dig> except ki4 =  <dig>  in the data sets generated,  <dig> or  <dig> genes were randomly chosen to be “differentially expressed”, corresponding respectively to  <dig> % or  <dig> % of the total number of genes. the first scenario correspond to a case where relatively few genes are involved in the process, the second to a more strong respondence to the treatment. the values of  <dig> and  <dig> where chosen from the prior belief on behavior of the real data experiments. the remaining  <dig> or  <dig> curves were set to identical zero.

for each significant curve, the simulation utility samples the degree of the polynomial litrue from a discrete uniform distribution in , with lmax =  <dig> . polynomials of degree zero are excluded since a nonzero constant signal is questionable from a biological point of view. coefficients ci where randomly sampled from n. matrix qi is set to qi = diag where νi ∼ u and τi <dig> was sampled uniformly in order to produce the signal-to-noise ratio  in the interval between  <dig> and  <dig>  under this set up we can mimic both weak and strong signals and different signal regularity . furthermore, since is known that noise on microarray date has heavier tails than gaussian, we performed simulations under three scenarios of i.i.d. noise: normal n and student t with  <dig> or  <dig> degrees of freedom . student noise was rescaled to have the same variance σ <dig> of the normal case .

in addition, very large values  were filtered out and substituted with missing values, mimicking real data preprocessing where unreliable values are eliminated.

for each kind of noise and number of true signals we generated  <dig> data-set, averaging the results. analysis of simulated data was performed with the three methods with the same choice of parameters used in the real data analysis: edge q-value  <dig>  and  <dig> ; bats error model normal and double exponential and λ =  <dig> and λ = 12; with timecourse we chose the first genes in the ranked list corresponding to the same number of the genes selected by bats on the same dataset, to evaluate the number of false positives and false negatives.

cluster analysis
cluster analysis on the final list of gene profiles significantly affected by estrogen stimulation was performed using a bayesian functional based software, splinecluster  <cit> . the method proposes a hierarchical cluster approach, where the number of cluster is automatically selected by maximizing the marginal distribution. however, it is recommended both for computational and for practical point of view to apply the method only on the relevant subset of genes, instead of the whole dataset of genes. here, similarly to bats, the gene profiles are also represented by expansions over a certain basis and the normal-inverse gamma prior is imposed on the unknown coefficients. the number of clusters and cluster participation are also treated as random, leading to a full bayesian model. since the method does not address many of the issues which we treat in the results and discussion section, we processed the selected data matrix by filtering out missing data points and by averaging the replicates at each time point.

RESULTS
experimental design of the experiment and its implications
we present the analysis performed on a time series of microarray data from breast cancer cells treated with estrogens. our experimental design is formalized in a ‘one sample’ statistical model with a time series, in which replicated arrays for each time-point are technical replicates, with no special relationships between each other. we also have unequally spaced sampling intervals  and  <dig> replicates at each time-point, except one case  in which we have  <dig> replicates. this data structure has quite common features in microarray experimental designs: a number of replicates barely sufficient to get statistically significant results, unequal number of replicates which may be due to technical needs or reasons of biological interest. for example, the higher detail in the first part of the curve reflects a greater interest from a biological point of view in the earlier responses to hormone treatment with respect to the rest of the time series. some difficulties may arise in analyzing data presenting features like these, both for a static analysis approach and with a longitudinal method. in fact, for a static method of comparison treated/non treated, performed point-by-point, the number of replicates of individual time-points is lower than the required minimum of most standard tests. this limited number of replicates is justified by the time-series analysis: since we are interested in the whole profile, we don't need absolute precision in each time point comparison but rather we need to take advantage of the temporal structure of the data and use all information available along the time in order to make appropriate and robust inference.

pre-processing
we evaluated the effect of different normalization algorithms in terms of overlap between the selected gene lists produced with the time-series analysis methods used. after inspection of normalized data, the cubic spline method was discarded since the data produced was not correctly normalized between the arrays , thus requiring further manipulation on data that we decided not to apply. the better overlap was noted between quantile and lumi normalization, with average being the best performing algorithm among the ones present in beadstudio software.

after the filtering step, the genes left for the analysis were  <dig>  of which  <dig>  had between  <dig> and  <dig> missing values.

time series analysis
sliding window analysis
this method is quite naive and is presented just to have a static counterpart to compare with the other methods. we chose to apply it only to data normalized with beadstudio algorithms, thus representing an analysis performed with the only help of the chip manufacturer's software. we applied the internal differential analysis algorithm which uses the bead standard deviation in the error model, thus making it possible to analyze data with only  <dig> replicates for each time-point, as in our case, unlike a standard t-test. results of the analysis with this and the other methods are reported in table  <dig>  we noted a fairly good robustness to normalization effects . although being a very simple procedure, we obtained results which were comparable to other methods having more appropriate assumptions . however, we also have to point out that, by considering a window of three time points regardless of time interval between them, we are incorrectly treating unequally spaced times with the same weight in the analysis. it can nevertheless be useful to detect local changes in the expression.

 numbers indicate the genes obtained by pairwise intersection of different methods of selection. in bold are the selected gene lists for each method.

1diffscore threshold. 2q-value threshold. 3error model = normal, λ= <dig>  4error model = double-exponential, λ= <dig>  5number of ranked genes selected.

edge
edge is distributed as a stand-alone software and, although relying on r  <cit> , it silently uses it in the background, so that the user does not need to know the language to use it but only interacts with a graphical interface. it also has some useful utilities to inspect the input data, such as the possibility to make boxplots, to check the presence of missing data and to impute them with the knn algorithm. the results are highly robust to changing normalizations  except for the case of rank invariant normalization, with which the number of significant genes drops unexpectedly with respect to the others. we obtained similar results both by filtering out missing data and by imputing them. as compared with the other methods, on real data edge selects a surprisingly much longer list of genes . moreover, we observed that, even though we increased the number of permutations, due to the granularity problem, genes with the same q-value are too many, since for example the first  <dig> ,  <dig>  or  <dig>  genes all result as ‘first rank’ genes with the same q-value. to reduce granularity one should further increase the number of permutations, but then as a consequence the computational cost would also increase, thus making the method less convenient to use.

timecourse
timecourse  <cit>  is a package distributed with bioconductor  <cit> , thus requiring knowledge of the statistical environment r  <cit> , which is both an advantage for those familiar with this language, since it is very quick to install and use new packages, but it can be unfriendly for biologists. similarly to edge, we found very similar results both when filtering out genes with missing observations and when imputing them. this method only ranks in order of significance the input gene list without providing an automatic or suggested cut-off to determine which genes are significant. for this reason, on real data we selected the first  <dig> and  <dig> genes of the rank ordered lists to compare results among normalizations and with the other methods. surprisingly, we found a very low overlap both between the ordered lists prepared with different normalizations and with lists produced with other methods . it is worth mentioning that our dataset contains only technical  replicates, thus the method could not take advantage of the replicate identification, nonetheless the difference with the other methods and above all between data normalized with different methods is difficult to explain.

bats
bats is also distributed as a stand-alone software with a graphical and friendly interface, as, although written in matlab  <cit>  it does not require the use of matlab. selection was found robust with respect to changes in parameters  and type of normalization . bats has also some graphical utilities to plot, filter data and compare resulting lists and is the only method which allows to save the estimated profile for the selected genes for further use . as the result on the ‘one sample’ problem, the technique allows different number of basis functions for each curve, which improves the fits, it does not require to pre-determine the most significant genes to select the dimension of the fit and avoids a computer intensive evaluation of the p-values via bootstrap. furthermore, by using the bayesian formulation in combination with the functional approach it can successfully handle various technical difficulties which arise in microarray time-course experiments such as a small number of observations available, non-uniform sampling intervals, presence of missing data or multiple data as well as temporal dependence between observations for each gene, which are not completely addressed by the above mentioned methods. on the other hand, current version of the bats method cannot be applied to the ‘two sample’ case.

comparison of methods
simulation study
tables  <dig> and  <dig> summarize results with the simulated datasets. in particular, for any group of datasets it is reported the average number of rejected hypotheses, i.e. genes declared differentially expressed, the average number of the correctly rejected hypotheses, the false discovery rate, estimated as the average proportion of the falsely rejected hypotheses over the total number of rejected hypotheses, and the false negative rate, estimated as the average proportion of the significant curves not detected over the number of not rejected hypothesis. as already stated, since timecourse does not provide any cut-off point, for the sake of comparison we cut the ranked list on the same number of significant genes as in bats with default parameters choice. we can say that all methods have good performances under all the simulated datasets, with bats providing more accurate results  than the other methods. however, we have to note that the simulated datasets were generated according to several of the bats model assumptions. on the other hand it does not exists an accepted standard dataset of microarray time course to be used as benchmark, neither a way to perform a blind experiment, or a well established set of synthetic test functions as in non parametric regression. different methods account for different biological information and are valid under different assumptions, while the various amount of different interactions and sources of error that can affect the data can often change the performance of a given method from a simulated case to the real data application.

datasets generated with  <dig> true signals, with three different noise models. results were averaged over  <dig> datasets.

1q-value threshold.

2number of rejected chosen equal to the case of bats , for comparison purpose.

3error model n = normal, d = double-exponential, the indicated number is the value of λ.

4rej.  = average number of genes declared differentially expressed.

5corr.  = average number of the correctly rejected hypotheses.

6fdr  = average proportion of falsely rejected hypotheses over the total number of rejected hypotheses.

7fnr  = average proportion of false negatives over the total number of not rejected hypotheses.

datasets generated with  <dig> true signals, with three different noise models. results were averaged over  <dig> datasets.

1q-value threshold.

2number of rejected chosen equal to the case of bats , for comparison purpose.

3error model n = normal, d = double-exponential, the indicated number is the value of λ.

4rej.  = average number of genes declared differentially expressed.

5corr.  = average number of the correctly rejected hypotheses.

6fdr  = average proportion of falsely rejected hypotheses over the total number of rejected hypotheses.

7fnr  = average proportion of false negatives over the total number of not rejected hypotheses.

for what concerns edge, we observe a quite conservative behavior  which is not preserved on the analysis of real data. this might be due to the bootstrap technique applied to estimate the parameters.

in the case of timecourse, we note a higher consistency with the other methods, in spite of its strikingly different results when applied on real data. it is not surprising to observe that the methods performed differently on real data with respect to simulated data, since any simulation has implicit assumptions which may or may not be verified on experimental datasets. apparently, a more irregular noise distribution on real data has arisen opposite problems to edge and timecourse in detecting gene expression signals over the noise, while on the contrary it does not affect the performance of bats significantly.

real data analysis
when several methods are compared on experimental data, there is no clear and well accepted way to compare performance of each approach and the final choice usually depends upon several considerations. we thus first investigated the robustness of each procedure in terms of user selected parameters and different normalization procedures . in table  <dig> are reported the results relative to the gene lists selected by each of the procedures described above, all normalized according to the average method. as shown, the less rigorous sliding window approach as well as edge and bats have a satisfying overlap among the gene list they select. we then considered the different methods from a statistical point of view, analyzing benefits and drawbacks.

sliding windows is of course the less statistically rigorous, it does not take into account unequally spaced time points or missing data nor provides a global measure of significance for the whole time series. on the other hand, this is very intuitive and computationally inexpensive, and may be useful to detect local changes.

edge, on the other hand, suffers for the problem of the granularity of p-values which can be only partially solved by increasing the number of iterations, although at the price of a high computational cost, which can become prohibitive for large dataset. moreover, the choice of an appropriate threshold may become problematic, since small changes lead to remarkable differences in the selected gene lists. furthermore, edge assumes the same degree in the functional expansion of each gene and, as a consequence, it may lack in adaptation. it has, however, the merit of being the first tool to formalize the problem of selection by a functional approach.

timecourse is mainly designed for a slightly different problem, hence its use in the context considered here does not allow to take complete advantage of the methods itself. moreover, similarly to edge, timecourse does not account for missing data, requiring the user to filter out incomplete datasets, missing time points, or to force the user to employ preliminary procedures in order to impute them. furthermore, this method does not provide an automatic cut-off for selecting significant genes, nor uses the quantitative ‘time’ information in an explicit way.

hence, we found bats more appropriate for this experimental setting, since it automatically accounts for various technical difficulties which arise in microarray time course experiments, such as limited number of observations, non uniform sampling intervals or missing/multiple records, all conditions which are not completely addressed by the above mentioned alternative methods. moreover, since bats does not require bootstrap and posterior inference can be evaluated in closed form, and it is applicable also to the larger datasets that are becoming more widely used due to microarray technology improvements and diffusion. furthermore, it has the merit of providing an estimate of the significant expression profile, which is not explicitly provided by any of the other methods, while being also very flexible, capable of handling gene specific variance and, using the bayesian paradigm, allowing better adaptation of the estimates to the underlying data.

cluster analysis
the biological model selected for this study is based on the responsiveness of human breast cancer zr- <dig>  cells to stimulation with estrogen, since it is well known that under these conditions the hormone evokes in the cell complex, timed gene regulation events that result in cell cycle progression and inhibition of cell death  <cit>  and changes in cell metabolism and function  <cit> . this is accomplished by hormonal activation of different signal transduction cascades leading, among other, to physical and functional interactions of activated ers with the genome  <cit> . correct identification of gene clusters that shows synchronous responses to estrogen is thus a key step to dissect the molecular mechanisms that underlie cell regulation by these steroid hormones. we chose the splinecluster method  <cit>  to identify homogeneous time clusters within the final list of estrogen regulated genes selected since we wanted to use a clustering approach which also would take into account the temporal relationship among samples, as a natural subsequent choice. considering the amount of noise which usually affects microarray experiments and the dimensionality of the problem, we stress that in order to reduce the computational complexity of any clustering procedure, while obtaining more significant results, it is of great importance to perform in any case the analyses only on data relative to the subset of genes which do respond to the treatment. in figures  <dig> and  <dig> are displayed the results of cluster analyses carried out on the set of estrogen-regulated genes from zr- <dig>  cells selected with bats according to the following parameter settings: normal error model and λ =  <dig>  the actual data are provided in additional file  <dig>  which includes also the final gene list.

CONCLUSIONS
microarray experiments enable to study at genome-wide level the dynamics of gene regulation events. since thousands of genes are spotted in modern platforms, the amount of data provided is relevant, hence it is important to have an automatic, statistically robust, computationally fast and flexible procedure to select gene expression profiles which show significant changes in time.

we tested different methods tailored for analyzing data derived from time-course microarray experiments, which can be modeled under a ‘one sample’ framework, in order to find the most appropriate analysis pipeline to use in future experiments.

we evaluated advantages and limits of each method assessed, in terms of usability, computational burden, flexibility to characteristics of microarray experimental designs, robustness to normalizations and overlap with the other methods. we have found an analysis pipeline of r/bioconductor preprocessing and then selection of significant genes with bats to be the most appropriate in the ‘one sample’ case. selected genes can then be clustered with splinecluster  <cit> , which is a method which uses a functional approach, coherently with the selection procedure used.

to validate the biological significance of the gene expression profiles and gene clusters here identified, these were compared with the results we obtained previously in estrogen-stimulated zr- <dig>  cells under identical experimental conditions  <cit> . the majority of the genes in common among the two lists showed very similar/identical pattern of expression. this is evident, for example, when comparing in additional file  <dig> and cicatiello et al.  <cit>  the data relative to: egr <dig> , znf <dig> , myc , fos , tff <dig> , ccnd <dig> , ccna <dig>  and ccnb <dig> . all these genes are known target of ers, while their activity relates to regulation of cell cycle phasing. the pattern of induction/repression of these genes by estrogen over time , as identified with the method here described, perfectly corresponds to their known biological role in these cells, providing a strong biological confirmation of the reliability of the gene selection method proposed.

competing interests
the authors declare that they have no competing interests.

authors' contributions
mm participated in the conception and design of the study, performed the statistical analyses and participated in drafting the manuscript. lc, lf and mr carried out the microarray experiments and participated in data analyses. omvg contributed to the statistical analyses and to manuscript drafting. amf and ca participated in the conception and design of the study and supervised the analyses. aw coordinated the project, participated in conception and design of the study and participated in drafting and finalization of the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1: normalization boxplots
boxplots of normalized data after filtering and log-transformation.

click here for file

 additional file 2: selected gene list
selected gene list corresponding to the cluster analysis shown in figure  <dig> and  <dig>  each gene is accompanied by its measured signal over time . genes with one or more missing points are listed at the bottom, since the clustering software could not include them in the analysis.

click here for file

 acknowledgements
research supported by: miur , ue , second university of napoli, cnr-bioinformatics project, oncoproteomics project conv.n.527b/2a/ <dig> and airc , ph.d. programs: ‘pathology of cellular signal transduction’ of the second university of naples  and ‘toxicology, oncology and molecular pathology’ of the university of cagliari .

this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2008: italian society of bioinformatics : annual meeting  <dig>  the full contents of the supplement are available online at
