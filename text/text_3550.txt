BACKGROUND
with the recent rapid advancements in high-throughput technologies, such as next generation sequencing, array comparative hybridization and mass spectrometry, databases are increasing in both the amount and the complexity of the data they contain. one of the main goals of mining this type of data is to visualize the relationships between biological variables that are involved  <cit> . for instance, visualizing gene expression guides the process of finding genes with similar expression patterns. however, due to the number of genes involved, it is more effective to display the data by means of a low-dimensional plot. here we focus on the problem of reducing dimensionality and the interpretability of the resulting data representations.

principal component analysis  has a very long history and is known to be a very powerful tool in the linear case. pca is used as a visualization tool for the analysis of microarray data  <cit>  and  <cit> . however, the sample space that many research problems deal with is considered nonlinear in nature; for example, the sample space of microarray data. one reason for this nonlinearity might be that the interactions of the genes are not completely understood. many biological pathways are still not fully understood. so, it is quite naive to assume that genes are connected in a linear fashion. following this line of thought, research into reducing the nonlinear dimensionality for microarray gene expression data has increased. finding methods that can handle such data is of great importance if we are to glean as much information as possible from them.

kernel representation offers an alternative to nonlinear functions by projecting the data into a high-dimensional feature space, which increases the computational power of linear learning machines  <cit>  and  <cit> . kernel methods enable us to construct different nonlinear versions of any algorithm which can be expressed solely in terms of dot products; this is known as the kernel trick. kernel machines can be used to implement several learning algorithms but the interpretability of the resultant output representations may be cumbersome, because input variables are only handled implicitly  <cit> .

nowadays, combining multiple sources of data to improve the biological knowledge available is a challenging task in bioinformatics. data analysis of different sources of information is not simply a matter of adding the analysis of each separate dataset; instead it consists of the simultaneous analysis of multiple variables in the different datasets  <cit> .

some of the most powerful methods for integrating heterogeneous data types are kernel-based methods  <cit>  and  <cit> . we can describe kernel-based data integration approaches as using two basic steps. firstly, the right kernel is chosen for each data set. secondly, the kernels from the different data sources are combined to give a complete representation of the available data for a given statistical task. basic mathematical operations such as multiplication, addition, and exponentiation preserve properties of kernel matrices and hence produce valid kernels. the simplest approach is to use positive linear combinations of the different kernels.

in this work, we analyze the integration of data from several sources of information using kernel pca, from the point of view of reducing dimensionality and extending previous results  <cit> . moreover, we improve kernel pca interpretability by adding to the plot the representation of the input variables that belong to any dataset. in particular, for each input variable or linear combination of input variables, we can represent the direction of maximum growth locally, which allows us to identify those samples with higher/lower values of the variables analyzed. therefore the integration of different datasets and the simultaneous representation of samples and variables together give us a better understanding of biological knowledge. this paper starts by briefly reviewing the notion of kernel pca . section  <dig> contains our main results: a set of procedures to enhance the interpretability of kernel pca when multiple datasets are analyzed simultaneously. we then present our results and apply them in parallel to analyze a nutrigenomic study in mouse  <cit> .

RESULTS
kernel methods enable us to construct different nonlinear versions of any algorithm which can be expressed solely in terms of dot products, this is the case of kernel pca. kernel pca can be used to reduce dimensionality, thereby improving on linear pca, but the interpretability of the output representations may be cumbersome because the input variables are only handled implicitly.

in this section, we propose a set of procedures to improve the interpretability of kernel pca. the procedures are related to the following aspects:

• representation of input variables.

• data integration and representation of input variables.

• representation of linear combinations of input variables.

• revealing the interpretability of input variables.

to illustrate these procedures we use an example from metabolomics and genomics. the datasets come from a nutrigenomic study in mouse  <cit> . forty mice were studied and two sets of variables were acquired: expressions of  <dig> genes measured in liver cells; and concentrations  of  <dig> hepatic fatty acids  measured by gas chromatography. biological units  are cross-classified according to two factors: genotype, which can be wild-type  or pparα-deficient mice ; and diet, with  <dig> classes of diet in accordance with the fa composition.

the oils used for the experimental diet preparation were: corn and rapeseed oils , as the reference diet ; hydrogenated coconut oil, as a saturated fa diet ; sunflower oil, as an ω <dig> fa-rich diet ; linseed oil, as an ω <dig> fa-rich diet ; and corn, rapeseed and fish oils , as the fish diet. in the study, it cannot be assumed that variations in one set of variables cause variations in the other; we do not know a priori if changes in gene expression imply changes in fa concentrations or vice versa. indeed, the nuclear receptor pparα, which acts as a ligand-induced transcriptional regulator, is known to be activated by various fas and to regulate the expression of several genes involved in fa metabolism. it should be noted that the main observations discussed in  <cit> , which were extracted separately from the two datasets by both classical multidimensional tools  and standard test procedures, are also highlighted by kernel pca graphical representations.

representation of input variables
in order to achieve interpretability we add supplementary information into kernel pca representations. we have developed a procedure to represent any given input variable on the subspace spanned by the eigenvectors of c˜ .

we can consider that our observations are realizations of the random vector x = . then, to represent the prominence of the input variable xk in kernel pca, we take a set of points of the form: y = a + sek ∈ ℝn, where ek =  ∈ ℝn, s ∈ ℝ, and the k-th component is equal to  <dig> and the others are  <dig>  then, we can compute the projections of the image of these points, ϕ˜y, onto the subspace spanned by the eigenvectors of c˜. taking into account equation , the induced curve expressed in matrix form is given by the row vector:

 σs1×rk=zst-1m1mtkim-1m1m1mtv˜, 

where zs is in the form of .

in addition, we can represent directions of maximum growth of σk with respect the variable xk by projecting the tangent vector at s =  <dig>  in matrix form, we have:

  dσkdss=0=dzstdss=0im-1m1m1mtv˜, 

with:

 dzstdss=0=dzs1dss= <dig> …,dzsmdss=0t, 

and, using the chain rule:

  dzsidss=0=∂k∂yky=a. 

in particular, let us consider the gaussian radial basis function kernel: k = exp, with c >  <dig> a free parameter. using the notation above, we have:

 k= exp= exp-c ∑t=1n <dig>  

for the set of points of the form y = a + sek ∈ ℝn:

 dzsidss=0=∂k∂yky=a=-2ck. 

in addition, if a = xβ  then:

 dzsidss=0=-2ck. 

to illustrate our procedure we introduce a toy example. we have generated a dataset which has  <dig> points in 6-dimensional space. coordinates of the points are selected in order to distinguish  <dig> groups clearly separated. the group  <dig> has  <dig> points such that the sum of x <dig> and x <dig> coordinates is equal to  <dig> for each point. moreover, in this group, there are  <dig> points such that the sum of x <dig>  x <dig> and x <dig> is  <dig>  and is equal to  <dig> for each the another  <dig> points. the group  <dig> has  <dig> points such that the sum of x <dig>  x <dig> and x <dig> coordinates is equal to  <dig> for each point. besides, in this group, there are  <dig> points such that the sum of x <dig> and x <dig> is  <dig>  and is equal to - <dig> for each the another  <dig> points. finally, the group  <dig> has  <dig> points such that the sum of x <dig> and x <dig> coordinates is equal to  <dig> for each point. moreover, in this group, there are  <dig> points such that the sum of x <dig>  x <dig> and x <dig> is  <dig>  and is equal to  <dig> for each the another  <dig> points. all coordinates were perturbed with weak gaussian noise in order to introduce a small amount of variability inside each group. at each group the variable x <dig> is assigned randomly according to a gaussian of mean zero and standard deviation  <dig> . the configuration of the points is such that we expect that in reduction of dimension only the first dimensions are necessary to reveal the arrangement of the three groups. it can be seen in figure  <dig> where the two leading components of kernel pca are represented. we can see the group  <dig>  on the negative part of the first principal axe, group  <dig>  in the central part and the group  <dig>  on the positive part.

a natural extension of the above procedure is the representation of linear combinations of input variables. details can be found in section  <dig> . with the aim to show this property we displayed in figure  <dig> the samples and the linear combinations x <dig> + x <dig> and x <dig> + x <dig> + x <dig> at each sample. linear combinations are represented by vectors that point to the direction of maximum growth in each of the linear combinations. we can observe that at each sample vectors point to those groups with higher values in each of linear combinations. for example, vectors representing x <dig> + x <dig> point to group  <dig>  and vectors representing x <dig> + x <dig> + x <dig> point to group  <dig> 

analyzing the nutrigenomic dataset
we illustrate the representation of variables by analyzing the dataset in  <cit> . we apply kernel pca and representation of variables to the genomic data and fa data. firstly, we compute kernel pca by analyzing only gene expression level data. figure  <dig> shows the two leading axes of kernel pca. we can observe that the genotypes are clearly separated . diet representation is: ref diet is represented by the letter x; coc diet by circles; sun diet by diamonds; lin diet by plus signs; and fish diet by triangles). figure  <dig> shows the aox  and car <dig>  genes. vectors indicate the direction of maximum growth of the gene expression at each sample point. thus, we can observe that aox increases towards wt and car <dig> towards ppar. these results are in agreement with those found in  <cit>  and  <cit> . figure  <dig> and figure  <dig> show the profiles of the medians of the expression of aox and car <dig> grouped by genotype. we can observe that these profiles agree with the kernel pca representation.

secondly, to compare results, we compute kernel pca analyzing only fa levels. in figure  <dig> we can observe that the sample points are separated by genotype, but we can also observe that the samples with coc diet  form a cluster. figure  <dig> shows c <dig> ω. <dig>  and c <dig>   fas. it reveals higher levels of c <dig> ω. <dig> towards pparα-deficient clustered samples  and that levels of c <dig>  are higher towards the wt cluster of samples .

these results are also in agreement with those found in  <cit>  and  <cit> . figure  <dig> and figure  <dig> show the profiles of the medians of the concentrations of c <dig>  and c <dig> ω fas, grouped by genotype. we can observe that these profiles agree with the kernel pca representation.

data integration and representation of input variables
the kernel formalism allows us to combine heterogeneous datasets for data fusion. basic algebraic operations such as addition, multiplication and exponentiation preserve the key properties of symmetry and positive semidefiniteness, and thus allow a simple but powerful algebra of kernels. if k <dig> and k <dig> are kernels defined respectively on x1×x <dig> and x2×x <dig>  then their direct sum:

 =k1+k <dig> 

is a kernel on x1×x2×x1×x <dig>  here, x <dig> x1′∈x <dig> and x <dig> x2′∈x <dig> 

this construction can be useful if the different parts of the input have different meanings and should therefore be dealt with differently. in that case, we can split the inputs into two parts, x <dig> and x <dig>  and use two different kernels for these parts. this is the case when we are integrating two separate datasets. in consequence, our procedure can easily be extended to data fusion. firstly, we reduce the dimension of the entire data , i =  <dig>  ..., m, by applying kernel pca with the kernel k given by k <dig> ⊕ k <dig>  secondly, to find the coordinates of a test point:

 y=, 

we proceed by analogy with , so that  becomes:

 z=km×1=k1+k2m× <dig>  

when we integrate two datasets, we can represent any given input variable that belongs to one of the datasets. let us suppose that we wish to represent the variable xkl that belongs to the dataset l =  <dig>   <dig>  then  becomes:

 dzsidss=0=∂kl∂ylkyl=al. 

then, formula  allows us to display variables that belong to any of the datasets over the kernel pca representation of samples, simultaneously.

analyzing the nutrigenomic dataset
continuing with the same nutrigenomic study, we compute kernel pca by analyzing both datasets simultaneously; that is, gene expressions and fa concentrations. we observe that the genotypes are clearly separated  and also mice with the coc diet form a cluster of both genotypes; see figure  <dig>  also, figure  <dig> shows aox  and car <dig>  genes, and c <dig> ω. <dig>  and c <dig>   fas. it reveals higher expression of car <dig> and higher concentrations of c <dig> ω. <dig> towards the ppar cluster. in contrast, aox gene expression and concentrations of c <dig>  are higher towards the wt cluster. these results are in agreement with those found in the individual kernel pcas above.

representation of linear combinations of input variables
a natural extension of the above procedure is the representation of linear combinations of input variables. this may be useful for representing gene modules or gene networks. let us suppose that we wish to represent the linear combination: xk1+xk2+⋯+xkl, where k <dig>  k <dig> ...,kl ∈{ <dig>   <dig>  ..., n}, with ki ≠ kj , i,j =  <dig>  ..., l. then, when k is the gaussian radial basis function kernel,  becomes:

 dzsidss=0=∑t=1l∂k∂ykty=a. 

then, formula  allows us to represent any linear combination of input variables.

analyzing the nutrigenomic dataset
to illustrate this procedure we have analyzed the genes gstpi <dig>  cyp3a <dig> and cyp2c <dig>  these genes are involved in the functioning of detoxification  <cit> . we perform kernel pca analyzing both dataset simultaneous and represent the sum of the expressions of the genes gstpi <dig>  cyp3a <dig> and cyp2c <dig>  figure  <dig> shows sample points and the vector corresponding to the sum of the three gene expressions is attached to each point. the vector indicates the direction of maximum growth of the sum of the expressions. we observe that the sum of the expressions increases towards the fish diet. this is in agreement with the findings in  <cit> .

revealing the interpretability of input variables
our procedure for representing input variables on the two-dimensional subspace expanded by the two main eigenvectors of c˜, displays the variables as vectors whose direction is the direction of maximum growth of the variable at a given point; in particular, at the sample points.

so, if we set a direction in this plane, given by a vector w, we can search for input variables whose representation on the kernel pca plane are correlated with this direction. let us suppose that we observe clusters of samples in the kernel pca representation; then an interesting direction can be given by the vector defined by any two cluster centroids.

once we have selected a vector w, we denote wi as the parallel vector of w attached to the image given by kernel pca of the sample point xi, i =  <dig>  ..., m. for any variable xk, we now compute its vector representation in kernel pca using formula ; we denote this vector as dσkdss= <dig>  therefore, for each sample point, xi, i =  <dig>  ..., m, we have two vectors, one corresponding to the direction wi, and other corresponding to the xk representation, dσkdss=0xi. after this, to measure the strength of the correlation between xk and w, we average the cosine of the angles between each pair of vectors, that is:

 rk:=1m∑i=1mcoswi,xi. 

finally, we order all the variables according to rk and we can select those with higher values and also those with lower values. thus, in this way, for each sample cluster, we can find the correlated variables with higher and lower values. knowledge of such variables can improve the biological interpretability of the results.

a natural extension of this procedure is to take as w the vector corresponding to one of the input variables. then, if we know that a certain input variable is useful for interpreting the kernel pca representation, we can search for other input variables whose representation on the kernel pca plane are correlated with this feature. if we are integrating multiple datasets, we can search for correlated variables in each dataset.

analyzing the nutrigenomic dataset
to illustrate this procedure. we have selected a preferred direction in the kernel pca plane. figure  <dig> shows this direction . this direction represents variables that are less expressed in samples with the coc diet than in those with other diets. tables  <dig> and  <dig> summarize the genes and fas that are most correlated with the selected direction.

fatty acids. mean and standard deviation of the rk measure of the strength of correlation with the preferred direction.

gene codes. mean and standard deviation of the rk measure of the strength of correlation with the preferred direction.

in table  <dig>  we can observe that fas with negative correlation, such as c <dig> ω. <dig>  c <dig> ω. <dig> and c <dig> ω. <dig>  represent fas with higher concentrations in samples with the coc diet. in contrast, fas that are positively correlated, such as c <dig> ω. <dig>  c <dig> ω. <dig>  c <dig> ω. <dig> and c <dig> ω. <dig>  represent fas with higher concentrations in samples with other types of diet. furthermore, in table  <dig>  we can observe that genes with negative correlation at the top of the table, such as s <dig>  acc <dig> and lpl, are more highly expressed in samples with the coc diet, whereas genes at the bottom of the table, that are positively correlated, are less expressed in the coc diet samples. these results are in agreement with those found in  <cit> .

CONCLUSIONS
with the rapidly increasing amount of genomic, proteomic, and other high-throughput data that is available, the importance of data integration has increased significantly recently. biologists, medical scientists, and clinicians are also interested in integrating the high-throughput data that has recently become available with previously existing clinical, laboratory and biological information.

kernel methods, in particular kernel pca, constitute a powerfully methodology because they allow us to reduce dimensionality and integrate multiple datasets, simultaneously. moreover, in this paper we have introduced a set of procedures to improve the interpretability of kernel pca representations. the procedures are related to the following aspects: 1) representation of variables; 2) linear combination of representations of variables; 3) data integration and representation of variables; and 4) revealing the interpretability of input variables. our procedure is a kernel-based exploratory tool for data mining that enables us to extract nonlinear features while representing variables.

