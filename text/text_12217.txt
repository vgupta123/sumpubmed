BACKGROUND
high throughput techniques, such as gene expression arrays, have made it possible to identify biomarkers and gene signatures for a wide range of diseases. for breast cancer several gene signatures have been proven to have a prognostic value  <cit> . based on these, multigene tests like mammaprint and oncotype dx have found their way into clinical practice  <cit> . however, the efforts in using gene expression data to stratify cancer patients unraveled general limitations. prognostic or predictive signatures are often restricted to a subset of patients which meet specific inclusion criteria like epidemiological, histopathological and clinical characteristics. furthermore, gene expression data alone often did not reflect robust molecular subtypes in other cancer entities. for example in prostate cancer, one of the most frequent cancer types among men  <cit> , the robust molecular diagnosis of a clinical relevant disease is still a challenge  <cit> .

genome scale experiments measure thousands up to millions of features. to be able to build clinical prediction models with these data, methodology from the field of machine learning is applied. popular methods include svm  <cit> , random forests  <cit> , and certain boosting approaches  <cit> . a particular challenge is the high number of features in the training data, especially if the correlation structure among the measured features is unknown. therefore, the training results often remain unsatisfactory. in the past, integration of other sources of data that lead to an improved feature selection and thus to a better generalization of the prediction model has been discussed. recent methods have integrated estimates of the correlation structure of the data based on prior information represented as graphs. the graph was gained from biological knowledge on interactions between genes or membership of genes to common pathways  <cit> . other methods have integrated different kind of omics data  <cit> . when integrating data from different levels, properties and scales have to be taken into account as well as the relations between the different types of features.

here, we propose a new method to fuse gene expression data with microrna  expression data into one risk prediction model. mirnas are small, around  <dig> base pairs long, non-coding rnas that regulate gene expression post-transcriptionally. by sequence mediated binding of the mirna to its target, the translational process is blocked or the mrna is predisposed to degradation. deregulation of mirnas has been linked to development and progression of several tumor entities including prostate cancer  <cit> . because of their regulatory nature, the primary targets of a mirna are of particular interest. since experimentally validated targets are rare, target prediction algorithms are an important source of knowledge when dealing with mirna expression data. several algorithms and databases for mirna target predictions have been established in the last years including e.g. miranda  <cit> , targetscan  <cit> , and pictar  <cit> .

our new method uses a bipartite graph combining correlations between mirna and gene expression data, and target prediction information. this gave rise to better prediction results compared to the single data sets in a prostate cancer data set encompassing  <dig> tumor samples.

the manuscript is organized as follows. the first section describes the general setup including high-dimensional time-to-event data and the measure of prediction error as well as the prediction methods. in the results part the final workflow is explained in detail and the performance on the prostate cancer data set is shown. comparisons with two other prediction methods suited for time-to-event data are shown as well. the manuscript closes with a discussion and conclusion.

methods
setup
high dimensional time-to-event data
time-to-event data, such as survival data, is typically modeled using the cox proportional hazards model  <cit>  of the form

  ht|xi=h0texpηi 

with an unspecified baseline hazard h <dig> and a linear predictor

  ηi=xitβ 

usually, observations are of the form , ...,  where ti is an observed time, δi a censoring indicator , and xi =  a feature vector. the cox model describes the instantaneous risk of having an event at a given time point t. in a high-dimensional setting xi and thus β comprises several thousands of features, most of them irrelevant for predicting h. therefore, it is reasonable to assume most of the entries in β to be  <dig> and methods with an implicit feature selection are preferable.

prediction error curves and ipec
the estimation of the cox parameter vector β^ can be used to obtain a risk prediction

  r ^t|xi=exp-Ĥ0texpxitβ^ 

with the breslow estimator of the cumulative baseline hazard Ĥ0= ∫ 0th0ds. the predicted probability r ^t|xi of still being event-free at time t can be seen as predicting the true status i. to assess the quality of these predictions the brier score

  bst=e1n∑i=1niti>t--r ^t|xi <dig> 

can be used  <cit> , describing the average discrepancy between the event states and the model predictions. due to censoring, inverse probability of censoring weights have to be used to obtain consistent estimates of . by tracking this empirical version of the brier over time, prediction error curve estimates are obtained:

  pect=1n ∑i=1nr ^t|xi2iti≤t,δi=11Ĝti+1-r ^t|xi2iti>t1Ĝt 

where  is the kaplan-meier  <cit>  estimate for the censoring distribution g  <cit>  . by integration over time the integrated prediction error curve  is obtained. here the r-package peperr  <cit>  was used for assessment of model predictions.

estimation of prediction error
to estimate the prediction performance  for new patients without the need to set aside test data the . <dig> bootstrap estimator  <cit>  was used. for every bootstrap sample the . <dig> estimator of the prediction error curve was calculated leading to the ipec.

prediction methods
boosting
boosting belongs to the class of ensemble learners. the basic principle of boosting is the weighted combination of several weak classifiers in order to build one strong classifier  <cit> . this is equal to iteratively fit an additive model in function space by minimizing a loss function  <cit> .

componentwise likelihood-based boosting  <cit>  uses a penalized log-likelihood criterion to fit the objective function. in every step only one element of the parameter vector β is updated which in fact is an implicit feature selection and results in sparse fits. since the objective function is rather general the idea can be extended to high-dimensional time-to-event data  <cit> . first, the parameter vector is initialized to β^0=. in each boosting step k  a new candidate model is obtained for every covariate j =  <dig>  ..., p

  η^ij,k=η^i,k-1+γj,kxij 

with the linear predictor from the previous step

  η^i,k-1=xit,β^k- <dig> 

for obtaining parameter estimates γ^j,k a penalized partial log-likelihood is maximized that incorporates a penalty parameter λj, k which controls the size of the step. the element of the parameter vector β^k- <dig> j*, corresponding to that covariate that maximizes the  log-likelihood is updated by

  β^k,j*=β^k- <dig> j*+γ^j*,k 

all other elements of the parameter estimation remain unchanged . the number of boosting steps m is a tuning parameter which needs to be optimized e.g. via cross-validation. usually, a common penalty parameter λ = λj, k is used for all covariates and boosting steps. it should be chosen in a way the resulting number of boosting steps is larger than  <dig>  <cit> . in this study the coxboost r-package  <cit>  was used to train the coxboost models.

lasso
lasso  <cit>  is a shrinkage method for regression models  with implicit feature selection based on an l <dig> penalty term

  β^=argmax-α||β||1) 

with a likelihood function l. originally, quadratic programming was proposed to solve  for linear regression models  <cit> . since the solution for cox proportional hazard models is much more computationally intensive, goeman proposed a solution of the lasso estimation based on gradient ascent optimization  <cit> . in this paper the r-package penalized  <cit>  was used to fit the lasso estimator.

random survival forests
a third method is based on decisions trees. random survival forests  <cit>   is an extension of the random forests  <cit>  for right censored survival data. a collection of binary decision trees is build by bootstrap samples. in every tree at every node a random subset of m features is chosen. the survival difference between the daughter nodes is used to choose a feature and a split point. the r-package randomsurvivalforest  <cit>  was used to train the model. the optimal value of m was determined via bootstrap  <cit>  using the peperr r-package  <cit> .

prostate cancer data set
a prostate cancer data set from taylor et al.  <cit>  was used in this study. raw expression data from affymetrix human exon  <dig>  st arrays were obtained from the ncbi geo data repository  comprising  <dig> samples of tumor patients. furthermore, mirna expression data from the agilent microrna v <dig> were downloaded  including  <dig> samples of tumor patients.

data preprocessing
gene expression profiles were derived from the cel files using robust multichip average   <cit>  implemented in the affymetrix power tools . raw data files from mirna expression data were analyzed using the limma r-package  <cit> . after quantile normalization  <cit>  control probes were removed and the  <dig> replicates of each mirna were summarized using the sample-wise median. at the end only tumor samples with gene expression as well as mirna expression data were used yielding a data matrix with  <dig> tumor samples,  <dig> transcripts, and  <dig> mirnas.

bcr status
clinical parameters of the patients samples were downloaded from the supplemental material  <cit> . the time to biochemical relapse  and the censoring status for  <dig> cancer patients were available. of these  <dig> patients  <dig> suffered a relapse and  <dig> were censored.

mirna-target predictions
target predictions were downloaded from microcosm targets  <cit>   version  <dig>  the p-values of these predictions were extracted for every mirna-transcript pair . for comparison the targetscan  <dig>  predictions  <cit>  were downloaded.

RESULTS
graph-based integration of mirna and mrna expression data
the first step in the workflow  was the creation of the bipartite graph describing the relations between mrnas and mirnas. the first source of knowledge were both expression data sets coming from the same samples. the expression vectors from each mrna mi and each mirna mij were correlated using the pearson correlation ρ. the correlation coefficient can be tested for a significant shift from zero leading to a p-value for every mrna-mirna pair

  pi,jcor=p=0)∀i∈{ <dig> p1},j∈{ <dig> p2} 

since many tests  were performed, the resulting p-values were corrected for multiple testing  <cit>  . the second source of knowledge were the target predictions from microcosm  <cit> . the p-values pi,jpredof these prediction were used to strengthen the importance of the connection of a mrna mi and a certain mirna mij in the case where mi is a predicted target of mij. since the microcosm target database holds only mrna-mirna pairs with a p-value below  <dig>  the p-values of pairs not present in microcosm were set to  <dig> 

in order to integrate the two sources of knowledge both types of p-values had to be combined. this was done using the method of stouffer  <cit>  leading to combined p-values

  pi,jcomb=1-Φ      +Φ-1)) 

where Φ= ∫ -∞x12πez22dz is the probability distribution function of the standard normal distribution. for mirnas and mrnas not listed in microcosm targets the combined p-values were set to the correlation p-values.

the resulting p-values were well distributed and could easily be transformed to weights

  wi,j=1-pi,jcomb 

the resulting matrix of weights w = wi, j could be viewed as the p <dig> × p <dig> adjacency matrix of a bipartite graph describing the relations between mrnas and mirnas.

the graph w was interpreted as a directed graph with edges from mrnas to mirnas. in conjunction with coxboost the graph was used to improve the prediction of time-to-event data. binder et al.  <cit>  introduced likelihood-based boosting as a possibility to incorporate gene-gene interaction networks into feature selection in order to improve the prediction performance. the basic idea was to increase the penalty parameter λj*,l, l > k after choosing a feature in the k-th step

  λj*,l=1cf-1ij*,l+λj*,kcf 

at the same time the penalty of connected features was reduced in the following steps

  λj+,km+1=ij+,km+11-cf-ij+,km+ <dig> 

ij+,km is the fisher information in boosting step km where the feature was updated the mth time. this increased the probability of choosing connected features in future steps, leading to feature sets which were consistent with the given a priori information. by what amount the penalty of a selected feature was increased and the penalties of connected features were decreased was determined by a stepsize modification factor cf.

similar to graphs describing biological pathway knowledge the mrna-mirna graph w described the regulations among the features. every time an mrna mi was picked the penalties λ of mirnas connected to mi were lowered according to the weight of the connection. as a consequence it was more likely to choose a mirna mij highly correlated and being a predicted regulator of mi in one of the next boosting steps. mirnas with a connection with high weight to mi are likely to be a direct regulator of mi and therefore of importance for the event as well. the stepsize modification factor was set to a fixed value of  <dig>  for all boosting runs.

graph information reduces prediction error of coxboost
in order to test performance of our new method it was tested using a prostate cancer data set  <cit>  with mrna and mirna expression data sets from  <dig> patients using the biochemical relapse as clinical endpoint. the bipartite graph improved the accuracy of coxboost by increasing the probability of selecting mirnas with connections to already chosen mrnas . to demonstrate this coxboost was trained on both data sets, not given the graph information, and on the single data sets. to assure a comparability of the prediction models a common penalty of  <dig> was determined such that the number of boosting steps exceeds  <dig> in every case . the accuracy of the risk prediction models were compared by calculating the . <dig> estimator of the prediction error curve and its ipec for  <dig> bootstrap samples. the medians of the resulting  <dig> ipecs and their interquartile ranges  can be seen in table  <dig>  to test whether the difference of the ipecs is significant, a one-sided wilcoxon test was carried out between the single models without a graph and the model incorporating the bipartite graph. it can be seen that coxboost performed best when given both data sets and the bipartite graph. for every three risk prediction models without graph information the difference was significant assuming a significance level of  <dig> .

the table shows the number of boosting steps m for every coxboost model and the ipec  of  <dig> bootstrap runs. the number of boosting steps were determined using the whole data set. lower ipec scores indicate better prediction accuracy. the p-value is the result of a one-sided wilcoxon test  comparing the single data set prediction models and the prediction model without graph with the combination incorporating the bipartite graph.

there was no difference between the models trained only on the mrnas and the model trained on both data sets without the graph. coxboost with only the mirna expression data seemed to perform slightly worse.

comparison with other methods
the coxboost model was compared with other methods suited for time-to-event data. the afore introduced lasso and rsf were trained on the same end point given mrna data as well as mirna data. the prediction error was calculated using the same  <dig> bootstrap samples as before yielding  <dig> ipecs for every method. table  <dig> shows the distribution of the ipecs of lasso and rsf compared to the ipecs of coxboost with graph information. to test the significance of the differences a one-sided wilcoxon test was used. on this data set lasso and rsf performed significantly worse than coxboost with graph information assuming a significance level of  <dig> . besides the prediction error there was a remarkable difference in the runtime of the three models. training and prediction for  <dig> bootstrap samples took  <dig>  hours for rsf, 2: <dig> hours for lasso, and 1: <dig> hours for coxboost with graph on a  <dig> core  machine with  <dig> gb memory.

the table shows the comparison of lasso and rsf with coxboost with the bipartite graph regarding the prediction error. as before the median and iqr from  <dig> ipecs were calculated. the p-value is based on a one-sided wilcoxon test comparing the  <dig> ipecs of lasso and rsf with the ipecs of coxboost.

graph information improves stability of feature selection
in addition to a reduction of the prediction error the incorporation of the graph information improved the stability of the feature selection process remarkably. table  <dig> lists the top  <dig> features of coxboost with and without the graph according to the number of bootstrap samples the features were chosen in. the numbers are almost twice as large when including the graph information.

the table lists the top ten features from coxboost with and without graph information. mrna names are given by their gene symbols  while mirna names are given by their mirbase ids . the counts columns indicate in what number of the  <dig> bootstrap samples the feature was chosen. consequently, the maximal count would be  <dig> 

another difference lies in the balance of genes and mirnas picked by the models. while the number of genes and mirnas among the top ten features using coxboost without graph were almost equal, in the list of coxboost with graph information there were only mirnas.

robustness considerations
additionally, to exclude the possibility of overfitting the models were trained with a graph which was build separately for every single bootstrap sample. therefore the correlations were calculated and tested solely on the patient samples included in the bootstrap sample. in this case the prediction error increased to  <dig>   with an iqr of  <dig> . in comparison with the ipecs of coxboost without graph the prediction error was significant smaller assuming a significance level of  <dig>  . the runtime increased to 21: <dig> hours.

to asses the influence of the target prediction database one graph was constructed using targetscan in the version  <dig> . as a p-value for a mirna-mrna pair  <dig> - pct was used. the pct value given in the targetscan flatfiles is a score that can be used to asses the biological relevance of predicted mirna-mrna interactions  <cit> .  <dig> - pct is an estimate of the fdr. coxboost using this graph yielded a median ipec of  <dig>  with an iqr of  <dig> .

discussion
due to their role as post-transcriptional regulators of around 30% of the human genome and their involvement in cancer development and progression  <cit> , mirnas become more and more important for our understanding of the mechanisms leading to cancer. since mirnas are smaller than mrnas they are more stable and in general more resistant against degradation processes than the longer mrnas. consequently, mirna expression is measurable even in serum  <cit>  and paraffin-embedded samples where mrna expression is hardly detectable.

several studies have combined gene and mirna expression data  <cit>  or gene expression data with mirna target predictions  <cit>  to infer new mirna regulation activities. in addition, several tools have been developed to integrate such data  <cit> . in most cases, correlations between mrna and mirna expression profiles gained from matched samples and target prediction scores are most relevant for the analysis.

while there are several approaches to integrate mrna and mirna data to discover novel regulatory relation between mirnas and mrnas there is still a lack of prediction methods combining both kinds of data into one common prediction model. a central problem in these high-dimensional data is the tendency to overfit. when integrating several omics data sets the number of features increases, which makes the feature selection even more important.

in this article we introduce a method capable to fuse mrna and mirna expression data in a model to predict a clinical endpoint. likelihood boosting was used as a method for fitting risk prediction models because of its performance and its ability to implicitly select features in the training process. the correlations between mirnas and mrnas and target prediction information were used to model the relations between mirnas and mrnas. the combination between these two sources of information was performed on a p-value level using the method from stouffer  <cit> . from the combined p-values a bipartite graph could be constructed covering the relations between the two types of features.

the integration of this graph into boosting improves the models in terms of prediction error. in this case the clinical endpoint was the biochemical relapse in prostate cancer using a combined mirna/mrna data set of  <dig> patients  <cit> . the comparisons of the ipecs clearly showed a significant reduction of the prediction error in comparison with boosting on the single data sets or on the combined data set without the bipartite graph. here we used the . <dig> bootstrap estimator of the prediction error because of its simplicity. other estimators like the .632+ estimator  <cit>  are often used for prediction error estimation for survival models  <cit> . it might be less biased but computationally more expensive. first tests with the .632+ estimator lead to comparable results.

using the graph the feature selection became more stable regarding how often a specific feature was picked in the  <dig> bootstrap runs. by transferring the weights in the graph from mrnas to mirnas, these features were favored. however, it is important to note that mirna expression data alone failed to predict the relapse as accurate as the combined data with the graph. this may be caused by the fact that one mirna can have several targets and dysregulation of a mirna can affect multiple molecular pathways with no direct connection to the outcome. therefore, the genes as effectors seem to be a mandatory source of information. among the top  <dig> features picked using the graph there are some mirnas found to play a role in prostate cancer, e.g. hsa-mir- <dig>  <cit> . however, most of the mirnas have not been associated with prostate cancer before. it is therefore important to note that it is not straightforward to derive functional implications for single biomarkers from a panel found by a prediction model. the strength of our method is to find mirna-gene combinations with high predictive power. to investigate whether the selected genes show differences in functional annotations, we also performed a go enrichment test for the top  <dig> genes of coxboost with and without graph . both sets showed different enriched go terms. however, no clear patterns concerning cancer related processes occurred.

to assess how our method performed in comparison with other methods suited for time-to-event data, lasso and rsf were tested on the same data set using the same bootstrap samples. in both cases coxboost with the bipartite graph showed a significantly lower prediction error. rsf performed better than lasso which was worse than coxboost without graph on this data set. the runtime of rsf and lasso was considerably longer than the runtime of coxboost with graph on our test system. in this study we used the standard implementations of lasso and rsf as a reference. as far as we know there are no established ways to combine lasso or rsf with a graph to guide the feature selection. it might be interesting to see if such methods will improve the prediction error as well. also other ways of fusing mirna and mrna expression data into one model e.g. bundling  <cit>  or kernel based methods  <cit>  have not been considered. such methods offer a very flexible way of combining different prediction models and might also lead to improvements in terms of prediction error.

to minimize the possibility of overfitting, one coxboost model was trained with correlations calculated only on the training data of every bootstrap sample. the resulting prediction error is higher compared to the models with correlations calculated once on the whole data set but it is still significantly lower than coxboost with no graph. further, we showed that the prediction could be improved using the target prediction information from microcosm. in order to test the influence of the target prediction database we also tried to incorporate the target predictions from targetscan. this resulted in a higher prediction error, however. this result can possibly be explained by the lower coverage of targetscan. from the  <dig> mirnas in the data set only  <dig> could be found in targetscan having a pct value. in comparison, the microcosm predictions contained  <dig> out of the  <dig> mirnas with p-values.

while mirna and mrna expression data gained from microarray experiments were used in this study, the method is independent of the underlying experimental setup. next generation sequencing data might be, after the necessary preprocessing steps, used in a similar manner. we presented the fusion of the both data sets with respect to a prognostic time-to-event endpoint. however, in a similar fashion binary endpoints like diagnostic questions or treatment response prediction can be tackled. this would lead to classification problems for which boosting was originally designed and powerful approaches have been formulated. on our setting we would substitute the coxboost algorithm by gamboost  <cit> .

CONCLUSIONS
with the increasing availability of high-throughput data on many different layers of biological regulation, the integration and fusion of these data sets becomes a key concept when analyzing complex diseases. combined prediction models involving mrna and mirna expression data should include the relations between the different features in the model.

in this article we propose a new method to fuse mirna and mrna expression data in a risk prediction model to stratify the risk of a biochemical relapse of prostate cancer patients. in our new approach we combine the coxboost model with a bipartite graph assembled from correlations between mirnas and mrnas and target prediction information from microcosm targets. using this graph an improvement of the risk prediction could be achieved. besides an improved risk prediction we could show that the feature selection became more stable and therewith easier to interpret. coxboost with graph performed significantly better than two other methods suited for time-to-event data.

the r source code of the proposed method is available in the supplement .

authors' contributions
sg implemented the method and worked out the examples. sg, hb and tb conceived the method and designed the study. jcb, rk and hs provided the biological background and concept for the study. cp, mf and dw contributed in discussions. all authors contributed to the writing of the manuscript and read and approved the final manuscript.

supplementary material
additional file 1
r code. the additional file supp <dig> r contains the r functions for the proposed workflow of integrating mrna and mirna expression data.

click here for file

 acknowledgements
we thank christian bender for help and discussions and dirk ledwinka for it support. this project was supported by the german federal ministry of education and science in the framework ngfn ig-prostate cancer  and by the dfg through the clinical research group  <dig>  the authors are responsible for the contents of this publication.
