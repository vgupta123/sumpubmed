BACKGROUND
it is often necessary to compare the 'same' gene or gene product  in different species. by the 'same' protein, we mean an orthologue that performs an equivalent function or functions. obtaining lists of functionally-equivalent proteins  is fundamental for comparative and evolutionary genomics, and downstream proteomic studies  <cit> . the particular motivation for the current work was obtaining lists of feps to examine residue conservation scores and to aid in understanding the effects of mutations on protein function in the context of a large-scale automated analysis pipeline, saapdb  <cit> . proteins that have diverged in function  will show differences at key functional residues. we therefore needed a reliable automatic method for extracting groups of feps from uniprotkb/swiss-prot.

consider, for example, the hox family of genes, which is a large family of transcription factor proteins containing the well characterised homeobox motif. these proteins are well conserved across species and are believed to be critical in embryogenesis, oncogenesis and differentiation processes such as haematopoiesis  <cit> . hox proteins are representative of large protein families in that there are several paralogues within a species , and each paralogue can be involved in several distinct aspects of the same biological process. a sequence alignment of such evolutionarily related, but functionally different, proteins would contain significant noise, and obscure much of the genuine functional conservation between true feps.

while homology does not imply functional equivalence, it is also not possible to use functional data alone to identify feps. proteins can converge on similar functions without being evolutionarily related. for example, subtilisin  and trypsin  have evolved separately in bacteria and vertebrates respectively; they differ significantly in protein sequence, structure and fold, yet the same three amino acids form the catalytic triad in both proteins  <cit> . aligning such functionally similar, but evolutionarily unrelated, proteins is meaningless; we are interested in proteins which are both homologous and functionally equivalent.

two entities are homologous if they have a common evolutionary origin. an orthologous relationship denotes that this common origin was a speciation event, whereas paralogues are related by a gene duplication  <cit> . paralogues, having been derived via a mechanism for functional divergence, are likely to perform different functions  <cit> . while orthologues generally perform the same function, it is possible for the function to diverge, particularly when orthologues are evolutionarily distant  <cit> . for example, shibata et al.  <cit>  showed that although the general function of exportin- <dig> proteins  is conserved across different species, substrate specificity varies. further, the agamous gene in arabidopsis is involved in carpel and stamen development, but the two orthologues in maize have specialised: zag <dig> is highly expressed during carpel development, and zmm <dig> is expressed during stamen development  <cit> . it is clear then that orthology need not imply strict functional equivalence, and it follows that sets of orthologues, defined by methods such as inparanoid  <cit> , c/kog  <cit>  and toga  <cit> , are not appropriate as lists of feps. further, these methods are computationally intensive and as such are often limited to small species sets.

the identification of true feps requires consideration of features such as functional assays, interaction networks, expression data and so forth. uniprotkb/swiss-prot is a carefully annotated databank of protein sequences that includes functional annotations. while many of these are transferred through orthology, where there is experimental evidence for function, it will be included. thus, short of conclusive experimental studies, the most reliable way of identifying families of feps is first to identify families of homologues in uniprotkb/swiss-prot and then to examine the annotations to find a set of proteins that are annotated as performing the same function or functions. it is, of course, possible that annotations in uniprotkb/swiss-prot will be incorrect, but as uniprotkb/swiss-prot is updated on a regular basis, it is expected that these annotations will represent the most up-to-date state of our knowledge of protein function, and errors in annotations will be corrected with future releases.

while it is perfectly possible to perform this analysis on an individual basis by searching uniprotkb/swiss-prot for homologues and comparing the annotations manually, there is a pressing need for an automatically updated resource that simply lists families of feps in uniprotkb/swiss-prot. several methods exist that exploit database annotations to identify related proteins  <cit> , however there has been no resource that very simply provides sets of feps annotated as having the same function in uniprotkb/swiss-prot in an easily-accessible format, with extensive coverage of multiple proteomes.

we have developed fosta , which automates the process that one would perform manually to extract a family of feps from uniprotkb/swiss-prot. it considers uniprotkb/swiss-prot proteins for inclusion in groups of feps  rooted around human proteins. it refines an initial candidate list of homologues on the basis of functional annotation similarity, to distinguish feps from functionally diverged homologues . to assess functional annotation similarity, we employ simple text-mining techniques to compare uniprotkb/swiss-prot description fields.

RESULTS
evaluating fosta is difficult because no gold-standard dataset exists. in addition, it is difficult to design an evaluation procedure to isolate the performance of fosta itself from the quality of the uniprotkb/swiss-prot annotations that fosta interprets. to assess the fosta method, we need to assess whether fosta is grouping proteins correctly into functionally equivalent groups given the functional annotations, rather than assessing whether the functional annotations are of sufficient detail to infer genuine functional equivalence. however, it is also very important to assess the latter, as fosta is dependent on the uniprotkb/swiss-prot annotations.

as such, fosta has been evaluated in three phases. the first involves manual interpretation of the results of several large protein families, some chosen at random, and some chosen as known problematic cases. this phase assesses how well fosta can interpret functional annotations, and infer functional equivalence compared with manual interpretation. the second phase benchmarks fosta against a fully manually annotated dataset, and a larger partially annotated dataset. this phase not only indicates whether fosta performs well, but also assesses whether the annotations are good enough to infer functional equivalence. the final phase of evaluation involves comparing uniprotkb/swiss-prot with inparanoid  <cit> , a popular method for identifying orthologues.

fosta results are available at , by searching with the uniprotkb/swissprot protein id of interest. results in this paper are for uniprotkb/swiss-prot version  <dig>  . the full set of fosta results may also be obtained in xml format, as can the results for a single human protein. a comprehensive help service is provided online, and updates will be performed every two months.

an overview of fosta families
before presenting the analysis of our method, we provide a brief description of the dataset. with a view to summarising the fosta dataset, we have calculated the 'uniprotkb/swiss-prot proteome coverage' for each species described in fosta. this has been calculated as nf/nsp, where nsp is the number of proteins from that species that are described in uniprotkb/swiss-prot  and nf is the number of proteins from that species described in fosta. therefore, a species which is fully represented in fosta with respect to its uniprotkb/swiss-prot proteome would have a uniprotkb/swiss-prot proteome coverage of 100%, while a species with none of its uniprotkb/swiss-prot proteins represented in fosta would have a uniprotkb/swiss-prot proteome coverage of 0%. of the  <dig> species represented in uniprotkb/swiss-prot version  <dig> , just over half  are not represented by fosta. this will in part be due to differing annotation formats of very remote species, but will also in part be due to distant species having very few proteins in common with the human proteome. more positively,  <dig> species  are fully represented in fosta. of course, many of these proteomes will be small, but nevertheless, it is encouraging that almost a quarter of uniprotkb/swiss-prot species are fully represented in fosta.

the most common family size is two:  <dig> %  of fosta families with a non-human member have two members; this usually corresponds to an exclusively human/murine fosta family. these are not only the most well represented species in uniprotkb/swiss-prot version  <dig> , they are also the most extensively and similarly annotated.  <dig> % of fosta families  have five or more members, and only  <dig> %  have more than  <dig> members.

with respect to how fep relationships are formed, most fosta families are formed exclusively using the protein prefix match, i.e., all members share the same protein prefix. however,  <dig> %  of fosta families contain at least two different protein prefixes. furthermore, of the  <dig>  <dig> protein prefixes recorded in fosta,  <dig> % are found to exist in more than one fosta family. this indicates that, although uniprotkb/swiss-prot protein prefixes are very often reliable, incorporating additional information derived from the description field is beneficial in identifying fep relationships.

hox proteins
in the introduction, we discussed the family of hox proteins as an example of a large family of proteins with multiple paralogues in each species. here we assess the performance of fosta  when assigning the zebrafish  fep to homo sapiens homeobox protein hox-b <dig>  there is a body of literature on the problem of elucidating hox gene evolution, which is difficult in zebrafish given the extensive polyploidy in its evolutionary history  <cit> .

the blast search identifies  <dig> zebrafish candidate feps and the filtering process assigns hxb7a_danre  to the fosta family of hxb7_human . there are  <dig> zebrafish fdhs that have higher sequence similarity to hxb7_human than the assigned fep. these proteins, the fep and the root human protein are listed in table  <dig>  along with their uniprotkb/swiss-prot annotations and their sequence identity to hxb7_human. it is clear that hxb7a_danre should be identified as the fep given the similarity of its description to that of hxb7_human; this would be selected in a manual analysis of these candidates, despite its lower sequence identity.

protein: the uniprotkb/swiss-prot id; id: the sequence identity of the protein to hxb7_human;

description: the uniprotkb/swiss-prot description  field.

several sites of functional relevance have been identified for hxb7_human . these functional sites have been extracted from uniprotkb/swiss-prot annotations and a mutagenesis study by yaron et al. . figure  <dig> shows the alignment of the hxb7_human and the four confidently assigned feps with hxb7a_danre and the other fifteen danio rerio candidates in the functionally relevant areas. despite globally having the lowest sequence identity to hbx7_human of all the zebrafish proteins shown in figure  <dig>  it is clear that hxb7a_danre has the highest conservation at functionally critical sites. across residues  <dig> to  <dig>  hxb7a_danre only differs from hxb7_human at the position of a putative pbx binding site, unlike the other danio rerio proteins which all differ in a known sequence motif. the homeobox region  is highly conserved across all of the zebrafish proteins, and again, conservation is highest in hxb7a_danre. none of the zebrafish proteins show conservation at residues  <dig> and  <dig>  which describe a putative ckii target site  <cit> . it is possible that this functional site has been wrongly predicted; however, this is unlikely as it is absolutely conserved across the five mammalian species. it is more likely that this region is no longer functional in the danio rerio lineage, or that this is a recently acquired functionality in the mammalian clade.

functional site: a description of the functional site; location: the residue number in hxb7_human;

reference: the source of the annotation.

a solved annotation problem: proc_human
the uniprotkb/swiss-prot id consists of a protein name followed by an underscore and the species name. it was our initial assumption that the protein name part of the id was a unique name used to label feps  <cit> . however, while analysing human protein c  using uniprotkb/swiss-prot version  <dig> , it was evident that this approach was unreliable. the 'proc' prefix was in forty different species to describe three different proteins: procalin in one species , protein c in  <dig> species , and pyrroline-5-carboxylate reductase in the remaining  <dig> species  . a previous version of fosta was successful in correctly assigning only true examples of protein c to the fep group, and analysis of human pyrroline-5-corboxylate reductase results highlighted the inconsistencies in uniprotkb/swiss-prot naming conventions .

several of the feps in the fosta families of p5cr1_human  and proc_human  have had multiple protein prefix changes. however, after notifying uniprotkb/swiss-prot of the discrepancies, all the misnamed proteins were corrected for the release of uniprotkb/swiss-prot v <dig> : pyrroline-5-carboxylate reductase proteins prefixed with proc or proh are now prefixed with p5cr or p5cr <dig> and proc_tript  is now called prcln_tript.

uniprotkb/swiss-prot makes no guarantee that the protein prefix is a unique identifier, instead describing it as a 'mnemonic code', but it is stressed that work is ongoing to standardize protein nomenclature:

"ambiguities regarding gene/protein names are a major problem in the literature and it is even worse in the sequence databases which tend to propagate the confusion... uniprot is constantly striving to further standardize the nomenclature for a given protein across related organisms" ().

although this standardisation is discussed only with respect to protein names, and not the protein prefix elements of the uniprotkb/swiss-prot ids, it is evident from the timings of prefix updates for protein c and pyrroline-5-carboxylate reductase proteins since uniprotkb/swiss-prot version  <dig>  that uniprotkb/swiss-prot does aim to standardize protein prefixes. if this id was used consistently across all proteins in uniprotkb/swiss-prot there would be no need for fosta.

manual analysis of five protein families
to evaluate fosta, a manual analysis of five protein families was carried out. the focus was the description fields, and whether the description matches by fosta were appropriate. the first was trypsin- <dig> , which was chosen because it belongs to the large serine protease family of proteins. the remaining four – glucose-6-phosphate isomerase , aminopeptidase n , atp-dependent rna helicase ddx <dig>  and protoheme ix farnesyltransferase  – were chosen at random. the results are summarised here . all results are available by searching for the root protein at .

fifteen of the feps identified for try1_human are clearly trypsin molecules . it is notable that all five questionable assignments are derived from insect species; it may be that trypsin genes have diverged and/or duplicated in insect species, or it may be that the naming conventions for trypsin proteins are quite different in insect species. to assign feps to ampn_human, fosta is required to discriminate between multiple different families of aminopeptidases. of the twenty four feps that are identified, only seven would require further investigation to confirm the pairing and the same requirement would apply to manual analysis of the annotations. ddx51_human belongs to a large family of 'dead box helicases'; identifying functional equivalence in such a large family of proteins is a difficult task. nevertheless, three of the five fully sequenced proteins identified by fosta are correct ; the remaining two are from different subfamilies. the results for the two remaining proteins – g6pi_human and cox10_human – are very robust.

the vast majority of the fep assignments considered in this section are correct, and no results are clearly wrong. where results are questionable, it is not clear whether differing naming conventions across species are hindering the identification of the true fep, or whether protein function has diverged in other species. however, it should again be stressed that a manual analysis of uniprotkb/swiss-prot entries for these families is no more effective than fosta.

further benchmarking
evaluation of fep extraction is difficult as no gold standard, large, manually annotated dataset of one-to-one fep pairings is available. it is important to note that fosta is simply an automated assimilation of existing information that has been curated; it is not a method for inferring functional relationships from low level data. in other words, rather than find novel functional relationships, fosta aims to extract functional relationships described in curated uniprotkb/swiss-prot annotation.

nevertheless, we have benchmarked the fosta results against two datasets: the large, partially manually annotated pirsf dataset  <cit>  and a refinement of hulsen et al.'s manually curated dataset of six protein families that has been used previously to evaluate orthologue identification methods  <cit>  .

fosta is designed to be conservative in the fep assignments it makes: it is more important to minimise the number of false positives than to minimise the number of false negatives. therefore, the most appropriate performance statistic with which to evaluate fosta is the positive predictive value : the proportion of positive predictions that are correct, tp/. to provide an overall performance statistic, we also report the matthews correlation coefficients . further performance statistics  are included in the additional files.

pirsf evaluation
the protein information resource  is a widely used, publicly available resource, and is part of the uniprotkb consortium. with a view to the standardization of accurate propagation of protein annotations, pir has developed the pirsf  classification system for uniprotkb proteins  <cit> . however, unlike fosta it does not identify feps as it contains many-to-many orthologous pairings.

fosta was benchmarked against all one-to-one orthologous relationships between uniprotkb/swiss-prot proteins that are listed in pirsf families as 'regular' members , at all four levels of curation, where pirsf families with a curation status of 'full/desc' have the highest level of manual curation, and families with a curation status of 'none' have not been manually curated.

it is evident from table  <dig> that fosta performs extremely well on the pirsf protein families according to the ppv and specificity metrics that are particularly important. however, it also demonstrates reasonably high sensitivity and very high mcc scores.

set id: the identifier for each curation set ; curation string: the string that defines the curation set; families: the number of discrete protein families in the curation set; pairings: the number of discrete pairings across all families to be tested in fosta; basic statistics: the basic counts of true positives , false positives , true negatives , false negatives ; evaluation statistics: the ppv ), and the mcc , all rounded to 2dp

refined hulsen evaluation
hulsen et al.  <cit>  recently evaluated the performance of several orthologue identification methods: bbh , inparanoid  <cit> , kog  <cit> , orthomcl  <cit> , phylogenetictree  <cit>  and z  <dig> hundred . the benchmarking included comparison with manually annotated 'true-orthologue'  pairs of six protein families. for human-mouse  pairings, the protein families used were the homeobox proteins , haemoglobins , and sm and sm-like proteins . for human and worm  to pairs, the families used were nuclear receptors , toll-like receptors , and sm and sm-like proteins .

these methods all aim to identify orthologues and do not consider functional equivalence. since they have different goals, it is not possible to compare fosta directly with the methods evaluated by hulsen et al., but we can evaluate fosta using a subset of the to data.

the to dataset supports many-to-many orthologous pairings where a human protein can map to one or more proteins in another species, and vice versa. to evaluate fosta, these data were manually refined to include only those to pairings that can be confidently identified as true one-to-one orthologous pairings, where both proteins can be mapped to uniprotkb/swiss-prot . this refinement process removes the tlr dataset from the analysis, as no definitive one-to-one orthologous pairings could be identified through manual inspection.

protein family: the protein family being examined; to pairings: the number of to pairs in the hulsen dataset ; refined pairings: the number of one-to-one to pairings tested after refinement of hulsen to dataset; basic statistics: the basic counts of true positives , false positives , true negatives , false negatives ; evaluation statistics: the ppv ), and the mcc , all rounded to 2dp)

the results are summarised in table  <dig>  fosta demonstrates perfect performance in the hbb, hox, smm and smc families, identifying all refined true-orthologue pairings, and avoiding any false positive fep assignments.

however, fosta identified only one of the refined human/worm nuclear receptor  to pairs . on closer inspection, it is evident that the three failures of fosta in the nr dataset are a result of widely varying formats of the uniprotkb/swiss-prot description field across the two species; for example, the homo sapiens proteins tend to be named as "nuclear receptor subfamily x group y member z" proteins, whereas the caenorhabditis elegans proteins are named as "nuclear hormone receptor family member nhr-n" proteins. these primary protein names or descriptions are defined by the species-specific annotation communities  with additional synonyms obtained by uniprotkb/swiss-prot from the literature. therefore, we cannot strictly attribute the lack of annotation consistency to problems in uniprotkb/swiss-prot, as uniprotkb/swiss-prot is merely reflecting the differing practices of the annotation communities and the content of the literature. nevertheless, the lack of consistent description field formatting within uniprotkb/swiss-prot limits the extent to which text-mining methods such as fosta can exploit the data.

it is encouraging to note that fosta makes only one false positive assignment in the refined hulsen dataset. furthermore, fosta does not eliminate any of the one-to-one to pairs: where a fep relationship is missed, the to is retained as a fdh, indicating that our blast threshold is not too conservative.

comparison with inparanoid
inparanoid is a well-known method of constructing sets of orthologous proteins  <cit> . it uses bbh  pairs in different species as a 'seed' around which a cluster of orthologues can be formed. other orthologues – or specifically other inparalogues – can be added to this pairing if they are more similar to one of the seed orthologues than they are to any other protein in another species.

inparanoid does not perform the same task as fosta. fosta is specifically interested in identifying functionally similar proteins whereas inparanoid is more interested in identifying the phylogenetic relationships between proteins in different species. as such, where inparanoid detects one-to-one orthologous pairs, the results will be largely complementary, but need not be identical. we therefore cannot 'benchmark' against inparanoid: it is not the gold standard dataset. however, by identifying one-to-one orthologous pairings in the inparanoid dataset that fosta rejects as feps, we have a dataset of proteins that we can consider as more difficult test cases. for convenience, we will refer to one-to-one orthologous pairings in the inparanoid dataset as 'inparanoid pairs' or ips, and ips that fosta does not consider functionally equivalent as 'rejected ips'.

columns 1– <dig> in table  <dig> describe how many ips from each species were successfully mapped to uniprotkb/swiss-prot ids, and therefore how many ips from each species can be compared to fosta.  <dig> ips were extracted from inparanoid v <dig> , of which  <dig>  are verified by fosta. of the  <dig> ips that are not found in fosta,  <dig> are rejected in favour of another uniprotkb/swiss-prot protein from the non-human species ; in the remaining  <dig> ips, fosta fails to assign any fep from the non-human species to the human protein .

code: the species code as used by inparanoid; species: the full species name; pairs: the number of one-to-one orthologue pairs described by inparanoid between species and human; matches: the number of one-to-one inparanoid orthologue pairs  that are also found by fosta; mismatches: the number of ips pairs that are not found by fosta; % match: the percentage of ips that are also found by fosta; overlooked: the number of ips where fosta assigns a different protein from the species to the fosta family of the human protei; rejected: the number of ips where fosta does not assign any protein from the species to the fosta family of the human protein.

these datasets have been further 'cleaned' to remove those ips that either  cannot be found by fosta or  are clearly correct in fosta.  <dig> of the  <dig> conflicting ips appear to be wrong in inparanoid, since the fep that fosta assigns matches the human protein confidently using the protein prefix match ; for example, fosta identifies ada2a_rat as a fep of ada2a_human, while inparanoid assigns ada2c_rat as the fep in rattus norvegicus. a further five of the conflicting ips appear to be wrong as the non-human protein chosen by inparanoid is assigned as a fep using a protein prefix match elsewhere in fosta. for example, inparanoid assigns spdya_mouse to the fosta family of spdyc_human, while fosta assigns spdyb_mouse and confidently assigns spdya_mouse to the fosta family of spdya_human.  <dig> % of the  <dig> rejected ips cannot be identified by fosta:  <dig> % are not found using a blast threshold of 10- <dig> and  <dig> % involve short human proteins that fosta does not analyse . a further  <dig> rejected inparanoid assignments are found to be wrong: fosta assigns the non-human protein elsewhere on the basis of a protein prefix match.

this leaves a 'clean' dataset of  <dig> overlooked ips and  <dig> rejected ips. in a random sample of ten of the overlooked ips , three fosta assignments and one inparanoid assignment appear to be correct. there is not enough evidence in the six remaining overlooked ips to ascertain which assignment might be correct; however, four of the six remaining ips are flagged as less reliable sequence matches by fosta and could therefore be removed from the dataset.

a random sample of  <dig> ips  were selected from the rejected dataset . note that the ips described in this dataset are not necessarily correct; however we can use the ips as examples of difficult test cases, and hypothesize why fosta might not identify them. most of the ips are rejected by fosta due to uninformative or sparsely annotated de fields. a significant number arise from large, densely populated protein families in which functional relationships are hard to elucidate.

only two highlight where the fosta functional match methodology may lack sensitivity; these are shown in table  <dig>  the first example – cc45l_human/cdc45_yeast – suggests that mapping from acronyms to long forms and vice versa may be valuable in future version of fosta; in this example, cdc would be extended to 'cell division control'. in the second fgf17_human/fg17b_danre example, some flexibility in names and numbers used by the matching machinery would lead to these two proteins being identified as feps. however, introducing such additional flexibility without careful consideration would increase the likelihood of false positives being introduced into the fosta dataset.

the inparanoid data are mapped to uniprotkb/swiss-prot using uniprotkb/swiss-prot cross-references. unfortunately using the uniprotkb/swiss-prot cross-references to map from the inparanoid ensembl protein ids to uniprotkb/swiss-prot sequences results in a biased dataset: the uniprotkb/swiss-prot sequences with explicit cross-references are likely to be well-annotated. nevertheless, it is reassuring that where the inparanoid dataset does identify one-to-one pairings between uniprotkb/swiss-prot proteins, fosta confirms  <dig> % in a large dataset  in a wide variety of species . further, there are no fosta assignments that appear spurious.

CONCLUSIONS
fosta is a novel method that extracts functionally equivalent proteins  from the uniprotkb/swiss-prot database by 'reading' the uniprotkb/swiss-prot annotations. as such, it is a grouping of uniprotkb/swiss-prot proteins that are annotated similarly. we take advantage of the fact that uniprotkb/swiss-prot annotations are the result of many hours of manual annotation, and should encapsulate all knowledge available to the annotator at the time.

since fosta simply assimilates existing annotations, it is difficult to separate the performance of the fosta method, from the quality and consistency of annotations in uniprotkb/swiss-prot. manual analysis of eight fosta families, two benchmarking evaluations and a comparison to the popular but quite different inparanoid method indicate that fosta performs well and that uniprotkb/swiss-prot annotations are generally of high quality. in addition to providing researchers with genuine fep families for tasks such as studying sequence conservation, fosta could be used to provide datasets to evaluate function prediction methods.

given the methodology, fosta has a few limitations. firstly, fosta is clearly dependent on uniprotkb/swiss-prot annotations. any method based on database annotations is potentially problematic as it relies on possibly mistaken, incomplete, inconsistent, ambiguous or outdated information. however, the uniprotkb/swiss-prot database is considered to be the gold standard for protein annotation , and annotations are constantly revised . the continuous revision of uniprotkb/swiss-prot with the regular update of fosta ensures that fosta fep assignments can only improve in parallel with uniprotkb/swiss-prot. secondly, clearly only proteins described in uniprotkb/swiss-prot can be assigned to fosta families. given that uniprotkb/swiss-prot is growing at an exponential rate () and that it is the aim to include all proteins in uniprotkb/swiss-prot, this limitation is not considered significant.

if fosta cannot discriminate between two candidate feps on the basis of function, it will choose the candidate with the higher sequence identity to the root; only  <dig> of fep assignments  are made on this basis. any sequence matching is undesirable, as high sequence similarity does not necessarily imply precise functional equivalence. it may be avoided if more sensitive information extraction methods could be implemented to improve functional discrimination. uniprotkb/swiss-prot keywords and go terms may have some value, but these tend to be at a higher level of annotation and are unlikely to improve discrimination of very detailed functional information. while automatic acronym resolution and character-based fuzzy matching might improve performance, more sophisticated natural language processing methods  <cit>  would not be expected to help, as the text being examined is simply a list of nouns. alternatively, a more sensitive sequence matching protocol could be implemented where annotated functional residues, or a consensus profile of feps already assigned with high confidence could be used, rather than the whole sequence which may be misleading. furthermore, a vocabularly mapping acronyms to their long forms and vice versa, and/or mapping between known synonyms may improve the functional comparison step.

fosta's requirement for one-to-one fep relationships may also be viewed as a limitation. however, we consider this to be justified. consider the protein x in species a that has two homologues y <dig> and y <dig> in species b. if y <dig> and y <dig> are both homologous to x, one must have been derived via a gene duplication event. gene duplication is a mechanism for functional divergence, and we therefore argue that one of either y <dig> or y <dig>  most likely  the one with the poorer sequence identity to x, has acquired novel, or lost existing, functionality , and should not be selected as a fep.

currently, fosta roots families around human proteins because we were interested in identifying feps to human proteins, to examine human disease.  <dig> %  of uniprotkb/swiss-prot proteins are not assigned to a fosta family in the current version. using the median size of a fosta family , we can estimate that another  <dig> families will be formed if fosta were to cluster around non-human proteins. we propose that a future version of fosta will root fosta families around decreasingly well defined  species, until all proteins are assigned to a fosta family. while we intend to address this in future versions, it must be noted that human proteins are the most thoroughly annotated, and it is unclear whether proteins from other organisms will be annotated well enough to identify functional equivalencies across species.

more generally, a controlled vocabulary for uniprotkb/swiss-prot description fields which would allow description of all proteins across all species, would allow text mining to make more reliable hypotheses. this might be implemented as a second, computer-friendly de-type field, keeping the existing descriptions for human inspection. in addition, it would be desirable to move some information from the description field into separate tags in the uniprotkb/swiss-prot flatfile format; for example, flags for fragmented or hypothetical sequences. given the size of uniprotkb/swiss-prot , the resource must expect to be interrogated computationally, more so with every new release. any effort from uniprotkb/swiss-prot to make its contents more computationally accessible would be valuable.

as stated above, a guarantee of unique uniprotkb/swiss-prot protein id prefixes for equivalent proteins in different species would preclude the need for hypotheses to be drawn by software such as fosta. it is clear that the uniprotkb/swiss-prot team are making efforts to standardise such annotations across species (); however it is also clear that some efforts are not yet propagated fully across all relevant proteins and species. as stated above, the protein c/pyrroline-5-carboxylate reductase case described above has since been rectified by the uniprotkb/swiss-prot annotators.

it is clear that not only is the automatic extraction of feps a surprisingly difficult problem, but that it is also very difficult to evaluate these methods. the evaluation that was performed not only demonstrated that fosta performs well, but also that the vast majority of uniprotkb/swiss-prot annotations considered are of high quality. this provides further justification of an annotation-based methods such as fosta, and indicates that any concern about fosta's dependence on annotations need not be over-emphasized. in addition, we expect that fosta will improve with every revision of uniprotkb/swiss-prot.

availability and requirements
• project name : fosta

• project homepage : 

• operating system : web-based 

• programming language : perl/sql

• other requirements : none for web use 

• license : n/a for web use 

• any restrictions to use by non-academics : none for web use 

