BACKGROUND
the comparison of two protein structures is most efficiently handled as a hierarchical problem, more or less closely following the protocol laid out over a decade ago by singh and brutlag  <cit> .

its first step, fold recognition on the level of secondary structural element  correspondence, has been tackled repeatedly in the literature  <cit> , building on the founding body of work related to aligning protein structures at the atomic-resolution level  <cit> . most of the latter adopted an iterative resolution approach by starting from variously defined fragments of protein structure  <cit> . however, prominent methods capable of doing fast and conformationally tolerant search  <cit> , such as ssm  <cit>  and fatcat  <cit>  still take several tens of minutes of cpu time to perform a database search, doing a thorough but perhaps unnecessary job in order to eliminate bad candidates for a match. the development of complementary, ultra-fast methods for rigid structural comparison of proteins seems to have migrated to the realm of computer science, and typically relies on index or hash based database retrieval  <cit> . the algorithm from this family possibly the closest in spirit, if not in the scope, to the one we will propose below is tableausearch <cit> . with its high level of abstraction of protein structure, it indeed proves capable of searching databases approaching  <dig> entries as a matter of minutes. the method records and then discretizes the relative angle between any two pairs of sses in a structure, and stores it as a tableau  <cit>  to be used in the database search. the entries, however, in tableausearch database are rigid domains, and the algorithm thus dispenses with conformationally flexible searches right at the outset. looking for a substructural match in this approach is not a completely straightforward affair either  <cit> .

from mathematical biology side, several global descriptors of protein structure have been proposed  <cit>   with an eye on organizing our knowledge of protein  universe  <cit> . an example is provided by sgm  <cit> , a method that relies on a set of measures from differential geometry to describe overall structure of a protein domain, and which we will use below as a representative of its class of methods.

even though the idea of a pre-filter based on gross features of the protein structure is implicit in several methods that have undergone a steady development  <cit> , it has seldom been discussed and documented as a computational problem on its own. we propose, therefore, to take a look specifically at the question of the smallest possible set of features needed to describe protein structure, and propose its intuitively motivated reduced representation, equipped with a scoring function capable of detecting both rigid matches at domain level, and conformational changes involving relative motion of structural domains.

methods
in the current literature there exists a broad selection of methods for pairwise structural comparison of proteins  <cit> . typically centered on backbone atom matching  <cit> , they take several seconds or even several minutes to compare two structures and decide that the match is not possible. why is it, then, that a human observer can establish, after a single glance that two protein structures in cartoon representation are similar? certainly we are not mentally matching the backbone atoms, nor the angles through which the secondary structural elements  are joined. rather, the human observer will try to orient the two structures so that the sses point roughly in the same direction, and then perhaps check if the two diagrams are showing the same sequential ordering of the sses.

in search for an algorithm which will emulate this efficient process, we propose reducing the protein structure to the bare bones of structural information: sse direction and type  and sequential order. furthermore, we define a function to score the match between two proteins in this representation; the best match between the two structures can then be found by looking for the rotation in the representation space which optimizes this function. the resulting algorithm enables searching through a database of protein structures in a way which is fast, independent of the size of sses and enables detection of structures which are related, but correspond to two different conformations.

structure representation and match scoring function
to reduce the size of the representation of the protein structure, we replace sses by direction vectors in space, while keeping the information about the sse type , as indicated by the two different colors in the illustration in fig. 1a. furthermore, we drop the information about the elements' relative placement in space, resulting in the representation shown schematically in fig. 1b. this representation can then be written as an ordered set of three-dimensional unit vectors,   

for a protein structure of nx sses. the order of the elements is determined by the order in which sses appear on the peptide sequence. each vector represents one of the two types of structural elements that appear in protein structures: α-helix or β-strand. the information about the type is stored as a corresponding set of indicators  

when this object is rotated, the rotation applies to each vector  equally: that is, the relative angles between the vectors stay the same. in this representation, the closeness of vector  from the representation of one protein structure, x, and vector , from the representation of the other structure, y,  

can be measured using the following matrix element, which falls off steeply as the angle between the two vectors increases:   

here, δ is an adjustable parameter, and r is the rotation operator. the overall quality of the match is given by   

the negative sign here is arbitrary, indicating that f will be optimized through minimization with respect to rotation r. choosing a small δ enables performing the double sum, while effectively summing only over the nearest matching pairs. in an ideal case of two exactly matching substructures, and δ tending to zero, the minimal value of f would be equal to the negative number of sses in the smaller structure. the distribution of values of f in the rotation space will depend on the instance of the two sets, x and y, under consideration. depending on the orientation of vectors in x and y, there may be a clear and isolated minimum in f, or there may be a region in r space densely populated with local minima of approximately equal depth. in particular, when comparing two structures with many nearly-parallel elements, covering a small solid angle in our reduced representation, a whole range of rotations r may conceivably result in false 'matches.' as an estimate of how easy it is to achieve a certain value of f, by a chance choice of rotation r, we evaluate the z-score:   

that is, the distance of the value f from the average over all rotations r, measured in units of standard deviation . the rotations resulting in near-zero  zf can then be dismissed as insignificant given the geometry of the problem. the estimate of the z-score requires evaluation of the first two moments of f over the set of all possible rotations r, which can be done explicitly in the case of the average, and numerically in the case of the average square .

to make possible a search through a database of realistic protein structures, we need a relaxed expectation of what is the best attainable match in the direction of sses  <cit> , and therefore we need a finite sized d. this would lead to a number of false matches, were it not for the last requirement that we impose, which is that the sequential ordering of sses from the query is preserved in the set of their closest matching counterparts in the target. that is, we want the outcome of the algorithm to be a map mr : i ↦m, where i is the index over  belonging to x, m is the index over  belonging to y, and for any two pairs ), ) it is true that   

where ≺ indicates the precedence on the primary sequence of the protein.

to find a map which preserves the order, we reinterpret x and y as two alignable sequences of elements  labeled i and j. the letters here are sses, and their the similarity is given by dij. d, eq.  <dig>  evaluated at ropt that optimizes f thus becomes a similarity matrix, playing the role that blosum matrices, for example, play in the more familiar context of the alignment of two primary protein sequences. with the similarity matrix at hand, we can use a pairwise sequence alignment algorithm  <cit> , such as needleman-wunsch or smith-waterman. the alignment procedure optimizes the sum of dij elements over the pairs ) matched in the pairwise matching algorithm   

depending on the algorithm and parametrization, the alignment procedure may assign various gap penalties for the sses that do not map onto the other structure. t  ignores such sses. by retaining only the matched pairs which optimize t , we obtain a good orientation match between the pairs of sses, that at the same time complies with the sequential ordering in both structures.

a conformationally flexible match in this picture consists of two local minima in f for two different r's, thus incorporating a model in which structural domains maintain their internal structural organization during conformational changes in a protein. in practice, it has to be verified that the two minima in r are different in a way that is statistically significant; the details may depend on the implementation.

eq.  <dig> is the place to extend the formalism, if so desired, to include other quantities that can be ascribed to a pair of sse, such as the length match between the two. in the numerical experiments we performed , enforcing the length mismatch penalty of the form   

 the absolute value of the length difference, and tolΔl an adjustable parameter) may improve the performance. the size of the improvement depends on the value used for δ and on the nature of the test the method is subjected to  .

implementation
to determine whether the reduced representation of the protein structure contains enough information for a reliable database search, we have implemented the above ideas in a preliminary way. in this implementation we choose to optimize f starting from a set of initial guesses. this set consists of rotations constructed by choosing all possible combinations of two vectors from x, and two vectors of the corresponding type and same sequential order in y ; the initial rotation, then, is the one which puts the first two vectors from each pair in the same direction, and overlaps the planes spanned by each pair . this is followed by the steepest descent search for a minimum in the space of quaternions representing r  <cit> . this loop is the central time consumer of the search. the number of pairs that need to be checked out is  

where si is the sse type indicator, as in the previous section, and  here is the kronecker δ, not to be confused with the gaussian width parameter used in the rest of the paper. this leads to the worse case scenario  of complexity of , where nx and ny are the number of the sses in the two structures. this number may be substantially smaller  in the case of mixed α/β structures. it can also be alleviated by grouping the directions nearly parallel in space, in which case the complexity becomes  where nx and ny are the numbers of distinct sse directions in structures x and y.  in practice, the second and the fourth sum can be truncated at j = i + m and k = l + m, respectively, where m is a small number , without significant loss in performance. this makes the complexity o, or o in the case of grouped directions.

in a pairwise comparison of two structures, the minima occurring at different r's are stored if the z score is deemed statistically significant; later they are sorted in the order of the ascending z-score, and the best one is reported. a certain top number of suboptimal minima from this sorted list is checked for the complementarity of the match, and the complementary pair assigning the highest total score is reported as a flexible match. this part can be generalized to n, rather than only two complementary matches.

when doing a database scan, pairwise matches between the query and different target structures are scored and sorted using t for a rigid search, eq.  <dig>  while the hits for a flexible search are sorted according to a heuristic score given by   

where z <dig> and z <dig> are the z-scores, eq.  <dig>  for f evaluated at two rotations, r <dig> and r <dig> which match two different structural domains, and t , given in eq.  <dig>  is the quantity optimized in the pairwise alignment. the two maps corresponding to the two rotations result in two different matrices dij and dij; t is evaluated based on the larger of the two values of matrix elements  = max .

RESULTS
it is quite a strong claim that the three features we have selected  provide enough information to distinguish two protein structures . while proving it may not be feasible, we may demonstrate that, statistically, it works quite reliably. below we investigate the distinguishing and classifying power of the representation, and point out its two possible applications: annotation of novel structures and modeling of protein dynamics by homology. parametrization, data sets, and related statistics can be found in additional file  <dig> 

self-scoring in a large database of structures
as a necessary condition for the representation to be of practical value, it has to be unique, enabling the function f to find the query itself in a database of structures. to test this property, we ran an all against all search on  <dig> structures from pdb <dig>  <cit>  with more than three sses, using δ =  <dig>  and δ =  <dig> . for both choices of δ, the total aligned score, eq.  <dig>  is invariably highest for the self match. it is instructive to notice, though, that for the smaller value of δ, the geometric criterion, quantified by zf, eq.  <dig>  is in itself sufficient to distinguish uniquely the protein structure . however, as we allow for more fuzziness in the geometric match, by setting δ =  <dig> , this criterion becomes insufficient , and we have to resort to the preservation of sequential ordering to describe the structure uniquely. this has direct implication on the following experiment, in which detecting structures which belong to the same fold but are not identical forces us to relax the demands on the exactness of the geometric match.

classification of structural domains
general performance characterization
to be of use, a method of the type we are presenting is expected to be able not only to find and rank highly all structures which are identical to the query, but also the structures which are, in some sense, similar to it. using the test  proposed by kolodny et al.  <cit>  we performed an all-against-all comparison of over  <dig> structures from cath v. <dig>   <cit> , and measured the ability of the method to rank highly the pairs with the same class, architecture, and topology. the outcome is shown in fig.  <dig>  in the form of receiver operating characteristic  curve. the best methods climb steeply in the fraction of true positives for small values of false positives. to place the performance of our approach in the context of the existing methods, we show the results for several high-resolution methods , and one low resolution  method on the same graph. in all computational experiments in this paper the methods were considered in their pairwise mode - additional capabilities of the accompanying servers  were not the subject of investigation. the method suggested here lies within the bounds of performance characteristics of methods with finer granularity , indicating that direction, type, and order of sses represent a sizeable portion of the signal that the detailed methods are picking.

consistent with the qualitative description underlying the cath classification, in this experiment we obtained better sensitivity/specificity tradeoff by relaxing the criterion for the directional match by setting δ =  <dig> . together with the results for the exact match problem above, this suggests a possibility of simulated annealing approach with stepwise decreasing δ, to obtain a distribution of hits with varying strictness in structural similarity to the query. 

the time taken for this computational experiment, of approximately  <dig> cpu minutes for δ =  <dig>   on a  <dig> ghz processor, compares favorably with some  <dig> to  <dig> cpu hours needed for the high resolution methods to complete the same task . it should be kept in mind, of course, that the approach we have laid out functions only as a pre-filter and classifier, and does not produce the actual structural alignment on the atomic level. rather, we argue, a small subset of the structural features is responsible for the classification we are trying to reproduce, and this can be used to economize with computational resources.

comparison with pre-filters used in other methods
among the existing tools for structure comparison, the most proficient ones do include some way of pre-filtering , discussed to a larger or smaller extent. since most of such methods have been designed to pass the test like the domain classification discussed here, this is a reasonable place to point out the novel aspects of our reasoning, and their performance implications. hence we conclude this section with a brief comparison with vast and ssm, both well established methods with their own servers  <cit> , and both using sses as the basic elements of protein structure.

ssm
in the course of development of ssm, the authors have devoted a whole publication  <cit>  to the discussion of its preliminary step. in its pre-filtering stage, ssm constructs a graph for each structure. the vertices of the graph carry the information about each sse , while the edges are associated with the attribute of each pair of vertices/sses they are connecting . the algorithm then looks for a common subgraph using a set of heuristic rules, divided into  <dig> levels, to decide on the "sameness" between vertices and edges from the two graphs. the necessity to introduce the cutoffs  enforces discretization of the scoring function, in contrast to the approach proposed in this work. an attempt to run the cath experiment using the five discrete levels of similarity in ssm is shown in fig.  <dig>  dotted line in the inset.

despite the comparatively small area under the roc curve obtained this way, the information manipulated by ssm is actually quite seizable. in an attempt to extract more resolution from the ssm pre-filtering, we took the outcome from all five levels simultaneously, and treated the optimization of the roc area as a machine learning problem . the outcome is shown in fig.  <dig>  inset, blue line. it approaches the roc achieved by the method we are proposing, but at the cost of introducing fifty parameters difficult to grasp intuitively.

vast
vast also relies on a graph matching tactics in its pre-filtering stage, but in a substantially different way . in contrast to ssm, where one graph represents each structure, in vast graph is constructed for a map between two structures, as follows.

in vast, sse elements are represented by direction vectors that, aside from the information about the type, explicitly retain the information about the sse length . a discrete set of rotations acting on one of the structures/representations is attempted, each rotation satisfying the following:  the rotation maps one of the vectors from the rotated structure exactly onto one of the vectors from the fixed structure , and  it brings another vector from the rotated structure into the plane defined by z and some vector from the fixed structure. this contrasts with the continuous space of rotations our algorithm is exploring. in both  and  the vectors mapped between the two structures have to be of the same type.

for each of the rotations from this set, a structure termed "digraph" is constructed: the vertices correspond to pairs of vectors, one from each structure, that fall within certain cutoffs regarding the angle between the two and the allowed distance between their endpoints. digraph's edges exist if the two pairings involved respect the sequential ordering on the input structures, and if they carry the weight inversely proportional to the difference in the angles between two vectors corresponding to the same structure. the cutoffs and the weight are parametrized and the parameters optimized for a typical search. in our comparison runs we used the default set of parameters. the digraph can be traversed quickly to find the best alignment for a given rotation, and consequently the best scoring alignment over all rotations chosen.

this algorithm is similar to certain extent to the one proposed in this work, in the limit of small gaussian width δ , and with the length penalty  included. the digraph traversal is an alternative to the dynamic programming approach we are taking.

the crucial difference here, however, is that vast operates on the level of pairs of sses, somewhat analogous to the possibility of using f <dig> as a scoring function in our approach. the requirements this imposes are stricter, explaining the somewhat higher sensitivity of vast in the low false positive region  the rotations, furthermore, that are tested are not optimized to match the rest of the structure  and thus are not readily applicable to further refinement of the matching transformation, an extension that our approach is in principle amenable to. also, insisting on the length match , in order to get rid of false positive matches, is a strategy which might backfire in the attempts to extend the search to a more distant structural similarity.

as is, however, this method of pre-filtering is very fast , and slightly better in the small fp region than our best take on the cath test, . nevertheless, our roc does show signs of greater robustness and higher resolution capability, as indicated by the larger area under the curve.

detecting a substructure in a set of larger structures
what is the resolution with which this approach can detect a smaller query structure within a larger target structure? to obtain an estimate we took the test set from the previous experiment  and required for each domain to be matched to the target domain with the same cat number from cath classification, but this time with the target domain embedded in the original full-protein structure. the results are shown in fig.  <dig>  again, we try to place the performance of this rough comparison method in the context of what is achievable by methods performing the full structural alignment. in this we choose to stick with the methods that are fast enough to perform the test in a reasonably short time. for their performance in comparison with slower full-alignment methods see fig.  <dig> 

to indicate an impossibility first, methods which assign a set of global descriptors to the structure  cannot tackle this problem. sgm is used as an example here: this is equally true for all methods relying on assigning a hash function to a predefined structural domain.

in the following, we choose not to reinterpret the methods used, and refer the reader to the original publications. instead, we would like to highlight the specific algorithmic choices, which, we believe, give these methods advantage over other approaches, in particular the one proposed in this work. notably here, mammoth  <cit>  and sabertooth  <cit>  were never designed with large database scanning primarily in mind , but rather with the goal of comparing a model structure to a template  or obtaining a precise structural alignment between two structures .

the basic unit of structure being compared in mammoth  <cit>  is a heptapeptide. compared to our current implementation, which enforces an sse as an elementary unit, irrespective of its length , the heptapeptide approach enables better resolution in the high specificity region.

sabertooth  <cit>  uses the idea that the correct alignment may be, among other things, recognized by the similar environment  seen by the aligned structural motifs. this approach also results in strong performance in the small fp regime, and something that our approach hardly generalizes to.

tmalign  <cit>  uses sse alignment, before trying sse mapping which would be a nonsense from the sequence point of view. this is an opportunity our implementation misses . otherwise, tmalign manipulates very similar input information to the approach proposed here, and is therefore encouraging to see it trace out a practically identical roc curve, both in this test , and in the test shown in fig.  <dig> 

3dhit  <cit>  shows the most robust roc curve in this test. it dissects the peptide into 13-residue fragments, which first conveys the same advantage over our approach as discussed for mammoth above. the algorithm then chops up the fragment into clusters. in mapping clusters the identity of amino acid  is enforced  <cit> , an algorithmic move that speeds up the search substantially, but we would like to stay away from as long as possible in development of our algorithm. further on, however, the fact is exploited that for similar structures a transformation that matches two subsets will match larger regions of protein structure, the fact that our approach also builds on, and that can be used to increase resolution of the match toward a full backbone match.

ssm  <cit> , a veteran high resolution method, does the best in the small fp region, but at the cost of cpu time two orders of magnitude longer than required to do the rough comparison we are proposing here. the high resolution is achieved by imposing a series of geometric requirements on matched pairs of sse from the two structures .

the overall message seems to be that judging by the speed of our prefiltering and quite competitive sensitivity/specificity tradeoff it achieves it provides a good base for protein comparison engine.

finding conformationally related structures
next, we need to establish that the representation allows detection of conformationally related structures. as an easier sub-problem, we first consider the task of finding the same protein in two different conformations, thus taking the noise brought in by the evolutionary divergence out of the equation. this is analogous to the first test  in that the primary sequences of the query and the target are the same, but this time their structures correspond to two different conformations. the test set consists of  <dig> structures selected from the database created by the users of dyndom  <cit>  server. a similar set of of pairs of conformations of the same chain could have, of course, been created from other sources, for example molmovdb  <cit> . the results are shown in fig.  <dig>  together with the performance on the same test for one slow, high resolution  and one fast, low resolution method . the reduced representation shows reasonably high resolution, even though for this particular problem there are better suited approaches. ssm and sgm, for instance, both perform exceptionally well. in particular, the total time requirement for sgm is several minutes to produce the results shown.  the harder problem in the same category is finding conformationally related pairs of protein structures, distantly related  in the primary sequence. this problem is compounded by the problem of finding the test set itself . to illustrate an application for a computational tool which can successfully handle such cases, we briefly comment on an example marked as a flexible match in an all-against-all experiment on pdb <dig>  fig.  <dig> shows a structural match between enolase and signal recognition  <dig> kda protein. signal recognition protein bears in its c-terminal apparently so far undescribed similarity to pfam  <cit>  n-terminal enolase domain. the smaller domain in this protein also bears some similarity to the c-terminal enolase domain, at least in its α-helical part. the four domains, however, have been classified in cath as  <dig> . <dig>  and  <dig> . <dig>   and  <dig> . <dig>  and  <dig> . <dig>  . taking into account no more than 8% in sequence identity in the aligned regions in both domains, it means that this example would be difficult to construct either by a search though homologous sequence space or by inspection of cath database. the aligned core domain in c-terminal domains, however, shows striking structural similarity .

the larger and the smaller domain appear rearranged with respect to each other in the two structures, as can be seen by using a linear coordinate transformation that overlaps the larger domain . one structure, this suggests, could then be used as a scaffolding to model conformational change of the other. could this conformational change appear as part of physiological functioning of either of the two proteins? is it at all physically possible to get from one conformation to another at room temperature? finding examples with structural similarity in two structural domains, rearranged in space, may indicate a possibility of conformational change in one or both proteins. the reasonableness of such conjecture is, of course, subject to further testing through targeted molecular dynamics, or some related approach. the type of structural comparison we are advocating, however, should produce more examples for this type of study.

discussion
we have suggested in the methods section that after dispensing with translation and the length of the sses, the structure is effectively represented by a set of points on a unit sphere. with these points we associated information about underlying sse type and sequential order. by settling on the minimal representation of the protein structure, we set out to analyze its sufficiency for structure description and retrieval.

as noted in subsection "self-scoring in a large database of structures", fig.  <dig> and the related discussion, the directions themselves, except when taken very narrowly , may be matched by quite diverse protein structures. to get rid of false positive matches that arise that way, we have suggested imposing the requirement that the matched sses follow the same sequential order in the two structures. this, however is not the only possible way around the problem: as discussed in mizuguchi and go  <cit> , and later elaborated by krissinel and henrick  <cit>  in development of ssm , the directions of sses can be supplemented by various other pieces of information: the length of sses, the distance and torsion angle between all possible pairs of sses in a structure and/or the angles between their directions and the direction of the line passing through their geometric centers. the advantage of using this type of information, rather than requiring the common sequential order of the sses, then is in the ability to look for pairs of proteins with different connectivity between sses, that still result in the overall comparable structures. on the flip-side, the set of requirements might end up being too restrictive in the search of similar  structures, as we have illustrated in the inset of fig.  <dig> 

contrary to the model of similarity adopted here, where similar structures are assumed to share to certain extent the underlying sse arrangement, it is conceivable that two proteins might share a common function as long as they offer a common geometry of the surface to their common  interacting partners  <cit> . in that case one might be interested in a method for detection and retrieval of proteins sharing the same shape, irrespective of the underlying secondary structure. it is a possibility not explored here. methods for retrieval by global shape similarity have been discussed in literature  and extremely short retrieval times  reported  <cit> ). some questions remain outside the scope of these methods, such as detection of a common substructure or structural motif.

sticking to a more conservative model of shared protein structure, the problem which ultimately needs to be resolved is the correspondence: which sses  on two structures correspond to one another. function f enables us to initially sidestep this problem, in principle at least, because the fast fall-off of the closeness measure dij  makes possible the double sum over all elements without the danger of obtaining as the optimal a solution where no actual match exists, but the sum over many distant neighbors artificially increases the score. by starting the protein structure comparison by minimization of f, we are effectively adopting, on the sse level, the match-first-align-later approach, popularized by gerstein and levitt  <cit>  .

ideally, the scoring function f would quantify, in a single expression, the geometric match under the constraint of sequential ordering of the pairs, a problem which we leave open. on the high-resolution end of the spectrum of related ideas lies the urms-rms hybrid algorithm  <cit> . there, a set of directions in space is also considered, however not along the sses, but along the lines connecting neighboring cα atoms within a heptapeptide. being a high-resolution method, it comes with the computational burden comparable to the other backbone-matching approaches . the match scoring function used in that work is different from the one suggested here, but it runs into a similar difficulty of estimating the statistical significance for a match of different structures. a solution offered there is comparison with an empirically derived background distribution of match probabilities using existing, unrelated protein structures.

instead, we opted for a solution which separates the geometric match from the alignment. the fuzziest point in the algorithm we have outlined, therefore, is that the averages in eq.  <dig> should properly be evaluated not over the set of all rotations r, but only over those rotations which allow, through the matrix dij, the alignment of subsequences of the two proteins of substantial length. numerical evaluation of these proper averages would effectively grind the search to a halt, so in our prototype evaluation we keep the averages over all r as an approximation. the approximation works well for the rigid search, where it is used to dispense with bad solutions, rather than score good ones. in the case of the flexible search we resort to the total assigned score as a scoring function, coupled with the requirement that both maps have a high rotational z-score on their own.

in terms of the implementation, the room for improvement is certainly ample. the relatively large number of false positives is attributable, at least in part, to parallel beta sheets and helix bundles, which can be amended by more careful grouping of the representation vectors. also, in the implementation used here, each β strand is represented by a single vector  - a rather crude approximation for most β strands, which are often bent.

perhaps stating the obvious, the ultimate degree of success of an approach will depend on the choices made in the implementation, as much so as on the underlying idea. in this work, the available implementations  decided the way in which the three features we selected to describe a protein were used. even though a faster, or more robust, implementation could perhaps be achieved by a different choice of optimization or alignment algorithm, these are replaceable components, and the main points of improvement are in the representation itself, in the distance  function, and in its statistical evaluation.

CONCLUSIONS
in an attempt to build a pre-filtering tool for a search through a database of protein structures, we proposed  reducing the representation of protein structure to an ordered set of unit vectors carrying the information about the direction and the type of the secondary structure element they represent, eq.  <dig>   measuring the distance between two elements of the same type in terms of a quantity falling off exponentially with the increasing angle between the two, eq.  <dig>   measuring the distance between the two representations as sum over pairwise distances between their elements, eq.  <dig>  and  ordering the near matches by their total aligned score, eq.  <dig> 

the representation is easily extendable to other descriptors of protein geometry by generalization of the type, currently restricted to α-helix or β-strand, and interesting statistics may result from allowing the gaussian width δ to be type dependent.

we have shown that an implementation which minimizes the distance defined in eq.  <dig> through a steepest descent calculation, and subsequently enforces the sequential order between the matched sses using standard sequence alignment approach, performs well in terms of the resolution in the structure space. notable, also, is the speed that can be achieved in structure comparison without tying up the information in the form of a single index - it is precisely this feature which enables us to generalize the search to flexible and multidomain cases, and makes this idea uniquely versatile among structural comparison algorithms. the main concern addressed in this work has been whether this minimalist description of protein structure contains enough information to uniquely describe protein structures, and structural classes. the conclusion is that the information is certainly sufficient for a unique self match of each protein structure studied , and represents the large chunk of the signal detected by the high resolution methods.

. when extended to detection of distant structural similarity, the approach starts to suffer from "false positive" matches , but it stays within the acceptable limits of accuracy set by high resolution methods, and its speed certainly allows for an improvement by extending the number of elements and types in the description.

the straightforward motivation for this description of protein structure makes clear what the pitfalls and directions of improvement are, but even the existing implementation indicates that the approach may prove valuable in making novel predictions, in terms of both rigid and flexible structural comparison. the server to accompany this paper, as well as the code used in the analysis presented in the text is available a http://epsf.bmad.bii.a-star.edu.sg.

abbreviations
sse: secondary structural element; roc: receiver operating characteristic; fp: false positive; tp: true positive.

authors' contributions
zhz contributed to the code development and data analysis and presentation; hkl and im developed the algorithms and drafted the manuscript; im designed the study and the code implementation. all authors read and approved the final manuscript.

supplementary material
additional file 1
additional documentation. a pdf document, containing details of algebraic manipulations, and description of data sets and parametrization.

click here for file

 additional file 2
core region.mov. a short movie in mov format, showing the overlap of core regions of of larger domains of enolase and signal recognition  <dig> kda protein, discussed in "finding conformationally related structures" section.

click here for file

 acknowledgements
the authors thank e. krissinel, p. roegen, t. madej, m. porto and d. plewczynski for tips and explanations regarding their implementations of smm, sgm, vast, sabertooth and 3dhit respectively, and s. hayward and guoying qi for providing the geometric descriptors for the user-created dyndom database. special thanks to r. kolodny for letting us use the data originally collected for  <cit> , and r. robinson and i. reš for encouragement and critical reading of the manuscript. funding by biomedical research council of a*star singapore is gratefully acknowledged.
