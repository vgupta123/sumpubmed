BACKGROUND
microbes play a fundamental role as symbionts in the gut of mammals  <cit> , and are strongly correlated with human health  <cit> . they also control some of the most important environmental processes, such as nitrogen fixation  <cit> , and have been successfully used in the treatment of sewage  <cit>  and to convert waste into usable fuels  <cit> . the importance of microbes is reflected in the large number of recent studies of bacterial communities in a variety of environments, including aquatic  <cit> , soil  <cit> , animal  <cit> , and plant  <cit>  habitats. the use of high-throughput sequencing technologies has greatly benefited the analysis of microbial populations  <cit> , and different methodologies have been developed to characterize the diversity, richness, and similarity of bacterial communities  <cit> . together with the introduction of new sequencing technologies, several challenges have emerged that need to be overcome to gain a better understanding of the diversity of bacteria that inhabit both the environment and ourselves  <cit> .

microbial communities are commonly characterized by mapping sequencing reads to a bacterial taxonomy based on the 16s rrna gene. the effectiveness of this approach is not limited by the length of the read but by the choice of an adequate region of the 16s rrna gene  <cit> . the structure of microbial communities has a high degree of variability, both in environmental  <cit>  and gut samples  <cit> . in particular, human microbial communities differ greatly among individuals  <cit>  and depending on the location of the body and time when the sample was taken  <cit> . metabolic profiling has nevertheless shown that the functionality of communities is more conserved for particular environments  <cit> , indicating that different species distributions can achieve a similar core functionality. understanding the correlation between function and distribution of species therefore requires accurate measurements of both variables.

we have previously shown that a large proportion of reads in metagenomic studies can be assigned with equal significance to more than one species in the taxonomy  <cit> . the assignment of such ambiguous reads to the lowest common ancestor  of the matched species  <cit>  introduces many false positives , and thus we consider other possible nodes below the lca to assign such reads. implicitly, assignments at the lca maximize the coverage but lower the accuracy, and we demonstrated that an assignment based on the f-measure, a combination of precision and recall, produces a significantly different distribution of taxonomic ranks to which reads are assigned.

in the absence of a reference taxonomy, the assignment of ambiguous reads is usually made by either mapping each read to the best blast hit in the reference sequences  <cit>  or by using the reference sequences as a template for a multiple alignment of the reads, which defines pairwise similarities that are used to group the reads into clusters of related species  <cit> . in the absence of reference sequences, dna composition can be used to group the reads into clusters of related species  <cit> .

in this paper, we present a new method to assign ambiguous short reads to a node in the reference taxonomy minimizing a penalty score that generalizes our previous mapping based on the f-measure. our algorithm is both fast and versatile, allowing a fine-grained assignment of reads closer to the lca or the species depending on the value of a single parameter q. this parameter can be specified to have any value between  <dig> and  <dig>  where setting q =  <dig> implies that each ambiguous read has an optimal assignment to a leaf, q =  <dig> always assigns to the lca level, and q =  <dig>  optimizes a combination of precision and recall. the use of this parameter provides the biologist with an intuitive tool to determine how to assign ambiguous reads, and results on six metagenomic datasets show the usefulness of our approach. the use of information on the quality of the sequencing reads results in a decrease in the number of unassigned reads but increases the number of ambiguous reads, thus making the assignment of such reads even more relevant. a method to validate our assignment algorithm is introduced and results for a set of artificial datasets are presented. finally we discuss possible causes for the large proportion of ambiguous reads observed in these datasets.

methods
materials
we have initially studied six bacterial communities represented by  <dig> sequencing tags amplified from different 16s rrna variable regions: a marine environment   <cit> , the human gut   <cit> , the gut of lean and obese twins   <cit> , chicken gut   <cit> , and rat gut   <cit> . the samples were between  <dig> and  <dig> bp in length and, for each of these communities, our algorithm assigned all the ambiguous sequencing reads at the best possible taxonomic rank, utilizing a reference bacterial taxonomy of  <dig>  near-full-length type cultures of high quality  <cit> , ranging in length between  <dig>  and  <dig>  bp, with a uniform scheme of seven taxonomic ranks . the taxonomy covers the whole spectrum of known bacteria, and the dominant phyla are proteobacteria , actinobacteria , firmicutes , bacteroidetes , and tenericutes .

to test the effect of sequencing errors in the sequencing reads, we have also studied a dataset obtained from a bacterial community in the priest pot lake  <cit> , which included the quality scores for each read. two taxonomies were used for this experiment, one based on the  <dig>  high-quality type cultures only and the other one using all  <dig>  16s rrna sequences found in the ribosomal database project  <cit> .

validation of our assignment algorithm was performed using artificial datasets generated with metasim  <cit> , as follows. a first dataset was created importing  <dig>  16s rrna sequences from the taxonomy into metasim, and creating a dataset of short sequencing reads with the following parameters:  <dig> error model;  <dig> , <dig> of reads per run; normal dna clone size distribution with mean  <dig> and standard deviation 20; and expected read length  <dig>   <dig>  and  <dig>  reads of less than 75% the expected length were discarded. a second dataset was created by extracting first  <dig> base pairs roughly corresponding to hypervariable regions v <dig> and v <dig> in each of the  <dig>  rrna sequences, and then importing those subsequences into metasim to generate a new set of short reads using the same set of parameters as before.

taxonomic assignment method
in this section, we introduce a new method for accurately assigning a sequencing read ri to a single node in a fixed reference taxonomy tree t with a leaf set l. we assume that each leaf in l has an associated known sequence. the input is a set r of sequencing reads and a positive integer k. for each ri ∈ r, there is a subset mi ⊆ l of leaves whose sequences contain a substring with at most k mismatches to ri; these leaves are referred to as hits or matches below. the goal is to output, for each ri ∈ r with |mi| ≥  <dig>  one node in t which represents all of mi in a "good" way.

for any ri ∈ r, if |mi| =  <dig> then ri can be trivially assigned to a unique leaf. however, if |mi| ≥  <dig> then ri is called an ambiguous read and it is not immediately obvious how to optimally assign ri to one node in t.

for this purpose, we let the user specify a value in the interval  <cit>  for a new parameter q. intuitively, setting a low value of q means that ambiguous reads will be assigned to nodes near the leaves, while a high value of q means that assignments near the lca level are preferred. our approach for taxonomic assignment of reads is as follows.

 <dig>  apply a read mapping tool, such as gem  <cit>  for instance, to r to compute the set of hits mi for every ri ∈ r.

 <dig>  let the user specify a value in the interval  <cit>  for the parameter q.

 <dig>  for each ri ∈ r:

 if |mi| =  <dig> then output null.

 if |mi| =  <dig> then output the leaf in mi.

 else, output all nodes j of t that have the smallest possible penalty score psi,j with respect to q.

in the following sections we give the formal definition of the penalty score psi,j and study some of its properties. then, we consider how to implement step 3c of our method efficiently, that is, how to compute the psi,j values quickly.

definition of the penalty score psi,j
let t be a  rooted tree with a leaf set l, let mi ⊆ l, and let q be a real number in the interval  <dig> <cit> .

we need some additional notation. let ti be the subtree of t that is rooted at the lca of mi. for every node j in ti, define:

• ti,j = the subtree of tree ti rooted at node j.

• true positives: tpi,j = leaves in ti,j that belong to mi.

• false positives: fpi,j = leaves in ti,j that do not belong to mi.

• true negatives: tni,j = leaves in ti\ti,j that do not belong to mi.

• false negatives: fni,j = leaves in ti\ti,j that belong to mi.

see figure  <dig> for an example. note that for each node j in ti, the leaves of ti are partitioned into four disjoint subsets tpi,j, fpi,j, tni,j, and fni,j. the interpretation of this is that in case the node j is selected to be the representive for a read ri whose hits are mi, then each leaf in ti will either be a true positive, a false positive, a true negative, or a false negative depending on whether or not it lies in the subtree rooted at j and if it is one of the hits.

finally, we define the penalty score with respect to q for every node j in ti by the following formula:

  psi,j=q⋅+⋅ 

for every node j of t that does not belong to ti, we define psi,j = ∞. in case |tpi,j| =  <dig> then we also define psi,j = ∞.

different values of q
recall that our method for taxonomic assignment assigns each ambiguous read ri to a node j that minimizes the value of psi,j for the particular value of q specified by the user. we now study how varying the value of q affects the resulting taxonomic assignments.

first, it is easy to see that selecting q =  <dig> implies that a read ri may have several different optimal assignments, but there always exists an optimal assignment of ri to a leaf in ti since then |fpi,j|  will be zero. on the other hand, q =  <dig> always assigns each ri to the unique lca of mi because this gives |fni,j| =  <dig> and psi,j =  <dig>  thus, the special case q =  <dig> corresponds to the currently commonly used methods for assigning ambiguous reads  <cit> .

furthermore, we observe that psi,j is a generalization of the mapping based on the f-measure that we previously introduced in  <cit> . if the precision of classifying read ri into tj is pi,j = |tpi,j|/ and the recall is ri,j = |tpi,j|/, then the f-measure is fi,j = 2pi,jri,j/ = 2|tpi,j|/). this yields:

lemma  <dig>  any node m that minimizes the penalty score for q =  <dig>  also maximizes the f-measure.

proof.

 argminm=argminm/|tpi,m|)=argminm/2|tpi,m|)=argminm/2|tpi,m|)+1)=argminm/2|tpi,m|)=argmaxm)=argmaxm). 

to summarize, the parameter q directly influences where in the reference taxonomy ambiguous reads will be assigned to. the user can adjust q to obtain representatives for ambiguous reads at the leaf level , the lca level , or somewhere in-between . interestingly, q =  <dig>  is equivalent to maximizing the f-measure, which optimizes a combination of precision and recall. the distribution of taxonomic ranks resulting from setting various values of q in  <cit>  is further investigated for some real datasets in the "results" section.

computation of the penalty scores psi,j
here, we focus on how to compute the penalty scores psi,j in step 3c of our method efficiently. for any tree t, let |t| denote the number of nodes in t. as before, let mi be a set of hits in the reference taxonomy tree t and let ti be the subtree of t that is rooted at the lca of mi. we may assume that |mi| ≥  <dig>  below, we first describe a simple method to obtain psi,j for every node j in ti in o total time . then, we show that if o time preprocessing of t is allowed, we can reduce the time complexity to obtain psi,j for every node j in ti in o total time .  this modification gives a significant speedup in case r contains many reads that induce small sets of hits whose lca are located at high taxonomic ranks in t.

for every node j in ti, define ti,j as the subtree of tree ti rooted at j. the set of all leaves in ti is denoted by li, and ni is the set of all leaves in ti that do not belong to mi . similarly, the set of all leaves in ti,j that belong to mi is denoted by mi, j, ni,j is the set of all leaves in ti,j that do not belong to mi, j, and li,j = mi,j ∪ ni, j. using this notation, we can write the previously defined tpi, j, fpi, j, tni, j, and fni,j as:

• true positives: tpi,j = mi, j

• false positives: fpi,j = ni, j

• true negatives: tni,j = ni \ni, j

• false negatives: fni,j = mi \mi, j

next, we rewrite the formula for the penalty score in terms of |mi|, |mi, j|, and |ni, j| as:

  psi,j=q⋅|fni,j|+·|fpi,j||tpi,j|=q⋅+·|ni,j||mi,j| 

since mi is given, the value of |mi| is fixed. for any node j in ti, the values of |mi, j| and |ni, j| may be expressed recursively as follows:

• if j is a leaf in ti and j ∉ mi: then |mi, j| =  <dig>  |ni, j| =  <dig>  and |li, j| =  <dig> 

• if j is a leaf in ti and j ∉ mi: then |mi, j| =  <dig>  |ni, j| =  <dig>  and |li, j| =  <dig> 

• if j is an internal node in ti: then |mi,j| = ∑j'|mi,j'| and |li,j| = ∑j'|li,j'|, where j' ranges over the children of j in ti, and |ni, j| = |li, j| - |mi, j|.

hence, the values of psi,j for all nodes in ti can be obtained by two traversals of ti: a  bottom-up traversal  <cit>  to identify the root of the subtree ti of t  followed by a top-down traversal to identify the subtree ti of t while computing |mi, j|, |ni, j|, |li, j|, and psi,j for all nodes in ti by applying the above relations. there are o nodes in ti, and so we have:

theorem  <dig>  we can find a node j in t that minimizes the value of psi,j for any mi ⊆ l in o time.

next, we present an alternative method that improves the time complexity stated in theorem  <dig> if preprocessing of the reference taxonomy tree t is allowed.

we start by explaining how to preprocess t. fix an arbitrary left-to-right ordering of the nodes in t and perform a left-to-right postorder traversal of t in o time while enumerating the nodes from  <dig> to |t| in accordance with the order in which they are first visited. associate each node j with its number and, moreover, keep track of the smallest numbered leaf in the subtree rooted at j and denote it by m. subsequently, for any two nodes j, j' in t, it holds that j is a proper ancestor of j' if and only if m ≤ m ≤ j' <j, and this condition can be checked in o time. , j] induced by nodes in t therefore exhibit a nested structure that will be utilized below.) next, apply the o-time preprocessing of  <cit>  to t so that the lca of any pair of specified leaves from t can be obtained in o time, unless the height of t is bounded by a constant , in which case the lca of any pair of specified leaves from t can readily be obtained in o time, without any preprocessing  <cit> . lastly, do a o-time bottom-up traversal of t to compute and store the number of leaves |li| in the subtree rooted at each node i in t .

now, suppose the preprocessing has been taken care of and we are given a set mi ⊆ l of hits. any node j in ti is called relevant if it is equal to a leaf in mi or equal to the lca of two or more leaves in mi. we have:

lemma  <dig>  for each node j in ti, there exists a relevant node j' such that psi, j' ≤ psi, j.

proof. suppose that j is a node in ti that is not relevant. let j' be the lca of the leaves in mi, j. clearly, j' is relevant and, furthermore, |mi, j| = |mi, j'| while |ni, j| > |ni, j'| since ti, j' is a subtree of ti, j. it follows that psi,j′−psi,j=⋅|ni,j′||mi,j′|−⋅|ni,j||mi,j|=⋅|ni,j′|−|ni,j||mi,j|≤ <dig> 

lemma  <dig> implies that psi,j only needs to be computed for nodes in ti that are relevant. define the topological restriction of ti to mi, denoted by ti || mi, as the tree obtained by deleting from ti all nodes that are not on a path from the root to a leaf in mi along with their incident edges, and then contracting every edge between a node having just one child and its child. then, the nodes of ti || mi are precisely the relevant nodes in ti. observe that ti || mi contains o nodes.

to construct ti || mi for any specified mi ⊆ l in o time, proceed as follows. sort the leaves in mi in o time according to their left-to-right postordering numbers by a radix sort and write mi={ℓ <dig> ℓ <dig> …,ℓ|mi|} with ℓ1<ℓ2<⋯ <ℓ|mi|. for x ∈ { <dig>   <dig>  ..., |mi| , perform an o-time lca query on the pair  and let kx be the answer. the set u=mi∫{k <dig> k <dig> …,k|mi|−1} then gives the set of nodes in ti || mi. to obtain the edges of ti || mi, first use o time to perform a radix sort on the set of ordered pairs {, j): j ∈ u} in non-decreasing order for the first coordinate and decreasing order for the second coordinate so that in the resulting ordering, for any j, j'∈ u, it holds that , j) < , j') if and only if either  m <m, or  m = m and j >j'. thus, whenever a node j is a proper ancestor of a node j', the pair , j) appears somewhere before , j') in the sorted list. then, it is straightforward to recover the edges of ti || mi in o time by traversing the sorted list of pairs while using a stack to store all proper ancestors of the currently considered node  time to check the condition m ≤ m ≤ j' < j for any node j' in the list and any element j on the top of the stack).

finally, the values of psi,j for all relevant nodes can be obtained by a bottom-up traversal of ti || mi. there are o relevant nodes, and so we can compute the values of psi,j for all relevant nodes j in step 3c according to formula  using o time. to do this, note that if j is an internal node in ti || mi then |mi, j| = ∑j' |mi, j'|, where j' ranges over the children of j in ti || mi, and |ni,j| = |li,j| - |mi,j|, where |li,j| = |lj| has been precomputed. in total:

theorem  <dig>  after o time preprocessing, we can find a node j in t that minimizes the value of psi,j for any mi ⊆ l in o time.

validation: performance in roc space
each read found in a metagenomic dataset must have originated from a unique original 16s rrna sequence but, due to sequencing errors and incomplete taxonomic information, a significant percentage of the reads end up being assigned at higher taxonomic levels. using an artificial metagenomic dataset, we can know a priori the original sequence and therefore measure how accurately our algorithm classifies ambiguous reads. we used metasim to generate an artificial set of sequencing reads r with a  <dig> error model, and where each read ri is derived from a randomly selected full-length 16s rrna gene sequence annotated in the taxonomy, denoted by hi. because of the errors introduced in ri by the simulation, a search for the most similar full-length sequences to the read produces a set of hits, mi, among which the true hit is usually found. the tree ti rooted at the lca of mi can therefore include three kinds of leaves: the true hit hi, not true but ambiguous hits mi \{hi}, and false hits li \mi = ni.

when using our q-assignment schema, the sets mi, ni, mi,j, and ni,j are defined with respect to the set of plausible hits but without knowledge of the true hit hi, as shown in figure  <dig>  our objective here is to measure how different values of q perform in including hi among the selected leaves. assignments to the lca will in most cases include hi but the precision will be very poor if the size of ti is large, while lower values of q can increase the precision at the risk of excluding hi.

a common measure of performance for binary classifiers is the area under the roc curve  <cit> . for a given read ri and a particular value of q, let us define the true positive rate with respect to the true hit hi as tprhi=|tphi|/ when hi ∈ ti and  <dig> otherwise . notice that when previously calculating the assignment we used the sets tp, fp, tn, and fn with respect to mi, while here we calculate tphi,fphi,tnhi, and fnhi taking into account hi only. in a similar way we define fprhi=|fphi|/. however, tprhi can only be  <dig>  or  <dig>  and therefore, plotting tpr versus fpr would result in degenerated roc curves.

we need to define tphi,fphi,tnhi,fnhi as sets of leaves. that is, |tphi|= <dig> if hi ∈ ti, and |tphi|= <dig> otherwise. then, |tphi|={hi} if hi ∈ ti, and tphi=∅ otherwise.

let us define pi= as the point in roc space that represents read ri. points above the diagonal fpr = tpr have good predictive power, points below it are poor classification results, and points on the diagonal have no predictive power; that is, they are a random guess. the distance of pi to the diagonal is denoted by di, and corresponds to the distance between pi and the point of intersection between the diagonal and the perpendicular that goes through pi. as shown in figure 2di equals 2/ <dig>  and we can define the goodness gq of an assignment for a particular value of q as the sum of distances to the diagonal for all reads, where distances are negative if a point lies below the diagonal:

  gq=∑idi=∑i <dig> 

the value of q that maximizes this sum will be the one with highest predictive power. this measure will be called the q metric of performance. notice that the distance di differs both in sign and in value depending on whether hi is in the subtree ti,j or not. we will define dh∈ti,j as the distance for read ri when hi is in the subtree and dh∉ti,j when it is not:

 dhi∈ti,j=22=22=22|li|−|li,j||li|−1dhi∉ti,j=−22=−22=−22|li|−|li,j|−1|li|− <dig> 

for a given value of q, our assignment produces two distinct subsets of reads: those that have been assigned to a node among whose descendents the true hit hi can be found, and those that do not have hi as a descendent. the goodness of an assignment for a value of q can then be rewritten as:

 gq=∑idhi∈ti,j+∑kdhi∉tk,j= <dig> 

alternatively, and instead of assigning ambiguous reads based on the unique q value that maximizes gq, we can look for the assignment that maximizes the expected distance e for each read, so our mapping would use a combination of different q values depending on the particular read being considered. let us assume read ri can be assigned to nodes n <dig>  ..., nn for each of the q values q <dig>  ..., qn. the probability of hi being among the leaves of the subtree ti,j rooted at nj is p = mi,j/mi, and that of not being included is  <dig> - p =  = mi. the expected distance for a read ri mapped to a node j for a given q is:

 e=pdhi∈ti,j+dhi∉ti,j=|mi,j||mi|22|li|−|li,j||li|−1 −|mi|−|mi,j||mi|22|lk|−|lk,j|−1|lk|−1=22|mi| +|mi||mi|) 

we will call this measure of performance the expected distance metric. the value of q  that maximizes the expected distance for ri is chosen as the most appropriate if the distance is positive, otherwise the assignment to the lca is preferred. it can be easily seen that assignments to the lca when the true hit hi is among its leaves have expected distance  <dig>  since mi,j = mi. lemma  <dig> shows that the true distance for assignments to the lca is always zero and, therefore, such assignments have no predictive power.

lemma  <dig>  assignments to the lca have no predictive power when the true hit hi is among its leaves.

proof. since the true hit hi is among the leaves of the subtree rooted at the lca, the tprhi is  <dig>  the fprhi is |fphi|/ and, since assigning to the lca selects all possible leaves, tnhi=∅ and fprhi= <dig>  therefore, tprhi is equal to fprhi and the point representing such assignment in roc space lies on the main diagonal, thus having no predictive power.

RESULTS
a suffix array was constructed for the  <dig>  reference sequences in the bacterial taxonomy, and each of the sequencing reads was mapped to these sequences using the gem-do-index and gem-mapper tools  <cit> . gem-do-index constructs a suffix array from the set of full-length 16s rrna sequences using the burrows-wheeler transform  <cit> . once the sequences have been efficiently indexed, gem-mapper finds the closest sequences in the suffix array for each of the short sequencing reads in a metagenomic dataset.

parameters were set to find all matching sequences with up to  <dig> mismatches, which is about 99% identity for reads of  <dig> bp. figure  <dig> shows the distribution of sequencing reads mapped to more than one sequence in the taxonomy, and figure  <dig> shows the distribution of hits per taxonomic rank. most gut datasets show a distribution of hits that increases with rank up to the class level and then drops , while the twins v <dig> region samples have a disproportionate number of hits at the domain level and the marine dataset does not seem to show a correlation between the number of hits and the taxonomic rank at which reads get assigned.

we performed an alternative mapping using the sequencing reads as blast  <cit>  queries against the reference 16s rrna sequences, defining ambiguous hits as those that could be aligned to more than one species with the same e-value . table  <dig> presents a summary of the number of reads that get an assignment with each tool.

comparison of gem and blast hits for  <dig> datasets. two or more hits correspond to ambiguous reads.

although blast hits a larger number of sequencing reads, those reads assigned to one or more species using gem show a more significative blast average e-value than reads with no hits . gem provides a more conservative mapping, discarding those reads that get assigned with lower significance. allowing for more mismatches with gem results in a higher number of assigned reads with a higher percentage of ambiguous ones, at the cost of a lower average e-value of the assigned reads . the results discussed in this paper, using gem with up to  <dig> mismatches, should therefore be considered a conservative estimate.

the sequencing reads that matched two or more sequences in the reference bacterial taxonomy were assigned at the taxonomic rank that minimized the penalty score. the distribution of reads assigned at each taxonomic rank is shown in figure  <dig> for values of the q parameter ranging from  <dig> to  <dig>  these results show how ambiguous reads can be assigned at the desired taxonomic rank using different values of q: low values tend to produce a taxonomic assignment at the genus and species rank, while high values produce a taxonomic assignment at the class, order, and family ranks. the marine dataset seems to have a much higher level of ambiguity, as shown by the large proportion of ambiguous reads that get assigned at the order level for q =  <dig>  and by the fact that lower values of q still assign many reads above the species level. the twins dataset is particularly interesting in that depending on the sequenced region, the reads are assigned quite differently. with region v <dig> there is a large percentage assigned above the genus level with q =  <dig>  and this percentage is significant even for low values of q. the region v <dig>  on the other hand, has most of its ambiguous reads assigned at the genus level when q =  <dig> , but most of the reads get assigned at the species level quickly as we decrease the value of q.

sequencing error bias
sequencing with  <dig> suffers mainly from indels in homopolymer runs  <cit> , and such errors can have a significant effect on the final count of bacterial species in a metagenomic sample  <cit> . we analyzed the composition of a bacterial community using a sequencing dataset that included quality scores for each read  <cit> . two suffix arrays were constructed: one from the  <dig>  high-quality sequences, and one with all the  <dig>  16s rrna sequences found in the ribosomal database project. each read was then mapped to these taxonomies using the gem-mapper tool with the parameters described above. the mapping was done with and without the quality scores of the reads, using the error model of  <dig> sequencing provided by the gem-mapper tool when incorporating the scores. table  <dig> shows the distribution of reads unassigned, assigned with one hit, and assigned with two or more hits , with and without quality information.

priest pot lake samples: assignment without  and with  quality scores for  <dig>  type cultures and  <dig>  sequences.

among reads with two or more hits, the maximum number of matches was  <dig> species . out of  <dig>  reads without hits when not using quality information ,  <dig>  also have no hits when incorporating such data ,  <dig> now have one hit, and  <dig> have two or more hits. the  <dig> reads with one hit using fasta are split into  <dig> also with a unique hit with fastq and  <dig> with two or more hits. finally, all  <dig>  reads with two or more hits with fasta also have two or more hits with fastq. the distribution of taxonomic ranks with the  <dig>  species taxonomy with and without quality scores can be seen in table  <dig>  notice how with q =  <dig>  the presence of a single incorrect species among the hits of a read results in its mapping to the lca. the use of lower q values protects against such erroneous assignments when most of the hits belong to a particular taxonomic group, providing evidence of the read belonging to a taxonomic rank lower than the lca of all hits.

priest pot lake samples: taxonomic distribution without  and with  quality scores for  <dig>  type cultures. the top row indicates values of the parameter q between  <dig> and  <dig> 

assignment performance
to validate our assignment algorithm we generated six artificial metagenomic datasets using metasim, with read lengths  <dig>   <dig>  and  <dig> bp for sequences extracted from the whole 16s rrna sequence or from the v1-v <dig> hypervariable region only. out of the original  <dig> , <dig> reads, there were  <dig>  ,  <dig>  , and  <dig>   ambiguous reads when using the whole 16s sequence; and  <dig>  ,  <dig>  , and  <dig>  ambiguous reads when using the v1-v <dig> region.

as observed in table  <dig> the q metric performs better for higher values of this parameter. as the simulated read length decreases, there is a higher proportion of ambiguous reads, more values of q result in a positive gq and the best sum of distances improves:  <dig>  ,  <dig>  , and  <dig>   when using the full-length sequence, and  <dig>  ,  <dig>  , and  <dig>   when using only the v1-v <dig> region. assignments with q =  <dig> do not perform particularly well , indicating that in most cases the true hit h would not be in the chosen subtree if we choose a single leaf out of all possible hits. this is more so as the read length decreases and ambiguous reads are mapped at higher taxonomic ranks, resulting in a larger number of possible hits  and a lower probability of choosing the true hit .

gq
sum of distances gq for each value of q in simulations using the full-length 16s rrna gene sequence  and the v1-v <dig> hypervariable region  for reads of length  <dig>   <dig>  and  <dig> bp. the column ∑ di indicates the best sum of distances achieved.

the expected distance metric e maps half of the reads to the lca, and the rest get evenly distributed among all q values, as seen in table  <dig>  as with the q metric, more ambiguous datasets produce better results, and the sum of distances gradually increases as well:  <dig>  ,  <dig>  , and  <dig>   when using the full-length sequence, and  <dig>  ,  <dig>  , and  <dig>   when using the v1-v <dig> region. the best sum of distances is always larger with e than with gq, indicating that a combination of values of q is a better predictor than assigning all reads using a unique value.

e
e
percentage of reads assigned at the node selected for each value of q when maximizing e in simulations using the full-length 16s rrna sequence  and the v1-v <dig> hypervariable region  for reads of length  <dig>   <dig>  and  <dig> bp. the column ∑ di indicates the best sum of distances achieved.

precision  and recall  for each value of q in simulations using the full-length 16s rrna sequence and the v1-v <dig> hypervariable region  for reads of  <dig>   <dig>  and  <dig> bp.

discussion
comparison of results between gem and blast show that, although blast can map more reads, there is still a large number of reads that either cannot be assigned to any species in the taxonomy, or can be assigned to more than one species. gem provides a more conservative assignment, with assigned reads having a more significant e-value in blast. the combined speed of gem in assigning species to each read and of our algorithm in mapping ambiguous reads to the taxonomic rank minimizing the penalty score provides a useful tool to quickly test hypotheses about microbial communities.

ambiguous reads are assigned to different taxonomic ranks depending on the value of q, as shown in figure  <dig> figure  <dig> and table  <dig>  as the value of q increases, more reads get assigned at higher taxonomic ranks, with clearly different distributions between the extreme values q =  <dig> and q =  <dig>  ambiguous and unassigned reads could either belong to species not present in the taxonomy or be artifacts due to errors in the experimental process. bacterial taxonomies are biased towards cultivable species, but the human gut and oceanic environments are known to harbor many rare, uncultivable bacteria  <cit> . even if a large number of reads come from unknown species, most of them have a small number of hits  and would only introduce a moderate amount of error. reads with a large number of hits, such as some of the reads coming from the twins v <dig> region dataset, might be chimeric sequences product of the pcr amplification step  <cit> , or reads belonging to species from yet to be identified taxonomic groups. reads not uniquely mapped can also be caused by sequencing errors, most commonly homopolymer indels when using  <dig> sequencing  <cit> . we would expect to observe differences in the distributions of homopolymers between the sets of ambiguous and unambiguous reads, but we could not find a significantly higher number of homopolymers for any of these sets across all our datasets . analysis of the distributions of homopolymer lengths versus the number of homopolymers per read was also inconclusive, and we could not clearly differentiate the distributions in ambiguous and unambiguous reads. a blast search using reads with no hits as both query and database showed that the vast majority can be aligned with high significance  to other no-hit reads, indicating that either the same type of sequencing error occurred frequently or that these reads cannot be mapped because the corresponding 16s rrna sequence is not in the taxonomy. on the other hand, incorporating read quality information reduces the number of unassigned reads but increases the number of ambiguous reads more significantly than that of uniquely assigned reads , stressing the importance of an assignment of ambiguous reads that minimizes bias in the estimation of diversity.

artificial datasets produced through simulations contained a lower percentage of ambiguous reads when compared to experimental datasets for similar read lengths, and most ambiguous reads were assigned at lower taxonomic ranks. the simulations using the v1-v <dig> hypervariable region to extract short reads were expected to mimic experimental conditions more closely, but they showed even less ambiguity than simulations using the full-length 16s rrna sequence to obtain the short reads. the results described in section "assignment performance", therefore, represent a low estimate of performance, and datasets with a higher proportion of ambiguous reads would further benefit from our assignment algorithm. tables  <dig> and  <dig>  in fact, show how simulations with a higher proportion of ambiguous reads benefit more from our taxonomic mapping algorithm. although the sequencing error models utilized in the simulations probably differ slightly from the actual errors, we believe the increased ambiguity observed in the experimental datasets is due to a combination of several factors: sequencing errors, pcr artifacts, and incomplete taxonomic information for some of the species present in the samples. selecting a unique q value to assign ambiguous reads based on these simulations might therefore produce biased results and, until more realistic simulations can be performed, we suggest the use of the estimated distance metric instead, which does not require an estimation of an optimal value for q. it should be noticed that, both in the q metric and in the expected distance metric, the distances are relevant to determine whether the assignment to the lca can be outperformed, but the true measure of significance is given by the observed differences in the distribution of taxonomic ranks, as seen in figure  <dig> and figure  <dig> 

CONCLUSIONS
in this paper, we have introduced a new method for the taxonomic assignment of ambiguous sequencing reads based on a generalization of the f-measure that minimizes a penalty score combining the precision and recall of the mapping. there is, to the best of our knowledge, no other taxonomic assignment method concerning precision and recall, apart of the assignment to the lca. by using a suffix array representation of the sequences in the leaves of the taxonomy and preprocessing the taxonomy for fast search of relevant nodes, our assignment algorithm can work in time linear in the number of sequences matching a read. our algorithm can analyze large metagenomic datasets even on a small pc. for instance, on a macbook pro with 8gb of memory, the analysis of the priest pot lake dataset takes approximately  <dig> minutes for gem to analyze , and another  <dig> minutes to assign ambiguous reads. the use of a single parameter to control whether precision or recall should be prioritized results in assignments with clearly different distributions of taxonomic ranks. the assignment strategy of sequencing reads introduced in this paper is therefore both a versatile and a quick method to study bacterial communities.

the study of six different datasets of environmental and gut samples shows that the composition and diversity of bacterial species observed in a sample can vary significantly depending on whether ambiguous or unambiguous reads are used, and on the particular value of the q parameter. results with a dataset where read quality information is provided shows that the number of ambiguous reads increases when such information is used, making our algorithm more relevant. validation of the assignment schema in an artificial dataset shows that a combination of different q values produces the most accurate results. the fact that a unique set of sequencing reads can produce very different distributions depending on how the large number of ambiguous reads are assigned has deep implications for metagenomic studies in general, and in particular for those trying to correlate bacterial composition with disease states. a more accurate characterization of these reads can therefore provide a better understanding of the microbial diversity around and within us.

availability
the software and data sets are available under the gnu gpl at the supplementary material web page http://www.lsi.upc.edu/~valiente/tango/.

authors' contributions
all authors conceived the method, prepared the manuscript, contributed to the discussion, and have approved the final manuscript. gv implemented the software. jc also implemented part of the software.

