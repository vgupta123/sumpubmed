BACKGROUND
the reconstruction of phylogenetic trees from molecular sequences has become a routine task not only for specialists involved in molecular evolution or systematics but also for biologists working on their favourite gene/protein family or annotating new genome sequences. the growing interest for phylogenetic information has stimulated the emergence of new integrated, user-friendly software that produce robust trees using sophisticated methods while remaining accessible to non-specialists. developers concentrated most of their effort on improving the speed, accuracy and versatility of the algorithms proposed for reconstructing phylogenetic trees from user-defined sets of homologous  sequences. however, albeit choosing a good initial sequence dataset is crucial to the validity of subsequent phylogenetic analyses, this step has been largely overlooked in recent software developments.

there is no single way for constructing datasets suitable for phylogenetic analysis, because this task intimately depends on the scientific question we want to address. for example, biologists may be concerned by the taxonomic range of sequences, reduction of long-branch attraction effect, presence of paralogues, orthologues, pseudo-genes and/or multi-domain proteins, etc. failure in the constitution of datasets can lead to draw incorrect conclusion from phylogenetic studies. tools have been specifically designed to distinguish between orthologous and paralogous in genome/proteome datasets  <cit>  and expressed sequence tag datasets  <cit> , but they not always the most convenient for punctual analyses.

a frequent scenario in research is a biologist having a particular sequence of interest in hands that needs to find other sequences that are related to it in sequence databases to create a phylogenetic tree. the basic local alignment search tool   <cit>  is the most widely used set of programs for this purpose, primarily owing to its speed of execution. however, the information presented in the traditional blast output is not optimized for selecting and retrieving items for further phylogenetic study. for example the ranking of the identified matches in function of the alignment scores do not reflect accurately the evolutionary distances between the query and matching sequences . this is mainly because the blast scoring scheme has bias favouring hits that have smaller or no gaps  over hits with long gaps . furthermore, blast results only show the levels of divergence between the query sequence and each of the individual matches but not between pairs of matching sequences. yet this information is important when one wants to control sequence diversity in the phylogenetic dataset . many features of individual alignments are useful for sampling homologous sequences  but their organization and accessibility across the blast result page do not facilitate their interpretation.

to fill this gap, we created blast-explorer. this web-based resource combines a fast parallelized blast search with a suite of tools that allows an interactive exploration of the blast results and the easy selection of a suitable subset of homologous sequences. the traditional blast output is entirely reformatted to highlight phylogeny-relevant information and augmented with new features not provided by blast . blast hits can be selected either individually or in bulk using various criterions. selected items can then be imported locally as fasta-formated sequences or passed to one of the phylogenetic tree reconstruction pipelines available on the phylogeny.fr platform  <cit> .

implementation
initial blast search
blast searches are parallelized on an in-house 25-node linux cluster  and accept either proteins or nucleic acids as query. searches can be done using the blastp  or blastn  algorithms. the tblastn  and blastx  algorithms are also proposed but in this case, subsequent analyses  are carried out at the protein level. the use of tblastx is not proposed because its output is not manageable in subsequent post-processing . protein and nucleotide sequence databases are updated at monthly interval. the parallelization of the blast searches is done as follows: in a first step, each compute node aligns the query sequence against a distinct subdivision of the selected sequence database using the specified blast program. then the resulting hit sequences on each node are gathered together in a smaller database which is searched again in a second blast run for formatting the final output. in each blast run, the effective size of the generic database  is specified using the -z flag to allow accurate calculation of the alignment e-value.

blast output post-processing
the blast output is parsed to collect various features . for each hit, taxonomic information  is retrieved from a weekly updated local copy of the ncbi taxonomy database ftp://ftp.ncbi.nih.gov/pub/taxonomy/. the blast output is entirely redesigned such that the information most relevant to phylogenetic analysis becomes easily accessible. menu panels and images of the similarity tree and tiling diagrams  are also included.

construction of the similarity tree
this tool provides a phylogenetic-oriented graphical display of the blast results. first, a pseudo multiple-sequence alignment  of the query and blast hit sequences is created by parsing the standard blast output: individual blast-aligned hit sequences are piled up by positioning each residue relative to its homologue in the query sequence . multiple non-overlapping hsps for a same hit are concatenated; regions of the hit sequence not aligned with the query sequence are substituted with gaps. when duplicated domains are present in the hit sequence, each repeat unit produces a hsp with the homologous region in the query sequence. in this case, only the repeat unit contained in the highest scoring pair is included in the msa . although pseudo msas may be less accurate than msas created by conventional programs , we chose this option because it is much faster for large datasets .

this pseudo msa is passed to clustalw, which produces a similarity  tree using the "-tree" option. this tree is built with the neighbor-joining method, using either all sites of the alignment or gap-free sites only, depending on the user choice. a picture of the similarity tree is generated by the treedyn program, using the "reporting annotations" functions for color-coding. this image is incorporated into the new html blast output together with a map of embedded javascript actions allowing the mouse-click selection of hits.

implementation
the blast explorer web interface and scripts are implemented in cgi/perl. the interactive web page is powered by the javascript and ajax technologies. the html pages are best viewed on a 19-inches  screen.

RESULTS
running blast-explorer
the entry page of blast-explorer is a simplified blast form that receive a single fasta-formated query sequence as input and allows  the selection of blastn, blastp, tblastn, or blastx  <cit>  as an alignment algorithm,  the selection of a sequence database ,  the selection of a blast e-value threshold and  the option of filtering out low-complexity sequence segments. blast searches report a maximum of  <dig>  hits.

small scale selection mode
by default, the result page only shows the top- <dig> scoring blast hits, while the remaining hits are kept in memory and can be activated using the large-scale selection tools . small-scale selection tools only apply on the top- <dig> scoring blast hits. the central tool in this mode is the sequence similarity tree that provides an approximate picture of the phylogenetic relationships between the query and the top blast hits . blast hits are renamed according to the species name. the similarity tree is documented with meta-information including hit description , alignment coverage , taxonomy-based coloring . the tree image allows a navigation across the blast result page , gives access to the database record , as well as to the selection of individual hits  or in bulk .

a dropdown menu  gives access to additional small-scale selection tools:

o the top-panel shows the number of gap-free sites in the blast-reconstructed multiple-alignment of selected sequences . this number is dynamically updated when blast hits are added or removed from the selection.

o the "score histogram" tool shows the blast score values ranked in decreasing order. a score threshold can be applied by clicking on the histogram .

o two "update tree" options allow redrawing the similarity tree by setting the appropriate number of top-scoring blast hits or using a user-defined sequence selection. the tree is generated by combining clustalw  <cit>  and treedyn  <cit>  using either all sites of the blast-reconstructed multiple-alignment or gap-free sites only .

o the "add sequences to tree" option allow incorporating up to five external sequences  into the current hit sequence selection. the similarity tree is then recalculated to show the phylogenetic position of the external sequences relative to the blast hit sequences.

at the end of the selection process, selected sequences can be imported in fasta format  or passed to one of the phylogenetic reconstruction pipelines available on the phylogeny.fr platform  <cit>  .

large-scale selection mode
in the large-scale selection mode, several tools allow the sampling of homologous sequences among the entire set of blast hits  using global criterions. they are grouped in a dedicated panel  and comprise:

o a pull-down menu that allows changing the e-value threshold on blast hits

o buttons showing the distributions of the blast hits according to three blast alignment statistics . bulk selection among the blast hits can then be done by selecting intervals of the distribution histogram.

o the "selection on taxonomy" tool enabling the selection of blast hits according to their taxonomic rank . the taxonomic information is presented as a hierarchical graph allowing users to adjust the level of details that is relevant to their needs.

following the application of the selection rules, the result page  is updated to account for changes in the list of the top- <dig> best blast.

comparison with existing software
several existing blast post-processors combine blast searches with automated phylogenetic analysis of the blast hits. however most of them do not pursue the same goal and therefore differ in the nature of the results. also, the functionalities proposed to interact with the results vary greatly. some of the applications allow filtering of the blast hits before phylogenetic reconstruction, others do not.

phylogena is a standalone application for phylogenetic annotation of unknown sequences  <cit>  and implements an automated intelligent filtering of blast hits before phylogenetic reconstruction. in contrast with blast-explorer, the hit filtering method is optimized for sequence annotation and do not enable interactive and progressive refinement of the sequence dataset. furthermore phylogena does not allow retrieving the selected sequences for external analysis.

phylogenie is also a standalone application for automated phylome generation and analysis  <cit> . because the principal force of phylogenie is to automatically produce a large number of phylogenetic analyses in batch, it does not allow interactive filtering of blast hits before phylogenetic reconstruction. phylogenie is a command-line driven pipeline, requiring at least some familiarity with unix and command line tools.

phyloblast  <cit>  and the ncbi blast server  <cit>  are two web services that have the most in common with blast-explorer. they produce an enriched blast output and allow selection of hits using various criterions. the phyloblast server is apparently no longer maintained. phyloblast only allowed comparing a protein sequence against a protein database using blastp whereas blast-explorer allows nucleotide/nucleotide, protein/protein and translated nucleotide/protein comparisons. tools for selecting hits before phylogenetic reconstruction are less versatile than those proposed by blast-explorer . the ncbi blast service also provides several tools for selecting and retrieving matching sequences from the blast output; a distance tree of the blast hits can also be calculated. here again the hit selection tools are more limited than in blast-explorer . furthermore the image of the distance tree does not allow interactive selection of the blast hits. this makes selection on phylogenetic criterion less straightforward.

the principal strength of blast-explorer is the flexibility of the sequence selection process and the richness of the information displayed on screen. however, blast-explorer does not propose pre-defined automated methods of hit selection such as for example in phylogena. rather, blast hit selection is multi-dimensional and mainly human-driven though an interactive graphical interface in order to respond to a wide range of sequence selection strategies. another feature that differentiates blast-explorer from other software is that it is entirely web-based. thus no installation on personal computer and no regular update of the sequence databases are required.

the blast-explorer output includes a phylogenetic representation of the blast hits  that aims at helping in the hit selection process. it is important to note that this tree is not optimized for phylogenetic accuracy. rather, we opted for a fast tree reconstruction strategy that is however sufficiently robust for providing an approximate phylogenetic position of the blast hits. thus we advise users to use external specialized software if they want to improve or confirm the accuracy of the phylogenetic tree.

finally, it is important to note that in some phylogenetic aspect, the the importance is a correct distinction between orthologous and paralogous sequences

CONCLUSIONS
blast-explorer provides a simple, intuitive and interactive graphical representation of the blast results that can greatly help biologists in building their sequence datasets prior to phylogenetic studies.

availability and requirements
• project name: blast-explorer

• project home page: http://www.phylogeny.fr .

• operating system: platform independent

• programming language: perl/cgi, javascript

• other requirements: best viewed on a 19-inches  screen

• any restrictions to use by non-academics: none

authors' contributions
ad carried out most of the programming work and drafted the manuscript. sa participated in the programming. jmc participated in the design and coordination of the project and drafted the manuscript. gb conceived of the study, and participated in its design and coordination, participated in the programming and drafted the manuscript. all authors read and approved the final manuscript.

