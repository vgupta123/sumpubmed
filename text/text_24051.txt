BACKGROUND
sequence alignments are essential to the study of molecular biology and systematics because they purport to reveal regions in sequences that are homologous. because sequences gain and lose residues as they evolve, alignments are necessary for revealing such gaps in sequence data. therefore, researchers usually need to align sequences before they can be studied. for example, most algorithms that construct phylogenetic trees from sequences require a sequence alignment . since alignments are an integral part of many research programs, the quality of the inferences we make from alignments depends on the quality of the alignments themselves .

there are two main types of alignment algorithms: local and global. local alignment algorithms like fasta  <cit>  and blast  <cit>  attempt to align only parts of sequences often avoiding gaps, whereas global alignment algorithms like clustal  <cit>  and mcalign  <cit>  attempt to align entire sequences, explicitly handling gaps. for this study we will focus on the quality of global alignment algorithms for pairs of sequences.

most global alignment algorithms fall into two categories: finite state automata  or hidden markov models   <cit> . fsa came first and relies on finding an alignment that either maximizes a score function or minimizes a cost function based on specific models of scores or costs  <cit> . often these models are heuristically optimized using a set of "known" alignments. in contrast, pair hmm, a more recent and more powerful approach, relies on establishing a specific statistical model of sequence alignment, often derived from evolutionary principles  <cit> . the advantage of pair hmm techniques is that researchers can leverage the full power of probability to the question of alignments, including both frequentist and bayesian approaches. pair hmm even allows researchers to sum across all possible alignments to estimate evolutionary parameters and the use of posterior decoding to characterize alignment ambiguity  <cit> . the most common way to implement both fsa and hmm for pairwise global alignment is through dynamic programming, which allows researchers to both find the single best alignment as well as sum across all possible alignments. since it is possible to convert between fsa and hmm approaches  <cit> , we are going to focus on an implementation of a minimum cost fsa; however, we will eventually develop a statistical model to explain our results.

an important observation is that alignment accuracy depends on the assumptions used in picking parameters. costs  that are based on abiological assumptions are likely to produce bad alignments. for example, if the costs of gaps are less than the cost of a match, then the best alignment for a pair of sequences will say that all residues align with gaps, i.e. the sequence pair is unaligned. only in a limited number of applications will this be a biologically plausible result. a more prudent concern is how to pick the nature of gap costs because using an abiological model of gap costs can render any heuristic optimization of gap costs worthless. gap costs are typically based on the affine model, where the cost of a gap of length k is g  = a + bk  <cit> . this is a popular approach because affine costs are easy to implement, fast, and efficient. furthermore, since nucleotides are deleted or inserted in groups, it is biologically plausible that gaps should cost more to create than they do to extend, which can be modeled via affine gap costs.

however, some researchers have raised questions about the biological justification for the affine gap model. studies on the distribution of indel lengths have revealed that the size of an indel is linearly related to its frequency on a log-log scale, and therefore gap-sizes obey a power law  <cit> . under a zipfian power-law distribution, the probability that an indel has length k is p = k-z/ζ, where z >  <dig> and ζ=∑n=1∞n−z
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacqwf2ogecqggoaakcqwg6bgecqggpaqkcqgh9aqpdaaewaqaaiabd6gaunaacaaaleqabagaeyoei0iaemoeaohaaaqaaiabd6gaujabg2da9iabigdaxaqaaiabg6hilcqdcqghris5aaaa@3d64@ is riemann's zeta function. if  <dig> <z ≤  <dig>  the mean of this distribution is infinite, and if  <dig> <z ≤  <dig>  the variance is infinite. the observation that indel lengths obey a power law suggests that sequences should be aligned using logarithmic gap costs, i.e. g  = a + c ln   <cit> . however, as mentioned above, the standard method of sequence alignment uses affine gap costs, i.e. g  = a + bk because they can be modeled efficiently via gotoh's algorithm  <cit> . however, researchers cannot adapt gotoh's algorithm to logarithmic gap costs, and instead researchers must use the more computationally expensive candidate list method of waterman  <cit>  as optimized by miller and myers  <cit> . although affine gap costs are efficient, this study seeks to determine whether this efficiency comes with a cost to accuracy. an alignment is essentially a hypothesis about the evolutionary history of the sequences, specifying formally which residues are homologous to one another. we can define a measurement of alignment accuracy by comparing the hypothesized alignment to the "true" alignment of the sequence pair. an alignment consists of a set of columns which provide per residue homology statements, e.g. residue  <dig> of sequence a is homologous to residue  <dig> of sequence b or residue  <dig> of sequence a is homologous to no residue of sequence b. when comparing two alignment, columns fall into three different categories: 1) columns only appearing in the first alignment, 2) columns only appearing in the second alignment, and 3) columns appearing in both alignments. by counting the number of columns belonging to each category, it is possible to measure how identical two alignments are to one another:

i=2×k32×k3+k1+k2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbqscqgh9aqpdawcaaqaaiabikdayiabgena0kabduealnaabaaaleaacqaizawmaeqaaagcbagaegomaijaey41aqraem4sas0aasbaasqaaiabiodazaqabagccqghrawkcqwglbwsdawgaawcbagaegymaedabeaakiabgucariabduealnaabaaaleaacqaiyagmaeqaaaaakiaaxmaacawljawaaewaaeaacqaixaqmaiaawicacaglpaaaaaa@438e@

where kc is the number of columns in category c.  this alignment identity can be used to measure the accuracy of a hypothesized alignment. it is also possible to describe this formula in hypothesis testing terminology by using true positives, false positives, and false negatives to quantify the accuracy of the hypothesized alignment. in that manner equation  <dig> becomes

i=2tp2tp+fp+fn
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbqscqgh9aqpdawcaaqaaiabikdayiabdsfaujabdcfaqbqaaiabikdayiabdsfaujabdcfaqjabgucariabdaeagjabdcfaqjabgucariabdaeagjabd6eaobaaaaa@3bb1@

when the first alignment is taken as the hypothesized alignment and the second alignment is taken as the "true" alignment. unlike the alignment fidelity of holmes and durbin  <cit> , alignment identity is symmetric and includes information from gaps.

not all sequence pairs are equally easy to align, and the accuracy of a hypothesized alignment is expected to decrease as sequence pairs become more distantly related due to substitution saturation and indel accumulation. therefore, an appropriate measure of expected alignment accuracy for a specific gap cost needs to average across multiple branch lengths and multiple sequence pairs. branch lengths are often measured in "substitution time", where a unit branch length is equal to  <dig> substitution, on average, per nucleotide. according to coalescent theory and neutrality, the number of generations separating any pair of sequences in the same diploid population depends on the effective population size, ne, and has approximately an exponential distribution with mean 4ne  <cit> . if μ is the instantaneous rate of substitution per generation, then the substitution time separating any two sequences has an exponential distribution with mean θ = 4neμ. as branch lengths get longer and sequences become more distant, data is lost from the sequences, and thus no alignment algorithm may be able to recover the true alignment. this limitation can be corrected on a per-sequence-pair basis by using relative alignment identities: absolute alignment identities divided by the maximum alignment identity found for that sequence pair.

RESULTS
for the set of sequence pairs, the minimum branch length for any pair was  <dig>  × 10- <dig> mean substitutions per nucleotide, and the maximum branch length was  <dig> . furthermore, the distribution of observed gap sizes, plotted on a log-log scale, is shown in figure  <dig>  this distribution clearly obeys a power law. ignoring the issue of censored data at gap length of  <dig>  the maximum likelihood estimation of the power-law parameter of this distribution is z =  <dig> .  alignments were classified via their parameter values into three different schemes. all parameter sets belonged to the log-affine scheme. the affine and logarithmic schemes were subsets of the log-affine scheme and consisted of the parameter sets where c =  <dig> and b =  <dig>  respectively. analysis of alignment accuracy was divided into two broad and different questions. first, how do the best gap costs for each scheme compare to one another? and second, how do the maximum alignment accuracy for each scheme compare to one another for each sequence pair? the first question investigates what happens if researchers use a single gap cost across many alignments, and the second investigates what happens if researchers optimize gap costs to each alignment.

the best gap costs were identified by having the highest average alignment accuracy, i.e. they produced alignments that had the highest average identity to the "true" alignments. the best costs for aligning sequences under the log-affine, affine, and logarithmic schemes were identified respectively as g  =  <dig> + k/ <dig> + / <dig> , ga  =  <dig> + k/ <dig> , and gl  = 1/ <dig> +  <dig> ln k . figure  <dig> shows the graphs of these gap costs, and figure  <dig> shows the densities of their identities. log-affine and affine both peak a little below 100% identity, whereas the logarithmic density is nearly flat for most of the parameter space before barely peaking below 100% identity. tables  <dig> and  <dig> present some statistical properties of these gap penalties. the best log-affine cost produced alignments that were only slightly better than the ones produced by the best affine cost. both log-affine and affine costs produced alignments that were considerably better than the ones produced by the best logarithmic cost. in fact, the best log-affine gap cost produced the best alignments for over half the sequence pairs.

accuracy is measured via alignment identity. log-affine: g  =  <dig> + k/ <dig> + / <dig>  , affine ga  =  <dig> + k/ <dig> , and logarithmic gl  = 1/ <dig> +  <dig> ln k .

relative accuracy was calculated as the alignment identity produced by a gap cost for each sequence pair divided by the largest alignment identity produced by any gap cost for the same sequence pair. see notes of table  <dig> 

to compare the best gap costs on a per sequence pair basis, figure  <dig> shows the ratio of affine and logarithmic alignment identities to log-affine alignment identities, plotted via branch length for each sequence pair. the identities produced by the best log-affine gap cost tend to be higher than or equal to the identities produced by the best affine and best logarithmic gap costs. however, there are some sequences for which the best log-affine gap cost produces an alignment that is worse than the alignment produced by the best affine or best logarithmic cost. nevertheless, the best affine cost compares rather well to the best log-affine cost, especially at lower branch lengths. however, the best logarithmic cost does a poor job compared to the best log-affine cost and the best affine cost. clearly alignments derived from logarithmic costs are of poor quality, and highly sensitive to the divergence between sequences.

instead of trying to find gap costs that have the highest average accuracy, we can find the gap costs that have the highest accuracy for each sequence pair. therefore, an alternative approach to comparing schemes is to look at the maximum identity produced by each scheme for each sequence pair. similar to figure  <dig>  figure  <dig> shows the maximum identities of each scheme plotted by transformed branch length, and box-whisker plots of the data. as we saw in the best cost analysis, the maximum affine identities are similar to maximum log-affine identities, and both are distinct from the maximum logarithmic identities. identities decrease with increasing branch lengths, only to increase with the largest branch lengths. furthermore, logarithmic densities are once again very sensitive to increasing branch lengths. similar to figure  <dig>  figure  <dig> shows the ratio of maximum identities of affine and logarithmic to the log-affine schemes. once again, the affine scheme has identities similar to the log-affine scheme and the logarithmic scheme does not.

discussion
the first issue that we will consider is whether the parameter space was properly sampled. for log-affine and affine schemes, the best values were found inside the sampled parameter space, representing local maxima and perhaps global maxima. however, for logarithmic gap penalties, the best penalty was found on the edge of the parameter space. subsequent expansion of the parameter space confirmed that gl  = 1/ <dig> +  <dig> ln k represents a local maximum for logarithmic gap costs.

in the simulations, branch lengths were randomly drawn based on θ = 4neμ =  <dig> . if the per-nucleotide mutation rate is μ = 10- <dig>  then the effective population size would be  <dig> million. this is high for most populations, but it does produce many branch lengths that can represent species-species divergence times. when calculating the best gap costs, it is possible to use importance sampling to weight the identities in a way that reflects another distribution of branch lengths. similar results  were obtained when weighting to produce a θ =  <dig>  distribution.

an interesting feature of the data is that alignment identity improves at the longest branch lengths. according to figure  <dig>  this occurs after the ninety-fifth percentile, which roughly includes all identities associated with branch lengths greater than  <dig> , which is three times the mean branch length. more than likely, branch lengths much larger than  <dig>  are responsible for this observation, but figure  <dig> does not have the resolution to detect a more precise threshold. the observation that alignment identity improves at the longest branch lengths can be attributed to the fact that sequences at long branch lengths, although related, are saturated with indels and thus have very few nucleotides homologous to one another anymore. therefore, parameters that tend to produce hypothesized alignments dominated by gaps, which cause low identities elsewhere, show high identity to the true alignment at long branch lengths.

clearly from the results, logarithmic gap costs are a poor choice for aligning sequences even though biological results would seem to suggest them. logarithmic gap costs perform poorly because they increase slowly . this causes logarithmic costs to "cheat" during pairwise alignments because two huge gaps, covering the entirety of the sequences may be less costly than three or more moderate gaps. in fact, many logarithmic costs have bimodal distributions; they either work or cheat. however, this may not be a problem because it is easy to tell when logarithmic costs cheat, which can be reflected by posterior decoding  <cit> . log-affine gap costs are noticeably better than simple affine gap costs, even though the difference may not be enough to justify wide spread usage given the slower speed of the candidate list method. according to the above results, affine gap costs only diverge from log-affine gap penalties at large branch lengths.

it is definitely surprising that logarithmic gap costs do so poorly compared to affine and log-affine gap costs, given that initially there seems to be little biological justification for having a linear component in the gap cost. however, as we show in appendices a and b, converting a maximum likelihood search into a minimum cost search through shifting and scaling introduces a linear component into the gap cost which can dominate the logarithmic component. in other words, the power law does not imply that gap costs should be logarithmic, instead it implies that gap costs should be log-affine.

in appendix a we use techniques from the field of statistical alignment to develop a probability model for our alignments. the model is similar to the model of knudsen and miyamoto  <cit> . however, it differs in part by not explicitly treating overlapping indels and using a more realistic zipf power-law distribution for indel lengths. in contrast to the recent practice of employing a mixed-geometric model  <cit> , a power-law model is simpler – one parameter versus three – and has a fatter tail. also as discussed above, it is more relevant to the observed distribution of indels  <cit> . our probability model is used to develop a maximum likelihood search for the best alignment and then convert that maximum likelihood search into a minimum cost fsa. maximum likelihood may not be as powerful as posterior decoding  <cit> , but it is easy to convert into a minimum cost fsa.

from appendix a, the log-likelihood of a pairwise, global alignment given observed sequences a and b and parameters λ, θ, and z is

ln⁡l=mln⁡+rln⁡+∑g=1n     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacyggsbabcqggubgbcqwgmbatcqggoaakcqwgbbqqiegacqwfsbabcqwfubgbcqghrawkcqwgbbqqcqggsaalcqwgcbgqcqggpaqkcqgh9aqpcqwgnbqtcyggsbabcqggubgbdaqadaqaaiabigdaxiabgucariabiodaziabdwgalnaacaaaleqabagaeyoei0iaeginaqdccigae4hudenaei4la8iaeg4mamdaaagccagloagaayzkaagaey4kasiaemouailagiibawmaeioba42aaewaaeaacqaixaqmcqghsislcqwglbqzdaahaawcbeqaaiabgkhitiabisda0iab+h7axjabc+caviabiodazaaaaogaayjkaiaawmcaaiabgucarmaaqahabawaamwaaeaacyggsbabcqggubgbcqggoaakcqwglbqzdaahaawcbeqaaiab+t7asjab+h7axbaakiabgkhitiabigdaxiabcmcapiabgkhitigbcygasjabc6gaujab+z7a6jabcicaoiabdqha6jabcmcapiabgkhitiabdqha6jgbcygasjabc6gaujabdugarnaabaaaleaacqwgnbwzaeqaaagccaglbbgaayzxaaaaleaacqwgnbwzcqgh9aqpcqaixaqmaeaacqwgobgta0gaeyyeiuoakiaaxmaacawljawaaewaaeaacqaiyagmaiaawicacaglpaaaaaa@82a9@

where λ is the mean number of indels per substitution, θ is the average branch length between sequences, and z is the power-law parameter. the alignment is summarized by the number of matches , number of mismatches , and the length of each gap . furthermore, in appendix b we convert this log-likelihood into minimum cost search, producing the following gap cost derived from equation 2:

g=ln⁡ζ−ln⁡+ln⁡k/2+zln⁡kln⁡−ln⁡     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwghbwrcqggoaakcqwgrbwacqggpaqkcqgh9aqpdawcaaqaaigbcygasjabc6gauhgaciab=z7a6jabcicaoiabdqha6jabcmcapiabgkhitigbcygasjabc6gaujabcicaoiabdwgalnaacaaaleqabagae83udwmae8hudehaaogaeyoei0iaegymaejaeiykakiaey4kasiagiibawmaeioba4maeiikagiaegymaejaey4kasiaeg4mamjaemyzau2aawbaasqabeaacqghsislcqai0aancqwf4oqccqggvawlcqaizawmaagccqggpaqkcqwgrbwacqggvawlcqaiyagmcqghrawkcqwg6bgecyggsbabcqggubgbcqwgrbwaaeaacyggsbabcqggubgbcqggoaakcqaixaqmcqghrawkcqaizawmcqwglbqzdaahaawcbeqaaiabgkhitiabisda0iab=h7axjabc+caviabiodazaaakiabcmcapiabgkhitigbcygasjabc6gaujabcicaoiabigdaxiabgkhitiabdwgalnaacaaaleqabagaeyoei0iaeginaqjae8hudenaei4la8iaeg4mamdaaogaeiykakcaaiaaxmaacawljawaaewaaeaacqaizawmaiaawicacaglpaaaaaa@7ed3@

since in the simulations θ =  <dig> , λ =  <dig> , and z =  <dig> , equation  <dig> reduces to

ln⁡l= <dig> m− <dig> r−∑g=1g     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacyggsbabcqggubgbcqwgmbatcqggoaakcqwgbbqqiegacqwfsbabcqwfubgbcqgg8bafcqwgbbqqcqggsaalcqwgcbgqcqggpaqkcqgh9aqpcqaixaqmcqgguaglcqaixaqmcqai5aqocqwgnbqtcqghsislcqaixaqmcqgguaglcqai0aancqai1aqncqwgsbgucqghsisldaaewbqaaiabcufabjabisda0iabc6cauiabisda0iabiwda1iabgucariabigdaxiabc6cauiabiwda1igbcygasjabc6gaujabdugarnaabaaaleaacqwgnbwzaeqaaogaeiyxa0faleaacqwgnbwzcqgh9aqpcqaixaqmaeaacqwghbwra0gaeyyeiuoakiaaxmaacawljawaaewaaeaacqai0aanaiaawicacaglpaaaaaa@6162@

and equation  <dig> reduces to

g  =  <dig>  +  <dig> k +  <dig>  ln k     

this gap cost is very close to the top gap cost found in the simulations: g  =  <dig> +  <dig> k +  <dig> n k.

furthermore, based on unweighted least squares, the following affine cost bests fits equation 5: g  =  <dig>  +  <dig> k . this cost is very close to the best affine cost found in the simulations, w′k
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwg3bwdgaqbamaabaaaleaacqwgrbwaaeqaaaaa@2fba@ =  <dig> +  <dig> k.

furthermore, because the linear component of equation  <dig> dominates the logarithmic component, logarithmic gap costs will clearly provide worse fits than affine gap costs. therefore, one can surmise that the linear component to the gap cost function derives from the conversion of a maximum likelihood search into a minimum cost search via shifting and scaling to fit specific substitution costs. furthermore, this linear component dominates the gap cost allowing the log component to be removed and the gap opening cost re-waited. these results also open the possibility that the gap extension cost can be moved into the substitution matrix and eliminated from the gap cost entirely, potentially speeding up alignment algorithms.

the linear component of the affine approximation is derived solely from the shifting and scaling introduced by fixing the substitution costs. because the extension cost is not influenced by the distribution of gap lengths, the zipf power-law distribution of gap sizes appears to be approximated by a discrete uniform distribution. although this result is rather unexpected, it makes sense in two ways. first, zipf distributions have fat tails, and sections of the tail can be well approximated by a uniform distribution. and second, the numbers of matches, mismatches, and gapped positions are not independent of one another ; therefore, matches and mismatches carry information about gap lengths. the uniform approximation for a zipf distribution may prove to be more useful than geometric  <cit>  or mixed-geometric models  <cit> .

CONCLUSIONS
from these results i propose that, if a researcher knows or is willing to assume θ, λ, and z for a group of sequences that he wants to align using a match cost of  <dig> and a mismatch cost of  <dig>  he can estimate a log-affine gap cost via equation  <dig>  however, if he wanted to use other costs for matches and mismatches, he can re-derive them using the methodology shown here. furthermore, an affine gap cost can be estimated by fitting g  = a + bk to equation  <dig> via the method of least squares. however, researchers will find more utility if the procedure outlined in this paper was extended to the models of sequence evolution beyond jukes-cantor. in subsequent research, i hope to apply this procedure to more complex models as well as to unrooted trees.

this research has demonstrated that logarithmic gap costs, although suggested by biological data on the surface, are not a good solution for aligning pairs of sequences through a finite state automata. in fact, despite previous suggestions, e.g.  <cit> , the power law does not imply that gap costs should be logarithmic, instead it implies that gap costs should be log-affine. furthermore, the results find that affine gap costs can serve as a good approximation to log-affine gap costs to account for the shifting and scaling often introduced by match and mismatch scores. because affine gap costs are quick, efficient, and currently nearly ubiquitous, this research strengthens the rational for existing practices in molecular biology.

