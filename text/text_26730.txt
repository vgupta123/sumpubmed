BACKGROUND
large amounts of genomic information are currently being generated, including whole-genome sequences of multiple strains of many bacterial species. the availability of these sequences provides exciting opportunities and applications for comparative genomic analysis of multiple bacterial strains. for example, comparative genomic analysis of the avirulent h37ra and virulent h37rv strains of m. tuberculosis provides insights into the virulence and pathogenesis of m. tuberculosis <cit> . as another example, comparative genomic analysis of three linezolid-resistant s. pneumoniae strains identified three mutations and the associated genes involved in antibiotic resistance  <cit> . as a last example, an ingenious comparative genomic analysis of susceptible and resistant strains of m. tuberculosis and m. smegmatis found that the only gene commonly affected in all three resistant strains encodes atpe, thereby uncovering the mode of action of the novel class of compound diarylquinoline to be the inhibition of the proton pump of m. tuberculosis atp synthase  <cit> .

these impressive results were achieved by integrating and connecting information generated during the sequencing of multiple distinct strains of the bacteria species mentioned. in order to repeat these past successes, there is a need for a general annotation consensus, as the physical and functional annotations of the strains of the same bacteria differ significantly in some cases. as an extreme case of the problem, the strains of e. coli reportedly have only 20% of their genes in common  <cit> . one cause for the inconsistency of gene annotations is sequencing errors. for example, surprised by the higher similarity between h37ra and cdc <dig> m. tuberculosis strains than that between h37ra and h37rv, zheng et al.  <cit>  re-sequenced the relevant loci in h37rv and discovered a mere  <dig> out of  <dig> of the variations were genuine and the rest were sequencing errors  <cit> . a second cause for gene annotation inconsistency is gene structure prediction errors. for example, when wakaguri et al. determined the entire sequences of  <dig> cdnas in t. gondii to evaluate earlier annotated gene models of t. gondii at the complete full-length transcript level, they found that 41% of the gene models contained at least one inconsistency  <cit> . also, a persistent weakness of gene structure prediction methods is the accuracy of start codon assignment  <cit> , giving rise to a significant amount of gene annotation inconsistency from the resulting gene size variations. another cause for the inconsistency of gene annotations is the inability to put genes from different strains into correct gene families. for example, the extreme case of e. coli is probably due to the simple-minded blast reciprocal pairwise comparison that was used in  <cit>  to identify genes belonging to the same gene family. this strategy may identify as few as 15% of genes that are known to have evolutionary relationship; a more sophisticated strategy based on linking by intermediate sequences—a strategy that we also adopt—may increase the ability to recognize genes evolutionary relationship by 70%  <cit> .

this is a frustrating state of affairs for both biologists and bioinformaticians. therefore, we require structured, exhaustive, comparative databases. while broad-based, web-technology-enabled community annotation has been proposed as a solution to the problem  <cit> , it is feasible only for species having a large interested research community. unfortunately, this may not be the case for many bacterial strains such as m. tuberculosis due to, for example, insufficient profit opportunity  <cit> . another well-known effort is the fellowship for interpretation of genomes  <cit> , which has developed and successfully applied a tool called seed  <cit>  to support functional annotations of bacterial strains, based on a concept of integrating annotations among multiple bacterial strains in a so-called “subsystem” or gene-family-centric manner. seed  <cit>  provides functions for navigating and annotating genes such as identifying similar genes from other organisms and comparing their neighborhoods. these functionalities allow users to investigate how a given gene relates to other genes and permit them to update and extend the annotation database via a web interface. however, this process is not automated and the functionalities are more customized for gene function annotation than for gene structure annotation.

therefore, we should explore the development of alternative approaches and technologies that integrate, connect, and produce consensus gene annotations to support comparative analysis of multiple bacterial strains. we have designed camber to support comparative analysis of multiple bacterial strains. camber approaches the problem as follows. first, we use intermediate sequences—a tactic originally proposed for enhancing fasta’s ability to detect evolutionary relationship  <cit> —to link multiple annotations on a gene. we call the resulting structure a multigene. next, multigenes are linked by blast edges between their elements into a consolidation graph. multigenes in the same connected component of the graph are proposed to form a family. finally, we use genomic context information—a tactic originally proposed for enhancing gene function prediction  <cit> —to refine the consolidation graph. this way we obtain more multigene families where the multigenes in each family are in one-to-one relationship in the bacterial strains considered. these resulting multigene families can be used to support more detailed comparative analysis of multiple bacterial strains for detecting sequencing error, identifying mutations for drug resistance, and other purposes.

in the remainder of this paper, we present the details of camber and our results on m. tuberculosis, s. aureus and e. coli. a preliminary version of camber was described in  <cit> . the current paper differs from the preliminary version by  a more careful analysis and handling of noise due to short possibly erroneous annotations,  testing on more species,  demonstrating scalability on a much larger set of strains,  an analysis of core vs pangenomes, and  a substantially revised camber software release—camber is available at http://bioputer.mimuw.edu.pl/camber and can now be run on computer clusters powered by sun grid engine.

methods
we present here the details of our approach. we assume that we have a set of bacterial strains whose genomes have been sequenced and annotated. the goal is to arrive at revised annotations of the strains which arise from projecting an annotation of one strain onto the annotations of another. furthermore, we focus on translation initiation site  annotations. in this operation, we do not remove the original tis in the second strain, but rather add new tiss suggested by the annotations of the first one. in particular, we may arrive at new annotated genes in the second strain. in this way, we naturally arrive at the concept of a multigene which is just a gene with possibly several tiss.

more precisely: given an annotation a in strain s <dig> and let x be an orf which according to a encodes a gene in s <dig>  we run blast with query x against the sequence of a genome of a strain s <dig>  let y' be a hit in s <dig> returned by blast to the query x and let y be the sequence obtained from y' by extending it to the nearest stop codon . we call y an acceptable hit with respect to x if the following five conditions are satisfied:

• y starts with one of the appropriate start codons: atg, gtg, ttg.

• the blast hit y' has aligned beginning of the query x with the beginning of y'.

• the e-value score of the blast hit from x to y' is below a given threshold et .

• the ratio of the length of y to x is less than  <dig> + pt and greater than  <dig> – pt, where pt is a given threshold . this condition is imposed in order to keep similar lengths of related sequences.

• the percent of identity of the hit  is above a length-dependent threshold given by the hssp curve  <cit> . the curve was originally designed for amino-acid queries, in our case we use the formula:  

where l is the floor of the number of aligned nucleotide residues divided by  <dig>  typically nt is set to  <dig> % or  <dig> %.

so, assuming that we use blast with default parameters, our method has three specific parameters: e-value threshold et, length tolerance threshold pt, and length-depended percent of identity threshold implied by nt.

it follows from the definition above that an acceptable hit y may overlap a gene annotated in s <dig> in the same frame, sharing the same stop codon, but having a different tis. as mentioned above, this gives rise to the notion of a multigene. different tiss in a multigene g give rise to different putative genes. we call them elements of g. obviously genes can be viewed as multigenes with just one element.

therefore, we have two types of gene structure annotations in the rest of this paper. the first type of annotations are the original annotations  given along with the input sequenced genomes. the second type of annotations are the predicted annotations  putatively transferred from one genome to another in the multigene construction and closure processes.

consolidation graph
we compute iteratively a closure of annotations which is based on the above described operation of taking acceptable hits. initially, as step zero, we take original annotations which are furnished with the genomic sequences. assume that at step i ≥  <dig> we have an annotation  associated with each strain s.

annotation  in the step i +  <dig> is obtained by taking all acceptable hits in s for the queries ranging over all genes annotated in , for every other strain t. this process stops when no new acceptable hit is obtained. this process generalizes a proven strategy for identifying more homologs by linking intermediate sequences  <cit> .

having computed the closure we can construct now a consolidation graph g. its nodes are all multigenes obtained during the process of computing the closure. there is an edge from a multigene g to a multigene g' if one of the elements of g' is obtained as an acceptable hit with respect to one of the elements of g. figure  <dig> illustrates the process of computing the closure, as well as a construction of the consolidation graph.

refinement of the consolidation graph
connected components of a consolidation graph g represent multigene families with a common ancestor. our next goal is refining the multigene homology relation represented by edges in g to obtain as many one-to-one homology classes as possible, i.e. having at most one multigene per strain in such a class. we call a connected component of g an anchor if it includes at most one multigene for every strain.

one-element anchors are called orphans. non-anchors are the components which fail to be anchors. obviously the definitions of anchors, orphans, and non-anchors apply to any graph with nodes being multigenes from various strains.

multigenes in the same anchor are potentially orthologous to each other. in contrast, a non-anchor contains at least two multigenes that are potentially non-orthologous. genomic context information has been successfully used to clarify gene relationships and improve gene function prediction  <cit> . so, we propose exploiting genomic context information to analyse and decompose non-anchors into smaller connected subgraphs that can emerge as anchors in the resulting refined consolidation graph.

our construction of the refinement proceeds in stages. at each stage we carry a graph which is a subgraph of the graph from the previous stage. at stage  <dig>  the original consolidation graph g is used as the initial input graph g.

suppose we have at stage i a graph g. we restrict this graph by performing the following test on each pair  of multigenes originating from strains s <dig> and s <dig>  connected by an edge in g which belongs to a non-anchor component of g. let a be the nearest left neighbor multigene of g in s <dig> which belongs to an anchor of g containing a multigene from s <dig>  let b be the nearest right neighbor multigene of g in s <dig> which belongs to an anchor of g containing a multigene from s <dig>  in similar way define left  and right  neighbors of g' in s <dig>  assuming that all four multigenes a, a', b, b' exist, we keep the edge connecting g and g' in g if either  and  ), or  and  ) are edges in g, i.e. the corresponding pairs are in the same anchors of g. if at least one of the multigenes a, a', b, b' does not exist, the edge connecting g and g' in g is not copied from g. the procedure stops when no edge is removed from the current graph. we call the resulting graph a refinement of g. figure  <dig>  shows a situation when we have to retain two edges, leading to a cluster with unresolved one-to-one relationship. these cases may get resolved later when more anchors are obtained.

time complexity
the most time consuming operation in the closure procedure is running blast. we denote by blast() the blast running time. let k be the number of all considered strains and let n be the maximal number of annotated genes in the genomes under consideration. for each strain during the closure operation we use every identified or annotated orf only once. assuming that the number of newly discovered multigenes does not grow fast, we can estimate the total time of the procedure as k <dig> * n * blast().

now, we estimate time complexity of one iteration in the refinement procedure. again, let k be the number of all considered strains and let n be the maximal number of identified multigenes among all strains. denote by m the number of non-anchors in the consolidation graph. additionally, let p denote the maximal number of multigenes for one strain among all non-anchor components. in order to find the nearest left and right neighbors of a multigene in linear time we first sort all of them. this takes time k ∗ n ∗ log n. since we have at most  edges to check for support of the neighboring anchors , for each of the m non-anchors, it follows that the estimated total time to resolve all of the m non-anchors is .

RESULTS
our approach, called camber, was applied to  <dig> m. tuberculosis ,  <dig> s. aureus and  <dig> e. coli strains. it was ran with the following parameters: et = 10– <dig>  pt =  <dig>  and nt =  <dig> %. in our earlier work  <cit> , we used the constant percent of identity threshold , but finally we decided to use length-dependent percent of identity as we obtained much fewer suspicious very-short predictions. the input datasets comprise nucleotide genome sequences and gene structure annotations of protein-coding genes of the strains in each case study. however, annotations for pseudo genes were filtered. the input datasets were generally taken from genbank  <cit> , with the exception of six m. tuberculosis strains. the input datasets for three of these strains came from the broad institute database; while the remaining three came from the supplementary material of  <cit> .

mycobacterium tuberculosis case study
tuberculosis is still a major cause of deaths worldwide, in particular due to still poorly-understood mechanisms of drug resistance. the first fully sequenced m. tuberculosis strain was h37rv in  <dig> and since then several new strains have been sequenced  <cit> .

details for input strains for the m. tuberculosis case study. the first number in column called ’# of genes’ corresponds to the number of annotated genes, the second  corresponds to the number of genes excluded in the study due to unusual start or stop codons or sequence length not divisible by three. in order to avoid ambiguity in naming the same strain sequenced by two labs we introduce an additional suffix . characters in last column, called ’lab.’, describe the sequencing laboratories: b - the broad institute, t - texas a&m university, c - chinese national human genome center at shanghai, s - sanger institute.

it is quite remarkable that variance in the number of predicted multigenes after the closure is much smaller . the reader may also compare the corresponding data presented in tables  <dig> and  <dig>  table  <dig> shows for each strain the distribution of multigenes with respect to the number of elements . by far the largest group in each strain are one-element multigenes. also, figure  <dig> shows that the predicted multigenes are quite even distributed in terms of gene length.

the careful reader may have also noticed that the same strain  sequenced in two labs has quite different numbers of annotated genes ; but after consolidation we have for these two genomes almost the same number of multigenes .

this case study shows that the method can also be applied to completely unannotated genomes, yielding an initial annotation of a newly sequenced genome. for example, due to a shift in annotation coordinates for the strain kzn v <dig> we removed most of the gene annotations . using our method, we were able to annotate  <dig> multigenes in the genome.

after refinement of the consolidation graph, the number of connected components rose from  <dig> to  <dig>  but size of the largest component dropped from  <dig>  to  <dig> . also the maximal number of multigenes in one strain and in one non-anchor dropped from  <dig> in the consolidation graph to  <dig> in the refined consolidation graph.

it is interesting to compare the two largest components of the consolidation graph. as mentioned above they have in total  <dig> multigenes, each strain having between  <dig> and  <dig> multigenes in these non-anchors. what is remarkable here is that h37rv, having  <dig> multigenes in each of the two components, has all of these  <dig> genes annotated in the tuberculist database  as transposons which belong to the same insertion element . even though these two non-anchors were not successfully resolved by the refinement procedure, the resulting non-anchors  are pretty small: at most two multigenes per strain.more precisely, each of the original non-anchors was split by the refinement procedure into  <dig> subclusters .

the consolidation graph contains  <dig> connected components, with only  <dig> components  being non-anchors and  <dig> being orphans. after the refinement procedure we obtained slightly more connected components , but the number of non-anchors substantially dropped to  <dig> . figure  <dig> gives another point of view for the refinement procedure results.

with this approach we were also able to discover five cases of gene fusion/fission in the investigated genomes which seems pretty unusual for such closely related strains. we leave the analysis of this phenomenon for further study.

see additional file  <dig> for detailed summary of the case study results.

staphylococcus aureus case study
since penicillin was introduced for s. aureus treatment in  <dig>  penicillin resistance has become common among s. aureus isolates  <cit> . two meticillin-resistant strains  are the first fully sequenced s. aureus genomes  <cit> .

genome sequences and annotations of  <dig> fully sequenced strains were used in our study. at the time of writing, these were the only available s. aureus strains with “completed” sequencing status. table  <dig> presents details of the strains.

in this medium-size case study most of the results and corollaries are similar to the m. tuberculosis case study. however, we highlight below three interesting observations. the first observation is that there is a much large number of short predicted multigenes compared to the number of short original annotated genes, as shown in figure  <dig>  this contrasts sharply with the situation for m. tuberculosis depicted in figure  <dig>  this means that in s. aureus, many strains have short original annotations that are annotated to one of them but not to other strains, even though highly homologous regions exist in other strains. this suggests possible higher occurrence of annotation errors in short genes of s. aureus, especially in strains like nctc8325; see figure  <dig>  the second observation is that the computing of the closure took  <dig> iterations, which is similar to the much larger study of e. coli  and more than the m. tuberculosis case study . the third observation is that the maximal number of tiss in a multigene is  <dig> , where for e. coli it is  <dig> and for m. tuberculosis  <dig>  as in the other case studies we observe uneven distribution in the number of original annotated genes; see figure  <dig>  to assess the degree of unevenness we calculated the mean absolute difference in counts coming from two neighboring strains, where strains are ordered in decreasing order of the size of their genomes. it is  <dig> for the original annotation curve vs.  <dig> for the curve constructed after the closure operation, which further drops to  <dig> after post-processing removal of multigenes shorter than  <dig> nucleotides. this inconsistency was probably caused by different gene-finding methodologies applied by different labs. curves like those presented in figure  <dig> allow us also to estimate which labs were more conservative and which were more liberal when calling a given orf a gene. for example, we observe a big peak in the number of original annotated genes for the strain nctc <dig>  suggesting that this is perhaps the case of a more liberal annotation. indeed, we investigated the number of connected components with multigenes present in all strains but have original annotations in only one strain. it turned out that there are only  <dig> strains that contribute at least one such connected component, of which the strain nctc <dig> contributes the highest number , with the second strain being usa <dig> tch <dig> . all other strains contributed less than  <dig> such components. an example of a strain with a rather conservative annotation is usa <dig> fpr <dig>  as can be clearly seen from a dip of the curve in figure  <dig> 

it is rather expected that most of the inconsistencies concern short genes, leading to a sudden increase in the number of short multigenes after the closure procedure; see figure  <dig>  therefore, it is interesting to investigate the cases where new long multigenes are predicted after the closure. there are in total  <dig> connected components with multigenes of length at least  <dig> nucleotides which were originally annotated in less than half of the strains. two of them have multigenes in all  <dig> strains with only one originally annotated element. more precisely these two connected components were contributed by genes saouhsc_ <dig> and saouhsc_ <dig> annotated in nctc <dig>  both these genes are overlapped by genes which have original annotations in all remaining strains, which suggests that these two genes were perhaps incorrectly annotated.

we also checked the structure of annotations for highly overlapping multigenes as another source of possible inconsistencies in genome annotations. for each strain we searched for pairs of highly overlapping multigenes  belonging to core anchors . here, we define a pair of multigenes as highly overlapping when the length of the overlap is at least 50% of the length of the shorter multigene in the pair. the number of identified pairs of multigenes in one strain varies from  <dig> to  <dig>  depending on the strain. as it can be expected, strains with more liberal annotations have higher number of annotated overlapping multigene pairs. in particular, nctc <dig> has  <dig> pairs of multigenes where both multigenes in the pair have at least one original annotated element; st <dig> has  <dig> such pairs; and ed <dig> has  <dig>  on the other hand, rf <dig>  usa <dig> fpr <dig>  newman, n <dig> and  <dig> other strains do not have any such highly overlapping pair of annotated multigenes.

escherichia coli case study
escherichia coli is the most well-studied prokaryotic organism and has been used in numerous research studies as a model organism. the strain k- <dig> mg <dig> became the first fully sequenced e. coli genome in  <dig>  <cit> .

we perform the analysis on e. coli to test scalability of camber and check stability of the results on a large dataset. in our case study, we use genome sequences and annotations of  <dig> fully sequenced strains deposited in ncbi. at the time of writing, these were the only available e. coli strains with “completed” status. table  <dig> presents details of the strains.

details for input strains for the e. coli case study. the first number in column called ’# of genes’ corresponds to the number of annotated genes, the second  corresponds to the number of genes excluded in the study due to unusual start or stop codons or sequence length not divisible by three.

we have also analyzed the distribution of sizes of the newly predicted multigenes. figure  <dig> presents these distributions for all e. coli strains taken together. the striking feature is that most of the newly predicted multigenes are pretty short, around  <dig> nucleotides. of course each such newly predicted multigene must have a witness coming from an original annotation in another strain. this distribution suggests that annotations of short genes may be a possible source of annotation errors. it also suggests one should remove very short multigenes from global considerations. the distribution after removal is flatter, resembling closer to the distribution for original annotated genes, as shown in figure  <dig> 

it is also interesting to investigate which strains had the most liberal annotations of genes. this can be seen by considering connected components which have an element in each strain, but only one gene in such a component has original annotation. such a situation suggests that the lab which was annotating this strain annotated the orf as a gene, while other labs did not, even though the corresponding orf was present in genomes that the other labs were working on. the top  <dig> most liberal annotations were obtained for cft <dig> , e24377a , o157-h <dig> ec <dig> , uti <dig> , and iai <dig> . for the rest of the strains, the number of such components was smaller than  <dig>  in total, there were  <dig> strains of e. coli which contributed components described above. adopting a similar approach as in the s. aureus case study we performed the analysis of annotations for highly overlapping multigenes viewed as another source of inconsistencies in genome annotations. in the case of e. coli strains, the number of highly overlapping pairs of multigenes varies in strains from  <dig> to  <dig> 

again, strains with local maxima on the curve of annotated genes  tend to have a higher number of pairs of highly overlapping multigenes with both multigenes annotated. in particular, cft <dig> has  <dig>  uti <dig> has  <dig>  and e24377a has  <dig>  on the other hand, apeco <dig> has only one such pair.

even though there are known cases of functional genes with untypical start codons, we decided to restrict our attention to the three typical start codons , hoping that it does not influence our results in a substantial way. however, it is interesting to follow the fate of genes which have untypical start codons in some strains. for example, the first fully sequenced e. coli strain  has annotated two protein-coding genes with untypical start codons. the first gene is infc, encoding if <dig> translation initiation factor. as discussed in  <cit> , this untypical start codon  may be in use for self-regulation. interestingly, using camber, we revealed that annotations for  <dig>  of the studied strains have annotated a shorter version of the gene  with the gtg start codon. the second gene, htga , is involved in heat shock response. the possible explanation for the untypical start codon  was discussed in  <cit> . using camber, we identified  <dig> strains which annotated this gene with a different tis. six of them have annotated  <dig> nucleotides as gene length and one  <dig>  in both cases, gtg was selected as the start codon. it is possible that some other start codons may also be used in e. coli <cit> .

in this case study the maximal number of tis in a multigene is 9; see table  <dig> for more details. interestingly, it is less than for s. aureus — the medium-size case study; see table  <dig>  table  <dig> presents statistics of the refinement procedure. after the closure procedure we obtained  <dig> non-anchors, of which we were able to split  <dig> using the refinement procedure,  <dig> of them we resolved completely into anchors. the refinement procedure produced only two new anchors with multigenes in all strains. most of the connected components obtained were small, in particular, the number of orphans doubled; see figure  <dig> 

see additional file  <dig> for detailed summary of the case study results.

core genome vs. pangenome
finally, we computed core genome and pangenome for the family of e. coli strains using our concept of a multigene and compared the result to the core genome and pangenome computed along the lines described in  <cit> . the latter paper considered  <dig> strains, many of them not having the sequencing status of “completed”. our set of strains is not a subset of the  <dig> strains mentioned above since there were some newly published strains . for this reason, we had to repeat the computations as described in  <cit>  for our set of strains.

as in  <cit>  we call two genes homologous if the percent of identity is at least 50% covering at least 50% of the longer gene. we order all strains with respect to decreasing size of their genomes. we start with the strain having the largest genome, initializing both the pangenome and the core genome equal to the set of all genes of that strain. in the n-th step, we put a gene of the n-th strain into the pangenome if it is not homologous to any of the genes of the previously considered strains. we also remove a gene from the core genome when it not homologous to any of the genes of the n-th strain.

we run two experiments on our set of strains: one which relies on the original gene annotations, as it was done in  <cit> , and another one which relies on previously pre-computed multigenes. figure  <dig> shows the dynamics of change in gene numbers both for pangenome and core genome. it shows that as the number of strains increases both methods asymptotically converge to a pangenome size of around  <dig>  <dig> genes. this suggests that the notion of a pangenome is quite robust when considering a large number of strains. on the other hand, there is a consistent difference between sizes of the core genome computed for the original annotations vs. pre-computed multigenes. for the latter method the core genome is substantially larger than for the former, resulting in an increase of the percentage with respect to pangenome from 18% to 25%. the analogous percentage for the  <dig> strains considered in  <cit>  was reported in that paper as only 6%, but the computation was relying on original annotations.

we also performed a similar analysis on m. tuberculosis and s. aureus strain families. figures  <dig> and  <dig> present results for m. tuberculosis and s. aureus respectively. the conclusions are similar as for e. coli. the size of pangenome computed using both methods converges, as the number of considered strains increases. on the other hand size of the core genome shows a consistent difference for both methods. as a result the proportion of the size of core genome with respect to the pangenome substantially depends on the chosen method, yielding higher score for the method based on pre-computed multigenes. the increase is from 42% to 52% for s. aureus and from 88% to 96% for m. tuberculosis.

CONCLUSIONS
as the number of sequenced genomes of closely related bacterial strains grows, there is a need to join and consolidate different annotations of genomes. it turns out that annotations of related strains are often inconsistent in declaring translation initiation sites  for the corresponding homologous genes. they also sometimes miss a gene in a segment which sequence-wise is very similar to a segment in the genome of another species which is declared as a gene. we propose in this paper a methodology which consists in collecting all possible different tiss, as well as genes which are present sequence-wise in a strain but whose annotation is missing. we believe this is the right approach toward correcting annotations.

to achieve this goal we constructed a consolidation graph which is based on the concept called here a multigene. multigene is an entity which combines all different tiss derived from sequence comparisons with genes annotated in other strains, or genes which were already established as multigenes. the transitive closure of this operation on all genomes of interest gives the space of multigenes. multigenes serve as nodes of the consolidation graph. each tis in a multigene gives rise to a gene which we called an element of the multigene. all elements of a given multigene share the same stop codon. each multigene with more than one element can be viewed as a task of deciding on the right tis. such a decision may have to involve some wet lab experiments or consideration of ests or 5’ cdnas  <cit> . this issue is not discussed in the present paper. so conceptually a multigene corresponds to a gene in which a tis is yet to be determined .

why does genome alignment not give similar results as the consolidation graph? the main reason is that in genome alignment one works with sequences which are fragments of genomes without paying any attention to functional genetic elements. in this way one discovers genomic areas of high similarity. even though postprocessing is often performed, by considering functional genomic elements and the homology relationship between genes or revised genes, gene annotation is not always correctly reconstructed. moreover, pairwise genome alignment approaches may also miss homologous fragments that can only be linked by intermediate sequences  <cit> . in contrast, in the consolidation graph we start with annotated genes and close up iteratively with the sequences which come out as significant blast hits to the queries already obtained in this analysis. there is a caveat to this iteration process however. in particular, when the input contains a conserved genomic region that is incorrectly annotated as a gene in one strain, camber may fish out homologous regions from other strains and propagate the incorrect gene structure annotation to them. connected components of the consolidation graph naturally define sets of multigenes which might be called multigene families. this concept of a multigene family is rather new, since in the multigene family construction we did not rely exclusively on given annotations. it turns out that these multigene families can be used to reconstruct a one-to-one homology relation for most of the genes. this procedure we call refinement. for this we start off with families which consist of at most one multigene from each strain. these we called anchors. then we extend the one-to-one homology relation by considering a genome position of genes, which were not yet related by the one-to-one relationship, with respect to the anchors. this method leaves unresolved only very few small families which presumably should be further curated manually. the one-to-one relationship can be used, among other things, in deciding which multiple alignments should be considered for detection of possible mutations, or even detection of possible sequencing errors.

the methodology above was illustrated with three case studies on  <dig> mycobacterium tuberculosis,  <dig> staphylococcus aureus and  <dig> escherichia coli strains. it is evident from the results presented in this paper that genome annotations done in different labs were not congruent to each other. after performing the consolidation, variance in the total gene count is much smaller than before, suggesting that the revised annotations could lead to a more coherent view of functional elements in various strains.

analyzing camber results, we find out that most of the inconsistencies are related to short genes. moreover, we find huge disagreement in annotations of highly overlapping orf’s, located in different reading frames . comparing annotations of pairs of highly overlapping multigenes belonging to core anchors, we found many inconsistencies in them. for example, the s. aureus strain nctc <dig> has originally annotated both highly overlapping multigenes in  <dig> such pairs, whereas  <dig> out of  <dig> strains have no such a pair at all. this observation suggests that an analysis of overlapping genes should use annotations with caution. the issue of possibly missing annotations in the case of overlapping genes was previously mentioned in  <cit> .

the m. tuberculosis case study showed that camber can also be applied to completely unannotated genomes, yielding an initial annotation of a newly sequenced genome. this case may be illustrated with strain kzn v <dig>  presumably due to a shift in annotation coordinates most genes of this strain have clearly incorrect annotations . for this reason we have discarded the originally published annotation for this strain and run camber on the remaining annotated strains plus unannotated kzn v <dig>  as can be seen in table  <dig> we were able to retrieve annotations for kzn v <dig> which look quite similar in terms of statistics as annotations for the other strains.

we computed the core genome and pangenome for m. tuberculosis, s. aureus and e. coli strain families using two approaches: one that relies on originally annotated genes  and another which uses our notion of a multigene. interestingly, both methods give similar results for pangenome, but they significantly differ on the core genome, with the latter method producing larger result. both these observations hold true for all three case studies. the proportion of the core genome size to the pangenome size increases from 18% to 25% for e. coli, from 42% to 52%; for s. aureus, and from 88% to 96% for m. tuberculosis, when switching from the former to the latter method. we suggest that the method based on pre-computed multigenes, as it is done by camber, gives a more reliable estimate of the core genome. however, it is probably the case that the number of strains in this study of m. tuberculosis and s. aureus is too small to correctly approximate the proportions, so we expect that the actual proportions will turn smaller.

this experiment showed also the good scalability of camber. we ran our largest case study on  <dig> e. coli strains on a cluster of  <dig> computer nodes using sun grid engine technology to spread the computations. most time consuming were blast computations, which took around two days. we also found that it took around  <dig> hours to compute the closure and the consolidation graph assuming precomputed blasts. in the e. coli case study computations of the refinement took around  <dig> hour. we also ran the s. aureus case study on the same cluster. it took around  <dig> hours to compute the closure assuming precomputed blasts, and around  <dig> hour to compute the refinement. however, we did the case study on m. tuberculosis—which is much smaller—using a single computer with  <dig> cores,  <dig> mhz,  <dig> gb ram. it took about  <dig> hours to compute the consolidation graph  and only several minutes to perform the refinement procedure.

all the above statistics for the computational experiments suggest that camber may be a useful utility in comparing and revising annotations of closely related bacterial genomes.

input data, software used in the paper , and detailed xls files with results of the case study experiments are available at http://bioputer.mimuw.edu.pl/camber.

competing interests
the authors declare that they have no competing interests.

authors contributions
all authors contributed to design of the method, analysis of results and writing of the manuscript. mw wrote software and performed experiments. all authors read and approved the final manuscript.

supplementary material
additional file 1
summary of the m. tuberculosis case study results an excel file containing the summary of camber results  for the m. tuberculosis case study.

click here for file

 additional file 2
summary of the s. aureus case study results an excel file containing the summary of camber results  for the s. aureus case study.

click here for file

 additional file 3
summary of the e. coli case study results an excel file containing the summary of camber results  for the e. coli case study.

click here for file

 acknowledgments
this work is partially supported by polish ministry of science and higher education grant no. n n <dig>  <dig> and singapore ministry of education tier- <dig> grant moe2009-t2-2- <dig> 

this article has been published as part of bmc genomics volume  <dig> supplement  <dig>  2011: selected articles from the ieee international conference on bioinformatics and biomedicine  <dig>  the full contents of the supplement are available online at http://www.biomedcentral.com/1471-2164/12?issue=s <dig> 
