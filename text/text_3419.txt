BACKGROUND
microbial genomes at the national center for biotechnology information  represent a large collection of more than  <dig>  assemblies from more than  <dig>  species, with almost 40m unique proteins  <cit> . protein clustering is used to construct meaningful and stable groups of similar proteins to be analyzed and annotated, and serve as targets for efficient searching. there are several complexities associated with the data: the genomes in the dataset have different levels of sequence and assembly quality and large variation in sampling density; certain sets of related genomes, usually human pathogens, are densely sampled while other bacteria are less represented and sometimes sampled very coarsely . another factor contributing to the complexity of the analysis is a large variation in frequencies with which proteins from different families appear in genomes: “core proteins” occur at one end of the spectrum, unique proteins at another end, and “accessory proteins” in between . in order to extract useful information from these complex data, the analysis needs to be performed at multiple levels of phylogenomic resolution and protein similarity, and an adequate sampling strategies.

protein clusters are groups of similar  proteins that most likely share the same or similar function. clustering procedure must possess a certain degree of stability and robustness and allow compression of information in comparison to the non-clustered representation. it is desirable that clusters consist of orthologs , while paralogs  stay in different clusters  <cit> . however, the ortholog-paralog distinction does not completely reflect the complexity of group relationships of homologous genes  <cit> . we make an effort to separate paralogs at the level of species-level genome groups  using genomic context . since most microbial genomes at ncbi are draft genomes, local genomic context is utilized  <cit> . at the global level, we do not make a distinction between orthologous and paralogous proteins.

here we present an efficient approach utilizing hierarchical clustering at several resolution levels. while large-scale hierarchical protein clustering is well-described in the literature , and methods for redundancy-elimination have been described by several authors , brute-force hierarchical clustering, even with a step of redundancy-elimination, becomes more expensive and less robust with the growth in the amount and complexity of data.

we construct protein clusters at three levels. first, in-clade protein clusters - tight protein clusters in groups of closely-related genomes  are built. then representaive proteins  of conservative in-clade clusters are organized into seed global clusters. clustroids of inclade clusters were selected as protein sequences providing minimal weighted average distance to other protein sequences in the clusters, where weight of each protein sequence was a number of coding regions in non-clonal genomes in the cluster encoding it. finally, global protein clusters are built around the seed clusters. in-clade clustering with subsequent selection of clustroids and organizing them into seed global clusters provides a robust representation and high rate of compression in extended seed clusters. however, the proteins that are outside of the extended seed clustering set do not group together well. processing of these proteins requires significant computational resources and results in a large number of questionable clusters. such a pervasive behavior known as the core-periphery problem has been observed in many other areas of network analysis  where peripheral objects behaved very different from ones with high degree of centrality. we propose filtering strategies that allow limiting the protein set included in global clustering.

methods
microbial genomes with full and nearly-full genome representation and good quality are organized in groups of closely-related genomes  constructed using ribosomal protein markers  <cit> , non-redundant representative genomes are selected in the groups of near-clonal genomes in each clade using the complete-linkage hierarchical clustering algorithm based on pairwise genomic blast with  <dig> % identity cut-off  clade  reference or representative;  included in kegg database;  an annotated genome).

we extended our basic clustering procedure described in  <cit> . the similarity of proteins is determined from the aggregated blast hits obtained by blastp  <cit>  with e-value 10− <dig>  the sequences are considered related if the minimum coverage and minimum similarity conditions are satisfied. we required at least  <dig> % similarity with  <dig> % coverage in in-clade clustering and at least  <dig> % similarity with  <dig> % coverage in all global clustering steps.

in-clade clusters are constructed using a combined approach that takes into account both sequence similarity and local genome context  <cit> . first, sequence similarity clusters are calculated. then, the genomic neighborhoods of proteins in each sequence-similarity cluster are analyzed using a moving window of 5-protein-length. consequently, sub-clusters providing at least  <dig> out of  <dig> protein-similarity-cluster matches are selected  in salmonella is shown in fig. 1). representaive proteins of inclade clusters  were selected as protein sequences providing minimal weighted average distance to other protein sequences in the clusters, where weight of each protein sequence was a number of coding regions in non-clonal genomes in the cluster encoding it.
fig.  <dig> local genomic neighborhood of the protein cluster containing the gtp-binding protein lepa  in salmonella



two algorithms were considered for building global clusters around the seed clusters. the modified hierarchical clustering algorithm utilized our basic procedure with the following modification: when two sub-clusters, one containing seed proteins and another one not, are merged, the latter is not used when new distances are determined. the second procedure allowed extension of the seed clusters by adding non-seed proteins to the nearest seed cluster if they are compatible with seed clustroids there.

uclust and usearch  <cit>  were used at different proceeding stages for redundancy elimination. in all cases we use values wordlength  <dig>  slots  <dig>  maxrejects  <dig>  maxaccepts  <dig>  the coverage and identity thresholds are selected differently for different steps:  representatives from groups of near-identical sequences are selected before in-clade clustering is performed using coverage  <dig> % with identity  <dig> %;  tight groups of proteins are formed for global clustering using coverage  <dig> % and identity  <dig> % approximately corresponding to parameters used in in-clade clustering.  filtering which allows to find distant neighbors of the seed proteins, is performed using coverage  <dig> % with identity as low as  <dig> % .

many processing steps, such as computing blast hits, are naturally parallel. however, parallelization of clustering algorithms is a challenging problem which has attracted attention of computer scientists for years . while the single-linkage clustering algorithm can be run in parallel on a variety of architectures, other clustering algorithms require intensive communication between parallel processes. an alternative to an intensive exchange of data between the parallel processes is an iterative approach with an exchange of data between iterations  <cit> . however, in some cases, it is possible to partition data using a single-linkage-type algorithm and then concurrently perform clustering in each partition using a serial algorithm. although the latter approach naturally produces a workload which is imbalanced to a certain degree, it does not require communication between the processes and is well-suited for large weakly-coupled distributed computer systems  <cit>  as long as the load imbalance is tolerable. the hardware available at ncbi , requires coarse-grained parallelization.

in our case, dataset reductions through selection of representative genomes in near-clonal groups and representative proteins in clade-level protein clusters allow to use the latter simplified approach, with differences in the partition sizes and resulting load balance to be acceptable. our parallel clustering procedure is performed in three stages, each allowing concurrent processing:  the dataset is partitioned in disjoint sets using a parallel implementation based on a disjoint-set forest with union-by-rank heuristics  <cit> ;  data are redistributed according to the partitioning;  clustering is performed in each partition.

RESULTS
since ncbi production databases are updated in real time, the clustering analysis was performed on a snapshot created in november  <dig>  prior to protein clustering, the groups of closely-related genomes  were constructed using ribosomal protein markers  <cit>  . within each clade, genomes are organized in tight  groups calculated using whole-genome blast alignment, and a non-redundant representative is selected in each tight genome group . table  <dig> shows the statistics for the most abundant clades .
fig.  <dig> parts of the clade tree around salmonella, bacillus and streptococcus



the dataset contains  <dig>  annotated assemblies, with  <dig>  of them selected as representatives in near-clonal groups. the representative assemblies contain  <dig> , <dig> protein-coding regions encoding  <dig> , <dig> non-identical protein sequences, among them  <dig> , <dig> marked as complete.

protein clusters are built at three levels. first, tight protein clusters  are built in large clades containing  <dig> or more non-clonal genomes using a combined approach that takes into account both sequence similarity and local genome context, and representative proteins  are selected in in-clade clusters. then clustroids of conservative in-clade clusters are organized into medium-size  seed global clusters, and global protein clusters are built around the seed clusters. the details of the algorithms are described in methods.

in-clade clusters were built in  <dig> abundant clades containing  <dig> or more non-clonal assemblies. the results are summarized in table  <dig> 


as a result of seed global clustering,  <dig>  seed clusters have been produced. they represent complete proteins encoded by  <dig> , <dig> protein coding regions -  <dig> % in-clade coding regions. with the seed clusters we observe a substantial 10-fold level of data compression .

the remaining proteins come either from non-conservative  or rapidly evolving proteins, or from rare genomes. the input dataset for extended global clustering contains  <dig> , <dig> non-identical protein sequences:  <dig>  sequences are clustroids of conservative protein clusters and the rest contains clustroids of non-conservative in-clade clusters and sequences coming from the outside of the large clades. straightforward global clustering by the modified hierarchical clustering algorithm required calculating pairwise  <dig> ,537× <dig> , <dig> blast hits and produced  <dig> , <dig> global clusters .

since the critical factor in processing is the calculation of blast hits, we first looked for ways to further decrease the number of sequences to be processed by selecting representatives in tight groups of sequences using uclust  <cit>  . as a result,  <dig> , <dig> protein sequences were directly assigned the clustroids in the seed clusters, while remaining  <dig> , <dig> sequences were grouped by uclust in tight groups allowing selection of  <dig> , <dig> representatives. the described reduction allows to decrease the blast hit calculation from  <dig> ,537× <dig> , <dig> to  <dig> ,991× <dig> , <dig> 

the effectiveness of processing can be tremendously increased, and the amount of work dramatically reduced, if we limit ourselves to extending the seed clusters. in this case, we could use an approximate procedure when non-seed proteins are added to the nearest seed cluster if they are compatible with seed clustroids there. since non-seed proteins are compared only to seed proteins  in the extension procedure, only blast hits of  <dig> , <dig> representatives to  <dig>  seed sequences need to be computed. finally, the extension procedure could be accelerated by the following filtering. uclust search procedure with very liberal parameters  is used to find a subset of  <dig> , <dig> proteins containing distant neighbors of the seeds. this subset contains  <dig> , <dig> proteins. when we compared this subset to the elements of extended clusters, we found that  <dig>  % were assigned, with a loss rate of  <dig>  %. as a result, we need to calculate blast hits of only  <dig> , <dig> representatives to  <dig>  seed sequences, providing 2-fold additional acceleration in comparison to the extension procedure without filtering.

by using  <dig> % similarity with  <dig> % coverage, we considered well-established medium-size global clusters that could be further aggregated or neighbor relationships between them could be established  seed clusters).

discussion
we proposed a method to reduce redundancy in the  <dig> million prokaryotic proteins in the ncbi microbial genomes database. protein clusters were created at the level of clades  and the most conserved clusters were merged between the clades. highly conserved proteins, for example those involved in cellular machinery, are conserved across taxa. other proteins are highly conserved within well-studied large clades, for example human pathogens with extensive sequence data. this method has allowed a substantial reduction in redundancy within the microbial protein database.

the developed multilevel approach utilizing the in-clade clustering procedure, subsequent selection of clustroids, and organizing them into seed global clusters provides a robust representation and high rate of compression. seed protein clusters are efficiently extended by adding related proteins. extended seed clusters include a significant part of the data and represent all major known cell machinery. medium-size extended seed clusters could be either organized in wider clusters  or linked together if they are related.

the remaining part of the protein dataset, known in the network theory as network periphery, comes from either non-conservative  or rapidly evolving proteins, or from rare genomes, or resulting from low-quality annotations, requires significant computational resources to be processed in the clustering procedure, and results in a large number of questionable clusters. we propose filtering strategies limiting the protein dataset included in global clustering. the excluded proteins can be related as neighbors to the core clustering data through the links.

CONCLUSIONS
the proposed method allows the analysis the relevant data at different levels of details and eliminating data redundancy while keeping biologically interesting variations.

additional file
additional file  <dig> 
table s <dig>  shows per-clade statistics for  <dig> abundant clades; number of proteins represents non-redundant set of non-identical protein sequences. 



this research was supported by the intramural research program of the national library of medicine, nih. the work has been presented at the 11th international symposium on bioinformatics research and applications , norfolk, usa, june 7- <dig>   <dig> and the abstract has been published in the conference proceedings  <cit> .

the authors are thankful to david j. lipman, james ostell, eugene koonin, yuri wolf, teresa przytycka, joshua cherry, vyacheslav chetvernin, kathleen o’neill, alexander souvorov and jan hoinka for productive discussions, and to igor tolstoy and vyacheslav brover for database support.

declaration
this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>   <dig>  selected articles from the 11th international symposium on bioinformatics research and applications : bioinformatics. the full contents of the supplement are available online https://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement- <dig> 

funding
the publication funding came from the intramural research program of the national library of medicine, nih.

availability of data and materials
genome and protein data used in this study are publicly available at ncbi. per-clade statistics for abundant clades is provided in additional file  <dig>  any other information is available from ncbi upon request.

authors’ contributions
tat and lz proposed the approach. lz developed protein clustering algorithms and software. bf developed the algorithm and software for selecting representative genomes in the groups of clonal genomes. sc performed protein cluster curation and quality-control. all authors worked on the manuscript. all authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
