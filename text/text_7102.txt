BACKGROUND
a protein folds into a state of minimum free energy called its native state or tertiary structure. as presented in  <cit> , this folded tertiary structure can be predicted from the sequence of component amino acids known as the primary structure. knowledge of final 3d structure of proteins helps to design drugs and detect structural differences due to misfolding; therefore, crucial to pharmacology and medical science. the general principle by which a natural protein folds and efficient prediction of its tertiary structure remain the most challenging problems in computational biology.

this mystery has stimulated researchers to protein folding simulations by using reliable and faster computational techniques. various simplified models have been proposed in terms of lattice structure and energy function to ease the computational complexity of this hard problem. the prevailing strategy to solve protein folding problem has been to determine a placement of the amino acids in 3d space that results in the minimum energy structure. energy function has been modeled that captures the idea of assigning energy between pairs of amino acids placed within a certain distance. even with the simplest of hydrophobic-polar  energy function and discrete rectangular lattice model , the problem is shown np-complete  <cit> . the problem is also shown np-hard for hp-like models on generalized lattices  <cit> .

effectively the protein folding problem reduces to an optimization problem where the energy function has to be minimized under a set of constraints. consequently, one can resort to constraint programming  and stochastic local search  algorithms to tackle this problem. both techniques are commonly used to approach hard optimization problems.

local search methods generate solutions in polynomial time by doing a clever sampling in the search space of exponential size. the major drawback is that it can not guarantee optimal solutions in polynomial time since the search space is randomly explored and it often tends to get stuck in local optima. previous approaches using local search methods for protein folding simulation include tabu search  <cit> , simulated annealing  <cit>  and population-based local search method  <cit> . the main advantage of using local search methods is that they can quickly converge to better quality solutions, if not optimal, when efficient neighbourhood functions are employed.

nevertheless, the uncertainty of stochastic search algorithms leads researchers to model and solve the problem using constraint programming. yue and dill  <cit>  first presented a solution algorithm, called the constraint-based hydrophobic core construction  method having faster runtime and claimed to give optimal solution. later, backofen & will  <cit>  made use of constraints over finite domains in both rectangular and face-centered cubic  lattice using hp energy function. a constraint-based protein structure prediction  tool was introduced, based on their method, which can predict the optimal structure of proteins having length up to  <dig> on fcc lattice in very short time  <cit> . nevertheless, their approach is computationally intractable for more elaborate energy functions such as a  <dig> amino acid pairwise interaction energy function  <cit> . a two-stage optimization approach was proposed later in  <cit>  which uses cpsp tool to provide initial structure for local search procedure on fcc lattice and elaborate energy function. the two-stage optimization approach was reported to outperform simulated annealing-based local search procedure alone.

a better application of cp technique to protein folding is to encode the problem directly under constraint programming model and to search for the minimum energy structure. palu et al.  <cit>  showed heuristic approaches to protein folding problem using constraint logic programming over finite domains ). despite satisfactory performances on small/medium sized instances, it was proved ineffective in scaling to larger instances of the problem  <cit> . later, they developed a solver that can model the protein folding as a constraint satisfaction problem  on 3d lattices and produced acceptable quality solutions for larger proteins  <cit> . in general, cp techniques guarantee to provide optimal solutions if the problem is modeled correctly. but as the solution space grows exponentially according to the problem size, the exponentially-increasing execution time is always a huge concern.

in this paper we combine local search and constraint programming approaches aiming the expected outcome of better quality solutions in acceptable execution time. we introduce a protein folding simulation procedure on fcc lattice that employs a csp solver to generate neighbourhood states for a simulated annealing-based local search method. we use  <dig> amino acid pairwise interaction energy function introduced in  <cit> . the choice of the fcc lattice is motivated by the fact that it was shown to yield very good approximations of real protein structures  <cit> . also it does not suffer from the bipartiteness of the cubic lattice, which allows interactions only between amino acids of opposite parity in the sequence. the hybrid approach introduced in this paper, produces considerably better solutions than pure constraint programming approach within practically feasible time-limit. it also produces better solutions within comparable time than those produced by local search employing well-established neighbourhood function.

RESULTS
this section reports the results obtained from running a collection of experiments using hybrid approach, pure constraint programming approach, pure local search approach and two-stage optimization approach . preliminary tests are performed on  <dig> smaller proteins  to tune the various paramaeters. these parameters are then used to carry out the experiments on a larger set of proteins having length ranging from  <dig> to  <dig> including the learning set. the first column of each table contains official id of the protein assigned in the protein data bank   <cit> . since we completely omit the secondary structure information of the protein when solving the problem, these results are not comparable to those using secondary structure information . all of the experiments have been performed on an intel xeon cpu e <dig> at  <dig>  ghz with  <dig> gb memory. the operating system is linux centos and the compiler is gcc v. <dig> . <dig> with the expensive optimization flags enabled. since the selection of neighbourhood space is randomly guided in hybrid approach, different runs may lead to different solutions. so we executed  <dig> runs with the hybrid approach for each protein and report the results obtained on the best run. the number of iterations is set to  <dig> for each lsa run in hybrid approach.

hybrid approach and pure cp approach
for each protein we executed  <dig> runs with the pure cp approach, one with complete enumeration search and another with bounded block fail  heuristic search. in table  <dig>  we report the search time and the final  energy value reached for each protein and compare them with the results from hybrid approach. the second column  denotes the number of amino acids in the protein. the 'enumeration' column presents the best energy found using a complete exploration of search tree within the time limit. the 'bbf' column presents the same information using the bbf heuristic. note that, for bbf heuristic the block size is set to  <dig> and the number of allowed failures for each block is set to  <dig>  these parameters are explained in  <cit> . finally the 'hybrid' column shows the best energy found and the runtime after completing  <dig> iterations using hybrid approach.

                              enumeration
                              bbf heuristic
                              hybrid
the energy values found with the hybrid approach are significantly better than the ones found with the pure cp approach in much lesser time. it was observed from our experiment that the time required for pure cp search to find the next best solutions from the current best ones are quite large, because of the fact that the search space is too big to explore and the search diverges. even with the bbf heuristic, the performance is discouraging. on the other hand, we observed regular improvements in energy values during the sa run in hybrid approach.

hybrid approach and local search
for each protein sequence we performed  <dig> independent simulated annealing-based local search runs starting with random initial structures. then we performed  <dig> independent runs for the two-stage optimization approach outlined in  <cit> . the number of iterations for the local search stages were set to  <dig> , <dig>  we used pull move sets  <cit>  as neighbourhood functions for the local search, which were shown to be very efficient for protein folding simulation  <cit> . in table  <dig>  we compare search time and best energy value results from various approaches. the 'lsa' column presents the best energy value found using pure logarithmic simulated annealing procedure. the 'two-stage' and 'hybrid' columns present the best energy value and the time to reach this state using two-stage optimization approach and hybrid approach respectively. note that, 'hybrid-time'column in table  <dig> reports the minimum runtime to reach the best energy value, whereas 'hybrid-time'column in table  <dig> reports the total runtime to complete  <dig> iterations.

                              lsa
                              two-stage
                              hybrid
one can observe that the energy values found with the two-stage optimization are generally better than pure local search whereas hybrid approach gives better energy values than two-stage optimization. it was reported in  <cit>  that two-stage optimization generally reaches better solutions in fewer number of iterations than local search alone. therefore we compared the runtime of hybrid approach with two-stage optimization only. we can see that, hybrid approach produces better final energy values than two-stage optimization but takes longer time to do so. the reason is explained in methods section. still the runtime of hybrid approach is within acceptable range given the quality of the solution it generates.

CONCLUSIONS
the purpose of our present work was to demonstrate that protein folding problem on fcc lattice with elaborate energy functions can be approached by hybrid use of constraint programming and local search; and by making the best use of both techniques, hybrid approach can outperform the only use of constraint programming and local search, in terms of quality of solutions and execution time. we first modeled a basic protein folding problem on fcc lattice with  <dig> amino acids pairwise interaction energy function into the constraint programming framework of cola solver. then we integrated this cp model with a simulated annealing-based local search in such a way that the cola solver can provide random neighbourhood states. we kept the modeling as simple as possible by using an easy definition of contact distance and allowing all possible angles on fcc lattice. our tests confirmed that the hybridization of these techniques generates siginificantly better solution with better execution time than the pure constraint programming model. our tests also showed that hybrid approach results in better solution compared to simulated annealing with pull move set but it takes longer execution time.

we need to work on refining the parameters reported in table  <dig> that control the search space and execution time. it was found out during the preliminary tests that only use of the shorter subchain length  quickly leads to solutions slightly worse than those reported in table  <dig>  but the process then got stuck into local minima and longer l had to be chosen in order to escape from there increasing the runtime considerably. we can look for better escape strategies that will not contribute significantly to the execution time.


                           l
                           b
nevertheless, based on the encouraging results we obtained from simple modeling, we can conclude that hybrid approach would be a good idea to attack the protein folding problem for more realistic models. tertiary structures often contain local 3d rigid conformations known as secondary structure . we can use these secondary structure information in order to predict more realistic conformations since the contact based energy function is not sufficient enough to reproduce local arrangements such as helices and/or sheets. using secondary structure information, obtained through neural network prediction, not only helps to predict realistic tertiary structures but also improves the execution time significantly by over-constraining the problem. we can also include additional constraints derived from known chemical and physical properties  <cit>  to speed-up execution. as future work, we plan to incorporate these constraints to our hybrid approach aiming to get four distinct targets. firstly, we will get more realistic final conformations. secondly, we will get it in lesser execution time. thirdly, we will predict larger instances of proteins. finally, we can compare the effectiveness of our approach over existing cola implemetation of  <cit> 

last but not least, the idea of modeling a problem in constraint programming framework and then using it in a local search algorithm as neighbourhood function can be an interesting approach to solve other hard combinatorial optimization problems. almost all optimization problems in biology are np-hard and many real problems have beautiful natural combinatorial formulations. the application of hybrid approach can be useful in this particular context.

