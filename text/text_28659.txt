BACKGROUND
many researchers from a wide range of biological and computational disciplines have a recurrent need for depicting trees of various forms, e.g. phylogenies. often, the tree is represented as a text string or file in the parenthesized newick format. this is true for phylogenies produced by software such as the phylip package  <cit>  or clustalw  <cit> . for example, when performing a multiple alignment of sequences with clustalw, apart from the alignment itself a dendrogram file is produced with extension .dnd, and this file contains a newick representation of the phylogeny inferred from aligning the sequences.

from the rather incomprehensible textual description of a newick tree, humans can learn little about the overall tree structure or of the relationship between particular nodes:

: <dig> ): <dig> ): <dig> ): <dig> ,mouse: <dig> );

hence, for full comprehension of the tree structure, researchers will need a graphical image of the tree to benefit from the information it encodes. this paper presents phy·fi, a new tool for drawing such newick trees. the strengths of phy·fi are these:

• it is web based; i.e., no need to download and install anything. it works from any computer connected to the internet, and the user has the tree in seconds, displayed in the browser.

• the tree can be manipulated directly in the browser: nodes  can be collapsed and expanded.

• the image can be downloaded in the most common formats. .

• the user-interface is self-explanatory.

• the user has full color control over nodes, labels, etc.

• several other graphical parameters can be modified by the user.

• the user can redraw the image and immediately observe the changes after tuning the parameters.

there is a wealth of existing software programs which can draw phylogenies. some of these programs are full phylogenetic inference packages which include the facility to draw trees, while others are developed specifically for tree drawing. before going into depth with phy·fi, i will give a brief overview.

most existing programs are for download and local installation only. some are very elaborate and allow user post-processing through interaction and reshaping of the tree via mouse clicks in the produced image; others are more straight-forward and have fewer degrees of freedom. sophisticated programs for download and local installation include treegraph  <cit> , bosque  <cit> , atv  <cit> , treeview  <cit> , njplot  <cit> , mega  <cit> , mesquite  <cit> , phylodraw  <cit> , treeillustrator  <cit>  and the commercial programs paup  <cit> , macclade  <cit>  and treeme  <cit> . arbor 3d  <cit>  and walrus  <cit>  are tools for visualizing and interacting with trees in three dimensions. a simpler program, also for download, is drawtree  <cit>  by t. mailund.

the elaborate program treewiz  <cit>  can handle huge trees with up to  <dig>  leaves and lets the user explore such trees by collapsing and expanding nodes interactively. there is an online version, too : in order to explore one's own trees rather than the given example trees, one must give read access to one's home directory to the program java applet  and create a new directory with a specific name which must hold the trees.

it is also possible to create phylogeny figures from within several programming environments such as the statistical computing programming language r  <cit> , the text processing system latex through g. savva's newick tree package  <cit> , and bioperl using the cladogram drawing module developed by g. valiente  <cit> .

for all of the above, one needs to at least do some downloading and installing – and in many cases one needs to write computer code – to draw a phylogeny. a few programs, however, do have a web interface and are as such directly comparable to phy·fi. phylodendron by d. g. gilbert  <cit>  presents the user with several choices of tree style and appearance as well as different formats for the output image. not all combinations of parameter settings seem to be fully implemented, though. the images are in black and white and have no branch length labels .

v. veeramachaneni has written a program with the name treedraw  <cit> . it presents a simple user interface, although one needs to manually type in a color encoding if one wants the leaves in the tree to be colored. the program can produce images in the ps, pdf and png formats, but again branch lengths have to be judged by visual inspection with the help of a ruler. the user has no control over the image size and cannot paste a newick string directly on the web page.

drawtree  <cit> , written by r. ree, also has a web interface where you can paste a newick string and create a black and white pdf or eps image with little control over the result.

j. felsenstein's phylip software  <cit>  also includes the web tool drawtree  <cit> . this program lets the user draw black and white images of trees in the ps format and numerous other printer-friendly formats; however, branch length labels seemingly cannot be added to the trees, and the resulting tree image is not immediately shown but has to be downloaded and viewed with some other appropriate application.

t-rex  <cit>  is an elaborate analysis program which offers sophisticated functionality in terms of, e.g., tree inference. when it comes to displaying trees, it offers several different graphical tree shapes, it allows limited control over the coloring of labels and branches , and per default it cleverly scales the image to fit the browser window. however, the user cannot upload a newick tree file but has to paste the string in a text field directly ; there is no control over font or font size; branches seem to be drawn with the same length even though in the newick string, all nodes must have given  lengths in order for the parser to work; and finally, not all correctly formatted newick strings seem to pass the parser.

lastly, phyloview  <cit>  is a web based visualization tool which can illustrate the potential differences between the deduced phylogeny of a protein sequence alignment and the taxonomic relationship of the species of the sequences. the user uploads a newick tree and can then decide any taxonomic partition for the species and choose a coloring. thus, the aim of the program is not merely displaying newick trees, and therefore no further control over the tree image is possible.

implementation
the web based program phy·fi presented here is an attempt to combine the tree drawing facilities of all these tools into one fast, easy-to-use web tool. on the very simple front page , the user either uploads a newick tree file or pastes a newick string directly , and after clicking the "draw" button, within a few seconds the user is presented with the resulting image. figure  <dig> shows the newick string quoted in the previous section as it may be illustrated by phy·fi.

the tree is drawn left-to-right with leaf nodes on the right, and such that no branches will cross. the image height is initially calculated from the number of leaves to ensure that the labels will be readable – for large trees, this leads to large images, and of course the user may choose to change the image height . the length of a branch is written directly beside it at an angle which can be set by the user; the user may also choose to instead indicate branch lengths by a rule  if the branch labels disturb the overall image. the branches, leaf nodes, internal nodes, node labels, branch labels, rule, and collapsed subtrees  all have their own colors which are set to pleasant, readable defaults, but which may be altered by the user. colors are chosen in a very intuitive way by clicking with the mouse in two color palettes indicating color hue/value and saturation. by the click of one button, the user may also use greyscale colors . figure  <dig> shows a screen shot of the color choice menu.

after the image is displayed, the user has the opportunity, on the same page, to modify several parameters . the first group of parameters concerns the image in general: image width and height , the font, and the download format . the second group of parameters concerns the nodes: the node size and the node label font size. the third group concerns the branches: branch thickness, whether and how branch lengths should be shown  and the angle in which branch labels are written, and the font size of branch labels. lastly, the user may choose a name which will be given to the next collapsed node; to collapse and rename a node rooting some subtree, the user types the name to be given to the node in the text field, presses the 'enter' key, and then clicks on the node directly in the image. this has been done in figure  <dig>  collapsed subtrees may be re-created  by clicking their root nodes again.

thus, if the image is initially not quite satisfactory, e.g. if some of the node labels appear too close to one another, or if some part of the tree is irrelevant for the user's specific purpose, or if the colors are not quite right, the user simply performs a few modifications by tuning parameters and collapsing nodes, and then clicks the "redraw" button. . after drawing the tree with the desired download format selected, the user clicks the 'download' button to download the image to his/her own computer.

RESULTS
phy·fi has been extensively tested on windows, linux, and mac platforms using firefox  <dig> , internet explorer  <dig> , netscape  <dig> , mozilla  <dig> . <dig>  and safari  <dig> . <dig>  trees with up to  <dig> nodes were uploaded . very large trees yield very large images initially, but the assumption is that the user in such cases intends to collapse parts of the tree in order to get an apprehensible figure out of it. to be able to pinpoint and click specific nodes to collapse them, the user needs to be able to read the labels, and so rather than use some smaller default image height, i have chosen to let the initial height be proportional to the number of leaves in the tree . the user can always decrease  the image height and width if he wishes, for instance after creating more empty space by collapsing the irrelevant parts of the tree. thus, a satisfactory result should always be reachable. hopefully, the collapse/expand feature may, in conjunction with the regular graphical parameters, relieve the user of any need for post-processing of the image in some other general graphics application.

from the phy·fi homepage, there is a direct hyperlink to a page describing the newick standard  <cit>  which the parser expects the input string to follow. according to this standard, internal nodes can be named. instead of providing string names for  nodes, the user may of course put bootstrap values. phy·fi does not distinguish between node names and bootstrap values; both are written next to the relevant node in the same color. thus, to avoid confusion, users should probably not upload input strings in which some nodes have bootstrap values and others have labels.

several programs, e.g.  <cit> , offer various tree drawing styles, such as cladograms and radial trees, rather than just one. phy·fi only displays trees in one style . in the next version, i plan to include several others depending on users' wishes.

CONCLUSIONS
phy·fi is purely a visualization tool. it has no tree inference capabilities; the user must obtain the newick string from somewhere else. with this tool i aim to provide other researchers with the possibility of obtaining a readable, aesthetically pleasing and customized tree image in the graphics format of their own choice, all in the matter of seconds or minutes. no download instructions or technical documentation pages stand between the user and the desired phylogeny figure; no extra plug-ins need be installed. the program is meant to be self-explanatory, yet still it presents enough control and interaction to meet most needs. thus, phy·fi is very well suited for quickly making a tree figure for, e.g., a paper, a presentation or teaching.

availability and requirements
project name: phy·fi

project home page: 

operating systems: platform independent.

programming language: python

license: phy·fi is free to all users. please cite this paper when using images produced by phy·fi in other publications.

abbreviations
image formats mentioned in the text:

ps: postscript

eps: encapsulated postscript

pdf: portable document format

png: portable network graphics

tif: tagged image file

gif: graphic interchange format

supplementary material
additional file 1
about phy·fi. a short description of phy·fi plus a few technical details not in the paper on how the trees are drawn.

click here for file

 acknowledgements
this work is funded by a grant from the danish research council for technology and production. i would like to thank my anonymous reviewers for their constructive comments on this and an earlier version of the paper, and the editor for the extra literature and reference suggestions.

figures and tables
