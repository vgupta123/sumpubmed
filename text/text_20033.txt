BACKGROUND
most proteins comprise structured and unstructured regions. it is important to identify these regions to meaningfully compare or analyze protein structures. the most commonly used similarity measure for three-dimensional structures are atomic root-mean-square deviation  values, which are computed for all or a subset of atoms in two or more structures after their optimal superposition, which is the one that minimizes the rmsd value  <cit> . for instance, nmr protein structures are generally represented by a bundle of conformers that have been calculated starting from different randomized initial conformations using identical input data, and it has been proposed to represent also crystallographic structures by an ensemble of conformations  <cit> . the precision of an nmr protein structure is measured by the average rmsd value between the individual conformers and their average coordinates, computed after superimposing the conformers onto the first one. both the superposition and the resulting rmsd values are strongly influenced by the choice of atoms that are included in the fit. including unstructured parts of a structure yields large rmsd values that may obscure the presence of well-defined structured regions of the protein. it is therefore crucial to identify the structured regions. a  choice can be made by visually inspecting the structures, but for reasons of consistency, reproducibility and efficiency an automated method is highly desirable. in this paper we present a new method for this purpose that has several advantages over existing approaches.

various methods have been proposed to identify well-defined regions of a protein on the basis of the atomic coordinates of an ensemble of structures, such as the bundle of conformers resulting from an nmr structure determination  <cit> . ordered regions can be identified by analyzing the local structure, for example by applying a cutoff on angular order parameters for the backbone torsion angles ϕ and ψ  <cit> . ordered regions found by these strictly local approaches cannot necessarily be superimposed simultaneously with a low rmsd value. other methods aim at finding the part of a protein structure that are sufficiently similar to each other within the ensemble. some algorithms rely on the distance variance matrix with elements dij = σ <dig>  where σ is the standard deviation of the distance between the atoms i and j, computed over all structures in the comparison  <cit> . small matrix elements indicate that the position of the corresponding groups of atoms is similar in all members of the structure bundle. another approach, implemented in the molecular graphics program molmol  <cit> , superimposes the structures with the current set of atoms , and then discards in each step the atoms from the residue with the largest global displacement, until either the rmsd falls below a maximally acceptable value or a minimal number of residues is reached. in the field of protein structure prediction  <cit> , two algorithms, lcs  and gdt , have been established for detecting regions of local and global structure similarities  <cit> . the lcs procedure finds the longest continuous segment of residues that can fit under a given rmsd cutoff. the gdt algorithm searches for the largest  set of residues that deviate by no more than a specified distance cutoff  <cit> . results are reported as the percentage of residues under a given distance cutoff. a popular measure is the "gdt total score", gdt_ts = / <dig>  where pd is the fraction of residues that can be superimposed under a distance cutoff of d Å, which reduces the dependence on the choice of the cutoff by averaging over four different distance cutoff values.

RESULTS
the cyrange algorithm
the cyrange algorithm  yields residue ranges for the superposition of protein structures with the same sequence. the algorithm has been designed  to find residue ranges that are suitable for the global superposition of protein domains ,  to provide simple residue ranges with no or only a small number of gaps,  to include as many residues as reasonably possible,  to be applicable without change to structure bundles of high and low precision,  to be applicable to multi-domain proteins ,  to handle symmetric multimers and protein complexes, and  to work with a single set of parameters for all proteins. cyrange requires as input the cartesian coordinates of two or more structures and consists of two main steps, domain identification and residue range determination for each domain.

domain identification
domain identification follows the approach used in the nmrcore  <cit>  and nmrclust  <cit>  algorithms. similar ideas have been used earlier  <cit> . dihedral angle order parameter values of torsion angles from all conformers are computed. a cutoff value is calculated from the order parameter list and applied to select the torsion angles that will be used to identify the "core atoms". the core atoms are located in locally well-defined regions of the structure bundle, and are therefore potentially involved in domains that can be superimposed with low rmsd. the variances of the intra-conformer distances between all core atoms are used to cluster the core atoms, which eventually yields the single or multiple domains present in the structure bundle.

angular order parameter calculation
dihedral angle order parameters  <cit>  are calculated from all rotatable dihedral angles . for a given torsion angle, the angular order parameter s with  <dig> ≤ s ≤  <dig> is given by  

where the sum runs over the values θk of a torsion angle in all n structures in the comparison. the higher the local order the higher the value of s.

if angular order parameters are computed from only the dihedral angles φ, ψ, and χ <dig> the final results are largely identical to those obtained with the approach described above . using all rotatable dihedral angles was given precedence as this approach yields a larger number of core atoms, and thus a larger base for clustering, while still excluding atoms from severely disordered parts of the protein.

core atom determination
the set of core atoms consists of the cα atoms of those residues that contain at least one well-ordered torsion angle with an angular order parameter s >scut. we did not want to impose a fixed cutoff value scut because the degree of order within structure bundles is different in each case. instead, the cutoff value scut is chosen as the angular order parameter value si of the torsion angle i that maximizes the quantity  

here, s denotes the total number of torsion angles for which angular order parameters are calculated, smax and smin are the maximal and minimal angular order parameter values, and ri ∈ { <dig> ...,s} is the rank of the torsion angle i in an ordered list of the angular order parameter values . we denote the number of core atoms by c. plots of qi as a function of the order parameter rank i for various proteins  show in all cases a clear maximum and the absence of distant, comparably high local maxima.

we found that using only cαs is sufficient for reliable domain identification. additional core atoms merely slowed down the calculations. we also attempted to simply use all cα atoms in the following clustering. this simple approach, however, was less reliable in domain identification than the present one based on angular order parameters.

distance variance matrix
the variance vij of the intra-conformer distance between any two core atoms i and j is calculated over all n members of the structure bundle,  

where dijk denotes the distance between atoms i and j in conformer k.

core atom clustering
to determine the residues that belong to the same domain the core atoms are clustered using an agglomerative hierarchical clustering algorithm. at the outset  each core atom forms a cluster of its own. at each subsequent stage of clustering two clusters are merged, until at the end there remains a single cluster containing all core atoms. hence there are as many clustering stages as there are core atoms. in each stage of clustering the two nearest neighbour clusters are identified and merged. all other clusters remain unchanged and are simply propagated to the next stage. the nearest neighbour clusters are defined by ward's method as the two clusters that yield, after merging, the lowest intra-cluster v-value variance of all possible two-cluster combinations. the intra-cluster v-value variance is computed as the variance of the vij values for all atoms i and j in the merged cluster, or, if the merged cluster contains only two atoms, by the corresponding single vij value.

identification of the best clustering stage
at each of the clustering stages i =  <dig>  ..., c the average cluster spread  

is calculated, where the sum runs over all clusters with more than one member, ci is the total number of core atoms from all clusters with more than one member, and rmsdj is the average over all structures of the rmsd to the mean coordinates for the backbone atoms n, cα, and c' of the residues given by the core atoms in cluster j. all rmsd values are calculated using singular value decomposition  <cit> . low cluster spreads indicate high intra-cluster homogeneity, i.e. atom pairs with a similar degree of inter-atom distance variation are likely to belong to the same structural unit within the protein. a low number of clusters points to no artificial division of domains having occurred.

to determine the optimal clustering stage, the quantity  

is calculated for the clustering stages i =  <dig>  ..., c. amin and amax are the minimum and maximum average cluster spread values, respectively, and ni is the number of clusters at stage i, including single-element clusters.

the clustering stage with the lowest p value is chosen as the optimal clustering stage, i*, provided that the average number of core atoms in a cluster at stage i* exceeds one eighth of the total number of core atoms, rounded up to the nearest integer. in the calculation of this average cluster size only those clusters are considered which contain at least the minimal number of elements  required for a cluster to be considered as a domain. if the average cluster size is too small, a new minimum value of p is determined in the restricted range i = i* +  <dig>  ..., c. the procedure is repeated until the average number of cluster elements at the clustering stage with minimum p exceeds one eighth of the total number of core atoms. the minimum of pi as a function of the clustering stage i is sharply defined, usually at or near the last clustering stage .

each cluster at the optimum stage of clustering is considered as a domain, provided that it contains at least μ elements. by default, μ =  <dig> 

the residue ranges corresponding to the identified domains are passed to the residue range determination procedure. first, however, these ranges are extended at all boundaries by m residues, so as not to restrict the range determination procedure to perhaps too narrow a starting range. by default, m =  <dig> 

residue range determination
the determination of the residue range for each domain starts with the residues of a previously identified and subsequently extended domain. the algorithm proceeds by iteratively removing residues until the set of residues does not change in an iteration. the algorithm comprises the following  <dig> steps:

 rmsd calculation: compute the rmsd value, r, for the backbone atoms n, cα, and c' of the current set of residues.

 removal of isolated residues: if present, exclude from the set of residues those with two neighbours that do not belong to the current set of residues, and start a new iteration at step  <dig> 

 find residues with largest displacements: among the selected residues find the one with the largest average displacement whose removal does not open a new gap in the selected residues. similarly, find the residue with the largest average displacement whose removal opens a new gap in the selected residues. the average displacement corresponds to the distance between an atom in a given conformer and its mean position after optimal superposition of all conformers onto the first conformer in the rmsd calculation of step  <dig>  averaged over all conformers and over the backbone atoms n, cα, and c' of a residue.

 compute gap-weighted rmsd decrease: for the two residues found in step  <dig>  compute the gap-weighted decrease of the rmsd value upon removing the residue from the set, Δrnogap = r - rnogap and Δrgap = γ , where r is the rmsd value from step  <dig>  rnogap and rgap are the rmsd of the selected residues after removing one of the residues from step  <dig>  and γ is a dimensionless parameter that penalizes the opening of new gaps .

 residue removal: if the residue with the larger Δr value fulfils the two conditions Δr ≥ δ abs n/n and Δr/r ≥ δ rel n/n, remove it from the set of selected residues and start a new iteration at step  <dig>  here n and n denote the numbers of atoms included in the rmsd calculation of step  <dig> from the current residue and from all selected residues, respectively, and δ abs and δ rel are parameters for the minimally required absolute and relative rmsd decrease, respectively.

 retry residue removal: if no residue was removed in step  <dig>  find among all selected residues the residue whose removal yields the largest gap-weighted decrease of the rmsd value. if the conditions of step  <dig> are fulfilled for this residue, remove it from the set of selected residues and start a new iteration at step  <dig> 

 fill small gaps: if the set of selected residues contains small gaps of less than g  residues, "fill" these gaps by additionally selecting the residues in the gap.

average displacements are calculated in step  <dig> to limit the number of rmsd calculations to two in step  <dig> and executing only rarely step  <dig> which requires an rmsd calculation for every selected residue.

in this paper, unless noted otherwise, we used μ =  <dig>  m =  <dig>  γ =  <dig> , δ abs =  <dig>  Å, and δ rel = δ +  <dig> /m with δ =  <dig> , where m denotes the current number of selected residues, and g =  <dig>  smaller values of γ lead to fewer gaps. the choice of δ rel was motivated by the observation of the relative rmsd decrease values for randomly disordered structures. the increase of δ rel for small numbers of selected residues ensures the termination of the algorithm.

output
the cyrange method yields for each of the domains it identified the residue range for superposition, the number of residues therein, and the average rmsd value to the mean coordinates for the backbone atoms in the residue range for superposition. if the input consists of only two structures, the rmsd to the mean coordinates is equal to half the rmsd between the two structures. the cyrange algorithm is freely available as a web service and a stand-alone program at http://www.bpc.uni-frankfurt.de/cyrange.html. it has also been implemented in the software package cyana  <cit> .

application of cyrange to  <dig> proteins
the residue ranges determined by cyrange for  <dig> proteins are visualized in the 3d structure bundles of figure  <dig> and summarized in figures  <dig> and  <dig>  details regarding the proteins used are given in the methods section. the method provided results that make sense by visual inspection in that ordered regions were correctly identified, the global structure superpositions based on the cyrange residue ranges allow a clear presentation of the structure, and unnecessary small gaps within the selected ranges are absent. cyrange yielded similar results for the corresponding low- and high-precision structure bundles of the  <dig> proteins of figures 2a and  <dig>  except that in enth and fsh <dig> additional loops, which are disordered only in the low-precision structure, were excluded, and that in the low-precision structure of smbp the second domain was not identified. for copz, a loop was excluded from the residue range for the high-precision structure that had been included for the low-precision structure because the residues are more uniformly disordered in the low-precision structure than in the high-precision one. the latter exhibited a higher standard deviation of the rmsd per-residue than the low-precision structure. this shows that the cyrange method gives meaningful results also in the challenging case of low-quality structures where the distinction between well-defined and ill-defined regions becomes blurred. for the protein 2kr <dig>  the cyrange method correctly identified the two structural domains despite the small size of the isolated helix . the two protein-protein complexes, 2ktf and 2l <dig>  did not pose any particular problems.

the cyrange results shown in figures  <dig>   <dig>   <dig> have been obtained using the same parameter set for all proteins. we analyzed the influence of different values of the parameters on the resulting sequence coverage and rmsd for nine different protein structure bundles . each of the parameters μ, m, δ, δ abs, γ, and g was varied while keeping the other parameters at their default values. varying the minimal cluster size μ in the range of 6- <dig> residues , the domain boundary extension m in the range of 1- <dig> residues , or the minimal gap width g in the in the range of 1- <dig> residues  did not change the cyrange residue ranges for these  <dig> proteins, apart from the cases of 1zda and the low-precision structure of copz, where raising m led to minute changes in sequence coverage. variation of the parameter δ for the relative rmsd decrease in step  <dig> of the residue range determination in the range  <dig> - <dig> led to changes only for the already mentioned low-precision smbp structure . higher values of the corresponding absolute rmsd decrease parameter δ abs led to slight increases of the sequence coverage and the rmsd for some of the proteins . similarly, a decrease of the sequence coverage and the rmsd were observed when increasing the gap penalty parameter γ from  <dig>  to  <dig>  . thus the results from cyrange do not critically depend on the choice of these parameters but can, if desired, be guided towards a smaller or larger number of gaps or selected residues. the default values of the parameters appear to be appropriate for almost all proteins. only the gap penalty parameter γ may occasionally be adapted according to the emphasis put on simple residue ranges with no or few gaps. meaningful values of γ lie between  <dig>  which yields a residue range without gaps, and  <dig>  which selects residues without concern for the number of gaps.

we also compared the residue ranges obtained by computing the angular order parameters at the outset of the algorithm for all rotatable dihedral angles or only for φ, ψ, and χ <dig>  using default parameter settings. for all but  <dig> out of the  <dig> proteins in the test set the results were identical. in the  <dig> other cases the sequence coverage, and usually the rmsd value, were higher when order parameters were calculated for all dihedral angles. the difference in coverage ranged from about  <dig> to 27%, and the difference in rmsd amounted to between  <dig> and about  <dig>  Å. the  <dig> structure bundles for which differences became apparent were 2kr <dig>  2spz, the low-precision structure of fspo, and the high-precision structure of smbp. in the case of 2kr <dig> the small second domain was not identified when only φ, ψ, and χ <dig> order parameters were used. for smbp the differences amounted to only  <dig> or  <dig> residues per domain. for 2spz the cyrange version using only φ, ψ, and χ <dig> order parameters unnecessarily identified  <dig> small domains instead of the single one reported by standard cyrange. for fspo a disordered loop was excluded if only φ, ψ, and χ <dig> order parameters were employed. exclusion of this loop does seem sensible; raising the value of γ in the standard cyrange will also bring about this result. overall, both choices of dihedral angle order parameters yielded similar results. where differences occurred, the results obtained with order parameters for all dihedral angles mostly corresponded better to the conclusions from visual inspection of the structure bundles.

the computation time requirements of the cyrange algorithm are insignificant. it took cyrange  <dig>  s to calculate the residue ranges for pbpa ,  <dig>  s for scam , and  <dig>  s for smbp  on a  <dig>  ghz intel core  <dig> processor.

comparison with psvs and findcore
we compared the residue ranges from cyrange with those determined by the default algorithm of the protein structure validation suite psvs, and by the findcore algorithm. the algorithm in psvs  <cit>  is widely used for nmr protein structure validation, and was chosen here as a representative of the straightforward determination of  ordered residues. psvs does therefore not attempt to identify structural domains. findcore  <cit> , determines residue ranges for global superposition and is able to identify multiple domains.

the residue ranges obtained with the three algorithms for  <dig> different proteins are shown in figures  <dig> and  <dig>  and the differences of the rmsd and sequence coverage relative to the cyrange results are shown in figure  <dig>  in the majority of cases, the residue ranges from cyrange contain fewer gaps and cover significantly larger parts of the sequence than those from psvs and findcore. consequently, the rmsd values for the residue ranges identified by cyrange are often slightly higher than those from psvs and findcore. this, however, does not constitute a general rule. for instance, for the two-domain proteins 1cfc and 1d1d all cyrange domains simultaneously comprised more residues and showed lower rmsd values than those obtained from the other two algorithms . on average, the residue ranges reported by cyrange covered 85% of the sequences of these proteins and led to a backbone rmsd value of  <dig>  Å, as compared to 67% coverage and  <dig>  Å rmsd with psvs, and 58% coverage and  <dig>  Å rmsd with findcore.

in the proteins with multiple domains both cyrange and findcore found all domains except one. cyrange missed a domain in the low-precision smbp structure, findcore in 2kr <dig>  figure  <dig> compares the rmsd and sequence coverage of the psvs and findcore results with those obtained by cyrange. each data point represents one protein domain. data points above/below the horizontal axis indicate cases where psvs or findcore yielded larger/smaller rmsds than cyrange. data points to the right/left of the vertical axis indicate cases where psvs or findcore yielded larger/smaller sequence coverage than cyrange. most data points are found near the horizontal axis in the lower left quadrant. for these proteins cyrange covered typically between  <dig> and 50% more of the sequence with a small concomitant increase of the rmsd. only a single data point, corresponding to the low-precision smbp structure, is located in the lower right quadrant, indicating a significantly smaller sequence coverage and higher rmsd by cyrange . in all other cases of higher sequence coverage by psvs or findcore the greater number of selected residues resulted in larger, often much larger rmsds. there are also some cases in which, especially with findcore, simultaneously a smaller sequence coverage and a larger rmsd were found than with cyrange.

we have also correlated the sequence coverage and the rmsd values obtained by the three methods with the gdt total score, gdt_ts, that reports the average percentage of residues that can be superimposed under distance cutoffs of  <dig>   <dig>   <dig>  and  <dig> Å  <cit> . whereas there is a correlation between the sequence coverage by cyrange and the gdt_ts value, no such correlation is apparent for findcore or psvs . the sequence coverage by findcore is around 60% for all proteins except for four cases with nearly 100% sequence coverage, and independent from the gdt_ts value. the rmsd values do not correlate strongly with the gdt_ts values for any of the three methods . this is not surprising because the gdt_ts measures the fraction of residues that can be superimposed reasonably well, whereas the rmsd reports how well a given subset of residues, which may comprise a smaller or larger part of the entire protein sequence, can be superimposed.

more detailed investigations into the differences between findcore, psvs, and cyrange results were performed, as the results, especially the number of gaps reported by the programs, vary considerably in some cases. two examples of cyrange reporting few or no gaps where findcore and psvs report a high number of gaps are the results obtained for the low-precision structure of pbpa, and for 1bf <dig>  in the first case cyrange excluded one disordered chain terminus, but it did not exclude a loop which, by visual inspection, seems slightly less ordered than the rest of the domain. psvs kept the helices, yet excluded from them small, not considerably disordered-looking segments. it also excluded the chain termini, one of which does not seem highly disordered. the findcore result was similar. here we additionally found that some very small portions of otherwise excluded stretches were reported to be part of the domain. from 1bf <dig> cyrange excluded one highly disordered loop. psvs also excluded this loop, alongside parts which, by visual inspection, did not appear to be considerably disordered. again, the findcore result was similar to the one attained by psvs, but the rather ordered-looking sections excluded by findcore were often somewhat larger.

application to all nmr structures in the pdb
on july  <dig>   <dig> the pdb contained  <dig> entries with protein structures determined by nmr that comprised at least  <dig> residues and for which a bundle of at least  <dig> conformers was available. we applied cyrange to all of these structure bundles, and obtained results for all but  <dig> files. in  <dig> cases no core atoms could be identified because the pdb files contained cα positions only, in  <dig> case the residue range determination failed, and in  <dig> cases no domains were found.  <dig> of those proteins comprised less than  <dig> residues and often consisted of a single helix with one or two disordered tails. of the remaining three structures two were highly disordered, and one, made up of  <dig> residues, again contained a single helix with disordered tails only. the results for the remaining  <dig> files are summarized in figure  <dig>  a complete list of the residue ranges and rmsd values is available at http://www.bpc.uni-frankfurt.de/cyrange_pdb.html. on average, the residue ranges covered 80% of the residues of a protein, and there were  <dig>  domains and  <dig>  intra-domain gaps per protein.

for 95% of the proteins the cyrange residue ranges comprised more than 50% of all residues . in only four cases  the residue ranges included less than 10% of all residues. visual inspection of these structure bundles revealed that the low percentage of selected residues is correct for the two structures 1r5s and 2fft, which consist of a single helix with long, disordered tails, whereas a larger residue range should have been selected for 2kes, which consists of a single α helix. the pdb entry 2v <dig> could not be handled properly because it combines multiple conformations within the individual conformers.

for 60% of the structures cyrange determined a residue range without intra-domain gaps . four or more intra-domain gaps were identified in only about 1% of the structures, i.e. the cyrange algorithm selected whenever possible simple residue ranges with no or only very few gaps.

the distribution of the backbone rmsd values for the domains identified by cyrange  indicates that 62% of all domains have an rmsd value below  <dig>  Å. less than 1% exhibit rmsd values above  <dig> Å, and only five domains reported by cyrange are severely disordered with rmsd values in the range of  <dig> - <dig>  Å, which appear to be largely ill-defined also by visual inspection. this shows that in almost all cases cyrange determined residue ranges that can be superimposed well. considering the large number of domains, it cannot be excluded that in some cases more appropriate residue ranges could be identified by visual inspection or other methods. nevertheless, the facts that the algorithm failed to provide a result for only  <dig> % of the pdb entries and that for more than 99% of the domains cyrange yielded residue ranges with rmsds below  <dig> Å and covering a significant fraction of the sequence indicate the usefulness of cyrange as a general tool for objective residue range determination.

CONCLUSIONS
we introduced the cyrange algorithm for the determination of residue ranges for the superposition of protein structures and showed that it provides meaningful results for a large number of nmr protein structure bundles. the algorithm needs no adaptations of parameters for individual protein structures. cyrange is a tool for protein structure analysis that is available for easy integration in validation packages  <cit> . although algorithms for the same purpose have been developed earlier  <cit> , none of them has become a widely-used standard for experimentally determined protein structures, where, despite a clear need for standardization and automation, the manual selection of residue ranges or the use of suboptimal criteria remain commonplace. we hope cyrange to fill this gap.

