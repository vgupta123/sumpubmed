BACKGROUND
promoter region plays an essential role in determining where the transcription of a particular gene should be initiated. hence, promoter recognition – the computational task of finding the promoter regions on a dna sequence, is an important problem  <cit> . the accumulation of a huge amount of genome sequence data in recent years makes the annotation process more and more complicated for higher eukaryotes  <cit> . the rna polymerase ii  promoter is a key region that regulates differential transcription of protein coding genes. computational analysis of pol ii promoters may contribute to improved gene identification and to prediction of the expression context of genes  <cit> . there is a need for prediction techniques that can rapidly and accurately evaluate sequences for the presence of promoter sequences  <cit> .

existing promoter prediction methods are still far from being satisfactory  <cit> . the performance of many current eukaryote promoter prediction methods has been unreliable with poor specificity or poor sensitivity  <cit> . many methods predict promoter sequences based on the regulatory sequence elements  in them. but the rses are short and not fully conserved in the promoter sequences, which results in a high probability of finding similar sequence elements elsewhere in genomes, outside the promoter regions. that is why most of the promoter prediction methods end up predicting a lot of false positions  <cit> . fickett and hatzigeorgiou  <cit>  performed an evaluation of the different promoter prediction methods on genome dna and suggested that it would be worth attempting nonlinear recognition methods, such as neural nets or quadratic discriminant analysis. following this direction, gangal and sharma  <cit>  applied time series descriptors and machine learning methods to human pol ii promoter prediction and got a higher accuracy compared with other methods; kanhere and bansal  <cit>  presented a novel prokaryotic promoter prediction method based on dna stability showing that the changing in the stability of dna provides a much better clue than the usual sequence motifs.

in this paper, we attempt to recognize the human pol ii promoter sequences from the non-promoter sequences which contain exon and intron sequences. it should be noted that the aim of the present paper is similar to that of ref.  <cit> , but the non-promoter sequences in ref.  <cit>  are made up of coding sequences  and intron sequences, while we use an existing database, the exon/intron database, to extract non-promoter sequences. we first convert the promoter/non-promoter sequences into numeric sequences according to the  <dig> unified free energy parameters  <cit> , which have been used to measure the stability of dna  <cit> . then a measure representation is introduced for the numeric sequences. multifractal analysis of the measure is next performed, which results in the first  <dig> parameters. analogous multifractal analysis  <cit>  is also used on the numeric sequences to achieve another  <dig> parameters. the z curve method, which has been used in recent years with some successes  <cit> , yields  <dig> parameters for the promoter/non-promoter primary sequences. the protein-chain descriptor method was first proposed by dubchak et al.  <cit>  to predict protein folding classes. here we propose a global descriptor for the promoter/non-promoter sequences, which yields  <dig> parameters for a global description of the primary sequences. overall, a total of  <dig> parameters are extracted from these four different methods and categorized into seven groups . fisher's linear discriminant algorithm shows that the global descriptor method is the most effective when used separately. complete enumerations of all the possible combinations of these seven methods  are tested to find possibly better results with a relatively smaller number of parameters. numerical results show that the methods with  <dig> and  <dig> parameters can produce satisfactory results. compared with five other existing tools, the higher sensitivity, specificity, accuracy and correlation coefficient demonstrate that the methods proposed here are useful for understanding the human pol ii promoter prediction problem.  <dig> of the  <dig> experimentally verified promoter sequences of human chromosome  <dig>  <cit>  are successfully identified by the global descriptor method .

RESULTS
testing
we use two different data sets downloaded from two databases. the first set is the human pol ii promoter sequences from release  <dig> of the eukaryotic promoter database   <cit> . the epd is an annotated non-redundant collection of eukaryotic pol ii promoters, experimentally defined by a transcription start site   <cit> . the epd is a useful database when one wants to deal with the pol ii promoter prediction problem and it is broadly tested by different prediction tools  <cit> . a total of  <dig> entries of human pol ii promoter sequences with window size of  <dig> bp upstream and  <dig> bp downstream of tss, which is the same as that used in ref.  <cit> , are obtained from epd. the sequences containing 'n' are manually filtered out, which results in a total of  <dig> sequences. the second set is the non-promoter sequences of the human genome. for this data set, we consider using the exon/intron database , which incorporates information on the exon/intron structure of eukaryotic genes  <cit>  . firstly, the exon/intron sequences with 'n' and length less than  <dig> are filtered out. then, we randomly select  <dig> intron sequences from the file hs35p <dig> intreid and  <dig> exon sequences from the file hs35p <dig> exeid. a fragment of length  <dig> is then selected randomly from each exon/intron sequence with length larger than  <dig>  as the intron sequences are represented by lower-case letters in the file hs35p <dig> intreid, we transform them into upper-case letters to be consistent with the promoter and exon sequences.

from the four different methods described in the methods section, we get a total of  <dig> parameters. we will test their contributions in the promoter/non-promoter problem. then we will try to combine some of them to see whether better results can be achieved.

for comparison of various methods, a benchmark should be set up. we use fisher's linear discriminant algorithm  <cit>  to calculate the discriminant accuracies. we divide all promoter and non-promoter sequences into two sets randomly. a set of 90% of promoter/non-promoter sequences is regarded as a training set, and the set of remaining 10% of promoter/non-promoter sequences as a test set.

fisher's discriminant algorithm is used to find a classifier in the parameter space for a training set. the given training set h = {x <dig>  x <dig>  ⋯, xn} is partitioned into n <dig> ≤ n training vectors in a subset h <dig> and n <dig> ≤ n training vectors in a subset h <dig>  where n <dig> + n <dig> = n and each xi is a κ-dimensional vector, represented by one point in the κ-dimensional parameter space. then h = h <dig> ∪ h <dig>  we need to find a parameter vector w = t for the κ-dimensional space such that {yi=wxi}i=1n can be classified into two classes in the space of real numbers. if we denote

  mj=1nj∑xi∈hjxij= <dig> , 

  sj=∑xi∈hjt,j= <dig> , 

  sw = s <dig> + s <dig>  

then the parameter vector w is estimated as sw− <dig> <cit> . as a result, fisher's discriminant rule becomes: "assign x to h <dig> if z=tsw−1> <dig> and to h <dig> otherwise"  <cit> .

the discriminant accuracies for resubstitution analysis are defined as

  pc=the number of all correct promoter discriminationsthe number of promoter sequences in the training set, 

  pnc=the number of all correct non-promoter discriminationsthe number of non-promoter sequences in the training set. 

for the test analysis, the discriminant accuracies qc and qnc are defined similarly by changing "training set" to "test set" in eqs.  and , respectively.

we first divide the data into training and test sets randomly, then we use the above algorithm to calculate the discriminant accuracies for different methods. the results are listed in table  <dig> 

firstly, seven groups of parameters are derived from the four methods:   <dig> parameters from fractal methods ;   <dig> parameters from zc representing the codon-position-dependent frequencies of mononucleotides;   <dig> parameters from zc representing the frequencies of phase-specific dinucleotides ;   <dig> parameters from zc representing the frequencies of phase-specific dinucleotides ;   <dig> parameters for the phase-independent mononucleotides and dinucleotides from zc;   <dig> parameters from gd;   <dig> parameters for the frequencies of phase-independent tri-nucleotides from zc. from table  <dig>  it is seen that the results from the multifractal analyses seem to be better than that from zc with an equal number of parameters, namely  <dig>  we have successfully applied multifractal analyses in the clustering of large protein structures  <cit>  and the distinction of coding and non-coding sequences in complete genomes  <cit> , where the length of protein sequences and coding and non-coding sequences are larger than  <dig>  it is well-known that the promoter sequences are highly diverse, which makes it notoriously difficult to generate patterns and rules for promoter prediction. it is expected that multifractal analyses can unfold some useful information on promoter sequences. the results from the frequencies of phase-specific dinucleotides at codon positions 2– <dig> in zc indicate a better performance than that at codon positions 1– <dig>  in addition, the accuracies from zc with the frequencies of phase-independent mononucleotides and dinucleotides are improved but the number of parameters is increased to  <dig>  the gd method shown in boldface in table  <dig>  denoted as m <dig>  turns out to be especially useful as the accuracies are all larger that 85%. compared with this, the results from the  <dig> parameters in zc are not as good even though the number of parameters is increased.

secondly, we want to test whether the results can be improved by increasing the number of parameters. it is not possible to test all the subsets of the  <dig> parameters but we can test all the combinations of the above seven methods . in our test, the accuracies do not simply increase as the number of parameters becomes larger, which indicates there might be some redundancy/correlation among the  <dig> parameters. for example, the accuracies with the  <dig> parameters are similar to those with only  <dig> parameters, suggesting the information from the mononucleotides and phase-independent dinucleotides in zc is contained in the other methods. therefore, all these parameters are not really needed. nevertheless, in some circumstances the results do improve when the number of parameters is increased. especially, among the  <dig> combinations, the results are relatively satisfactory in the cases of  <dig> and  <dig> parameters, which is shown in boldface in table  <dig>  we denote them by m <dig> and m <dig>  respectively. in order to see whether multifractal analysis brings out useful information, we remove the  <dig> parameters of mfa and amfa from m <dig> and test the results for such new combination. the pc, pnc, qc, and qnc calculated from this combination are:  <dig> %  <dig> %,  <dig> % and  <dig> % respectively. they are similar to those from m <dig> , which demonstrates that multifractal analysis does not significantly improve the performance in m <dig> 

in order to evaluate the correct prediction rate and reliability of a predictive method, the sensitivity , specificity , accuracy  and correlation coefficient  are also used  <cit> :

  sn = t p/, 

  sp = t p/, 

  ac = / <dig>  

  cc=−×××, 

where tp denotes the number of correctly recognized promoter sequences, fn the number of promoter sequences recognized as non-promoter sequences, fp the number of non-promoter sequences recognized as promoter sequences, tn the number of correctly recognized non-promoter sequences.

from fisher's discriminant algorithm, we calculate the four quantities defined above. the results related to table  <dig> by the "order" mark are listed in table  <dig> 

overall, from tables  <dig> and  <dig>  when the methods are used independently, we can see that m <dig> is the best one. the combined methods m <dig> and m <dig> improve the results. however, the number of parameters is too high in m <dig>  taking this aspect into account, a preferred method would be m <dig> or m <dig> 

discussion
it is natural to ask whether the method of this paper has a better performance than the existing methods. as was done in ref.  <cit> , we can compare the present method with five kinds of promoter prediction tools, which are available on-line, namely neural network promoter prediction   <cit> , soft berry   <cit> , dragon promoter finder version  <dig>    <cit> , promoter  <dig>   <cit>  and promoter scan version  <dig>   <cit> . to be within a reasonable workload, we only compare with 10% of the promoter and non-promoter sequences used in section  <dig> . the results are listed in table  <dig>  they clearly indicate that our method has a better performance than the other tools.

however, using 90% of promoter sequences as a training set and only 10% of the promoter sequences as a test set may not provide a fair comparison against these methods. a more realistic performance would be to use 50% of the promoter sequences as a training set and the other 50% as a test set. therefore, we use such ratio of training and test sets in fisher's algorithm to see whether the results from our method are still satisfactory. we list the results of m <dig>  m <dig> and m <dig> in table  <dig>  it shows that, with a smaller size of training set, the accuracy ac for the test set is surprisingly better than before, suggesting that our method is robust.

based on support vector machine , gangal and sharma  <cit>  used time series descriptors to identify promoter sequences from non-promoter sequences. they reported an accuracy of more than 85%. it will be interesting to see whether their method also works well in our test data set. but their tool prometheus is not currently available. so it is not feasible to compare the two methods using the same data set. nevertheless, by using 80% of data to train and the other 20% to test our method, which is the ratio used by gangal and sharma  <cit> , we are able to produce a rough comparison with the results gangal and sharma reported . it is listed in table  <dig>  which shows that our results  are relatively better.

finally, it is important to test our method with real human dna sequences. for example, a sliding window technique with window size of  <dig> bp and step size of  <dig> bp can be used to recognize promoter sequences in the human dna sequences, similar to the technique adopted by gao and zhang  <cit>  to recognize exons. however, because promoter sequences are not clearly marked in the human dna sequences, we can't use this approach to test our method. nevertheless, similar to that performed in ref.  <cit> , we use the human chromosome  <dig>  in which  <dig> promoters are experimentally verified  <cit> . one can refer to table  <dig> in ref.  <cit>  to get the sequences with the accession numbers. however, as ab <dig> and d <dig> are not clearly annotated, we do not use them in the test. we use 50% of the promoter  and non-promoter  sequences to train m <dig>  the coefficients in fisher's algorithm w =  are determined based on the training set. the choice of a promoter/non-promoter sequence is determined by the criterion z > 0/z < <dig>  except for af <dig>  the other  <dig> promoter sequences are correctly identified. this suggests that the global descriptor gd , with a smaller number of parameters , is a practical method.

CONCLUSIONS
promoter prediction is a difficult but important problem in gene finding, and it is critical for elucidating the regulation of gene expression  <cit> . we use two kinds of multifractal analysis on the free energy sequences of promoter/non-promoter, z curve analysis, and the global descriptor for the primary sequences of promoter/non-promoter. a total of  <dig> parameters are extracted from these four methods. these parameters are used in both independent and combined ways to distinguish promoter sequences from non-promoter sequences.

fisher's linear discriminant algorithm provides a quantitative assessment of the recognition methods. if we use these methods independently, the global descriptor of the promoter/non-promoter sequences is the best method based fisher's algorithm. combinations of various methods show that the accuracies can be improved in some cases but the improvements are not simply due to the increase of parameter numbers. with all  <dig> parameters together, the results are satisfactory. however, the number of parameters is too high in this condition. the number is reduced as there is some redundancy/correlation among these parameters. in the case of  <dig> parameters, similar results are achieved, with the discriminant accuracies pc, pnc, qc, and qnc reaching  <dig> %  <dig> %,  <dig> % and  <dig> %, respectively. the related sensitivity sn, specificity sp, accuracy ac and correlation coefficient cc for the test set reach  <dig> %,  <dig> %,  <dig> % and  <dig> , respectively. a smaller number of parameters  also produces relatively satisfactory results. the global descriptor method with only  <dig> parameters successfully identifies  <dig> of the  <dig> experimentally verified promoters in human chromosome  <dig>  <cit> . recognition of promoter sequences with such satisfactory accuracy indicates that the methods is promising for human pol ii promoter prediction.

the main aim of this work is to develop efficient algorithms that can discriminate between promoters and non-promoters in a given sequence. another challenge being addressed is the localization of promoters rather than a simple classification considered in current methods  <cit> . multifractal analysis, which is especially useful in many other fields  <cit> , seems to reflect some information for promoter recognition . but if we use method m <dig>  multifractal analysis does not significantly improve the performance. the methods considered in this paper seem promising in enhancing the performance of biomolecular sequence analysis and promoter prediction in particular. it is a challenge to predict promoter sequences directly from the real human genome. however, it would be helpful to use first the encode pilot project data set, which spans about 1% of the human genome sequence  <cit> . our following work aims to contribute towards this challenging problem.

