BACKGROUND
software has become an integral part of analysis techniques. especially in the area of gas chromatography/mass spectrometry, automatic samplers enable high throughput analyses. software assists handling large amounts of data generated by automated and fast operating analytical instruments. modern computer systems are inexpensive, powerful and allow analysis techniques that could not have been applied in the past. deconvolution, a chromatographic quality enhancing technique, demonstrates for instance that increasing processor power makes new analysis techniques applicable. the technique of deconvolution has been described by biller and biemann  <cit> , dromey et al.  <cit> , colby  <cit> , hindmarch et al.  <cit> , halket et al.  <cit> , kong et al.  <cit> , taylor et al.  <cit> , pool et al.  <cit>  and davies  <cit>  in various ways. stein  <cit>  published an enhanced deconvolution algorithm that has been implemented in the software amdis   <cit> . amdis is available free of charge from the national institute of standards and technology . windig et al.  <cit>  described another approach to enhance chromatographic quality by a deconvolution method called coda . the commercially available software acd/ms manager  <cit>  offers an implementation of this approach.

increasing computational power enables new applications, but there is still a lack of interoperability. instrument vendors, such as agilent technologies, shimadzu, thermo fisher scientific and waters corporation have created their own software and data format. usually, the mass spectral data formats are binary and can only be accessed by the instrument vendors' proprietary software. some commercial tools exist to convert the mass spectral data files into other formats, such as mass transit from palisade corporation  <cit> . to avoid these limitations, some efforts have been made to design and implement interoperable data formats and software libraries as for example netcdf  <cit>  or mzxml  <cit> . but even if it is possible to convert the data files to other formats, there are drawbacks in data processing as each software implements specific functions, has its own graphical user interface and is in most cases commercially available only, as for example the applicable software of chemstation, xcalibur or masslynx. hence, the users are forced to become familiar with different software systems, user interfaces and methods. moreover, the software tools primarily target only specific operating systems, such as microsoft windows and mac osx. the number of software applications that are independent of the operating system and can also be run under unix or linux is limited. linux systems are open source, available at no cost and their usage increases in scientific research , as well as in the public sector  <cit> . software applications, such as amdis, have been published to be used free of charge, but their source code is not disposable. thus, it is not possible to evaluate the algorithms implemented in the software. especially in the case of scientific research, it is not possible to figure them out and to extend them. even if algorithms are described in published papers  <cit> , it is often impossible to validate them manually due to the complexity of chromatographic data. other applications like chemstation, xcalibur, acd/ms manager are proprietary and closed source. they are only commercially available. there is no means of revealing the correctness of their utilized algorithms. efforts have been made to solve the problems of missing interoperability and restricted access to source codes and algorithms  <cit> . bioclipse is a sophisticated project that is open source and is focused with its algorithms on metabolism analysis and gene sequencing. its techniques are state-of-the-art. some other projects are mmass  <cit> , comspari  <cit>  and fityk  <cit> , but they do have some restrictions regarding their interoperability and extensibility. biosunms  <cit>  is a tool to read tof  mass spectral data files, but it is not able to read instrument vendors' native data files. the chemistry development kit   <cit>  implements convenient features to edit chemical data and structures, but it has no appropriate user interface. the open source tool openms  <cit>  aims to edit mass spectrometric data, but it is not completely platform independent, as it is written in c++ programming language.

projects like bioclipse, sashimi  <cit>  or tpp   <cit>  are focused on the evaluation of metabolism products and gene sequencing and make extensive use of accurate mass resolution techniques. but there is still a lack of software systems that are capable to enhance nominal mass spectral data files, that are flexible, extensible and that offer an easy to use graphical user interface. according to the authors' knowledge, no application offers functions to import vendor systems chromatographic data files and has the ability to edit and analyze chromatograms in the way chemstation and amdis do. no application combines the flexibility in analyses, is easily extensible, open source, platform independent and has a configurable graphical user interface.

implementation
architecture
openchrom is an open source software that aims to solve the aforementioned constraints getting rid of several restrictions. it is based on the eclipse rich client platform   <cit> , which is an osgi  based application environment that allows to build modular and flexible software systems. with the osgi platform it is possible to extend the functionality of an application by dividing its components into different bundles. it is written in java which is an interpreted language that depends on the java virtual machine  and allows the execution of the software on several operating systems  and processor platforms . it utilizes swt  to render its graphical user interface by using the native resources of the underlying operating system. the rich client platform is state-of-the-art in today's software development. the platform is open to be extended afterwards due to the chosen concepts. it means that the platform doesn't need to be full-fledged at the beginning. further methods and implementations can be developed separately. nonetheless, still some effort is necessary to design a platform that covers all needs of a software application to edit, evaluate and modify chromatographic data. in contrast to bioclipse, sashimi or tpp, openchrom has a slightly different scope, as it is focused primarily on nominal mass resolution data. mass spectrometers for nominal mass resolution are inexpensive, as for example quadrupole or ion trap instruments. but the data acquisition limits the range of possible applications. software has the potential to enhance the quality of the recorded data, in contrary to the given limitations. hence, the rich client platform and the java programming language were chosen, as they offer an excellent support for a highly extensible and abstract base framework. the osgi based rich client platform equinox supports the definition of extension points. the use of different class paths makes it possible to execute code from separated bundles . new functionality, e.g. to export a given chromatogram to a pdf file, can be implemented in a separate bundle making use of the extension point mechanism to import and export chromatographic data.

tools in different areas have been implemented based on the rich client platform, such as the eclipse ide , lotus notes, bioclipse, biosunms, xmind, apache directory studio and several more. it is part of the openchrom architecture to define useful extension points and to build a suitable object model.

object model
openchrom provides a designed object model to define chromatograms, scans, mass spectra, peaks and baselines. it is important to abstract the base model, as it reduces dependencies in code and allows for the implemention of further extensions. therefore, the decision was to support an enhanced chromatogram, mass spectrum and peak model, written in java. there is no preliminary compilation necessary on different operating systems. further on, it is possible to cover special needs regarding the import of instrument vendors' binary chromatographic files. an excerpt of the openchrom object model is shown in a simplified uml  diagram . java, as an object orientated language, supports the use of the four base strategies in object orientation: abstraction, encapsulation, polymorphic behavior and inheritance  <cit> . openchrom makes extensive use of the object orientated concept. the interface "ichromatogram" and the abstract class "abstractchromatogram" define and implement methods, which are common for all types of chromatograms, independent of the instrument vendors' data format. therefore, it is not necessary to implement them iterative in each vendor specific chromatogram class. the base framework and extension points, like peak detectors and integrators, are working still with instances of the type "ichromatogram", instead of taking for example the differences of an agilent and a netcdf chromatogram into account. the object model for mass spectra and mass fragments, peaks and baselines is implemented in a similar way.

extension points
the openchrom framework offers several bundles . the most important one defines methods to implement specialized bundles that handle the import of chromatographic mass spectral data. it is possible to supply a bundle that is able to read binary chromatogram files, given by a specific instrument vendor. the bundle takes care of how to read a given file or directory. furthermore, the framework offers extension points to detect and integrate peaks. the peak detection and integration have been separated, to make it possible to detect peaks with several peak detector methods and to integrate them with a specified integrator. this results in a more complex but also more flexible system. there is another extension point that allows to define bundles that are capable of detecting a baseline in the chromatogram model. another flexible extension point was introduced, called filters. bundles can extend the filter extension point to achieve a quality enhancement of the chromatographic data. they work comparable to filters in image processing software. one filter extension can for instance offer a set of methods to eliminate background signals from the chromatogram. another filter can implement a routine to mean normalize the chromatogram. the filters offer editing steps, which are especially useful before peak detection and integration routines.

the openchrom software offers several extension points. extension points are declared in bundles. the table shows a selected overview of bundles and suppliers.

graphical user interface
the rich client platform offers a wide support to present an appropriate graphical user interface. concepts detailing this include editors, views, perspectives, wizards, menus, cheat sheets, settings and help pages. openchrom makes extensive use of the available concepts. the editor shows the graphical representation of a chromatogram and several options, as for example a page to select or exclude distinct mass fragments. it also supports functions to save, edit and analyze chromatograms. the views are used to show different aspects of the chromatographic model. it is possible to show peaks in different kind of views. one view could show a peak including the background of the chromatogram. another could show the peak with its increasing and decreasing tangents and its width at 50% height. a flexible mechanism was introduced to inform all views if the chromatogram selection has been changed. the update functionality is also realized by an extension point. views and editors are composed in a task specific way using perspectives.

RESULTS
the openchrom software offers several options to edit and evaluate chromatographic data. it currently implements native converters to import mass spectrometric chromatograms from agilent technologies and to import and export netcdf and mzxml files as well as a custom xml format to store the chromatographic data and additional information. the chromatogram file explorer  shows a representation of the local file system and marks those files and directories that contain importable chromatographic data files or directories. the chromatogram can either be stored in a file, a directory or a set of files, as the converter extension point and the import and export converters take care of it. the chromatogram will be opened by a double click on the file. additionally, a preview of the selected chromatogram file is shown in a specialized view in the user interface. the chromatogram itself is shown in a multi-page editor that is divided into a chromatogram as well as an options page. it is possible to save the chromatogram in several file formats. the netcdf, mzxml and the customized openchrom xml format are actually supported. nonetheless, the time to import and to save a chromatogram depends on its format and size. it takes more time to process xml based formats like mzxml than binary formats like netcdf or agilents data format. the graphical elements are drawn using swtchart and swt. chromatogram selections can be chosen by applying a "zoom in" or "zoom out" action in the chromatogram editor. all views will be updated after a zoom action.

the menu "chromatogram edit" allows to access functions that modify or evaluate the chromatographic data. for example, all registered bundles that support filters will be listed in the sub menu "filter". it is possible to add a filter that implements a savitzky-golay  <cit>  smoothing operation or to add filters that remove the background of the chromatogram. each action will be performed on the active chromatogram selection. actions are commonly very fast, due to the fact that the chromatogram is kept in the random access memory , depending on the implemented algorithms. furthermore, the filter actions are reversible. this editing support is well known from modern ides and office suites. but the support for do/undo and redo operations does cost processing time. if the reversibility is not needed, it can be deactivated in the applications preference dialog. another extension point is responsible to register baseline detectors. different baseline detectors can be implemented in separated bundles and will be offered in the "baseline detectors" sub menu. peak detection and integration are done commonly in one run. one improvement achieved through openchrom is a division of the detection and the integration of peaks into two separated actions. the peak detectors can be applied by calling an appropriate detector in the sub menu "peak detectors" and the peak integration can be performed by using an listed integrator from the sub menu "integrators". the separation of detector and integrator methods makes it possible to detect peaks in a chromatogram using several algorithms and methods. the chosen peak detectors could be of different types, as for example detectors using deconvolution techniques like amdis or coda. all detected peaks can afterwards be integrated by a unique integrator, which leads to comparable results. this feature offers a high flexibility in using different kinds of detectors and integrators.

the view mechanism of the eclipse rich client platform makes it possible to show chromatographic data in different kind of views. a peak can be displayed in multiple ways, for example by its area , its increasing and decreasing tangents and its width at 50% of peak height. thus, the system provides additional graphical information, especially useful for educational purposes. each view can be shown in a small  and extended format , which allows an appropriate user interaction even on small displays.

further on, property views show miscellaneous values of the selected chromatogram. due to the chromatogram object model, different values will be shown if different chromatogram files have been loaded. chromatograms from agilent technologies and netcdf differ in their information content. hence, the properties view helps to inspect the files. there are additional extension points implemented that enable adding bundles to compare mass spectra using different methods  <cit>  or to identify peaks or chromatograms. a method similar to the one implemented in the software f-search  <cit>  from frontier laboratories ltd. could be used to identify chromatograms, for example.

moreover, the openchrom platform supports bundles with a system built-in logging mechanism that extends the apache project log4j. each module can use the logging mechanism which makes it easier to detect problems and failures. bundles are further separated into fragments, which allows the separation of concerns. each openchrom bundle supports an internationalization  and junit test fragment. at the moment, approximately  <dig> unit tests are written and can be executed to ensure the quality of the software.

if necessary, the extension point mechanism gives the flexibility to add functions needed by users at any time. thus, openchrom can be connected to other systems, as for example to lims , databases, existing software tools or workflow systems. the object model of openchrom offers a convenient access to values and results from the edited chromatograms. specialized modules take care of how to handle specific concerns, for example how to store results in an information management system. further on, it is possible to implement bundles for specific analyses or for an automated experimentation.

openchrom enables several ways to edit and analyze chromatographic data. the advantage of the flexibility and the abstract architecture makes it partly difficult to get started with the platform, even if the functionality is provided by different bundles to decrease its complexity and to focus on special tasks. the intention to publish the software under an open source license is to support code contributions and to open the project for individual solutions. moreover, the separation into bundles makes it easier for others to contribute new functionality. further improvements will be done to optimize the current algorithms and to develop new and better filters, peak detectors and integrators.

CONCLUSIONS
openchrom has been designed to become an extensible cross-platform open source software for the mass spectrometric analysis of chromatographic data. it provides extension points to enable built-in import capabilities for binary or textual instrument vendors' data formats. in addition to its custom xml format it supports the agilent technologies, mzxml and netcdf mass spectrometric data format. further development is planned to support more data formats. the open source concept has been chosen to initiate the contributions of third parties, as it depends on the ideas and needs of the community to extend the capabilities of the presented concept. openchrom offers extension points that enable the implementation of different baseline detectors as well as peak detectors and integrators. furthermore, there is an option to implement filters, used to increase the chromatographic quality. the framework offers a full support of do/undo and redo operations. the examples bioclipse and biosunms show how to use the eclipse rich client platform in a specific way, but no software has been published until now that is capable to import binary chromatographic files natively, offers support to edit and analyze chromatograms and makes it possible to implement new algorithms and methods. as it is open source, everybody has the possibility to inspect the implemented algorithms and methods, especially for verification. openchrom is a software with a special focus on the editing and evaluation of mass spectrometric chromatographic data. openchrom will be hopefully extended by contributing developers, scientists and companies in the future.

availability and requirements
project name: openchrom

project homepage: http://www.openchrom.net

operating systems: platform independent

programming language: java

java runtime environment: sun/oracle jvm  <dig> . <dig>  openjdk

minimum ram:  <dig> mb

minimum processor:  <dig> ghz

commercial restrictions: none

openchrom is available for download free of charge from the project home page.

the agilent data file input converter must be installed separately using the openchrom update mechanism. the instructions how to install the converter can be found at the following website: http://www.openchrom.net/plugins/converter/agilent.

openchrom is licensed under the eclipse public license  <dig>  . the epl is an osi approved open source license that ensures, that the source code will remain open source. openchrom uses some third party libraries that are partly published under different open source licenses. all third party libraries are available in separated bundles, to ensure that no license conflicts occur. the third party library bundles are published under the apache, lgpl, agpl and epl license, depending on the bundle. the gpl licenses are viral, it means that derivative works must be published under the gpl license too. the epl and eclipse rich client platform enable a different licensing for the bundles, as a bundle using methods of another bundle can not be seen as a derivative work, though it only uses its interfaces.

authors' contributions
pw designed and implemented the core api , the software and its extension points. pw drafted most of the manuscript. jo gave feedback and corrected the manuscript. all authors performed extensive testing of the software and approved the final manuscript.

