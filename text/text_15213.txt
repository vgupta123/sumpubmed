BACKGROUND
sequence variation in the genomic dna of individuals of the same species or related species are typically single nucleotide polymorphisms  or small insertions/deletions   <cit> . because of their abundance and slow mutation rate within the genome, they are the most common type of genetic markers  <cit>  for studying complex genetic traits and genome evolution  <cit> . in addition snps in coding sequences can be used to directly study the genetics of expressed genes and to map functional traits  <cit> . non-synonymous snps  are of particular interest because they change the protein sequence, possibly affecting protein function  <cit> .

there are several strategies, both experimental and computational for snp discovery. experimental snp discovery often consists of a number of laborious steps that make this process complex and expensive  <cit> . the computational approach makes use of the large sequence datasets present in public databases. over the last few years, a number of pipelines have been developed that automatically detect snps in such databases. one type of pipeline detects snps using trace files or quality files, for example the phred/phrap/polybayes system  <cit>  and other pipelines  <cit> . the other type of pipeline uses only est redundancy in text-based sequence files to detect snps: these include autosnp  <cit>  and snipper  <cit> . both autosnp and snipper are based on sequence redundancy for the initial detection of snps, and sequencing errors are detected and filtered out by analyzing snp patterns.

the major drawback of all these computational approaches is that they do not provide a good way to distinguish allelic variation from sequence variation between paralogous sequences. in addition, they do not recognize sequencing errors very well, leading to the frequent occurrence of false positives  <cit> . only polybayes  <cit>  has implemented an enhanced paralog identification routine, but it requires the corresponding genomic sequence and quality files in addition to the est sequence. as most public ests do not include trace or quality file, and genomic sequences are not available for most species, the versatility of the polybayes paralog identification routine is limited.

in this paper we describe a new method  that uses a haplotype-based strategy to detect reliable synonymous and non-synonymous snps from public est data without the requirement of trace/quality files or genomic sequence data. haplotypes in this context represent the different alleles of a gene in a dataset. the haplotype reconstruction is based on a mathematical algorithm. qualitysnp's versatility is demonstrated by the identification of snps in est datasets from potato, chicken and humans.

materials
for potato, two datasets were used in our study. one dataset was from the embl database , containing  <dig>  ests with tissue information of the potato variety kennebec. the other was from the potato gene index of tigr database  containing  <dig>  reads of potato ests with quality files, which was used to evaluate the quality of public potato ests and the performance of our snp discovery pipeline. function annotation information of the potato ests was obtained from the tigr gene index  <cit>  and unigene  <cit> . for chicken, a dataset consisting of  <dig>  ests, originating from more than one genotype was used  <cit> . for thorough validation of our program, nineteen unigene datasets obtained from ncbi  were used. the single nucleotide polymorphism database  was downloaded from ncbi  to our local machine.

to detect non-synonymous and synonymous snps, the uniprot database   <cit>  was used to obtain reference protein sequences for orf detection; fasty, which is a module of the fasta package  <dig>   <cit>  and blast package  <dig> . <dig>  <cit>  were used as tools for searching the uniprot database. cap <dig>  <cit>  was used for assembling sequences. cross_match  <cit>  was used for removing vector fragments; the vector sequences were downloaded from the ncbi data repository on dec 5th  <dig>  to verify paralog identification the blat server of the human genome reference sequence was used  <cit> .

architectural structure
the pipeline consists of five steps: 1) est assembling using cross_match for removing vectors and cap <dig> for sequence clustering, 2) analysis of the alignment information to select clusters with at least  <dig> est members, 3) snp detection and distinguishing variations between or within genotypes, 4) distinction between non-synonymous and synonymous snps using fasty, and 5) transferring the final results into a snp database . the pipeline is implemented in standard c-shell script on a linux workstation; the individual programming steps are written in the c programming language, with exception of the alignment analysis tool  and the web pages to view the results from the database .

in step  <dig> three filters are used to detect reliable snps: filter  <dig> screens clusters for potential snps and differentiates variations between or within genotypes; filter  <dig> detects clusters containing variations caused by sequencing errors and paralogous sequences; and filter  <dig> detects unreliable snps by assigning confidence scores to snps based on sequence redundancy and sequence quality.

implementation
filter 1: screening for potential snps
est data are clustered by cap <dig> with a stringency level of 95% similarity per  <dig> bp, which is also used by other snp mining programs  <cit> ; this setting is sufficient to prevent clustering of paralogous sequences in most cases. clusters with at least  <dig> members are extracted from the alignment information, as well as annotation information, which was obtained from the tigr gene index or unigene  <cit> . we detect all potential snps including bi-, tri-, and tetra-allelic snps, with the requirement that every allele is represented by more than one sequence  <cit>  . if genotype information for sequences is available, it can be used to classify snps as occurring between and/or within genotypes.

filter 2: screening for reliable snps
 haplotype reconstruction
in our setup, a haplotype is defined as a group of sequences within a cluster that represent the same allele of a gene. all the sequences in a haplotype should therefore have the same nucleotide on every polymorphic site. our program reconstructs haplotypes using a mathematical method that minimizes false haplotype reconstruction due to the occurrence of sequencing errors .

firstly, the similarity sij per polymorphic site between candidate sequence i and all current members of one potential haplotype is defined as

sij=∑k=1msij∑k=1msij+∑k=1mdij      <cit> 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwudawgaawcbagaemyaakmaemoaaogabeaakiabg2da9maalaaabawaaabmaeaacqwgzbwcdawgaawcbagaemyaakmaemoaaogabeaakiabcicaoiabdugarjabcmcapawcbagaem4aasmaeyypa0jaegymaedabagaemyba0ganiabgghildaakeaadaaewaqaaiabdohaznaabaaaleaacqwgpbqacqwgqbgaaeqaaogaeiikagiaem4aasmaeiykakcaleaacqwgrbwacqgh9aqpcqaixaqmaeaacqwgtbqba0gaeyyeiuoakiabgucarmaaqadabagaemizaq2aasbaasqaaiabdmgapjabdqgaqbqabagccqggoaakcqwgrbwacqggpaqkasqaaiabdugarjabg2da9iabigdaxaqaaiabd2gatbqdcqghris5aaaakiaaxmaacawljawaamwaaeaacqaixaqmaiaawufacagldbaaaaa@615f@

where j is one polymorphic site of the sequence i, k is one current member of the potential haplotype, and m is the total number of current members in the potential haplotype. sij expresses whether or not the nucleotide at polymorphic site j of sequence i is the same as that of member k in the haplotype, whereas dij expresses whether it is different: when the nucleotide at site j in sequence i is the same as that in sequence k, sij is set to  <dig> and dij is set to 0; when the nucleotides are different, sij is set to  <dig> and dij is set to  <dig>  if sequence k has no information at site j both sij and dij are set to  <dig>  sij is the similarity of sequence i to all current members in the potential haplotype on site j; dij is the dissimilarity between them. when sij is more than  <dig> , sequence i is considered to match the haplotype on site j, so sij is set to  <dig> and dij is set to  <dig>  when sij as calculated from  <cit>  is less than  <dig>  there is not enough information to assign sequence i to the potential haplotype with confidence, so sij is set to  <dig> and dij is set to  <dig>  when both ∑k=1msij
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaaewaqaaiabdohaznaabaaaleaacqwgpbqacqwgqbgaaeqaaaqaaiabdugarjabg2da9iabigdaxaqaaiabd2gatbqdcqghris5aogaeiikagiaem4aasmaeiykakcaaa@3ac9@ and ∑k=1mdij
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaaewaqaaiabdsgaknaabaaaleaacqwgpbqacqwgqbgaaeqaaaqaaiabdugarjabg2da9iabigdaxaqaaiabd2gatbqdcqghris5aogaeiikagiaem4aasmaeiykakcaaa@3aab@ are  <dig>  sij and dij are set to  <dig> 

secondly, the similarity si of sequence i and the potential haplotype of all polymorphic sites is defined as

si=∑j=1nsij∑j=1nsij+∑j=1ndij      <cit> 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwudawgaawcbagaemyaakgabeaakiabg2da9maalaaabawaaabmaeaacqwgtbwudawgaawcbagaemyaakmaemoaaogabeaaaeaacqwgqbgacqgh9aqpcqaixaqmaeaacqwgubgba0gaeyyeiuoaaoqaamaaqadabagaem4uam1aasbaasqaaiabdmgapjabdqgaqbqabaaabagaemoaaomaeyypa0jaegymaedabagaemoba4ganiabgghildgccqghrawkdaaewaqaaiabdseaenaabaaaleaacqwgpbqacqwgqbgaaeqaaaqaaiabdqgaqjabg2da9iabigdaxaqaaiabd6gaubqdcqghris5aaaakiaaxmaacawljawaamwaaeaacqaiyagmaiaawufacagldbaaaaa@55d2@

where n is the total number of all potential polymorphic sites of sequence i. when si is more than  <dig> , sequence i is considered to belong to this haplotype. if both ∑j=1nsij
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaaewaqaaiabdofatnaabaaaleaacqwgpbqacqwgqbgaaeqaaaqaaiabdqgaqjabg2da9iabigdaxaqaaiabd6gaubqdcqghris5aaaa@376e@ and ∑j=1ndij
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaaewaqaaiabdseaenaabaaaleaacqwgpbqacqwgqbgaaeqaaaqaaiabdqgaqjabg2da9iabigdaxaqaaiabd6gaubqdcqghris5aaaa@3750@ are  <dig>  the value of si is set to  <dig> .

 identification of paralogs
sets containing paralogous sequences can be expected to contain more polymorphisms than sets with only allelic sequences. a method based on the number and frequency of polymorphisms may therefore separate paralogs from alleles. however, some est clusters show a larger than average number of snps because some genes or regions of genes evolve more rapidly  <cit> . these snps represent allelic variation but will be mistaken for variation between paralogs by such an approach. therefore we developed a method that identifies paralogs by using the differences in snp numbers between potential haplotypes of the same cluster. the standard deviation of the number of potential snps among potential haplotypes in one cluster is calculated and used to identify haplotypes likely to be caused by paralogous sequences. the procedure of identifying paralogs is as follows:

 remove all potential haplotypes consisting of only one sequence: these are probably of poor quality  <cit> .

 calculate the number of potential snps defining each haplotype, i.e. the number of potential snp sites where all sequences in all other haplotypes contain the same nucleotide and only the current haplotype has a different nucleotide.

 normalize this number of snps defining each potential haplotype:

nrm_snpi=snpi∑i=1ahapsnpiahap{i|i∈},
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqabeqacaaabagaemoba4maemocainaemyba0maei4xa8laem4camnaemoba4maemicaa3aasbaasqaaiabdmgapbqabagccqgh9aqpdawcaaqaaiabdohazjabd6gaujabdchawnaabaaaleaacqwgpbqaaeqaaagcbawaasaaaeaadaaewaqaaiabdohazjabd6gaujabdchawnaabaaaleaacqwgpbqaaeqaaaqaaiabdmgapjabg2da9iabigdaxaqaaiabdggahjabdigaojabdggahjabdchawbqdcqghris5aagcbagaemyyaemaemiaagmaemyyaemaemicaahaaaaaaeaadagadaqaaiabdmgapjabcyha8jabdmgapjabgigiopaadmaabagaegymaejaeiilawiaemyyaemaemiaagmaemyyaemaemicaahacaglbbgaayzxaaaacagl7bgaayzfaaaaaiabcycasaaa@66a1@

where snpi  is the number of potential snps defining haplotype i, and ahap is the number of all haplotypes after removing poor quality haplotypes .

 calculate the standard deviation of the normalized number of potential snps among these haplotypes:

d=∑i=1ahap2ahap      <cit> 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgebarcqgh9aqpdagcaaqaamaalaaabawaaabmaeaadaqadaqaaiabd6gaujabdkhayjabd2gatjabc+fafjabdohazjabd6gaujabdchawnaabaaaleaacqwgpbqaaeqaaogaeyoei0iaegymaedacagloagaayzkaawaawbaasqabeaacqaiyagmaaaabagaemyaakmaeyypa0jaegymaedabagaemyyaemaemiaagmaemyyaemaemicaahaniabgghildaakeaacqwghbqycqwgobaacqwghbqycqwgwbacaaaaleqaaogaaczcaiaaxmaadawadaqaaiabiodazagaay5waiaaw2faaaaa@52f2@

in theory, the value of d can range from  <dig> to infinite. in our study, in 98% of the clusters the value of d ranged from  <dig> to  <dig>  with increasing d-value the variation in number of snps among haplotypes is larger, and there is a higher probability of paralogs in the cluster. the value of d can therefore be used to identify clusters with a low probability of containing paralogs. following from its definition d-value can only be used to distinguish paralogous clusters if at least three haplotypes are identified in those clusters.

 identification of reliable snps
in addition to using a redundancy-based criterion , another more stringent selection is used in the algorithm. the selection is a combination of two measures: major allele haplotype score and minor allele haplotype score. the major allele is the allele occurring in the majority of the sequences in a cluster, while the other is called the minor allele. the major allele haplotype score  is defined as the number of haplotypes with a major allelic nucleotide on one polymorphic site, and the minor allele haplotype score  is the number of haplotypes with the minor allelic nucleotide. the formulas are as follows:

mahap=∑i=1ahapmahapi{mahapi=1|wh×hai+wl×laihci≥ <dig> }      <cit> 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbqbcqwghbqycqwgobaacqwghbqycqwgwbaccqgh9aqpdaaewaqaaiabd2gatjabdggahjabdigaojabdggahjabdchawnaabaaaleaacqwgpbqaaeqaaaqaaiabdmgapjabg2da9iabigdaxaqaaiabdggahjabdigaojabdggahjabdchawbqdcqghris5aowaaiwaaeaacqwgtbqbcqwghbqycqwgobaacqwghbqycqwgwbacdawgaawcbagaemyaakgabeaakiabg2da9iabigdaxiabcyha8naalaaabagaem4dacnaemiaagmaey41aqraemiaagmaemyyae2aasbaasqaaiabdmgapbqabagccqghrawkcqwg3bwdcqwgsbabcqghxdatcqwgsbabcqwghbqydawgaawcbagaemyaakgabeaaaoqaaiabdigaojabdogajnaabaaaleaacqwgpbqaaeqaaaaakiabgwmizkabicdawiabc6cauiabieda3iabiwda1agaay5eaiaaw2haaiaaxmaacawljawaamwaaeaacqai0aanaiaawufacagldbaaaaa@7677@

mihap=∑i=1ahapmihapi{mihapi=1|wh×hbi+wl×lbihci≥ <dig> }      <cit> 
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbqbcqwgpbqacqwgobaacqwghbqycqwgwbaccqgh9aqpdaaewaqaaiabd2gatjabdmgapjabdigaojabdggahjabdchawnaabaaaleaacqwgpbqaaeqaaaqaaiabdmgapjabg2da9iabigdaxaqaaiabdggahjabdigaojabdggahjabdchawbqdcqghris5aowaaiwaaeaacqwgtbqbcqwgpbqacqwgobaacqwghbqycqwgwbacdawgaawcbagaemyaakgabeaakiabg2da9iabigdaxiabcyha8naalaaabagaem4dacnaemiaagmaey41aqraemiaagmaemoyai2aasbaasqaaiabdmgapbqabagccqghrawkcqwg3bwdcqwgsbabcqghxdatcqwgsbabcqwgibgydawgaawcbagaemyaakgabeaaaoqaaiabdigaojabdogajnaabaaaleaacqwgpbqaaeqaaaaakiabgwmizkabicdawiabc6cauiabieda3iabiwda1agaay5eaiaaw2haaiaaxmaacawljawaamwaaeaacqai1aqnaiaawufacagldbaaaaa@76ad@

hai and lai are the number of sequences with the major allelic nucleotide occurring in high quality and low quality regions ; hbi and lbi are the number of sequences with the minor allelic nucleotide represented in high quality and low quality regions; wh and wl are the weight values for the high quality and low quality regions; hci is the number of sequences in the haplotype i with information at the polymorphic site. when more than 75% of the members in one haplotype have the same major or minor allelic nucleotide, mahapi or mihapi is increased by 1; otherwise they remain the same, as in this case the correct nucleotide on this site of the haplotype can not be assigned easily. note that in "haplotype reconstruction" in filter  <dig>  we allowed for some discrepancies between haplotype members. when both mahap and mihap are greater than  <dig> in the cluster, each of major and minor allele occurs in at least one haplotype and the snp therefore can be considered to be reliable.

snp patterns and snp blocks are also defined in filter  <dig>  snp patterns are those snps with the same pattern of allele distribution over the haplotypes; they are determined as in the autosnp program  <cit> . snp blocks are defined as sets of adjacent snps with the same snp pattern. snp pattern and snp block information is part of the output of the pipeline, and can be used for instance for linkage disequilibrium  studies.

filter 3: screening snps with high confidence score 
the third filter calculates a confidence score for every putative snp according to the number of occurrences of each allele in high  and low  quality regions. in standard sequencing procedures the beginnings and the ends of the sequence are generally of lower quality than the rest of the sequence, and therefore are likely to contain more sequencing errors. we used potato ests with quality scores from the tigr database to establish the boundaries of hq and lq for sequences , and these were used as default settings in our program.

based on the hq and lq, the confidence score of each allele is calculated according to the score rules as defined in figure  <dig>  the snp confidence score is the smaller one of each allele confidence score. the confidence scores for each allele are as follows:  <dig> if the allele occurs in more than one hq;  <dig> if in one hq and at least two lq;  <dig> if in more than  <dig> lq;  <dig> if in one hq and one lq, or in  <dig> lq;  <dig> if in  <dig> lq, otherwise  <dig> . in our study, we assigned a high confidence score  to snps with a confidence score of at least  <dig>  this threshold can be adjusted by users according to their specific requirements.

if quality files of sequences are available, one additional filtering step is used to screen for reliable snps. in this filter "snp quality" is calculated as the smaller value of the average quality scores of major and minor alleles per polymorphic site in a cluster. in our study we used a minimum  score value of  <dig> 

non-synonymous snp identification
for the detection of non-synonymous snps , synonymous snps and snp in utr, two strategies can be used: alignment with reference protein sequences or orf prediction using programs such as estscan. in our approach, the first method is used; fasty was chosen as the tool to search the protein database rather than blastx, because it allows for frameshifts within codons  <cit>  and produces better alignments with poor sequences. in our potato est analysis the uniprot database was chosen as referencing database. after the step  <dig> of our snp detection program the fasty results are used by a parsing program, together with the alignment information and the snp information, to identify the snp type . for this, the fasty result is first sorted by e-value to get the hit with highest similarity. next, any frameshift in the contig is detected and corrected, after which the orf is detected. finally, all nssnps and ssnps in the protein hit region or coding region, and snps or indels in 3' utr or 5' utr are identified.

database and snp information retrieval system
all files containing relevant snp information are transferred to the database. an sql script for snp database creation and data loading is produced automatically by the pipeline. the data in this database can be made accessible through the use of a web server. php scripts for generating web pages are supplied together with the code of the pipeline. the php script allows for easy retrieval of snp information from the database, and blast searching .

RESULTS
the new pipeline for snp detection  presented here distinguishes itself from other programs mainly in the approach it takes for detecting sequencing errors and paralogous sequences. the source code and the manual of the program are freely available for academic use , an sample dataset for testing qualitysnp is available as well . to demonstrate the specific properties and advantages of our program we have used potato, human and chicken ests as a target for snp identification. potato was chosen because it is a tetraploid species and cultivars consist of clonally propagated, heterozygous genotypes. the high level of heterozygosity and the tetraploid nature present problems for most currently available snp detection programs in particular in the discrimination of paralogs from alleles. also, within the genomes of plants large numbers of duplications are found  <cit>  which may complicate detection of reliable snps. human and chicken datasets were used as a reference for a 'normal' diploid species and to illustrate specific properties and advantages of qualitysnp.

predicting haplotypes
in the first step,  <dig>  potato ests were assembled into  <dig>  clusters , of which  <dig> clusters contained 4– <dig> members . after the analysis of alignment information of these  <dig> clusters,  <dig> clusters with potential snps were detected . these  <dig> clusters contained  <dig>  ests  and  <dig>  potential snps . in the tetraploid potato a maximum of  <dig> haplotypes per plant can be expected. for most haplotypes sufficient redundancy was available to use a similarity threshold per snp site  of 75%: for haplotypes with less than  <dig> members, all sequences must have the same nucleotide at a single snp site, whereas for haplotypes with  <dig> or more members at least 75% of the sequences must match the consensus nucleotide.

in the current dataset a contig was on average  <dig> nucleotides in length, and ests were about 500~ <dig> nucleotides long, so every est would contain about  <dig> potential snp sites on average. the frequency of sequence errors for est data from ncbi dbest was found to be  <dig> in  <dig> nucleotides  <cit> . assuming a similar error rate, on average one of the five potential snps per est observed in our data would be a sequencing error. with this in mind, the similarity threshold  for the whole sequence was set to 80% for every est in one haplotype. with these settings, eighty-five percent of the clusters contained at most four haplotypes ; when haplotypes with only one member were excluded the percentage of clusters with at most four haplotypes increased to 96% , which agrees with the tetraploid nature of the potato cultivar kennebec.

a all haplotypes in clusters were counted; b when clusters contained at least  <dig> haplotypes with at least  <dig> members, only these haplotypes were counted.

the thresholds of 75% and 80% are the default values in our program, but they can be adjusted by users according to their specific requirements.

predicting paralogs based on haplotypes
our method uses the standard deviation  of the  number of snps per haplotype to identify clusters that probably contain paralogs . in order to get a d-value threshold, we assumed that clusters with 4– <dig> members contained mostly allelic sequences  <cit> , and all clusters with at least  <dig> members paralogous sequences  <cit> . under this assumption,  <dig>  clusters from the potato dataset were considered to be allelic clusters and  <dig> clusters with  <dig> to  <dig> members paralogous clusters. figure 3a shows the relationship of the d-value threshold with the paralogous and allelic data set, after normalizing these data. with increasing d-value threshold, the number of presumably paralogous clusters increased sharply. the number of allelic clusters hardly changed. both lines were found to be crossing at a d-value threshold of approximately  <dig> , which was considered optimal for the screening of paralogs in the potato dataset. from the presumed paralogous dataset  <dig>  %  of the clusters had d-values less than  <dig>  and were most likely not paralogous clusters but for instance allelic clusters of highly expressed single genes , and  <dig> %  from the presumed allelic sequence dataset with d-value more than  <dig>  may be clusters with sequences from lowly expressed paralogous genes  . using this default setting,  <dig>  clusters had a d-value lower than  <dig> , and these were therefore considered to be most likely free of paralogs. we used the same approach to determine the d-value threshold a chicken est dataset of  <dig>  sequences. there were  <dig>  clusters with between 4– <dig> members and  <dig> clusters with 100– <dig> members used to get the d-value threshold. in this case lines were found to be crossing at d-value  <dig>  , and  <dig> %  of the clusters from the presumed paralogous dataset may in fact be allelic clusters from highly expressed genes , whereas  <dig> %  of the clusters of the allelic set most likely contained lowly expressed paralogs .

evaluation of paralogs identification
to evaluate the paralog identification routine of qualitysnp,  <dig> human unigene datasets from ncbi and the human genomic sequence from ucsc were analyzed. qualitysnp was executed on these unigene datasets individually after clustering by cap <dig>  the clusters with a d-value higher than  <dig>   were considered as clusters containing paralogs. for most clusters identified by qualitysnp as paralogous clusters, the consensus sequences  were compared to the human genomic sequence by the blat server of ucsc. for  <dig> of the  <dig>  presumed paralogous clusters the consensus sequences picked up multiple loci in the genome  . further analysis of some of these clusters revealed that separate paralogous genes on the human genome were indeed represented in the clusters. the majority of the clusters identified as paralogous clusters by qualitysnp were from unigene datasets which were related to gene families. for instance, unigene hs. <dig> located on 14q <dig>  and in this region at least  <dig> genes  are present that are highly similar. for this unigene dataset different haplotypes in a paralogous cluster were also found to correspond to different genes .

a clusters with d value more than  <dig>  are considered as clusters containing paralogs by qualitysnp; b clusters with d value more than  <dig>  are considered as clusters containing paralogs. confirmed: number of clusters that were proven to contain paralogous sequences

when the d-value was increased to  <dig> , the number of clusters identified as potentially paralogous decreased from  <dig> to 26; 88% of those clusters  were verified by the blat analysis against the human genome.

predicting reliable snps
the quality of the snp data was further improved by taking the quality of the sequence data into account. this was demonstrated with the potato est dataset, figure  <dig> shows the relationships between the length of the low quality region and the number of potato est sequences. the threshold for high quality region of sequences was a minimum average phred score of  <dig> in a  <dig> nucleotides sliding window. from figure  <dig> it is clear that the low quality region  at the beginning  of sequences was shorter than the lq region at the 3' end. at the 5' side of the sequences, 90% had a lq of less than  <dig> nucleotides . at the 3'-end, a large number of sequences had lqs of over  <dig> nt. setting a fixed nucleotide limit would either exclude many sequences with short lqs, or include many sequences with large lqs at the 3'-side. figure 4b shows that there is a relationship between the length of the lq at the 3'-side and the total length of the sequence. therefore we set the lq to  <dig> nucleotides from the 5' side and 20% of the whole sequence for the 3' side as the default settings. in formula  <cit>  and  <cit>  for mahap and mihap, the default value of the weight values for hq  or lq  were set to  <dig> , but these can be adjusted according to the data quality. for example, if sequences in low quality regions are very bad, the parameters can be set to wl =  <dig>  and wh =  <dig> . in filter  <dig> confidence scores are calculated .

using the default settings the major and minor allele haplotype score were calculated and this resulted in a selection of  <dig>  reliable snps from the potato est dataset from a total of  <dig> . an additional  <dig>  snps with confidence scores less than  <dig> were dropped from the set of snps which left  <dig>  reliable bi-snps including  <dig> indels. the ratio of transitions  and transversion  was  <dig>  , the frequency of reliable snps was one snp per  <dig> nucleotides, and the frequency of indels was one per  <dig>  nucleotides .

the accuracy of the determination of snp reliability from sequence data only was evaluated by using another potato est dataset from tigr that included quality files. in this dataset  <dig>  potential snps were detected by filter  <dig>  of these  <dig>  reliable snps were identified by filter  <dig>  and  <dig>  were attributed a high confidence score,  by filter  <dig>  the snp quality score was calculated by an additional filter from quality files . the distribution of potential , reliable  and hcs  snps over the phred quality scores is shown in figure  <dig>  after filter  <dig>  66% of the reliable snps had a quality score above  <dig>  applying filter  <dig> increased the percentage of reliable hcs snps with a quality score above  <dig> to 78%.

predicting non-synonymous snps
depending on the research context, users of the pipeline may have an interest in predicting non-synonymous snps. this is in particular the case for studies involving protein structure and functional domains, where snps might affect the function of a protein. the uniprot database was searched with the consensus sequences of  <dig> clusters of potato dataset . fasty identified  <dig>  contigs with an open reading frame  that matched entries in the uniprot database, including  <dig> contigs which were corrected for frameshifts. this indicates that the uniprot had sufficient coverage to act as reference protein database for potato. using the fasty results,  <dig>  reliable snps were identified in protein-encoding regions, 34% of these being nssnp, which is similar to the results obtained by other authors: 35% in chicken ests  <cit> , 32% in arabidopsis  <cit> .

validation of reliable snps and comparison with other programs
reliable snps as identified by qualitysnp were validated by experimental data for the potato dataset. for this, we used  <dig> amplified and sequenced loci containing  <dig> snps and one indel identified by qualitysnp in the potato variety kennebec . three snps turned out to be false, and for  <dig> snps the resequencing data was not conclusive, most likely due to the tetraploid nature of potato. the remaining  <dig> snps as well as the indel were confirmed, demonstrating the reliability of the snps identified by quality snp.

up to now, polybayes is considered to be one of the best snp detection programs. however, the program needs the availability of the est trace files or quality files or the genomic sequence in order to perform its task. this limits the usability of polybayes and similar programs, such as polyfreq  <cit>  to cases for which these conditions are met, and therefore excludes the use of est datasets for which no genomic sequences or quality files are available yet. autosnp does not suffer from these limitations. we therefore compared the performance of qualitysnp with autosnp on an identical dataset.

qualitysnp and autosnp were used to identify snps in nineteen individual human unigene datasets. for each cluster of est sequences, the consensus sequence was used to blast against snp loci of dbsnp . each snp from dbsnp that occurs in the consensus sequence was determined by finding the perfect match of its sequence context in the consensus sequence. an snp is considered to be confirmed when the snp locus  matches the consensus sequence for 90% or more and the snp identity  is confirmed. the results are summarized in table  <dig>  as dbsnp is not complete , a number of snps as identified in the est dataset will not match dbsnp entries. nevertheless, in total 35% of the snps identified by qualitysnp were confirmed. this was over four times more than for snps identified by autosnp . qualitysnp identified most of the confirmed snps found by autosnp. moreover, most of the confirmed snps detected by autosnp were also detected by qualitysnp. in addition, qualitysnp  calculated snp much more efficient than autosnp ; it used less cpu time for calculation than autosnp, which is especially evident when large clusters are present.

a candidate snps predicted by qualitysnp; b candidate snps  predicted by autosnp. confirmed: candidate snps are considered as confirmed if they are present in dbsnp. time : the minutes were used to run a program on each unigene.

discussion
haplotype-based strategy for snps detection
we present here a snp identification pipeline called qualitysnp that uses a haplotype-based strategy and reconstructs haplotypes at the start of the snp identification process. this haplotype-based strategy makes full use of redundancy in sequences by clustering them, and in doing so not only reduces the influence of sequencing errors, but also removes poor quality sequences which otherwise would be identified as a haplotype with one single sequence. in the haplotype-based strategy, we eliminate snps that can be due to random and/or systematical sequencing errors  or reverse transcriptase errors.

once haplotypes have been defined and classified, it is possible to choose which snps will be used to diagnose the haplotype present in a genotype. haplotype-based analysis of snps is more informative than analysis based on individual snps only, and is therefore more powerful in analyzing association with phenotypes  <cit> .

haplotype reconstruction
about 96% of the clusters obtained from est sequence data of potato were predicted to contain four or less haplotypes , which shows that our haplotype definition based on potential snps works well. this agrees with the suggestion of rafalski  <cit>  and russell et al.  <cit>  that closely spaced snps will be sufficient to define haplotypes. using the d-value to exclude clusters probably containing paralogs, only 3% of the remaining clusters still contained more than  <dig> haplotypes. this most likely results from incorrect haplotype reconstruction, which could be caused by several reasons. firstly, some sequence errors may occur frequently due to systematic problems in the experimental procedures, and such repeated errors would be considered as valid alleles. secondly, as est sequences are usually much shorter than the corresponding mrna, haplotypes at one end of the cluster sometimes cannot unambiguously be associated with haplotypes at the other end and will therefore be counted as separate haplotypes, raising the total number of haplotypes within one cluster. we checked ten clusters with more than  <dig> haplotypes and d-value less than  <dig> , and found that for five clusters this was indeed the case. thirdly, some paralogs may be highly similar, and may not be distinguishable from alleles. these paralogs may not be filtered out by filter  <dig>  and account for the extra  haplotypes in a cluster.

paralogs identification
the identification of paralogs is an important problem in snp detection, especially in large contigs, which are more likely to contain paralogs and random errors  <cit> . most programs avoid the problem of large clusters by using a maximum cluster size of 20– <dig> for snp discovery  <cit> . our program is not limited by cluster size, and can handle clusters with an arbitrary number of members. snps in potentially interesting  genes are therefore still detected.

paralogous sequences are generally less similar than allelic sequences. this property can be used to identify clusters that are likely to contain paralogs. polybayes is a bayesian method using the dissimilarity rate of paralogs and the polymorphism rate as input to calculate the probability that ests represent paralogs  <cit> . however, this may not be accurate when the polymorphism rate varies substantially between different genes. our method detects clusters with paralogs by calculating the standard deviation  of the number of potential polymorphisms among haplotypes rather than the deviation from the mean polymorphism rate, and is therefore still able to reliably detect snps in highly variable allelic sequences. discrimination of paralogs based on d-value is applicable if at least three haplotypes are detected in a cluster.

for our potato dataset, with the threshold d-value set to  <dig> , 14% of the clusters with a high probability of containing paralogs were excluded from snp detection. for the chicken dataset the d-value threshold set to  <dig> , leaving 6% clusters with potentially paralogous sequences. the higher d-value threshold for the chicken dataset and the lower numbers of false positive and false negative clusters are most likely the result of the better quality of chicken sequence data compared to the potato data. in addition, the differences between chicken and potato may be partly accounted for by the fact that the potato genome is likely to contain more paralogous genes than the chicken genome, as gene duplication events in potato have occurred more frequently than in the chicken genome. indeed, the paralog content of the chicken genome is relatively low even compared to the human genome  <cit> .

the study with the human unigene datasets  demonstrates what the consequences are of different d-value threshold settings. when the d-value threshold was increased from  <dig>  to  <dig> , 53%  clusters confirmed with paralogs on the human genome with d-value threshold  <dig>  were now wrongly designated allelic sequence clusters. increasing the d-value will allow discovery of snps in additional clusters, but the percentage paralogous clusters of these additional clusters is also higher, which will decrease the reliability of the discovered snps. the most reliable set of snp will therefore be produced at low d-values. quality snp enables the user to set d-value thresholds. this means that a user can decide to have the most reliable snp dataset and use a low d-value threshold. however, if the user is interested in a gene that is represented in a cluster with a higher d-value, the d-value threshold can be increased, allowing this cluster to be investigated for snps by qualitysnp.

reliability of snps discovered by qualitysnp
several steps in the qualitysnp pipeline are designed to improve the reliability of the snp output of the program, while still being able to work with datasets from as many crops as possible . these steps include 1) the mihap/mahap calculations and settings and using the high confidence scores which effectively eliminates most of the snps identified in presumably low quality sequence regions  and 2) haplotype reconstruction and using d-value thresholds for filtering out paralog-containing clusters . in qualitysnp, most of the settings can be adjusted according to the user's preference.

the reliability of snps produced by qualitysnp is illustrated by the fact that nearly all of the  <dig> potato snps  and an indel that we were able to evaluate by sequencing were indeed confirmed. in addition, our validation of the snp output of qualitysnp using human est and snp data demonstrates that qualitysnp outperforms autosnp, producing a higher number as well as more reliable snps than autosnp. the percentage of snps confirmed by comparison to dbsnp may appear relatively low . however, dbsnp is a public-domain archive for a broad collection of simple genetic polymorphisms , and although the number of snps in dbsnp increases everyday, it does not cover most of the snps present in the human genome. therefore, it is likely that a number of true snps will not find a match in the dbsnps, and therefore can not be confirmed.

retrieval system
qualitysnp includes a retrieval system that allows the user to extract additional useful information from the analysis. for instance, information about the nature of the snps  can be made part of the output. the snp output can be modified by changing the reference genotype, and the d-value setting can be used to adjust the stringency with which paralogous clusters are detected and excluded. this may be very useful when focusing on a specific gene family where alleles of different paralogous sequences need to be identified. statistics concerning the number of different types of snps and clusters can be included in the output. searching parameters include the contig reference number, genbank/embl/ddbj accession number of ests, and unigene id; output options include snp information, alignment information, est function annotation information and orf information of the contig. the snp retrieval system based on the potato data is available at the website  <cit> .

CONCLUSIONS
in conclusion, qualitysnp works at least as well as, and in cases outperforms currently available methods, without the drawbacks of some of them, such as the necessity to provide a genomic sequence or sequence quality files. however, if quality files are available, this information can also be used by qualitysnp. by using a haplotype-based strategy, qualitysnp not only predicts reliable snps but also identifies haplotypes, and thus can be used in est-based genotyping.

another advantage of qualitysnp over other programs for snp detection in nucleotide databases is the availability of a retrieval system that can output various kinds of data. although qualitysnp can be used as a snp detection tool with default settings, it can also be used for instance to examine specific clusters of genes, or to find nssnps in candidate genes.

authors' contributions
bv, jl and jt identified the need to develop the program, initiated the project, and designed its basic functionality. jt designed the algorithm and wrote the source code. all authors contributed to the overall design and feature requirements, and participated in the drafting of the manuscript and approved the final version.

supplementary material
additional file 1
qualitysnp. the source code of qualitysnp; the file is unpacked by using the command "gunzip qualitysnp.tar.gz", and then use "tar -xvf qualitysnp.tar" on a unix/linux computer.

click here for file

 additional file 2
testqualitysnp. a dataset for testing qualitysnp;the file is unpacked by using the command "gunzip testqualitysnpseq.tar.gz", and then use "tar -xvf testqualitysnpseq.tar" on a unix/linux computer.

click here for file

 additional file 3
qualitysnp manual. the manual of qualitysnp

click here for file

 acknowledgements
thanks are due to david edwards  for his data and program, and to martijn van kaauwen  for expert technical assistance in the snp validation in potato. this research was supported by the dutch ministry of agriculture, nature and food quality .
