BACKGROUND
the research of this article was originally motivated by two types of network models: correlation networks and multigraphs. after reviewing these special network models, we describe how structural insights gained from them can be used to tackle research questions arising in the study of general networks specified by network adjacencies and more generally to unsupervised learning scenarios modeled by similarity measures.

background: adjacency matrix and multigraphs
networks are used to describe the pairwise relationships between n nodes . for example, we use networks to describe the functional relationships between n genes. we consider networks that are fully specified by an n × n adjacency matrix a = , whose entry aij quantifies the connection strength from node i to node j. for an unweighted network, aij equals  <dig> or  <dig>  depending on whether a connection  exists from node i to node j.

for a weighted network, aij equals a real number between  <dig> and  <dig> specifying the connection strength from node i to node j. for an undirected network, the connection strength aij from i to j equals the connection strength aji from j to i. in other words, the adjacency matrix a is symmetric. for a directed network, the adjacency matrix is typically not symmetric. unless we explicitly mention otherwise, we will deal with undirected networks. in this paper the diagonal entries aii of the adjacency matrix a have no special meaning. we arbitrarily set them equal to  <dig> ; other authors set them equal to  <dig>  <cit> .

in an  multigraph, the adjacencies aij = nij are integers specifying the number of edges between two nodes. a general similarity matrix  can be interpreted as a weighted multigraph. in each of the network types, the connectivities 

  ki=∑j≠iaij 

are important statistics pertinent to finding highly connected hubs. in an unweighted network , ki is the degree of node i.

background: correlation- and co-expression networks
network methods are frequently used to analyze experiments recording levels of transcribed messenger rna. the gene expression profiles collected across samples can be highly correlated and form modules  corresponding to protein complexes, organelles, cell types, and so forth  <cit> . it is natural to describe these pairwise correlations in network language. the intense interest in co-expression networks has elicited a number of new models and statistical methods for data analysis  <cit> , with recent applied research focusing on differential network analysis and regulatory dysfunction  <cit> .

a correlation network is a network whose adjacency matrix a =  is constructed from the correlations between quantitative measurements summarized in an m × n data matrix x = . the m rows of x correspond to sample measurements , and the n columns of x correspond to network nodes . the jth column xj of x serves as a node profile across the m samples. a correlation network adjacency matrix is constructed from the pairwise correlations corr in either of two ways. an unweighted gene co-expression network is defined by thresholding the absolute values of the correlation matrix. a weighted adjacency matrix is a continuous transformation of the correlation matrix. for reasons explained in  <cit> , it is advantageous to define the adjacency aij between two genes i and j as a power β ≥  <dig> of the absolute value of their correlation coefficient; thus, 

 aij=|corr|β. 

weighted gene co-expression networks have found many important medical applications, including identifying brain cancer genes  <cit> , characterizing obesity genes  <cit> , understanding atherosclerosis  <cit> , and locating the differences between human and chimpanzee brains  <cit> . one of the important steps of weighted correlation network analysis is to find network modules, usually via hierarchical clustering. each module  is then represented by the module eigengene defined by a certain singular value decomposition . suppose y denotes the expression data of a single module  after the appropriate columns of x have been extracted and standardized to have mean  <dig> and variance  <dig>  the svd of y is the decomposition y=udvt, where the columns of u and v are orthogonal, d is a diagonal matrix with nonnegative diagonal entries  presented in descending order, and the superscript t indicates a matrix or vector transpose. the sign of the dominant singular vector u <dig>  is fixed by requiring a positive average correlation with the columns of y; u <dig> is referred to as the module eigenvector or eigengene. one can show that u <dig> is an eigenvector of the m×m sample correlation matrix 1myyt corresponding to the largest eigenvalue. the eigenvector u <dig> explains the maximum amount of variation in the columns of y.

let di be the ith singular value of y. the eigenvector factorizability 

 ef=|d1|4∑j|dj| <dig> 

measures how well a network factors  <cit> . this measure is very similar to the proportion of variation explained, d12/∑dj <dig>  one can prove  <cit>  that when ef ≈  <dig>  the correlation matrix y approximately factors as 

 corr≈corrcorr. 

in co-expression networks, modules are often approximately factorizable  <cit> . for a network comprised of multiple modules, it should come as no surprise that when the eigenvector factorizabilities of all modules are close to  <dig>  the correlation network factors as 

  aij≈|corr|β|corr|β|corr|β≈pipjrcicj, 

where u1ci is the module eigenvector of the module containing i, pi=|corr|β measures the intramodular connectivity  of node i with respect to its module, and rcicj=|corr|β measures the similarity between clusters ci and cj. the quantity 

  kmei=corr 

is called the module membership measure or conformity  <cit> .

unlike general networks, correlation networks allow assessment of the statistical significance of an edge  and generate informative network statistics such as the module eigenvector. but correlation network methods can only be applied to model the correlations between numeric variables. an open question is whether correlation network methods can be generalized to general networks by defining a suitable decomposition of a general network similarity measure. in the following, we will address this question.

RESULTS
cpba is a sparse approximation of a similarity measure
consider a general n×n symmetric adjacency matrix a, for example one generated by a multigraph. because the diagonal entries of a are irrelevant, a is determined by its n <dig> upper-diagonal entries. we now describe a low-rank matrix approximation to a based on partitioning the n nodes into k clusters labeled  <dig> …,k. motivated by , our approximation of a general similarity relies on three main ingredients. the first is a cluster assignment indicator c =  whose entry ci equals a when node i belongs to cluster a. the cluster label a =  <dig> is special and is reserved for singleton nodes outside any of the “proper” clusters. the clusters are required to be non-empty except for the improper cluster  <dig>  the second ingredient is a k×kcluster similarity matrix r =  whose entries quantify the relationships between clusters. the third and final ingredient is the propensity vector p =  whose components quantify the tendency  of the various nodes to form edges. the goal of cluster and propensity based approximation  is to construct an approximation to a by optimally choosing the cluster assignment indicator c, the cluster similarity matrix r, and the propensity vector p. cpba assumes that the adjacency matrix aij can be approximated as 

  aij≈rcicjpipj. 

the right-hand side with k2+n parameters can be interpreted as a sparse parametrization of the left-hand side with n <dig> parameters. in a weighted correlation network, the propensity pi of node i is approximately |kmei|β. the cluster similarity rab, defined by the correlation |corr|β between eigengenes, is an intuitive measure of the interactions between modules. the diagonal entries raa of r are identically  <dig> 

objective functions for estimating cpba
in practice, cpba parameters c, p, and r of a general similarity are unknown and must be estimated by optimizing a suitably defined objective function. in this article, we describe estimation methods that are based on optimizing two superficially different objective functions. our first objective is just the squared frobenius matrix norm 

  frobenius=∑i∑j≠i <dig>  

our second objective is the poisson log-likelihood 

  poisson=∑i∑j≠ilnaije−rcicjpipjaij!=∑i∑j≠iaijln−rcicjpipj−ln. 

our later multigraph example interprets poisson in this traditional sense. the functional form of the poisson log-likelihood even applies when the aij are non-integer. the factorial aij!, which is irrelevant to maximization in any case, can then be defined via the gamma function. in practice maximization of the poisson log-likelihood and minimization of the frobenius norm yield very similar numerical updates.

in the methods section, we describe a powerful mm algorithm for optimizing the objective functions and estimating its parameters. we now pause and briefly describe a few major applications. first, the sparse parametrization can be used to derive relationships between network statistics; our previous research highlights this possibility  <cit> . for example, the connectivity index  can be approximated by 

  ki=∑j≠iaij≈pi∑j≠ircicjpj. 

second, since our optimization algorithms also strive to choose the best cluster assignment indicator c, they naturally give rise to clustering algorithms. cluster reassignment is carried out node by node in a sequential fashion. for the sake of computationally efficiency, all parameters are fixed until node reassignment has stabilized. if parameters are updated as each node is visited, then the computational overhead seriously hinders analysis of networks with ten thousand nodes. our limited experience suggests that more frequent re-estimation of parameters is less likely to end with an inferior optimal configuration. hence, the tradeoff is complex.

other major uses depend on the underlying model. in the frobenius setting, the model can be used to generalize conformity-based decomposition of a network as shown in example  <dig>  in the poisson log-likelihood setting, our model suggest a new clustering procedure. in contrast to other clustering procedures, the cpba models provide a means of relating clusters to each other via the cluster similarities rab. furthermore, likelihood based objective functions permit statistical tests for assessing the significance of an edge. for example, in the multigraph model, the significance of the number of connections between two nodes can be ascertained by comparing the observed number of connections to the expected number of connections under the poisson model. finally, likelihood based objective functions provide a rational basis for estimating the number of clusters in a data set.

in the following three examples, we illustrate how to generalize a variety of network models to include clustering.

example 1: generalizing the random multigraph model
we recently explored a random multigraph model  <cit>  that allows multiple edges to form between two nodes and edges to form with different probabilities. edges still form independently. under the random multigraph model, each node i is assigned a propensity pi. the random number of edges between nodes i and j is then assumed to follow a poisson distribution with mean pipj. this model relies entirely on propensities and ignores cluster similarities. we will refer to it as the pure propensity poisson model  to avoid confusion with cpba. thus, the ppp log-likelihood is 

  pure propensity poisson=∑i∑j≠ilnaije−pipjaij!=∑i∑j≠iaijln−pipj−ln=∑i∑j≠inijln−pipj−ln, 

where aij=nij is the number of edges between nodes i and j. while future work could explore alternatives to the poisson distribution, it is attractive for several reasons. first, it is the simplest model that gives the requisite flexibility. second, a poisson random variable accurately approximates a sum of independent bernoulli random variables. a binomial distribution also serves this purpose, but it imposes a hard upper bound on the number of successes. third, the poisson model is convenient mathematically since it yields nice mm updates in maximum likelihood estimation of the model parameters  <cit> . fourth, a likelihood formulation permits testing for statistically significant connections between nodes.

although the parametrization  of ppp is flexible and computationally tractable, it ignores cluster formation. to address this limitation, we propose to exploit the cpba parametrization. this extension is natural because many large multigraphs appear to be made up of smaller sub-networks, often referred to as modules, that are highly connected internally and only sparsely connected externally. for example, consider a co-authorship multigraph where an edge is placed between two scientists whenever they co-author an article. scientists working at the same institution and in the same department tend to be highly connected. similarly, scientists tend to collaborate with other scientists working on the same research topics. cluster structure is also inherent in biology. for instance, genes often function in pathways, and proteins often cluster in evolutionary families. thus, when a network exhibits clustering, the propensity to form connections within a cluster is usually higher than the propensity to form connections between clusters. this phenomenon cannot be modeled using our original ppp model  <cit>  and provides the motivation for injecting cluster similarity into the multigraph model. our hope is that the cpba based multigraph model will better account for differences in intracluster and intercluster connections and lead to better identification of significant connections. in the absence of an explicit model for clustering, the ppp model is likely to falter on a dataset that exhibits clustering. the most likely result is a host of significant connections between nodes in the same cluster since they all exhibit more edges than expected by chance. these types of significant connections are often uninteresting. in the above mentioned co-authorship network, the cluster structure may reflect institutional affiliations. in this case, it may be more interesting to identify pairs of researchers who publish more  than is expected based on their workplace location.

to keep the number of parameters to a minimum, the cluster similarity matrix r =  is assumed to be symmetric with a unit diagonal. thus, our new random multigraph model, cpba, adds just k <dig> parameters for k clusters. as previously postulated, the number of edges between nodes i and j in clusters ci and cj is poisson distributed with mean rcicjpipj.

example 2: generalizing the conformity-based decomposition of a network
to demonstrate the value in our clustering model and tap into the wealth of data on weighted networks  <cit> , we propose a clustering extension. because weighted networks by definition have edge weights in  <cit> , we drop the poisson assumption and instead minimize the frobenius criterion . a major benefit of this model is that it generalizes the conformity-based decomposition of a network  <cit> . an adjacency matrix a =  is exactly factorizable if and only if there exists a vector f =  with non-negative elements such that 

  aij=fifj 

for all i≠j. in this setting, fi is often called the conformity of node i. although the term factorizable network was first proposed in  <cit> , numerous examples of these types of networks can be found in the literature. a physical model for experimentally determined protein-protein interactions is exactly factorizable  <cit> . in that model, the affinityaij between proteins i and j is the product of conformities fi = exp, where αi is the number of hydrophobic residues on protein i. since it can be shown that f is uniquely defined if the network contains n ≥  <dig> nodes and all aij >  <dig>  <cit> , it is easy to see that the propensity vector matches the conformity vector, p = f, when all rab =  <dig>  even when a network is not factorizable, our method can estimate conformities while simultaneously clustering the nodes into more factorizable modules. in addition, the entries of the cluster similarity matrix r can be interpreted as adjacencies between modules. thus, the cluster similarity matrix represents a network whose nodes are networks themselves. in correlation network applications, we proposed a similar measure  <cit> , and for gene networks we defined a measure of the probability of overlap between gene enrichment categories. although these measures are useful in their respective contexts, they cannot be generalized to other networks. in contrast, by incorporating cluster similarity into our model, we have a standard way of calculating these measures for any type of network.

mm algorithm and r software implementation
our software implementation of cpba is freely available in the r package propclust. on a laptop with a  <dig>  ghz i <dig> processor and  <dig> gb of ram, propclust can estimate the parameters for  <dig> nodes for a given cluster assignment in  <dig>  seconds. for  <dig> nodes, the same analysis takes  <dig> second. in practice, initial clusters are never perfect and must be re-configured as well. propclust adopts a block descent  strategy that alternates cluster re-assignment and parameter re-estimation until clusters stabilize. block descent takes under  <dig> rounds on average if initial cluster assignments are good. note that all parameters are fixed in cluster re-assignment, and all clusters are fixed in parameter re-estimation. furthermore, both steps decrease the value of the objective function. early versions of propclust re-estimated parameters as each node was moved. this tactic proved to be too computationally burdensome on large-scale problems despite its slightly better performance in finding optimal clusters.

judicious choice of the initial clusters is realized by a divide-and-conquer strategy. first, hierarchical clustering coupled with dynamic branch cutting  <cit>  is used to cluster nodes into manageable blocks of user-defined maximum size, for instance at most  <dig> nodes each. second, the cpba algorithm is applied to each block to arrive at clusters within blocks. our co-expression network application shows that this initialization procedure works well even in large data sets. another way to accelerate clustering is exploit parallel processing in the mm algorithm. parallelization of the mm algorithm is easily achieved since the parameters separate in the surrogate function and updating the propensities via  and  requires only the previous parameter values. cluster re-assignment avoids continuous optimization altogether and is very fast.

simulated clusters in the euclidean plane
our first simulated dataset suggests a geometric interpretation of propensities and cluster similarities. for this dataset we simulated four distinct clusters on the euclidean plane by sampling from a rotationally symmetric normal distribution with covariance matrix i and means corresponding to the four cluster centers shown in figure 1a. the numbers of points in the four clusters were  <dig>   <dig>   <dig>  and  <dig>  respectively. the adjacency between two points is defined as 1− <dig>  where dist denotes euclidean distance between the points and max denotes the maximum distance between any two points. thus as depicted in figure 1b, points closer together have a higher adjacency than those further apart. as anticipated, the mm algorithm provided the correct cluster assignments. figure 1c also makes it evident that the estimated propensity of a point is significantly correlated to the euclidian distance between the point and its cluster’s center. this result is expected since a connectivity ki is related to a propensity pi through equation . within a module, connectivity is also related to its cluster’s center through the formula 

  ki=−n||xi−x¯||2+∑j||xj−x¯||2max 

where n is the number of nodes in the cluster, xi is the position of node i, and x¯ is the position of the cluster center  <cit> . this formula also explains why there is a separate line for each cluster in figure 1c. finally, figure 1d shows that the cluster similarity rkl of clusters k and l is significantly correlated to the distance between the centers of k and l. in summary, a propensity can be viewed as a measure of the centrality of a node, while a cluster similarity reflects the distance between two cluster centers.

simulated gene co-expression network
to illustrate how cpba generalizes to weighted correlation networks, we simulated gene expression data using the simulatedatexpr5modules function in the wgcna package in r  <cit> . given the simulated expression data, we calculated pearson’s correlation coefficient for each pair of genes and formed an adjacency matrix. applying cpba based clustering to the simulated data led to clusters that overlap perfectly with the simulated clusters. as figure  <dig> depicts, the estimated propensities pi are very significantly correlated to the node connectivities ki. this strong relationship reflects . furthermore, as seen in figure  <dig>  cluster similarity is significantly correlated to true eigengene adjacency, namely, rcicj≈|corr|β. in both simulations several different cluster assignment initializations were tried and all led to the same, correct, result.

real gene co-expression network application to brain data
in this real data example, we demonstrate that cpba generalizes weighted correlation network analysis and can deal with fairly large data sets. the human brain expression data in question were measured on the affymetrix u133a platform  <cit> . following oldham et al.  <dig>  <cit> , we restrict our analysis to the roughly  <dig> probes that were highly expressed in brain tissue. the biological modules discovered by oldham et al.  <dig>  <cit>  via wgcna are fairly well understood and correspond to cell types such as astrocytes, oligodendrocytes, and neurons enriched for specific cell markers. in re-analyzing these data, we defined initial clusters as sketched in our discussion of the r software implementation of cpba. this strategy obviates the need to pre-specify the number of clusters present in a data set. the results of propclust are depicted in the second color band of figure 3a. overall, we find that cpba yields modules very similar to those identified by wgcna. the overlap with the well annotated modules of oldham et al.  <cit>  shows that the two clustering procedures yield meaningful and nearly equivlaent modules. cpba has the advantage of giving cluster similarities. figure 3b shows that eigengene based network adjacency  is highly correlated  with the cluster similarity parameter calculated by cpba. for genes within a given module, figures 3c-e demonstrate that the node propensities estimated under cpba are highly correlated with the module membership measures kme raised to the soft thresholding power  <dig>  finally, figures 3i-j show that the connectivities ki in the correlation network are highly correlated  with the connectivities calculated under the cpba approximation and with the corresponding cpba propensities . figure 3k shows that there is a high correlation  between cpba based connectivity  and the propensity parameter.

these results demonstrate that cpba is roughly equivalent to wgcna in a typical co-expression network. we expect that cpba will also be helpful in understanding network topology. for example, figure 3f shows that the weighted co-expression network satisfies the approximate scale-free topology  property. future research should aim to characterize the general fit of cpba parameters to the sft property. in this example, the cpba based connectivities and propensities shown in figures 3g and 3h agree well.

omim disease and gene networks
here we present an application that is not amenable to correlation network models but is arguably well suited for multigraph models. specifically, we consider a bipartite multigraph between genes and diseases based on curated data from the reference online mendelian inheritance of man , which tracks published links between diseases and corresponding genes  <cit> . these data were previously studied in detail by goh et al.  <cit> , who showed that diseases and their associated genes are related at higher levels of cellular and organ function. in the current application we validated their functional clustering using the cpba model.

following goh et al.  <cit> , we analyzed the data in two ways. first we created a disease network by placing an edge between two diseases for each gene they were both linked to. only the links labeled as high quality by omim were considered. this construction yielded a multigraph of  <dig> diseases with  <dig> diseases connected to at least one other disease. we created a second, complementary multigraph by placing an edge between two genes for each disease they were both linked to. for this multigraph, there were  <dig> genes with  <dig> genes connected to at least one other gene. as suggested by the medical subject headings  list  <cit> , we applied the cpba model with k= <dig> clusters for the gene network and k =  <dig> clusters for the disease network, leaving out irrelevant categories.

we categorized the diseases using mesh with little success. nearly half of the diseases  were not mapped to any category, and another 36% were mapped to multiple categories. using the clustering obtained from the cpba analysis of the disease network, we looked at whether any mesh categories were overrepresented in a cluster. ignoring diseases present in multiple mesh categories, we found  <dig> significant categories at p <  <dig> , including neoplasms, musculoskeletal diseases, and eye diseases . although significant results were obtained, only a handful of diseases in each cluster contributed to the statistic. upon closer inspection of the clusters, we found that many seemingly well-defined diseases were either not mapped or multiply mapped. for example, the eye disease cluster contains morning glory disc anomaly, coloboma, best macular dystrophy, cone-rod retinal dystrophy, and iris hypoplasia which are all clearly eye diseases, but not classified as such by mesh. the eye disease cluster is depicted in figure  <dig> 

additionally, we found  <dig> significant connections between diseases at p <  <dig>  and  <dig> significant connections at p <  <dig> . the top  <dig> connections are listed in table  <dig>  the disease pair adrenoleukodystrophy and zellweger syndrome came in first; these two diseases are two of only three peroxisome biogenesis diseases belonging to the zellweger spectrum  <cit> . it is also interesting to look for highly connected hub clusters, namely, clusters with high similarity to several other clusters. to define a measure of cluster connectivity, one can use the row sum of the cluster similarity matrix r. the neoplasm cluster has the highest row sum and is the cluster with the highest cluster connectivity. this makes sense given the complexity and diversity of cancers within the cluster.

looking at the complementary gene network, we checked for overrepresentation of gene ontology  terms using bingo on cytoscape  <cit> . we found that each cluster had an overrepresentation of many go terms. in the cluster with the well-known tumor suppressor protein tp <dig>  we found  <dig> statistically significant go terms at p <  <dig> . of these,  <dig> terms are still significant at p <  <dig>  after accounting for multiple testing. the top  <dig> go terms include both positive and negative regulation of cellular and biological processes, regulation of cell proliferation, anatomical structure development, regulation of apoptosis, and others that are clearly associated with tp <dig>  finally, we found  <dig> significant connections between genes at p <  <dig>  and  <dig> at p <  <dig> . the top  <dig> connections are listed in table  <dig>  many of these gene pairs are known to interact from other supporting evidence. for example, interaction between the top ranking pair, hemoglobin alpha  <dig> globin chain  and hemoglobin subunit beta , is confirmed by their co-crystal structure in x-ray crystallography  <cit>  and by automated yeast two-hybrid  interaction mating  <cit> . figure  <dig> depicts the full gene network derived from omim.

empirical comparison of edge statistics
in this section we compare our current cpba model with our original pure propensity poisson  model on two real datasets: the omim disease network and the complimentary omim gene network. on the whole we find that the cpba model produces more plausible p-values for the edge-count tests. conditioning on clusters enables cpba to detect significant intercluster connections often missed by the ppp model. it also produces more reasonable p-values within clusters since propensities are not artificially deflated by the lack of connections between nodes from different clusters. we now consider how these trends play out in the omim disease network and the omim gene network.

in the disease network we find that, among the  <dig> most significant connections under the cpba model,  <dig> are intercluster connections . under the ppp model in contrast, none of the  <dig> most significant connections link different cpba clusters . in fact, none of the top  <dig> connections of the ppp model occur between different cpba clusters. the significant connection between usher syndrome and retinitis pigmentosa would have gone completely unnoticed under the ppp model. this would be a shame because retinitis pigmentosa is a major symptom of usher syndrome  <cit> . another missed intercluster pairing, waardenburg syndrome and craniofacial-deafness-hand syndrome, also deserves recognition since both syndomes involve deafness and common facial features  <cit> .

comparing the intracluster connections, we find that cpba and ppp produce similar results, with  <dig> connections present in both lists. however, the p-values of these connections differ sharply under the two models. since the ppp model essentially assumes a single cluster, estimated propensities trend lower in response to the lack of connections between nodes from different clusters. this results in lower means for the poisson distributions and more extreme p-values. this phenomenon is especially evident in the pairing between adrenoleukodystrophy and zellweger syndrome; in the cpba model the test for excess edges has −log <dig> =  <dig> , whereas in the ppp model −log <dig> =  <dig> .

the same story holds for the gene network. among the  <dig> most significant connections under cpba,  <dig> are intercluster connections . under the ppp model the corresponding number is  <dig> . one of the more interesting missed connections occurs between bdnf  and htr2a . both genes are associated with attention in schizophrenia  <cit> . as for intracluster connections, all intracluster connections found in the cpba list are also found in the ppp list. however, the p-values for the most significant pair  differ by almost  <dig> orders of magnitude.

to summarize, the cpba model was able to find significant intercluster edge counts that the ppp model missed. indeed, the ppp model was unable to find a single signficant intercluster pair in either data set. although conditioning on clusters resulted in less impressive intracluster p-values, the cpba model was still able to detect most of the significant intracluster pairings found by the ppp model. figure  <dig> provides a scatterplot of −log <dig> for all significant connections obtained under either model. points are colored red if they represent a pairing within a cluster and black if they represent a pairing between different clusters. the figure justifies our contentions that the cpba model is more sensitive to intercluster connections and less sensitive to intracluster connections than its less nuanced competitor. so while there will be fewer significant intracluster connections, they will arguably be more interesting. most likely these virtues of the cpba model carry over to other data sets.

simulations for evaluating edge statistics
to drive home the last point, we took a block diagonal adjacency matrix containing 1’s in its diagonal blocks and 0’s in its off-diagonal blocks and introduced a few off-block connections. in our initial matrix with three diagonal blocks of  <dig>   <dig>  and  <dig> nodes, we changed  <dig> off-block entries from 0’s to 1’s. each pair of node sets accounted for  <dig> of these switches. we then analyzed the modified matrix under both the cpba and ppp models. figure  <dig> plots −log <dig> versus true adjacencies for the modified entries. based on its identification of clusters, the cpba model yields a better fit to the data. comparison of −log <dig> values under the two models shows that cpba is more adept at finding significant intercluster connections. the evidence from the receiver operating characteristic  curve is very convincing on this point. the area under the roc curve for the cpba model was  <dig>  compared to just  <dig>  for the ppp model.

hidden relationships between fortune  <dig> companies
to illustrate the utility of cpba in a non-biological setting, we briefly describe a multigraph model of cross-company management. specifically, we took the fortune  <dig> companies of  <dig> and put an edge between two companies for each shared member on their boards of directors. the original data is found in freebase  <cit> . as discussed below, the use of the bayesian information criterion  or the akaike information criterion for estimating clusters is problematic. for example, the bic suggests an optimal number of clusters k around  <dig>  while the aic gives a less plausible value of k >  <dig>  in the following, we assume k =  <dig> clusters. it is noteworthy that most companies do not cluster into groups of related industries. this makes sense because conflict of interest norms preclude companies in the same field from sharing board members. overt clustering is consequently discouraged.

based on the underlying probability model, we ascertained the significance of the edge counts for company pairs. table  <dig> lists the  <dig> most significant connections under the 10-cluster model. several connections stand out. the significant pairing between fidelity national financial and fidelity national information services is rather obvious. the same holds for the pairing between autozone and autonation inc. other connections are less obvious. the pairing between general motors and dupont may reflect the fact that pierre du pont, the founder of dupont, at one point owned a third of all general motors stock. this remained true until federal antitrust prosecutors filed suit, and the supreme court ruled against dupont, forcing the company to dispose all of its gm shares in  <dig>  <cit> . although the shares are gone, it seems that some ties persist.

relationship to other network models and future research
because so much effort has been devoted to the mathematical and statistical explication of complex networks, we can only touch on the relationship of the cpba parametrization to other network models. complex networks can be described by random graphs , small-world models , scale-free networks , and other growing random network  models. these models involve graphs rather than multigraphs, so the number of edges per node pair equals  <dig> or  <dig>  the cpba has interesting ramifications for random graphs with arbitrary connectivity distributions  <cit> . if the edges are placed randomly in a network with such connectivities, then the probability pij of observing an edge between nodes i and j is exactly factorizable. in fact, pij=ki−3kj− <dig>  where ki is the connectivity  of node i <cit> . thus, pij can be well approximated by cpba with propensities pi=ki− <dig> and cluster similarities rab= <dig>  the erdös and rényi  model, which assumes uniform edge probabilities, is too restrictive for realistic networks. the cpba parametrization adapts well to random graphs if we replace the mean edge count with the edge formation probabilities  pij=pipjrcicj1+pipjrcicj. 

this reformulation of the model is consistent with construction of an mm algorithm for parameter estimation  <cit> . future research should explore the topological properties of such models.

growing random networks  are also of interest since many networks grow by the continuous addition of new nodes and exhibit preferential attachment. thus, the likelihood of connecting to a node depends on the node’s current connectivity  <cit> . at each time step of a growing random network  <cit> , a new node is added, and a directed edge to one of the earlier nodes is created. this growing network has a directed-tree graph topology whose basic elements are nodes connected by directed edges. in general, the topology of a general grn is determined by the connection kernel ak, which is the probability that a newly-introduced node forms an edge to an existing site with k edges . future research could explore how to define a connection kernel  so that the resulting network can be well approximated using the cpba of the adjacency matrix. the barabasi-albert  model is an important special case of a grn  <cit>  that leads to a scale-free network. in the ba model, the degree of a node satisfies the power-law  distribution 

 p∼kγ. 

for homogeneous connection kernels, ak∼kν, and scale free networks only arise if ν =  <dig>  <cit> . future research could explore whether the adjacency matrix of the ba model can be well approximated using the cpba. toward this end it may useful to observe that the probability pij of finding an edge between nodes i and j in the ba model is given by  <cit> 

 pij=4ki 

 which, importantly, assumes that node i with connectivity ki was added later to the growing network than node j . in view of this temporal assumption, pij is not symmetrical in i and j; it also contains no parameters to capture clustering. thus, there is no obvious relationship between the ba model and the cpba approximation of a network. future research can investigate how to parameterize preferential attachment so that the resulting probability pij of finding an edge fits well to the cpba.

relationship to other clustering methods
although the mm algorithm that estimates the cpba parameters naturally generates a clustering method, cpba is not just another clustering method. our applications highlight the utility of the parameter estimates and the resulting likelihood based tests. cpba not only provides a sparse parametrization of a general similarity matrix, but it also identifies hub nodes and clusters and enables significance tests for excess edges  and shared similarities . we do not claim that cpba based clustering outperforms existing clustering methods in the simple task of clustering.

substitutes for cpba clustering include hierarchical clustering, partitioning around medoids  <cit> , spectral clustering  <cit> , mixture models  <cit> , component models  <cit> , and many more  <cit> . because cpba can be interpreted as a generalization of weighted correlation network methods, there is no need to invoke it instead of wgcna when it comes to co-expression network applications. in modeling relationships between quantitative variables, one can use a host of other methods, for example sparse gaussian graphical models  <cit> , bayesian networks, and structural equation models. cpba is not meant to replace these powerful approaches for modeling relationships between quantitative variables. its main attraction is that it applies to a general similarity measure. since input data sometimes consists of a similarity  measure, cpba fills a useful niche.

CONCLUSIONS
the current paper introduces the cpba model  for general similarity measures and sketches an efficient mm algorithm for estimation of the cpba parameters. these advances will prove valuable in dissecting networks involving functional or evolutionary modules. the cpba model is attractive for several reasons. first, it invokes relatively few parameters while providing sufficient flexibility for modeling observed similarities. second, the cluster similarity parameters are good at revealing higher-order relationships between clusters. the row sum of the cluster similarity matrix can be used to define a cluster connectivity measure and to identify hub clusters such as the neoplasm hub in the disease network. third, the cpba model naturally generalizes network approximations that are already part of scientific practice, namely, the propensity based approach in multigraph models, the conformity decomposition in weighted networks, and the eigenvector based approximation in correlation networks. fourth, the connections to the mm algorithm make the model well adapted to high-dimensional optimization. fifth, the poisson multigraph version of the model enables assessment of the statistical significance of edge counts and similarities between clusters. sixth, likelihood-based models such as the poisson multigraph model provide a rational basis for estimating the number of clusters. while it is beyond our scope to evaluate different methods for estimating the number of clusters in a data set, it is worth mentioning that our r implementation allows users to initialize clusters via hierarchical clustering. this tactic obviates the need to pre-specify the number of clusters.

using simulated clusters in the plane and simulated co-expression networks, we demonstrate that cpba generalizes existing methods. the planar examples show how a propensity can be intuitively seen as a measure of a node’s closeness to its cluster’s center and how a cluster similarity can be seen as a measure of proximity between two clusters. the simulated gene expression dataset exposes the cpba model’s close ties to the previously studied concepts of intramodular connectivity, module eigengenes, and eigengene adjacency. our analysis of real gene expression data reassures us that cpba clustering results are similar to those of a benchmark method used in co-expression network analysis. the cpba propensity parameters mirror the module eigengene based connectivity kme, and the cluster similarity measures mimic the network eigengenes. in our view, the main value of the cpba model lies in generalizing correlation network methods.

to illustrate the versatility of cpba, we applied it to the gene and disease networks of omim. the evidence that cpba identifies biologically meaningful clusters is readily apparent in the significant enrichment of mesh categories in the disease clusters and in the significant enrichment of go terms in the gene clusters. while many other clustering procedures could have been used, cpba has the advantage of dealing with dissimilarity measures as opposed to numeric input variables. it also provides poisson likelihood based significance tests for edge counts  that respect the underlying cluster structure. finally, the row sums of the cluster similarity measure can be used to define hub clusters, and the estimated propensities can be used to define hub nodes. as we hoped, there were biologically meaningful ties between significantly connected pairs of genes and diseases. several of these biologically plausible explanations are discussed in the text.

although our examples are mainly biological, one can apply cpba in many other contexts. for example, we employed cpba to highlight shared board members among the fortune  <dig> companies. this example illustrates how significant connections mirror the underlying ties between nodes. the edge count significance test suggests that the antitrust suit against gm and dupont was no accident. to its credit, cpba not only generalizes correlation network methods to general similarity matrices, but it also provides a valuable extension of random multigraph methods to weighted and unweighted multigraph data. cpba is not just another clustering procedure but offers unique test statistics that permit identification of hub clusters and significant edge counts. we anticipate that the cpba model will prove attractive to a wide range of scientists.

