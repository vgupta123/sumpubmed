BACKGROUND
protein-protein interactions are essential for living organisms. they are involved in most of the key biological and biochemical processes, such as signal transduction, redox reactions, immune response and protein transport, among many others. thus, understanding protein-protein association is the object of an increasing interest, not only from a basic physico-chemical point of view, but also for biotechnological and therapeutic reasons, with promising applications for drug design. however, experimental data on complex formation is scarce. although in recent years techniques like nmr or x-ray crystallography have fuelled the field of structural biology, the number of known protein-protein complex structures remains low. therefore, the prediction of protein-protein interactions have become one of the most active and creative fields in computational physico-chemistry and biology. strictly the native complex consists of an ensemble of structures belonging to the free energy minimum of the system formed by the receptor, the ligand, and the water and ions surrounding them. thus, in principle, using molecular simulations via molecular dynamics or monte carlo strategies, one should calculate the free energy of the system, and discriminate between native and non native conformations . however, the amount of calculation that must be carried in a system with a pair of medium-sized proteins is prohibitive. in this way, docking strategies follow two main simplifications. on the one hand the native state of the complex is not seen as the ensemble of structures referred below, but as a single structure. on the other hand, free energy calculations are replaced by a scoring function which should distinguish the native structures in a pool of conformations.

most of the docking algorithms are clearly divided in two fundamental parts: the search of conformations, and the scoring function. the first stage should generate a pool of conformations with a sufficient number of them similar to the native complex; the latter should discriminate between the near-native and non-near-native proposed conformations. one of the limitations of current docking simulations is precisely the conformational search phase, which is not able to produce sufficient number of near-native docking solutions within the docking pool that can be correctly identified in subsequent scoring or refinement steps.

there are many available search methods, but most of them can be classified in two basic types: systematic and heuristic. on the one side, systematic sampling methods try to explore the whole or a subspace of the available conformations of the system. the large number of degrees of freedom makes unfeasible a complete conformational search in a reasonable time, so most of the reported docking algorithms treat both proteins of the complex as rigid bodies. this dramatic approximation has worked reasonably well for a significant number of protein-protein complexes, especially those with neither hinge-motions nor disorder-order transitions and where the conformational changes are limited to the side-chains. on the basis of this approach, protein docking has benefited from fast fourier transform   <cit> , spherical polar correlations  <cit>  or geometric-hashing  <cit>  algorithms for a fast search of the position of the interacting molecules, so these have always been the most popular docking methods. however, challenging cases involve major conformational changes upon binding, in which rigid-body docking methods often struggle to find any reasonable solution. another major limitation is that these methods have difficulties in including sophisticated scoring functions to evaluate the docking orientations and thus are mostly based on geometrical criteria such as surface complementarity. a last  problem is that, in most of fft-based methods, one monomer is fixed while the other is translated and rotated. this sampling strategy is obviously not the one that uses nature to face up the interacting proteins, but was chosen for practical issues of implementation. however, as recently reported  <cit> , other sampling techniques based on orientational changes of both molecules can provide a more natural sampling and lead to an improvement of computational efficiency.

on the other side, heuristic searching methods do not need to exhaustively sample the whole conformational space, which presents some advantages, such as being able to include flexibility during the conformational search and use more sophisticated scoring functions. for instance, the icm-disco docking method was based on a monte-carlo search of the ligand molecule using the binding potentials pre-calculated in a  <dig> d grid for the receptor, followed by the optimisation of the ligand interface side-chains in the torsional space  <cit> . these methods can provide more accurate geometries, but they are usually much slower than the systematic fft-based search approaches.

in this paper we will try to overcome the limitations of current docking search methods, and propose an algorithm to uniformly generate docking orientations for a two rigid body system in a fast manner, with potential inclusion of flexibility. the method, to which we refer as rotbus  generates orientations in such a way that subspaces can be easily explored, which would allow to combine the speed of fft-based systematic approaches with the traditional advantages of heuristic methods with no extra cost. the method has been applied to an  <dig> complex benchmark set  <cit> , widely used to evaluate docking algorithms. after filtering the generated conformations with a residue-based solvation potential, they are scored with atom-based pydock scoring function  <cit> .

methods
we describe here new procedures to generate different configurations in a two-protein system, based on uniform sampling of the rotational space of the two interacting proteins and fast calculation of their optimal distance. the two proteins are considered as rigid bodies. in this work, the larger protein is defined as the receptor, and the smaller one the ligand. first we will define uniform distributions of points over the spheres around the interacting molecules. this will be used later to uniformly sample orientations by three different methods, inspired by early work on uniform random rotations  <cit> . finally, for each orientation the optimal distance between these molecules will be calculated.

uniform sampling of molecular orientations
uniform distribution of points around the molecule
in order to define the different molecule orientations , we first needed to generate a uniform distribution of n points around each molecule. the total number of points n depended on the desired sampling resolution, and was calculated as follows. a triangular mesh  was generated on the expanded molecular surface . in this way, the number of vertices of the mesh defines the number of points n that we need to distribute to get a sampling resolution ρ. the expanded molecular surface helped to overcome details on the molecular surface that could otherwise introduce error in the mesh generation, and was calculated by using mmtk module molecularsurface  <cit>  with a probe of radius  <dig> Å. this value is roughly the radius of gyration for a medium-sized protein, so the resolution ρ can be visualized as the distance between the center of mass of different positions of a medium-sized protein in contact with the given molecule. once we calculated the number of points n that we needed to generate in order to do the sampling at a given resolution ρ and according to the geometrical characteristics of the protein, the next step was to distribute the n points over a sphere around the molecule, so that the orientations generated from these points could be uniformly distributed in the rotational space .

the problem of uniformly distributing a given number of points over a sphere has been studied over centuries, and constitutes one of the mathematical challenges of the xxist century  <cit> . in spite of being of critical importance in many scientific disciplines, such as physics, chemistry, and biology, no analytic solution is possible. a naïve approach, based on a uniform exploration of the spherical coordinates, generates a distribution strongly biased to the poles, as can be seen in figure 1b. however, there are geometric algorithms that produce asymptotically correct solutions   <cit> . for the sake of simplicity, we have used here previously reported tables containing the distribution of point unit charges that minimizes the potential energy over a unit sphere   <cit> . when these tables were not available, we used an algorithm based on geometrical considerations  <cit> . the method supposes that when the number of points is high, there is one set of points uniformly distributed that defines a tiling of the sphere by identical squares. considering that each square edge has a certain euclidean length, the method is able to distribute almost uniformly any number of points. this can be seen in figure 1b .

we used these uniform distributions of points around receptor  and ligand  to generate uniformly sets of rigid-body docking orientations by using three different methods, as explained below.

rotational sampling method rrt ()
the first method we devised to generate uniform orientations for receptor and ligand molecules is described as follows. we first generated a series of rotations for the ligand from a distribution of points over a sphere plig using a method based on arvo's work  <cit> . each ligand rotation rlig was generated by i) first performing a rotation of the molecule by a specific angle ψ around the  axis that went through the center of mass of the molecule, and ii) then rotating the molecule so that the north pole pointed towards a point p ∈ plig . in order to ensure a uniform distribution of such defined rotations, the distributions of the angle ψ ∈  and the points p ∈ plig must be uniform, and the number of sampled angle values must correspond to the square root of the number of points in plig. we have generated uniform orientations for receptor and ligand molecules as follows. once the rotations for the ligand rlig were generated as above described, then, for each of them the ligand was translated around the receptor using a uniform set of spherical coordinates  computed from the uniform set of points prec around the receptor . thus, the direction of the translation was defined by the pair of angles ϕ, θ , and then the value of the radial coordinate r that brings both molecules in contact was computed by a new method described later .

rotational sampling method ()
in this second method, the ligand was first translated using the pairs of polar angles ϕ, θ defined from the uniform set of points prec around the receptor . for each ligand position, the ligand was rotated around its center of mass so that every ligand point p ∈ plig ended in the axis that joined the centers of mass of the two molecules . finally, the ligand was rotated around the axis that joined the centers of mass of both molecules. in order to ensure a uniform sampling, as in the first method, the distribution of the angle ψ ∈  and the number of sampled angle values must correspond to the square root of the number of points in plig . finally, for each orientation, the value of the radial coordinate r that brings both molecules in contact was computed as described later .

rotational sampling method rrr ()
in this last method, both receptor and ligand were rotated so that each one of their surface points prec ∈ prec and plig ∈ plig were placed in the axis that joined their centers of mass , being thus each molecule facing towards the other one. then, the ligand was rotated around the mentioned axis . in order to ensure a uniform sampling, as in the other two methods, the distribution of angle ψ ∈  must be uniform, and the number of sampled angle values ψ must correspond to the square root of the number of visited ligand points . finally, the distance r between the centers of mass of the two molecules was computed as described in section "optimal distance between interacting molecules". this is in practice very similar to method trr, but it reproduces in a more "natural" way the actual rotational movement of both molecules when they are interacting.

we have to note that there are other reported methods to sample rigid-body docking orientations  <cit> . for instance, mitchell's method  <cit>  is implemented in well-known fft-based docking programs like zdock  <cit> . however, these programs usually keep a fix number of rotations for all proteins, which implies that large interfaces are sampled with lower efficiency in euclidean distance. with our approach  we wanted to explore the possibility of uniform rotational sampling with fixed euclidean resolution at the sampled interfaces independently on the size of the molecules. our rrr rotational sampling is very similar to the method of ref  <cit> , but they do not include the mutual receptor-ligand twist angle  in the formalism for uniform sampling. for instance, in their manuscript they perform a test using  <dig> vertices and  <dig> twist increments of angle ψ . however, for a uniform rotation plan given  <dig> vertices  only  twist increments would be required.

optimal distance between interacting molecules
for each receptor/ligand orientation, we had to compute the optimal distance r between the centers of mass of the molecules. for this, we projected the molecular surfaces of the molecules as  <dig> d grids on the planes defined through the geometric center of receptor and ligand, respectively, both perpendicular to the axis that joined the geometric centers of the two molecules. the distance from each grid point to the molecular surface was calculated, thus generating a distance-to-surface matrix that represents the grid-projected surface for each molecule. then, the resulting distance r was obtained by the maximum element of the sum of the distance to-surface matrices of receptor and ligand . in order to speed up calculations, we computed these simplified grid-projected surfaces without transforming the molecular coordinates. this made the practical implementation for the last rotational sampling method slightly different from that of the other two methods. the details are explained below.

for the first two rotational sampling methods, rrt and trr, rotations and translations were applied only to the ligand, so the receptor was kept fixed. we first generated a grid representation of the molecular surface for the receptor, as follows. let  be the direction that points from the center of mass of the receptor to a given point p ∈ prec . we defined  and  to form a basis of the perpendicular plane to , so that we generated an equilateral triangular lattice of step λ with them . the equilateral triangular lattice provided a closer packing than a square one, and hence a better resolution. we used a lattice of size  <dig> ×  <dig> cells, with λ =  <dig>  Å. then, for each grid point we took the farthest surface backbone atom  inside the cylinder of radius λ/ <dig>  centered at that point with axis parallel to   . the distance between the grid point and the selected atom is calculated for each grid point, so that we obtained a distance matrix that mimicked the shape of the receptor from each grid point .

applying the algorithm to the ligand is analogous. given the rotation matrix rlig, the ligand has its interaction on the direction given by:   

to find a basis  and  of its perpendicular plane, we used the transformation in equation  <dig> over  and . then we generated a grid defined through the center of masses of the ligand and the corresponding distance matrix for the ligand .

finally we summed both matrices, selected the maximum element that had both summands no null and added ϵ =  <dig>  Å  to this quantity in order to account for the extra volume required to include the side-chains of both proteins. the resulting value was assigned as to r, accounting for the distance between centers of mass that kept the surfaces in contact .

for the third rotational sampling method, rrr, both receptor and ligand molecules were rotated so that the interaction was always on the  axis. then, in order to generate the grid-projected surface of the receptor we took the direction vrec , and the difference with the other two methods for generating rotations is that now we need to generate the vector basis depending on rrec as:   

similarly, for the ligand, we had  as the direction corresponding to the given point p ∈ plig, and the vector basis:   

the rest was computed as above described.

scoring the conformations
we have used pydock  <cit>  for the final scoring of the orientations generated by rotbus. the function, based on electrostatics and desolvation, with weighted van der waals term, is specially suited to study rigid-body protein-protein docking. in the original pydock benchmark  <cit> , a weight of  <dig>  for van der waals term was optimal to tolerate the small number of atomic clashes found in the fft-generated rigid-body docking poses. however, in rotbus docking orientations might not have such good geometric complementarity as in fft-based approaches. thus, in order not to filter out acceptable orientations, we had to consider lowering van der waals weight .

given the large amount of docking orientations generated by rotbus, pydock evaluation became computationally too expensive at high resolution . thus we devised a fast residue-based desolvation scoring. using the atomic parameters σi in a previous work  <cit> , we have first calculated the contribution of each surface residue to the desolvation energy in the individual proteins, :   

then, for each docking orientation the total desolvation energy was computed by summing up the residue contributions in all intermolecular contact residue pairs , as in the following equation:   

the contribution of each residue thus depended on its intrinsic contribution  and on the number of contact pairs formed with residues from the partner molecule. the concern with this approach was that the residues involved in several pairs might be over-represented and thus could contribute excessively to the desolvation energy. however, we checked that in this method  the resulting energy correlated better with the originally described atom-based desolvation energy. the main advantage is that accessible surface area was calculated only once , and thus during the scoring process only distances needed to be computed. this scoring method showed to be much faster than pydock and therefore was used as a pre-pydock scoring filter.

data set for benchmarking
we analyzed the predictive capabilities of rotbus, using a standard benchmark for docking formed by  <dig> protein-protein cases with known x-ray structures both for the unbound and the bound subunits  <cit> . in order to perform a test as much realistic as possible, the orientation of the initial structures was randomized . the success rates of the predictions were defined by the percentage of test cases in which at least one acceptable docking solution was found within the top n solutions. a nearnative or acceptable docking solution was defined as the one that had below  <dig> Å of rmsd of the ligand c-alpha atoms with respect to the corresponding ones in the reference structure, after superimposing the receptor molecules. in order to focus our test onto the rigid-body results, for the first test regarding the number of near-native solutions at different sampling conditions, the complex reference was formed by the unbound subunits superimposed onto the complex structure .

RESULTS
sampling efficiency by the different rotation methods
we have devised three different methods for rigid-body sampling , based on uniform rotations, and have evaluated the quality of the generated docking orientations on a widely-used benchmark set formed by  <dig> protein-protein complexes  <cit> .

first we analyzed the percentage of cases with near-native docking solutions  generated by each method, at different levels of resolution . the resolution value ρ indicated the minimal distance between the grid points on the expanded surface that were used to define the number of rotations, as described in methods. the resolution value can be intuitively related to the distance between the geometrical centers of the different ligand orientations sampled during the procedure. for instance, a  <dig> Å resolution means that, for standard-sized molecules, the docking orientations would be uniformly sampled so that the minimal distance between the geometrical centers of the ligands  would be  <dig> Å, while the contacting surfaces would be approximately  <dig> Å separated . in order to compare with standard angular resolution units, a resolution of  <dig> Å would be equivalent to  <dig> ° for a big protein  and to  <dig> ° for a small one . on the other side, a resolution of  <dig> Å is equivalent to  <dig> ° for a large protein  and  <dig> ° for a small one . in this way, for the largest cases, at  <dig> Å resolution we have better surface sampling than with the standard 12° resolution used in fft-based approaches.

resolution , percentage of cases with near-native solutions generated by each method and average number of generated conformations.

the three methods had similar results. in all of them, the number of cases with near-native docking solutions increased at higher resolution values , but obviously the number of total docking poses also increased. given that the rrr method gave slightly best results for high +resolution , and since it was more intuitive , we decided to use it in this work.

because of the systematic sampling, the number of near-native solutions was proportional to the total number of docking poses, and this in turns depended on the resolution. at  <dig> Å, all cases had near-native conformations, although the total number of generated docking poses was quite high in average . on the other side, at  <dig> Å resolution, the average total number of docking poses was more reasonable , while the percentage of cases with near-native solutions was still high . moreover, we can see in figure 4a that the concentration of near-native solutions at  <dig> Å at  <dig>  Å and at  <dig> Å resolution are very similar. this is important, as we have recently reported that the concentration of near-native solutions is a key factor for pydock scoring success  <cit> .

for the only purposes of exploring the number of near-native solutions found at the different sampling conditions, as described in this sub-section, the ligand rmsd of each docking pose was calculated with respect to a reference formed by the unbound structures superimposed onto the complex structure . in this way, conformational changes in the subunits were ignored so that we could focus on the capability of the sampling algorithm to find correct orientations. there are  <dig> cases that had near-native solutions at  <dig> Å resolution, but we needed to increase resolution up to  <dig>  Å in order to have near-native solutions for all the remaining  <dig> cases. when rmsd was computed with respect the complex structure, the only case in the combined set  that did not have any near-native solution  was 1h1v , in which the unbound ligand was  <dig> Å from the bound one. for these  <dig> complexes with near-native solution, there was an average of  <dig>  near-native conformations . moreover,  <dig> of these cases had  <dig> or more acceptable solutions . for comparison, ftdock  failed to find a near-native solution in  <dig> cases, found only one nearnative solution in  <dig> other cases, and found  <dig> or more acceptable solutions in only  <dig> cases. all these data indicate that the method presented here can properly sample the 2-rigid body conformational space, with optimal parameters for the number of rotations, radial distance r and resolution.

scoring with pydock
having proven the efficiency of the new sampling method in generating rigid-body docking orientations, we next focused on the scoring, with the goal of accurately identifying the near-native docking solutions . figures 4b,c show the performance of pydock scoring on the solutions generated by the rrr method at  <dig> Å resolution . we checked the use of van der waals and there was a little improvement with  <dig>  weight. as can be seen in figure 4b,c a weight of  <dig>  gave the best success rate for top  <dig> solutions, and it gave better results for all rank values. this small van der waals contribution was sufficient to remove false positives in which electrostatics was artificially high. moreover, imposing a van der waals cutoff to avoid cases with high van der waals values did not change the results . on the other side, higher van der waals weights were not helping either, probably because of the noise derived from the rigid-body assumption . the main problem is that at  <dig> Å resolution, the number of docking poses was too high for the practical application of pydock . for this reason, we further explored the use of a fast residue-based desolvation  as a first filtering step in order to reduce the number of docking poses to be scored by pydock.

filter with fast solvation energy
first we studied the most efficient filtering protocol with the new residue-based desolvation in terms of recovery of near-native solutions. when we applied the fast desolvation to the sets derived at  <dig> Å and  <dig>  Å/ <dig> Å resolution, we could keep a similar number of total docking poses by selecting the top 1% in the  <dig> Å resolution set  or the top 10% in the  <dig>  Å/ <dig> Å resolution set . however, although the final number of selected conformations was similar, we saw an important difference: the concentration of near-native solutions  was higher after selecting the top 1% lowest-desolvation orientations in the  <dig> Å resolution set . in these conditions, the number of near-native solutions found in the top  <dig> conformations generated by rotbus is in many cases significantly higher than when generated by ftdock .

in figure 5b,c we can see that filtering the set at  <dig>  Å/ <dig> Å resolution with the new residue-based desolvation permits a fast removal of 90% of the docking poses, without losing too much efficiency in the pydock scoring. computational times for a small case like pdb 1eaw were less than  <dig> minutes for the orientation search and  <dig> seconds for the residue-based solvation calculation on a  <dig>  ghz dual core amd opteron cpu. for one of the largest cases  these times increased up to  <dig> and  <dig> minutes, respectively. in any case, given that most of the time is spent in pydock scoring, removal of 90% of the poses makes the total procedure around ten times faster.

besides, given that selecting the top 1% at  <dig> Å resolution seemed more efficient in terms of recovery of near-native solutions, we have analyzed pydock success rates using this strategy . in figure 5b,c  we can see the results for  <dig> Å resolution after selecting the 1% docking poses with the lowest residue-based desolvation plus final scoring by pydock . for low ranks,  <dig> Å resolution  was clearly better than  <dig> Å resolution .

when selecting instead the top 10% , the results were slightly better at high rank values, but they were worse at low rank values . at  <dig> Å resolution, computational times for a small case like pdb 1eaw were  <dig> minutes for the orientation search and  <dig> minutes for the residue-based solvation calculation on a  <dig>  ghz dual core amd opteron cpu. for the exceptionally large case pdb 1de <dig> these times dramatically increased up to  <dig> and  <dig> hours, respectively. in any case, these times were smaller than those of ftdock  and pydock . considering that pydock scoring is  <dig> times faster with 1% filtering than with 10% filtering, this is clearly the strategy of choice.

integration of rotbus and ftdock sets
in figure  <dig> and  we have compared the results of rotbus plus pydock with those obtained from ftdock plus pydock. for rank values of  <dig> or below, the results are very similar. however, for larger rank values the success rates are better in ftdock. we have explored whether both methods could be complementary and thus generate good solutions in cases in which the other one could have difficulties, and vice versa. we have checked that in many cases the number of near-native solutions in the top  <dig> conformations is high when generated by rotbus or by ftdock, but not by both simultaneously . figure 6a,b shows the success rates of the combined docking sets from i)  <dig> Å resolution plus 1% filtering, scored by pydock with  <dig>  van der waals, with the final value weighted by a factor of  <dig> , and ii) ftdock, scored by pydock with  <dig>  van der waals. other weighting factors for the pydock scores of the rotbus poses did not improve the results . with  <dig> Å filtered at 10%, the results did not improve . we checked that considering a fix number of top solutions  after solvation filtering gave similar results .

rotbus with residue-based desolvation filtering in combination with ftdock gave better general results than each method on their own, especially for rank values over  <dig>  however, we saw specific examples that were very dependent on the choice of the method. for instance, there were cases that had poor results with rotbus  filtering at 1% residue-based desolvation, but had good results with ftdock, such as those with pdb code 1ay <dig>  1b6c, 1buh, 1ml <dig>  2btf, and 2jel. these cases can improve the results if we apply 10% filtering, which indicates that for them, geometrical complementarity rather than desolvation is the important factor to detect the near-native solutions. on the contrary, there were cases that had good results with rotbus at 1% filtering, but not with ftdock, such as those with pdb code 1de <dig>  1n2c, 2hmi, and 2qfw. moreover, the results did not further improve with 10% filtering. in these cases, desolvation seems to be determinant , and thus our residue-based desolvation is helping to identify the near native solutions even if they do not have optimal geometrical complementarity or are too large for ftdock sampling. for these cases, the ftdock results could improve by inclusion of some solvation descriptor during the fft-based search. indeed, we have checked that the program zdock  <dig>   <cit> , which includes solvation, gives for these cases much better results than ftdock , which suggests that fft-based approaches can cover the same sets of orientations of rotbus with appropriate inclusion of solvation. in general, in order for rotbus sampling to have the same success rates as ftdock , we would need to use  <dig> Å resolution at 10% filtering. however, it seems much more efficient to combine rotbus at 1% filtering with ftdock if we need to produce more near-native solutions in a selection of docking poses for further refinement, for instance.

success rates by size...does it improve ftdock?
we have studied the success rates of ftdock and rotbus according to the size of the proteins. to be consistent with previous studies we have used the size of the grid, s, generated by ftdock  <cit> , according to:   

where  is the maximum radius of the receptor ,  maximum radius of the ligand, and δ the resolution of the grid used by ftdock . as we recently saw, pydock had very good results on the docking poses generated by ftdock for small cases , but very bad results for the large cases . the reason was that for these cases, ftdock had problems in generating a sufficient number of acceptable docking solutions. we have found here that ftdock is giving slightly better pydock success rates than rotbus for small cases . but for large cases , top  <dig> success rates were by far much better when docking poses were generated by rotbus  than by ftdock . some interesting examples are the cases with pdb code 1de <dig>  1n2c and 2hmi, which had pydock ranks between  <dig> and  <dig> when docking poses were generated by rotbus, although they did not have any acceptable solution generated by ftdock. it is clear that the limitations of ftdock with respect to the large-sized cases can be overcome with rotbus efficient sampling.

rotbus and beyond
when external information about the protein-protein interaction is provided, e.g., computationally predicted hot spots, residue conservation or experimental data, the search can be restricted to defined sub-zones of the subunits. with rotbus, this can be easily done by checking whether the vectors point to the expected interacting surfaces for receptor and/or ligand, respectively. if they do not, the distance r is not calculated and the orientation is disregarded. this dramatically reduces computational costs, making possible the study of larger cases.

as an example of practical application, we have performed this restricted search on two capri http://www.ebi.ac.uk/msd-srv/capri <cit>  targets, t <dig>  and t <dig> . we first projected the spherical uniform set of points  on the surface of each subunit. for each residue expected to be at the interface, we have selected the direction corresponding to the closest projected point . we selected also the nearest neighbours of the corresponding direction in order to ensure a wider sampling. the expected interface residues  for capri target t <dig> receptor tolb were his <dig>  ala <dig> and thr <dig>  while for ligand pal were ala <dig> and glu <dig>  <cit> . for target t <dig>  the expected interface residues in receptor ubc <dig> were gln <dig>  gln <dig>  ala <dig>  glu <dig>  tyr <dig>  and t <dig>  <cit> , while the ones for ligand e2-25k were arg <dig>  lys <dig>  arg <dig>  phe <dig> and lys <dig>  <cit> . for target t <dig>  the residue restraints reduced the number of explored docking poses from about  <dig>  to only  <dig>  orientations, at a sampling resolution of  <dig> Å . for target t <dig>  the original sampling of about  <dig>  orientations was reduced to only  <dig>  ones with the restricted search. when pydock was applied to these restraint-filtered sets of docking poses, a near-native solution was detected at rank  <dig> for t <dig>  as can be seen in figure 8a . for t <dig>  a near-native solution was found at rank  <dig> using the same restricted-search method   <cit> .

similarly, our sampling method could be easily extended or adapted to other algorithms. for instance, flexibility can be implemented by loading several structures of the proteins when the radial coordinate is being computed. these structures could be generated, for example, from a molecular dynamics ensemble. in this way, future implementations of this method may provide an efficient approach to the problem of flexibility in protein-protein docking, especially for cases in which large conformational changes invalidate other more standard algorithms such as fft-based methods. moreover, this method could be implemented in combination with any other conformational search protocol, for example as part of a monte carlo strategy to perform simple minimizations or thermodynamic calculations.

CONCLUSIONS
we have presented here a new systematic approach to generate rigid-body orientations of a receptor-ligand system, based on three novel algorithms: i) uniform definition of rotations of receptor and ligand; ii) fast computing of optimal distance between proteins; and iii) fast filtering with residue-based desolvation. the method generates docking orientations at low computational cost and good efficiency, and can be complemented with those generated by other methods . the final scoring with the previously developed pydock function yields competitive success rates and opens the door to efficient treatment of flexibility by using pre-sampled ensembles or on-the-fly conformational search methods.

authors' contributions
jfr devised the concept, directed the research and finalized the draft. as performed the calculations and drafted the paper. all authors read and approved the final manuscript.

supplementary material
additional file 1
number of near-native structures in the top  <dig> conformations generated by rotbus and ftdock. we show the number of near-native structures in the top  <dig> conformations generated by the method presented here , as compared to when generated by the well-known fft-based method ftdock. for the sake of completeness, we have also shown in brackets the number of near-native structures in the top  <dig> conformations generated by each method after scoring by pydock.

click here for file

 additional file 2
benchmark results for the rotbus+pydock protocol. docking results after scoring with pydock the set of rigid body poses generated by rotbus at  <dig> Å resolution and filtered up to 1% with best residue-based solvation. rmsd is calculated for ligand c-alpha atoms with respect to the complex structure.

click here for file

 additional file 3
extra weight values for the analysis of the combined rotbus and ftdock sets. success rates for rotbus , ftdock , and the combined sets from rotbus and ftdock, in which the scoring values of the rotbus docking poses have been weighted by different factors from  <dig>  to  <dig>  a) for rotbus, only the top 1% docking poses with the best residue-based desolvation values were considered. b) as in a but in logarithmic scale.

click here for file

 acknowledgements
this work was supported by plan nacional i+d+i grant bio2008- <dig> 
