BACKGROUND
variance component analysis  <cit>  is a flexible strategy for detecting quantitative trait loci , which is particularly useful in general populations such as humans and livestock. in the variance component framework, the qtl effect of each individual in the population is modelled as a random effect. the covariance structure of this random effect is proportional to the probability of identity by descent  at the location in the genome tested for qtl. the covariance matrix, also referred to as the ibd matrix, contains the probabilities for each pair of individuals in the studied sample sharing an allele identical by descent . the estimation of the ibd matrix from pedigree and genetic marker information is thus a central, and often very time-consuming, component of variance component qtl analyses.

several methods have been proposed to estimate ibd matrices in a wide range of population structures.  <cit>  some methods are deterministic  <cit>  and other stochastic, based on simulation  <cit> , but all use information from genetic markers and pedigree. in qtl mapping, these methods are used to compute ibd matrices at pre-defined locations, a grid, in the genome where variance components for qtl will subsequently be estimated. due to the computational demand in computing ibd matrices and estimating qtl variance components, plus the large memory requirement for storing large numbers of ibd matrices, it is common practice to restrict the resolution of the computational grid. due to this, the optimal qtl location in the genome is not identified and consequently the power to detect qtl is not maximised. global optimization algorithms  <cit>  have been shown to be a computationally efficient approach to search the genomic grid where the genetic relationships have been estimated in a least square based qtl mapping framework  <cit>  in the least squares framework, the cost of computing and storing qtl genotype probabilities at high resolution is negligible compared to the statistical estimation of genetic effects. in variance component qtl mapping on the other hand, the high computational cost both in estimating variance components and computing and storing ibd matrices indicate that new and efficient algorithms for computing and storing ibd as well as for estimation of variance components are needed to facilitate more in-depth exploratory analyses of experimental data using variance component models.

we have recently reported an efficient method for variance component estimation in qtl mapping  <cit> . here, we propose a new approach for genome-wide ibd estimation in pedigrees. rather than using the currently predominating approach, which estimates discrete ibd's at pre-defined genomic locations, we estimate genome-wide ibd as a series of continuous marker interval ibd-functions. with the current density of markers used in genome-wide qtl analysis , more ibd matrices are required than the number of available markers. consequently, the ibd probabilities are estimated not only at marker locations, but also at multiple locations in the interval between markers i.e interval mapping  <cit> . since all the data required to estimate ibd probabilities comes from genetic markers and pedigree, the same data is used to compute all the ibd values within the interval between two consecutive markers . instead of predefining the locations in the marker bracket where ibd matrices should be calculated and then compute them independently, we show how to formulate the ibd between each pair of individuals as a function of the distance from the flanking marker positions. we then show how these ibd-functions, in the form of a single algebraic formulation, can be obtained by re-implementing existing ibd estimation algorithms or by estimating it from ibd matrices estimated at marker locations. the functions can then be used to cheaply calculate an ibd matrix at any location within the marker bracket. functions to calculate ibd-matrices in brackets between markers have previously been described for a set of specific relationships  <cit> , but those functions were used to produce discrete ibd matrices at pre-defined locations. here, we generalize this concept for estimating the functions in general pedigrees and highlight the advantages using those functions as an output of the algorithm.

to illustrate the generality of the new approach to estimate ibd functions, we have worked out two algorithms for ibd-function estimation. first, we show one example of how to re-implement an existing ibd estimation algorithm  <cit>  to compute ibd functions. then, we develop a general algorithm to approximate ibd-functions using a small number of ibd-matrices from any existing ibd estimation method as input. the computational efficiency and memory requirement of both methods are assayed together with their precision to estimate ibd. furthermore, we explore how the approximations affect variance component estimation in qtl mapping. we conclude by discussing how one by describing ibd as a continuous function provides the foundation for implementation of existing and development of new and efficient optimization algorithms for screening the genome for single and multiple qtl.

RESULTS
re-implementation of existing ibd estimation algorithms to obtain exact ibd functions
we re-implemented an algorithm for deterministic ibd matrix estimation  <cit>  to compute marker-bracket ibd-functions instead of discrete ibd matrices. the new implementation produces ibd-matrices that are identical to those obtained using the original algorithm while at the same time improving the computational efficiency. figure  <dig> compares the computational load imposed by our new implementation and the original algorithm for various number of ibd matrices calculated in a marker bracket. the new algorithm is always faster, and reaches a 2-fold speed-up when four matrices are estimated in a marker bracket and approaches a  <dig> -fold speed-up asymptotically as the number of estimated matrices increases.

a new and general algorithm for estimating ibd functions
we developed a general algorithm for approximating ibd-functions in marker brackets  from a limited set of ibd matrices from any existing ibd estimation algorithm and evaluated how well it approximates the ibd matrices between markers that were obtained using the software loki  <cit> .

this particular software was chosen because it is a stochastic algorithm based on monte carlo markov chain  iteration procedure, which means that the computation strategy of this algorithm is completely different from the one of ricardo pong-wong's method. by using this method to illustrate the efficiency of the curve-fitting approach, we also highlight the important aspect of the generality of this approach.

the input to our algorithm was ibd values at marker positions calculated by loki and the ibd matrices obtained from the ibd functions were compared to loki's ibd-matrices as they are the ones approximated by cf-ibd.

precision of ibd matrices obtained from estimated ibd functions
in the optimal scenario, i.e. all markers are fully informative , the ibd values are all either 0;  <dig> ; 1; . consequently, a more informative ibd matrix has a higher density of those values than of intermediary values. none of the methods presented here requires fully informative markers, but we use the property mentioned above to postulate that the algorithm attribute the values  <dig>   <dig>  or  <dig> when the ibd is estimated without uncertainty and that intermediate values then exist only when there is uncertainty. our comparisons show that the ibd to be used for qtl mapping are likely to be much more influenced by the assumptions made when estimating ibd from data  rather than by the estimation of an ibd function from discrete ibd at marker locations. figure  <dig> gives a graphical illustration of how informative the ibd-matrices obtained are from loki  <cit> , cf-ibd when approximating loki ibd's, and from pong-wong's method  <cit> . the curve corresponding to cf-ibd is confounded with loki's ibd on figure 2a, and is closer to loki's than to pong-wong's ibd on figure 2b.

the distribution of the estimated ibds were compared in a region close to marker kitl <dig>  <cit>  located at position  <dig>  cm on chicken chromosome  <dig>  and in a second region  <dig>  cm away from this same marker . all three methods display a similar pattern of the individual ibd-values with a majority of values close to  <dig>   <dig>  and  <dig>  and a range of intermediate values . the estimates at the location away from the marker  contain less information as shown by lower density of values close to  <dig>   <dig>  and  <dig>  loki and cf-ibd do, as expected, give very similar profiles, whereas the estimates using the algorithm of pong wong et al. produce less informative ibd matrices. to quantify the similarity between the methods, we have computed the average difference  of the matrices computed by loki  to those of cf-ibd  and the pong-wong  based algorithm for several positions within the marker-bracket. since the average expected value of the ibd between two individual is determined by their relationship , the pairwise differences have been weighted by this relationship coefficient. the differences between the methods are nearly constant within the marker brackets and is always bigger between pw and l, than between cf and l . our approximations of loki are always closer to the original loki estimates than the estimates obtained using pong-wong's method, indicating that the effect of the assumptions used when calculating ibd at marker locations has a greater impact on the obtained ibd-matrices than the use of cf-ibd to approximate ibd in marker brackets.

effects on estimated variance components
as the ultimate aim of estimating the ibd-matrices in qtl mapping applications is to use them for estimating genetic variance components of qtl, it is important to evaluate the potential decrease in statistical power from using an approximate ibd-estimation method rather than the exact method. thus, we compared the variance component estimates obtained by reml  <cit>  based on ibd matrices from loki estimates, cf-ibd approximations of loki ibds and ibd estimates from the pong-wong algorithm in two regions on chicken chromosome  <dig>  where qtl have previously been detected  <cit> . the use of cf-ibd approximations led to a slight under-estimation of the genetic variances – on average  <dig> % and never smaller than 96% of the estimates obtained using loki ibds. estimation based on the ibd matrices obtained using the pong-wong algorithm were smaller with on average 81% and with a minimum of 58% of the loki based estimates.

memory requirement for storing ibd matrices in a genome scan
since our method considers the ibd values as a function of the recombination probability between two markers on the chromosome, it is possible to store the output of the algorithm as a function instead of a traditional ibd matrix. the ibd-function for each pair of individuals is calculated from a set of recombination functions , and can be approximated numerically by a polynomial function that makes it easier to write and store in a file. traditional ibd-matrices are normally sparse and stored accordingly with two id numbers and an ibd value for each pair of individuals with non-zero ibds. the memory requirement for each matrix consequently depends on the number of non-zero elements in the matrix, and the numerical precision employed to store the result. the required memory to store a single matrix  can be calculated as:

r : recombination probability from the haldane mapping function between the two markers , between the left/right  marker and the qtl; 1: probability of maternal origin is calculated analogously by inverting dam/sire origin of the markers.

 m = n2nzp 

where n is the number of individuals in the pedigree, nz is the proportion of non-zero elements in the matrix and p is a constant relating to the memory required to store two individual id's as integers and a real valued ibd value with single  or double  precision.

storing a typical ibd-matrix in the chicken pedigree used in this study at single precision requires approximately m =  <dig> *  <dig>  *  <dig> * 10- <dig> ≈  <dig> mb, as there are  <dig> individuals in the pedigree and around  <dig> % non-zero elements. if on the other hand the ibd functions for a marker interval are stored in the form of a sparse matrix that contains the three parameters  of a second degree polynomial  for each bracket and pair of individuals with single precision, then the constant p in  <cit>  works out to be ≈  <dig> × 10- <dig> and the memory requirement to store one ibd-function matrix to about m =  <dig> *  <dig>  *  <dig> * 10- <dig> ≈  <dig> mb. the advantage of this storage approach for varying number of ibd matrices in a marker bracket is illustrated in figure  <dig> 

storing a large number of individual ibd-matrices representing an interval or and entire genome can thus require large amounts of memory if one wants to identify the qtl location with high precision. a single qtl genome scan with  <dig> cm resolution in the chicken genome requires approximately  <dig> matrices corresponding to a memory requirement of  <dig> gb, whereas the ibd-function based storage in a genome with on average  <dig> tested locations in a marker bracket  requires about  <dig> gb. in an epistatic analysis including two loci with a single interaction effect, the variance-covariance matrix for the interaction effect is usually constructed as the hadamard product of the respective marginal effects ibd matrices  <cit> . an exhaustive genome-scan for two qtl  involves accessing nearly  <dig> tb of data for the single locus ibd matrices from disk unless the ibd matrices used to calculate interaction matrices are stored in ram. this will increase the computational demand of the analyses considerably as the disk access time is in the order of milliseconds compared to that of nanoseconds when accessing ram. the rather low and constant memory requirement posted by our new way to store and recall ibd matrices allows for storing all the necessary information in ram, whereas the traditional approaches posts either large hardware requirements in terms of ram  or long computational times due to excessive access of disk.

discussion
to facilitate development of methods for mapping multiple interacting qtl using variance component models, it is necessary to significantly improve the computational efficiency. to do so, three key components need to be addressed: estimation of relationship between relatives , variance component estimation of qtl at a given genomic location  and the genome scan for genomic locations  to evaluate . recently, more efficient algorithms for variance component estimation  <cit>  and optimization methods for qtl genome scans  <cit>  have been described. here, we propose a new approach to describe ibd between individuals in the form of continuous marker bracket ibd functions. this improves memory usage and computational efficiency in the estimation of genome-wide ibd as well as facilitates implementation of existing and development of new and more efficient global optimization algorithm for detection of individual and multiple qtl.

we have shown that it is possible to estimate the ibd function for a marker bracket exactly by re-implementing existing ibd algorithms using pong-wong algorithm  <cit>  as an example. this work illustrates that the ibd-function based approach generates the same ibd's and estimates of variance components as the original algorithm as well as a potential to improve both computational and memory usage. this approach should be applicable for most ibd estimation algorithms, although we have not shown this here, but will require an effort to be made for each particular ibd estimation algorithm in reformulating the computational algorithm and updating analysis software. this is the preferable strategy to obtain the optimal ibd functions and achieve maximal computational improvements by this approach.

in situations where re-implementation of the original algorithm is not achievable, but where ibd functions could be useful, we provide a general curve-fitting based algorithm to estimate these functions from ibd matrices provided by any existing algorithm. to illustrate the applicability of this approach, we have made an in-depth study of its properties. by using input from one ibd estimation method  <cit> , we show that our approximation has a very small effect on the ibds as well as on subsequently estimated qtl variance components. moreover, a less detailed study with another ibd estimation method  yielded similar results as the comparisons with loki .

ibd probabilities can theoretically be calculated exactly, but in real datasets this will be computationally prohibitive. the methods used in practice thus aim to approximate the true ibd and depending on the assumptions made, methods will generally obtain different ibd matrices for a specific dataset. here, we clearly show that differences in underlying assumptions in the algorithms may have a much greater impact on both the direct estimates if ibd's, as well as on variance component estimation, than from using ibd functions as approximations of a specific ibd estimation method.

by re-implementing an already fast deterministic ibd estimation algorithm by pong-wong et al  <cit>  to conduct ibd-function estimation, it is possible to improve the computational efficiency in calculating ibd by a factor of  <dig> to  <dig>  in most realistic situations. the algorithm used in the loki  <cit>  software can simultaneously compute ibd estimates for any number of pre-defined locations in a marker bracket. theoretically, our method to compute ibd functions from a limited set of ibd matrices does therefore not, decrease the computation-time of this method, but will decrease the memory requirement significantly. in practice, however, even though loki can theoretically compute any number of ibd matrices in a marker-bracket in a single run without significant additional computational cost, the limiting factor for performing a dense genome scan is the memory requirement to store a large number of ibd matrices across the genome. thus, since in our work loki is not re-implemented to directly report the ibd functions for marker brackets, the ibd-function estimation approach will be useful to allow an increase in precision in the genome-scan, without an accompanying increase in memory requirement.

our new approach facilitates the development of efficient algorithms for multi-dimensional genome scans for interacting qtl  <cit>  by significantly reducing the hardware requirement for storing genome-wide ibd in ram, which is a requirement for efficient analyses as storing and accessing large amount of data from disk would slow down the analyses significantly. this improved efficiency in the analysis makes analyses based on more advanced genetic modelling, including e.g. epistasis, more computationally tractable and thus of interest to a larger group of users.

the computational efficiency in qtl mapping in general can be improved considerably by replacing the commonly used grid search with a more efficient optimization algorithm  <cit> . using this approach, the number of locations  tested for qtl decreases and the computational efficiency is improved regardless of the ibd- or variance component estimation algorithms used. an inherent property of non-exhaustive grid searches is that the locations where ibd are needed cannot be predicted before the analysis. thus, ibd either have to be computed on a pre-defined dense grid with high computational efficiency and high requirement for data storage or computed serially with a resulting decrease in the computational efficiency. by using the cf-ibd algorithm, however, it is possible to retain the computational efficiency in calculating ibd matrices in parallel, while minimizing the memory requirement in the analyses.

an existing optimization algorithm that would be interesting to explore for single- and multi-dimensional qtl searches in the variance component framework would be direct  <cit> . this algorithm has been shown to be efficient in multi-dimensional qtl detection  <cit> , and there greatly improves the computational efficiency. in addition to this, the availability of continuous ibd functions also opens up new opportunities to develop novel optimization algorithms for detecting qtl that explicitly uses the fact that there exists an underlying continuous function describing the genetic relationships between individuals across the genome.

CONCLUSIONS
here, we describe how and why to estimate ibd relationships in a population as a set of ibd functions between individuals. this approach immediately improves the efficiency in ibd matrix estimation in genome-scans for qtl, but also to facilitate further improvements by resolving methodological bottlenecks for implementing existing and developing new and more efficient algorithms to screen the genome for single or multiple qtl. we have provided two examples of how to estimate continuous ibd functions between a pair of markers, instead of a set of discrete ibd values, based on existing discrete ibd estimation algorithms. the first, and most efficient, method is a re-implementation of an existing ibd estimation algorithm to provide exact ibd functions that give the same values as the original algorithms. the second, more general method, approximates ibd-functions using ibd values from any algorithm of choice without the need for re-implementation of algorithms or software. the loss of information in this estimation is minor and it only affects qtl variance component estimates marginally. the estimation of continuous ibd-functions, rather than discrete ibd estimates, was shown to improve the computational efficiency  and memory usage  in genome-scans for qtl. these improvements are expected to be of practical importance in particular in genome scans for multiple interacting qtl, where much higher computational and memory efficiency is required. the presented approaches will also has a positive impact on the use of more efficient search algorithms for qtl and the advent of continuous ibd functions opens new opportunities for developing new strategies for high-precision estimation of qtl location in single- and multidimensional genome scans.

