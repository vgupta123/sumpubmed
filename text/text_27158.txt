BACKGROUND
the recognition of functional sites within the genome is one of the most important problems in bioinformatics research. determining where different functional sites, such as the promoters, translation start sites, translation initiation sites , donors, acceptors and stop codons, are located provides useful information for many tasks. for instance, the recognition of translation initiation sites, donor, acceptors and stop codons  <cit>  is a basic in any program developed to perform a gene recognition task. most current gene structure prediction programs start with a site recognition step  <cit>  and, once putative sites have been discovered, they try to combine them into meaningful gene structures. it is evident that this site recognition step is crucial as, in most cases, if the sites for a gene are not identified that gene will no longer be considered by the program. on the other hand, if many false positives are detected it is likely that the gene recognition program performance would be seriously damaged. state-of-the-art site recognizers use complex classifiers, namely support vector machines , and medium upstream and downstream sequences from the putative sites .

recent approaches  <cit>  for human gene recognition also make use of the information available for other species to improve the recognition of the functional sites. however, the combination is carried out in a heuristic way. the species used for comparison are arbitrarily chosen, using the widely assumed hypothesis that we must consider moderately distant evolutionary relatives. furthermore, the classifiers used for recognition of the sites in each species are also arbitrarily chosen. the best classifiers are usually chosen without considering the relevant topic of classifier diversity  <cit>  which is crucial in any combination of learners  <cit> . it is unlikely that such a process would produce the best possible result. due to the large number of available species and the large number of different classifiers that can be applied to make use of such information, a systematic method for obtaining the best possible combination is highly desirable.

in this work, we propose a principled approach in which we can consider as many different sources of evidence as available and use as many different classifiers as needed. a rapid validation process constructs a near-optimal combination that achieves a better performance than any of its members. to obtain a method that can be scaled up to as many sources of information as needed, we use a greedy stepwise approach. two alternatives are designed, one based in a constructive approach beginning with an empty model and another based on a destructive approach beginning with a model considering all available sources of evidence. then, a stepwise procedure is applied until no further improvement is observed in the obtained model. from the point of view of machine learning, these two approaches are usually named as forward selection and backward elimination respectively.

methods
our aim is to develop a methodology for combining tens or even hundreds of classifiers for site recognition. from a machine learning perspective, such a problem is usually approached differently depending on the computational cost of the available solutions. the optimum approach is the exhaustive evaluation of all possible combinations of classifiers. however, if we have n trained classifiers, the number of possible combinations is 2n− <dig>  which is prohibitive even for moderate values of n. thus, we must resort to optimization algorithms that will perform a guided search in the space of possible solutions. for the problem of finding the optimal solution, any of the many metaheuristics available in the machine learning literature, such as evolutionary computation  <cit> , particle swarm optimization  <cit> , ant colonies  <cit>  or differential evolution  <cit> , could be used. however, all of these methodologies require the repetitive evaluation of many solutions to achieve their optimization goal. in the problem of site recognition, the evaluation of a possible solution is a costly process due to the large datasets involved. thus, these metaheuristics are not feasible.

to avoid the computational cost of these metaheuristics, we developed a different approach. we used a stepwise greedy approach in both a constructive and a destructive way, which requires evaluating significantly fewer solutions. the process for obtaining the best combination of classifiers for different species is composed of two main stages: training stage and validation stage. before starting the learning process, we need the training datasets, the testing dataset and the validation dataset. without loss of generality and to provide the necessary focus for our description, we will use here the same setup of the reported experiments below. we will address the problem of site recognition in the human genome. to solve this problem, we will use as a test set the sites of a certain chromosome, c. the training set will be all the remaining human chromosomes and the genomes of all the species we want. as validation, we will chose one of the human chromosomes in the training set, v, and remove it from the training set.

for the training stage, we select as many species as could be useful for our problem. we need not select the most appropriate ones because the stepwise validation stage will discard the useless classifiers. once we have selected the set of species whose genomes we are going to use, we train as many classifiers as we want from those species. for every organism, we can train different classifiers, such as support vector machines , neural networks , decision trees , the k-nearest neighbor  rule or the same classifier methods with different parameters. because the validation stage can consider hundreds of classifiers, any method of potential interest can be used. again, the validation stage will remove unneeded classifiers.

once we have the trained classifiers, we will perform the validation stage, whose aim is to obtain the best possible combination of classifiers. for that purpose, we designed two different approaches. both of these approaches are stepwise greedy approaches. we developed a constructive incremental approach and a destructive decremental approach. in the incremental approach, we begin by evaluating all the classifiers in the validation set v. the best one, c <dig>  is added to the set of selected classifiers, which was empty. then, the evaluation is conducted again using c <dig> together with all the remaining classifiers. the best combination is chosen, and a second classifier, c <dig>  is added. the process is repeated until the addition of a new classifier does not improve the validation accuracy. the constructive method is depicted in algorithm  <dig> 



for the destructive approach, we start with a model with all the available classifiers, n, {c <dig> c <dig> …,cn}. one by one, every classifier is removed from the set, and the set is reevaluated using the validation set. if all of the classifiers have a positive effect on the validation accuracy, the process is stopped. otherwise, the worst performing classifier is removed and the process is repeated until the stop criterion is met. the destructive method is depicted in algorithm  <dig> 



another issue must be considered for our approach. we must determine how the different classifiers are combined. in the machine learning literature, combining different sources of evidence for a classification problem is a common task  <cit> . although various sophisticated methods have been developed for combining many classifiers , in a practical sense, none of them are able to beat the simpler methods on a regular basis. thus, we have considered three commonly used simple methods to combine the classifiers: sum of outputs, majority voting and maximum output. these methods are fairly straightforward. the combination using the sum of outputs simply adds together the outputs of all the models. the majority voting scheme counts the classification given by every model and outputs the most common case. the maximum approach uses only the classifier whose output has the highest absolute value.

for these three methods to be useful, we must consider the different ranges of their outputs and the different optimal decision thresholds of the five classification method we will use. to account for the different ranges, all the outputs of the methods were scaled to the interval . to account for the different thresholds, we obtain the optimal threshold for each method, thotpimal, by cross-validation and we obtain the effective output of every classifier, which is given by y−thopimal, where y is the actual output of the classifier.

with the three combination methods and the two stepwise algorithms, we have for any performance measure selected six different combinations of models. for any recognition task and any performance measure, we will obtain these six models and return as a final result of our methodology the best combination in terms of cross-validation performance.

experimental setup
to test our model, we chose the human genome together with other  <dig> species. our aim was to test whether any species, regardless of its closeness with the human genome, could be useful. the following species were considered: <dig> anolis carolinensis , bos primigenius taurus , caenorhabditis elegans , callithrix jacchus , canis lupus familiaris , danio rerio , drosophila melanogaster , equus caballus , ficedula albicollis , gallus gallus , homo sapiens , macaca mulatta , monodelphis domestica , mus musculus , ornithorhynchus anatinus , oryctolagus cuniculus , pan troglodytes , rattus norvegicus , schistosoma mansoni , sus scrofa  and takifugu rubripes . these genomes were selected to have a wide variety of organisms whose genomes are fully annotated.

we also used annotated mrna sequences of bos taurus , danio rerio , homo sapiens , mus musculus , rattus norvegicus , sus scrofa  and xenopus tropicalis . such sequences were screened from refseq mrna curated records downloaded from ncbi refseq ftp  . the species-specific refseq directories provide a cumulative set of records for transcripts and proteins for those species. records with no annotation for start or stop codons were eliminated. for every training set, regardless of the species, we removed the genes that were shared with the test chromosome for all the training datasets.

five classifiers were trained from every dataset: the stop codon method  <cit> , a decision tree, a k-nearest neighbor rule, a positional weight matrix and a support vector machine with a string kernel. the parameters for every classifier were obtained using 10-fold cross-validation. for learning the classification models we used random-undersampling, for validation and testing the datasets were used unmodified. thus, a total of  <dig> models were trained for every dataset.

another key parameter of the learning process is the window around the functional site that is used to train the classifiers. the value of the window for each classifier was obtained by cross-validation. we tested the performance of the following windows: , , , , , , , , , ,  <cit> ,  <cit>  and  <cit> . for each trained classifier, the best window was chosen. for the stop codon method, we used the additional window values of  <cit> ,  <cit> ,  <cit>  and  <cit>  for tis recognition and the window values of , ,  and  for stop codon recognition.

our approach was evaluated using human chromosomes  <dig>   <dig>   <dig>   <dig> and  <dig> for testing and human chromosome  <dig> for validation. these datasets are shown in table  <dig>  we used all tiss and stop codons of the ccds update released for human of september  <dig>   <dig>  this update uses human ncbi build  <dig>  and includes a total of  <dig>  ccds ids that correspond to  <dig>  geneids.


as svms with weighted degree  kernel has consistently proven to be the best state-of-the-art method for site-recognition  <cit>  we chose this method as our baseline approach. to assure a fair comparison, we considered not only these methods but also all others used in classifiers. then, for every experiment, we compared our approach to the best performing method in terms of validation performance. in fact, svm with wd kernel was always the best individual classifier. table  <dig> summarizes the hyperparameters used to train the classification models.


to evaluate the obtained classifiers, we used the standard measures for imbalanced data. given the number of true positives , false positives , true negatives  and false negatives , we used the sensitivity, sn=tptp+fn, and the specificity, sp=tntn+fp. the geometric mean of these two measures, g−mean=sp·sn, will be our first classification metric. as a second measure, we used the area under the receiver operating characteristic  curve . however, auroc is independent of class ratios, and it can be less meaningful when we have very unbalanced datasets  <cit> . in such cases, area under the precision recall curve  can be used. this measure is especially relevant if we are mainly interested in the positive class. however, it can be very sensitive to subsampling. in our results, we use all the positive and negative instances for each of the five chromosomes tested, so no subsampling is used. this also yields small auprc values.

we use these three metrics because they provide two different views of the performance of the classifiers. the auroc and auprc values describe the general behavior of the classifier. however, when used in practice, we must establish a threshold for the classification of a query pattern. g-mean provides the required snapshot of the performance of the classifier when we set the required threshold.

RESULTS
as stated, we performed experiments for the recognition of tiss and stop codons to provide the necessary focus. however, our approach is applicable to any recognition task. the experiments had two different objectives. we wanted to know which species were more useful for the recognition of the two functional sites. we challenged the general heuristic method of selecting a species based on biological considerations alone. we also wanted to compare the results using our method with the standard procedure of selecting the best performing model, which is the common approach in the literature. in the following two sections, we discuss the results for tis and stop codon recognition.

results for tis recognition
one of the advantages of our approach is that we can optimize for the performance measure that we are interested in, which can be the g-mean, the auroc, the auprc or any other measure useful for our application. thus, we conducted our experiments using three performance measures: g-mean, auroc and auprc. the first relevant result is that the combination of best models obtained for each measure was different. this means that, depending on the aim of the work, different combinations of classifiers are needed.

for each of the five studied chromosomes, we obtained three different combinations of models, each optimized for one of the three measures mentioned above. as a general rule, the constructive method always outperformed the destructive method. the latter always obtained combinations of many more models that exhibited over-fitting and worse performance. it is also interesting to note the homogeneous behavior across the different chromosomes. for all of the five chromosomes, the combination that achieved the best results was the sum for auroc and auprc and majority for g-mean. the combination based on the maximum output was never the best-performing one. in this latter combination method, the effect of a bad classifier was too harmful to obtain good performance. in this paper, for brevity’s sake, only the best models are reported.

once we established the best stepwise method and the best combination, we examined the results in terms of the species involved in the best combinations. table  <dig> shows the models selected for the best combination for each measure and each chromosome. regardless of the optimized measure, there was only one species that never appeared in the best combination: ce. this result indicates that, although the contribution of certain species is more relevant than others, the information of many genomes was useful for the prediction of human tiss, even those species that are very distant relatives of humans. another interesting result is the fact that, for the three different measures, auroc, auprc and g-mean, the obtained combinations of models were quite different. this result indicates that we must consider our aims before designing our classifier. in most previous works, that is not taken into account.
s stands for stop codon method, c for c <dig> , k for k-nn, p for pwm and w for a svm with a wd string kernel



regarding the classification models, pwm was never chosen. the stop codon method was chosen for ec and sm. the decision tree trained with the c <dig>  algorithm was selected several times, but the k-nn rule and the svm with a string kernel were the most frequently selected methods. the case of k-nn is remarkable as it is not usually used for this task  <cit> . it appears that the diversity that k-nn introduced in the models was useful for the overall performance of the combinations, despite of the fact that k-nn alone showed worse performance than an svm alone. in classifier ensembles literature  <cit>  is already stated that classifier diversity is a desired feature for improving the performance of the ensemble. thus, the diversity introduced by these models might be the reason of their inclusion in the best combination. ec, clf, mam and pt were the species most frequently chosen. it is interesting to note that hs was seldom used.

with respect to the three different objectives, optimizing the g-mean showed the most stable results. for the five chromosomes, the selected models were always the svm method for mam and pt. for auroc, seven or eight models were selected. the svm method was always chosen for mam and pt, but the remaining methods and species depended on the chromosome. this is another interesting result because most tis recognition programs mainly rely on common models for any task. finally, for auprc, significantly more models were selected, from  <dig> to  <dig>  with a significant variation between the chromosomes. here, the large number of negative samples made this task harder than optimizing the other two criteria.

the next step was to compare the performances of our approach and the standard method of choosing the best performing classifier. overall results for tis recognition problem for the five studied human chromosomes is shown in table  <dig>  a first conclusion is that the stepwise method was able to improve the standard approach for all three measures and all five chromosomes. the improvements in auroc, auprc and g-mean are shown in fig.  <dig>  the table also shows the ability of our approach to find the combination in a reasonably short time. in the worst case only  <dig> seconds are needed.
fig.  <dig> improvement for tis recognition. the figure shows the improvement of our approach with respect to the standard approach of using the best performing classifier

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
the results of our method for the three different evaluation measures are shown in boldface



the differences were significant. for g-mean, in the worst case, the improvement was  <dig>  %, and in the best case, it was  <dig>  %. for aupprc, the results were even better, from  <dig>  to  <dig>  %. for auroc, the improvement was less significant, but it still ranged from  <dig>  to  <dig>  %.
table  <dig> relative improvement for true positives, false negatives, true negatives and false positive of our approach over the best method for tis recognition



furthermore, our method was also able to improve the false positive rate, from  <dig> to  <dig> % depending on the chromosome. this is a significant reduction in the number of putative tis that are fed to any gene recognition system so a significant improvement in its accuracy might also be expected. this would be especially true when the large amount of false positives found by the standard approach is an actual problem for any automatic annotation system. we must bear in mind that any wrong putative tis may end in a false gene being recognized.
fig.  <dig> roc/prc curves for tis prediction for chromosome  <dig>  the figure shows the roc/prc curves for tis prediction for chromosome 1

fig.  <dig> roc/prc curves for tis prediction for chromosome  <dig>  the figure shows the roc/prc curves for tis prediction for chromosome 3

fig.  <dig> roc/prc curves for tis prediction for chromosome  <dig>  the figure shows the roc/prc curves for tis prediction for chromosome 13

fig.  <dig> roc/prc curves for tis prediction for chromosome  <dig>  the figure shows the roc/prc curves for tis prediction for chromosome 19

fig.  <dig> roc/prc curves for tis prediction for chromosome  <dig>  the figure shows the roc/prc curves for tis prediction for chromosome 21



results for stop codon recognition
as previously stated we also addressed the problem of stop codon prediction. from the point of view of performance considerations stop codon recognition is a harder problem than tis prediction. for tis prediction we have only a codon to consider, for stop codon three different codons could be a stop codon, thus the number of putative stop codons is multiplied by three, making the problem more imbalanced and difficult. as an example, the best current method found more than six million false positive stop codons for the five tested human chromosomes. any program for gene recognition would be very negatively affected by such huge number of wrong putative stop codons. however, this also means that the possibilities for improving the performance of the current methods for this problem are higher.

as stated, one of the advantages of our approach is that we can optimize for the performance measure we are interested in, whether it is g-mean, auroc, auprc or any other useful metric. thus, as for tis recognition, we carried out experiments using three performance measures: g-mean, auroc and auprc. again we found that the combination of best models obtained for each measure was different. in fact, more variation was found for stop codons than for tis recognition.

for each of the five studied chromosomes, we obtained three different combinations of models, each one aiming at optimization of one of the three measures mentioned above. table  <dig> shows the models selected for the best combination for each measure and each chromosome. as it did for tis recognition, the constructive method always outperformed the destructive method. the latter always obtained combinations of more models that yielded to over-fitting and worse performance. it is also interesting to note the homogeneous behavior across the different chromosomes. for all five chromosomes, the combination that achieved the best results was the sum for auroc and auprc and the majority for g-mean. there was only one exception, the best combination method for g-mean for chromosome  <dig> was the maximum. however, the combination based on the maximum output was the best-performing method just for this one case. in this latter combination method, the effect of a bad classifier was too harmful to obtain good performance. in this paper, for brevity’s sake, only the best models are reported.
s stands for stop codon method, c for c <dig> , k for k-nn, p for pwm and w for a svm with a wd string kernel



regardless of the optimized measure, there were a few species that never appeared in the best combination: ac, dm, fa, gg, sm, and dr. as was the case for tis recognition, although the contributions of certain species were more relevant than others, the information from many genomes was useful for the prediction of human stop codons, even those species with a large distance from the human genome. it is interesting to note that classifiers trained on the human genome were used just once and for mrna hs sequences only four times. the analysis of the behavior showed that the information found in the human genome was redundant after a few other species were added and then its inclusion did not improve the overall performance.

for the three different measures, auroc, auprc and g-mean, the obtained combinations of models are quite different. that means that we must consider which our aim before designing our classifier. this same behavior was observed for tis recognition. however, here the situation is less stable, with more variations among chromosomes.

regarding the classification models, pwm was never chosen. the stop codon method was chosen for several species, specially for mrna sequences. the decision tree trained with the c <dig>  algorithm was selected several times, but the k-nn rule and the svm method with a string kernel were the most frequently selected methods. these results are similar to the ones obtained for tis recognition.

with respect to the three different objectives, optimizing the g-mean showed the most stable results. for the five chromosomes, the svm method for mam and pt was always selected, with the exception of chromosome  <dig>  however, additional models were selected for each chromosome that varied from one to annother. surprisingly, ce was selected for chromosome  <dig>  despite its large evolutionary distance to human. this result supports the idea that selecting the genomes in an intuitive way is not optimal. for auroc, four or five models were always selected, although not the same models for every chromosome. the svm method for mam and pt was always chosen, but the remaining methods depended on the chromosome. this is another interesting result because most stop codon recognition programs rely on common models for any task. finally, for auprc, significantly more models were selected, from  <dig> to  <dig>  with a significant variation between the chromosomes.

the next step was to compare the performances of our approach and the standard method of choosing the best performing classifier. a summary of the results for stop codon recognition of the five studies chromosomes is shown in table  <dig>  the first interesting result is that the proposed approach beat the standard approach for all measures and all chromosomes. the improvements in auroc, auprc and g-mean are shown in fig.  <dig>  again, our approach was reasonably fast, in the worst case  <dig> seconds were needed to obtain the best combination.
fig.  <dig> improvement for stop codon recognition. the figure shows the improvement of our approach with respect to the standard approach of using the best performing classifier

 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
 <dig> 
the results of our method for the three different evaluation measures are shown in boldface



the differences were significant. for g-mean, in the worst case, the improvement was  <dig>  %, and in the best case, it was  <dig>  %. for aupprc, the results showed an improvement from  <dig>  to  <dig>  %. for auroc, the improvement was also significant, ranging from  <dig>  to  <dig>  %.
table  <dig> relative improvement for true positives, false negatives, true negatives and false positive of our approach over the best method for stop codon recognition



furthermore, our method was also able to improve the true negative rate, from  <dig> to  <dig> % depending on the chromosome. therefore, any annotation system that uses our approach would have a significantly reduced set of putative tiss and better expected performance. this is especially true when a large amount of false positives is found the by the standard approach, which is an actual problem for any automatic annotation system.

the improvements for auroc and auprc values are also shown in fig.  <dig>  the actual roc and prc curves are shown in figs.  <dig>   <dig>   <dig>   <dig> and  <dig>  these figures show that our approach improved the auroc and auprc for all five studied chromosomes. these results demonstrate that the overall performance of the proposed method was better than the performance of best model. the actual roc and prc curves shown in figs.  <dig>   <dig>   <dig>   <dig> and  <dig> show that the curves corresponding to our proposal are always above the curves of the best model. this indicates better performance for all the possible thresholds of classification.
fig.  <dig> roc/prc curves for stop codon prediction for chromosome  <dig>  the figure shows the roc/prc curves for stop codon prediction for chromosome 1

fig.  <dig> roc/prc curves for stop codon prediction for chromosome  <dig>  the figure shows the roc/prc curves for stop codon prediction for chromosome 3

fig.  <dig> roc/prc curves for stop codon prediction for chromosome  <dig>  the figure shows the roc/prc curves for stop codon prediction for chromosome 13

fig.  <dig> roc/prc curves for stop codon prediction for chromosome  <dig>  the figure shows the roc/prc curves for stop codon prediction for chromosome 19

fig.  <dig> roc/prc curves for stop codon prediction for chromosome  <dig>  the figure shows the roc/prc curves for stop codon prediction for chromosome 21



as a final comparison, we performed a wilcoxon test to compare the results of our approach as the best current method for both tis and stop codon prediction. we used the wilcoxon test for comparing pairs of algorithms. we chose this test because it assumes limited commensurability and is safer than parametric tests, because it does not assume normal distributions or homogeneity of variance. furthermore, empirical results  <cit>  show that this test is also stronger than other tests. the p-value of the test was of  <dig>  for the three evaluation measures, auroc, auprc and g-mean. this means that our approach beat the standard one at a confidence level of  <dig> %.

CONCLUSIONS
in this paper, we presented a new approach for functional site recognition in genomic sequences. the approach consists of a stepwise procedure that can combine tens or hundreds of classifiers trained on different sequences and using genomic information from different species. the approach is rapid and can be used for the recognition of any type of functional site. our method substitutes the current approach of selecting the species to be used heuristically based on biological considerations. our results have proven that that methodology is suboptimal because species that are not considered in previous works have been shown useful in our experiments.

although we have focused our experiments on the case of the combination of multiple species, we can also use the proposed approach for combining classifiers trained on different sequences of the same species, or classifiers trained using different parameters or learning procedures.

furthermore, with our method, we can optimize any measure we are interested in. for instance, in the reported experiments, we have shown how we can focus on the optimization of g-mean, auroc or auprc measures. the results have shown that the combination of classifiers that optimizes each one of these measures can be very different, supporting our separate approach.

to provide the necessary focus, we restrict the experimental study of our method to tis and stop codon recognition. the reported results show that the proposed method exhibits improved sensitivity, specificity, auroc and auprc compared with the standard approach of using the best available classifier. the results show a remarkable improvement in the g-mean, auroc and auprc measures. most of the best state-of-the-art gene prediction systems use a first step of functional site recognition, thus as the proposed method significantly improves this site recognizers it has the potential for improving any annotation system.

availability and supporting data
the data sets supporting the results of this article are available at http://cib.uco.es/index.php/supplementary-material-for-stepwise-site-prediction. the source code, in c and licensed under the gnu general public license, used for all methods is also available in the same link. the code only uses gpl libraries and so it should be able to compile in any system. svms were programmed using the libsvm library  <cit> .

endnotes
1the acronyms in parentheses will be used across the paper to refer to the corresponding species.

2the experiment were always carried out using all the negative samples for evaluating the classification performance. for the worst case the ratio minority/majority class is almost 1: <dig>  thus low auprc values are obtained by any method. only a few thousands fps among several millions of tns would obtain a very low precision value. the results for stop codon recognition are worse due to a larger number of tns sequences.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

the two authors of the manuscript have contributed to it equally. both authors read and approved the final manuscript.

