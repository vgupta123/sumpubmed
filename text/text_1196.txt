BACKGROUND
the advent of automated dna sequencing methods has resulted in an enormous growth in the volume of sequence data deposited in public databases. the increasing availability of genome sequence data for many related organisms offers great opportunities to study gene function and genome evolution, but it also presents new challenges for dna sequence analysis, especially for non-coding dna sequences.

for much of the past two decades, research in dna sequence analysis has focused on protein-coding sequences, which account for only a very small proportion of the total genomic content in mammals, most other vertebrates, many invertebrates, and most plants  <cit> . for example, protein-coding gene sequences comprise as little as 1–2% of the human and mouse genomes  <cit> . however, there is an increasing body of evidence showing that non-coding dna sequences contain many functional sequences involved in gene regulation and potentially other unknown functions. for example, it has been estimated that ~50% of bases in intergenic and intronic sequences of drosophila melanogaster are selectively constrained  <cit> . in rodents, it has been inferred that the total number of selectively constrained nucleotides in non-coding dna adjacent to gene sequences is similar to that in coding dna  <cit> , evidence for the presence of a large number of potentially functional non-coding sequences on human chromosome  <dig> has recently been obtained from a comparative genomics analysis  <cit> . determining the fraction of non-coding dna that is functional and establishing what that function is, is therefore a central problem in genome research.

accurate inferences about the function of non-coding dna from comparative methods depends critically on correct alignments of non-coding sequences. however, the alignment of non-coding dna sequences is more difficult than aligning protein-coding sequences. protein-coding sequences tend to be highly evolutionarily conserved, so insertions and deletions  are uncommon and rarely cross codon boundaries. however, indel events are common in non-coding dna, and can occur at most nucleotide sites. numerous advances in sequence alignment methods for noncoding dna have been made. many recently proposed methods are based on heuristic alignment algorithms that can be very fast and accurate in cases where sequences are similar, but perform less well when sequence divergence is high  <cit> . furthermore, heuristic scoring functions are not guaranteed to use the correct relationship between the relative penalties for point substitution and indel events, as they have no evolutionary interpretation. therefore, explicit evolutionary models are desired to address this problem.

true evolutionary models of sequence evolution allow both multiple point substitutions and multiple indel events to affect any site in the sequence. the first true evolutionary model of indel evolution was introduced by thorne, kishino, and felsenstein  <cit> , the tkf <dig> model, and allows single-residue indel events. this method uses a maximum likelihood algorithm to estimate the evolutionary distance between two sequences, summing over all possible alignments in the likelihood calculations  <cit> . it was subsequently improved by allowing longer indel events with a geometric length distribution  <cit> , by assuming that the sequence contains unbreakable fragments, and that only whole fragments are inserted and deleted. this assumption introduces hidden information in the form of fragment boundaries, and may potentially bias multiple alignment  <cit> . knudsen and miyamoto  <cit>  presented a pairwise statistical alignment method based on an explicit evolutionary model of indel events. indel length was assumed to be geometrically distributed, and up to two overlapping events were allowed for indels. a good approximation to such a model was then made using a pair hmm. the geometric distribution parameter, the indel rate, and the evolutionary time were estimated by maximum likelihood. a "long indel" evolutionary model has been introduced recently by miklos et al.  <cit> , which allows multiple-residue indels without hidden information such as fragment boundaries. they developed a finite trajectory approximation for computing the likelihood function, producing a method that has very good performance  <cit> .

previously, keightley and johnson  <cit>  proposed a non-coding sequence alignment method called mcalign. this is based on a simplified evolutionary model that does not allow for any multiple hits or interaction between indel events. a key feature of their approach is that it uses additional data from "unambiguous" alignments  to infer the actual distribution of indel lengths, and the relative rate of indels to point substitutions. they used a monte carlo  hill-climbing algorithm to search for the most probable alignments. this method has been successfully used for aligning real genomic sequences, such as drosophila, rodent and hominid non-coding dna  <cit> . in a simulation study, keightley and johnson  <cit>  found that mcaltgn was generally superior to the other alignment methods that it was compared to.

here, we describe an improved non-coding sequence alignment algorithm based on a generalisation of the evolutionary model used by keightley and johnson  <cit> . we show how a combination of a dynamic programming  algorithm and a one dimensional deterministic optimisation – algorithm can be used to find the most probable pairwise sequence alignment. note that when we assume the jukes-cantor  <cit>  model for nucleotide substitution, the present dp method and the previous mc method are essentially using two different optimisers to attempt to maximise the same "score" function: alignment probability. however, the new optimiser is expected to be better and faster.

we have compared our method to the pair hmm method of knudsen and miyamoto , which is quite similar to the present method in that it explicitly makes use of an evolutionary time parameter  <cit> . we have also compared our method to the heuristic alignment program avid of bray et al.  <cit>  in simulations that assume a general-time-reversible  model  <cit>  that had first been fitted to real drosophila non-coding dna sequence data. it has been shown that avid performs very well compared to other heuristic methods  <cit> , so here we only compare our method to avid rather than other heuristic methods.

in our tests, the new dp method  is up to ten times faster than the previous mc method , and is also faster than the pairhmm_km method  <cit> , although none can compete in speed terms with heuristic methods.

for cases of real non-coding sequence data, we also compared mcalign <dig> with avid and clustalw  <cit> , and show that they perform differently for some specific cases.

implementation
we use a bayesian statistical framework  <cit>  to make inference about the pairwise alignment. the aim is to compute the posterior probabilities of different possible alignments, using the observed sequences as data and eliminating other "nuisance" parameters from the analysis. here we focus on finding the alignment with the highest posterior probability.

let t be the total divergence time between two sequences, a be an alignment of two sequences, and s be the observed data, which is two non-coding dna sequences. in a bayesian framework, the behaviours of all variables are modelled by probability distributions. joint inference about a and t is accomplished simply via bayes' theorem

p=pp1p.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqggoaakcqwghbqycqggsaalcqwg0badcqgg8bafcqwgtbwucqggpaqkcqgh9aqpcqwgqbaucqggoaakcqwghbqycqggsaalcqwgtbwucqgg8bafcqwg0badcqggpaqkcqwgqbaucqggoaakcqwg0badcqggpaqkdawcaaqaaiabigdaxaqaaiabdcfaqjabcicaoiabdofatjabcmcapaaacqgguaglcawljagaaczcamaabmaabagaegymaedacagloagaayzkaaaaaa@4df5@

the probability p that appears in the denominator of equation  may be difficult to calculate, but because in bayesian inference the observed data s is held fixed, the unconditional probability p is constant. we can therefore make our inference using only relative probabilities and p need not be calculated. the other unconditional probability that appears in equation  is p, which is specified as a prior; our method will work for any prior.

to calculate the posterior probability of an alignment, we consider the divergence time t as a nuisance parameter. the posterior probability for an alignment is therefore marginal to the divergence time t, and is calculated using the integral

p = ∫ p dt.    

we approximate this integral using laplace's method, described in detail below.

probability model of sequence evolution
the most difficult probability to specify in equation  is p, which is the joint probability of alignment a and sequences s given a divergence time t. this probability is specified according to a model. here, we use the pair hidden markov model  shown in figure  <dig>  for a comprehensive introduction to pair hmms, see the books by durbin et al.  <cit>  and ewens and grant  <cit> . for a given time t, the pair hmm shown in figure  <dig> generates the sequence alignment by using a series of transitions between states, accompanied by emissions. once in a given state, the transition probabilities  govern which state the pair hmm will move to next. upon arrival at a new state, the pair hmm emits some observed data according to the emission probability distributions . for example, state m has emission probability distribution pminj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgwbacdawgaawcbagaemyba02aasbaawqaaiabdmgapbqabawccqwgubgbdawgaaadbagaemoaaogabeaaasqabaaaaa@3431@ for emitting an aligned base pair mi:nj, and state ix and iy have distributions qmi
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgxbqcdawgaawcbagaemyba02aasbaawqaaiabdmgapbqabaaaleqaaaaa@3139@ and qnj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgxbqcdawgaawcbagaemoba42aasbaawqaaiabdqgaqbqabaaaleqaaaaa@313d@ for emitting nucleotide base mi and nj against a gap, in each of the two sequences .

the transition probabilities for the pair hmm determine the pattern of indels in the alignment. the emission probabilities for the pair hmm determine the sequences that are observed, given the pattern of indels in the alignment. we specify the transition probabilities with an explicit model of insertion and deletion events, and the emission probabilities are specified by a model of nucleotide frequencies and of nucleotide substitutions. we consider the transition and emission probabilities in turn.

we assume that insertions and deletions occur as independent events over time with a total rate θ per interbase site relative to nucleotide substitutions. as we ignore multiple hits for indels, the probability of an indel is 1-e per interbase site, which we approximated as θt, an approximation that should be good for small values of t. an indel can correspond to a gap in sequence x or a gap in sequence y. these two events have the same probability, so the probability of a gap in either of the two sequences, x and y, is then θt/ <dig>  in figure  <dig>  this corresponds to the transition probability from the m state to the ix, <dig> state, or to the iy, <dig> state. the pair hmm must move through one of these states whatever the length of the indel.

the standard affine gap model corresponds to assuming that the lengths of indels follow a geometric distribution  <cit> . empirical data on indel lengths in drosophila non-coding dna show an obvious departure from a geometric distribution, since 1- or 2-residue indels are more common than expected . therefore, our model includes separate parameters for the probabilities of indels of length 1-bp and 2-bp, since these can be reliably estimated. because there are less data on the length distribution for longer indels, we assumed a geometric distribution. other more complex distributions are widely preferred for protein sequence alignments  <cit> , but their large numbers of parameters cannot be reliably fitted using available data for noncoding sequences. let wi be the probability of an indel of length i, with wi+2/wi+ <dig> = wi+1/wi for i ≥  <dig>  and ∑iwi =  <dig>  we follow the approach of keightley and johnson  <cit>  and estimate these parameters, along with the parameter θ that describes the total rate of indels relative to nucleotide substitutions, from additional data, as described below.

as shown in figure  <dig>  given that the pair hmm has arrived in state ix,i or iy,i , the transition probability back to the m state is wi/
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqggoaakcqaixaqmcqghsisldaaewaqaaiabdeha3naabaaaleaacqwgqbgaaeqaaaqaaiabdqgaqjabg2da9iabigdaxaqaaiabdmgapjabgkhitiabigdaxaqdcqghris5aogaeiykakcaaa@3bc7@ and the transition probability to state ix,i+ <dig> or iy,i+ <dig> is  <dig> - wi/
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqggoaakcqaixaqmcqghsisldaaewaqaaiabdeha3naabaaaleaacqwgqbgaaeqaaaqaaiabdqgaqjabg2da9iabigdaxaqaaiabdmgapjabgkhitiabigdaxaqdcqghris5aogaeiykakcaaa@3bc7@.  this produces the desired distribution of indel lengths. we also assume that a gap in sequence x will not be followed directly by a gap in sequence y, and therefore there are no transitions from any of the states ix to any of the states iy, or vice versa. our approach could be extended to accommodate an indel length distribution that is any mixture of geometric distributions  by duplicating the nodes in the pair hmm for insertions and deletions, and setting transition probabilities according to each component in the mixture. such an extension may lead to increased accuracy, but at the expense of increased computational demands.

in order to make our pair hmms describe a probability distribution over all possible alignments, we need to include a begin state and an end state. we set the transition probability from the begin state to states m, ix, <dig> and iy, <dig> to be the same as those from the m state. we allow all states to make transitions to the end state, with a low transition probability ε. if ε is small enough, we can ignore it in all of our calculations  <cit> .

the emission probabilities, which determine the sequences given the pattern of indels, are derived from the general time-reversible  model of nucleotide substitution  <cit> . the jukes-cantor  <cit>  model and the kimura-2-parameter  <cit>  model are two specific cases of the gtr model when certain parameters are fixed.

the emission probabilities qmi
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgxbqcdawgaawcbagaemyba02aasbaawqaaiabdmgapbqabaaaleqaaaaa@3139@ and qnj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgxbqcdawgaawcbagaemoba42aasbaawqaaiabdqgaqbqabaaaleqaaaaa@313d@ are the equilibrium frequencies of nucleotides mi and nj, which are equal for sequences x and y. the emission probabilities pminj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgwbacdawgaawcbagaemyba02aasbaawqaaiabdmgapbqabawccqwgubgbdawgaaadbagaemoaaogabeaaasqabaaaaa@3431@ are the probabilities of starting with an unobserved common ancestor nucleotide o, drawn from the equilibrium distribution of nucleotide frequencies, and evolving independently down two lineages, to mi in time t <dig> along one lineage and to nj in time t <dig> along the other lineage.  in time t1+ t2). since the times t <dig> and t <dig> are individually nonindentifiable, we parameterise our model simply by the total divergence time t = t1+ t <dig>  for a given total divergence time, the conditional probability of evolving to mi given starting with nj is pmi|nj=pminj/qnj
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgwbacdawgaawcbagaemyba02aasbaawqaaiabdmgapbqabawccqgg8bafcqwgubgbdawgaaadbagaemoaaogabeaaasqabagccqgh9aqpcqwgwbacdawgaawcbagaemyba02aasbaawqaaiabdmgapbqabawccqwgubgbdawgaaadbagaemoaaogabeaaasqabagccqggvawlcqwgxbqcdawgaawcbagaemoba42aasbaawqaaiabdqgaqbqabaaaleqaaaaa@43c7@, and the matrix of these conditional probabilities, q, can be calculated from the fixed instantaneous rate matrix a by matrix exponentiation  <cit> , that is,

q = eta.     

which can be calculated using the eigenvalues and eigenvectors of a. here we estimate the rate matrix a from the same external data that is used to estimate the parameters for indels, as described below.

alignment algorithm
given that p has been specified by the model, and that a prior p for the divergence time has also been specified, we have developed an algorithm to infer the approximate maximum a-posteriori  alignment a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@. this is the alignment with highest posterior probability given the observed sequences, with the divergence time eliminated as a nuisance parameter. thus, a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@ is the alignment that maximises p, which is given by the integral in equation . to approximate this integral, we assume that p, when treated as a function of t with both a and s held fixed, is approximately gaussian. then, using laplace's method  <cit> , we can write

p≈p2π|va| <dig>      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqggoaakcqwghbqycqgg8bafcqwgtbwucqggpaqkcqghijyucqwgqbaucqggoaakcqwghbqycqghfly1cuwg0badgaqcamaabaaaleaacqwghbqyaeqaaogaeiifawnaem4uamlaeiykakyaaoaaaeaacqaiyagmcqahapacasqabagccqgg8bafcqwgwbgvdawgaawcbagaemyyaegabeaakiabcyha8naacaaaleqabawaasaaaeaacqaixaqmaeaacqaiyagmaaaaaogaeiola4iaaczcaiaaxmaadaqadaqaaiabisda0agaayjkaiaawmcaaaaa@50ad@

here t^a
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwg0badgaqcamaabaaaleaacqwghbqyaeqaaaaa@2fa4@ is the mode, or value of t that maximises p . the quantity

|va|=1d2ln⁡pdt2|t=t^a     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqgg8bafcqwgwbgvdawgaawcbagaemyyaegabeaakiabcyha8jabg2da9maalaaabagaegymaedabawaasaaaeaacqwgkbazdaahaawcbeqaaiabikdayaaakigbcygasjabc6gaujabdcfaqjabcicaoiabdggahjabcycasiabdsha0jabcyha8jabdofatjabcmcapaqaaiabdsgakjabdsha0naacaaaleqabagaegomaidaaaaakiabcyha8jabdsha0jabg2da9iqbdsha0zaajawaasbaasqaaiabdggahbqabaaaaogaaczcaiaaxmaadaqadaqaaiabiwda1agaayjkaiaawmcaaaaa@5187@

is the modal dispersion, which is the reciprocal of the curvature at the mode t^a
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwg0badgaqcamaabaaaleaacqwghbqyaeqaaaaa@2fa4@. we make a further approximation,

p ≈ p*c     

where c is a constant that depends on s but not on a or t. this approximation can be made when we wish to maximise p over a set of a for which |va| is approximately constant. the goodness of this approximation is discussed below.

given that our approximations hold, equation  shows that a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@ maximises p if and only if a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@ maximises p. since by definition  maximises p, we see that a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@ can be found by unrestricted optimisation of p. our algorithm to find a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@ exploits the fact that we are free to solve the unrestricted optimisation problem with any manner we choose, and specifically that we can "change the order of maximisation". the statistical argument we presented above says that we should find t^a
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwg0badgaqcamaabaaaleaacqwghbqyaeqaaaaa@2fa4@ for each a, and then maximise p over all a. an equivalent solution is to find a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@t, for each t  and then maximise p over all t. the second solution is much easier in practice, because a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@t, can be found using a standard dynamic programming algorithm for pair hmms  <cit> , and then p can be maximised using any standard algorithm for maximising a one dimensional function.

the dynamic programming algorithm guarantees to find the global maximising a^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwghbqygaqcaaaa@2e07@t . we find a straightforward golden section search  <cit>  to be adequate for maximising p. this assumes that there is a single global optimum to be found. actually we are able to trap events where local optima are detected. however, no local optima has ever been detected. we terminate the search when the values of t bracketing the maximum differ by less than  <dig> . moreover, we are able to terminate earlier when the optimal alignment is the same at all points within the bracketing area.

parameterization of models of sequence evolution
our model of noncoding dna evolution is parameterized according to the empirical distribution of indel lengths and their overall rate relative to nucleotide substitutions from species for which essentially unambiguous alignments can be made. here, we consider a parameterization by intronic data of d. simulans and d. sechellia . for these data, the rate of indels per interbase site, relative to the rate of nucleotide substitution, was previously estimated as θ =  <dig>   <cit> . we fitted the observed frequencies of different indels lengths to our model as follows. we directly use the observed frequencies of 1-bp and 2-bp indels, that is,  <dig>  and  <dig> , respectively. for indels of ≥ 3-bp, the frequencies, wx, for the model were obtained by minimizing the sum over ≥ 3-bp indels of the squared differences between the observed frequency distribution and wx = β/αx. here β is a constant. the estimate for α was  <dig> . our software performs this curve fitting and in fact the whole analysis with a supplied empirical distribution of containing any lengths.

a gtr model of nucleotide substitution was fitted to drosophila data shown in table  <dig>  by assuming the gtr model, we can then symmetrise this matrix by averaging the table with its transpose before any of the following calculations were carried out. the estimated equilibrium frequencies of each base are obtained from the normalised column sums, yielding  = . the estimated rates of each type of substitution are obtained by dividing the entries in each column by the respective column sums, yielding:

q^={ <dig> . <dig> . <dig> . <dig> . <dig> . <dig> . <dig> . <dig> .934112}     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgrbqugaqcaiabg2da9maacmaabaqbaeqabqabaaaaaeaacqaiwaamcqgguaglcqai5aqocqaizawmcqai0aancqaiyagmcqaiwaamcqaixaqmaeaacqaiwaamcqgguaglcqaiwaamcqai0aancqai2agncqaixaqmcqai3awncqaixaqmcqaiyagmaeaacqaiwaamcqgguaglcqaiwaamcqaiyagmcqaiwaamcqaizawmcqai3awncqai2agncqaiyagmaeaacqaiwaamcqgguaglcqaiwaamcqaiyagmcqai5aqocqai2agncqaiwaamcqai4aaoaeaacqaiwaamcqgguaglcqaiwaamcqaiyagmcqai4aaocqaixaqmcqaiwaamcqaixaqmcqai0aanaeaacqaiwaamcqgguaglcqai5aqocqaiyagmcqai2agncqai4aaocqaiwaamcqaiyagmaeaacqaiwaamcqgguaglcqaiwaamcqaixaqmcqaiwaamcqai0aancqai0aancqai5aqocqaizawmaeaacqaiwaamcqgguaglcqaiwaamcqaixaqmcqaixaqmcqai2agncqai3awncqai2agncqai0aanaeaacqaiwaamcqgguaglcqaiwaamcqaixaqmcqaizawmcqaizawmcqai2agncqai1aqncqaizawmaeaacqaiwaamcqgguaglcqaiwaamcqaixaqmcqaixaqmcqaiyagmcqai2agncqaixaqmcqaizawmaeaacqaiwaamcqgguaglcqai5aqocqaizawmcqai4aaocqaizawmcqai0aancqai5aqoaeaacqaiwaamcqgguaglcqaiwaamcqaiyagmcqai0aancqai2agncqaiwaamcqaizawmcqai4aaoaeaacqaiwaamcqgguaglcqaiwaamcqaiyagmcqai0aancqaizawmcqaizawmcqaixaqmcqai3awnaeaacqaiwaamcqgguaglcqaiwaamcqaixaqmcqai1aqncqai3awncqai2agncqai1aqncqai4aaoaeaacqaiwaamcqgguaglcqaiwaamcqaizawmcqaiwaamcqai4aaocqaiyagmcqai1aqncqai1aqnaeaacqaiwaamcqgguaglcqai5aqocqaizawmcqai0aancqaixaqmcqaixaqmcqaiyagmaaaacagl7bgaayzfaagaaczcaiaaxmaadaqadaqaaiabieda3agaayjkaiaawmcaaaaa@b877@

finally, find the matrix a that satisfies equation  when time is measured in units of expected substitutions, to obtain our estimate of the instantaneous rate matrix:

a^={− <dig> . <dig> . <dig> − <dig> . <dig> . <dig> − <dig> . <dig> . <dig> − <dig> }.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgbbqqgaqcaiabg2da9maacmaabaqbaeqabqabaaaaaeaacqghsislcqaiwaamcqgguaglcqai5aqocqai5aqocqai1aqncqaixaqmcqaiwaamcqai3awnaeaacqaiwaamcqgguaglcqai3awncqaiwaamcqai2agncqai5aqocqai4aaocqai4aaoaeaacqaiwaamcqgguaglcqaizawmcqaiwaamcqaixaqmcqaiyagmcqai3awncqai3awnaeaacqaiwaamcqgguaglcqai0aancqai0aancqai2agncqai4aaocqaixaqmcqai3awnaeaacqaiwaamcqgguaglcqai0aancqaizawmcqaiwaamcqaiyagmcqai5aqocqai5aqoaeaacqghsislcqaixaqmcqgguaglcqaixaqmcqaiwaamcqaizawmcqai3awnaeaacqaiwaamcqgguaglcqaixaqmcqai1aqncqaizawmcqai0aancqaixaqmcqai0aanaeaacqaiwaamcqgguaglcqaixaqmcqai3awncqaixaqmcqaizawmcqai2agnaeaacqaiwaamcqgguaglcqaixaqmcqai5aqocqai3awncqai2agncqaixaqmcqai2agnaeaacqaiwaamcqgguaglcqaixaqmcqai2agncqai1aqncqaizawmcqaizawmcqai1aqnaeaacqghsislcqaiwaamcqgguaglcqai5aqocqaiyagmcqaiyagmcqaixaqmcqai1aqncqaiyagmaeaacqaiwaamcqgguaglcqaizawmcqai3awncqaizawmcqaixaqmcqaixaqmcqaixaqmaeaacqaiwaamcqgguaglcqaizawmcqai2agncqai3awncqaixaqmcqai5aqocqaiyagmaeaacqaiwaamcqgguaglcqaiyagmcqaizawmcqaixaqmcqaizawmcqai3awncqai1aqnaeaacqaiwaamcqgguaglcqai0aancqai2agncqai3awncqai0aancqai2agncqaixaqmaeaacqghsislcqaiwaamcqgguaglcqai5aqocqai5aqocqaixaqmcqaiyagmcqai4aaocqai4aaoaaaacagl7bgaayzfaagaeiola4iaaczcaiaaxmaadaqadaqaaiabiida4agaayjkaiaawmcaaaaa@b033@

performance evaluation
for non-coding sequences, there are few externally verified alignments available to test the performance of alignment methods. as a substitute, we simulate sequence divergence in silico, so that sequences are generated that are related by a known, "correct" alignment  <cit> . we tested the mcalign <dig> program by examining the posterior probability of the best alignment found by the algorithm, the fraction of correctly aligned sites, an estimate of divergence time calculated from the estimated alignment, and the time taken to compute the alignment.

we compared the dynamic programming approach used here against the monte-carlo approach proposed previously  <cit>  and the pair hmm approach of knudsen and miyamoto  <cit>  in simulations assuming the jukes-cantor model of nucleotide evolution. in comparisons of mcaling <dig> and mcalign, for each simulated pair of sequences, we compared the posterior probability, p ≃ p, of the best alignment found by mcalign <dig> with the best alignments found by mcalign.

we also compared mcalign <dig> against avid of bray et al.  <cit>  in simulations assuming a gtr model, parameterised using the drosophila intronic data as described above. in these comparisons we investigated cases in which the model assumed by mcalign <dig> differed from the simulation model, by using the simpler jc and k2p models to analyse data simulated under a gtr model.

in all comparisons, we calculated the fraction of correctly aligned sites by counting the number of base pairs or bases-to-gaps which were correctly aligned in a comparison to the true alignment. as an alternative measure of alignment quality, we considered the precision of divergence time estimated from the alignments. the estimator of divergence time we used was distance under the gtr model. it is made by estimating the base frequencies qi, and the rates aij, and finding ones that most closely predict the observed net transition matrix p  <cit> . this estimator of divergence time uses only the non-indel regions, and does not use the presence of indels to help estimate divergence time. for all the simulations with a given divergence time t and a certain evolutionary model, we observed the mean and variance of the estimator of t calculated from both the true alignment and the alignments estimated by sequence alignment methods we considered here. we express the precision of the estimator as the estimated root mean squared error , since none of the estimators examined are perfectly unbiased. for t, this is

e.r.m.s.e.=1n∑2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwglbqzcqgguaglcqwgybgccqgguaglcqwgtbqbcqgguaglcqwgzbwccqgguaglcqwglbqzcqgguaglcqgh9aqpdagcaaqaamaalaaabagaegymaedabagaemota4eaamaaqaeabawaaewaaeaacqwg0baddawgaawcbagaemyzaumaem4camnaemidaqhabeaakiabgkhitiabdsha0naabaaaleaacqwg0badcqwgybgccqwg1bqdcqwglbqzaeqaaagccagloagaayzkaawaawbaasqabeaacqaiyagmaaaabeqab0gaeyyeiuoaasqabagccawljagaaczcamaabmaabagaegyoakdacagloagaayzkaaaaaa@51e5@

when there are n simulations.

although our program allows any prior for divergence time, for all comparisons we used a relatively diffuse or uninformative prior:

p=43e     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgqbaucqggoaakcqwg0badcqggpaqkcqgh9aqpdawcaaqaaiabisda0aqaaiabiodazaaacqqglbqzdaahaawcbeqaaiabcicaoiabgkhitmaalaaabagaeginaqdabagaeg4mamdaaiabdsha0jabcmcapaaakiaaxmaacawljawaaewaaeaacqaixaqmcqaiwaamaiaawicacaglpaaaaaa@4035@

which has the mean  <dig> . because low divergences are more likely than high ones for two homologous sequences, this prior on t seems to be a reasonable one.

RESULTS
comparison amongst pairhmm_km, mcalign <dig> and mcalign
we generated non-coding sequence data using a model of non-coding dna evolution in which gap lengths are parametrized by intronic data of d. simulans and d. sechellia, and point substitutions occur according to the jukes-cantor model to compare the performances of pairhmm_km, mcalign <dig>  and mcalign . in this setting, the dp and mc methods aim to find the same most probable alignment, since they assume essentially the same model and prior, but use different algorithms.

for the same simulated datasets, figure  <dig> compares the the log values of alignment probability for mcalign <dig> and mcalign, since they use essentially the same scoring function. for the two methods, the approximation of equation  was used to calculate alignment probability marginal to divergence time. both methods perform equivalently for almost all the simulations when divergence time is very small ; we presume that both methods are able to find the globally most probable alignment. however, when divergence time and/or rate of indel events becomes larger, the dp method begins to outperform the mc method, in the sense that the alignments produced by mcalign <dig> have higher probabilities. for the highest divergence time  and/or rate of indel events  we considered, the dp method outperformed the mc method for almost all of the replicate simulations. this clearly indicates that the mc algorithm of keightley and johnson  <cit>  gets stuck at local optima.

comparison between mcalign <dig> and avid
for each combination of values of t and θ,  <dig> replicate simulations were performed, each simulating a pair of sequences of length  <dig> base pairs, evolving under an indel model and a general time reversible  model of nucleotide substitution, parameterised using real drosophila data. this model is very different to the simple jukes-cantor  model, and quite different to kimura's  <dig> parameter  model. in addition to comparing mcalign <dig> with avid, it is interesting to explore the effect of the nucleotide substitution model assumed by mcalign <dig>  we aligned each simulated pair of sequences using mcalign <dig> under the assumptions of the correct gtr model, a simple k2p model with the ratio of transition events to transversion events equal to  <dig>  and the jc model.

the results in table  <dig> and  <dig> show that the alignments found by mcalign <dig>  when the correct gtr model was assumed, are more accurate for almost all combinations of parameter values we have considered. in comparison, alignments found by mcalign <dig>  when the incorrect jc or k2p models were assumed, are only slightly less accurate. alignments found by avid generally have the lowest accuracy in the cases studied.

here, lower accuracy is indicated by a lower proportion of correctly aligned bases, and estimates of divergence time t that are more biased and have larger e.r.m.s.e.. in particular, alignments produced by avid exhibit consistent upward bias estimates of t, and lower means proportions of correctly aligned bases than alignments produced by mcal1gn <dig>  this remains true, for most of the cases we considered here, whether mcalign <dig> used the correct gtr model of nucleotide substitution, or the incorrect jc or k2p models. the improvement in alignment quality gained by knowing the correct model of nucleotide substitution is generally modest, but worthwhile.

test using real data
we also compared mcalign <dig> with avid and clustalw using real intronic dna sequences from mouse and rat. although we do not know the true alignments for real sequence data, we can still judge the alignment performances of different methods by examining the plausibility of the alignments . here we show three specific cases in which mcalign <dig> performed quite differently from avid and clustalw.

as shown in figure  <dig>  avid and mcalign <dig> produced similar alignments, which include a long gap between ~ <dig> bp–~ <dig> bp. however, the alignment produced by clustalw has several small gaps, which are separated by small segments of aligned bases. in this example, 93% of base pairs are matched in alignments produced by avid and mcalign <dig>  while only 70% of base pairs are matched in the alignment produced by clustalw. although it is impossible to say which alignment is the true alignment, the positions of gaps and proportion of matched bases can give some indications of the alignment plausibility. as the gap-open penalty is higher than the gap-extension penalty, the cost of having several small gaps is higher than the cost of having a long gap, if the total length of gaps is similar among different alignments. meanwhile, as the match state has a positive effect on the alignment probability, the alignment with the higher proportion of matched bases is more likely to be correct. therefore, from the point view of the alignment probability, the alignments produced by mcalign <dig> and avid in this case are more plausible.

however, mcalign <dig> does not always produce less gaps than other methods. as shown in figure  <dig>  the alignment produced by mcalign <dig> has more gaps than the others, but a smaller number of nucleotide differences. without other information it is impossible to say which is more plausible.

execution time
discussion
the problem of statistical inference of an alignment can be separated into two parts: specifying a scoring function, and finding an alignment that optimises that scoring function. the scoring function is specified on biological and/or statistical grounds, and determines the biological meaningfulness and accuracy of the inferred alignment. the choice of optimising algorithm determines the speed of the method, and may hamper accuracy if convergence to a global optimum cannot be guaranteed. a useful alignment method must produce biologically meaningful and accurate alignments, and also must do so quickly. there is a trade-off because the most biologically realistic scoring functions are difficult to optimise.

many scoring functions can essentially be described by the relative contributions for individual nucleotide substitution and indel events, which were traditionally thought of as penalty scores for mismatches and for gaps. however, no general theory guides the selection of these penalties  <cit> , unless divergence time is known  <cit> . although almost all scoring functions have a probabilistic interpretation  <cit> , only ones in which divergence time is an explicit parameter have an evolutionary interpretation. this inclusion of a time parameter is crucial in allowing us to train or parameterize our model using closely related sequences, in order to improve the accuracy of alignments between more distantly related sequences. although the idea of training a scoring function on known alignments is an old one ), in the past it has generally been necessary to use a training set of sequences at similar evolutionary distance as the sequences that are ultimately to be aligned.

heuristic scoring functions are often chosen because an algorithm exists to optimise them efficiently. however, without any underlying evolutionary model, the alignments produced by such methods will be biased , in the sense that they will exhibit features that depart in a systematic direction from the true alignment.

the evolutionary model used in our method strikes a balance between biological realism and computational tractability. we ignore multiple hits of indel events, and assume a distribution of indel lengths that corresponds to an improved affine gap penalty scheme. our model is therefore quite different from more realistic evolutionary models that account properly for multiple hits of indel events  <cit> . the tkf <dig> model is particularly unrealistic for non-coding dna, since it allows only single base indels. keightley and johnson  <cit>  suggest that the present model  is a better approximation to their simulation model , for the parameter values used in their simulations. the tkf <dig> model allows a geometric distribution of indel lengths, but only allows whole insertions to be subsequently deleted, or vice versa. that model has therefore been criticised as introducing non-biological "hidden fragment boundaries". since our model does not allow insertions to be deleted at all, or vice versa, it could be seen as also introducing "hidden fragment boundaries". our model allows a more realistic distribution of indel lengths than the tkf <dig> model. the approach of knudsen and miyamoto  <cit>  could be seen as an extension of the tkf <dig> model, assuming a geometric distribution of indel lengths and allowing multiple hits involving up to two indel events. our results suggest that this model , and our model  offer approximations of very similar quality. intuitively, we would have expected our model to be superior when multiple hits of indel events were rare, i.e. for relatively smaller evolutionary distances and indel rates. however, it seems that in such cases the performance of both methods is so good that it is hard to detect any difference. the "long indel" model of miklos et al.  <cit>  is certainly more realistic than either model, since it allows an arbitrary distribution of indel lengths and accounts almost exactly for multiple hits of indels. however, the finite trajectory algorithm  <cit>  used to account for multiple hits is computationally expensive  in complexity).

when comparing the present method  against a previous monte carlo approach  we are comparing the performance of two different optimisers, with the same scoring function. generally mcalign <dig> has better global optimum finding properties, and is much faster than the monte carlo method to align the same sequences. there are two major reasons for this improvement:

 mcalign <dig> uses a dynamic programming algorithm that is guaranteed to find the most probable alignment for a given divergence time, whereas the stochastic hill-climbing algorithm used in the monte carlo method can only search locally by making heuristically chosen adjustments to an alignment.

 mcalign <dig> stops its search when the maximising divergence time is bracketed to high precision, with the bracket length being reduced by a geometric factor at each step of the algorithm. in contrast, the monte carlo method must search until no improvement in alignment probability is found during a predetermined number of iterations.

in comparisons of mcalign <dig> against the pair hmm method of knudsen and miyamoto, a method with an evolutionary time parameter and an affine gap penalty  <cit> , we found that the two methods performed very similarly for almost all cases, but mcalign <dig> is computationally faster. when comparing mcalign <dig> against avid, a time-naive model  <cit> , we found that mcalign <dig> produced better quality alignments than avid for almost all combinations of parameters. this shows that, when the evolutionary model is known, this knowledge can be used in in a model based inference method to estimate alignment more accurately.

despite being substantially faster than our original monte carlo approach and the pair hmm method of knudsen and miyamoto, mcalign <dig> cannot compete with avid in terms of execution time, because of the clever heuristics used by avid. its general strategy for aligning two sequences is to select anchors using a variant of the smith-waterman algorithm  <cit>  to split long sequences into short sequences, which are aligned by a dynamic programming algorithm, needleman-wunsch  <cit> . a set of maximal matches between sequences is constructed using a suffix tree. this approach is fast and memory efficient, and practical for sequence alignments of large genomic regions up to megabases long  <cit> . in principle, the fast heuristics used by avid can be applied for any pair hmm, and therefore could be combined with our approach to give faster, high quality alignments.

in order to examine the robustness of the mcalign <dig> method, we also investigated cases in which the model assumed in the mcalign <dig> analysis was a simpler model  than the model the data were simulated under . generally, the mcalign <dig> method assuming an incorrect model still has good performance for small and medium divergence times, but for larger divergence times and/or higher indel rates, performance suffers slightly compared with when the correct gtr model was assumed. therefore, when aligning sequences from distant species, it is desirable to use an evolutionary model that is as realistic as possible. however, it is in precisely this situation that it may be most difficult to estimate a model, because the assumption of that the evolutionary process is the same between closely and distantly related species is most likely to break down.

when inferring alignment in a bayesian framework, divergence time is a nuisance parameter that must be eliminated by integration . the computational implementation of our method relies totally on being able to approximate this integral  rather than having to calculate it numerically using e.g. quadrature. the approximations we make will be good when p is approximately normal with constant variance for a certain set of high probability alignments. because p is a product of multinomial probabilities, the normality approximation will be good for long sequences under most models of molecular evolution. the assumption of constant variance will be reasonable when high probability alignments differ from each other by only a few indels and substitutions, relative to the total sequence length. as a concrete check of this assumption, we used the monte carlo search algorithm of keightley and johnson  <cit>  and retained the set of all alignments visited that had probability at least  <dig>  as large as the maximum probability. within this set, the correlation between p computed "exactly"  and p exceeded  <dig> .

it is worth mentioning that, to our knowledge, no better method has been found for eliminating divergence time as a nuisance parameter when estimating alignment. most authors concentrate on finding the true mle for t, summing over all possible alignments, using the em algorithm  <cit> . the best way to estimate the alignment has not been considered in detail, but a common approach is to use the most probable alignment conditional on the observed sequences and conditional on the mle for t. although our method has a more direct bayesian justification, given the approximations made it is likely that the two approaches will give similar results.

CONCLUSIONS
sequence alignment is a major issue for the evolutionary analysis of non-coding dna. we developed a model-based method, mcalign <dig>  as an improvement to the previous monte carlo method mcalign. mcalign <dig> uses a deterministic global optimiser to find the alignment with the highest posterior probability. it allows a rich class of evolutionary models of indel length along with any time reversible model of nucleotide substitution. as shown in the test results, mcalign <dig> outperforms other available non-coding dna sequence alignment methods for all the cases we have considered.

availability and requirements
project name: mcalign2

project home page: 

operating system: platform independent

programming language: c++

other requirements: c++ compiler if downloading and compiling the source code

licence: fsf general public licence.

authors' contributions
jw developed and tested the software in this study, and wrote the manuscript. pdk participated in the design of the study and wrote the manuscript. tj initially conceived of and co-designed the software and wrote the manuscript. all authors read and approved the final manuscript.

