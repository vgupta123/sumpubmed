BACKGROUND
next-generation sequencing  has transformed the area of microbiology by enabling the sequencing of complete genomes of several prokaryote organisms  <cit> . this has led to the better understanding of epidemic outbreaks, improving diagnostic strategies, and the development of new drugs and vaccines. the high throughput data generated from ngs platforms are short reads, thus, the genome assembly is the process where short reads are then organized properly to represent the original genome  <cit> .

the process of genome assembly can be split into three steps:  data processing - where the data quality is checked, handled and formatted to convert the data and prepare it for the next steps;  assembly reads are overlapped  to build consensus sequences called contigs ; and  finishing, which is the ordering of the contigs obtained in the previous step , and then determining the sequences that fit the gaps connecting one contig to the other   <cit> .

scaffold and gaps closure steps can be performed in silico with help of a reference genome. there are several software to perform scaffolding, such as contiguator  <cit> , mauve  <cit>  or maprepeat  <cit> . there are also strategies using mate-pair libraries, when the sequencing provides them. in addition, the approach of whole-genome mapping , or optical mapping, have been used to construct in vitro restriction maps that, when compared to in silico restriction maps of genome assemblies produced by the proprietary software mapsolver™ , can scaffolding contigs. this technique has been considered able to produce assemblies with high accuracy, however depends of in vitro experiments and there are few free software to deal with these produced data  <cit> .

in general, it is necessary to use many strategies, in addition to several tools, to finish assembly projects and obtain complete genome sequences  <cit> . this requires bioinformaticians to possess good knowledge in both software and hardware methodologies besides being trained on the techniques for genome assembly. such trained users are hard to find and hence may delay the assembly projects besides increasing their costs. a remedy to these problems is the creation of user-friendly tools with good usability and minimum start-up time that can allow lay persons to complete the assembly projects.

in recent times, several software for genome assembly with good usability and simple installation processes are been proposed, such as the clc genomics workbench  and lasergene suite  <cit> . however, they are proprietary and only commercially available. some works have shown the advantages of using free web tools in bioinformatics field  <cit> . these web tools use different software that must be separately installed on a user’s machine to be functional. often, the installation process and configuration of the different software modules in a server are complicated and require specific hardware requirements that may not be available to the user thereby making the whole process cumbersome. though, after the installation common users can easily use the tool in a client browser in collaborative mode.

hence, the use of user-friendly web tools, with easy installation and configuration, for assemble and finish genomes is a great advantage. however, the most common web tools, such as galaxy  <cit> , present several other functionalities beside of genome assembly, that can confuse the users and delay the finishing of genome assembly projects. web tools with simple, objective and intuitive interface may help bioinformaticians not to worry about technical activities, as genome assembly, and focus in resolve more relevant questions.

in this context, we propose a web tool, called simba , which includes, through a friendly interface and easy installation, several scripts for analysis and data conversion, software for de novo assembly, construction of scaffolds and closing of gaps. simba can be installed on a linux server and accessed through a web browser over the internet. the main contribution of simba is an intuitive interface that guides the users to execute assembly process through simple and interactive pages.

methods
simba interface was developed using laravel php framework , front-end framework bootstrap  and sqlite database . the internal working process of simba was divided into three modules: projects, assemblies and curation .fig.  <dig> workflow representing data fluxes in simba’s process. a projects management: creation and management of projects; and raw data conversion. b
de novo assembly . in this step the user can insert output files of de novo assembly yielded by external software. c curation: this step has five subdivisions: 1) contigs orientation using contiguator <dig> software by reference or by optical mapping report; 2) start dna correction based on reference genome; 3) merging neighbor contigs with overlap in flank regions using php parser and blast ; 4) mapping  <dig>  bp of flank regions of neighbor contigs  against reference genome; blast is used to determine the start and end position ; the reference genome is trimmed at targets a and b positions; then the raw data is mapped using mira4; the contigs a and b are mapped on consensus sequence obtained through raw data mapping; targets c and d are used to detect start and end position of specific gap; the region is extracted, and the gap is closed. 5) showing statistics about unknown nucleotides present in the genome and allow genome download for manual curation




projects
projects module  shows a general vision of genome sequencing projects, in addition it allows data quality analysis and data format conversions. in this module, each genome assembly project is linked to a raw data file. as input files, simba supports the extensions: bam, sff or fastq and xml. the user can convert the files through different customized programs and scripts, for example, extract a file in fastq and xml format from a file in sff format. it is also possible to visualize read quality reports yielded by fastqc software .

assemblies
simba allows each project to make several attempts for de novo assembly in the assemblies module . therefore, simba is integrated by default with assembly software mira v. <dig> . <dig>   <cit> . simba also provides support to assemblers: mira v. <dig> . <dig> , spades  <cit> , newbler  and minia  <cit> . mira <dig> and mira <dig> were configured with the parameters “job = genome,denovo,accurate parameters = −ge:not =  <dig> iontor_settings -as:mrpc = 100”. minia was configured with the parameters “k_mer =  <dig> and length genome =  <dig> ,000”. spades was configured with the “--iontorrent” parameter. no parameter was applied to newbler. the user can change the parameters. considering the type of licensing of software, only the two mira versions and spades are enabled by default, requiring the user to register and download the other tools. the user also can import an assembly that was accomplished outside the application interface. simba analyzes the results of the assemblies through scripts in python, stores them in the sqlite database, and displays at the online interface. moreover, the interface allows assembly quality analysis using quast software  <cit> .

curation
the curation module , or assembly finishing module, was divided into five steps:  contigs scaffolding based on reference genome using contiguator v <dig> software, or contigs orientation based on whole-genome mapping  report generated by the mapsolver software;  setting start replication site of circular genome based on reference genome ;  building of supercontigs by analyzing the ends of contigs’ neighbors through the basic local alignment search tool   <cit> ;  mapping of raw data sequence in the reference genome to extract a consensus sequence as a strategy to solve repetitive regions, such as phages, plasmids, transposons and rrna operons through maprepeat software ;  displaying statistical reports about the presence or absence of nucleotides that were not determined.

finally, the user can download the final genome file for manual curation with stand-alone tools, such as analysis of remaining gaps and evaluation of regions with sequencing errors to frameshifts correction. soon after, the curated file with the final result can be imported into simba and stored for future reference.

RESULTS
simba presents several great functionalities, such as de novo assembly with different software, assembly quality evaluation, scaffolding by reference or by optical mapping, genome visualization, and gap closing through supercontigs construction. the user-friendly web interface allows that multiple users work in parallel. in the software compared, only galaxy presented this advantage . simba is free and open source, and for simple genome assemblies presents as good functionalities as commercial software, such as clc genomics workbench and lasergene suite .table  <dig> comparison among simba and other software






after the development of the web tool, we used seven genomes to test the efficacy of simba to manage bacterial assembly projects . simba was executed in an apache web server  installed in an operational system centos  <dig> , 1 tb ram, 30 tb hard disk and amd processor with  <dig> cores. the genomes were obtained by ngs sequencing using ion torrent pgm 200 bp sequencing kit . for each project, bam file with raw data was converted to sff and extracted to fastq and xml format through the interface. the de novo assemblies were performed using mira <dig>  mira <dig>  minia, newbler and spades. some assemblies fail due to unknown reasons. the objective of this case study was not to compare assembly results, but certify the facility to perform assemblies with different software in simba. the lowest number of contigs and the quast analysis were used to define which assembly would be used for the scaffolding step.table  <dig> assemblies using simba









aminia assembled only  <dig>  bp of the genome

-the assembly fails for an unknown reason




the assembly completion was performed through two approaches: reference scaffolding  and optical mapping scaffolding . for reference scaffolding, the templates were retrieved from on the ncbi database . for optical mapping scaffolding, it was necessary to construct restriction maps using argus system  whole-genome mapping technique. this technique consists in  the extraction of chromosomal dna of both strains;  immobilization and in situ restriction digestion ;  image capture and measurement of fragments; and  map assembly and analysis using the mapsolver software  <cit> . the contigs order report was used in the step one of the curation module in simba.

simba produced a low number of scaffolds in all sequencing projects . all the assemblies were finalized and the genomes were deposited as complete sequences, however manual curation using the software clc genomic workbench  <dig> was necessary to close some gaps. simba did not detect overlapping of contigs smaller than the word length of the blastn software or gaps without overlaps and information in the reference genome. clc genomic workbench and other commercial software have functions to extend contigs and edit freely sequences, which allow the human intervention to close these types of gaps. however, this can imply in a higher number of mis-assemblies. simba tries minimizing the number of mis-assemblies due to manual curation, for this reason simba was not capable to close all gaps.

simba provided an easy and fast method to help finishing the assemblies of cp <dig>  cp <dig>  cp12c, cpvd <dig>  frc <dig>   <dig> and ncdo <dig>  simba allowed other software analyzed the genomes, and also that the genomic data were stored when the assemblies were finished. our study case shows evidences that simba can be efficiently used for prokaryotic genome assemblies of ion torrent sequencing data. simba can be used with other ngs data, such as data obtained by illumina sequencing systems. simba was designed and tested only to the ion pgm sequencing technology, and there are no guarantees that simba can manage illumina data at this version with the same efficiency. simba allows managing several projects in parallel and provides reports that help to analyze the assemblies.

the assemblies of cp <dig> and cp <dig> showed differences with the original genomes. the new assembly of cp <dig>  detected an increase of ~ <dig> kbp over the original genome . the simba’s genomic visualization confirmed and extended the mapsolver results, allowing a detailed comparison between the old assembly and the new assembly . it also allowed that were detected insertion positions  and mis-assemblies . the use of wgm technique has allowed the discover of mis-assemblies in bacterial genomes, such as a large inversion in cp <dig> recently published  <cit> . wgm has been considered a strategy of high accuracy to finish assemblies . however, mapsolver is not capable to generate scaffolds. simba allows deal with contigs order reports of mapsolver, produces scaffolds based on the restriction positions, and thus, more accurate assemblies than based on reference genome.fig.  <dig> mapsolver and simba visualizations of the comparison between the new and old assemblies of cp <dig>  a mapsolver alignment visualization among the whole-genome optical mapping , the old assembly , and the new assembly . dark blue lines in the barcodes represent restriction sites. lines connecting barcodes represent similarity regions. b the old assembly  is ~ <dig> kbp smaller than the restriction map , that have a length near to the new assembly . c simba visualization compares the cp <dig> old assembly  with the new assembly . red lines that connect the line above and the line below represent syntenic regions. the visualization shows: d regions undetected in the old assembly; e mis-assemblies in the old assembly; and  the length difference between the genomes. the visualization showed by simba agrees with the mapsolver results. in addition, it gives more detailed information about the genome differences




CONCLUSIONS
simba is a simple and useful tool, which uses a friendly interface to abstract complex tasks of the bacterial genome assembly process. it can enable researchers with little or no experience in computer science to use it thereby reducing the execution time of tasks and the associated cost. simba facilitates the data conversion process, sequencing and assemblies’ quality evaluation, running different assembly software, scaffolding of high accuracy with wgm, as well as comparison of multiple outcomes allowing the use of visual perception as a transforming element in assembly finishing processes. another benefit of simba lies in the centralization of fitting data in laboratories, allowing their managers to monitor numerous assembly projects simultaneously. finally, simba allows the construction of an institutional knowledge base for genome assembly and allows for collaborative access. we have as prospects for the future integration of annotation tools in the simba interface.

availability and requirements
  • project name: ufmg-simba

• project home page:
http://ufmg-simba.sourceforge.net


• operating system: linux 64bit , platform independent 

• programming languages: php, python

• other requirements: ncbi-blast+, biopython library, apache server

• license: gpl v3

• any restrictions to use by non-academics: none

the documentation can be obtained in the project home page. we also make available a linux virtual machine based on simba installed  at the same url. the new assembly of cp <dig> was deposited under genbank assembly accession gca_ <dig> .

abbreviations
cp258
corynebacterium pseudotuberculosis 258

cp1002
corynebacterium pseudotuberculosis 1002

cp12c
corynebacterium pseudotuberculosis 12c

cpvd57
corynebacterium pseudotuberculosis vd57

frc11
corynebacterium ulcerans frc11

210932
corynebacterium ulcerans 210932

ncdo2118
lactococcus lactis subsp. lactis ncdo 2118

wgmwhole-genome mapping

