BACKGROUND
dna methylation is an important epigenetic mark that is involved in gene regulation, x-chromosome inactivation, imprinting and development. next-generation sequencing of bisulfite converted dna makes it possible to detect genome wide dna methylation at base-pair resolution  <cit> . wgbs generates high quality dna methylomes covering more than 90% of cytosines in the human genome, at a single base-pair resolution  <cit> . an alternative to wgbs is rrbs  <cit> , which is becoming popular for studies with multiple samples. in rrbs, genomic dna is first fragmented by enzymatic digestion  and followed by a size selection step to enrich the fragments for cpg islands. additionally, double restriction-enzyme digestion methods may improve the coverage and accuracy of rrbs  <cit> .

to date, several bisulfite-sequencing  aligners have been developed. bs seeker  <cit>  was the first bs aligner based on a three-letter approach using a general purpose short read mapper, bowtie  <cit> . subsequently, similar tools were developed including bismark  <cit> , brat-bw  <cit>  and methylcoder  <cit> . bs aligners employing three-letter approaches perform in silico c-to-t conversion for both reads and reference sequences prior to mapping. other bs aligners, such as bsmap  <cit> , rmapbs  <cit>  and gsnap  <cit> , employ wild-card approaches.

most of these alignment tools are designed for wgbs, and only rrbsmap  <cit>  is tailored for rrbs by mapping adapter-trimmed reads around the restriction enzyme cutting sites. tools such as bismark can also map rrbs reads against the reference genome with the assistance of external tool for trimming adapters. however, these tools also attempt to map the reads to whole genome including regions where the reads would not be oriented from, leading to inefficient use of computational resources and increased mapping errors. moreover, most of these aligners do not allow gapped alignment . bismark performs gapped mapping when using bowtie <dig>  but it only enables the ‘end-to-end’ mode. bsmap can handle one continuous gap with up to three nucleotides.

here we present bs-seeker <dig>  an updated version of bs seeker. bs-seeker <dig> is a bisulfite sequencing alignment tool that performs genome indexing, read alignment and dna methylation levels calling for each cytosine. it supports both local and gapped alignment by integrating bowtie <dig>  <cit> , bowtie  <cit> , soap  <cit>  and rmap  <cit> . various types of libraries are supported, including wgbs/rrbs, directional/non-directional library, single-end/paired-end sequencing, and user-defined enzyme cutting sites for variant versions of rrbs. bs-seeker <dig> maps rrbs data efficiently and accurately by only indexing the reduced representation genome regions. bs-seeker <dig> works with raw sequences and generates outputs for read alignments and methylation levels at single-base resolution. bs-seeker <dig> also provides an option to remove reads with incomplete bisulfite conversion, reducing the overestimation of dna methylation levels. lastly, bs-seeker <dig> is available through galaxy  <cit>  via the toolshed .

we compared the performance of bs-seeker <dig> with bismark and bsmap on both real data and simulated data on mappability, mapping accuracy and computational cpu and ram costs. our results show that bs-seeker <dig> is able to accurately and efficiently map reads from both wgbs and rrbs protocols. on real data, bs-seeker <dig> in the local alignment mode maps more reads than the other aligners. by mapping to the reduced representation genome, bs-seeker <dig> is more efficient and accurate than mapping to the whole genome.

implementation
bs-seeker <dig> as a pipeline for aligning bisulfite sequencing data
bs-seeker <dig> is implemented in python, integrating steps of building indexes from reference genomes, mapping reads from various formats , and generating alignment results  and methylation calls , which can be directly loaded into a genome browser, such as igv  <cit>  . detailed mapping summaries for each cytosine  and all covered positions  are also reported for downstream analysis . bs-seeker <dig> can be coupled with a variety of short read aligners with a three-letter approach. bs-seeker <dig> is also highly customizable, as the user can choose alignment modes, and control almost all the parameters of utilized aligners.

gapped mapping and local alignment
bs-seeker <dig> takes advantage of bowtie2’s gapped-mapping, and supports both ‘local’ and ‘end-to-end’ alignment modes. by using local alignment, bs-seeker <dig> can effectively map reads with 3’ contamination of adapters . in illumina sequencing, reads sometimes contain continuous sequencing errors or missing base calls, probably caused by bubble in flow cell . bs-seeker <dig> circumvents these problems by using local alignments to remove the mismatched nucleotides from the end of the reads to maximize the mappability. in order to quantify mappability improvements attributable to gapped-mapping and local alignments, we compared mapping results of bs-seeker <dig> on real sequencing data by utilizing bowtie and bowtie2-local. the results showed that in the real testing data set for wgbs, compared to bowtie, an extra 11% of total reads could be mapped by using the local alignment model of bowtie <dig>  specifically,  <dig> % of the total reads could be mapped by allowing indels  and  <dig> % could be salvaged using the local alignment feature .

masked genome for rrbs mapping
bs-seeker <dig> builds special index for rrbs libraries, which results in improvements of mapping speed, mappability and mapping accuracy and less memory usage . rrbs libraries are generated by restriction enzyme  digestion and the subsequent selection of fragment sizes typically ranging from 40 bp to 220 bp, corresponding to less than 5% of the entire genome. to model this we mask the reference genome in silico based on restriction sites . genomic regions not falling within the size-selected rrbs fragments are masked and only unmasked regions are indexed . there are four main advantages for mapping against the rr genome instead of the whole genome. first, it reduces the size of the pre-built index. taking the reference genome mouse mm <dig> as an example, the *.ebwt files built by bowite are over ~12g bytes for the whole genome, but only ~ <dig> g bytes for the masked genome. second, it accelerates the alignment step. mapping to rr genome is about  <dig> times faster than mapping to the whole genome , as the masked genome represents a much smaller search space. third, it increases the mapping accuracy. masked genomes help reduce spurious mapping when the reads contain sequencing errors . based on our simulated error-containing data, accuracy for mapping to the rr genome  is higher compared to mapping to the whole genome  . lastly, it keeps reads that would have pseudo-multiple hits when mapping to whole genome. a pseudo-multiple hit occurs when a read coming from the rr genome has another best match in the masked regions. in the simulated error-free data, pseudo-multiple hits are avoided when the reads are mapped to the rr genome, resulting in higher mappability  than mapped to the whole genome  .

100 k reads of length 50 bp are simulated from the rr genome. mapping is done using bs-seeker <dig> . mapping to the reduced represented  index is much faster than mapping to the whole genome  index. for error-free samples, the mappability to rr is higher than wg by avoiding pseudo-multiple hits. for error-containing samples, mapping to the rr index will result in higher accuracy than mapping to the wg index. arrows indicate the improvement directions.

filtering reads with incomplete bisulfite conversion
high bisulfite conversion rate is a critical factor for accurately estimating the methylation levels. incomplete bisulfite conversion may lead to an overestimation of the methylation level. bs-seeker <dig> provides a computational solution to remove reads with incomplete bisulfite conversion . unmethylated phage dna is often spiked into the samples as a control, to measure bisulfite conversion rates. we analysed the methylation pattern of the phage reads and observed two groups of reads from the distribution of unconverted cytosine sites: sporadically distributed and densely distributed . the sporadic group could be due to random un-conversion failure, or from t-to-c sequencing errors. the dense group is a set of reads that are almost entirely un-converted, potentially caused by the formation of secondary structure. we found that 82% of un-converted non-cpg sites were in the dense group, and only 18% were in the sporadic group. the same pattern was also observed on the mouse dna data . bs-seeker <dig> provides an optional function to remove reads with densely un-converted non-cpg sites. to validate the feasibility, we mapped rrbs reads of two technical replicates , denoted as data sets a and b. the calculated methylation levels of non-cpg contexts show about 5-fold difference between the two replicates . after removing the potentially un-converted reads, the methylation level gaps of non-cpg contexts were narrowed . however, this option is not suggested for samples with highly methylated non-cpg context, as it might reject bona fide methylated reads.

cgmap and atcgmap files
we defined new file formats for the representation of dna methylomes, cgmap and atcgmap . the dna methylation levels and read counts for both cpg and cph sites are shown in cgmap file. atcgmap file includes read counts for all mapped sites and both strands. both cgmap and atcgmap files provide detailed mapping results, and are convenient for downstream analysis.

integration with galaxy
we have integrated bs-seeker <dig> into galaxy to generate a user-friendly bisulfite sequencing read aligner. users may can use our galaxy server  , or install bs-seeker <dig> in their local galaxy server via galaxy toolshed .

RESULTS
evaluations of different bs aligners
we evaluated bs-seeker <dig> against two other popular bs aligners, bismark and bsmap. both bs-seeker <dig> and bismark are implemented based on the three-letter approach, whereas bsmap is based on the wild-card approach. we compared them on both wgbs and rrbs data. to estimate the mapping accuracy, we test the three tools on two simulated data sets that are error-free and error-containing, respectively. three models of bs-seeker <dig> were used: bs-seeker2-local , bs-seeker2-e2e  and bs-seeker2-bowtie . since bismark supports bowtie <dig> only with the ‘end-to-end’ alignment model, we tested it in two modes: bowite2-e2e and bowtie.

parameters. for all the evaluations of bs aligners , 100 k reads  were used. up to  <dig> mismatches were allowed for mapping, except for bismark-bowtie2-e2e , which does not provide such parameters. both bs-seeker <dig> and bismark utilize bowtie/bowtie <dig> for mapping, and the main parameters passed to the short read aligners are identical. the exact commands used in testing are listed in additional file 1: supplementary methods. the mapping runs were performed on a linux server with  <dig> cores  xeon cpu, x <dig>   <dig> ghz) and with  <dig> gb ram running 64bit red hat  <dig> .7- <dig> 

rrbs related issues. in the comparisons of mapping rrbs reads, bs-seeker <dig> mapped the reads against the index of the reduced represented  genome. both bismark and bsmap map reads against the whole genome regardless of the rrbs fragment lengths. bs-seeker <dig> and bsmap have built-in functions to remove adapters, while bismark does not. as a result we performed an additional step for adapter trimming  for bismark.

evaluation criteria. we evaluated the performance of the bs aligners on four criteria: 1) mappability, the percentage of reads that are uniquely mapped against all reads; 2) mapping accuracy, the percentage of the correctly mapped reads against all the uniquely mapped reads ; 3) time, the cpu time used for alignment, which is calculated as the total cpu seconds cost by the whole process in user mode; 4) ram usage, the maximum cost of random-access memory for a whole task.

bisulfite sequencing data–real and simulated data
the real data sets are single-end reads generated from mouse/human bisulfite libraries. the wgbs data is downloaded from published data sets, srr <dig>   and srr <dig>   <cit> . the rrbs data is from our unpublished mouse rrbs library. in order to measure the mapping accuracy, we also generated simulated reads . all the simulated reads are randomly generated from the reference genome  assuming directional libraries with read lengths same with those of the real data sets. rrbs reads are generated from fragments with lengths ranging between  <dig> bp and  <dig> bp. for reads shorter than  <dig> bp, the adapter sequence “agatcggaagagcacacgtctgaactccagtca” was added to the 3’ end. two kinds of simulated sequences were generated: error-free and error-containing reads. the error-free simulated reads are faithfully converted and have no sequencing error. the simulated error-containing reads are converted with 1% failure, and sequencing errors by cycles are also added. the error rate per cycle follows the distribution of sequencing error rates in the real data . all the datasets used for testing aligners are available on the website of bs-seeker <dig> 

performance on wgbs mapping
generally, for single-end data of wgbs library, the performance of bs-seeker <dig> is comparable with both bismark and bsmap . bs-seeker <dig> has the similar mappability and mapping accuracy with bismark and bsmap on simulation data. in real data, bs-seeker <dig> with local alignment mode has the highest mappability , which is about 10% higher than any alignment mode used in bismark  and bsmap . this suggests that local alignments are more suitable for real data, which could have more sequencing errors  than simulated data. indels, continuous errors and adapters were not considered in the simulated data sets. results also showed that bs-seeker2-bowtie requires the less memory than bismark and bsmap , and the speed is improved over bismark . both bs-seeker <dig> and bismark integrating with bowtie <dig> require more time and more memory than they were with bowtie, as bowtie <dig> would require more resources for multiple-seed strategy and searching indels.

in this table, bs-seeker <dig> maps the reads to whole genome. map = mappability, acc = accuracy, local = local alignment model of bowtie <dig>  e2e = end-to-end alignment model of bowtie <dig> 

similarly, for the paired-end data of wgbs library, both bs-seeker <dig> and bismark map more reads than bsmap on simulation data, also with relatively higher accuracy . among the three aligners, bs-seeker <dig> requires the least memory . the local alignment mode of bs-seeker <dig> has the highest mappability. different from that of single-end data, our comparisons showed that none of the three aligners achieve 100% accuracy when mapping the error-free simulated paired-end reads. as the searching space when aligning the mate pairs is quite large, it is possible that only suboptimal hits are reported in order to improve efficiency.

performance on rrbs mapping
bs-seeker <dig> outperform the other aligners on rrbs data . for the error-free data, bs-seeker <dig> has the highest mappability and 100% accuracy. bismark mapped reads to the whole genome with lower mappability than bs-seeker <dig>  as a result of the pseudo-multiple hits issue. bsmap is the only aligner whose mapping accuracy doesn’t reach 100% when mapping simulated error-free reads. for error-containing simulated data, bs-seeker2-bowtie shows improved mappability and accuracy compared to bismark-bowtie and higher accuracy than bsmap. as the 3’ end of reads tends to have l more sequencing errors, it’s not easy to remove all the adapters, since this portion tends to be of lower quality in real data, making reads with 3’ un-trimmed adapters difficult to align. bs-seeker <dig> using the local alignment mode of bowtie <dig> provides an effective way to map these reads. an appropriately broad range for fragment lengths of rr genome is suggested for bs-seeker <dig> to optimize the mappability .

map = mappability, acc = accuracy, local = local alignment mode, e2e = end-to-end alignment mode. in this table, bs-seeker <dig> maps the reads to rr genome .

feature comparisons
bs-seeker <dig> has been improved from bs-seeker, by integrating variable aligners, supporting both wgbs and rrbs, and allowing mapping both single-end and paired-end reads, supporting all major input formats and output formats. for a clear view on the improvements of bs-seeker <dig>  a comparison table on the supported features is presented  in comparison with other bs aligners.

discussion
with local alignment, bs-seeker <dig> is more capable of mapping “damaged” reads from a bad library with continuous sequencing errors or 3’ end contaminations. although both bs-seeker <dig> and bsmap consider restriction site information for mapping rrbs-generated reads, bs-seeker <dig> is able to process any combination of enzymes, such as double-enzyme digestion protocols , facilitating the experiment design on various enzymes. in the real data, a small portion of rrbs-generated reads could originate from regions outside the rr genome, so that they could only be mapped when using the whole genome index. however, these reads are usually not of interest for rrbs data and are best left out.

rrbs libraries tend to have short reads contaminated with adapters in the sequenced reads, and the current in silico adapter trimming approach is not always effective to remove them. as a result of evaluation, bs-seeker <dig> with local alignments is able to map the most reads than other tools in the comparison.

both bowtie and the ‘end-to-end’ mode of bowtie <dig> require reads to be fully mapped on the genome. bowtie utilizes a single-seed method and evaluates the number of mismatches, while bowtie <dig> utilizes a multiple-seed method and reports the best hit according to the score calculated by dynamic programming. generally bowtie is faster than bowtie <dig> but less sensitive for long reads. the ‘local alignment’ mode of bowtie <dig> allows reads to be partially mapped by trimming 5’ or 3’ ends during mapping, and bs-seeker <dig> in ‘local alignment’ mode will report the hit with the unique best scores, which should exceed the minimum score . the ‘local alignment’ mode requires more computing time due to the dynamic programming, and is effective for aligning reads sequenced with adapters or continuous errors. the ‘local alignment’ mode assumed the true originations of the reads are included in the reference genome, thus it could be possible to introduce false positive if reads are not from the reference genome.

lastly, we provide some suggestions for the optimal use of bs-seeker <dig>  for short reads, which usually are of high quality, choosing bs-seeker <dig> coupled with bowtie is enough to achieve a high mappability and is also time efficient. for gapped alignments, bs-seeker <dig> with bowtie <dig> is the best choice. for long reads with lower quality at the 3’ end, or data where some tiles have low sequence quality in several cycles, bowtie <dig> in local alignment mode will achieve higher mappability but requires slightly longer cpu times. the ‘end-to-end’ mode of bowtie <dig> could work best for some specific libraries. for example, the ‘multiple seed’ strategy could map more reads in a data set with low sequencing quality at the 5’ ends as it will have more chances to generate a unique hit by searching more seeds.

CONCLUSIONS
we provide a bs alignment pipeline, bs-seeker <dig>  for fast and accurate mapping of bs reads from various types of library. we improved bs-seeker <dig> by utilizing multiple short-read mapping aligners, supporting gapped mapping and local alignment and building special indexes for handling rrbs data. our comparisons with respect to two other popular bs aligners showed that bs-seeker <dig> has a comparable performance on wgbs data and outperforms on rrbs data with the others.

availability and requirements
project name: bs seeker  <dig> 

project home page: http://pellegrini.mcdb.ucla.edu/bs_seeker2/.

operating system: linux/mac os.

programming language: python  <dig>  + .

other requirements: pysam package, bowtie/bowtie <dig> 

license: mit license.

any restrictions to use by non-academics: no.

abbreviations
wgbs: whole genome bisulfite sequencing; rrbs: reduced represented bisulfite sequencing; bs aligner: bisulfite sequencing aligner.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
wg, pf, sc, xs, mqz, pyc and mp are responsible for design of bs-seeker <dig>  wg, pyc and mp are responsible for the conception and writing of the manuscript. wg, pf and pyc are responsible for the implementations of bs-seeker <dig>  wg, wy, pf and pyc are responsible for the configurations of tools on galaxy toolshed. wy is responsible of maintaining the ucla galaxy server of bs-seeker <dig>  all authors read and approved the final manuscript.

supplementary material
additional file 1
pdf file contains supplementary methods, figure s1-s <dig>  table s <dig> and descriptions of supplementary datasets.

click here for file

 acknowledgements
we thank marco morselli, luz orozco and larry lam for helpful discussion. this work was supported by the institute of genomics and proteomics at ucla to mp, nsfc  and nbrpc  to mqz. wg received support from the china scholarship council.
