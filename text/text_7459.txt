BACKGROUND
dna microarrays and other genome-inspired, high-throughput technologies allow us to capture information regarding gene expression across the entire collection of genes in an organism. while it has long been argued that such genome-wide profiles should allow the identification of networks and pathways, deducing such interactions for even a small number of genes remains a daunting task. although several gene network modeling techniques have been applied to microarray data, including weight matrices  <cit> , boolean networks  <cit> , and differential equations  <cit> , bayesian networks , bn seemed to show the greatest promise in the analysis of expression data as they provided the ability to learn network structures and develop predictive models of system response  <cit> .

in the bn formalism, a network of interacting genes is represented as a graph in which the genes are "nodes" and interactions between genes are "edges"; the terms network and graph are often used interchangeably and in a bn framework, the edges are directed. as an example, consider a simple graph in which a node, gene <dig>  is the only parent of a second node, gene <dig> . associated with the edge between them is a conditional probability table that provides estimates of the likelihood of the state of gene <dig> given the state of gene <dig>  for instance, the probability of gene <dig> being over-expressed given that gene <dig> is over-expressed is  <dig> , which may be interpreted as implying gene <dig> activates gene <dig>  placing this into a formal context, a bayesian network is defined to be a pair  where g is a directed acyclic graph  whose vertices are random variables x <dig> ...,xn and θ is the conditional distribution for each variable given its parents p). bayesian networks only allow dependencies between a node and its parents and conditional independence statements encoded by the network structure define the conditional probability distributions; in the case of genes, the factors that influence its expression.

bns were first applied to gene expression studies in the analysis of the yeast cell cycle  <cit> , a dataset that consisted of expression data collected over a carefully planned time-course  <cit> . friedman and colleagues were able to deduce a predictive model of the cell cycle machinery in yeast from this data, a result that generated a great deal of excitement within the research community. however, application of bn analysis to more "realistic" datasets  failed to provide similarly useful insight and as such is rarely applied in analysis of expression profiling data.

application of bayesian network analysis in genomics is challenging for a number of reasons. the first problem is that learning bns is computationally expensive as, ideally, one must assess all potential network topologies corresponding to all possible sets of directed acyclic graphs linking the genes. this results in a combinatorial explosion of the number of possible structures and parameters; formally this has been shown to be an np-complete problem  <cit> . as an alternative, general purpose heuristic search algorithms, such as greedy hill climbing, can be used to explore the "state space" of the problem  in an attempt to optimize some scoring function. the problem with these approaches is that they often find local maxima and do not converge to the globally optimal solution. this accounts, in most instances, for the failure of bn analysis to find "realistic" networks in datasets that lacked the richness of the cell cycle time course.

a potential solution to the limitations of the type of general-purpose search algorithms was proposed by wolpert and macready, who noted that the use of domain-specific knowledge can provide a useful bias that can lead to near-optimal solutions in exploring the state space of a particular problem  <cit> . in the context of bn analysis of microarray data, a useful bias can be introduced through the use of preliminary network topologies as soft constraints to seed the search for a network graph  <cit> , an approach that has been applied in a variety of related problems  <cit> . although a network seed biases the search for the best topology, it does not limit it so that new potential interactions between genes can be identified.

a number of possibilities exist to provide prior seeds for the network topologies, including pathway/interaction databases, networks deduced from the published biomedical literature indexed in pubmed, and those constructed from high-throughput interaction screens such as the protein-protein interaction  described by rual and colleagues  <cit> . as our goal, in part, is to discover new interactions, we chose to concentrate on prior networks deduced from the literature and ppi data which often include potential interactions not yet annotated in curated pathway databases. as such, this approach has potential to discover new interactions by combining diverse sources of data and information.

a second challenge in the application of methods such as bn analysis to microarrays is the typical design of genomics studies. as noted previously, most microarray studies do not involve uniform temporal sampling of the state of a system where inferred relationships in the gene expression state space of genes can more easily be detected. rather, typical studies involve static comparisons of different phenotypic or treatment groups where relationships between gene states can be much more subtle. further, and possibly more importantly, the large number of genes assayed on a single array and the relatively small number of samples profiled generally provide too few measurements to constrain potential models, and arrive at an optimal solution. to address this, we implement model averaging through bootstrapping which allows us to compute confidence estimates for network features in the models we derive.

ultimately, the question we must resolve is whether application of bn analysis to gene expression data can reveal useful networks that can lead to testable hypotheses about the state and response of the systems under study. in particular, our goal in this manuscript is to assess the use of prior network structures as seeds for a search of the gene expression state space. to do this, we present an analysis of two leukemia datasets  <cit> . as described below, we find that by combining microarray data with prior network structures deduced from the literature, ppi, or a combination of these, we can better recover known pathways and relationships between genes than when analyzing microarray data without a network seed. to estimate the robustness of our approach, we compare the learned networks to known networks from the kegg database  <cit>  and show that networks constructed with high confidence edges have a very small false-positive rate, but at the expense of missing true edges. this suggests that even when applied to imperfect data, our approach provides a conservative way of recovering pathways and of identifying potential new interactions that can be further evaluated in the laboratory.

RESULTS
our analytical pipeline closely follows that outlined by friedman and colleagues  <cit> , with important modifications. one starts with normalized dna microarray data from an appropriate study and identifies a set of candidate genes that will be further analyzed. for example, one might use a variety of statistical methods to identify genes correlating with the various phenotypic states under study or select a set of genes representing a particular pathway or process thought relevant to the system being analyzed. the expression data for these genes are then discretized using a multinomial model  <cit>  and assigned to three mutually exclusive and exhaustive bins  by equal-width binning. this discretized data then provides the "raw material" that is subsequently used to learn a bayesian network. our modifications of the friedman et al. approach involve the introduction of a prior network seed to initiate the learning stage and the use of bootstrapping to estimate confidence in the equivalence classes of final networks. as a means of comparing a bn analysis both with and without network seeds, we compared the resulting networks to "known" pathways and evaluated our ability to reproduce documented interactions between genes.

deducing prior network structure from the published literature
the published biomedical literature represents nearly the entirety of our existing knowledge of biological entities and the relationships between them. there are a variety of methods that can be used to infer relationships between genes based on published results. for the purpose of the analysis presented here, we chose a simple but effective way of inferring potential functional associations between genes, the co-occurrences method described by jensen and colleagues  <cit> . quite simply, if two and only two genes are described in a single article indexed in pubmed  <cit> , then one assumes an interaction; weights are assigned to interactions based on the relative number of articles mentioning those genes together. formally, we create a graph in which nodes representing genes are connected by an edge. for two genes, a and b, we assign a co-occurrence edge weight, which counts the number of times an "interaction" appears in the literature relative to the total number of manuscripts surveyed, as prior probabilities:

 p=wmax⁡e∈ew 

where w and w denote the weight of edge  and the weight of edge e respectively in the set of edges e.

the choice of limiting edge assignments to genes appearing pair-wise in articles indexed in pubmed was based on an analysis of the network properties that can be deduced from the literature. specifically, limiting networks to papers containing two and only two genes results in network topologies exhibiting a scale-free behavior. in contrast, increasing the threshold beyond two genes introduced deviations from scale-free behavior, leading to networks that have properties of a complete graph . further, setting some threshold is necessary to remove publications including whole-genome studies that mention thousands of genes and consequently produce networks where each node is connected to every other node. the choice of two, while conservative, allows for a prior network with the highest possible confidence without resorting to more ambitious text-mining approaches.

deducing prior network structure from high-throughput screens
there are many sources of network priors other than the literature, including the growing collection of interactome data available from high-throughput yeast two hybrid protein-protein interaction  screens such as that recently released by rual and colleagues  <cit> . while these datasets are still sparse – current interactome datasets are thought to represent only about 1% of the human interactome  – they represent an unbiased screen for interactions and have identified many not catalogued in the published literature. since we were interested in exploring the usefulness of ppi-based networks as priors, we chose to compensate for their relative sparseness by using the "significant gene" set derived from our initial microarray analysis as a starting point to search the ppi data and allowed the initial networks to expand through protein interactions at a distance at most k =  <dig> interactions away using floyd's all-pairs shortest paths algorithm  <cit> . for ppi networks, we use a uniform distribution for the prior probabilities for all edges.

setting an initial directionality for network edges
as a bn is a directed acyclic graph , the initial network used to seed the search must have directions assigned to each edge. to address this for the undirected literature and ppi networks, we developed an approach based on a modified depth-first search  algorithm to traverse the graph and make assignments. simply, one starts at some randomly selected node and explores the graph as far as possible along each branch before backtracking, assigning directions as the graph is traversed. because dfs is commonly used for cycle detection  <cit> , we modified the standard algorithm to keep edges in the depth-first tree but direct back edges in increasing order of visiting timestamp to ensure the resulting graph is a dag . while all of the resulting edges may not be directed appropriately, this is not a problem as the bn search considers not only additions and deletions of edges but also edge reversals and therefore provides a means of correcting an error made at this stage. as this method cannot estimate the conditional probabilities on the edges, we assume a flat distribution such that all interactions are, initially, equally likely.

bootstrapping
as noted previously, overfitting is a potential problem in bn analysis, particularly given the small number of samples profiled in a typical microarray experiment. to compensate for this, we perform model averaging through non-parametric bootstrapping  to estimate the confidence in various network features learned  <cit> . as this requires comparison of the dags derived from each bootstrap iteration, one must consider the equivalence class of dags. an equivalence class is a partition of a set into subsets that are equivalent under some operation, such as the partition of the integers into evens and odds under the modulo-two operation. here we encode the independencies within the dags and use these as way of partitioning the entire collection into subsets in which each member is equivalent. as described in greater detail in the supplement s <dig> , we transform the dag from each bootstrap iteration into a complete partially directed acyclic graph  which is a representative of an equivalence class of dags through the dag-to-cpdag algorithm described by chickering  <cit> . for each cpdag, we check whether the features of interest  are found. by counting how often a particular feature occurs relative to the total number of iterations, we can estimate the overall bootstrap confidence and consequently select features that are strongly supported by the data.

in the work presented here, we perform  <dig> bootstrap operations for each of four cases: gene expression data alone , or using priors derived from the literature, from ppi data, or from a combination of the two. for each iteration, we use the open-source weka package  <cit>  with a greedy hill climbing algorithm to optimize the bde score  <cit> , a bayesian metric that uses an explicit prior over networks and is proportional to the posterior probability of the network given the data; as a default, we set the maximum number of parents for each node equal to three. in this framework, both the network topology and the conditional probabilities associated with each edge are learned from the data, but starting from our initial seed network.

to evaluate the performance of this approach, we investigate a number of features that can be learned from the data and estimate the confidence, as noted, based on the frequency with which it occurs. we use this to address three questions: can we recover known gene interactions? are the confidence estimates different in prior  versus no prior ? is the performance better when using prior rather than the no prior approach?

finally, it should be noted that there are a number of alternative scoring metrics and search algorithms. the choice here in part reflects the initial presentation by friedman  <cit>  but also represents the defaults defined by weka. we investigated a number of alternatives and each produced a result consistent with that described below; an overall improvement in the resulting networks when using an initial seed network structure.

bn analysis of gene expression in leukemia i: an example
as a first test of seeded bn approach, we analyzed a well-known example of a typical microarray expression study, the  <dig>  golub et al. comparison of acute lymphoblastic leukemia  with that in acute myeloid leukemia  patients  that used the affymetrix hu <dig> genechip™  to identify signatures that could differentiate these disease subtypes  <cit> . as is the case in most analyses of this sort, we first performed a statistical filtering to reduce the complexity of the data. here we simply used a between-subjects t-test with a standard bonferroni correction to identify the  <dig> genes most significant for distinguishing the all and aml samples. as noted previously, we expanded the seed networks to take better advantage of the limited ppi data by including those genes a distance of three or fewer from the initial set . this ppi-extended dataset consisted of  <dig> genes and served as the starting point for analysis ; the resulting literature plus ppi "seed" network, included  <dig> gene nodes connected by  <dig> edges and  <dig> singleton  genes.

using the approach described above, we ran  <dig> bootstrap iterations and collected features with bootstrap confidence greater that  <dig>  ; the resulting networks were visualized using cytoscape  <cit> . figure 2a shows the results of a bn analysis for the  <dig> starting genes without the use of a seed prior, while figure 2b shows the resulting network when a prior seed based on both the literature and ppi data is used. what is surprising is that when using both the literature and ppi as priors, genes involved in cell cycle are found at the core of the network whereas genes involved in regulation of transcription and ubiquitination, which is known to be involved in protein degradation, are on the periphery. furthermore, most of these gene interactions are directly or indirectly involved in rb/e2f pathway  <cit> , which is reflected in observed cell cycle differences between all and aml  <cit> .

it is also instructive to examine quantitative measures such as the bde score to evaluate bn performance. table  <dig> shows the bde scores for the networks derived from microarray data alone as well as when using prior network seeds derived from the literature, ppi data, and a combination of the two. while, in general, higher scoring networks are more likely given the data, the relatively small difference in scores makes it difficult to use this as an objective performance metric. indeed, the greedy hill climbing approach is known to have potential to overfit the data, particularly given limited data, and such non-specialized optimization approaches are known to often provide non-useful networks  <cit> .

when using the priors however, we believe that network confidence is a better measure of overall performance. tables  <dig> and  <dig> show the average confidence for the directed edge and markov relation features, respectively, for the seven gene pairs with the highest confidence. clearly the use of prior network seeds greatly increases our ability to recover known interactions. this is further illustrated below.

the t-test p-value measures the likelihood that prior and no-prior results are equivalent.

bn analysis of gene expression in leukemia ii: pathway reconstruction and validation
although the analysis of the golub et al. data provides some level of confidence that we can faithfully recover pair-wise interactions between genes using a seeded bn approach, we developed this approach in hopes of deducing the structure of biological networks from gene expression data. the hu <dig> genechip™ used in the golub et al. study surveys only a limited subset of the genes within the genome and has significant gaps in nearly every pathway relevant to understanding the cellular mechanisms that distinguish all from aml.

consequently, we turned our attention to the analysis of two more extensive leukemia datasets from ross and colleagues  <cit> , who collected expression profiles on the affymetrix u133a genechip™, which contains probes for more than  <dig>  transcripts representing nearly the entirety of the protein-coding genes encoded within the human genome. the raw cel files were normalized and the resulting dataset was filtered to eliminate adult low quality samples ; this left  <dig> pediatric all and  <dig> pediatric aml samples. to evaluate network reconstruction, we limited our analysis to genes mapping to the kegg cell cycle pathway. for these genes, we performed a bn analysis using no prior information as well as seeds derived from the literature, ppi data, and the combination; in each case,  <dig> bootstrap iterations were performed using hill climbing and the bde score. networks were constructed using gene pairs with bootstrap confidence greater than a threshold value in the directed edge, markov relation, and order relation features.

given a set of genes and a predicted network describing their associations, the optimal method for validating the network would be to experimentally test each interaction that comprise the associated graph. as this is often impractical, as an alternative, we will rely the kegg pathway database  <cit>  as a source of "verified" interactions and network topologies that can be used to assess the fidelity of our predicted networks. for the analysis presented here, we assume that interactions represented in kegg are true and that those not in kegg are false. while the former is probably a good assumption, the latter is likely not; there may be as yet undiscovered interactions and, indeed, the goal of a bn analysis is to discover these. a second potential limitation of using kegg pathways is that they are typically represented as undirected graphs while the results of a bn analysis are directed acyclic graphs. consequently, we cannot assess the directionality of predicted edges, only their presence or absence. further, kegg represents physical interactions between proteins, not the rna transcripts which are assayed in microarray studies. the seeded bn approach that we describe here models interactions between gene expression states and these may not be identical to the interaction states of the corresponding proteins. despite these limitations, we chose to compare our results to known pathways annotated in kegg because it is a conservative way to evaluate the performance of our approach as it does not rely on the validation of potentially novel interactions learned from the data.

consider an ideal graph gi  and a learned graph gl . as graphs are comprised of nodes and edges, one can compare gi and gl by comparing their sets of edges  and calculate true positives , false positives , true negatives , and false negatives  using a contingency table such as that shown in table  <dig> and described in more detail in supplement s5; see additional file 1). if we define sensitivity as the probability of recovering a true edge and specificity as the probability of suppressing a false edge, then we observe a trade-off between sensitivity and specificity as a function of confidence threshold in networks constructed using microarray data only or microarray data and literature . as the confidence threshold increases, sensitivity decreases and specificity increases. the positive predictive value  is the proportion of true positives among all positives . in other words, ppv is the probability that in case an edge is recovered in the bns, it is really a true edge as it is in kegg. it can be seen that ppv increases with confidence threshold .

here el and ei represent the edges in the learned and ideal graphs, respectively, where the ideal graphs are those derived from the kegg pathways; vi is the set of nodes  in the ideal graph.

a receiver-operator characteristic  curve, which compares sensitivity and specificity directly , suggests that the identification of markov relations using bayesian networks is conservative as they are found with strong evidence only at low true positive rates. figure  <dig> shows roc curves for markov relation detection using either microarray data alone  or with seeds derived from combined literature and ppi priors ; for both, bootstrap confidence decreases as sensitivity increases. as can be clearly seen, the use of prior network seeds greatly improves our ability to detect known interactions, particularly when considering those with strong bootstrap support.

finally, we attempted to make an estimate of our confidence in new interactions that we learn using prior network seeds. to do this, we used the ross data  <cit>  and again compared bayesian networks learned from the data with and without literature network priors. however, for each gene in the literature network, we systematically deleted the corresponding node, one by one, from the seed network. with this modified seed network, we performed  <dig> bootstrap iterations to determine how often we re-learned true directed edges  associated with that gene relative to how often we learned the same true edges when using no prior. figure  <dig> shows the average positive predictive value as a function of bootstrap confidence for edges associated with the gene deleted from the literature network, averaged over all genes. as can be seen, the use of a prior network that approximates the real network allows us to more accurately learn true interactions than is possible when not using prior information. furthermore, bns obtained by removing each node in the seed network yield ppvs that are very close to the ppv obtained by using the original seed network. this suggests that even when missing some information, a seed network can introduce a useful bias in the search space explored and lead to identification of high-confidence interactions.

taken together, the evidence here, based on a number of measures, suggests that use of prior network seeds, compared to the analysis of gene expression alone, improves our ability to learn interactions known to occur between gene products and consequently to reconstruct networks in a bn framework. in addition, our analysis suggests that, ultimately, the network model that one chooses to use requires a balance between re-learning known edges and discovering new potential interactions; the choice of which to emphasize depends of the goal of the analysis. regardless of the choice, the value of a bayesian network framework is that it not only provides a network graph, but conditional probabilities on the edges that result in predictive models that can be used in a variety of applications.

discussion
much of the excitement generated by microarrays and other high-throughput technologies was based on the expectation that they would lead us to uncover the pathways and networks that provide the link between genotype and phenotype. application of bayesian network analysis, although computationally expensive, represented one possible way to discover these important links in expression data, but failed to provide much insight when applied to the vast majority of expression datasets. here we present a way to recover at least some of that lost promise.

in an analysis of two gene expression datasets, both representing the types of class-comparisons that are typical in microarray studies, we established that the use of domain-specific knowledge in the form of prior network seeds can improve the ability of bayesian network analyses to learn known interactions between genes. we demonstrated this by showing improvements in recovery of known pairwise interactions between gene products as defined by pathways in the kegg database. through the use of bootstrapping, we are able to assign confidence values to the individual interactions. finally, these interactions, represented by an edge between two gene nodes, can be used to reconstruct predictive networks at any confidence level.

generally, one would hope to use such an analysis to discover new potential interactions and to build testable models that can be validated. not surprisingly, we find a tradeoff between sensitivity and specificity in detecting interactions when varying the bootstrap confidence threshold. networks constructed with high confidence edges give high specificity but miss many interactions, resulting in lower sensitivity and fewer potentially novel interactions. setting the confidence threshold too low, on the other hand, may lead to the identification of many spurious edges and limit the ultimate utility of any network model. managing this tradeoff must, therefore, be done in the context of the experimental problem being investigated and one's ability to validate the results.

there are a number of potential limitations to what we present here. first, in the analysis of the ross data, we chose to focus on genes within the cell cycle regulatory pathway rather than looking at the entire collection of genes in the array. however, even with this focused collection of genes, we were able to validate our hypothesis, that prior network seeds derived from the literature and ppi data improve our ability to detect known interactions relative to a standard, unseeded bn analysis. what is most exciting about the work we present here is that we were able to learn the structure of a dynamic process, the cell cycle, from a dataset consisting of static snapshots of two phenotypic states. this suggests that directed experiments where a particular network or pathway is perturbed and followed over time may further improve the overall performance of a bn approach. using such an approach in an iterative manner, in which a network is first learned, then perturbed and the resulting data used to refine the predicted network structure, may allow us to discover novel players in many known networks and to learn previously unknown networks from dna microarray expression profiles.

second, it should be noted that the networks we learn from bn analysis do not represent physical networks but instead capture subtle relationships between the states of various genes and their ability to influence the states of others. nevertheless, in our evaluation of bn performance, we compared our results to physical interaction networks between proteins represented in the kegg database. we believe this is justified as the hypothesis underlying our work is that the physical relationship captured in gene-product interactions is reflected in transcriptional response and the results we present, showing good correlation between the physical and bn networks provide some validation for this hypothesis.

finally, one may consider whether the use of seeds biases us toward simply re-learning known networks documented in the literature. while we believe the evidence presented in this manuscript suggests otherwise, even if it were the case, our approach represents an automated way of extracting network graphs from a gene list, refining the graph through the use of expression data, and learning conditional probabilities that can be used to make predictions as to how the system may respond to perturbations. the implications of this for a wide range of problems ranging from mechanistic studies to drug target prioritization remain to be explored.

CONCLUSIONS
ultimately, the value of what we present here will be judged based on its utility. the goal of most systems biology research is the development of predictive, testable models that can be used to infer the properties of biological systems. the seeded bn approach we describe here yields such models and the data we present indicates that the networks we learn do, indeed, reflect the properties of biological systems. while we await further validation of the approach, we believe that seeded bayesian networks will be an important new approach for the analysis of genome-scale expression data.

abbreviations
all: acute lymphoblastic leukemia; aml: acute myeloid leukemia; bns: bayesian networks; cpdag: complete partially directed acyclic graph; dag: directed acyclic graph; dfs: depth-first search; fn: false negatives; fp: false positives; kegg: kyoto encyclopedia of genes and genomes; ppi: protein-protein interaction; ppv: positive predictive value; roc: receiver-operator characteristic; tp: true positives; tn: true negatives.

authors' contributions
jq and ad conceived of, developed, tested, validated the method presented here, and wrote this manuscript. ad performed the initial software implementation; jq and his group adapted it for use in the mev software tool  <cit> 

supplementary material
additional file 1
supplemental methods and results. this additional file contains five supplements: supplement s1: directing seed networks, supplement s2: equivalence classes of dags, supplement s <dig>  ppi-extended "top 40" gene list from golub et al  <cit> , supplement s4: preprocessing of the ross et al. all/aml leukemia datasets  <cit> , supplement s5: model for estimating performance.

click here for file

 acknowledgements
the authors would like to thank simon berkovich and fenglong liu for useful discussions. we would also like to thank weidong  wong, eleanor howe, joseph white, and raktim sinha for assistance with mev graphical user interface implementation and remco bouckaert of the weka team for helpful guidance with software implementation. this work was supported by grants from the national heart, lung, and blood institute of the national institutes of health, the national library of medicine of the national institutes of health, and from the dana-farber cancer institute high tech fund.
