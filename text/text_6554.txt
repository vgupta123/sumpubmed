BACKGROUND
many simulation techniques are available to generate trajectories for sampling protein motion . molecular conformation is represented by a vector space of dimension equal to the number of degrees of freedom . investigating a trajectory in terms of a set of selected dof can help understand protein function. the dof are usually cartesian coordinates that define atomic displacements. internal dof can also be employed, such as distances between pairs of carbon alpha atoms  <cit> . distance pairs simplify the characterization of protein motion, and can often be measured experimentally  <cit> . the process of extracting information from an ensemble of conformations over a trajectory is a task well suited for statistical analysis. specifically, principal component analysis  is a method from multivariate statistics that can reduce the dimensionality of the dof through a decomposition process to quantify essential dynamics   <cit>  in terms of collective motions  <cit> .

pca is a linear transformation of data that extracts the most important aspects from a covariance  matrix or a correlation  matrix. the r-matrix is obtained by normalizing the q-matrix. when the property of interest is variance, statistically significant results from q are skewed toward large atomic displacements. when the objective is to identify correlated motion without necessarily large amplitudes, the r-matrix should be used. for example, if the swinging motion of two helixes are highly correlated with the amplitude of one helix 1/ <dig> that of the other, covariance will likely miss this correlation. in constructing a q- or r-matrix it is best to have sufficient sampling, and to mitigate the problematic skewing effect of outliers  <cit> .

eigenvalue decomposition calculates eigenvectors, each with an eigenvalue, that define a complete set of orthogonal collective modes. larger eigenvalues for q or r respectively describe motions with larger amplitude or correlation. eigenvalues from the q-matrix are plotted against a mode index sorted from highest to lowest variance. a “scree plot” typically appears indicating a large fraction of the protein motion is captured with a small number of modes. these modes define an “essential subspace” thought to govern biological function. for the r-matrix, modes with eigenvalues greater than  <dig> define statistically significant correlated motions. the projection of a conformation onto an eigenvector is called a principal component . a trajectory can be subsequently described in terms of displacement vectors  along a small number of pc-modes to facilitate comparative studies where differentiation in dynamics may have functional consequences.

to quantify large-scale motions of proteins pca has been commonly employed . the cosine content of the first principal component is a good indicator of the convergence of a molecular dynamics simulation trajectory  <cit> . cartesian pca  and internal coordinate pca methods are frequently used in characterizing the folding and unfolding of proteins  <cit>  and understanding the opening and closing mechanisms within proteins, including ion channel proteins . more generally, pca is routinely employed to elucidate the variance in the distribution of sampled conformations in a molecular dynamics trajectory  <cit> . conformational dynamics of a protein upon ligand binding has also been investigated with a pca approach  <cit> . with continual increase in computational power and commonly employed coarse-grained models  it is now feasible for a typical lab to perform comparative studies that involves the analysis of many different molecular dynamics trajectories. such studies of interest include structure/function scenarios that interrogate the effects of mutation on protein dynamics, allosteric response upon substrate binding, comparative dynamics across protein families under identical solvent/thermodynamic conditions, change in conformational dynamics under differing solvent/thermodynamic conditions or different bound substrates. for example, in our previous work in studying myosin v  <cit> , where we compared various apo versus holo and wild-type versus mutant systems motivated building a general tool to handle comparisons of dynamical metrics across different protein systems. when applied on a collection of systems, pca extracts similarities and differences quantitatively.

when scaling up to analyze a collection of molecular dynamics trajectories, a toolkit to conveniently perform a comprehensive set of operations is needed. hence, we designed jed  as an easy to use package for pca applied to cartesian coordinates  and distance pairs . while jed makes the analysis of a single protein trajectory straight forward with lot of built in features, it also allows the same features to be leveraged on a collection of trajectories to perform comparative analysis. the features jed offer are:  outlier removal;  creates pymol scripts to visualize individual pc-modes and essential motion over user-selected time scales as movies;  creates free energy surfaces for two user-selected pc-modes based on gaussian kernel density estimation;  calculates the precision matrix from q and  the partial correlation matrix  along with its eigenvectors and eigenvalues;  compares the essential dynamics across multiple proteins and quantifies overlap between vector subspaces, and  multivariate statistical analysis methods are holistically utilized.

methodology
a dynamic trajectory provides snapshots  depicting the various conformations of a protein. for cartesian pca  the set a
raw = {x} where t is a discrete variable refers to a particular frame. the vector x describes the position vectors of a user-selected set of alpha carbon atoms within the protein. for m residues, x is a column vector of dimension 3m since there are  coordinates for each alpha carbon atom. for n observations, a is a matrix of dimension 3m × n. to study internal motions, the center of mass of each frame is translated to the origin, and each frame is rotated to optimally align its orientation to the reference structure, x
ref, which also has its center of mass at the origin. we use a quaternion rotation method to obtain optimal alignment, which yields the minimum least-squares error for displacements between corresponding atoms  <cit> .

since the process of translation and rotation changes the coordinates of each frame, the transformed a matrix is denoted as a
aligned = {x
aligned}. the reference structure x
ref is user specified in jed . the data in matrix a
aligned is mean centered along its rows to arrive at a '. the covariance matrix q associated with 3 m variables is defined as q = a ' 
t , which is real and symmetric, and has dimension 3m × 3m. if n ≥ 3m, the eigenvector decomposition of q will have 3m −  <dig> non-zero eigenvalues, where  <dig> zero eigenvalues correspond to the modes of trivial degrees of freedom . the same is true for the correlation matrix r. in building a q - or r-matrix, jed removes outliers based on a user-defined threshold. in practice, no zero eigenvalues occur due to alignment variations, which means the condition number of the q and r matrices is finite, and both matrices have an inverse. the partial correlation matrix p is calculated by normalizing the inverse of q. figure  <dig> shows how r, q and p are calculated. the procedure for distance pair pca  is mathematically identical. however, dppca does not require the alignment step described above because internal distances are invariant under translation and rotations.fig.  <dig> full circle of r, q and p matrix calculations




implementation
the java code for jed can be downloaded from . additional resources are provided regarding pca, essential dynamics, example datasets together with example jed input files. jed is written in java and implements the jama matrix package and calls the kde  to perform the following tasks:the file jed_driver.txt is input to jed to define all information needed to run a job. the file pdb_read.log lists all pdb files processed in the order read. the “jed_log.txt” file summarizes how the run progressed. details about output file formats and how to setup jed_driver.txt is documented in a user manual .

reads in sets of pdb files .the pdb files may be single chain or multi chain.




the program performs analysis at the coarse-grain level of all alpha carbons.

the user can select a subset of residues for the analysis that need not be contiguous.in multi chain pdbs, the residues may come from the various chains.




as an initial pre-pca output, the following characteristics are determined:matrix of atomic coordinates before and after the optimal alignment is performed.

conformation rmsd and residue rmsd otherwise known as rmsf.

the b-factors in a pdb file are replaced with residue rmsd.




the user can run cpca, dppca or both.

the user can choose the number of most relevant modes to retain.

the user can specify a z-score cutoff  such that when the value of a pca variable  has a |deviation| from its mean that exceeds the z-score cutoff, it is identified as an outlier. when the value of a variable is identified as an outlier, it is replaced by its mean value. this process is done per variable, per frame, treating each variable independently. this method is recommended because it reduces condition numbers on q, r and p, with little loss in statistics to avoid misinterpreting the pca results. however, an option is provided for the commonly used alternative that throws out conformations that have a rmsd value deemed as an outlier.

all quantitative metrics are outputted as text-files for further analysis and graphing. for both cpca and dppca the following characteristics/metrics are determined:the displacement vectors .

the covariance , correlation  and partial correlation  matrices.

all eigenvalues for q, r and p.

three sets of the most relevant pc modes coming from q, r and p.

weighted and unweighted mean squared fluctuation  and root mean squared fluctuation  for all three sets of the most relevant pc modes are provided.

for cpca, a set of pdb files and associated pymol scripts allow static pictures and movies of the 3d structure to be viewed for each set of the most relevant pc modes.




dv projections onto each of the most relevant eigenvectors .

multiple jobs can be run using the same set of parameters using a batch driver.

essential motions from q, r and p results can be generated for any user-selected window of pc-modes, corresponding to observing protein motions on different time scales.

after each individual trajectory is processed, additional programs can be run to perform a comparative analysis. these programs are:create_augmented_matrix.java: pools together multiple trajectories into a single dataset to facilitate another jed analysis on the collection of data.

subspace.java: runs comparisons between individual trajectories and/or a pooled trajectory. the outputs are cumulative overlaps , root mean square inner product , and principal angles .

get_fes.java: creates a free energy surface for any two user-selected pc-modes.

viz_driver.java: allows control for animating motions for individual pca modes and combined superposition of essential pc modes related to timescale windowing.







the r and p matrices are computed from q. the q, r and p matrices are stored in memory  and then diagonalized  for a complete eigenvalue decomposition using the jama matrix package. for  <dig> frames of a  <dig> residue protein the performance time on a modern laptop is less than 3 min. for comparative studies, similarity of conformational ensembles is quantified in terms of the vector subspaces that characterize ed. jed calculates cumulative overlap , root mean square inner product , and principal angles  . overlapping subspaces from different proteins imply they share similar dynamics, whereas different protein motion is indicative of subspaces with low overlap.

RESULTS
first, we show cpca results describing ed of a protein. second, we show dppca results, demonstrating how internal motions among different loops are easily quantified. third, we show how pooling trajectories  facilitates a comparative analysis of protein dynamics. as an illustrative example, a native single chain variable fragment  of  <dig> residues is considered, along with a mutant differing by a single site mutation . we work with a 100 ns molecular dynamics simulation trajectory for the native and mutant structures, each having  <dig> frames taken from our previous study  <cit> .

native and mutant essential dynamics from cpca
to characterize the ed of the native and mutant  proteins we performed cpca on their trajectories. we show multiple output types in figs.  <dig> and  <dig> for the native and mutant proteins respectively. for convenience in understanding the role of correlations, jed also outputs the reduced q-matrix defined as q˜jk=qxj,xk+qyj,yk+qzj,zk. here, the j and k indices label residues, and the original 3m × 3m covariance matrix is transformed into a rotationally invariant m × m matrix, which is common practice. figures 2a and 3a show that the first  <dig> eigenvectors are most informative and shows maximum variation of 80% of the total variance. the reduced q-matrix  shows which pairs of residues move together as positive correlation  and away from one another as negative correlation . it can be seen that the native protein  has more anticorrelated motions between the residues when compared to that of the mutant system . all other 3m × 3m matrix types have a reduced version, with both format types outputted by jed. the projection of pc <dig> vs pc <dig> and pc <dig> vs pc <dig> for native and mutant are shown in figs. 2c and 3c respectively. the trace values for the native and mutant structures are 432 Å <dig> and 644 Å <dig> respectively. the larger value for the mutant suggests that there is an overall increase in flexibility of the mutant. for a particular pc mode, 3d ribbons depicting protein structure are colored by the rmsf to show mobility where high to low values are colored by red to blue as shown in figs. 2d and 3d for native and mutant system respectively. the free energy surface  obtained from the first two principal components for native and mutant proteins are shown in figs. 2e and 3e respectively. in these examples, the free energy landscape for the native protein has two well-defined basins, while for the mutant it has only one basin and the conformations were scattered due to the increased in flexibility.fig.  <dig> some cpca results for the native protein. a the variance and cumulative variance of the first twenty principal components. b the reduced q-matrix. c projections of the trajectory onto the planes formed by  and . d the displacements along pc <dig> and pc <dig> are visualized and colored according to their rmsf for each residue using pymol™. e the free energy surface associated with the first two principal components


fig.  <dig> for the mutant protein the same type of cpca results are shown as in fig.  <dig>  a) thevariance and cumulative variance of the first twenty principal components. b) the reduced q-matrix. c) projections of the trajectory onto the planes formed by  and . d) the displacements along pc <dig> and pc <dig> are visualized and colored according to their rmsf for each residue using pymol™. e) the free energy surface associated with the first two principal components




jed provides similar output for the r- and p-matrices. in additional file 2: figures s <dig> and s <dig> show results for the r-matrix. differences seen within the first two pc modes indicate in part how the g56v mutant perturbs protein motion. comparing the results from the covariance and correlation matrices show that the former highlights the most dramatic motions, while correlations among low amplitude motions is largely missed. additional file 2: figures s <dig> and s <dig> on the other hand show that there is a much greater richness in correlations in conformational changes when the amplitude of motion is not allowed to be the dominant characteristic in the analysis. we recommend that a user should analyze results from the q- and r-matrices because they capture different correlated motions with different amplitude scales. in this example, the r-matrix results uncover subtle collective motions without an associated large amplitude motion, which may have functional consequences and are more sensitive to mutation. both types of output provide insight about potential mechanisms that govern protein dynamics. movies for pc-modes obtained from the q and r matrices are given in additional file  <dig>  to quantify the similarity in the ed retained in the top pc modes from the q-, r- or p-matrices, jed calculates overlap in these vector spaces. this feature allows one to access how much shared information there is between using different metrics, as well as between different molecular dynamics trajectories. results for rmsip and pas over  <dig> most essential dimensions are shown in si in additional file 2: table s <dig>  because up to  <dig> degrees in pa constitutes high similarity, additional file 2: table s <dig> shows that  <dig> pc modes are needed to capture ed accurately. with  <dig> pc modes the cumulative variance covers ~74% or ~70% of the dynamics for the native and mutant protein respectively. note that 70% cumulative variance is a commonly used criterion to decide the number of pc modes to keep. a subspace comparison between the native and mutant proteins in terms of pa and rmsip is made in si where additional file 2: figure s <dig> and table s <dig> reveals similar dynamics is described with  <dig> pc modes. therefore, the native and mutant proteins exhibit the same ed. in si, additional file 2: figures s <dig> and s <dig> show results for the p-matrix. in addition to the r and p matrices, jed outputs their inverses, which are respectively called precision and anti-image matrices .

visualization of essential protein motion
the protein motion that is expected to be important for biological function constitutes a linear superposition of pc-modes from the essential subspace. because protein dynamics spans a large range in time scales, jed allows essential protein motion to be visualized within a window of time scales by combining pc-modes over a user-selected set of pc-modes given by: x→τ=∑k=koko+waksinωkτv→k where τ is the time of the movie, v→k is the k-th pc-mode with λ
k its eigenvalue, ak=cλk and ωk=b1λk for the q and r matrices, while ak=c1λk and ωk=bλk for the p-matrix. here, b and c are constants adjusted to set appropriate time and space scales respectively. the index k
o defines the starting pc-mode  and w is the window size. watching movies at different time scales gives a sense of the effects of small and large amplitude motions . in this case, the movies show the mutation rigidifies nearby residues in corroboration with our previous results  <cit> . to our knowledge, visualizing combination of modes within user-specified time scale windows offers a unique functionality/tool for researchers.

reduction of dimensionality by dppca
jed utilizes internal coordinates based on residue-pair distances . a user selects n residue-pairs, where a carbon-alpha atom defines the motion of a residue. the dimensionality of the q-matrix is therefore n. when n is much less than the number of residues, the reduction in dof also reduces noise to signal. importantly, dppca allows intuition to be used when deciding which distance pairs to consider. distance-pairs can be placed between residues having aligned positions based on sequence or structure. this facilitates dynamics of homologous proteins to be directly compared. in the example used here, a single site mutation retains the protein size with perfect alignment. we select distance pairs from the loop regions  to residue  <dig> for the native and mutant proteins, which gives n =  <dig> .

the dppca r-matrix is shown in figs. 4a and 5b where differences in correlations within the native and mutant proteins appear. figure 4c shows the pc-modes of distance pairs, which describe how distances between residues stretch or contract. from the figures, we can clearly see some difference in dynamics of native and mutant. from additional file 2: tables s <dig>  s <dig> and figure s <dig> in si, at least  <dig> pc modes are needed to characterize the dynamics of the loops relative to residue  <dig>  because similarities in motion between the native and mutant proteins extend up to  <dig> pc modes, the ed of this set of distance pairs is the same between the native and mutant proteins. the free energy surface defined by the pc <dig> and pc <dig> modes  are similar for the native and mutant proteins. in general, projecting trajectories onto a plane  within a high dimensional vector space leaves open a likely possibility that the projections are not common to the same plane. in additional file 2: table s <dig> in si, it is seen that the planes describing the top two pc modes  for the native and mutant proteins are very similar, somewhat justifying the direct comparison of free energy surfaces using pc <dig> and pc <dig> from two different calculations. however, additional file 2: table s <dig> also shows that the first two pc modes for the q-matrix  are not similar, which is in part a reason why free energy surfaces appear different in additional file 2: figure s <dig> fig.  <dig> 
a and b correlation  matrix as obtained from the dppca of native and mutant respectively. c comparing the 1st and 2nd pc modes for the native and mutant proteins. d and e free energy surface obtained from the top two pc modes for the native and mutant respectively


fig.  <dig> pca scatter plot along the pair of different combinations of first three pair combinations of principal components 




comparative analysis by pooling trajectories
for comparative studies, it is necessary to use the same set of coordinates. jed facilitates this by allowing a user to pool trajectories together. in order to compare the difference between the native and mutant, we combine native and mutant trajectories and calculate dppca on the selected subset defined above where no alignment required for dppca. pooling is also possible with cpca with an alignment step. figure  <dig> shows a scatter plot of different combination of pcs , pc1-pc <dig>  and pc2-pc <dig> ) depicting a significant difference between the two systems. in particular, it is evident from the figure that the mutant occupies a larger phase space and exhibits a higher fluctuation compared to the native, which implies that the mutant has a higher degree of mobility when compared to native. it is also possible to obtain fes for any two pc from jed using jed_get_fes.java. fes for different combinations of pcs is given in si in additional file 2: figure s <dig> 

CONCLUSIONS
we have developed an essential dynamics analysis package written in java that performs a complimentary set of tasks following best practices for multivariate statistics. the jed toolkit offers much more functionality compared to currently available tools. particularly unique aspects of jed are the z-score based elimination of outliers, distance pair pca , convenient comparative analysis of subspaces using principal angles, visualization of essential motions, and the inclusion of the full circle of statistical metrics that include precision matrices and the partial correlation matrix. the program can be run from a compiled source or from executable jar files. additional resources that can be downloaded with the program include example test cases with all jed results and a detailed user manual, which is also included in si as a pdf.

additional files

additional file 1: user manual and tutorial for the jed package. 

 
additional file 2: supporting information. figure s <dig>  example results from cpca using the r matrix for native. figure s2: example results from cpca using the r matrix for mutant. figure s <dig>  subspace comparison between native and mutant cpca results figure s4: example results from cpca using the p matrix for native. figure s5: example results from cpca using the p matrix for mutant. figure s6: selection of residue-pair distances. figure s <dig>  subspace comparison between native and mutant dpca results. figure s8: example results from dpca using the q matrix for native and mutant. figure s9: free energy surfaces based on all pairwise combinations of the top three pc-modes based on pooling the native and mutant trajectories. table s1: subspace comparison between all possible pairs of q-, r- and p-matrices using cpca for native and mutant. table s2: a twenty dimensional subspace comparison between native and native for each of the q-, r- and p-matrices using cpca. table s3: a twenty dimensional subspace comparison between all possible pairs of q-, r- and p-matrices using dpca for native and mutant. table s4: a twenty dimensional subspace comparison between native and native for each of the q-, r- and p-matrices using dpca. table s5: same as table s <dig> expect a  <dig> dimensional subspace is being compared. 

 
additional file 3: movies showing mode  <dig> and mode  <dig> of all the modes obtained from the jed program. 

 


abbreviations
cpcacartesian principal component analysis

dppcadistance pair principal component analysis

dvdisplacement vectors

jedjava essential dynamics

ppartial correlation matrix

pc1principal component 1

pc2principal component 2

pc3principal component 3

qcovariance matrix

rcorrelation matrix

electronic supplementary material

the online version of this article  contains supplementary material, which is available to authorized users.

