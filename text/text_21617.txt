BACKGROUND
almost all known and postulated knowledge relating to biological processes is recorded in the form of semi-structured full-text articles. the volume of biomedical literature rapidly becoming available makes it very difficult for biologists to keep abreast of even their narrowest specialist fields. the traditional keyword-based information retrieval  over abstracts often retrieves too many articles that must be individually inspected. to overcome this information bottleneck, there has been considerable interest in developing natural language processing  tools to improve the accessibility of knowledge within articles  <cit> . in particular, there is a strong focus on the automatic extraction of interactions between bio-entities, such as genes and proteins  <cit> .

the development and evaluation of effective nlp tools for the biomedical domain, requires new annotated corpora, as statistical models of language extracted from traditional newswire corpora are very inaccurate when applied to biomedical text. the most comprehensive annotated biological corpora available consist of sets of medline abstracts marked with linguistic information such as part-of-speech, anaphoric expressions, and syntactic structure, as well as biological annotation, marking entities such as proteins, genes and cells, and relationships between these entities  <cit> . as a results, most biomedical ir and ie systems, such as pubmed  <cit>  and medie  <cit> , have been applied to abstracts only.

unfortunately, the information in abstracts is dense but limited. for example, friedman et al.  <cit>  showed that only  <dig> out of  <dig> mentions of unique molecular interactions within a full-text article occur in the abstract. full-text articles have the advantage of providing more information and repeating facts in different contexts across various sections, increasing the likelihood of an imperfect system identifying them. this redundancy can also be used for validating and ranking identified facts  <cit> .

full text contains explicit document structure, e.g. sections and captions, which can be exploited to improve ie. regev et al.  <cit>  developed the first biomedical ir system that specifically focused on limited text sections in full-text articles, such as figure captions. their performance in the kdd cup challenge  <cit> , showed the importance of considering document structure. following regev et al., others have investigated the importance of extracting information from specific sections. yu et al.  <cit>  retrieved synonyms of proteins and genes from abstracts and full text, and identified more synonyms with higher precision in full text, with the introduction section defining the majority of synonyms. both schuemie et al.  <cit>  and shal et al.  <cit>  showed that the results and method sections are the most and least informative, respectively, for identifying gene mentions. in contrast, sinclair and webber  <cit>  found the method sections useful in assigning gene ontology codes to articles.

these section specific results highlight the information loss resulting from restricting ir and ie to abstracts and other individual sections, as different sections often provide different information  <cit> . however, there has been little analysis of when the entire document is required for accurate knowledge extraction. for instance, retrieving a fact from the results section may require a synonym to be resolved that is only mentioned in the introduction. despite this and the limited full-text annotated corpora available, ir competitions, like the genomics track of trec  <cit> , require systems to retrieve and rank passages from biomedical full text that are relevant to question style queries.

in this paper, we explore the complexities biomedical ie systems will need to handle to exploit the knowledge contained throughout full-text articles. we investigated these difficulties by focusing on the manual identification of a set of facts about molecular interactions within full-text articles. the interaction facts we have annotated correspond to those identified and summarised in a molecular interaction map  constructed by kohn  <cit> , and the articles in our corpus are those cited in each fact summary. the relevant passages form the foundation of our mim corpus, and are manually annotated with linguistic phenomena, such as synonym use and anaphoric expressions.

one of the main issues for processing full-text which has not been addressed in other biomedical corpora, is understanding how text within one section, or even a single sentence, relies on other text within the same article to form a coherent argument. in this paper, we aim to identify how important this phenomena is for automatically extracting molecular interactions. we model this coherency in our corpus by not only identifying passages that directly state the interaction fact, but by including passages from which the fact can be inferred with the addition of knowledge detailed elsewhere in the document. we also annotate the passages containing this additional knowledge, which we call dependencies. these dependencies are not to be confused with syntactic dependencies. in our corpus, we identify synonym and extra fact dependencies. as a result, our corpus uniquely tracks the process of forming summaries of molecular interaction facts from full-text articles.

our corpus also provides insight into the relative significance of other nlp tasks, such as the resolution of negated and coreference expressions. the negated expressions annotated in our corpus are not included in other corpora, and few biomedical corpora include coreference annotations  <cit> . these corpora only consist of abstracts or individual sentences, and thus do not reflect the level of importance of this task.

the mim corpus also addresses a number of information retrieval  issues, concerning the value of individual full-text sections and other document structures, such as figure headings, and fact redundancy. during the annotation process, we have documented the precise location that each fact and its dependencies were found. this leads to insights about the applicability of different sections for ie and ir. additionally, we have exhaustively identified all mentions of the mim facts in each cited article, allowing us to report on the level of fact redundancy and coverage within the articles. this also facilitates the use of this corpus as the first evaluation and analysis test set for a full-text biomedical sentence retrieval system. using oracle experiments, we can quantify the performance upper bounds for keyword queries, and identify the importance of individual nlp components. we can also explore the characteristics of the resulting false positives and false negatives.

this paper is organised as follows: we first introduce the mim and the process of identifying and annotating mim facts. through detailed examples, we then discuss the critical role of synonym and extra fact dependencies, followed by the guidelines for annotating negated and coreference expressions, and a presentation of our key findings from our corpus analysis. we then introduce the first use of the mim corpus as a gold standard test and evaluation set for a sentence retrieval system, and provide a detailed performance analysis. the retrieval system and the evaluation metrics are the subject of the methods section, at the end of the paper. the mim corpus is available for research purposes and can be freely downloaded from 

RESULTS
molecular interaction maps
molecular interaction maps  graphically depict the molecular interactions which occur between molecules of the same or different biochemical families, such as proteins, genes, amino acids, and multi-molecular complexes. kohn  <cit>  manually constructed a mim based on scientific literature describing interactions in the mammalian cell nucleus, focusing on cell-cycle regulating molecules and the dna repair process. figure  <dig> shows the cell-cycle component of the mim. this mim includes  <dig> individual molecules  and  <dig> interactions between them. the complete mim diagram is shown in  <cit> .

each node in the mim represents a molecule and the links between nodes correspond to interactions between the molecules. each interaction link is assigned a unique key and is associated with a mim description composed by kohn  <cit>  that summarises the evidence for the interaction from the literature, including citations. for example, figure  <dig> contains the description passage for mim interaction m <dig> . it is important to note that the articles cited by kohn for each mim description are not exhaustive and thus many of the mim interactions will be mentioned in other articles. the articles selected by kohn however, present the primary research documenting the main interaction discoveries and/or findings. a tool capable of automatically extracting or augmenting a mim would be extremely useful to biomedical researchers.

corpus annotation
in creating the mim corpus we have attempted to reverse engineer the formation of kohn's mim descriptions by exhaustively tracing and documenting the process of identifying passages from the cited full-text articles that substantiate the mim interactions. the mim corpus consists of individual sentences or passages of text  from the cited articles that the mim descriptions can be inferred from. each instance in our corpus is separately assigned the location within the article it was retrieved from and annotated for factual dependencies, and coreference and negated expressions.

annotation process
the first stage in the development of the mim corpus involved obtaining the full-text articles cited in the mim descriptions. there are  <dig> articles cited by kohn  <cit> , and the mim corpus currently consists of  <dig> annotated passages from  <dig> full-text articles, supporting  <dig> mim descriptions. an annotator with a biomedical background exhaustively identified these passages by manually reading each article several times. the corpus is restricted to the cited articles only. this allows us to quantify the need for external resources, e.g. synonym lists and ontologies. the annotation process involved the following:

 <dig>  for each mim description, retrieve the full-text of the cited articles.

 <dig>  for each sentence in a mim description, create a main fact to represent the knowledge conveyed.

 <dig>  for each main fact, identify and annotate each sentence or passage  within the cited articles that the main fact can be inferred from. these include direct statements of the fact and passages that imply the fact. an instance of text is said to support the fact. we take a minimalist approach, and annotate the shortest sequence of text required to infer the fact, down to an individual sentence.

 <dig>  main facts are often complex sentences, combining numerous facts from the cited articles. passages from which part of a fact can be derived are also annotated. these instances are assigned to subfacts which are created to represent these partial facts. each subfact must contain at least two of the bio-entities in the original main fact. subfacts may also be broken down to represent less informative instances. the creation of subfacts  is governed entirely by whether an instance is found that expresses part of the fact in question.

 <dig>  many instances cannot be directly linked to their corresponding fact, as they depend on additional information from other passages within the full text or external domain knowledge. to represent these dependencies, new fact types are created — synonym facts and extra facts. all instances of these, within the same article, are annotated and a dependency link is added between the original instance and the new dependency fact. if an instance cannot be identified for a dependency fact, it is labelled as undefined.

 <dig>  each instance is annotated with its location within the article, and linguistic phenomena, including negated and coreference expressions, which must be resolved for the mim fact to be inferred.

example corpus annotation
consider the m <dig> mim description in figure  <dig>  a main fact corresponding to the second sentence of this mim description was created and is shown below:

activation by prb and c-myc is not additive, suggesting they act upon the same site, thereby perhaps blocking the binding of an unidentified inhibitor.

due to the complexity of the interaction relationships stated within this main fact, no single sentence or passage of text supporting this entire fact was identified within the cited article. however, instances of the m <dig> subfact 1:

activation of e-cadherin by prb and c-myc is not additive

and m <dig> subfact 2:

activation of e-cadherin by prb and c-myc

were identified, and thus these subfacts were created to represent this partial knowledge. instances of these subfacts were located in the results and discussion sections of the cited article, and are shown in examples  <dig> and  <dig> in figure  <dig>  both of these instances depend on the resolution of synonyms to link the instances to the mim description. example  <dig>  depends on two synonym facts. synonym  <dig>  states that the bio-entity prb used by kohn is equivalent to the bio-entity rb from the cited article, and no instance of this fact was identified in the article. synonym  <dig> is required to map the term c-myc to the synonymous term myc, and an instance was identified in the introduction section of the cited article, as shown in figure  <dig> 

in order to create a corpus with as much coverage as possible for mim main facts and subfacts, individual instances or parts of them may be associated with different facts. for example, the two consecutive sentences in example  <dig> can only support m <dig> subfact  <dig>  however the first sentence also supports m <dig> subfact  <dig>  thus the first sentence is also annotated as another instance of subfact  <dig> 

dependencies
a goal of our mim corpus is to depict how the coherent flow of knowledge is presented or assumed within full-text articles. the dependency annotation is introduced when a main fact or subfact of a mim description may not be entirely derived from the text of an instance alone. these instances depend on additional factual knowledge , which may or may not be present in the same article, to allow the original mim fact to be derived. in this section we discuss the two types of dependencies we annotate: synonym facts and extra facts.

synonym facts
the frequent use of synonyms, metonyms, abbreviations and acronyms in biomedical text is a common source of ambiguity that is often hard for automated methods to resolve  <cit> . furthermore, manually curated lists of these are difficult to maintain in rapidly moving fields like biology  <cit> . as a result there is considerable interest in developing systems to identify and extract these, e.g.  <cit> . however, there has been no investigation into the difficulties which arise from synonym use when automatically identifying cited facts from full-text articles.

in our corpus we group all synonyms, metonyms, and abbreviations, acronyms and other orthographic variations of bio-entities, excluding case changes, which need to be resolved to identify the original mim fact, as synonym facts. for example, the synonyms  e2f <dig>   e2f- <dig> and  e2f1- <dig> in our corpus refer to the same entity e2f <dig>  although the third term also includes the entities e2f <dig>  e2f <dig> and e2f <dig>  we do not include synonyms for other terms in the mim fact, such as verbs.

in our first example in figure  <dig>  the instance which supports m <dig> subfact  <dig> depends on two synonym facts. in the mim description, the entity terms prb and c-myc are used, but in the relevant cited article  only their synonymous terms, rb and myc, are mentioned. therefore there is a need for a synonym fact dependency.

to link the text in instance  <dig> to the subfact, we must first identify that prb is synonymously equivalent to rb, and form synonym fact  <dig> to represent this knowledge:

prb is equivalent to rb

the next step is to identify all passages from within the same article which support this synonym fact. however, an instance was not identified and the synonym fact is labelled as undefined. this example highlights the ambiguity introduced when authors choose to use terms other than the ones within the articles they cite, and when synonymous terms are assumed to be general domain knowledge. in addition to this ambiguity, the term rb is also an abbreviation for respiratory bronchiolitis, repetition blindness, ruminal buffer, and rio bravo virus, to name a few, and a homograph for the gene ruby , rabbit  and rubidium .

instance  <dig> also depends on synonym fact 2:

c-myc is equivalent to myc

in this instance, the bio-entities c-myc and myc are used interchangeably, where the protein myc is referred to by its gene name, c-myc. the use of metonymy, where an entity can be substituted with another related entity, is common in biomedical literature, and an instance supporting this type of synonym fact was found in the introduction of the article. this synonym instance does not contain any common contextual patterns such as:

 <dig>  x known as y

 <dig>  x 

that are often used to extract sets of synonymous terms like x and y  <cit> . therefore, further processing to identify these synonyms via the causal relationship, c-myc encodes myc, is required. after these synonymous terms are resolved, we can directly infer the mim m <dig> subfact from the instance.

example  <dig> in figure  <dig>  shows two annotated instances of the mim e <dig> main fact, where only the first instance depends on a synonym fact to be resolved. the authors of the cited article used the long form of the bio-entity prb, retinoblastoma protein, in the article's title . thus to link the first instance to kohn's mim fact, these terms must be identified as synonymous. an instance supporting this synonym fact was identified in the introduction section of the article, stating the synonym fact clearly:

...retinoblastoma protein ...

after this statement, all later references to this protein in the article  used the shorter form, and thus instance  <dig>  identified in a result's subheading, does not depend on this synonym fact to infer the main fact.

extra facts
instances in the mim corpus may also depend on extra information for the mim fact to be inferred, which cannot be expressed by synonym fact dependencies. we created extra fact dependencies to represent and annotate this additional information need. extra facts include all assertions  which are necessary to infer a main fact or subfact from an instance. many extra facts are descriptions or classes of bio-entities, hyponym relationships and compounded terms. for example, in the extra fact below:

s465a-abl is a mutated form of c-abl where serine  <dig> is substituted for alanine

the bio-entity s465a-abl is not a synonym of c-abl, but a modified form of the protein.

if additional information is required for an instance to support a mim fact, an extra fact is created. all supporting instances of these extra facts must then be identified within the same article as the original dependent instance. examples of extra fact dependencies are shown in figures  <dig> and  <dig> 

example  <dig>  in figure  <dig>  shows an instance of the e <dig> subfact that depends on the extra fact

hdac <dig> is a histone deacetylase

to derive the subfact. the first sentence of this instance states the binding relationships between the bio-entities hdac <dig> and p <dig>  and hdac <dig> and p <dig>  this sentence does not support the entire subfact individually as the second sentence introduces the fourth required bio-entity, e2f. the extra fact is required to associate the class of proteins referred to in the second sentence using the term histone deacetylase, to the specific protein hdac <dig> in sentence one. this is necessary as the sortal anaphor they in sentence two refers to the bio-entities p <dig> and p <dig> in sentence one, and not hdac <dig>  an instance supporting this extra fact was identified within the article's abstract, and is expressed in the apposition:

...the histone deacetylase hdac <dig> 

once this extra fact is identified, the coreference expressions can be resolved, and in turn, the e <dig> subfact can be inferred.

two additional examples of extra fact dependencies are shown in figure  <dig>  annotated instances of the c <dig> main fact and one of its subfacts are shown. in example  <dig>  the instance supports the main fact only after two extra fact dependencies are established and resolved. these extra facts are required to map the bio-entity terms in the main fact to their corresponding terms/phrases in the instance.

the first extra fact represents the mapping between the bio-entities e2f <dig> and e2f4/dp <dig>  it depicts a common representation of compounded bio-entities by using a slash  to represent a complex of multiple entities. this extra fact is identified in the instance by the following apposition:

...the heterodimeric transcription factor e2f4/dp <dig> ..

where the term heterodimeric states that e2f4/dp <dig> is a complex composed of two different proteins. note that the slash notation is also often used to represent synonymous terms.

the main fact's instance also depends on additional factual knowledge to associate the coreference concept a pocket protein to the bio-entities p <dig> and p <dig> stated in the main fact. to represent this dependency, another extra fact is created:

prb, p <dig> and p <dig> are pocket proteins

and an instance defining this concept was identified within the article's abstract. the extra fact can be extracted from the expanded enumeration:

...the 'pocket proteins': prb, p <dig>  p <dig> ..

this extra fact's instance also details a hierarchy of bio-entity concepts where the pocket proteins are part of the concept prb tumor suppressor family.

in example  <dig>  the instance of the c <dig> subfact also depends on extra facts. the first extra fact is required to identify the bio-entities p <dig> and p <dig> in the subfact definition as members of the prb protein family stated within the instance. the instance supporting this extra fact is the same text that supports extra fact  <dig> of example  <dig> 

the second extra fact is necessary to associate the bio-entity e2f <dig>  which is not mentioned in the subfact instance, as a member of the e2f protein family stated in the instance. an instance supporting this extra fact was identified, and defines the e2f protein family as:

...e2fs ...

this definition introduces additional complexity as the bio-entity e2f <dig> is not directly mentioned. the term e2f1- <dig> corresponds to multiple bio-entities, including e2f <dig>  this information is represented in the corpus as a synonym fact, which defines e2f1- <dig> as a synonymous term for e2f <dig>  and thus this extra fact instance also has a dependency fact.

dependency graphs
our corpus represents each of the main facts and subfacts as a dependency graph of instances, each which in turn may depend on other factual knowledge from synonym and extra facts. each edge in the graph links an instance to each of its dependency instances. it is possible for an instance of a dependency fact to also depend on synonym and/or extra facts, as shown in example  <dig> in figure  <dig>  where the instance of extra fact  <dig> depends on a synonym fact. thus paths of dependencies may occur, all of which would need to be resolved before the main fact or subfact could be derived from the initial instance.

linguistic phenomena
in the previous sections, we introduced the process of formulating main facts and subfacts from the mim descriptions, and identifying supporting instances of these to annotate, along with any synonym or extra fact dependencies which they require. in this section, we will discuss the linguistic phenomena individual instances are annotated with. in our mim corpus, we only annotated the linguistic constructs in individual instances that need to be resolved to infer a fact.

negated expressions
the purpose of the negated expressions annotated in the mim corpus is different to that of the bioscope corpus  <cit>  and the bioinfer corpus  <cit> . in the bioscope corpus, negative terms in sentences, such as not and neither, and their scope are annotated for the purpose of developing systems which can detect uncertain facts or negative findings  <cit> . the bioinfer corpus is similarly annotated with negated expressions, however the annotated phrases correspond to those stating an absence of a relationship between entities, like x not affected by y  <cit> .

the negated expression annotation in the mim corpus extend those in other corpora by focusing on statements that do not directly express a mim fact, but from which the fact can be logically implied. our annotations include logical negatives, as in the bioscope corpus, and lexical negatives which have not been annotated in either of the other corpora. logical negatives are realised by a discrete, closed class negative particle like not or no. in lexical negatives, the negation is built into the lexical item, like inhibit or mutant. in these cases, the negated expression entails the opposite of a fact that would need to be worded differently.

as the mim corpus is focused on molecular interactions, the main type of negated expressions identified correspond to statements describing modifications to molecules and their resulting effects. these statements document the outcomes of experiments from which one can identify/infer a molecule's function by modifying the molecule and observing any functional changes. for example, if in a gene knockout experiment we find that removing gene x results in function y disappearing, we could infer that gene x is responsible in some way for function y. in the literature, negated expressions are commonly used to describe these types of experiments, from which the normal function is inferred by the author and the reader. this typically requires two or more negated expressions to be processed simultaneously, as will be shown in the following examples.

in example  <dig>  two negated expressions within the instance need to be resolved to form the positive statement of the a <dig> subfact. in this instance, the negated expressions are clearly defined. in the first negated expression, the lexical negated form of the bio-entity atm is stated as mutant atm kinase. the second negated expression is a logical negative which states the function the mutated form of atm was unable to perform. based on knowledge of the experimental aims and the implicit reporting of the results, one can logically combine these two negated expressions to infer the positive fact expressed in the a <dig> subfact. if an ie system could not identify these negated expressions, then the incorrect relationship:

atm does not phosphorylate c-abl

may be extracted. it is these types of relationships that our mim corpus aims to capture, with the goal of identifying processing errors like this.

the negated expressions annotated in example  <dig>  n <dig> main fact, are similar in style to those in example  <dig>  however the processing to resolve the fact from this instance is more complicated. first, the synonymous terms p <dig> and rpa <dig> need to be resolved. secondly, the first lexical negative has wider scope than in example  <dig>  as it states the specific type of mutation. this additional information is required to infer the main fact completely. as in example  <dig>  the first lexical negative expression is also followed by a logical negative expression, and these two negated expressions must be inverted and then combined to recover the main fact.

negated expressions in the mim corpus are not just identified by the presence of negated terms or lexical negative statements. for a negated expression to be annotated, the positive form of the expression needs to be resolved to infer its associated fact. for example, the instance of example  <dig> also contains the lexical negative expression:

p <dig> mutant 

however as its resolution is not required for the corresponding mim fact to be inferred, it is not annotated.

many of the negated expressions annotated in the mim corpus contain the terms mutant or mutation, which stem from the specific types of experimental studies performed in this domain. however, this is not always the case. consider, for example, the subfact in example  <dig> . the subfact description is itself a logical negative expression, and there is no reference to a mutated bio-entity in the supporting instance. the first logical negative expression, states the result of a different experimental technique , which aims to silence or reduce the activity of the gadd <dig> protein. and the second negated expression declares the result of this reduction, i.e. the reduction resulted in the attenuation. in the second negated expression, the nested negative phrase:

suppression of cdc2/cyclin b <dig> activity

correctly matches the action of gadd <dig> stated in the mim subfact, and it is thus not annotated. by inverting the two annotated negated expressions, we get the positive expression:

gadd <dig> expression suppresses cdc2/cyclin b <dig> activity

and thus the mim fact can be inferred from these negated expressions.

the last example in figure  <dig> captures the complexity of negated expressions in the mim corpus. the first negated expression is similar to the lexical negative expressions in the previous examples stating a mutation of cyclin d <dig> at threonine- <dig> directly. however, the second negated expression states that the mutated protein is unable to be polyubiquinated, which is not mentioned in the c <dig> subfact. in turn, the inverted forms of these negated expressions do not directly convey the mim subfact, and thus external domain knowledge is required.

in the first negated expression, we not only need to identify that the threonine required in the mim fact is no longer a part of cyclin d <dig>  but that the amino acid, alanine, it was substituted with cannot be phosphorylated. at this point, there is still no mention of degradation, however with domain knowledge this can be inferred from the second negated expression, as polyubiquitination of a protein triggers a signal for the protein to be degraded.

coreference expressions
when automatically extracting information about a bio-entity, such as the interactions it is involved in, it is important to identify all textual references to that entity within the text, to ensure all information is retrieved. these textual references, for examples, it, they and these, are called coreference expressions. in biomedical literature, coreference expressions are frequently used to make abbreviated or indirect references to bio-entities or events.

to quantify the importance of coreference expressions, instances in the mim corpus are annotated with pronominal, sortal and event anaphoric expressions, and cataphoric expressions, including those referring to terms within another sentence. as in the negated expression annotations, only coreference expressions which need to be resolved to infer the mim fact are annotated. examples of annotated coreference expressions are shown in example  <dig> ,  <dig> , and 11- <dig> . the coreferring expressions and their referred terms are underlined with a single line.

in example  <dig>  the relationship of the mim a <dig> subfact is indirectly stated in the instance as:

...association between these proteins...

which can be expanded to:

...association between c-abl and hsrad <dig> ..

which directly states the relationship. for an ie system to identify this relationship, the sortal anaphoric expression these proteins which is syntactically closer to the instance's relationship statement, would need to be linked to the proteins c-abl and hsrad <dig> 

a similar sortal expression appears in example  <dig> , where the pronoun they in the second sentence refers to the proteins in the first sentence. however, this anaphoric expression is more complex to resolve. firstly, the anaphor they does not specify what type of bio-entity it is referring to. secondly, it is used to refer to only two of the three proteins  in the first sentence. the third protein, hdac <dig>  is referred to in the second sentence with the anaphoric expression histone deacetylase. these anaphoric expressions need to be resolved, along with the dependencies, to link the information in both sentences together to form the mim fact.

in the mim corpus, we distinguish between the anaphoric expressions which refer to single or multiple entities, we have just described, from those that refer to events such as molecular processes. the mim corpus event anaphora annotations differ to those described by humphreys et al.  <cit> , who link different sequential events together. the mim corpus annotations provide links between references to the same events when their resolution is required to identify the mim relationships.

two examples of our event anaphora annotation are shown in figure  <dig>  event anaphoric expressions are underlined with dashed lines. example  <dig>  is complicated as it not only contains an event anaphoric expression, but it contains two this terms. the first this is guided by the restricting modifier protein, and refers to the protein cdc25-c in the first sentence. the second this is the event anaphoric expression which refers to the phosphorylation event, phosphorylated. these two anaphoric expressions help resolve the mim fact by linking the bio-entities in each sentence to the phosphorylation relation described.

in example  <dig>  the event statement in the first sentence indirectly details part of the relationship described in the a <dig> subfact. it is in the second sentence, that the specific mim fact relationship is described, however the event anaphoric expression, the enhanced expression, needs to be resolved first. this event anaphor links the two interaction relationships together, which in turn introduces the bio-entity c-abl in the first relationship to be syntactically associated with the second relationship .

in the mim corpus, cataphoric coreference expressions within instances, which need to be resolved to infer their associated mim facts are also annotated. cataphoric expressions, like anaphoric expressions, are textual references, however they refer to bio-entities which are detailed in the text after the coreferring expression. an example of this linguistic phenomena is shown in example  <dig> in figure  <dig>  in example  <dig>  to identify the acetylating relationship between the bio-entities pcaf and p <dig>  where pcaf is syntactically distant from the relationship statement, the cataphoric expression:

two different histone acetyltransferases 

needs to resolved. this expression refers to the following bio-entities p <dig> and pcaf. as this cataphoric expression is syntactically closer to the relationship statement, if it is resolved, the relationship between the bio-entities, p <dig> and pcaf , can be recovered.

corpus analysis
our mim corpus is the first of its kind to explore the complexity of full-text articles with a focus on the development of ie and ir systems. our analysis provides an overview of the tasks involved and difficulties which may arise when extracting knowledge from full text.

the mim corpus consists of text segments taken from  <dig> full-text articles used as references by kohn  <cit> . in total, we have identified and annotated  <dig> sentences from these articles, which document the facts contained in  <dig> mim summaries of molecular interactions by kohn. table  <dig> shows the distribution of the various fact types which have supporting instances identified and annotated. to reverse engineer the knowledge presented in the  <dig> summaries, we constructed  <dig> different main facts. of these,  <dig> main facts had supporting text identified in their corresponding articles. we identified and annotated  <dig> different instances of text which support these main facts. the  <dig> unidentified main facts stated complex information that was not expressed within a single passage of text. each of these main facts are however supported by instances of subfacts that express part of the knowledge they convey. note that since subfacts were only created when instances supporting part of a fact or subfact are identified, all subfacts have supporting instances  by definition. there are a total of  <dig> different facts created, including  <dig> synonym facts and  <dig> extra facts, with only 67%  of these facts having instances identified. this low percentage primarily results from identifying only  <dig> of the synonym facts required. the proportion of missing synonym and extra facts shows the importance of creating external resources, such as ontologies, and tools for recognising orthographical variants, for the use of ie and ir systems.

fact redundancy
unlike other biomedical corpora available, in the mim corpus we have annotated interaction facts which are repeated in an article, often in different contexts. this is a direct result of our annotation effort not been restricted to abstracts or single sentences, which are limited in space and thus the information they can convey. using full-text articles which tend to repeat the main findings numerous times, we are able to annotate all instances of individual facts. as a result, the mim corpus has a high level of fact redundancy, and this type of redundancy can be incorporated into systems to improve the extraction process. for example, clarke et al.  <cit>  showed that redundancy can be exploited by question answering systems by aiding the passage selection components, as retrieved potential answers with high redundancy within documents are often more correct than others. imperfect systems can also benefit from fact redundancy, as the chances of extracting a fact repeated in different contexts increases. in the mim corpus, the most redundancy occurs in main facts and subfacts, with on average  <dig>  and  <dig>  instances each respectively, while the synonym and extra facts have almost no redundancy.

dependencies
percentage of instances in the mim corpus which have at least one synonym and/or extra fact dependency . the percentage of instances which depend on at least one synonym and extra fact are also shown. the number in parentheses corresponds to the percentage of instances for which an instance of the dependent fact was identified.

our corpus contains more synonym than extra fact dependencies , however there are more unique extra facts and more instances of these identified in the articles . a large proportion of main fact and subfact instances have dependencies . since only a small percentage of these dependencies are identified, many of these main facts and subfacts are not completely contained within the articles. this further demonstrates the importance of automatically extracting resources for these dependency facts.

as seen in the annotation examples, a single instance can depend on multiple synonym and extra facts for the original mim fact to be inferred. for a given instance, we refer to the number of these dependencies spanning from the instance as its dependency breadth. table  <dig> shows the degree of dependency breadth for the instances within the corpus. in total,  <dig> of the main fact instances and  <dig> of the subfact instances have one or more dependencies. many instances of main facts  and subfacts  depend on only one fact.

number of instances in the mim corpus depending on multiple facts. the number in parentheses corresponds to the percentage of instances.

as many instances depend on other facts, it is fortunate that most of the instances depend on less than three different facts. this is because each additional dependency will reduce the likelihood of an instance being identified by an automated system. however, considering that the instances and their dependency facts may occur anywhere within an article, automatically extracting them is still a very challenging task.

in the mim corpus, an instance of a dependency fact may also depend on synonym or extra facts. we call these dependency chains. the facts within a dependency chain must all be resolved before the original fact can be inferred. an example of a dependency chain is shown in example  <dig>  for a given instance, the maximum length of the dependency chain is referred to as its dependency depth, and instances with one dependency have a dependency depth of  <dig> 

number of dependency chains in the mim corpus. the number in parentheses corresponds to the percentage of instances.

locating facts
each instance in the mim corpus is also annotated with its location within the cited article. these include specific article sections, such as abstracts and conclusions, as well as other structures, like the article's title, or headings and captions. using this data, we can evaluate the informativeness of each section and structure for identifying molecular interactions and specific fact types. by incorporating our detailed dependency annotations, we can also determine how many instances depend on additional facts which have instances defined in different sections. this allows us to evaluate the relative importance of processing each article as a complete discourse for fact extraction.

percentage of facts which have at least one instance identified in a specific article section. the number in parentheses corresponds to the percentage of facts for which all of their dependencies are identified within the same section.

many of the main facts are identified in the results and abstracts of articles, however these individual sections account for less than 45% of the main facts with instances annotated. more than 70% of subfacts had a substantiating instance within the results section, whereas only  <dig> % were identified within abstracts. this provides a clear indication that systems which process only abstracts will be disadvantaged by the significant information loss.

the best sections for identifying synonym facts were the abstract and introduction sections, with few being identified within other locations. this is not too surprising, as it is more appropriate to introduce abbreviations and other synonyms when they are first used within an article. this finding is similar to that identified by yu et al.  <cit> .

the majority of extra facts were located in the results and abstract sections. interestingly, the conclusion and methods sections of the articles rarely contributed any facts. the conclusion sections predominately discussed speculative ideas and future directions, while the methods sections detailed experimental procedures and conditions. surprisingly, due to their restricted length, we also found the section and figure headings to express many subfacts.

our location analysis so far indicates the usefulness of each section for expressing different fact types, however it does not consider the degree of instance redundancy which can be exploited by systems. more specifically, table  <dig> only considers if a fact type can be identified within a section, not whether it appears multiple times.

percentage of instances which are identified in specific article sections. the number in parentheses corresponds to the percentage of instances for which all of their dependencies are identified within the same section.

the best sections for finding repeated instances of main facts and subfacts are the results and discussion sections. this contrasts with the results in table  <dig>  where the abstracts were shown to have a significant number of facts identified. this difference is due to the different lengths of these sections and their purposes. for example, abstracts are limited in size and thus the facts they present are predominately only stated once. therefore, an ie system restricted to only abstracts must cover all possible ways a molecular interaction can be stated to ensure its extraction, as the system cannot rely on redundancy for validation or for catching a missed fact in another context later.

for the  <dig> kdd cup challenge, regev et al.  <cit>  developed an ir system which specifically focused on limited text sections, such as titles and figure headings. in the mim corpus, these sections are poorly represented, however when they do state an interaction fact they do so very concisely.

in our next analysis we consider the dependencies of different fact types and their instances. if an ie system is restricted to a particular section, as they often are to abstracts, all instance dependencies must also be identified within the same section. when we take into account each instance's dependencies the results for each section drop dramatically . for example, main fact instances which are predominately expressed in the results section, decreases from  <dig>  to  <dig> % .

that is, only  <dig> % of main fact instances could be completely recovered within the results section alone. this is a direct result of the synonym and extra fact dependencies that are mainly defined in the abstract and introduction sections, and are thus not identified in the results section with the dependent instances. this is similarly observed with instances in the abstract section, where the majority of dependency facts are defined elsewhere. these results further demonstrate the need for processing an article as one discourse, rather than as individual disjoint sections, to allow the resolution of synonyms and extra facts stated in different sections, while gaining redundancy coverage from the results and discussion sections.

negated and coreference expressions
percentage of instances which are annotated with linguistic expressions.

negated expressions are the second most common linguistic property annotated following standard anaphoric expressions. these expressions appear in  <dig> % of instances, and pose an interesting nlp task for the automatic extraction of these molecular interaction relationships. the identification of mutation mentions has been investigated by caporaso et al.  <cit>  and erdogmus et al.  <cit> , however the cause and effect of mutations with respect to molecular interactions has not been investigated.

in total, 13% of the instances are annotated with coreference expressions, which are necessary to identify their corresponding facts. however this is only a subset of those appearing in the mim corpus. in fact, 20% of the instances contain at least one of the following coreferring terms: these, these, they and they. although less than 15% of instances require an anaphoric expression to be resolved, an ie system with an anaphora resolution component, must attempt to resolve all anaphoric expressions as it is not known in advance which expressions need resolving. these results suggest that we would expect the greatest improvement when systems incorporate anaphora resolution components, and little improvement from cataphoric expression analysis.

application
most biomedical corpora, such as genia  <cit>  and bioinfer  <cit> , have been annotated for the purpose of aiding the development of specific ie systems. the genia corpus was recently the focus of the bionlp' <dig> shared task on event extraction  <cit> . one of the main objectives was to identify biological events in text marked with bio-entities. the state-of-the-art performance of  <dig> %  was achieved using a combination of sophisticated nlp methods such as parsing, support vector machines with graph-based features, and rule-based techniques  <cit> .

in this section, we consider the related task of identifying sentences and passages that are likely to contain scientific results. we present the first use of the mim corpus as a gold standard evaluation dataset for a full-text sentence retrieval system. we perform oracle experiments to estimate the performance upper bound for different types of keyword queries, and to investigate how much improvement could be achieved if systems can accurately process linguistic phenomena like anaphora, negation and hedging.

the task of the retrieval system is to identify sentences from the cited full-text articles which report relationships documented in the mim facts. the system is restricted to the articles in the mim ir corpus, which consists of those available in html format. the system, data and performance measures used, are described in the methods section.

since we have exhaustively identified and annotated all of the sentences supporting these specific facts, we can use the mim ir corpus as a gold standard dataset to reliably identify all relevant and irrelevant retrieved sentences and report on the accuracy of the system. each of the main facts and subfacts identified in the mim ir corpus are assigned a set of keywords. figure  <dig> shows two example sets of keywords. the keywords include the bio-entities and their synonyms, involved in the facts associated molecular interaction, and the verbs which describe the interaction. an additional set of terms referred to as the auxiliary terms are also included. using these keyword sets, different queries for the ir systems are constructed. this is explained in further detail in the methods section.

system performance
the overall performance of the sentence retrieval system using as input the different query sets for each of the mim facts is shown in table  <dig>  table  <dig> shows the number of sentences retrieved by each query set, and the precision , recall  and f-score , and the distribution of true positive , false positive  and false negative  sentences of each query.

effectiveness of query sets on sentence retrieval performance. for each query set, we identified the number of sentences retrieved, and the precision, recall, and f-score. the number of true and false positives, and false negatives are also shown.

the first experiment in table  <dig> corresponds to the most restrictive query set, requiring all of the keywords for a mim fact: bio-entities, main verbs, and auxiliary terms, to be present in the retrieved sentences. this query is unrealistic because it requires a user's knowledge of the exact relationship stated in each of the mim facts, including the specific verbs and auxiliary terms used. as a result, this query composition identifies the least number of sentences, and achieves the highest precision of  <dig> %, but the lowest recall of  <dig> % .

each subsequent experiment shown in table  <dig> relaxes the search criteria, for example by expanding the verb query set to include synonymous terms. this increases the number of sentences retrieved and recall, however there is the expected or usual decrease in precision. the least restrictive search, ent, results in the largest recall and the lowest precision, and returns an enormous number of fp sentences.

there is an improvement in f-score, from  <dig>  to  <dig> %, when the corresponding verb lists are expanded to include their synonyms . there are approximately 50% less fn, however the number of fp increases by a similar percentage. the best performance of  <dig> % f-score is achieved with the bio-ent + verb syn + auxiliary query set. the search restriction enforced by the auxiliary terms reduces the number of fp by 34%, however including these terms unrealistically models a user's search style as it relies heavily on prior knowledge of the exact mim fact. unfortunately, the most realistic query setting is ent + any verb, since it is feasible to enumerate possible interaction verbs without prior knowledge of the specific type of interaction.

characteristics of false negatives
we were interested in understanding why some of the annotated instances are not retrieved by the system, that is the false negatives . using the mim corpus, we can determine the linguistic phenomena or dependencies of each fn which may be responsible for them going undetected. this enables us to evaluate the potential impact these phenomena have on the sentence retrieval task and potentially other nlp tasks. examples 15- <dig>  in figure  <dig>  are fn instances of their respective facts.

percentage of linguistic phenomena annotated in the false negative instances for each query set.

the main linguistic phenomena associated with the fn instances are the anaphoric expressions and extra fact dependencies. for example,  <dig> % of fn instances resulting from the bio-ent query contain an anaphoric expression, and  <dig> % require at least one extra fact dependency to be resolved. example  <dig> and  <dig> show instances where no single sentence mentions each of the queried bio-entities, and an anaphoric expression is required to identify the mim facts that are conveyed across multiple sentences. therefore, an anaphora resolution system has the potential to not only improve the relationship extraction process, but also to improve the number of relevant sentences retrieved. furthermore, the large proportion of fn depending on extra facts, even with the most restrictive search , shows that there is a need for systems to identify these dependencies, and treat full-text documents as a complete discourse rather than a set of individual sentences.

characteristics of false positives
our next analysis focuses on the large numbers of fp sentences retrieved in the query experiments. results in scientific literature contain various levels of certainty, ranging from speculation to complete confidence, and after manually inspecting a small subset of the fp, we identified a common use of hedging within the sentences. hedging is frequently used in scientific literature to indicate any lack of commitment to a fact  <cit> . for example, the following sentences express the same proposition between two proteins rpa <dig> and dna-pk, however only the first does so with certainty:

 <dig>  rpa <dig> was sufficient to form a complex with dna-pk.

 <dig>  these results suggest that rpa <dig> interacts directly with dna-pk.

in this section, we aim to identify any potential fp reduction that may be gained from recognising hedging and commitment in articles. more specifically, can hedging and/or commitment be used to help separate relevant and irrelevant sentences. hedging has been studied in the citation analysis of scientific literature  <cit> , and is also annotated within the bioscope corpus  <cit> . our study is the first we are aware of which investigates the impact of hedging on biomedical sentence retrieval.

hedging is typically realised using modal verbs, epistemic adjectives, nouns and adverbials, lexical verbs and indefinite quantifiers  <cit> . for our analyses reported here, we experimented with terms in each of these categories that express uncertainty, and the small set of speculative terms identified by light et al.  <cit> . we also constructed a list of commitment terms, which express the reverse — a high degree of certainty. examples of each of these lists are shown in the methods section. using these lists, we can compare the frequency of hedging and commitment terms within the tp and fp sentences.

examples 18- <dig> in figure  <dig> are fp of their respective facts and contain at least one hedging expression. in these instances, the authors are indicating their research aims and hypotheses, however this is only directly stated in example  <dig>  indicated by the phrase was next examined. in example  <dig>  the epistemic adjective possible and modal verb may are used to express open-mindedness about the mim fact. this instance also expresses certainty, using the phrase given the fact, but about another statement.

epistemic adjectives and modal verbs are also used in examples  <dig> and  <dig>  respectively. if we ignore the notion of hedging, only examples  <dig> and  <dig> would match the mim facts. although example  <dig> contains all bio-entities and the exact verb used to describe their relationships , it only substantiates part of the mim fact .

percentage of true positives, false negatives, and false positives, containing terms from the sets of hedging and commitment terms.

we have investigated the overall importance of hedging terms by combining the hedging categories into one term list , and identified those tp, fn and fp which contain any of these terms . approximately 12% more fp contain hedging terms than tp. in contrast to hedging, we also considered if terms expressing commitment could be discriminative. as expected many of the tp and fn contain commitment terms,  <dig> % and  <dig> % respectively, however almost as many fp contained positive terms  as those containing hedging terms .

so far our analyses have not considered the possibility of both hedging and commitment terms appearing in the same sentences, as in example  <dig>  when we consider sentences with hedging terms and no commitment terms , the fp are separated from the tp and fn almost as much as using the any hedging term, with fewer tp and fn matching.

these results indicate that hedging and commitment is common within the mim corpus, as well as in the fp, and thus these categories cannot be used directly to detect and filter fp. however, they may be useful, in combination with other features, in the development of statistical nlp models for distinguishing between tp and fp.

CONCLUSIONS
in this paper, we have explored the numerous advantages of, and the complexities which arise when, extracting molecular interactions from full-text articles. our analysis is made possible through the development of our unique molecular interaction map  corpus. the mim corpus documents the manual identification of molecular interaction facts from full-text articles, which are cited in a mim developed by kohn  <cit> . each fact can be derived from one or more passages from the citations, and each of these instances are annotated with their location in the article, and whether coreference and/or negated expressions need to be resolved for the fact to be correctly extracted. our annotation scheme also introduces the use of factual dependencies to incorporate additional knowledge which is required to infer a fact from an instance. these dependencies model the coherency within an article as well as any assumed domain knowledge.

the mim corpus consists of  <dig> annotated sentences from  <dig> full-text articles. our corpus analysis demonstrates that full-text processing is crucial for extracting biomedical knowledge. less than 45% of individual facts and 20% of instances we identified were contained within the abstract. our evaluation of instance dependencies also highlights the need for full-text ie. the majority of instances with dependencies, rely on statements within different article sections. further, a full-text system would be able to exploit the redundancy of facts throughout the articles. this will increase recall, and also the likelihood of an imperfect system identifying a fact. therefore, it is expected that systems will significantly improve by processing full-text articles.

using our corpus we can quantify the proportion of interaction instances requiring dependencies and also the amount of external knowledge required. only 29% of synonyms and 46% of extra facts were identified in the articles. further our corpus allows us to report on the relative importance of nlp tools for resolving coreference and negated expressions — 13% and  <dig> % of instances require at least one coreference or negated expression to be resolved, respectively, for the original mim fact to be extracted.

we concluded our analyses with oracle sentence retrieval experiments using the mim corpus as a gold-standard evaluation dataset. the corpus allows us to explore the characteristics of both false negative and false positive sentences. we find the majority of fn arise from extra fact dependencies and anaphoric expressions. we also investigated the use of hedging and commitment terms as a means to reduce fp.

the research presented here, provides important empirical guidance for developers of biomedical ie and ir systems. we expect systems to gain significantly by processing full-text articles instead of individual abstracts, and by incorporating coreference resolution components. furthermore, the automatic identification of synonyms, extra facts, and mutations, will be critical for the identification of molecular interactions.

