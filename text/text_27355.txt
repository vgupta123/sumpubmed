BACKGROUND
biological relevance
pseudoknots have been shown to be functionally relevant in many rna mediated processes. examples are the self-splicing group i introns  <cit> , ribosomal rnas, or rnasep. recently, pseudoknots were located in prion proteins of humans, and confirmed for many other species  <cit> . with the current increased interest in the universe of rna functions  <cit> , algorithmic support for analysing structures that include pseudoknots is much in demand.

previous algorithmic work
well established algorithms for the prediction of rna secondary structures  are commonly based on a thermodynamic model  <cit> , returning a structure of minimal free energy, called mfe-structure for short. in spite of their importance, pseudoknots are excluded from consideration by these programs for reasons of computational complexity: while folding a sequence of length n into unknotted structures requires o time and o space, finding the best structure including arbitrary pseudoknots has been proved to be np-complete  <cit> . in fact, the proof given in  <cit>  uses a scoring scheme based on adjacent base pairs only, simpler than the mfe model because it neglects entropic energies from loops. these complexity results leave two routes to achieve practical algorithms.

the first route is to consider pseudoknots in full generality, but resort to an even more simplistic energy model. an o time and o space algorithm for base pair maximization has been given in  <cit> , and an o time algorithm based on maximum weight matching in  <cit>  and  <cit> .

the second route is the one followed here: we retain the established thermodynamic model, but restrict to a more tractable subclass of pseudoknots. for some quite general classes of pseudoknots, polynomial time algorithms have been designed: rivas and eddy achieve o time and o space  <cit> . this algorithm is available, and, in spite of the high computational cost, it is actually used in practice. we build upon this work and shall call it pknotsre for later reference. further improvements have been shown to be possible for yet more restricted classes, e.g. the non-recursive simple pseudoknots considered by lyngsø and pedersen  <cit>  with o time and o space, but to our knowledge, no implementations are available. recently, an o time and o space algorithm based on the technique of  <cit> , that uses a thermodynamic model has been reported in  <cit> . while it handles simple pseudoknots consisting of more than two helices, it is restricted to non-recursive pseudoknots. thus, this class of pseudoknots and the class presented here have a nonempty intersection, but neither of them contains the other.

our contributions
the new contributions reported here are the following:

• we present an algorithm pknotsrg for folding rna secondary structures including pseudoknots under the mfe model which requires o time and o space.

• the algorithm considers the class of simple recursive pseudoknots, further restricted by three rules of canonization. each simple recursive pseudoknot has a canonical representative that is recognized by pknotsrg.

• while this class is more restricted than the one of the rivas/eddy algorithm, practical evaluation shows that our algorithm finds the same pseudoknots, while the length range of tractable sequences is increased significantly.

• we provide an evaluation of the class of pseudoknots introduced here against known examples from the literature.

• we perform a rigorous evaluation of our algorithm on  <dig> sequences from pseudobase  <cit>  plus  <dig> other structures and compare our results with those obtained with rnafold and, where feasible, with pknotsre.

RESULTS
it is not easy to relate the classes of pseudoknots recognized by the different algorithms mentioned above. we refer the reader to the review by lyngsø and pedersen  <cit> , which compares these classes by means of examples. the starting point of our work is the algorithm pknotsre by rivas and eddy. it recognizes pseudoknots that can be nested and can have unlimited chains of helices involved in crosswise interactions. the drawback of this powerful, but computationally expensive algorithm is the following paradox: pseudoknots with complex helix interactions naturally require longer primary sequence than simpler ones. the high runtime complexity of o, however, as well as the space consumption of o restricts the use of this algorithm to a maximal sequence length of around  <dig> nucleotides. most of the pseudoknots predicted belong to a much simpler structural class and do not exhibit chains of crosswise interactions.

the algorithm developed here achieves time complexity o and space complexity o. the runtime improvement, compared to pknotsre, results from an idea of canonization, while the space improvement results from disallowing chained pseudoknots. these improvements extend the range of tractable sequences to a length up to  <dig> nucleotides, and we can locate pseudoknots up to this size in even longer sequences.

simple recursive pseudoknots
following the terminology of  <cit> , a simple pseudoknot is a crosswise interaction of two helices, as shown in figure  <dig>  in simple recursive pseudoknots, we allow the unpaired strands u, v, w in a simple pseudoknot to fold internally in an arbitrary way, including simple recursive pseudoknots. let us call this class sr-pk. more complex knotted structures like triple crossing helices or kissing hairpins, as shown in figure  <dig>  are excluded from sr-pk. we will show later how they can be integrated in our approach and outline the increased computational cost of doing so. for the main part of this paper, we concentrate on the class sr-pk.

anticipating the complexity of a dp algorithm
thermodynamic rna folding is implemented via dynamic programming . we start with a semi-formal discussion of how to estimate the efficiency of a dp algorithm for folding  before it is written in detail. we consider elements of rna structure as sequence motifs of different types: hairpins, bulges, multiloops, etc. the following notation is taken from the algebraic dynamic programming approach  <cit> . by an equation

m = f <<< a ~~~ b ~~~ c | | | g <<< c ~~~ a

we specify that the sequence motif m can be composed in two alternative ways: the first case, labelled by f, requires adjacent occurrences of motifs a, b and c. the second case, labelled by g, requires adjacent occurrences of motifs c and a. when motif m is to be scored, f and g are seen as the scoring functions that combine the local score contribution of each case with the scores of sub-motifs a, b, and c.

what is the computational effort of locating motif m in an input sequence x of length n, say at sequence positions i through j? first we assume that all motifs can have arbitrary size between  <dig> and n. the algorithm must consider all boundary positions  for motif m, which requires o steps at least. in case g, it must consider all boundary positions k where motifs c meets a, such that the runtime for case g is in o. in case f, there are two such moving boundaries k and l between the three sub-motifs, so we obtain o overall for motif m.

this can be improved if there is an upper bound on the size of some motif involved. if motif a is a single base, for example, the exponent of n decreases by  <dig> in both cases. furthermore, if motif b is  a loop of maximal size  <dig>  then one factor of n is reduced to a constant factor and overall asymptotic runtime is now o. sometimes a motif description can be restructured to improve efficiency by reducing the number of moving boundaries. whether or not this is possible does not depend on the motif structure, but on the scoring scheme! this is a somewhat surprising observation from  <cit> , where such optimizations are studied, and where also the line of reasoning exercised here is given a mathematical basis.

in the sequel, we shall exploit another source of efficiency improvement. if the lengths of two sub-motifs are coupled somehow, say a and c have the same length, then the boundaries k and l in case f are related by k - i = j - l. when iterating over k, we can use l := j - k + i and save another factor of n.

canonization
when the search space of a combinatorial problem seems to be too complex to be evaluated efficiently, heuristics are employed. canonization restricts the search space in a well-defined way, arguing that all the relevant solutions in the full search space have a representative that is canonical, and hence, nothing relevant is overlooked. one such technique is the purging of structures that have isolated basepairs. here the plausibility argument refers to the underlying energy model, where base pairings without stacking have little or no stabilizing effect. this canonization does not affect efficiency, but it achieves a significant reduction of the search space , which renders the enumeration of near-optimal solutions  <cit>  much more meaningful.

we shall introduce three canonization rules that reduce class sr-pk to the class of canonized simple recursive pseudoknots, csr-pk. using the notation introduced above, the motif definition of a simple recursive pseudoknot is given by

knot = knt <<< a ~~~ u ~~~ b ~~~ v ~~~ a' ~~~ w ~~~ b'

with boundaries at sequence positions i, e, k, g, f, l, h, j as shown in figure  <dig> 

segment a forms a helix with a', and b with b'. segments u, v, and w can have arbitrary structures, including pseudoknots. naively implemented, we can expect a dp algorithm of time complexity o according to our efficiency estimation technique introduced above. we now apply canonization. note that it only applies to helices forming pseudoknots; other helices are unaffected. we first present the technical aspects; the discussion of these restrictions is deferred to the next section.

canonization rule 1
 both strands in a helix must have the same length, i.e. |a| = |a'| and |b| = |b'|.  both helices must not have bulges.

note that  is a stronger restriction and trivially implies . under the regime of rule  <dig> we may conclude:

f = l - 

h = j - 

we are left with  <dig> out of  <dig> boundaries that vary independently, and runtime is down to o.

canonization rule 2
the helices a, a' and b, b' facing each other must have maximal extent, or in other words, compartment v must be as short as possible under the rules of base pairing.

we observe that the maximal length of a and a' is fixed once i and l are chosen. the maximal helix length stacklen can be precomputed and stored in an o table. the same observation holds with respect to the other helix, and we fix

e = i + stacklen

g = k + stacklen.

thus, we are left with only four independently moving boundaries – i, k, l, j –, and can hope to obtain an algorithm with runtime o. scores of pseudoknots found between i and j are stored in table knot, and hence the space requirements are o, which is the same asymptotic space efficiency as in the folding of unknotted structures.

a subtlety arises when both helices, chosen maximally, compete for the same bases of v, or in other words, the length of v would become negative. this case is addressed by

canonization rule 3
if two maximal helices would overlap, their boundary is fixed at an arbitrary point between them.

let m and m' be the helix lengths so determined. we finally obtain

e = i + m

g = k + m'

the language of pseudoknots in class csr-pk can be defined by a simple context free grammar over an infinite terminal alphabet. let ak denote a terminal symbol of k times the letter a. the grammar uses a single nonterminal symbol s and its productions are



for arbitrary k, l ≥  <dig>  for example, the simple pseudoknot of figure  <dig> is represented as the string

.. ]]]..........}}.

this grammar is useful to judge how different an experimentally determined structure is from class csr-pk. it is not useful for programming, since it is ambiguous and does not distinguish the fine grained level of detail required in the energy model.

canonical representatives
a careful discussion is required to show that each simple recursive pseudoknot, if not canonical by itself, has  a canonical representative of  similar free energy.

rule  <dig>  affects the length of helices that are considered in forming the pseudoknot. let there be a pseudoknot between i' and j'. it is not canonical if one of the two helices contains bulges. however, there must be at least one pair of shorter helices without bulges at i, j with i' ≤ i and j ≤ j', which serves as a canonical representative, albeit with somewhat higher free energy.

rule  <dig> is justified by the fact that the energy model strongly favours helix extension. clearly, for each family of pseudoknots delineated by i, k, l, j there is a canonical one with maximal helices, whose free energy is at least as low – except for the following case: the maximal helices compete with the internal structure of u, v and w. it may be possible to contrive a structure where shortening  helix a – a' by one base pair allows to create two pairs with new partner bases in u and v, resulting in a structure which has slightly lower energy. still, the free energy of the canonical pseudoknot must be very similar.

finally, rule  <dig> requires a decision where to draw the border between two helices facing each other and competing for the same bases. an arbitrary decision here can only slightly affect free energy, as the same base pairs are stacked either on the a – a' or the b – b' helix.

let e denote the free energy computed for structure s. summing up, we have shown that for each simple recursive pseudoknot k, there is a canonical one c in the search space. while we cannot prove that e ≤ e, we have argued that this is likely, and if not, the energies will at least be close. still, there might be another, energetically optimal canonical structure s  such that e <e <e. in this case, if only the "best" structure s is reported, neither k nor its canonical representative c is observed. 

finally, let us add that the implementation described below is actually slightly more general that the "pure" csr-pk model described above: we do allow a single nucleotide bulge in either helix of a pseudoknot, which complicates the program, but does not affect asymptotic efficiency.

evaluation of the class csr-pk
to evaluate how well the class csr-pk covers known pseudoknots, we considered  <dig> pseudoknot structures from pseudobase. the observations are shown in table  <dig> 

we find  <dig> simple recursive pseudoknots, and  <dig> of more general shapes. we find that  <dig> out of the  <dig> pseudoknots lie in csr-pk, i.e. they are their own canonical representatives.  <dig> more fall into the relaxed csr-pk, where we allow a single nucleotide bulge in canonization rule  <dig>  thus, we cover  <dig> out of  <dig> .  <dig> simple recursive pseudoknot do not fall in class csr-pk, since they contain isolated basepairs, non canonical basepairs or one of the helices has not maximal extent.

considering the remaining 20% complex pseudoknots, note that often pseudoknots in more general classes also have a good representative in csr-pk. for example, the pseudoknot of hepatitis delta virus  consists of four interacting helices of shape a – b – c – d – c' – a' – d' – b', where helix d – d' is very short – only two base pairs. deleting it, helix c – c' is no longer interacting with other helices, and the pseudoknot falls within class csr-pk.

better than optimal 
there are many reasons why "the" mfe structure may only be part of what we want to know about a molecule's foldings. to deal with the problem when the optimal  structure is non-canonical, and its canonical representative is dominated by an unrelated structure, we provide two means: first of all, our algorithm is non-ambiguous, the prerequisite for a non-redundant enumeration of near-optimal structures  <cit> . we can let the program to report the k best structures. secondly, we shall provide three variants of our program:

pknotsrg-mfe computes the mfe structure , pseudoknotted or not.

pknotsrg-enf picks out from the folding space the energetically best structure that contains at least one pseudoknot.

pknotsrg-loc computes the energetically best pseudoknot that can be formed locally, i. e. somewhere in the sequence. "best" is defined here as minimal free energy per base, to avoid a built-in bias towards large pseudoknots.

the best local pseudoknot motif is included by adding two cases:

bestpk = skipleft <<< base ~~~ bestpk ||| bestpkl

bestpkl = skipright<<< bestpkl ~~~ base ||| knot

these clauses have time complexity o and preserve the non-ambiguity of the algorithm. if desired, an enumeration of near-optimal "local" pseudoknots is also feasible.

predictive accuracy
we first consider the predictive accuracy achieved by our approach. we have already evaluated the class csr-pk against the known pseudoknots, and we know that our algorithm correctly implements this class in its search space. what is really tested in the following is the adequacy of the current thermodynamic model , and the results in this section may improve if this model is further improved in the future.

we test our algorithm on the set of sequences listed in table  <dig>  including  <dig> sequences from pseudobase. although there is some redundancy on the sequence level, there is a good reason why we found it important to use all available sequences for testing: even near identical sequences can have different mfe structures, or a small change may prevent successful pseudoknot prediction. in contrast to  <cit>  we did not restrict the evaluation to the class of pseudoknots recognized by our program. it is also instructive to retain the difficult cases, and see whether the predictions catch at least some aspect of a more general pseudoknot.

we compare our results to the output of rnafold, as a representative for rna folding tools without pseudoknot folding capability, and to pknotsre where computationally feasible. for each predicted structure we count the number of correctly and falsely predicted base pairs . let bp be the number of basepairs in the reference structure from the database or literature. we define the sensitivity as , selectivity as .

in table  <dig> we list the prediction accuracy for our sequence set. for all sequences we enhance the prediction accuracy with respect to rnafold. both, the sensitivity and the selectivity increase. compared to pknotsre our results are slightly better, probably because we are using the newer and subtler energy model. for example, for the sequence of hepatitis delta virus, our algorithm predicts all helices except for the very short helix  <dig> , while the other programs miss more than 50% of the basepairs.

we also folded  <dig> randomly selected human trnas  and found only one false positive pseudoknot. interestingly, the pseudoknotted structure has two helices  in common with the true clover-leaf structure, while the structure computed by rnafold has only one helix . for all programs the overall prediction accuracy for trnas is not very high. trnas are a known hard case for structure prediction because they contain many modified bases.

since we use the same energy model as rnafold and our algorithm does not introduce spurious pseudoknots, predictions of rnafold and pknotsrg for unknotted structures are identical. of course, if there is more than one optimal structure, each of the optimal alternatives may be reported and thus the same folding can not be guaranteed.

computational performance
clearly, we are able to fold sequences that are longer than pknotsre's limit of  <dig> nucleotides. short sequences up to  <dig> nucleotides are folded within a minute. long sequences  take about  <dig> hours . if we restrict the maximal pseudoknot size to a reasonable constant, say  <dig> nucleotides, we can further increase the running time. the algorithm runs now in o with a rather large constant c. this enables us to fold sequence of length  <dig> in approximately  <dig> hours. we can further observe that the space requirements scale quadratically with the input size, as expected.

for a fair comparison, the reader should keep in mind that the extra time spent by pknotsre is not strictly wasted: it is spent on assuring that the optimal folding of the input rna sequence does not contain pseudoknots with chained interacting helices of lower free energy than the reported structure. pknotsrg does not consider such structures and hence cannot make this assertion.

discussion
in the following, we discuss extensions of the implemented model and their expected computational cost

bulges, triple crossing and kissing hairpins
canonization rule  <dig> can be relaxed further to allow larger bulges inside the helices forming a pseudoknot. as long as their number  is bounded by a constant, asymptotic efficiency is not affected.

two examples of non-simple pseudoknots are shown in figure  <dig>  we can incorporate them into our algorithm adding the definitions

kiss = kss <<< a~~~u~~~b~~~v~~~a'~~~w~~~c~~~x~~~b'~~~y~~~c'

triple = trp <<< a~~~u~~~b~~~v~~~c~~~w~~~a'~~~x~~~b'~~~y~~~c'

canonization can be applied as above, with rule  <dig> becoming more sophisticated for the triple interaction case. this would yield an algorithm of runtime o, bringing runtime back to the efficiency class of the rivas/eddy algorithm. but note that the space requirements remain o. this is due to the fact that we now consider three interacting helices, but not arbitrary chains.

folding long sequences
rna folding in vivo as in vitro must be understood as a hierarchical process, where small structures in close vicinity form first, and then combine to larger ones  <cit> . the folding path becomes relevant, and the longer a sequence, the more unlikely it is that its folding path leads to a global energy minimum. in other words, the longer the sequence, the less reliable are the results of minimum free energy folding. pknotsrg gives us the possibility to test this using a fairly large structure containing pseudoknots that have been proved experimentally. we considered the sequence of the group i intron from tetrahymena thermophila  .

the mfe-structure found was quite different from the "true" structure taken from the literature. we hand-coded the experimental structure and evaluated its stability in our energy model. the result was striking: the experimental structure  was significantly far from the possible minimum of free energy . so far in fact that it seems infeasible to detect the structure by scanning the space of near-optimal structures. this could be interpreted as the energy model being incorrect, but since it works well for short sequences, we suggest that this is an indication that the kinetics of folding already have a strong influence with this size of sequence, at least when pseudoknots are involved.

while we have achieved a considerable speedup for predicting small pseudoknotted structures, it seems that minimum free energy approach is not meaningful with the largest structures which it now can handle algorithmically. however, the situation changes when we are looking for particular structural motifs .

CONCLUSIONS
we presented an algorithm pknotsrg-mfe, based on the mfe-model, for finding the best rna structure including the pseudoknot class csr-pk. this requires o time and o space. the algorithm variant pknotsrg-enf returns the energetically best structure that contains a pseudoknot , while pknotsrg-loc reports the best pseudoknot  somewhere in a sequence. we achieve a high prediction accuracy for moderate length sequences, whereas long sequences, at least when pseudoknots are involved, seem to have a folding scheme that cannot be modelled with minimum free energy folding.

algorithm pknotsrg is based on a simpler grammar model than the crossed interaction grammars  <cit>  underlying pknotsre, as well as the communicating grammars underlying the recent approach by cai  <cit> . it requires only a minor extension over the adp tree grammars that are applicable to a wide range of sequence analysis problems  <cit> . furthermore, the grammar is not only a theoretical backup, explaining the underlying model. with minor annotation for the sake of efficiency, the grammar actually constitutes executable code. this means that pknotsrg can serve as a template for a new class of programs we call thermodynamic matchers.

many functionally important rnas like rnase p or group-i-introns have known structures that include pseudoknots. the search for such motifs using combinatorial matchers like rnamotif  <cit>  is hampered by the problem that a motif description is either too specific and misses relevant instances, or else it is too vague and produces a large number of different matches to the same sequence. we suggest to develop thermodynamic matchers, which are rna folding programs, based on the established mfe model, but specialized to the particular structural motif at hand. such a matcher returns the optimal way to fold a sequence into the motif structure, together with the free energy of this folding. comparing this energy to the mfe of an unrestricted folding can give us a hint with respect to the significance of such a match.

