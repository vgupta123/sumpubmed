BACKGROUND
the antigen presentation pathway is fundamental to the cellular adaptive immune response. during this process certain short peptides processed from self or foreign proteins may be able to activate an immune response. these are called epitopes. accurate prediction of the peptides that will form antigenic epitopes is essential to rational vaccine design and diagnostics. prediction of t cell epitopes may be done by taking the protein sequence and estimating the binding affinity of each peptide fragment to mhc class i and ii molecules. the strongest binding fragments are then selected. in reality the process is complicated since peptide binding is allele restricted or can be promiscuous.

given the size of pathogen proteomes and variation between strains it is clear that computational tools are necessary for automated screening and selection of immunological features before experiments are performed. with the availability of whole genomes for many microbial species it is now feasible to computationally search an annotated proteome for likely epitopes, this is the basis of immunoinformatics. given that the immune system may present sequences from any protein antigen to stimulate t-cell responses, consideration of the entire proteome is necessary for a complete picture of the potential antigen repertoire.

many mhc binding prediction methods exist for both class i and ii and have been comprehensively reviewed  <cit> . currently the fastest and most practical are data driven approaches which are trained on existing binding data. all such methods vary in accuracy over mhc loci and alleles, largely depending on the availability of quality data  <cit> . binding prediction models for mhc class i and ii complexes suffer from the same limitation: a high number of false positives and false negatives. cut-offs can be raised at the cost of missing potential valuable antigenic peptides. too low a cut-off yields a larger number of synthetic peptides to test, many of which will be negative. there is therefore a trade-off between discovery and experimental cost. actual cut-offs chosen will depend on specific requirements of the study. for example, searching a small number of proteins might mean taking the top ranked percentile from each sequence regardless of scores. given these limitations no method can rely on pure automation. an approach integrating computation and domain knowledge will still be required and end user tools are necessary. one aspect currently lacking are user interfaces that integrate multiple computational methods and allow the factors affecting b cell and t cell immune response to be viewed as a whole.

current tools for epitope discovery
a typical requirement for vaccine design is to first examine the immunogenetic diversity of host populations along with an array of different strains of the organism of interest. predictions over the whole proteome can be made accordingly. the various prediction tools that contribute to this ‘in silico’ stage are available online but must be run individually. many binding prediction tools have web interfaces but there is no way to conveniently integrate or compare the results from these predictors. even with tools to automate such a workflow, the user will want to visualise the prediction data in context, such as in relation to other predictions or protein annotations.

some attempts have been made to provide integrated analysis systems with a user interface. most are prediction ’pipelines’ and few have extensive user friendly tools. the work described by bremel et al.  <cit>  is a recent example. this software is based on using a neural network to conduct qsar regression predictions using various physico-chemical properties of amino acid sequences. it takes into consideration entire proteomes and provides a global standardization procedure for binding scores. however the system is built on the commercial jmp genomics desktop software and thus not easily amenable to testing. pepvac  <cit>  uses binding prediction to five distinct hla class i supertypes for promiscuous epitope prediction. it allows upload of genome sequences in fasta format and provides a proteasome cleavage filter. other commercial desktop software applications for epitope discovery are epimatrix  <cit>  and dnastar’s lasergene structural biology suite  <cit>  which includes a tool for linear epitope prediction. commercial tools may be of high quality but are neither free nor open source, raising issues of reproducibility for academics  <cit> .

we propose a more general but sustainable solution than some of these previous tools. this is to develop a flexible software tool that is not tied down to one particular pipeline or workflow. such a tool should be built on an open-source license and be available freely from a repository which is independent of the host institution or publisher. our solution, described here, is a web-based application using web technologies designed for large data applications making the software both scalable and platform independent.

implementation
web application
the web application is implemented using the web2py  <cit>  framework. this software allows rapid prototyping of interactive web applications using a model-view-controller system. web2py is written in python making it ideal for integrating the previously developed software library described below. the graphical component for sequence viewing is implemented with bokeh  <cit> , a python library that provides interactive javascript plotting. additional plotting is handled with the mpld <dig> library  <cit> . web2py is installed and run on the server and all user interaction takes place in the web browser. this is outlined in fig.  <dig> 
fig.  <dig> outline of web application design. a simple schematic of the application shows the typical architecture of the web2py framework. all processing is done on the server side and results presented to the user via html or other formats such as json and csv. results are not saved directly to the database but persisted to the file system



software library
a library for managing epitope predictions was implemented in python. this provides a standardized programmatic interface for executing several binding prediction methods and processing the results. the results from each method can then be processed and visualized in a consistent manner. to achieve some level of uniformity between prediction methods a base python class was designed with generic functions. this is then sub-classed to implement the specific functionality of each method, for example, a tepitopepredictor class and so on. each class must implement a specialised predict method and return data in a standard format. pandas dataframes  <cit>  are used for internal data manipulation and for results storage and retrieval to disk. this method allows us to integrate a new prediction method in a relatively straightforward and consistent manner. this mostly consists of wrapping the call to the command line tool and processing the output. this python library is available as a separate set of modules from its own github repository at https://github.com/dmnfarrell/mhcpredict. it is also provided as part of the web application when downloaded.

RESULTS
in the the following we describe the main features provided by the web application.

available prediction methods
we have concentrated on using some of the available pan-specific mhc binding prediction methods as summarised here:
tepitopepan. this is our own python implementation of tepitopepan  <cit>  and requires no external program to run. this method covers approximately  <dig> human hla-drb  alleles. it is labelled as simply ‘tepitope’ in the application.

netmhciipan. netmhciipan  <cit>  must be downloaded separately from the website and installed on your system.

iedb mhc-i binding prediction tools

iedb b-cell epitope prediction tools. a collection of methods to predict linear b cell epitopes based on sequence characteristics of the antigen using amino acid scales and hmms.



all of these tools are free for academic use. this application was tested for use with netmhciipan version  <dig> c, iedb mhc class <dig> tools version  <dig>  and iedb antibody epitope prediction tool version  <dig> . these specific prediction methods were chosen because they are free for academic use, have been widely used and in the case of mhc methods, offer the most allele coverage.

adding sequence data
the application is designed to work on sets of proteins, i.e. an entire genome, rather than individual sequences in isolation. before predictions can be done a file with the annotated proteins must be uploaded. this will be saved to the database. usually this data will represent the known proteome of a specific species but may be an arbitrary collection of protein sequences.

annotated protein sequences can currently be added by two methods:
genbank format . genbank is used for reasons of consistency and completeness. the locus tag in the genbank format for each protein is usually a unique identifier and short unlike the description field that might be extracted from a fasta file. genbank files contain features such as gene product or location that are also useful for identifying the protein. genbank files are available from the ncbi genomes page  <cit> .

fasta format. any collection of sequences contained in a fasta file can be added. they do not have to be related in any way but might represent some subset of a genome or a collection of orthologs. this method relies on correct naming for the each sequence in the description line so is not as reliable as the genbank format. however it is probably more familiar to users. any sequences added in this way are assigned to the genome ‘other’.



submit binding predictions
predictions are made by submitting via a form that contains all the basic options for the current methods. multiple methods can be submitted at the same time. since binding prediction for many proteins can take some time, a job queuing system using the in-built web2py scheduler is employed. jobs are run in the background without interfering with the normal operation of the application and are queued and run consecutively. a file is stored for each protein so that results can be retrieved on a per protein basis quickly. once predictions have been saved for a protein they can be immediately viewed, so one does not have wait until the entire job is completed. it is possible to allow jobs to run concurrently to make better use of computers with multiple processors. thus the application can be scaled to handle a higher throughput of predictions if required. this is detailed in the documentation.

thresholds
selection of predicted binders is usually done based on the percentile rank within a sequence or absolute mhc binding affinity . it has recently been shown that absolute binding affinity threshold correlates better with immunogenicity and mhc allele-specific thresholds should be used to improve correlations  <cit> . in addition bremel et al.  <cit>  have noted that conclusions about binding affinity cannot be made based on measurements on one protein in isolation. this likely reflects the situation when an infectious organism is digested in an antigen presenting cell and a large repertoire of the resultant peptides are subjected to competitive binding. for this reason we find a good general solution for binder selection is to apply a global percentage threshold on a per-allele basis. this is done by sampling the scores across the proteome for each allele and pre-calculating the quantile value at each percentage level. thus, rather than taking the top percentage in each protein, the binders shown reflect the results for the other proteins in the genome. this threshold can be altered in the user interface to show more or fewer binders as needed. it should be underlined again that this is a rule of thumb and thresholds must be considered based on the number of sequences being searched, number of epitopes required for an assay and so on.

visualization
mhc binding predictors are generally used to make multiple scoring predictions for each allele for an n-mer set of binders. this information is difficult to display in a single plot. one of the primary purposes of this application is to allow the user to quickly visualise the location of predicted epitopes along the protein sequence and compare multiple alleles from several different methods all in one plot. a form allows selection of proteins by locus tag or gene name and a score threshold and minimum allele value. when the form is submitted the right pane is updated with a tabbed pane containing the plot, sequence representation, table of the top binders and display of the gene features from the genbank source.

the default visual representation is a set of tracks with bars representing predicted n-mer binders for each allele ordered by position on the sequence as shown in fig.  <dig>  a useful feature for long sequences is the ability to zoom in and pan left and right. individual epitope/peptide details can be identified by moving the mouse over the bars. basic protein annotation can be optionally displayed in the plot. this currently shows predicted transmembrane regions, pfam annotations and predicted signal peptide cleavage sites along the sequence. this information is not calculated but is retrieved using the seqdepot  <cit>  rest service. results can be shared with other users by providing a permanent link to the protein uri in a restful manner. for example to share information on protein rv1886c in genome mtb-h37rv the following link would be used: http://server/epitopemap/default/protein/myresults/mtb-h37rv/rv1886c where ‘myresults’ is the identifier associated with this particular set of predictions.
fig.  <dig> visualization of results. plot visualization of multiple binding predictions for a single protein sequence. tracks for each prediction method are color coded. protein annotation can be shown if required. a hover tool provides information on each binder



genome-wide analysis
one application of immunoinformatics is to screen out likely candidate antigens from the genome for further study. the approach used here is to perform predictions for all protein sequences and select out potential antigens based on the pattern of predicted binders. the user chooses a set of previously calculated predictions, a global percentage cut-off and minimum number of alleles. all promiscuous binders are calculated along with detection of clusters of these binders along each sequence. epitope clustering has been previously  <cit>  observed to be an indicator of t cell epitope regions. the result is a table of all proteins with various metrics such as the number of binders per unit length of each protein or the number and highest density of epitope clusters. the table can be sorted by any column. two additional tables showing the top peptides and clusters are also produced. users may find it useful to copy these tables into a spreadsheet for further processing. calculations are done on the fly but results are saved for the chosen settings and can be recomputed quickly.

epitope conservation
this module computes the degree of conservation of an epitope within a given protein sequence set at a given identity level. identity is the degree of correspondence between aligned sequences. the idea is to give a measure of how well conserved a particular epitope is within a subset of similar sequences, for example representing a set of pathogenic strains. our method uses the ncbi online blast  <cit>  service to retrieve orthologous matches. by default all sequences are retrieved with an expect value lower than  <dig> and can then be filtered by percentage identity. sequences are checked for duplication. it may be preferable or necessary to refine blast queries to narrow down the sequence set to a specific taxon or species. this can be done using an entrez query option which restricts the search to a subset of entries from the ncbi nr  protein database fitting the requirement of the entrez query. the result is a table of aligned sequences and a list of percentage conservation of each promiscuous epitope at the chosen identity threshold. also produced is a plot of minimum identity versus conservation for each epitope. the concept is to provide a ranking of epitopes shared with similar species or strains. a comparable tool is available online as part of the immune epitope database and analysis resources   <cit> . that tool requires the user to provide sequences manually and provides a more detailed amino-acid breakdown of conservation.

integration of experimental data
experimental data characterizing antibody and t cell epitopes studied in humans and other animal species is important for benchmarking predictions and cross checking during vaccine development. the main source for this data is the iedb  <cit>  but there are also smaller databases. we have added a basic search interface for accessing these datasets using the pepdata library  <cit> . this is a python interface to commonly used immunology and bioinformatics datasets . the tool currently consists of a search form with tabulated results. further development of thisfeature is discussed below.

deployment
we envisage this application typically being used as a local application in a single-user context. however installation of the software dependencies may be a challenge for some users. for those wishing to install their own copy of the application it may be easier to use a virtual appliance. this is a virtual machine os with all software pre-installed. we can make such a virtual image available on request. more details are given in the documentation. advanced users can consult the deployment recipes in the web2py book  <cit> .

discussion
rather than a prediction pipeline, this is an end-user visual tool that will assist with the inherent ’needle in a haystack’ problem of epitope based vaccine design. the application will be useful in the crucial first filtering step to narrow down experimental choices. mhc binding prediction is only one step in the search for suitable epitopes. in practice multiple other factors limit the peptides which actually serve as epitopes. proteolytic cleavage is a critical process which determines which peptides are available to be bound by mhc molecules. the t-cell receptor binding process is another determinant of which epitope will activate an immune response. some of these other predictors of antigenicity have yet to be integrated into this application but will appear in a future version. there are also a number of other epitope filtering strategies in the literature  <cit>  that could be included to exploit the data structures we have designed to build the framework. the detection of epitope clusters is just one example.

the integration of experimental data is a non-trivial task since it requires correct identification of the source protein sequence  that the epitope in question belongs to so that predictions can be compared. the iedb meta data is usually sufficient for this but other databases may not be. our web interface currently allows the public databases to be searched but is still in development. it is planned that the user will be able to do a search and then immediately submit the source protein sequences for prediction. then the predictions will be overlaid with the experimental epitopes. this opens the possibility of using the tool for quick benchmarking.

this software is a flexible platform designed to be extensible by anyone familiar with python programming. we have focused on providing a tool that can be installed locally and/or accessed from the server over a network. we encourage those wishing to use the program to install it themselves. however a public server is available at http://enzyme.ucd.ie/epitopemap to allow review and testing. users are welcome to request a guest login and try the application there. detailed support information is available as a web page inside the application. an additional movie file is also provided that outlines the operation of the software by example .

CONCLUSIONS
in this study, we introduce epitopemap, a web based application for integrated execution, visualisation and analysis of mhc binding predictions in a flexible and user friendly way. the software has broad applicability to any pathogenic proteome. the tool is novel in providing a unifying framework for currently existing prediction methods. there are many ways to exploit the genome-scale integrative approach, the genome analysis tool included is one example. the ability to visualise coincident features of multiple predictors within proteins in one plot will provide rapid insight into immunological features and should save significant time. users can tailor their studies to specific allele groups for mhc-i and mhc-ii predictors allowing viewing of results for specific populations. as updates to the standard predictors are released these can be integrated into the application with little or no change. we intend to add more features, such as experimental data integration, in the near future.

availability and requirements
project name: epitopemap

project home page: dmnfarrell.github.io/epitopemap

operating system: platform independent

programming language: python

other requirements: web2py, ncbi-blast+ tools, python-pandas, python-bokeh

license: apache license v <dig> 

any restrictions to use by non-academics: non-academic license needed to use external binding prediction methods such as netmhciipan



additional file
additional file  <dig> 
screencast showing the basic usage of the epitopemap web application.




abbreviations
mhcmajor histocompatibility complex

apcantigen presenting cell

iedbimmune epitope database and analysis resources

blastbasic local alignment search tool

hmmhidden markov model

qsarquantitative structure activity relationship

restrepresentational state transfer

competing interests

the authors declare that they have no competing interests.

authors’ contributions

df designed the web interface, wrote all software and prepared the manuscript. sv provided critical advice and helped to draft the manuscript. both authors read and approved the final manuscript.

