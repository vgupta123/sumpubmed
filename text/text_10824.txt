BACKGROUND
copy number variants  are defined as dna segments  that are present in variable numbers in a genome  <cit> . although common in the human genome, some cnvs have no apparent phenotypic effect  <cit> , while others are implicated in a variety of phenotypic effects including disease phenotypes  <cit> . as such, the search for cnvs associated with disease phenotypes has emerged as a productive approach to identify genetic factors underlying a number of common and complex neurodevelopmental disorders  <cit> . there are two reasons for this productivity. firstly, cnvs are a major contributor to genomic variation, with approximately 13% of the human genome affected by cnvs  <cit> , and over  <dig>  cnvs have been mapped to specific genomic locations and are documented in the database of genomic variants   <cit> . secondly, advances in technology, including microarrays, permit high-throughput methods to identify cnvs. such technologies are now relatively common and are economically feasible alternatives to methods like whole genome sequencing. with a number of array platforms and bioinformatic algorithms available, it is necessary to identify optimal analytical pipelines to make inferences regarding specific genomic regions and their copy number identity.

on genome-wide microarrays, such as the affymetrix® genome-wide human snp array  <dig> ™, sets of probes are designed to determine which allele is present at genomic sites of known single nucleotide polymorphism . the arrays may also include additional probes designed for genomic sites where there is no known variance . normally, cnvs are identified by fluorescent signals generated by snp probes on the microarray. the fluorescent signals emitted by both snp probes and copy number probes  are summarized and analyzed for variance in signal intensity using bioinformatic tools, typically in comparison to a set of reference samples. consecutive markers that exhibit altered signal intensity from the reference are interpreted as copy number variants . there are a number of algorithms that have been developed to identify putative cnvs. unfortunately, not all putative cnvs called by any existing algorithm can be viewed as biologically relevant. the application of multiple software programs that are designed to call cnvs from the same microarray data often yield differing results  <cit> . the use of multiple algorithms has been shown to increase the reliability of observations with different degrees of confidence. for example, kim et al. used three calling algorithms  on a set of results from affymetrix® arrays. they found that only  <dig> % of total cnv calls could be identified by all three distinct algorithms  <cit> . furthermore, their attempt to confirm putative cnv calls using qpcr produced differing results;  <dig> % of cnvs called by a single algorithm,  <dig> % of cnvs called by two algorithms and  <dig> % of cnvs called by three algorithms could be confirmed by qpcr  <cit> .

although snp arrays have become popular for ascertaining copy number data in addition to snp genotypes, there are many issues intrinsic to the use of snp arrays for the identification of cnvs. theoretically, it is possible to resolve some of these issues through the use of sensitive analytical methods. in fact, the past ten years have seen a boom in the development of algorithms and technical resolution that have been applied across platforms and programs  <cit> . quality control measures such as batch effect correction, normalisation methods, and reference group choice seem like simple considerations when compared to the choices available in both algorithms and cnv identification software, as well as in post-analysis filters like marker density and minimum marker thresholds. the reality of limited biological validity in the use of microarrays to call copy number variable regions is concerning for this area of research that may hold exceptional promise in clinical applications  <cit> . the need for best practices in the workflow for cnv calling protocols has never been more essential.

this study is aimed at assessing putative cnv calls made using the affymetrix® human snp  <dig>  array™ using four cnv calling programs: penncnv  <cit> , affymetrix® genotyping console™  <cit> , partek® genomics suite™ , and golden helix snp and variation suite™ . using individuals of known relatedness, we have identified overlapping copy number variants across the four algorithms. using the dataset generated, we have assessed the relative sensitivity of each of the four methods from the following comparisons: between unrelated individuals, between parents and offspring, and between monozygotic twins, that are known to share 0%, 50%, and 100% genetic relatedness, respectively. we argue that the most biologically relevant cnvs will be expected to follow this relationship, with the exception of de novo events. the results showed that overall, affymetrix® genotyping console™ identified the most differences between unrelated individuals, while partek® yielded the most similarity between identical twins. on average, penncnv called cnvs that were comparable to affymetrix® genotyping console™ across unrelated individuals and cnvs that were similar to the partek® results. assessments using golden helix did not follow the trends expected from the known genetic relatedness of individuals. we argue that a combination of three programs  may be optimal to identify biologically relevant cnv calls due to their ability to resolve copy number variations across different biological relatedness.

methods
this study received ethics approval by the university of western ontario’s committee on research involving human subjects. written informed consent was obtained from all participants. a total of  <dig> genomic dna samples were isolated from whole blood representing the study participants that included six pairs of mz twins  and two sets of parents for two of the twin pairs . the six twin pairs ranged in age from  <dig> to 53 years at the time of sample collection. genomic dna was extracted from whole blood using the perfectpure™ dna blood kit following the manufacturer’s protocol . whole genome microarray analysis was performed using the affymetrix® genome-wide human snp array  <dig> ™ at the london regional genomics center  following the manufacturer’s protocol. sixteen arrays  were processed and analyzed as a single batch and scanned to produce cel files. the cel files were used to generate cnv calls on all  <dig> individuals using four programs: affymetrix® genotyping console  <dig> .1™ , partek® genomics suite™  penncnv , and golden helix® svs suite  <dig> ™ . in affymetrix® genotyping console, we used both the birdsuite package  and the canary algorithm for cnv detection. birdseye, which is found in birdsuite, was used for the detection of rare cnvs via a hidden markov model  and canary was used to call copy number state in genomic regions with known copy number polymorphism. in partek®, hmm region detection using default parameters was selected. in penncnv, the default hmm algorithm was selected. in golden helix® we used the cnam optimal segmenting algorithm. hmm-based algorithms use prior probabilities of copy number states in conjunction with array-derived normalized fluorescent intensity values to call the most likely copy number state in a given genomic region. the copy number states determined by hmm are discrete and they include  <dig>   <dig>   <dig>   <dig>  and  <dig>  on the other hand, genomic segmentation scans two adjacent regions of the genome to find differences in copy number using two specific t-tests. cnam optimal segmenting uses genetic marker map information alongside log <dig> ratios to discover regions in which log <dig> ratios vary significantly between adjacent segments. we used the univariate method of optimal segmenting which segments each sample in the study separately. canary, which was used in affymetrix genotyping console, calculates cnp copy number state for over  <dig>  regions of known copy number polymorphism .

the user-defined analytical parameters were kept consistent across the analysis. specifically, the hapmap  <dig>  <dig>  array reference was used as a reference file and variants were identified as dna regions, which were called as copy number state of  <dig>   <dig>   <dig>  or 4+ covering a minimum of  <dig> consecutive markers on the array. only variants greater than 1 kb in size were included in subsequent analysis. the cnv calls made by each of the four software programs were merged with adjacent cnv calls that may represent the same cnv event. the criteria used to merge were 1) cnvs had to be adjacent on the same chromosome ; 2) cnvs had to share the same gain/loss status; and 3) adjacent calls were ≤ 20% of the total length, that is, if there were three consecutive genomic segments a, b and c, where a and c are both losses and b is unchanged, we divided the length of the gap b by the length of a + b + c. if this fraction was ≤20%, then we merged a + b + c as a single cnv call. if there were multiple consecutive cnvs, each with 20% or less length between one and all of the others, then we extended the formula to the next cnv and merged all of the cnvs into one event. when multiple smaller cnvs were merged into one large cnv event, we identified the event as a merged cnv. we then labeled our newly merged cnvs and any cnvs that remained unmerged as either “cnv-gain” or “cnv-loss” within the calls from all four software programs in all individuals.

to compare cnv calls made by different software programs, we used a 50% reciprocal overlap  criterion to compare the calls made within an individual from the four software programs. the use of 50% ro for comparing calls is consistent with other reports  <cit> . two cnv events were considered to pass the 50% ro criterion if at least half of the length of the first cnv overlapped with the second cnv and vice versa. if the 50% ro criterion was met, the two events were then considered to be the same event  as long as their call states also matched. we calculated the reciprocal overlap   as follows:

where x and y are both cnvs, l is length in base pairs that the two cnvs  overlap, end indicates the end base pair position of the given cnv, and start indicates the start base pair position of the given cnv.

 oa=lxend-xstart+ <dig> 

 ob=lyend-ystart+ <dig> 

cnvs met the ≥50% ro criteria if o and o were both ≥50%. cnvs that did not meet this criterion were considered to be different events.

finally, the same ro definition  was used to compare shared and unshared calls in a pairwise comparison between individuals in the following categories of genetic relatedness: between mz twins in a twin pair, between parent and child, and between unrelated individuals. following ro comparisons, we calculated the average difference  within each group . specifically, we looked at three comparisons within each group, that is, three mz twin comparisons, three parent–child comparisons and three unrelated pair comparisons. this calculation was used to test the relationship within each group in relation to their expected genetic relatedness. to perform the reciprocal overlap formula, hd-cnv was used with  <dig> as the identified ro merge criteria  <cit> . the d value was averaged for each type of relatedness in each individual software program. the results were assessed to compare the effectiveness of each individual algorithm in the identification of biologically relevant cnvs.

RESULTS
supplementary table s <dig>  shows the total number of unmerged cnvs representing gains and losses identified by each of the four software programs for  <dig> individuals using the same cel files from affymetrix® human snp  <dig>  arrays™. the  <dig> individuals included in this analysis represent six pairs of mz twins and the two parents for twin pairs  <dig> and  <dig>  the results show that the number of raw cnvs identified in each individual varies depending on the program used. this variability is apparent in the numbers of gains and losses as well as the total numbers. although agc, pgs, and pc identified similar numbers of cnvs for most individuals , gh yielded more cnvs in each individual . while pgs yielded relatively more gains than losses, the other programs  yielded relatively more losses than gains. the differences in the number of gains and losses called between programs have suggested that each method may highlight some aspects of cnv calling but not others. we attempted to gain an insight into this variability by assessing the distribution of cnv calls in different contexts.

first, we assessed the size distribution of cnvs called by the four programs. we found that the four programs vary in the number of cnvs called and that cnvs fall into different size categories . cnvs in the range of 1-100 kb were most frequent in agc calls  and least frequent in pgs calls . similarly, the largest cnvs  were observed at higher frequency in pgs calls  as compared to the other three programs . the chromosomal distribution of cnvs identified by the four programs showed that gh calls more cnvs on all chromosomes as would be expected with the higher number of calls overall . also, this number is closely followed by pgs calls particularly on chromosome  <dig>   <dig>   <dig> and  <dig>  otherwise, the distribution of cnvs across chromosomes is proportional to chromosome size, as expected.

next, we assessed the overlaps in cnv calls made by each of the four programs in the twelve monozygotic twins . most cnvs called by gh were not shared by calls made by any other program. the low degree of overlap suggests that the underlying assumptions of cnv calling by gh are different from the other three methods. also, a significant number of cnv calls called by the other three methods  showed overlaps. the cnv calls by pgs and agc showed the most overlap , closely followed by the overlap between pc and pgs , and between agc and pc . cnv calls that overlapped between agc, pgs, and pc represented 27% of the total number of cnv calls made by the three programs. when calls made by gh were included, all four programs shared only  <dig> %  of total cnv calls made. these results are similar to other reports involving comparison of different cnv calling programs  <cit> .

we expected that differences and similarities in cnv calls would follow the genetic relatedness of individuals. for example, monozygotic twins would be expected to share the most cnv calls, while cnv calls for two unrelated individuals will show the highest amount of divergence. similarly, pairs of individuals  with presumed genetic relatedness would be expected to fall between 100%  and 0% . figure  <dig> shows the degree of cnv difference d involving randomly selected pairs of unrelated individuals , parent–child pairs , and mz twins  for each of the four software programs. the estimate of difference  for cnvs called by gh has no relationship to the genetic relatedness between individuals. conversely, cnv calls made by the other three programs  follow the known genetic relatedness. the largest difference between unrelated individuals was identified by agc  and followed closely by pc . the smallest difference found between mz twins is reflected by pgs  followed by pc . interestingly, the parent–child differences for the three methods pgs, pc, and agc were estimated to be ~56%, ~61%, and ~72%, respectively. even though the standard deviations associated with these means  are relatively large, the overall trends for the pairwise comparisons made by pgs, pc, and agc follow the expected pattern based on the known genetic relatedness. these findings, in combination with the relatively high degree of overlap in cnv calls among these methods, support the likelihood that pgs, pc, and agc are identifying biologically relevant cnv calls. calls made by all programs provide a greater likelihood that the underlying cnv may be real. at the same time, if one is forced to choose only one method, our analysis based on the ability to resolve varying degrees of genetic relatedness favours the use of pc. the reason for this choice is based on the fact that it has a relatively high d value for unrelated individuals, a low d value between mz twins, and an intermediate degree of difference involving parent and child, as is expected.

we compared four programs to call cnvs  from the same microarray data for  <dig> individuals using the affymetrix® human snp  <dig>  array™. the cnv calls are different across the four methods, but some overlap was observed. it follows a number of other reports in the literature that have also reported similar discrepancies  <cit> . it is therefore not surprising that the results are different across the four methods and particularly between the three methods that use a hmm  versus the method that uses a segmentation approach . unlike hmms that assume the means of different copy number states to be consistent, optimal segmenting delineates cnv boundaries with increased sensitivity. overall, we have found that some cnv calling methods can appropriately distinguish known levels of genetic relatedness and some have more difficulty doing so. we also note that some differences between related individuals, including monozygotic twins would be expected due to somatic mosaicism; however, these differences would be expected to be relatively small in number.

the results presented in this report suggest that microarray experiments are prone to errors in cnv calls. further, our results are likely to include false positive as well as false negative calls found in our arrays. also, many of the cnv databases populated with entries over the past half-decade may include results that have not been confirmed  <cit> . in fact, research involving cnv calling from microarray results would benefit from better microarray technologies, better algorithms for cnv calling and better methods for independent confirmation.

all steps in a microarray experiment, from the isolation of dna from tissue samples to the calling of cnvs from cel files, are points at which error can be introduced. these and other confounding factors could affect the accuracy of biologically-significant cnv detection. inferring copy number from array data is notoriously plagued with high false-positive rates that may vary depending on the algorithm used  <cit> . given the clinical implications for accurate cnv detection  <cit>  as well as the introduction of ascertainment bias into future studies via microarray design, algorithm parameters, and database entries  <cit> , it is necessary to identify well-performing cnv calling programs.

CONCLUSIONS
the results presented here offer a number of insights with respect to the total number of cnvs across individuals including gains and losses, program-specific distributions of cnv size, and cnv distribution across chromosomes. as expected, the number of cnvs was related to the size of the chromosome. the major observation from the collective results is that the number of cnvs identified by golden helix  software was much higher than the number called by the other three programs . also, golden helix identified vastly different cnvs when compared to those identified by affymetrix® genotyping console™ , partek® genomic suite , and penncnv . excluding gh as an outlier, agc yielded more cnv calls than pgs and pc. as expected, agc, pgs, and pc yielded a relatively large number of overlapping cnvs. these results are consistent with a number of reports including pang et al.  <cit> .

further assessment of the four cnv calling methods was considered in the context of similarities and differences involving individuals of differing genetic relatedness. as it stands, three of the four methods met such expectations to different degrees. the results offer two conclusions. first, overlapping cnv calls by three of the programs  will offer the highest likelihood of discovering biologically relevant calls as compared to any other group of the four programs used in this report. the combination of agc and pc identified the most differences among unrelated individuals whereas pgs and pc showed the least differences between mz twins. the results from gh showed a higher number of cnvs than would be expected and also did not follow the expected pattern when groups of known relatedness were compared. for this reason, we do not recommend gh and suggest that further research should explore the unexpected profile generated from the software. secondly, the pc calls best reflect the expectations at all three levels involving unrelated individuals, parent–child, and mz twins. our results and conclusions support other groups, which have found that without independent validation using bench confirmation techniques such as qpcr, cnvs calls should not be assumed to be truly valid variants  <cit> . finally, we suggest that incorporation of family data will help in improving the quality of cnv calls alongside the use of multiple cnv calling methods.

availability of supporting data
the data set supporting the results of this article is available in the gene expression omnibus  repository,   <cit> .

abbreviations
agc: affymetrix® genotyping console  <dig> .1; cnv: copy number variant; dgv: database of genomic variants; gh: golden helix® svs suite  <dig> ™; hmm: hidden markov model; pc: penncnv; pgs: partek® genomics suite™; ro: reciprocal overlap.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
ss, ro, and cc conceived and designed the experiments. cc, mm, aw, meo, and za performed the experiments. cc and aw analyzed the data. cc and ss wrote the paper. all authors read and approved the final manuscript.

supplementary material
additional file 1: table s1
raw copy number calls by program. number of raw  copy number variant calls in six pairs of monozygotic twins and two sets of parents.

click here for file

 acknowledgements
we wish to thank the individuals who participated in this study. we also wish to thank dr. mark daley for his computational assistance and dr. kathleen hill and eric diehl for their assistance in the final editing of the manuscript. this work was supported by the canadian institutes of health research and the ontario mental health foundation. the funding bodies had no role in the design, collection, analysis or interpretation of the data.
