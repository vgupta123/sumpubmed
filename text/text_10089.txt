BACKGROUND
scientists in molecular biology find that a significant technique for studying protein function is through the study of protein-protein interactions. while the actual experimental study of such interactions remains the most important manner of obtaining these data, the number of protein-protein interactions reported in the literature is substantial and growing rapidly. there are a number of tabulations of these interactions, such as that provided by the munich institute for protein sequence ; these tabulations are of necessity incomplete.

to address this problem, we have been developing a group of biology-specific computational annotators that work in conjunction with our group's text analytic software, for the discovery of protein-protein relations in text.

in this paper, we undertook a study that utilizes a combination of computational linguistics, statistics and domain-specific rules to detect protein-protein interactions in a set of medline abstracts.

the system we describe here is particularly appealing because it can be used both to find known interactions and to find interactions not yet tabulated. according to the national library of medicine, medline contains over  <dig> million abstracts, with about  <dig>  being added each month. thus, having a scalable, robust system for protein interaction discovery provides a major information tool for molecular biologists.

a number of workers have tackled portions of this problem previously with some partial success. the suiseki system  <cit>  recognizes various grammatical frames which may describe protein interactions. they reported high precision  for the shorter patterns and lower precision  for the longer ones.

in a more narrowly focused experiment, pustejovsky et. al  <cit>  described a computational linguistic system for detecting inhibit relations, with 90% precision and recall of 57%.

recently leroy  <cit>  described genescene, a software package for detecting relations between genes. they used both rule-based detection and co-occurrence based methods, finding that rule-based relations were 95% correct and co-occurrence based relations 60% correct. researchers at ariadne genomics  <cit>  have quite recently described a system called medscan, which they report as having 91% precision and 21% recall on human protein-protein interactions.

we  <cit>  have previously described methods for detecting relations between noun phrases and methods for displaying them  <cit> . in this paper we propose using these techniques along with a combination of statistical and rule-based approaches to identify protein interactions in medline abstract text. ideally one would imagine constructing a protein interaction network much like the network that allowed swanson to discover the relationship between "fish oil" and "reynaud's disease"  <cit> . swanson tabulated terms  that occurred near the initial target name  and formed a network through several papers that eventually led to the conclusion that fish oil was related to the reduction in the symptoms of that disease. the relations extracted in this paper can be used to form just such a network.

this paper discusses the text analytic tools used, and then describes our experiments against a gold standard of protein relations. finally the results of mining relations across a large set of medline abstracts are described.

text analytic tools
the system used in these experiments is constructed using the talent  text mining system  <cit> . the current version of this system is called taftalent and operates in the unstructured information management  environment  <cit> . it consists of a series of document-level annotators that perform preliminary part-of-speech lookup, tag each word for part of speech, perform a shallow parse of each sentence, and annotate yeast proteins in a manner described below

in this work, the approach is to use tagger and shallow parser annotators primarily for sentence boundary recognition, and use a dictionary annotator derived from public sources to recognize the protein names. the goal of this approach is to be fast and scalable as well as to improve precision and recall over other methods.

after each medline abstract is processed by the annotators, an annotation consumer program converts these annotations into entries in a database load file. this file contains all of the salient terms per document, their part of speech and their relative token positions in the document. an additional database load file contains the medline document metadata: dates, titles, authors and id numbers.

the flow of this process is show in figure  <dig>  the medline documents are read one at a time by a collection reader and placed in the common annotation structure provided by the uima system. then a series of sequential annotators tokenize the text, perform part of speech tagging and shallow parsing, and identify the protein names using the dictionary described below. the results are written into a two database tables for further analysis.

then it is possible to use a few simple database queries to construct a database table of all the unique terms in the document collection, and compute their frequencies, and the number of documents in which they appear once and more than once. using these data the salience or iq  <cit>  of each term can be computed.

RESULTS
we describe two experiments; one using a small amount of data derived from the mips tables on the web, and a larger experiment utilizing  <dig>  medline abstracts.

preliminary experiments using mips data
the munich institute for protein sequences  maintains a database of published yeast  protein interactions along with a reference to the medline abstract of the paper in which the interaction is reported. this table contains  <dig> protein names and  <dig> pairs of protein interactions and provides links to additional information on each protein. the interaction table was parsed and reduced to  <dig> unique relations, and the protein names and the  <dig> medline abstracts downloaded.

an annotator was then developed that compared each lexical token found against the list of proteins and marked those that matched. then, a simple program was designed to report the location of these proteins within each sentence in each document.

initially, this was not particularly successful because each protein has a number of possible representations that needed to be matched to a common canonical form. for example, the protein srv <dig> can also be represented as srv2p, srv2p, cap and . synonyms for most of these proteins are available on pages linked from the original page on the mips web site. the dictionary was expanded using these synonyms and the various allowed capitalizations and the analysis rerun, storing all terms and their document positions in a database table.

even with the expanded protein synonym table, only  <dig> protein interactions were detected within single sentences that matched those in the mips interaction table, and  <dig> other interactions were detected which did not match those in the mips table. this amounted to a precision of  <dig>  and a recall of  <dig> . further, there was no particular correlation between the computed strength  of the relation  <cit>  and the likelihood that it agreed with those in the mips table.

detecting relations in individual documents
in an effort to improve the accuracy of protein-protein interaction detection, a detailed study of  <dig> of the abstracts was undertaken to determine what algorithms and approaches would be most effective. in this study, each abstract was examined along with a list of the interactions reported by the mips table, including all of the synonyms for each protein. this process led to the following conclusions:

 <dig>  some interactions were not reported in the abstracts, but only in the full papers. in fact some review articles contained no protein names at all in the abstracts. this finding is similar to that previously described  <cit> .

 <dig>  some interactions were described that were not tabulated by mips. for example, the abstract might mention prior work.

 <dig>  protein complexes were frequently mentioned. for example references are made to dimers such as "ddc2-mec1" and trimers such as "hap2p-hap3p-hap5p." such complexes do, in fact, represent protein interactions and should also be detected and reported.

 <dig>  proteins were frequently referred to by two synonyms separated by a slash, such as "gim1/yke <dig> "

 <dig>  in all but one case, the interactions were described in the same sentence, and thus resolving co-reference issues would add only marginally to the quality of the interaction detection. thus, the fact that two proteins occurred in the same abstract, but not in the same sentence was not a good metric for the number of relations we should be able to find.

 <dig>  no instances of negation were found.

 <dig>  a database query of verbs that lay between two proteins led to the small list shown in table  <dig>  we note that this list is virtually identical to that determined empirically by previous workers  <cit> .

accordingly, two additional annotators were written. one annotator recognized protein complexes: dimers and trimers, and the other recognized protein synonyms in the "slash notation" we illustrated in point  <dig> above. when the annotator found these synonyms, it only annotated one of the two mentions, to avoid skewing the mention statistics. all protein complexes were treated as reports of interactions and annotated as such.

we also annotated the verbs or their noun-equivalents in each sentence, that contained two or more different proteins.

evaluation of revised annotations
examination of protein interactions detected in a few documents showed that nearly all of the relations detected by our proximity algorithm actually existed in the document, whether tabulated by mips or not, and that of those our algorithm missed, nearly all were not discussed in the abstract at all.

study of a larger set of medline documents
with these encouraging preliminary results in hand, a study of a larger dataset was undertaken. it is recognized that the initial experiments were on the same data as the rules were developed on, and this second larger set is used to provide a more independent measurement of the accuracy of this approach. in the following experiments, no new protein interaction algorithms were developed, although we did introduce some further filtering to reduce spurious results. the dictionary of protein names and synonyms was the same one derived from mips tables. it is our assumption that this is a complete list, though if it is not, the precision and recall numbers would be slightly different.

the query "yeast protein" was submitted against our local indexing of medline documents through  <dig> and a list of the top  <dig>  documents was obtained. the mips protein interaction table was enhanced by one from stanley fields  <cit> . these documents were annotated as above using the same series of annotators. the same database tables were created from the document ids, terms, and the proteins found in each of them.

the initial results of this experiment returned  <dig> relations, but only  <dig>  agreed with the combined gold standard mips-fields table. these and the following results in this section are summarized in table  <dig>  considering the large number of abstracts examined, this small number of interactions indicates that the original data referred to by the mips table were a serendipitous set which referred specifically to protein-protein interactions. this larger dataset included a number of papers referring to genes which needed to be eliminated from consideration. modifying the annotator to exclude sentences containing the words "gene," "express," and "encode," improved the accuracy to 17%.

in this larger set of data, protein names may co-occur in more ways that our initial approach allowed for. to reduce the error rate in these experiments, the annotator was further modified to exclude sentences which did not contain one of the verbs in table  <dig>  or their nominalizations. this resulted in improving the accuracy to 21%.

to further explicate the reasons for the remaining 75% apparent false positives, each relation reported was studied in each abstract where it was detected and conservatively rated either true or false. of the  <dig> unmatched relations,  <dig> additional relations were discovered. while these relations were not in the combined mips-fields table, they were definitely reported in the abstracts. in all questionable cases, the opinion of a biologist was obtained. this leads to  <dig> out of  <dig>  relations being discovered correctly.

to further reduce the false positives, sentences containing any negation word  were also excluded from consideration, as were sentences containing the word "allele." it is possible that exclusion of sentences with "not" and the like will also exclude double negatives, but we found only one such case in the entire set of candidate abstracts. this improved the accuracy to  <dig> out of  <dig>  or 62%.

graphical study of secondary relations in the large dataset
we then undertook a study of the graphical relations between proteins, in a similar fashion to that described by jeong  <cit> . in this study, we looked at two networks, one of the "true" relations described by the mips-fields table and one described by the network of relations we discovered by text analytic methods. graph to contain only the nodes found in the experimental data.

in our experimental data, we found  <dig> interactions of which  <dig> were confirmed by the combined true relations table, while  <dig> were not, for a precision of 62%. these  <dig> interactions were among  <dig> proteins. however, our true relations table contained only  <dig> of these proteins. of the  <dig> interactions found by our approach,  <dig> involved one of the  <dig> proteins not part of the true relations table. if we consider only interactions over the  <dig> proteins common to both tables, we find that  <dig> of  <dig> match and  <dig> do not, for a precision of 70%.

results of the graphical study
in examining the experimental and true relations networks, we built a graph corresponding to each interaction found by our approach but not present in mips. we then compared the data to find out if relations which were not directly tabulated in the true relations graph but were found in the experimental data could be explained by indirect relations. for example, in figure  <dig>  there is no direct relationship between ypt <dig> and bet <dig> in the true relations network. however, our graphical study discovered such a relationship, and from examination of figure  <dig>  it is apparent that there is strong support for this relation. there are relations between ypt <dig> and sec <dig>  bet <dig> and sec <dig>  bet <dig> and mad <dig> and mad <dig> and sec <dig>  thus, there is a path of length  <dig>  and a path of length  <dig>  between ypt <dig> and bet <dig>  this lends considerable support for the relationship between ypt <dig> and bet <dig>  these 2-hop and 3-hop paths are illustrated in figure  <dig> using dotted and dashed lines.

if we then return to our database of documents and mined protein names, the document containing this relation is abstract  <dig>  and the supporting text for this relation is:

"we propose that bet <dig> modifies ypt <dig> and sec <dig> in an analogous manner."

thus, our graphical analysis method discovered an actual relation missed by our text mining system. in this case, it was missed because the verb "modifies" was not one of those we tabulated in table  <dig> 

formal description of algorithm
more formally, given a interaction between two proteins, p and q, we define a neighborhood graph, gn. we then analyze the cohesion of gn for each p and q and collect statistics on the cohesion, as described in  <cit>  .

the cohesion of a graph or subgraph is defined as the ratio of the number of edges present to the possible number of edges. in the case of a single node, n, in an undirected graph, if the degree  of n is d we define the neighborhood of n as the set of nodes including the endpoints of these d edges, and all edges whose endpoints are in this node set. say there are e such edges. the cohesion, c is then defined in equation .



in this paper, we are analyzing the cohesion of a subgraph defined over the union of the neighborhoods of two nodes, specifically p and q above. there are also three types of edges in this graph. there are thus many possible definitions of cohesion. for simplicity, we take the conservative approach of only considering 2- and 3-hop paths .

in the  <dig> protein interactions found by our method, but not in the combined true relations table,  <dig> are related by at least one 2-hop path,  <dig> are related by at least one 3-hop path and  <dig> are related by at least one 2-hop or 3-hop path.

in  <dig> of the  <dig> cases where  <dig> hop paths were present, more than one path was present, with the average being  <dig> , and similarly,  <dig> of the  <dig> occurrences of 3-hop paths were multiple occurrences, with the average being  <dig> . since the network contains  <dig>  possible pairs, the assumption that these paths support new interactions found by our method seems statistically persuasive. these results are summarized in table  <dig> 

validation of graphical computations
computation of all relations having 2-hop and 3-hop paths which do not have direct reported interactions gave  <dig> relations deduced from a combination of 2-hop and 3-hop paths and  <dig> relations deduced only from 3-hop paths. of the 2-hop path relations,  <dig>  of them were found to be true by careful re-examination of the text of the abstracts. this gives us a precision of 74%.

we were unable to discover any abstracts supporting the interactions predicted by the 3-hop relations. however, of the  <dig> predicted interactions,  <dig> had  <dig> or more total 2-hop or 3-hop bridges, and of these  <dig> were validated by consulting our abstract collection. we suggest that the remaining  <dig> merit further investigation.

while protein interactions may not be the only reason for this close co-occurrence, other reasons for these graphical relations may be of interest. for example, far <dig> and ste <dig> are related by  <dig> 2-hop bridge and  <dig> 3-hop bridges. these proteins are reported to be homologous  <cit> , that is having structural and functional similarity, and this may also be of significant interest.

estimation of recall
recall, of course, can only be approximated in such a large collection. in the  <dig>  document collection,  <dig> documents were returned as containing one or more of the computed interactions. in reading these documents to validate these interactions, we found only one interaction which was missed by the algorithm because it was referred to across  <dig> sentences and the co-reference was not resolved by this system.

it is difficult to devise a method for measuring recall when  <dig>  documents constitute the sample. we examined  <dig> randomly chose abstracts from this collection for description of any protein-protein interactions. since none of the  <dig> we selected happened to be members of the set of  <dig> described above, we were looking for additional un-found interactions. none were discovered. on this basis, the recall was effectively 100%.

since this seemed to be exceedingly optimistic, an experiment was devised which would return the most likely candidate documents where protein relations might have been missed. if we found many missed relations, the recall is reduced.

the method for finding protein interactions we have described above amounts to using a dictionary of yeast proteins names and their synonyms to find co-occurrences of two  such names within a single sentence. since this amounts to sentence parsing using a well-described tokenizer and parser, followed by simple string matching, and since by direct examination we found almost no cases where the statement of interactions spanned more than one sentence, it is extremely likely that we have found all such cases that exist within the entire  <dig>  document collection, and the documents that are returned represent all that actually exist. the recall measurement thus amounts to examining the documents after suitable filtering to find how many actually describe  protein interactions.

accordingly, we reduced the stringency of our filtering of sentences so that more candidate relations might be discovered. in this experiment, the verb filters  were excluded. this approach will return documents containing at least one sentence with two proteins which does not include the word "gene." the other exclusion terms in table  <dig> were not used. this resulted in  <dig> documents, of which  <dig> were additional to the original set of  <dig> 

these additional  <dig> abstracts were examined in detail for the description of any protein interactions anywhere in the abstract, and  <dig> such interactions were found. of these,  <dig> were discovered across sentence boundaries, requiring anaphora resolution and  <dig> more occurred in sentences containing the word "gene." this means that 118/ <dig> documents were correctly identified as having no relations, or only 12/ <dig> contained relations, resulting in a recall of at least  <dig> %. if we use all  <dig> abstracts, the recall is much higher . this gives us an f-measure of  <dig> .

rules used in finding protein interactions
this section summarizes the rules and techniques used in finding the protein interactions.

 <dig>  exclude any sentence containing the terms in table  <dig> 

 <dig>  recognize proteins from a dictionary of proteins and their synonyms and variant spellings. exclude all lowercase spellings, which usually represent mutations.

 <dig>  recognize protein complexes by hyphenation.

 <dig>  recognize protein synonyms when separated by a slash.

 <dig>  require any sentence with two or more proteins to contain one of the verbs in table  <dig> 

 <dig>  allow any sentence containing "form" and "complex" along with two or more proteins.

 <dig>  recognize secondary interactions based on those found by 2-hop and 3-hop connections in the primary table of correct interactions.

CONCLUSIONS
in a large set of  <dig>  abstracts, the primary task is filtering out sentences in documents which describe genes and other non-protein interactions. once this is done, 61% precision is possible, and if the graphical predictions of secondary interactions hold true, the precision is at least  <dig> . based on reading of the abstracts the recall is estimated to be 97%. the f measure is  <dig> , based on a precision of  <dig> , and is  <dig>  based on the precision of  <dig> .

these experiments result in respectable precision and considerably higher recall than previously reported methods and tend to indicate that a combination of statistical and linguistic methods  <cit>  can give better results than linguistic  methods alone.

finally, we note that there is apparently no "silver bullet" to improve detection of protein-protein relations. instead, the process is one of incremental improvement based on rules and filters of data. however, the set of rules we report here appear to have the highest f-measure yet reported.

