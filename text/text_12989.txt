BACKGROUND
amino acid replacement rate matrices represent the estimates of instantaneous substitution rates between amino acids. the rates simultaneously capture aspects of dna-level mutation, the genetic code and protein-level selection strength, which varies based on similarity in chemical and physical properties. for example, we usually observe a high substitution rate between lysine and arginine  and a low substitution rate between lysine and cysteine . ideally, the replacement rate matrix parameters are optimized against the data under study, but in practice information content in typical sequence alignments is insufficient to do so. instead, a small number of generic matrices are made available to researchers.

amino acid replacement rate matrices are essential for many protein analyses, including estimating pairwise distances between protein sequences, or reconstructing protein phylogenetic trees using maximum likelihood or bayesian frameworks <cit>  and references therein. amino acid replacement rate matrices can also be converted into score matrices for protein sequence alignment. roles and applications of amino acid replacement rate matrices were summarized by thorne <cit> .

a number of methods have been proposed to estimate the matrices from protein alignments since the time of dayhoff <cit> . these methods belong to either counting or maximum likelihood approaches. the counting methods are fast, but they are limited to only pairwise protein alignments and closely related amino acid sequences <cit> . the maximum likelihood methods have been designed to fully utilize the information contained in multiple protein alignments and the corresponding phylogenetic trees which must be estimated from the data. this assumes that the trees are correct, which can be ameliorated by a bayesian analysis over a set of plausible trees but this would increase an already large computational burden.

with the rapid rise in whole genome sequencing it is now increasingly common to have access to both large numbers of taxa and long concatenated sequence alignments. this creates the opportunity to estimate data-specific amino acid replacement matrices but also requires efficient computational methods because estimating amino acid replacement rate matrices from protein alignments by maximum likelihood methods is a complex and time-consuming process <cit>  and references therein.

recently, a fully automated maximum likelihood estimation procedure was proposed and used to estimate matrices from different data sets <cit> . it consists of two main steps: building maximum likelihood phylogenetic trees and estimating parameters based on the information contained in multiple protein alignments and the corresponding phylogenetic trees. building maximum likelihood trees is itself a difficult problem because the number of possible trees increases exponentially with the number of sequences in the alignment <cit> . a number of maximum likelihood tree search heuristics have been developed to reduce the computational burden; however, building maximum likelihood trees is still the most time consuming step in the estimation process. for example, in this study it took 98%  when estimating the amino acid replacement rate matrix from  <dig> large alignments in the hssp  database <cit> .

in this paper, we propose a new maximum likelihood estimation procedure, fastmg, to work with large data sets. the key idea is to split large alignments into multiple non-overlapping sub-alignments with fewer sequences  in order to substantially reduce the computational burden of building maximum likelihood trees. the matrices are then estimated from the joint maximum likelihood analysis of the smaller sub-alignments instead of from the large original alignments.

a preliminary study showed that the splitting strategy significantly decreased the running time of the estimation procedure <cit> . here we demonstrate that a naïve random splitting method compromises the quality of the results. in contrast, our “tree-based splitting method” selects sub-trees that retain enough information to estimate accurate amino acid replacement rates. experiments with different large data sets showed that the fastmg procedure yields similar quality matrices in much less time than the standard estimation procedure.

RESULTS
we assessed the performance of the fastmg procedure on three large data sets: hssp data set <cit> , pfam data set <cit> , and our concatenated protein alignment of mitochondrial proteins from  <dig> mammalian species with  <dig> amino acid sites. the fastmg procedure was examined with the random splitting algorithm, the tree-based splitting algorithm, and different k values targeting sub-alignment sizes of  <dig>   <dig>   <dig>   <dig>  and  <dig> sequences. all matrices were estimated on a personal computer . the phyml software version  <dig>  <cit>  was used to build maximum likelihood trees from alignments with options:  <dig> gamma categories model, no invariant sites, no bootstrap, spr tree improvement, and jtt model. the xrate software version  <dig>  <cit>  was used to estimate model parameters using information in the alignments and corresponding phylogenetic trees. let us denote:

fastmgr: the fastmg estimation procedure with the random splitting algorithm.

fastmgt: the fastmg estimation procedure with the tree-based splitting algorithm.

  



: replacement rate matrix estimated from data set m using the fastmgr procedure and threshold k .

  



: replacement rate matrix estimated from data set m using the fastmgt procedure and threshold k .

ms: replacement rate matrix estimated from data set m using the standard maximum likelihood estimation procedure .



we compared matrices in terms of both quality and running time. to avoid model bias due to over-fitting, each data set consisted of two alignment sets: the training alignment set and the testing alignment set. the matrices were estimated from alignments in the training set and subsequently used to build maximum likelihood trees for alignments in the testing set. likelihood scores for test set alignments were used to compare the quality of different matrices as used in other studies <cit> . moreover, we used the kishino-hasegawa test <cit>  to assess the statistical significance of the difference between two matrices as used in previous studies <cit> .

hssp data set
we selected  <dig> alignments from the hssp database to assess the performance of estimation procedures. the  <dig> alignments with the largest number of sequences were used as the training alignment set for estimating matrices while the other  <dig> alignments were used as the testing alignment set. the  <dig> training alignments contained between  <dig> and  <dig> sequences , for a total of  <dig> sequences. the  <dig> testing alignments contained between  <dig> and  <dig> sequences , for a total of  <dig> sequences.

we examined the correlation between matrices estimated from the standard and the fastmg procedures. table  <dig> shows high correlations between the  <dig> exchangeability coefficients of these matrices. as expected, the correlations increase with the increase of k. the results also show that tree-based splitting gives exchangeability parameters that are closer to the standard procedure. the opposite is true for the  <dig> frequency parameters of the matrices, likely because sub-alignments created by random splitting tend to represent the residue composition of the entire data set, whereas tree-based splitting gives sub-alignments that reflect the residue composition of individual clades. another reason is likely because the random splitting algorithm selects taxa that are more distantly related and for which there was more time for the substitution process to reach equilibrium.table  <dig> 
the pearson correlations between the hssp
s
matrix and other matrices estimated by the fastmg procedure














the more important impact on tree likelihood values in pairwise comparisons between hssps and other matrices estimated by fastmgr and fastmgt procedures are represented in table  <dig>  the matrices estimated from the fastmgr procedure were not as good as the hssps matrix for any k value. in contrast, the fastmgt procedure generated high quality matrices and fastmgt with k ≥  <dig> was at least as good as the standard estimation procedure.table  <dig> 
pairwise comparisons between hssp
s
and other matrices estimated from the fastmg procedure


hssps

hssps

hssps

hssps

hssps

hssps

hssps

hssps

hssps

hssps

loglk: the log likelihood difference per site between trees inferred using m <dig> and m2; a positive  value means m <dig> is better  than m <dig>  m1 > m2: the number of alignments where m <dig> results in better likelihood value than m2; #tp: the number of alignments where tree topologies inferred using m <dig> and m <dig> are different. #m1 > m <dig> : the number of alignments where the kishino-hasegawa test indicates that m <dig> is significantly better than m <dig>  #m1 < m <dig> : the same as #m1 > m <dig>  but now m <dig> is significantly better than m <dig> 



table  <dig> shows the running time of the standard estimation procedure and the fastmg procedure with different splitting algorithms and k values for the hssp data set. the estimation time of the fastmg procedure increased linearly with the increase of k . this was an order of magnitude faster than the  <dig>  hours needed to estimate hssps. interestingly, fastmgt was noticeably and consistently faster than fastmgr. the difference is not as large but suggests faster convergence for tree-based splitting.table  <dig> 
the running time of the standard estimation procedure and the fastmg procedure with different splitting algorithms and
k
values for the hssp data set












hssps


pfam data set
we also examined different estimation procedures on alignments from the pfam database. the training alignment set contained the  <dig> largest alignments from the pfam database with in total  <dig> sequences and a range of  <dig> to  <dig> sequences per alignment . the testing alignment set consisted of  <dig> other alignments with in total  <dig> sequences and a range of  <dig> to  <dig> sequences per alignment . note that the pfam alignments tended to contain fewer sequences than the hssp alignments.

we observed similar values and trends as for the hssp data set, with very high correlations between the pfams matrix and matrices estimated from the fastmg procedure .table  <dig> 
the pearson correlations between the pfam
s
matrix and other matrices estimated from the fastmg procedure














the pairwise comparisons of tree likelihood values between the pfams matrix and matrices estimated from the fastmg procedure are represented in table  <dig>  again, we observed similar trends as for the hssp data set. the quality of matrices increased with an increase of k, however, fastmgr matrices were never as good as the pfams matrix. in contrast, fastmgt produced matrices that were in a majority of cases slightly better than the standard estimation procedure for all k values. for example, the matrix was better than the pfams matrix on  <dig> out of  <dig> testing alignments. moreover, the kishino-hasegawa test showed that the matrix was significantly better than the pfams matrix on  <dig> testing alignments. the opposite was true only  <dig> times.table  <dig> 
pairwise comparisons between the pfam
s
matrix and other matrices estimated by the fastmg procedure


pfams

pfams

pfams

pfams

pfams

pfams

pfams

pfams

pfams

pfams

loglk: the log likelihood difference per site between trees inferred using m <dig> and m2; a positive  value means m <dig> is better  than m <dig>  m1 > m2: the number of alignments where m <dig> results in better likelihood value than m2; #tp: the number of alignments where tree topologies inferred using m <dig> and m <dig> are different. #m1 > m <dig> : the number of alignments where the kishino-hasegawa test indicates that m <dig> is significantly better than m <dig>  #m2 > m <dig> : the same as #m1 > m <dig>  but now m <dig> is significantly better than m <dig> 



the running time of the standard estimation procedure and the fastmg procedure with different splitting algorithms and k values for the pfam data set are represented in table  <dig>  we observed similar running time patterns as for the hssp data set, however, the magnitude of the speed gain was less in this case  because of the typically lower number of sequences in the pfam alignments.table  <dig> 
the running time of the standard estimation procedure and the fastmg procedure with different splitting algorithms and
k
values for the pfam data set












pfams


mammalian protein alignment
our mammalian protein alignment  consists of the concatenated  <dig> mitochondrial proteins  of  <dig> mammalian species and  <dig> amino acid sites. the mean and max pairwise distances between sequences were  <dig>  and  <dig> , respectively. because it is a single alignment, we used 10-fold cross validation to examine the performance of different estimation procedures <cit> . in particular, the  <dig> amino acid sites were randomly distributed across  <dig> non-overlapping partitions p <dig>  …, p <dig> each consisting of  <dig> or  <dig> sites. the validation was repeated  <dig> times. let vt  denote the tth validation .

table  <dig> shows the likelihood comparisons between the mams matrix and the matrices estimated from the fastmg procedure at the  <dig> validations. again, the matrices estimated from the fastmgr procedure were never as good as the mams matrix, while the matrices estimated by fastmgt with k ≥  <dig> were similar or slightly better than the mams matrix. for example, fastmgt with k =  <dig> gave slightly better likelihood scores than the standard estimation procedure in all  <dig> validations and significantly better scores in  <dig> validations.table  <dig> 
the log likelihood per site comparisons between the mam
s
matrix and matrices estimated by the fastmg procedure







loglk per site: average log-likelihood per site difference between mams and the other matrices, positive/negative values indicate that the mams matrix was better/worse than the other matrices. #significantly better: number of tests where mams is significantly better than the mamr/mamt matrix . #significantly worse: number of tests where mams is significantly worse than the mamr/mamt matrix .



we also examined the performance of the original mtmam matrix <cit>  and matrices estimated from the fastmg procedure. table  <dig> shows that the matrices estimated by fastmgt were significantly better than the original mtmam for all  <dig> validations.table  <dig> 
the log likelihood per site comparisons between the original mtmam matrix and matrices estimated by the fastmg procedure







loglk per site: average log-likelihood per site difference between the original mtmam and the other matrix, positive/negative values indicate that the original mtmam matrix was better/worse than the other matrix. #significantly better: number of tests where the original mtmam is significantly better than the mamr/mamt matrix . #significantly worse: number of tests where the original mtmam is significantly worse than the mamr/mamt matrix .



the estimation time of different matrices is presented in table  <dig>  for this alignment with  <dig> species the fastmg procedure was an order of magnitude faster than the standard estimation procedure . it also repeats the trend that the tree-splitting method is both faster and yields more accurate matrices.table  <dig> 
the running time  of different estimation procedures









trends and special considerations
at the start of our studies we anticipated that alignment splitting would result in only minimal deterioration of matrix quality. instead we observed, on balance, a small improvement in the performance of fastmgt matrices compared to those obtained without splitting. although the effect is small it is consistent and suggests that a systematic effect is at play. although further studies are needed to better understand these effects, it is plausible that the specific elimination of deeper and often less well defined branches contributes to the effect. in addition, tree-based splitting results in alignments of more closely related sequences with lower risk of sequence alignment errors.

there were a number of alignments where the matrices inferred from the standard and fastmgt procedures resulted in different tree topologies. this occurred in about 50-75% of cases for hssp alignments and 10-25% of cases for the pfam alignment . this different rate of occurrences is expected because the hssp alignments have more sequences and are therefore more prone to topology differences. we considered the possibility that achieving a significantly better likelihood score was due to finding a different tree topology. however, in cases where the likelihood score is significantly better only a minority of alignments has a different tree topology.

our three test cases all include a considerable amount of sequence divergence and all show that tree-splitting is superior to random splitting. a preliminary study on closely related influenza sequences showed that tree-splitting is still optimal <cit> . however, in extreme cases the number of observed substitutions upon tree-splitting may become too small to be informative. in such a case random splitting may be preferred.

another consideration is that our current fastmg procedure uses neighbor-joining to create the tree needed for the tree-based splitting algorithm. this scales well for alignments with hundreds or even thousands of sequences, but becomes inefficient for extremely large alignments. the performance of the fastmg procedure for such huge alignments will likely benefit from faster alignment splitting methods <cit>  and faster tree building methods  and this deserves further study if such cases become more common.

CONCLUSIONS
amino acid replacement matrices are essential for many statistical methods to analyze protein sequences. maximum likelihood methods typically generate the best replacement matrices because they can fully utilize information in the multiple protein alignments. however, for this application maximum likelihood analysis is complex and computationally expensive. here we propose a modified maximum likelihood procedure to estimate amino acid replacement rate matrices from large data sets. the key component of the modified estimation procedure is the splitting algorithm that divides large alignments into multiple sub-alignments with fewer sequences that are subsequently used to estimate matrices. the extensive experiments showed that the fastmgt procedure performed well with large data sets and reduces the running time as function of the number of sequences from approximately quadratic to linear, as we expect based on the time complexity of tree inference . fastmgt with k ≥  <dig> was about an order of magnitude faster than the standard estimation procedure while it did not reduce the quality of estimated matrices.

experiments strongly suggest that k =  <dig> is a good choice for the fastmgt estimation procedure. even the analysis of the  <dig> largest alignments of the hssp database took less than a day with fastmgt and k =  <dig> on a typical desktop computer. thus, our method now enables researchers to avoid generic pre-calculated matrices and instead estimate optimal amino acid replacement matrices for their particular needs from large data sets on their personal computers.

