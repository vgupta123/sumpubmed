BACKGROUND
in the current pharmaceutic development new drugs are often found by screening a library of small molecular entities  against so-called 'blockbuster targets' which are supposed to play a relevant role in the onset of a certain disease. the development of drugs for new targets is in most cases less interesting for a pharmaceutical company due to the fact that the research is more expensive, they fail pre-clinical trials more often and are in most cases financially less successful  <cit> . in order to increase the productivity of 'research and development'  when focussing on novel targets a possible way is to identify candidates which are likely to fail trials earlier in the drug development process  <cit> .

one problem that drugs against novel targets can cause is their possible lack of efficacy. during the development, possible targets are validated via knock-out experiments which work in a totally different way than medication with competitive inhibitors against the corresponding enzymes. while in the first case the flux through a certain pathway can be completely shut down, in the second case it will only be partially decreased which the system can overcome, e.g. by substrate accumulation or feedback regulation. therefore quantitative modelling should be incorporated into drug research.

a systematic approach to the identification of possible drug targets in a reaction network renders possible with the established tools and methods used in systems biology. over the last years more and more mathematical models for chemical reaction networks have proven to be successful in predicting an microorganism's response to changes in its environment and to perturbations in its gene expression  <cit> . these models are being collected in steadily growing databases like biomodels  <cit>  or jws online  <cit> . a promising approach to a systematic drug design is to simulate possible inhibitors to any reaction in a given network and to quantify their effects on a given observable. this observable can be defined as any inner variable of the system, e.g. the concentration of a substance or the flux through a certain reaction which is altered in the pathological state. for a more complex analysis this observable can also be defined as any function of these variables. from the time course of the observable, several characteristics can be extracted for later comparison. these include the steady state values, which are interesting for models of metabolic pathways, and several characteristics, which are relevant to signalling cascade models, namely the integrated concentration, the characteristic time, the signal duration, and the signal amplitude as described in  <cit> . given this information from several simulations using different inhibition targets, types, and inhibitor concentrations, one can select favourable modification scenarios. "favourable" means here that in a certain scenario a given observable reaches a desired value while the system is perturbed by few inhibitors in small concentrations.

such a kind of analysis has already been applied manually to different kinds of small example models  <cit>  and larger, biologically relevant models  <cit> .

other approaches to determine modified enzyme activities in order to achieve a certain change in a systems behaviour already exist , but none of them exhaustively searches the space of possible drug combinations, tries to minimise the amount of used inhibitor, or explicitly models different types of modification kinetics. a broad overview on similar methods can be found in  <cit> .

implementation
in order to simplify the error prone process of inhibiting or activating  single reactions and investigating the results in a given ode model, we have developed a platform independent tool written in python  <cit>  which performs this analysis automatically. the tool called tide  works in three steps . first, it imports an ode model given in the systems biology markup language  format  <cit>  making use of libsbml  <cit> . the reaction kinetics in the imported model are identified by comparing their formulas to kinetic formulas from an internal database. this database is based on kinetics from the systems biology ontology   <cit>  and was later extended manually. second, it replaces individual reaction kinetics or combinations thereof by corresponding modifier kinetics and simulates the altered models for different modifier concentrations. finally, it systematically compares the results of these simulations in order to determine single or multiple optimal drug targets.

in the following, these three steps of the tool's functionality will be explained.

identification of reaction kinetics
starting from an sbml model, tide is supposed to simulate the effects of different modifications of single reactions and combinations thereof. therefore, the first step of the tool is the identification of the present kinetic formulas for each reaction by numerically comparing them to known kinetic types collected in an internal database. the identity of two formulas is judged by testing all possible parameter matchings of those formulas, repeatedly replacing the parameters by random values, and checking whether the results are similar except for numerical inaccuracy. using the information about the present kinetics, the database can be searched for known modifier formulas. the identification of the kinetic parameters makes it possible to automatically replace a kinetic by a formula representing a certain kind of modification mechanism acting on the corresponding enzyme.

replacing reaction kinetics by corresponding modifications
then, a set of new models is created in which systematically every reaction is replaced by a modification. during this step up to five new models per reaction can be created since four types of modifications are known to the database. these types are competitive, uncompetitive, and noncompetitive inhibition and nonessential activation. additionally, a competitive inhibition for cofactors is available.

unknown formulas  with reaction velocity vi which is dependent on substance concentrations s and parameters p) will automatically be added to the internal database. also a standard noncompetitive inhibition  and a standard nonessential activation () with activator concentration a and its dissociation constant ka) will be created. because of that the number of new models created during this step will be at least twice as large as the number of reactions included in the original model.

in a step including user interaction, also different competitive and uncompetitive inhibitions can be included into the internal database. the user interaction involves the identification of km values for substrates of reactions which are supposed to be inhibited. for the selected km values new competitive inhibitions are created by multiplying the original km by a factor . uncompetitive inhibitions are created similarly by dividing the km and vmax values by the same factor. for sbml models including complex kinetics this step should be taken as the database can not cover all possible types of kinetic formulas.

tide can also be used to check combinations of modifiers. these modifications do not need to be of the same type, but they have to affect different reactions.

comparing results of different modifications
in order to examine the effects of different modifications the user has to define the objective function which is to be maximized or minimized. this function can be an arbitrary formula containing substance concentrations or fluxes or a combination of them if the steady values are of interest . in case that signalling characteristics should be evaluated the objective function can in the current implementation only be a single compound concentration.

the effects of different inhibitor concentrations can be evaluated by either testing several distinct effective concentrations  in separate simulations or one simulation of a continuous titration of the inhibitor. optionally these titrations can also be performed until the objective function has reached a certain value.

after the simulations of the new models have been performed making use of either the scipy  <cit>  library, the sbml ode solver library  <cit> , or copasi  <cit> , the absolute differences between the original value of the objective function and its new values in the modification scenarios are calculated and displayed.

RESULTS
we analysed four different models with the tide tool  as discussed in the following. the first two models were simple metabolic pathways including a branch, the third was a simple signalling cascade, and the fourth one was a biologically relevant example of aerobic metabolism in trypanosoma brucei  <cit> .

prebranch model
the first two models  were extensions of a simple linear reaction chain by a small pathway bringing "biomass" either towards or away from the center of the chain. by this extension the pathway is divided into three subpathways. in the models we chose the concentration of species_ <dig> as an objective function for minimization. with these models we did not only want to infer optimal modification targets in branched systems but also test whether it was possible  to target enzymes in a certain pathway when a substance which is to be affected is in a different one. the result of the search for optimal drug targets depended on the parameters in the model. nevertheless, in the scope of this article only the results for the most likely parameter set  can be discussed in detail.

as shown in the upper part of figure  <dig>  inhibiting a single reaction  in the same pathway as species_ <dig> was more effective than inhibiting two reactions anywhere else. because of the large equilibrium constants, which make "early" reactions in a linear pathway better targets, also combined inhibitions of reactions  <dig> and  <dig> or  <dig> and  <dig> have a quite strong effect. an inhibition of reactions  <dig> and  <dig> had in this case a larger effect than inhibiting only reaction  <dig>  still this combined inhibition in distant pathways was only slightly more advantageous than a single inhibition in the same pathway as the observed species. to the authors' surprise, at equilibrium constants equal to one  it seemed to be quite ineffective to use modifications in other pathways in order to alter the concentration of a substance in a certain one, even if all reactions leading towards the observed substance were targeted. nevertheless, a metabolic pathway in which the equilibrium constants are not bigger than one is very unlikely because it would not degrade the initial substance without the supply of external energy.

postbranch model
the postbranch model  was a slight modification of the previous model in which the third pathway was not directed to carry biomass into the center of the model but away from it. here the idea was to study whether this third pathway could be activated in order to compete for biomass from the pathway including species_ <dig> 

as shown in figure  <dig>  in this model it was most effective to inhibit reactions  <dig> and  <dig>  because of the large equilibrium constants the combination of inhibitions at reactions  <dig> and  <dig>  which are optimal targets at constants equal to one , was a little less effective while inhibiting reaction  <dig> and activating reaction  <dig> was a possible alternative. so, an activation of a competing pathway could not outperform other inhibitions but it made a good addition to them.

simple signalling cascade
the third model was a signalling cascade . here, we observed the effects of single modifications of the phosphorylation and dephosphorylation steps on the last activated kinase. since the active receptor was constantly degraded, the steady state concentration of the last activated kinase was always zero. therefore, we investigated more suitable characteristics of the dynamic behaviour . the integrated concentration, the characteristic time, the signal amplitude and the duration were influenced positively by the phosphorylation reactions, which means that an activation of the reaction increased the value of the signal characteristics. in the case of the dephosphorylation reactions the effect was adverse. in most cases the first reactions had a larger effect than the latter ones although some characteristics seemed to differ from that rule, e.g. the signal amplitude which could not be increased beyond a certain value in this model.

the values in the table depict the relative changes of the characteristics after noncompetitive inhibition of a certain reaction by 50% compared to the reference state.

model of trypanosoma glycolysis
finally, in order to demonstrate the applicability of our tool, we investigated possible modification patterns in an updated model of the aerobic metabolism in trypanosoma brucei  <cit>  . for an older version of this model a similar analysis has already been performed manually  <cit> . the updated model contains new and more detailed information on enzyme kinetics under more realistic conditions and therefore these new results could lead to more promising drug targets against sleeping sickness. we have chosen the steady state flux through the upper glycolysis as the variable to be minimized by different modifications.

since the data produced by tide was too extensive to display in paperform, only specific results could be shown in figure  <dig> and tables  <dig> and  <dig>  the favourability of inhibition target and kinetic type over others depended on the degree to which the flux through the glycolysis should be reduced in the parasite . therefore, we focussed on inhibitor concentrations decreasing the flux by 50% which was supposed to be sufficient to kill the parasite. as proposed earlier  <cit> , the most promising target was the glucose transporter . the best targets inside the glycolysis to achieve this goal were the phosphoglycerate mutase , the glyceraldehyde- <dig> phosphate dehydrogenase , the glycorol-3-phosphate dehydrogenase , the enolase , and the fructose bisphosphate aldolase  in this order. as depicted in table  <dig>  also in this group the quality of a target depended on the type of inhibition. in the case that only competitive inhibitors would be available the gapdh made an equally potent target as the gt. earlier results favoured the targets ald, gapdh, phosphoglycerate kinase , and gpdh in this order besides the gt. these findings do not differ that much from the current results except for the pgk. this difference can be explained by different enzyme kinetics, the fact that eno was not included as a single reaction in the old model, and a slightly different analysis. 

another topic we wanted to investigate were synergisms and antagonisms of dual inhibitions in this model. the strongest of them are shown in table  <dig>  as already known, a strong synergism exists between the glycerol  <dig> phosphate oxidase  and the glycerol kinase  but also other combinations yielded interesting results. a competitive inhibition of the triosephosphate isomerase gave a strong synergism together with a competitive inhibition for the cofactors for the phosphofructokinase , with inhibitions of gk, and with an activation of gpo. strong antagonistic effects occurred between an activation of the hexokinase or the glucose transporter and competitive  inhibitions of the phosphoglycerate kinase and pfk. the agreement of these results with the available literature and interesting new findings showed the  validity and utility of our tool. 

shown are the concentrations required to reduce the flux through the upper glycolysis by 50% for different inhibition types and targets.

numerical values are the relative flux reductions in   resulting from a modification at an effective concentration of  <dig>  the abbreviations stand for the targets , glycerol kinase , phosphofructokinase , triosephosphate isomerase , phosphoglycerate kinase , and hexokinase ) and the modification types , noncompetitive , uncompetitive , competitive for cofactors , and activation ).

CONCLUSIONS
we have introduced an algorithm to systematically test the effect of modifications or modifier combinations depending their target and type as well as tide, an implementation working on ode models in the sbml format. this process can be understood as an extension of metabolic control analysis to multiple and strong perturbations in an ode model. although tide seems a bit difficult to use in the first place needing a reliable ode model, being a command line tool, and having a limited kinetic database the tool still has many advantages. since tide is not platform dependend it can be run on any kind of server making it possible to analyse even large models, due to the extendible kinetic database it can be applied to any ode model, and because of the flexible objective function it can be used for many different purposes. furthermore, we have tested our tool with a new version of the glycolysis in trypanosoma brucei. our results are except for some explainable changes in good agreement with older findings proving the applicability of tide.

given a reliable ode model and the information our tool provides, the process of determining possible drugs is more directed into efficacy of the candidates in pre-clinical studies. inclusion of this analysis will increase the probability of a candidate to become a potent drug, and decrease the cost of the development of 'new target' drugs. this fact will hopefully draw the attention of the pharmaceutical industry towards the results produced by systems biology. since this research area is still growing more and more ode models, which are a necessary input to our method, will become available.

in the future we plan to extend our tool to handle constraints which have to be fulfilled during simulation. the idea behind this is that certain modifications and effective modifier concentrations could lead to the death of the simulated organism . such lethal modifications should be considered in order to identify possible side effects of the potential drug.

availability and requirements
• project name: tide

• project home page: 

• operating systems: cross platform

• programming language: python, c

• other requirements: python  <dig>  or higher, scipy  <dig>  or higher, numpy  <dig>  or higher, pyx  <dig>  or higher, semanticsbml  <dig>  or higher, libsbml  <dig> 

• license: gnu gpl

• any restrictions to use by non-academics: none

furthermore, we have attached a walkthrough for our tool , its source code , and a windows installer for the required tools and libraries  to the article.

authors' contributions
ms wrote the tool, conducted the computational experiments, and drafted the manuscript. bmb participated in the design of the tool. ek designed the tool and the numerical experiments and helped to draft the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
walkthrough. shows how the tool is used from the command line.

click here for file

 additional file 2
tide- <dig> . <dig> source code. contains the packed python source code of our tool.

click here for file

 additional file 3
tide- <dig> . <dig> prerequisites installer. a windows installer for all programs and libraries required by tide.

click here for file

 acknowledgements
ms gratefully acknowledges funding and support from the international max planck research school for computational biology and scientific computing, the german research foundation , and the marie curie est project "systems biology" . the work of bmb was funded by nwo vernieuwingsimpuls and ek is supported by the eu and unicellsys . the funders had no role in study design, data collection, analysis, and interpretation, and decision to submit the manuscript for publication.
