BACKGROUND
rna-seq  <cit>  and other forms of gene expression profiling such as cage  <cit>  are widely used for measuring rna abundance profiles of various primary cells and cell lines  <cit> . by comparing the transcript abundance between two states, genes with statistically significant differences in expression levels can be identified  <cit> . in addition to large-scale, landscape-type analysis of such differentially expressed genes, often leading to long lists of gene ontology  <cit>  terms, it is often desired to perform an interactive visual analysis of the results, focusing on comparatively few genes of interest, heavily dependent on the problem domain. while domain experts could perform such an analysis using spreadsheet software, scripting languages or statistical software such as r  <cit>  and ggobi  <cit> , such an approach often requires implementing custom algorithms. other systems are embedded within large frameworks  <cit>  which necessitates the user to learn the system first, do not allow the user to upload custom data or are closed source  <cit> .

experienced bioinformaticians are familiar with existing gene expression profiling tools and, in a fast paced research environment, may perform this analysis often, quickly and routinely using these existing tools. however, sharing the results of dge analysis with collaborators, including biologists and other researchers that may not be familiar with de analysis tools, as flat files or static images has limited usability.

against this background, we saw a need for a software that enables interactive visual analysis of dge with a strong emphasis on ease of use and ease of deployment, which meets user expectations to a modern web application. to address this need, we have developed deiva , a spa to interactively identify and locate genes in a hexagonal binning  density or scatter plot of dge statistical test results, typically from a deseq <dig>  <cit>  or edger  <cit>  analysis. in addition to identifying and locating genes, deiva allows visitors to download associated data and generated vector images. by providing domain experts  a means to quickly perform lookups on a differential gene expression test, deiva can be of use to bioinformaticians who want to share their results and at the same time make them accessible.

deiva can easily be deployed by cloning a git repository and adding custom datasets, then serving the spa through any web server. users can also try out the system through a live instance of deiva, including import and visualization of their own datasets  <cit> , containing dge statistical test results from kratz  <dig>  <cit> . standalone desktop applications for various platforms are also available with each release.

implementation
interface
figure  <dig> shows a view of the deiva interface. the user may select a pre-loaded dge statistical test result from the dataset dropdown  or drag and drop the user’s own dataset into the visualization area. a density plot of log <dig> fold change vs. average expression is shown . below the visualization a table of all expression data is displayed . highlighting a region in the visualization limits the features shown in the table to those within that region. zooming allows easier interaction in crowded regions of the plot.fig.  <dig> deiva interface. a data set selector, symbol locator, and highlight filters. b the density plot on a field of log <dig> fc vs log <dig> basemean for a dge statistical test result. symbols selected in the symbol locator ) are shown as points with matching colors. in this example comparing samples highly enriched for rna attached to ribosomes of purkinje neurons  with samples of unspecific rna in the same brain region . locating a set of already known markers for purkinje neurons immediately confirms that the markers are specifically enriched. hexagonal bins are colored red based on the fraction of features within that region that pass the cut-off filters; currently set at a log <dig> fdr ≤ − <dig>  at any fold-change. c sortable table of expression values for the region selected in the density plot ). twelve highly overrepresented genes are selected  in the plot and their information is reflected in this table




a user can locate and highlight single or multiple symbols of interest, by typing them into the locate symbol box, selecting them from suggested matches, or by pasting lists of symbols. such symbols of interest could include genes with expected behavior of fold change or marker genes corresponding to the compared states. in this way the user might see at one glance whether an experiment confirms expectations or needs to be examined in more detail.

to see the effect of more relaxed or stringent criteria for calling a feature differentially expressed, the user can adjust the absolute log <dig> fold change, false discovery rate  and log <dig> basemean cutoff filters using sliders. features passing these filters will be indicated in red on the plot and the number of up- and down-regulated features will be displayed below the filters.

at any time, the user can download the raw data or the current visualization as publication quality vector graphic in svg format.

input file formats and deployment
deiva accepts input files in tab or comma-separated ascii describing the result of a dge statistical test. any algorithm can be used to generate an input file as long as it is possible to export average abundance, log <dig> fold change, and unique feature names. an optional column “symbol” makes it possible to specify gene symbols independent of the features in which gene expression has been measured . this accommodates scenarios where one gene may be associated with more than one feature during the dge test. we anticipate that deiva will mostly be used with input generated by deseq <dig>  <cit>  and edger  <cit> , and deiva accepts input files that can be directly written from these r packages. detailed instructions on preparing files for input are part of the deiva documentation.

deiva is an open source spa, not a centralized server application, it is therefore easy to deploy multiple instances each with datasets ready to use directly or to share with collaborators. to deploy a custom instance of deiva, a developer may clone the source, add the desired dge statistical test results, and make the spa accessible through any web server. deiva was developed using project χ, a modular open-source toolkit for building web and cross platform desktop data visualization applications. project χ utilizes the angularjs javascript framework, the d3js visualization library  <cit> , and various node.js development tools. the resulting application is compatible with all modern web browsers  and does not require any specific browser or server dependencies.

RESULTS
we have tested deiva with input files ranging from ~ <dig>  to ~ <dig>  features with various browsers and operating systems, and find it responsive at these typical file sizes. by default, the visualization will display a hexbin density plot of the differentially expressed values. the user may also switch to a scatter plot view. in general, the density plot has better performance and will result in a more responsive user experience, while the scatter plot displays full detail.

all processing and visualization of the data occurs within the web browser or desktop application. when using a web server, the server is only responsible for sending the spa code and the data for experiments that are pre-loaded in the given deiva instance. if other data is visualized by a user using the interface, the users data is not sent to any server but stays on the client side. the fact that deiva is a client-side spa has several implications:deiva can be expected to scale to virtually any number of users and datasets.

the fact that data provided by the user is not uploaded to a host server adds to the security of the system, which is important in the context of sensitive data, such as expression profiling of human patient samples.

performance will vary depending on the user's hardware and software combination. we find deiva responsive while providing several hundred datasets with over  <dig>  features in each dataset. for datasets with considerably more features, server-based systems can be preferable, if the rendering of the visualization is done server-side.




comparison of deiva with related software
there are other systems with varying scope and functionality available for the exploration and analysis of dge statistical test results, most notably visrseq  <cit> , oasis  <cit>  and degust  <cit> . we compare deiva directly with these systems in a feature matrix . the following features are tabulated:table  <dig> summary of competing tools


anot specified


bfor analysis back-end degust requires r, python, node, and glasgow haskell compiler


crequires upload to server or custom deployment with analysis backend


ddeiva can run on any http server including webdav, node http server, python http server, apache

Δ state of the art

o feature present

x feature absent



locate: includes functionality to visually locate the position of the features of at least one symbol.


identify: includes a functionality to identify at least one feature, or a group of features, on the plot.


ma-plot: can render the dge statistical test result as a ma-plot .


volcano plot: can render the dge statistical test result as a volcano plot .


web-based: yes if the system is a web-based application, no if it is a client side application.


users data: the user can visualize their own datasets.


foss license: the system is available under a free and open source software license; the license is listed.


dependencies: listing of browser, development, and server dependencies.




we also examined genepattern  <dig>   <cit> . however, the authors were unable to reproduce the volcano plots as described in the documentation  <cit>  using the genepattern public servers  <cit> .

another software in this context is icanplot  <cit> , a generic library for generating interactive canvas based scatter plots. canvas based scatter plots generated by icanplot provide excellent performance compared to svg based scatter plots generated using d <dig>  <cit>  , however, icanplot generated plots lack some functionality we felt necessary for deiva. for example point-by-point inspection of features, high-contrast color highlighting of features, and download of vectorized images. additionally, icanplot has no ability to generate density plots as is the default in deiva. it may be beneficial to implement some level of canvas based rendering in deiva, however, this should be done without sacrificing deiva's current functionality.

CONCLUSIONS
the feature matrix illustrates that none of the other comparable systems available has the combination of design decisions of deiva: a functionality to both locate as well as identify features in the visualization, emphasis on ease-of-use and ease-of-deployment, permissive free software license, no specific client or server dependencies, and the possibility to extend and integrate it with other systems.

availability and requirements

project name: deiva

project home page: https://github.com/hypercubed/deiva


archived version:  <dig> . <dig> 

operating system: platform independent

programming language: javascript

license: mit




abbreviations
deivadifferential expression interactive visual analysis

dgedifferential gene expression

fossfree and open source software

hexbinhexagonal binning

spasingle-page application

