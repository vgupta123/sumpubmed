BACKGROUND
numerous genome-sequencing projects have caused a rapid growth of the protein databases. in contrast to the pre-genomic era, when the selection of sequences was highly biased towards known and characterized genes, the systematic exploration of genomes now allows to assign more and precise functional properties in the majority of cases. however, manual annotation of sequences is laborious and expensive. thus, there is a strong interest in developing reliable methods for the automatic functional classification of genome sequences employing evolutionary sequences as reflected in using sequence homology to predict functional properties. the identification of protein families, defined as set of proteins with significant sequence similarity encoding for at least related but often identical function between members, is a very important subtask to achieve this fundamental goal. indeed, the fact that proteins with high sequence similarity share a common evolutionary history is accepted as the basis for functional assignment  <cit> .

among the different methods proposed to organize the sequence space into protein families, several approaches based on clustering using sequence similarity scores were successfully established . however, the multi-domain composition of proteins, as well as the presence of promiscuous domains can influence the accuracy of such methods. recently, an efficient algorithm for large-scale detection of protein families based on the markov cluster algorithm, tribe-mcl, was proposed  <cit> . this algorithm simulates random walks within a graph by iterative alternation of two operators called expansion  and inflation . in comparison to other clustering algorithms, the tribe-mcl produces clusters that resist contamination by promiscuous domains that could provide significant problems for other clustering algorithms as is discussed elsewhere  <cit> . tribe-mcl was tested using large databases of manually annotated protein sequences such as swissprot  <cit>  and scop  <cit>  and has already been widely used in bioinformatics . thus this method is one of the recognized bioinformatic tools and its results can be used as an established standard for comparison of new algorithms. moreover, we have already used the tribe-mcl algorithm for the analysis of the simap database  <cit> .

several clustering methods have appeared in recent years. one of these, the super paramagnetic clustering  has received considerable attention in microarray data analysis  <cit> . this algorithm provides clustering of input data  <cit>  based on analogy to the physics of an inhomogeneous ferromagnet. the method detects natural  clusters present in the data and is able to efficiently cluster difficult test examples, such as concentric circles. the spc algorithm was also successfully used in a supervised setting to analyze protein sequences and classify scop and cath proteins according to their fssp scores  <cit> . following our first successful application of spc to a database of ring-finger domains  <cit>  and our approach to project expression data to known functional modules  <cit> , the present study further investigates the power of spc to cluster protein sequences of two large databases, swissprot and scop. we compare its performance with the tribe-mcl algorithm. since both these databases do not contain complete genome sequences required for an unbiased comparison of the methods, we additionally analyzed protein sequences from four bacterial genomes, namely bacillus subtilis, helicobacter pylori, listeria innocua and listeria monocytogenes manually annotated at mips according to funcat  <cit> . we also introduce an extension of this algorithm, global spc or gspc, which performs step-wise clustering on different levels of connectivity between points and provides significantly improved performance to the annotation of whole genomes compared to both the original spc algorithm and tribe-mcl.

RESULTS
clustering of a simulated data
we tested the ability of the spc method to determine the physical number of clusters in the data using synthetic data. the model problem of figure  <dig> consisted of n =  <dig> points in d =  <dig> dimensions. the data points were generated using three normal distributions n, with centers x <dig> , x <dig>  and x <dig> . the data points generated by the second and third normal distributions are overlapping. in addition three points, x = , j = { <dig> ,2} were added to simulate an artificial link between the data points from the 1st and 2nd distributions.

in contrast to spc, the tribe-mcl algorithm has some difficulties in correctly determine the structure of the data. for example, for inflation parameter  <dig> , the algorithm subclusters points generated by normal distributions  <dig> into  <dig> different subclusters. for the inflation value of  <dig>  one can already observe  <dig> different clusters. one of the largest clusters contains  <dig> points, including  <dig> and  <dig> points generated by distribution  <dig> and  <dig>  respectively. this cluster remains stable even for inflation parameter  <dig>  thus tribe-mcl could not detect the physical structure of this data set. of course, one should not draw a general conclusion about the relative performance of both algorithms following only a single simulated example.

comparison of algorithms using swissprot and scop databases
the performance of the algorithms was investigated using swissprot  <cit>  and scop  <cit>  databases. the accuracy of spc clustering for the swissprot database was assessed by analysis of interpro domains  <cit>  and swiss keywords of members in calculated clusters. sequences without any annotation were used for data clustering but were not considered to estimate the performance of the methods. ideally, all members of each detected cluster should have exactly the same annotation in terms of interpro domains and swiss keywords.

analogous to the previous analysis  <cit>  only clusters that contained at least  <dig> or more annotated sequences were considered. the domain  combination detected for â‰¥50% annotated sequences in the cluster was used as the  annotation of the cluster. since some proteins had more than one domain , we measured the performance of the method by counting the number of correctly assigned domains rather than the number of correctly classified proteins. this procedure avoids ambiguities in cases where, for instance, the annotation of three out of five domains was predicted correctly. the number of true positive  domains/keywords was determined as the count of domains/keywords that coincided with the cluster annotation. the number of false negatives , i.e. domains/keywords observed for a particular protein but absent in the cluster annotation, and false positive , i.e. domains/keywords presented in the cluster annotation but missed for some particular proteins, were calculated. these numbers were used to compute the sensitivity = tp/ and specificity = tp/ of the clustering algorithms analyzed. the sensitivity is equivalent to the probability of correctly predicting some classifier while specificity is defined as the probability that the provided prediction is correct  <cit> .

not all proteins initially used in the evaluation will get a chance to be annotated by clustering. some proteins will not be clustered at all, because they do not have significant hits to other proteins. these proteins can be either treated as false negatives  or simply excluded from the analysis . the sensitivity that is calculated taking clustered proteins appears to be more relevant. indeed, if a protein was clustered, the sensitivity determined in our study will indicate how many of the existing categories of the protein analyzed are expected to be correctly predicted. this definition deals with a posteriori sensitivity, i.e. it should be used only after clustering of the protein families. the sensitivity determined by considering all non-clustered proteins as false positive, corresponds to a priori sensitivity. indeed, this number indicates how many categories of the given protein will be correctly predicted when there is no knowledge if a protein will be clustered or not. since each of these two definitions of sensitivity has its own advantage  we calculated them both. notice, that this definition of specificity does not include fn and thus it is not affected by which definition is used.

scop database analysis
sequences from the pdb database  <cit>   were clustered after removing redundant entries. these sequences were annotated using the scop database v.  <dig>   <cit> . the tribe-mcl results were calculated using the inflation value of  <dig>  <cit> . the total number of proteins used for analysis was  <dig>  and  <dig>  of the sequences had assigned scop domains. the total number of manually curated domains was  <dig>  domains. both annotated and non-annotated proteins were used for clustering. obviously the method performance was calculated only for the annotated cases.

the spc covered 6% fewer sequences for k =  <dig> but resulted in higher a posteriori specificity and sensitivities . the tribe-mcl, however, resulted in higher a priori sensitivity. for this value of k, both the spc and tribe-mcl clustered data into approximately the same number of clusters. larger values of the parameter k further increased the number of covered sequences but decreased the performance of spc. for example, an increase of k from  <dig> to the use of all connections  covered an additional  <dig> sequences. the number of true positive predictions increased by  <dig>  however, this increase was accompanied by an additional  <dig> false negative and  <dig> false positive predictions, thus decreasing the overall performance. not all sequences were identical for both cases. the "20" clusters contained  <dig> sequences that were absent in "all nn" clusters. correspondingly, there were  <dig> sequences that were present in "all nn" clusters but were absent in "20" clusters. the performance of the algorithm for these  <dig> new sequences was  <dig> true positives,  <dig> false negatives and  <dig> false positives. this corresponds to 90% in sensitivity and specificity.

thus, the performance of the clustering method using all connections did not dramatically decrease due to the addition of the new sequences, but rather due to worse prediction of some sequences that were already clustered using k =  <dig>  therefore by joining results calculated using variable k values and preserving results calculated for the sequences that were clustered in each preceding step, one can expect to increase both sensitivity and specificity of the method. indeed, the use of the gspc method provided a considerable increase in clustering performance. the number of false positive and false negative for the "all nn" clusters was lower than the numbers calculated using fixed value of k =  <dig>  but as many as  <dig> new sequences were covered. the gspc method outperformed the tribe-mcl and spc in terms of both a priori and a posteriori sensitivities. thus the performance of the gspc was considerably better than the other methods both in terms of covered sequences and quality of annotation. this improvement is of great importance for an automatic annotation of protein sequences.

swissprot analysis
the interpro domains  covered  <dig>   sequences from the swissprot database release  <dig>  . the total number of  <dig>  domains was calculated for this set. the tribe-mcl clustered  <dig>  sequences into  <dig>  clusters that contained at least  <dig> annotated proteins . the consensus annotation provided  <dig> % of specificity for these data. a similar specificity of spc,  <dig> %, was calculated for k =  <dig> nearest neighbors. the number of covered sequences by the spc algorithm was  <dig> . the use of the gspc made it possible to cover about  <dig>  additional sequences with overall specificity and " a posteriori" sensitivity of  <dig> % and 94%, respectively.

the swissprot database provides a controlled vocabulary of  <dig> keywords that has been used by many researches to test different classification algorithms. the total number of  <dig>  keyword instances was assigned to  <dig>  proteins. as for the analysis of the interpro domains, the gspc analysis provided higher performance and covered a larger number of protein sequences compared to the use of any single k-value or tribe-mcl algorithm .

comparison of algorithms for annotation of bacterial genomes
for this analysis  <dig>  protein sequences from four completely sequenced genomes, bacillus subtilis, helicobacter pylori, listeria innocua and listeria monocytogenes, were used. the annotation of the genomes was done at mips using funcat  <dig>   <cit> . the funcat is an annotation scheme for the functional description of proteins from prokaryotes, unicellular eukaryotes, plants and animals  <cit> . taking into account the broad and highly diverse spectrum of known protein functions, funcat consists of  <dig> main functional categories  that cover general fields like cellular transport, metabolism and signal transduction. the main branches exhibit a hierarchical, tree like structure with up to six levels of increasing specificity. in total, the funcat  <dig>  included  <dig>  functional categories and a total number of  <dig> distinct categories were available for analyzed bacterial genomes. the manual functional classifications were presented for  <dig>  proteins.

an estimation of performance for proteins that have similar but not exact annotation represent some challenge. let us consider an example of a cluster containing three proteins. the first protein that has annotation

 <dig> . <dig> . <dig>  biosynthesis of the glutamate group

 <dig> . <dig>  c-compound and carbohydrate utilization

 <dig> , cytoplasm

the second protein has annotation

 <dig> . <dig> . <dig> , biosynthesis of proline

 <dig> , cytoplasm

and the third protein is annotated with one category only:

 <dig> . <dig> . <dig>  biosynthesis of the glutamate group

the annotation of all three proteins is similar but the annotation of the second protein is more detailed for the metabolism  category while the first protein contains additional category  <dig> . <dig>  the third protein does not have an annotation category  <dig>  subcellular localization.

we measured the performance of annotation by counting the number of all non-redundant subcategories, i.e.  <dig>   <dig> ,  <dig> . <dig>  etc. in the above example the consensus annotation of this cluster is  <dig> . <dig> . <dig> and  <dig>  categories . the number of tp annotations is  <dig> =  <dig> +  <dig> +  <dig>  the number of fn is  <dig>  these are sub-categories  <dig> ,  <dig> . <dig>  and  <dig> . <dig> . <dig> , for the first and second proteins, respectively. there are also two fp annotations,  <dig> and  <dig>  observed for the third protein.

the performance of the three algorithms is shown in table  <dig>  the total number of non-redundant subcategories for this analysis was  <dig> . the methods calculated similar performance, but the gspc algorithm covered a larger number of sequences. therefore the performance of gspc was remarkably higher in terms of a priori sensitivity.

discussion
we have described and demonstrated the use and performance of spc and of its extension, gspc, for the clustering of protein sequences using sequence similarity only. for the first time, the spc algorithms for clustering of protein sequences was employed in a large-scale study. our results confirm that this method is a valuable, reliable tool for the automatic functional classification of protein sequences.

the use of the step-wise clustering approach, gspc, improved sensitivity and specificity of the original method and allowed us to get a higher accuracy compared to the tribe-mcl and original spc algorithms using data sets from pdb and swissprot databases. the performance of the gspc for annotation of swiss keywords favorably compares with supervised approaches. for example, the percentage of sequences covered by gspc for  <dig> %  and 93%  specificity were 62% and 79% respectively. the first number is similar to that calculated by the supervised classification approach using the c <dig>  algorithm, where 58% of sequences were covered with 94% of specificity  <cit> . thus the spc algorithm classification performance is comparable to the state-of-art supervised machine learning classification approach used by  <cit> . notice, that the latter method used different sequence attributes, such as pfam domain and prosite composition, and thus explicitly took into consideration the multi-domain organization of proteins. the spc algorithm, contrary to that, used the sequence similarity only. this result indicates high prediction ability of the annotation using gspc clustering.

the specificity of the gspc algorithm using all connections ,  <dig> %, is also slightly superior to the results of another supervised approach, the adaptive algorithm for automated annotation  <cit>  that calculated  <dig> %. these results, however, are indicative only since our and previous approaches are different with respect to their types . in addition similar but not identical datasets were used. for example, the performance of the adaptive algorithm  <cit>  was tested using  <dig> probe sequences, randomly chosen from swissprot while the performance of the c <dig>  algorithm was tested using 10-fold cross-validation.

a significant advantage of unsupervised clustering approaches over the supervised ones is the ability of the former methods to detect as yet unobserved relations between proteins. such results could be used to find new protein families that currently do not have functional annotations or have incomplete or inconsistent ones. the unsupervised methods are also not subject to the risk of overfitting problems. overfitting impairs the predictive power of supervised approaches for samples that were not represented in the training set  <cit> .

the gspc resulted in higher sensitivity and specificity for all analyzed datasets. the use of a priori sensitivity made it possible to compare results of all methods using a fixed number of samples and made the comparison more straightforward. however, from a practical point of view, particularly for the implementation of annotation pipe lines of complete genomes the specificity and a posteriori sensitivity rather than a priori sensitivity are the most relevant factors of the automatic annotation. indeed, it is preferable to annotate a smaller number of sequences in automatic mode with a higher accuracy than to annotate more of them with a lower accuracy. the sequences not automatically annotated by the algorithm can be annotated subsequently by complementary approaches or by careful manual analysis of domain structure of the sequences. any attempt to increase the a priori sensitivity and thus cover a larger number of sequences by lowering specificity may result in an unacceptable performance for annotation purposes.

the spc algorithm calculates hierarchical tree-structures of clusters for each k value. in our analysis we identified and considered only the leaf clusters. the upper part of the tree was ignored. such analysis was possible since for the data analyzed in this study the largest number of protein sequences were clustered in leafs and only a few additional sequences could be still clustered considering the whole tree structure. for example, using k =  <dig>  only  <dig> and  <dig> additional sequences could be clustered for the pdb and swissprot data sets, respectively. these numbers corresponded to about 1% sequences in each database and only marginally influenced the method performance. the gspc algorithm, as it was already mentioned in the method section, clustered such sequences at higher k values. this improved its prediction performance compared to the original spc method.

the performance of any algorithm analyzing sequence relations depends on the selection of the reference data sets. the composition of such references data sets could bias the performance, since in reality the selection of sequences from known genomes or databases is not a representative random sample from the sequence space. for example, swissprot and scop databases are very often used as "a gold standard" for annotation and classification methods. however, these databases represent a biased selection and do not cover entire genomes. therefore, analysis of the performance of clustering methods is biased by the composition of the reference data sets. for example, the gspc decreased missassignments by 2â€“5% for these two sets. since the error rate for clustered sequences from these data sets was about 10â€“15% , the relative gain in the performance was 10â€“40%. in other words, the automatic annotation of sequences clustered with gspc will make up to 40% fewer erroneous annotations  compared to other methods. on the other hand, all three methods returned similar results for the bacterial genomes. for this set gspc covered about 12% of additional sequences which is very important for genome annotation.

the gspc method developed is fast. a complete analysis of pdb and swissprot datasets using all k levels took on moderate pc computer  less than  <dig> and  <dig> minutes, respectively. the speed of the original spc algorithm scales approximately linearly with the number of connections. this number increases approximately as n <dig> with the number of samples. however, since gspc uses step-wise clustering, the actual number of samples remaining for clustering using large k values is small. therefore, the gspc speed is mainly determined by clustering using small, k = 2â€“ <dig>  values and is in practice approximately linear with the number of samples. in fact, the method will be fast enough to efficiently cluster datasets with millions of sequences; clustering computational requirements is therefore small compared to the computation of the sequence similarity scores. the computational efficiency is clearly an advantage of the gspc method compared to the tribe-mcl. the complexity of the later scales as o were n is number of non-zero elements in the matrix. therefore, this method performs slower if an increasing volume of genomic data needs to be processed.

CONCLUSIONS
the gspc calculated with higher accuracy or covered a larger number of sequences than the tribe-mcl algorithm for the analyzed datasets. the accuracy of annotation of gspc for the swissprot database was comparable to that of supervised methods. thus it is a useful approach for automatic detection of protein families and annotation of full genomes.

