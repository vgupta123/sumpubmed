BACKGROUND
improving our understanding of protein-ligand interactions at the molecular level plays an important role in the discovery process of new drug candidates. the protein data bank   <cit>  is the main source of structural information on protein-ligand complexes. it is constantly being improved through the addition of on-line tools and links to complementary datasets.

current virtual screening methodologies for in-silico discovery process of new leads rely on databases of chemical complexes with structural information and also chemical, physical and biological properties, when available. examples of these datasets are the cambridge structural database  <cit> , nci  <cit> , zinc  <cit>  and chemstar  <cit> . these databases, however, do not provide clues on the ways these molecules may interact with proteins or other macromolecules, which is important for the task of developing knowledge-based docking algorithms.

several databases containing information on ligand molecules found in the pdb, and on protein-ligand interactions  have been released. furthermore, a few databases collecting data on protein binding sites found in the pdb have been recently reported  <cit> . creative data mining may provide useful knowledge on protein-ligand interactions from these databases, with potential use in the design of docking algorithms or scoring functions. testing of docking algorithms, on the other hand, requires a particular processing of both the protein and ligand structures, so that the given docking program has all the data it needs  to perform the simulation. the above mentioned databases were not intended for this purpose.

the number of algorithms available to assess and rationalize protein-ligand interactions has increased during the last years  <cit> , but the number of test cases used to validate methods keeps being small  and problem dependent  <cit> . a few datasets have been developed for testing the performance of some of the most popular docking programs. one of them is the gold validation test set  <cit> , comprising  <dig> different complexes extracted from the protein data bank. flexx- <dig>  <cit>  is also a dataset consisting of  <dig> protein-ligand complexes selected and modified by hand from original pdb files. the developers of the dock program  <cit>  also compiled a small dataset of  <dig> small molecules in complex with a variety of macromolecular targets  <cit> . in these datasets, the structural and chemical information is stored in the right format used by the corresponding programs.

in this work, we report the compilation of a large set of protein-ligand complexes extracted from the protein data bank, which is tailored both for extracting knowledge on these interactions via data mining and for large scale testing of docking algorithms. the term "large scale" means the use of thousands of protein-ligand complexes that were identified in the pdb and processed in an automatic manner. a key element in the extraction procedure was the use of our own definition of molecular contact to identify protein-ligand interactions at the atomic level. the database of protein-ligand complexes was further enriched in molecular properties such as atom types, atomic charges, etc, needed for the scoring functions of many of the docking programs.

in the final part of this paper, we demonstrate how our new database can be a valuable resource in the process of developing knowledge-based docking algorithms. we carried out a research exercise that started with data mining of protein-ligand interatomic interactions, leading then to a modification of the matching rules of the chemical filter used by the program dock to speed up the generation of ligand orientations in the binding site, and finished with testing the new rules and comparing them with the old ones by running docking simulations for several hundreds of protein-ligand complexes.

methods
identifying small ligands in complex with proteins in the pdb
determining whether a pdb entry contains a non-covalent complex of a protein with one or several small molecules  may be a complicated task for several reasons. first, there is not explicit information in the pdb entries that would make clear which records contain atomic data belonging to each small molecule, if present in the structure. usually, small ligands are listed within hetatm records, but this doesn't apply to amino acids or nucleic acids, which may also constitute small ligands. furthermore, some small molecules are a mixture of amino acids and/or nucleic acids with other chemical groups, being listed both under hetatm and atom records. on the other hand, some of the small molecules present in the pdb, especially many sugars, are covalently bound to proteins, being therefore not of interest for the purpose of this work. the solution given here to these problems was to analyse the atomic connectivity within a pdb entry.

we wrote our own program  to process the whole pdb. for peptides and nucleotide chains, we set a limit of eight and four residues, respectively, to consider them as ligands. first, all the amino acid and/or nucleotide chains present in an entry were identified. entries containing nucleotide chains having more than four residues were not further analysed. water molecules and metal ions were stored apart. hydrogen atoms, if present, were deleted .

the remaining heteroatoms, as well as the small peptides and nucleotide chains were all processed together and grouped by their connectivity into fragments . two atoms were considered to be covalently bonded if the distance between them was less than  <dig>  Å. this number was selected to cover the larger covalent distances we found in the pdb . fragments having less than  <dig> atoms were removed, as well as those fragments that were covalently bonded to a protein chain.

ligands were classified in seven categories according to their chemical nature: peptide, nucleotide, hetero, peptide-nucleotide, peptide-hetero, nucleotide-hetero and peptide-nucleotide-hetero. ligand residues listed under the atom keyword in the pdb files were identified as peptide or nucleotide by checking their residue names. every residue listed under the hetatm keyword was included in the broad category of 'hetero'.

computing protein-ligand contacts
atomic contacts between two molecules are typically determined based on a distance criterion. thus, in several reports a contact between two atoms is registered if the distance between them is below a fixed cut-off value. for example, in relibase  <cit> , a value of  <dig> Å was used. in a previous work, we used a cut-off of  <dig>  Å to collect protein-small ligand interactions  <cit> . in a stricter approach, a contact is postulated if the distance between the two atoms is not larger than the sum of their van der waals radii, plus certain tolerance value   <cit> .

in this work, we introduced a new definition of atomic contact that takes into account a possible screening of the direct interaction between two atoms, produced by a third atom that is covalently bonded to one of them, as illustrated in figure 1a. the oxygen oa and the carbon atom represented in this figure would be considered as being in contact if a purely distance criterion is used. following our definition, however, they are not contacting each other.

our definition of atomic contact takes also into account a distance criterion, but with an additional refinement. in our approach, the connolly's molecular surfaces  <cit>  of the two interacting molecules are employed to determine whether two atoms are in direct contact. the surfaces were calculated using a dot density of  <dig> Å- <dig> and a radius of  <dig>  Å for the rolling probe. the van der waals atomic radii were taken  from the amber united-atom force field  <cit> .

so, two atoms belonging to different molecules are said to be in contact if: a) the distance between them is not greater than the sum of their van der waals radii plus a tolerance distance , and b) if both atoms have associated surface points located around a line joining their centres, and covering at least an area of  <dig>  Å <dig> for each of the two atoms .

following this definition, the program complex_info computes, for each protein-ligand complex, a list of atomic contacts, as well as a more concise list of the protein residues that make contact with the ligand.

interface water molecules and ions. buried surfaces
the program complex_info also determines which of the water molecules, if present in a pdb entry, are located at a protein-ligand interface. in addition, it gives the total surface area of the ligand and the surface areas buried on the ligand and on the protein as a result of the interaction. this analysis was based on the calculated connolly's surfaces, since his program ms dot  <cit>  specifies in the output file which of the surface dots  are buried by other atoms surrounding the molecule of interest.

for each water oxygen that is close to the ligand , its connolly surface was computed taking into account all the surrounding atoms within a cut-off distance of  <dig> Å. water molecules having > 90% of their surface buried by ligand and protein atoms were considered as interface water. the same type of analysis was performed for any metal ion present in the structure.

the calculation of the ligand surface buried by the protein was performed including the interface water molecules and ions as if they were part of the protein. conversely, the interface water and ions were considered as extensions of the ligand surface to compute the area of the protein surface buried by the ligand.

typing protein and ligand atoms
when studying molecular interfaces it is important to consider the nature of the atomic interactions, for example, the presence of hydrogen bonds, salt bridges or hydrophobic contacts. for this purpose, it is necessary to know what chemical properties the atoms at the molecular interface have. this information, however, is not included in a pdb file. in particular, the absence of hydrogen atoms in most pdb structures makes it difficult in many cases to determine whether a polar atom can be a donor or an acceptor of a hydrogen bond. in order to overcome these problems, we implemented a procedure for automatic atom type assignment.

for ligand atoms, a few atom types were defined on top of the chemical elements for nitrogen, oxygen and carbon . nitrogen atoms were classified as donor , acceptor , positive , aromatic  or "hydroxyl" ; oxygen atoms as acceptor , negative  or hydroxyl ; and carbons were divided into aliphatic  and aromatic . similar classifications have been reported elsewhere, for example, the one made by abola et al.  <cit>  for automated analysis of interatomic contacts in proteins.

protein atoms were classified according to seven categories: donor, positive, acceptor, negative, hydroxyl, hydrophobic and aromatic, without indicating explicitly the chemical element. this classification matches the definition of chemical types for the "attached point" representation of protein binding sites, as described in  <cit> , designed to be used with the program dock. the assignment of atom types for the protein receptors was performed simply from the standard pdb atom names for amino acids. aspartic and glutamic acids were considered as not protonated, and therefore their carboxylic oxygens were classified as negative. the delta and epsilon nitrogens of histidine were classified as "hydroxyl", as a way to leave undefined their protonation state.

for ligand molecules, atom typing was carried out using the well-known program babel- <dig>   <cit> , with a few modifications. one of the changes made in the program had the purpose of translating its internal atom types into the newly defined types. other changes were introduced to correct some errors that we obtained when processing a group of test molecules, as explained below.

babel- <dig>  uses bond distances, bond angles and torsion angles to assign atom types, using methods similar to those described in  <cit> . after determining the chemical element and hybridization corresponding to each atom, hydrogens are placed on atoms to fill up the empty valences. the algorithms implemented in babel work fine when the geometry of the molecule does not deviate much from the ideal values. the small molecules found in the pdb, however, often show large deviations from optimal bond distances and angles.

to cope as much as possible with these problems, we modified some of the parameters coded in babel- <dig> . furthermore, we added a criterion based on measuring improper dihedral angles  to differentiate between sp <dig> and sp <dig> hybridizations. if an atom has three connections to heavy atoms and the absolute improper dihedral is smaller than  <dig> degrees, then it is sp <dig> hybridized . new cut-off values for some geometric parameters were obtained by analysing a group of molecules with sulphate, phosphate and carboxyl groups .

*) number of atoms carrying a different protonation, as compared with the original dataset files.

errors in the protonation resulted either from an incorrect assignment of the hybridization or from an incorrect filling of a valence of a sp <dig> nitrogen in a ring structure.

the assignment of 'donor' and 'acceptor' atom types performed by babel  <dig>  for some nitrogen atoms, which depends on their protonation, was not always correct. this kind of problem appeared mainly with heterocyclic structures. to improve the capabilities of babel to protonate correctly these structures, we included some empirical rules generally accepted in organic chemistry  <cit> .

finally, the protonation of nitrogen atoms in ligand ring structures was checked against the crystal structure of the corresponding protein-ligand complex. the influence of every polar protein atom contacting with a ring nitrogen in a ligand was evaluated. this evaluation took into account the distances between the nitrogen and the protein atoms and the angle formed by a possible hydrogen bond donated by the ligand nitrogen. the influence is positive if hydrogen placement favours the formation of a hydrogen bond, but is negative if the added hydrogen is facing a hydrogen from a donor atom in the protein, as illustrated in figure  <dig>  the final decision on whether to keep or remove the hydrogen atom from the ring nitrogen is taken after weighting all the influences from the neighbouring polar atoms.

once a molecule is protonated babel  <dig>  can also assign partial charges to atoms, using the gasteiger algorithm  <cit> . the information on atom types, hybridization and partial charges was stored in a separate file for each ligand.

testing the atom typing with reference datasets
two reference datasets were used to test the typing of ligand atoms with the modified babel- <dig>  program: the dock  <dig>  dataset  <cit> , consisting of  <dig> small molecules randomly selected from the current medicinal chemicals  molecular database , which was used for testing the implementation of the empirical rules to protonate nitrogen atoms in heterocyclic structures, and the flexx- <dig> validation dataset  <cit> , which consists of  <dig> protein-ligand complexes selected from the pdb. for each complex in the flexx- <dig> dataset, an active site file for the proteins as well as two mol <dig> files for the ligand  are provided. the flexx- <dig> dataset was used to check the performance of the empirical rules introduced in babel to protonate nitrogen atoms and the final refinement of the protonation against the structures of the protein-ligand complexes. to perform these tests, hydrogen atoms were removed from the original files, which were converted from the mol <dig> to the pdb format. the obtained pdb files were then used as input to the babel program.

filtering to create a "non-redundant" dataset
a filtering procedure was applied to the collected protein-ligand complexes aiming to create a non-redundant dataset for data mining. the term "non-redundant", for this particular work, means that the dataset should not contain entries for which both the structures of the ligand and the protein-binding site are similar. following this principle, the comparison of the complexes was focused mainly on the protein amino acids and the ligand atoms that are in contact with each other. thus, we compared the ligand structures and the protein-ligand contact tables. the comparison took into account the atom types previously assigned.

first, the filtering procedure was performed within each pdb entry. afterwards, all pairs of protein-ligand complexes obtained after the first round were compared against each other. if both the ligand structures and the contact tables for two complexes were similar, the complex with lower resolution was discarded.

comparison of the ligand structures was centred on the atoms contacting the protein. from the list of protein-ligand contacts computed by our contact definition, a graph representation of the interaction is built to find the molecular similarity between two structures. the maximum common sub-graph  between two structures is used to express molecular similarity. from the mcs, an analysis of the protein-binding site is carried out to eliminate redundancies. since finding the mcs is a np-complete graph-matching problem, it is computationally expensive to locate an optimal mapping in a realistic time frame without the application of heuristics. several approaches have been reported to tackle this kind of problem. here, our heuristic to find mcs starts with a clique detection algorithm, as described in  <cit> , which constrains the match using our previous atom type definition and successively adds small subgraphs of both ligands. the similarity of the ligands in terms of three-dimensional structure is also taken into account by checking the root mean square deviation  of the mcs for every newly included subgraph.

data mining study on interactions between atom types
the assignment of atom types carried out in this work, together with all the structural information stored in the database, allows performing different types of studies regarding the chemical nature of the protein-ligand interactions. the extracted knowledge may have important applications, for example, in the design of docking algorithms. in this paper, we explored the data mining possibilities given by our new database of protein-ligand complexes by compiling statistics about the frequencies of interaction between different protein and ligand atom types, and using the obtained data to tune the chemical matching filter implemented in the well known program dock  <cit> .

in this study we introduced the term "relative contact frequency"  for different pairs of ligand-protein atom types, e.g. n_d-acceptor, which was defined as follows:

fcrij = k cij/, where cij is the number of contacts counted for ligand atom type "i" and protein atom type "j", divided by the total number of computed ligand-protein contacts; pi and pj are the proportions in which atom types i and j, respectively, are found in the database; and k is a normalization constant, computed so that the sum of the frequencies by all protein-ligand pairs yields one.

simulations using the program dock with a few modifications
to test the performance of different versions of the chemical filter implemented in the program dock, we ran a series of simulations with this program for a selected set of hundreds of protein-ligand complexes.

the algorithm implemented in the program dock uses a representation of the binding site based on points , which are intended to occupy positions favourable for ligand atoms to be placed there. then, sets of ligand atoms are matched onto sets of spheres to generate different orientations of the ligand  <cit> . a chemical filter may be used in this process to speed up the calculations, by discarding matches that do not fulfil a defined set of chemical complementarity, or matching rules  <cit> . in order to use this chemical filter, chemical labels  must be assigned both to site points and ligand atoms.

modifying the chemical filter that comes by default with the program dock was easily done by just replacing the original input files containing atom type definitions and matching rules.

to create a negative image of the active site, we used our own method for generating binding site points, called "attached points"   <cit> . in this approach, the site points are generated in an automated way from templates constructed for each amino acid type, and chemical labels are assigned to these points also in an automatic fashion. each atpts point is linked to a protein atom  and its label or colour carries chemical information on this atom in its particular chemical context. furthermore, each atpts point is located at a distance from its parent atom which is optimal for an intermolecular atomic interaction.

atpts binding site representations were generated in a totally automated way, following the algorithm described in  <cit> . the selection of the protein residues that form the binding site was made on the basis of their proximity to the ligand in the crystal complex: every protein residue within a distance of  <dig> Å from at least one of the ligand atoms was included. bump distances of  <dig>  and  <dig>  Å were used for polar and nonpolar protein atoms, respectively. a merging distance of  <dig> Å was used to fuse points of the same colour that were too close to each other.

since we were interested only in the functioning of the orientation part of the program dock with different versions of the chemical filter, we did not perform any scoring of the generated ligand geometries. instead, we ran "truncated" docking simulations – the code of the program was slightly modified to output to a file the rmsd value, with respect to the crystal structure geometry, of every generated ligand orientation, and then skip the scoring routines. the docking simulations were carried out also in automated way, using simple scripts.

RESULTS
we processed the whole pdb release of august  <dig>  using our program 'complex_info' in order to detect ligand molecules bound to proteins, extract a variety of information on these protein-ligand complexes and calculate several atomic and molecular properties. as result,  <dig> complexes from  <dig> files were extracted and analysed.

typing of ligand atoms
one important part of the calculations performed on the extracted protein-ligand complexes was the assignment of atom types to both the protein and the ligand. we defined a simple set of atom types, as described in the methods section , aiming mainly at classifying the molecular interactions in a few elementary types such as hydrophobic contacts and hydrogen bonding. we decided to employ the popular program babel- <dig>  to perform the typing of ligand atoms. one important reason behind this decision was the possibility of modifying the code to implement our new atom type definitions, and making other changes as necessary.

typing of protein atoms was easily done from the pdb atom names. typing of ligand atoms, however, presented some difficulties due mainly to the imperfect stereo chemistry of ligand molecules extracted from the pdb and imprecisions in the protonation of nitrogen atoms.

first we tested the performance of the original babel- <dig>  in protonating correctly polar atoms and assigning correct atom types on the dock  <dig>  dataset. as result,  <dig> out of  <dig> molecules were reported as having errors related mainly to nitrogen atoms in heterocyclic structures. all these errors were eliminated after introducing the modifications that were explained in the methods section. for example, in the biotin molecule  the atom c <dig>  which is sp3-hybridized, has an average bond angle higher than the cut-off value set in the babel- <dig>  code for this type of hybridization. for this reason, it was assigned an incorrect sp <dig> hybridization. by checking the improper dihedral angle formed by c <dig> and its connected atoms c <dig>  c <dig> and n <dig>  a correct sp <dig> hybridization was assigned. for the moxiraprine molecule , a sp <dig> hybridization was correctly assigned by babel to atoms n <dig> and n <dig>  but the protonation of these atoms was wrong because babel tries to fill up all empty valences with hydrogens. by adding an empirical rule stating that a nitrogen in a six-member ring with all its atoms sp2-hybridized is not protonated, the problem was solved. table  <dig> shows some statistics from the test runs on the dock  <dig>  dataset.

in a second step, the modified babel- <dig>  was tested on the flexx- <dig> dataset, using the ligand structures with their geometries extracted directly from the pdb. some of these molecules had atoms that in the original pdb files are covalently bonded to the protein, and consequently had a modified protonation. these atoms were not taken into account. table  <dig> shows the obtained results.

the final checking of the protonation performed against the crystal structures of the protein-ligand complexes allowed to correct some of the remaining errors in the protonation of ligand nitrogen atoms, but only for those atoms in contact with the protein receptors. therefore, some errors still remained for nitrogen atoms that are outside the protein-ligand contact tables. similar problems have been reported for other atom-typing programs  <cit> ).

selecting a non-redundant set of protein-ligand complexes
once the atom typing was performed for all the extracted complexes, a filtering procedure was carried out with the purpose of creating a non-redundant dataset, following the principles delineated in the methods section. first, obvious redundancies such as repeated complexes at different resolutions and repeated copies of the same ligand within an entry were eliminated. in most cases, these copies are found for proteins having several identical binding sites, for instance, the cholera toxin b pentamer , or for entries containing copies of the same complex in the asymmetric unit of the crystal. in either case, the protein-ligand contact patterns displayed by the different ligand copies are almost identical.

on the other hand, there are several small groups of entries containing the same protein, but in complex with different ligands, or mutants of the same protein in complex with the same or different ligands. we did not eliminate any of these complexes a priori because each of them might contribute different protein-ligand contacts. for instance, different versions of the same protein very often contain mutations in the binding site region, which most likely results in distinct new contacts with the ligand.

after a first filtering round where copies of the same ligand within the same pdb entry were removed,  <dig> complexes out of  <dig> remained. afterward, a second filtering round was carried out where all complexes were compared against each other. as result,  <dig> complexes were obtained.

some statistics extracted from the collected protein-ligand complexes
all information about extracted protein-ligand complexes was stored in a sql server database, as illustrated in figure  <dig>  the implementation of the database in a sql server makes it easy to perform different types of queries. figures  <dig> and  <dig> show, as examples, some collected statistics from the database, using histograms and correlation plots. these statistics were collected for the selected non-redundant set. figure 5a shows the distribution of ligand sizes expressed as the number of heavy atoms. as the number of complexes where the ligand has more than  <dig> atoms is very small, only ligands smaller than  <dig> atoms are shown in the histograms.

as shown in figure 5b, in most of the complexes of the database the ligand has more than 60% of its surface in contact  with the protein. fifteen protein residues as average are contacting ligand atoms , with a contact area smaller than  <dig> Å <dig> for all complexes. the buried ligand surface is always slightly smaller than the corresponding buried protein surface because the ligand is embedded within the protein site and because of the presence, in many cases, of water molecules at the interface. figure 5d shows the important role that water molecules play in many cases, serving as bridges in protein-ligand interactions. about  <dig> complexes out from the selected  <dig> contain interface waters, with several hundreds of these complexes containing five or more. there are a few complexes with more than  <dig> water molecules at the protein-ligand interface.

some of these properties are correlated, for example, figure 6a shows that the higher the ligand size the higher the number of ligand atoms making contact with the protein. however, there is no correlation between the fraction of ligand surface buried by the protein and the ligand size, as shown in figure 6b. most of the smallest ligands are almost or completely embedded in the protein, but there are also many of them that make contact with only a fraction of their surfaces. for larger ligands , in most cases a big part of the molecule is outside the binding site. figure 6c shows that there is no correlation between the number of water molecules at the protein-ligand interface and the buried ligand area.

also by doing simple queries to the database, it is possible to know how the different atom types defined in this work are represented in the pdb ligands, and their ratio of participation in contacts with the protein receptors. table  <dig> shows these results for the selected non-redundant set. nitrogen and oxygen atoms in ligand molecules have a higher ratio of contacts with proteins than carbon atoms, although the sp2-hybridized "aromatic nitrogens"  have a low contact ratio, due to the fact that their three valences are occupied by heavy atoms that screen most part of their atomic surface. negatively charged oxygens have the highest ratio of interaction .

*) atoms corresponding to chemical elements other than c, o or n.

†) the total values do not include the unclassified atoms 

data mining in the database: application in docking
we further performed a series of data mining and docking simulations, in order to show the potentialities of our database in terms of extracting useful data that could be incorporated into knowledge-based docking algorithms, and testing these algorithms using a large number of protein-ligand complexes. for this purpose we used two different non-redundant data sets compiled from the database. one of them, called pdb <dig> and containing  <dig> complexes, was obtained from the complexes deposited in the pdb before march  <dig>  using the filtering procedure explained in the methods section, while the second dataset, called pdb <dig> and having  <dig> complexes, was obtained from the rest of the structures, up to august  <dig>  pdb <dig> was used to derive statistics on protein-ligand interactions by atom type, whereas pdb <dig> was employed in testing newly designed chemical matching rules, as described below.

protein-ligand interactions by atom type
we further queried the database to determine the number of interatomic contacts by both ligand and protein atom types. table  <dig> collects the results from these queries. as shown in this table, hydrophobic contacts between carbon atoms account for most of the collected interactions, while some strong interactions such as those between a positively charged nitrogen and a negatively charged oxygen are less represented. these results, obviously, are a direct consequence of the large differences among atom type populations in the database.

*) protein atoms types are: acceptor , negative , donor , positive , hydroxyl , hydrophobic  and aromatic .

we then defined what we called "relative contact frequencies"  for ligand-protein atom type pairs, aiming at removing the biases in contact frequencies caused by the differences in atom type populations. the relative contact frequencies were obtained by normalising the values displayed in table  <dig> according to the total number of contacts and the population frequencies of the different ligand and protein atom types, as explained in the methods section. the results of these calculations are shown in table  <dig> 

after the performed normalization, it turned out that atomic interaction pairs formed by a positively charged nitrogen in the ligand and a negatively charged atom in the protein  have the highest relative frequency in protein-ligand complexes. in general, positively charged and hydrogen bond donor nitrogen atoms in ligands have high relative frequencies of interaction with hydrogen bond acceptors and negatively charged atoms in the protein. on the other hand, negatively charged oxygens in ligands interact with high relative frequencies with positively charged nitrogens and hydroxyl oxygens. ligand hydroxyl oxygens are more prompt to donate a hydrogen bond that accepting one from the protein.

in summary, interactions between charged and polar atoms have much higher relative frequencies than interactions with or between hydrophobic or aromatic atoms. this means that when present both in the ligand molecule and in the protein binding site, nitrogens and oxygens have a much higher probability of being involved in interactions with the protein than individual carbon atoms.

to reflect these relative contact preferences by atom type in a discrete way, the interactions were classified into three categories: highly probable, probable and less probable, as defined in table  <dig>  it should be noted that the probability intervals were chosen ad-hoc, aiming to include only a very few types of interaction in the "highly probable" and "probable" categories.

evaluating chemical complementarity in protein-ligand complexes
with the aim of making a practical use of the obtained probabilities of interaction by atom types, we designed a set of chemical complementarity rules that could be used as a filter to discard wrong ligand orientations by a docking program, such as dock  <cit> .

as explained in methods, dock uses a representation of the binding site based on points. then sets of ligand atoms are matched onto sets of points to generate different orientations of the ligand. a chemical filter implemented in the program helps discarding matches that do not fulfil a defined set of chemical  rules, thus speeding up the calculations.

here we used our own method to generate binding site points, called "attached points" , as briefly explained in methods and in more details in ref.  <cit> . each atpts point carries a label that reflects the chemical nature of its parent protein atom. not as a casual coincidence, these labels correspond to the atom types that were defined in this work for protein atoms. since a spatial matching of an atpts point with a ligand atom corresponds to a contacting interaction between its parent atom and this ligand atom, we can extrapolate the statistics obtained for ligand-protein contacts to ligand-atpts matches.

thus, atpts binding site representations were generated for the  <dig> protein-ligand complexes included in the pdb <dig> dataset, in a totally automated way. the calculation time per structure was, on average, less than  <dig>  s.

the quality of the atpts representation of protein binding sites, in terms of its success in matching point and ligand atom positions for the correct  orientation of ligand molecules, was thoroughly demonstrated in a previous paper  <cit> . for this purpose, we defined and calculated a magnitude called "number of matching atom-point pairs" . a matching atom-point pair is formed by a site point and a ligand atom being within certain "matching cut-off distance"  from each other. then we showed that for the vast majority of the tested complexes, more than 70% of the ligand atoms that are in contact with the protein are matched by atpts points. here we repeated the same type of calculation for the pdb <dig> dataset and obtained roughly the same result .

in this work, taking profit of the atom type data included in the database, we could also evaluate the quality of the formed matching pairs, according to the classification of the atomic interactions defined in table  <dig>  the results of this evaluation are shown in figure  <dig>  for most of the complexes in the pdb <dig> dataset, more than 40% of the matching pairs correspond to probable  or very probable  interactions.

defining and testing new matching rules for docking simulations
if the number of matching pairs with probable and very probable interactions is high enough, the stringency of the matching rules to be used in the docking runs may be increased, for example, by enabling only matching of very probable pairs in the ligand orientation process. this would significantly accelerate the calculations by reducing the number of ligand orientations to generate and evaluate. on the other hand, the use of these rules must allow the generation of a sufficient number of correct orientations, otherwise the program may fail in predicting a right solution.

here we defined two different sets of matching rules: one that permits very probable and probable interactions , and a second set that permits only very probable matches . then we tested their performance as compared with the chemical complementarity rules coming with the dock program , which are much more permissive.

the test of the three sets of matching rules was carried out for a selected set of complexes from the pdb <dig> dataset. to rule out other variables that may affect the results of a docking simulation, such as big ligand size and a small contact area with the protein, which are not the subject of this particular study, we restricted the test set to complexes in which ligands have between twenty and forty heavy atoms and more than 70% of their molecular surface embedded in the protein binding site. as we were interested in evaluating the accuracy of the postulated matching rules, the chosen complexes also should have atom types included in the rules sets r <dig> and r <dig>  finally,  <dig> complexes were selected from the pdb <dig> dataset, and atpts binding site representations were generated for all of them.

for all the selected complexes we ran "truncated" docking simulations, as explained in methods. no scoring was carried out since we were not interested in the performance of the scoring functions, but only in evaluating the number of correct ligand orientations that are produced by the program. the maximum number of orientations to be generated was limited to  <dig>  this number was high enough to explore all the combinations generated by the matching algorithm for most of the complexes, and was much higher than the value used by default . ligands were kept rigid in these simulations.

in order to check the efficiency of the chemical rules, we computed the number of "good" ligand-receptor configurations generated by the dock program in the ligand orientation process. as "good orientations" were considered those whose rmsd value with respect to the crystal geometry was less than  <dig> Å.

the simulations for the  <dig> complexes took just a few hours. a comparison of the results obtained for the three sets of matching rules is shown in figure  <dig>  the comparison is focused on the analysis of the rmsd of the best orientation generated by the dock chemical matching algorithm, the total number of orientations explored  and the number of "good" orientations obtained.

when using its default set of chemical matching rules, the program dock fails in producing a good solution for about 30% of the complexes , even though the program reached, for almost all the complexes, the maximum number of ligand orientations that was allowed . for the 70% of complexes showing a successful result, an average number of  <dig> good solutions was produced by the program.

using the r <dig> set of matching rules significantly improves the performance of the simulations, with only a very few complexes having their best orientation with an rmsd >  <dig> Å . for this set of rules the number of possible ligand atom-site point matches was still high enough as to make the program produce the allowed  <dig> orientations for most of the complexes . the average number of produced good solutions was  <dig> 

finally, when the r <dig> rules were employed, a good solution was always found . for this more restrictive set of rules, the number of explored orientations was reduced notably, as shown in figure 8f, and nevertheless, a high number of good orientations was obtained  for each protein-ligand complex. these results demonstrate that the matching rules used to limit the exploration of the conformational space between the protein and the ligand can be more stringent and still produce very good results if the ligand molecules have atom types with statistically high probabilities of interaction with proteins.

on the other hand, the fact that using the matching rules given by default for the dock runs made the program fail in about 30% of the tested cases causes concern. since the ensemble of ligand atom-site point matches produced with the r <dig> or r <dig> rules must be a subset of the ensemble of matches produced using more permissive rules, or not using any filter at all, the reason for the failure must be that the maximum allowed number of ligand orientations was not enough to give the program the chance of exploring the right sector of the orientational space. even for small and medium size ligands, the total number of atom-point combinations that can be produced may be so large, that the probability of obtaining correct matches within the first  <dig>  or even more unfavourably, within the first  <dig> explored conformations, can be small.

CONCLUSIONS
we compiled a large database of small ligand-protein complexes derived from the pdb that currently contains more than  <dig> non-redundant structures. in processing the pdb structures, we characterized in details the protein-ligand interactions, using a new definition based on the proximity of the molecular surfaces. furthermore, the structural data was enriched with chemical properties that we calculated using our own as well as existing algorithms. as an example to demonstrate the value of the new database for data mining and testing of docking algorithms, we derived a new set of chemical matching rules to be used in the context of the program dock, based on contact frequencies between ligand atoms and points representing the protein surface, and proved their enhanced efficiency with respect to the default set of rules included in the program. one important finding in this study is the high rate of failure of the program dock in finding orientations close to the crystal structure when using the default chemical filter, even in the case when the maximum number of allowed ligand orientations is set  <dig> times larger than the default value.

authors' contributions
lad worked in the typing of ligand atoms, the filtering of the data to create non-redundant sets, the data mining to extract several statistics from the database and in the design and testing of the new rules for chemical matching. he also was in charge of most of the manuscript writing. la designed and leaded the work to structure the data into a sql server. pm designed and built a user-friendly graphical interface with wide possibilities for querying the database on a web server. em conceived, designed and coordinated the project, created the program to identify and extract structural information on the protein-ligand complexes, and took an active part in manuscript writing. the four authors read and approved the final version of the manuscript.
