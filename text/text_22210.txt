BACKGROUND
identification of recombination events and which chromosomal segments contributed to an individual is useful for a number of applications in genomic analyses including haplotyping, imputation, linkage disequilibrium  <cit> , signatures of selection, and improved estimates of relationship and probability of identity by descent  <cit> . this is particularly true for genomic prediction which has become an important tool in modern livestock breeding programs to predict the merit of individuals by estimating the genome-wide effects of the alleles they inherited from their ancestors  <cit> . it is expected that the accuracy of prediction will be even higher once it is based on causal variants identified through sequencing  <cit>  instead of the currently used linked markers. in livestock, individuals of high genetic merit, particularly males, are widely used which leads to an overrepresentation of their genetics across the population. this stratification can be problematic for population based phasing algorithms which rely on samples being unrelated to each other and reasonably representative of the spectrum of genetic diversity  <cit> . on the other hand this high level of relatedness between individuals provides a structure of high linkage disequilibrium which can be used to track chromosomal segments  throughout the population. by sequencing these overrepresented individuals and genotyping their descendants with high density marker panels, their full sequence data can be imputed  <cit>  for around one tenth of current sequencing costs. availability of sequence data for a large number of samples will increase the power to identify causal variants, which in turn can replace the currently used evenly spaced marker panels with a smaller subset of trait specific variants that are either causal or in perfect ld with the causal variants  <cit> . this implies the ability to accurately identify and track haplotypes in the population.

here we present hsphase, an r package that implements a fast, deterministic and robust method for half-sib family structures to identify recombination events, phase family groups, impute and phase un-genotyped sires and build a library of haplotypes  <cit> . the package also makes use of this population structure to evaluate correctness of recorded pedigrees, identify and fix pedigree errors, i.e. reassign individuals with wrong pedigree records to their correct sires; or even reconstruct family groups without pedigree records. if genotypes from candidate parents are available the package can be used for parentage verification.

additional functions allow identification of genomic mapping errors, evaluation of phasing results generated by hsphase or other phasing programs. hsphase will also generate a blocking structure of chromosomal segments that define which progeny carry segments identical by descent. this can be used to improve phasing of the paternal sequence data  <cit>  and allows precise sequence imputation in the offspring. imputation is important in association studies and genomic prediction to increase accuracy and power since a large number of samples can be genotyped at lower density  and imputed up to sequence level or to denser marker panels, which increases the level of linkage disequilibrium between snp and causal variants  <cit> .

hsphase seamlessly integrates into the r environment for pipelined analyses and provides a range of diagnostic plotting functions that permit rapid visual inspection of results and evaluation of datasets. functions for pedigree checking, reconstruction and parentage assignment can be used independently or as part of phasing workflow. for phasing purposes, the main advantages of hsphase are that is it extremely fast in comparison to population based phasing methods, can be used with small datasets and it is not affected by sampling stratification. it also builds blocks of chromosomal inheritance in the half-sibs which makes it simple to impute when paternal sequence or higher density marker haplotypes are available. the package is sufficiently fast to be used directly on sequence data.

implementation
the hsphase package exploits the linkage disequilibrium found within a half-sib family and the information content of opposing homozygous snp markers  <cit> . an opposing homozygote, for any given marker, is defined as one individual being homozygous for an allelic variant and the other individual homozygous for the alternative allele.

consider, for example, a sire-offspring relationship, opposing homozygotes can be used to identify mendelian inconsistencies which should not occur in a true relationship apart for genotyping errors or an unlikely mutation. alternatively, between unrelated individuals the number of opposing homozygotes is much higher. this difference can be used to e.g. exclude a parentage relationship  <cit> . the same applies to other relationship levels, with half-sibs showing less opposing homozygotes between themselves than unrelated individuals . while the relationship between parent-offspring is essentially 100% accurate with a high enough number of markers, the separation between half-sib groups and unrelated individuals is not always so clear cut . however the two distributions are still highly separable and can be used to assign relationships. hsphase implements four different methods to define the separability between related and unrelated individuals. the first method uses a pre-determined cut off based on the maximum number of expected opposing homozygotes in a family. the second approach uses the regression coefficients  estimated from a large population of sheep half-sib families genotyped on the ovine50k illumina beadchip; these are the default values based on a simple linear regression of the number of opposing homozygotes, but user defined coefficients better suited for a particular population can also be used. the third approach implements the method proposed by calus et al. <cit>  based on the expectation of opposing homozygous loci in half-sib families in contrast to unrelated individuals using population wide allele frequencies. the cut off value used to accept a relationship is 90% of the average difference between the predicted number of opposing homozygotes in unrelated individuals and half-sib families. the last method uses the expected number of recombinations to define relationships; hsphase uses opposing homozygotes to build blocks of haplotypic relationships in family groups, if an individual is not truly part of a group it will need a large number of recombinations to maintain mendelian consistency with the other family members. these recombinations are of course not real but can be used to exclude a relationship . to build the pedigree itself, the matrix of opposing homozygotes is used to calculate the manhattan distance between all pairs of individuals. the algorithm then recursively builds a distance matrix and hierarchically clusters them into two groups using ward’s minimum variance method. at each iteration, the groupings are checked against the separation criterion being used and if all individuals are below the threshold they are assigned to a family group; else the process is repeated.

for parentage assignment a square matrix with the number of opposing homozygotes between all pairs of individuals is calculated. parent-offspring pairs can then be assigned based on a maximum number of allowable mendelian inconsistencies . figure  <dig> illustrates for a cut off threshold of 1% genotyping errors. for small parentage panels  the maximum number of mismatches allowed should be between  <dig> and  <dig>  if genotypes from a known pedigree are available they can be used to calculate the separation value which is the difference between the smallest number of opposing homozygotes found across all false sire-offspring relations  and the maximum number of opposing homozygotes in the correct sire-offspring pairs divided by the maximum number of opposing homozygotes found in the dataset . the separation value can be useful to design parentage panels or test their efficacy for parentage testing. the higher the value, the better the panel is at resolving parentage assignments and, if the value becomes zero or negative, a perfect separation between true and false sire-offspring relations is not possible.

opposing homozygotes are also used for phasing and hsphase implements the method described in  <cit> . briefly, all opposing homozygous loci are identified and these unambiguously identify heterozygous sites in the parent. these are then used to assort individuals into groups according to the paternal allele they received, which in turn provides information about the most likely phase in the ancestor. blocks of consecutive markers that are co-inherited across groups become obvious at this stage and allow detection of recombination points. these can be visualized as a block like structure across the individuals’ genome where each block reflects the inherited paternal haplotype . paternal haplotypes are inferred by simply averaging the sum of the genotypes at each marker that inherited a particular strand  from its ancestor. paternal haplotypes in the offspring are identified by matching the inherited blocks in the offspring with the phased haplotypes of the parent. maternal haplotypes are then obtained by subtracting the paternal haplotype from the individual’s genotype. the method does not depend on population parameters and even small datasets give accurate results . a detailed description of the algorithm implemented in hsphase and an evaluation of its performance is given in  <cit> . to improve the algorithm’s performance most of the code was written in c++ and parallelized.

hsphase was implemented as a package for the widely used r statistical programming environment and wrapper functions make it easy to use and facilitate integration with other r/bioconductor packages. programs such as snpqc <cit>  output files in a format that can be used by hsphase. source code, compiled package, tutorial and example dataset are available from the project’s website . in the following section, the main components of the package are briefly described.

main functions in hsphase
input data
hsphase requires a snp map file , a genotype data file  and a pedigree file . the latter can be generated from the data itself if no pedigree information is available or the pedigree is unreliable.

pedigree reconstruction and parentage assignment
the function ohg calculates a square matrix with the number of opposing homozygotes between all pairs of individuals; these are then used by rpoh to reconstruct family groups by iterative hierarchical clustering in the absence of pedigree data. if a pedigree file is available the function pedigreenaming will match the inferred family groups with the most likely parents and can be used to correct pedigree errors or to evaluate efficiency of pedigree reconstruction. the accuracy of pedigree assignment decreases if individuals belong to overlapping generations with common ancestors. results of pedigree reconstruction can be visualized with the hh function which generates a heatmap of the relationships for easy detection of pedigree errors in the original pedigree  and evaluation of pedigree assignment . the rpoh function calculates a distance matrix from the opposing homozygotes matrix and was written in c++ with multithreaded support to accommodate large datasets.

these functions are not restricted to dense marker panels and can be used to assign parents using small parentage testing panels, for example. function pogc takes the matrix of opposing homozygotes as input and returns a pedigree of parent-offspring assignments based on the maximum number of mismatches allowed . function ohplot also uses the matrix of opposing homozygotes and a pedigree file to plot the separation value of the dataset and the sorted results of all pairwise comparisons . ohplot is useful to check pedigrees, evaluate parentage testing panels and guide decisions on acceptable mismatch thresholds. the function can also be used without pedigree information and will simply sort and plot the values of the upper triangle of the opposing homozygotes matrix, the separation value reported is then the maximum separation found between sorted value pairs. it can help to identify the maximum number of opposing homozygotes allowed for pedigree reconstruction . the function also reports average values for the number of opposing homozygotes expected in full and half-sib families and in unrelated individuals according to  <cit> ; plus the 90% threshold used for pedigree reconstruction.

block structure and recombination events
the bmh function creates the blocking structure for the half-sibs and splits them into two groups based on the chromosomal segments they inherited from either one of the sire’s haplotypes. blocks for each chromosome are constructed by selecting the first opposing homozygous snp on the chromosome and partitioning all members of a half-sib family into two groups according to their genotypes . starting from this initial grouping the function steps through the snp according to their map order to allocate individuals into one group or the other one, until the end of the chromosome is reached. at the end of the process each individual at each snp will have been assigned to one of the two groups; the function returns a matrix of individuals by snp coded as  <dig> and  <dig>  recombination between two adjacent snp is an unlikely event, so from the second snp onwards individuals are assigned to a group by minimizing the number of individuals that have to change groups in relation to the previous grouping . recombinations are identified when an individual moves from one group to the other based on its opposing homozygous status. the bmh function performs a validation step for the recombination by checking if during the next steps  the individual does not return to the previous group. recombinations occurring on both sides of a single snp in a single individual are interpreted as a genotyping error and ignored. group assignment is based on family relationships which makes bmh sensitive to pedigree errors  <cit> . in addition, only a proportion of snp will be homozygous for any given individual at any particular snp; family sizes need to be sufficiently large to be able to reliably assign individuals to groups and markers sufficiently dense to correctly detect recombination events. as rule of thumb, families with at least  <dig> individuals and 50 k panels should yield very accurate results.

if parent-offspring haplotypes are available, the hbp function can be used to compare an offspring’s haplotypes with its ancestor’s haplotypes. the function returns a matrix with the same block structure of bmh and can be used to evaluate phasing results of other programs – a single parent-offspring is sufficient in this case. combined with the imageplot function  it is straightforward to evaluate results and identify problems. extreme recombination patterns on the imageplot are indicative of incorrect phasing. if individuals are unrelated the imageplot will have a chaotic structure  which can be also used to check the pedigree.

the function pm uses the block matrix as input and returns a matrix of all recombination events per individual and between snp. function recombinations returns a count of the number of recombinations per individual. rplot displays recombination counts per snp and assists identification of local variation in recombination rates or mapping errors .

phasing and imputation
the function ssp imputes and phases the paternal haplotypes. the function infers the sires’ haplotypes at each snp by simply averaging the sum of the genotypes of the half-sibs in a blocking group . averages are rounded to the nearest integer and assigned to the sire’s haplotypes.

the phf function phases the offspring and returns their paternal haplotypes. it uses the sire’s phased haplotypes as a reference and overlaps the block matrix to select which parts of the haplotypes each individual inherited. once the paternal haplotypes of the offspring are created, the maternal ones are obtained by simply subtracting these haplotypes from the original genotypes.

the function impute imputes the paternal strand of half-sib families from low density genotypes to high density by using the sire’s haplotypes as a scaffold. similarly to the function phf it simply uses the blocks to match the haplotypes of the offspring with the correct haplotype of the sire and fills the missing markers with the haplotypes of the denser panel.

for large datasets the para function provides a parallelized wrapper to partition the job across multiple cpus.

RESULTS
to discuss the use of the hsphase package, a dataset of  <dig> brown hanwoo korean cattle genotyped on the illumina 700 k bovinehd beadchip snp array was used. individuals belonged to  <dig> half-sib family groups with family sizes ranging from  <dig> to  <dig>  genotypes for the  <dig> sires were also available and pedigree records were accurate. for reference purposes the korean hanwoo are a pure-bred heavily selected population with a small effective population size  and there is some ascertainment bias in the chip which was not specifically designed for the breed. population differences among unrelated individuals is expected to be lower than in populations with large ne.

pedigree reconstruction
as previously discussed hsphase implements four methods to define thresholds for pedigree reconstruction. unfortunately no approach is robust across any scenario and the different methods will perform better or worse in different situations. the accuracy of reconstruction will depend on the sample size and genetic diversity in the population. a first look at the data using ohplot  can provide some indications as to the separability of family groups from unrelated individuals and help define appropriate parameters for the different methods. for this data there is a clear separation between half-sibs and unrelated individuals but this is not always the case, as shown in figure  <dig>  due to the clear separability of the dataset, the first method  was able to perfectly reconstruct the pedigree  using the cut off value shown in figure  <dig> . the second method  using regression coefficients derived from sheep was unable to split two family groups; i.e. four families were grouped into two. there was no family mixing which suggests that the coefficients are too stringent for this population and probably suboptimal. a wider tolerance would have allowed the final split. we have obtained good results with sheep populations and other cattle breeds using these coefficients  but this approach may lack generalization. the third method follows  <cit>   and failed to assign  <dig> individuals to their correct sires . albeit not perfect, the accuracy is still high and in other scenarios it works well; when we used this approach on the full hanwoo data  we obtained 100% accurate pedigree inference . the lower accuracy here is probably due to the low numbers of individuals and imprecise allelic frequency estimates which suggests the method is better suited for large sample sizes or when population allelic frequencies are available from another source. the last method uses the blocking structures within families to count recombination events and builds groups based on a maximum allowable number of recombinations. figure  <dig>  shows the reconstructed pedigree using chromosome one as a reference with a maximum of  <dig> recombinations allowed. the method failed to group  <dig> individuals from one family . this approach requires some prior knowledge of recombination expectations per chromosome. if the number of recombinations allowed was increased to  <dig> the pedigree would be perfect . other chromosomes can be used . as a rule of thumb, shorter chromosomes with less recombination tend to yield better results.

generally speaking all methods are quite susceptible to the parameters used. some care should be taken to define adequate ones for the data at hand and check if the results seem satisfactory . another sanity check is to inspect the block structures of the families which should not exhibit excessive numbers of recombinations .

map errors
map errors due to errors in the reference assembly can also be identified by visual inspection of the block structures . this is characterized by an individual snp  that shows an excessive number of recombinations. map errors are consistent across families, meaning that the same snp show excessive recombination across all family groups. with the method used in hsphase, a map error leads to downstream blocking problems and individuals start showing patterns of recombination at the same snp . this can be corrected by deleting the region with the map error, provided it is not too long. the difference between map errors, regions of high recombination and snp genotyping problems are not entirely straightforward, particularly if the marker panel is not very dense.

accuracy of sire inference and imputation
to test the accuracy of imputation from low to high marker density we selected  <dig>  snp – the snp in common with the 50 k bovine panel – in the hanwoo offspring and excluded the others. we built the block structures for this subset of snp and then used the impute function to fill the gaps using the sire’s phased genotypes as a scaffold. the average accuracy of imputation  for the  <dig> offspring was  <dig>  . the worst accuracy was  <dig>  and the best  <dig> . note that the accuracies were high but they were probably biased upwards since the sires were phased using hsphase and there is some circularity in these values. in the absence of true phased sire data this issue cannot be resolved unambiguously. we also evaluated the accuracy of sire inference . the average accuracy was  <dig> , with the worst sire  <dig>  and the best  <dig> . undefined regions were not called . a comprehensive evaluation of the phasing method used in hsphase is given in  <cit> .

recombination events
the hanwoo data is too small to reliably identify local variation in recombination rates . instead, for illustration purposes, we used a large population of sheep  genotyped on the illumina ovine 50 k beadchip . for large datasets analyses can be sped up with the para function which allows jobs to run in parallel and acts as a wrapper for the main functions in hsphase. although this population was reasonably large the time needed for the analysis without parallelization was ~55 seconds and with  <dig> cores this came down to ~28 seconds. the main reason for the nonlinear speed increase is that each individual analysis was fast and there is limited benefit from the parallelization . speed increases are more obvious with denser marker panels .

CONCLUSIONS
hsphase is an r package for analysis and visualization of genomic structures in small half-sib groups. the package can be used to reconstruct pedigree, assign or verify parentage, impute and phase un-genotyped paternal ancestors, phase the half-sib groups and detect and quantify recombination events. diagnostic plots assist identification of pedigree, mapping and phasing errors. whilst designed for high density snp arrays the algorithm is extremely fast and can be used directly on sequence data as it becomes available. auxiliary functions to impute from low to high density markers and parse datasets are also included in the package.

availability and requirements
the package is freely available  from the comprehensive r archive network  or from http://www-personal.une.edu.au/~cgondro2/hsphase.htm. source code, compiled package, a tutorial and example dataset are available from the project’s website.

•project name: hsphase

•project home page:http://www-personal.une.edu.au/~cgondro2/hsphase.htm

•operating system: platform independent

•programming language: r  <cit>  and c/c++

•other requirements: the package depends on the r packages snowfall <cit> , rcpp <cit>  and rcpparmadillo <cit> .

•license: gnu gpl 3

competing interests
the authors declare that they have no competing interests.

authors’ contributions
mf and cg designed the algorithm and experiments to test it. mf wrote the r package. shl, jhjw and bpk advised on the experimental design to test the package. all authors read and approved the final manuscript.

