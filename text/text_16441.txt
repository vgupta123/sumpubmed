BACKGROUND
proteins in the cell rarely act in isolation and in fact, are known to interact with other biomolecules like dna, rna, other proteins, small molecules etc.  <cit> . studying and understanding these interactions will provide insights into the physiological roles and regulation mechanism. these interaction sites can further be studied for the effect of mutations or for therapeutic purposes. there are excellent experimental methods available to study protein-protein interactions  and also to pinpoint the site of interactions using mutation studies, structure determination methods  and label transfer  <cit> . protein-protein docking is the computational method to study protein-protein interactions, based on electrostatics, shape and geometric complementarities  <cit> . docking of the interacting pairs of proteins provides insights into the specific atomic details of interactions. there are several docking programs available as downloadable softwares and as webservers . these programs employ scoring functions which are based on ranking the poses based on the energy values. however, upon docking, there are number of proposed solutions and selection of biologically meaningful pose from this pool still remains a challenging task  <cit> .

it is possible to limit the search space by guiding the docking around certain residues based on evolutionary or biochemical data. however, in the absence of such an information or even from a set of docking decoys, selection of the best docked pose becomes a difficult task. in these cases, one can analyze the interfaces which are proposed by the docking program. we had recently proposed a scoring scheme, named dockscore, to re-rank the docked poses and identify the native or near-native poses from the pool  <cit> . dockscore is initiated with the identification of interface residues based on distance-based criteria and then considers several interface parameters namely surface area, conservation, hydrophobicity, spatial clustering and short contacts to perform the scoring.

we had assessed the performance of dockscore on  <dig> protein-protein complexes and capri targets and compared the performance of our scoring scheme with two other methods namely ddfire  <cit>  and firedock  <cit>  for our testing dataset. we have shown that dockscore was able to rank the native complex as a top-ranking pose in  <dig> out of the  <dig> complexes tested, whereas ddfire and firedock were able to achieve this in  <dig> of the cases  <cit> .

there are several scoring programs available as a downloadable package  <cit>  in order to re-rank the docked poses, but the webserver implementation or availability for easy access is less common  <cit> . in this article, we report the availability of dockscore in the public domain as a webserver for the scientific community. this includes user-interactive tools webserver and convenient graphical display of interface regions of high-scoring poses. the webserver can also be used to perform scoring of protein-protein interactions or re-ranking the docked poses to identify the biologically meaningful pose out of the pool. users can upload a zipped file containing the pool of docked poses which need to be ranked. each parameter of the scoring scheme can be turned on/off depending on the discretion of the user. in the output, we provide a list of all docked poses with all the scores marked in the list. user can also visualise the five top-most poses in jmol with the interface residues from two protein chains colored differently. the file containing different scores and ranks of the docked poses can be downloaded in csv format.

implementation
dockscore webserver parameters
the webserver presented here employs the scoring scheme called dockscore to perform the ranking of the docked poses. it utilizes the parameters of the interface formed upon interaction of the two given protein chains. these interface parameters are surface area, conserved residues, hydrophobicity, short contacts and spatial clustering. there is an additional parameter, which is based on the presence of positively charged residues at the interface. this can be employed selectively and especially when the interacting protein chains are dna-binding  or rna-binding in nature. the presence of positively charged residues at the interface is penalized to minimize the overlap of protein-protein interaction site with that of dna-binding region.

the interface residues are identified using the distance-based criteria, inter-chain cβ-cβ distance cut-off of 7 Å. the interface parameters that are employed for performing the ranking are explained below briefly. weights for each of the parameter can be easily assigned, if a new training dataset is choosen by estimating the importance of each parameter  each of these parameters is assigned weights based on the training dataset.

the parameters, which are used for the scoring, are explained briefly  and for details regarding each parameter, please refer the dockscore publication  <cit>  and the webserver help page.figure  <dig> the methodology and parameters of the webserver. all the input options are listed and a link for sample run is provided. link for help page and methods behind the webserver are also provided. different parameters which are considered for performing scoring: the user can select the parameters to be used for scoring. for assessing the conservation of interface residues, user can select the parameters for collection of homologs and the conservation score cut-off can be set to  <dig> if close homologues are employed, however when distant homologues are included in the alignment, this threshold should be set to  <dig> 

surface area: it is computed using naccess  by s. j. hubbard, j. m. thornton).

conservation of residues: the individual protein chains are used as queries to perform psi-blast  <cit>  in order to collect homologues from the swissprot database and multiple sequence alignment is built using clustalw  <cit> . conservation scores per residue are evaluated using our in-house program motifs  <cit> , where permitted amino acid exchanges and identities are scored high. the score cut-off of  <dig> is usually used for close homologues and  <dig> if the distantly related members are included in the alignment, to identify the conserved residues . the number of conserved residues at the interface is normalized by the total number of interface residues.

inter-chain short contacts: our in-house program coilcheck  <cit>  is employed to identify short contacts.

spatial clustering: the pairwise distances between the interface residues were computed between the two chains and the residues with a cβ-cβ distance cut-off of 14 Å were considered as spatially clustered residues.

hydrophobic residues: we ranked those docked poses with high numbers of hydrophobic residues  at the interface with a high score, as protein-protein interfaces are known to be rich in such residues  <cit> .



input files
for performing scoring, the following files should be supplied as an input to the server :figure  <dig> the workflow of the webserver. input options: user can upload a zipped file containing all the docked poses to be ranked and the coordinate files for both the protein chains. different parameters which are considered for performing scoring: the user can select the parameters to be used for scoring. for assessing the conservation of interface residues, user can select the parameters for collection of homologs. main output options: the five top-ranking poses can be visualised with jmol and the list with the scores can be downloaded in csv format.

zipped file containing the docked poses in pdb format with coordinates of both the interacting chains

pdb coordinates and chain id of both the protein chains used to perform docking



the computation is not initiated if the files are not in pdb format and coordinates for both the interacting chains are not provided by the user.

output details
after performing scoring, the following scores are reported:scores for each of the parameters individually

average score



all parameters are assigned an equal weight of  <dig> and the average is reported for each docked pose. <dig>  normalized weighted score



the weights derived were further normalized by the total sum of weights and normalized weighted score was calculated. <dig>  z-score for the normalized weighted score



for each pose, a z-score is calculated to assign a significance of normalized weighted score. we have tested this on our test dataset  and note z-score > <dig>  is discriminatory to identify the native  pose .

in the output page, webserver displays a list as an output with docked poses ranked according to the normalized weighted score . the list can be sorted according to any of the parameter/score by clicking on that column. this list with the entire scores can also be downloaded from the webserver in the csv format. the user can input his/her email id and the result link will be posted at this address.

subsequent to the scoring, the five top-most poses can be visualized using jsmol . the interface residues from the two interacting chains are highlighted in different colors .

RESULTS
the server can be used for performing the scoring of protein-protein interactions. figure  <dig> represents the screenshot of the server explaining all the parameters considered for scoring. the user has a choice to select parameters to be employed for scoring, or the user can rank the poses based on any parameter or normalized score of their choice upon scoring.

framework
this website is in the public domain and is open to all users and there is no login requirement.

in the output page, webserver displays a list with docked poses ranked according to the normalized weighted score. the list can be sorted according to any of the parameter/score by clicking on that column. this list with the entire scores can also be downloaded from the webserver in the csv format. the user can input his/her email id and the result link will be posted at this address.

for an example output, it takes 70 seconds to rank  <dig> poses , for a homodimer with  <dig> residues on the webserver with  <dig> cores; intel xeon cpu e <dig> @  <dig> ghz and 5gb ram to finish the computation and obtain the results. for all the docked poses, a link is provided to view the interface residues and the results for each of the parameter . subsequent to the scoring, the five top-most poses can be visualized using jmol . the interface residues from the two interacting chains are highlighted in different colors.figure  <dig> an example output for individual pose. for all the docked poses uploaded on the webserver, a link is provided for viewing the interface residues and the result for each of the interface parameter.



test example
dockscore is shown to work very well earlier  <cit> . however, as an example, we highlight the case study which is one of the capri- <dig> targets . 1syx is a crystal structure highlighting the interactions between full-length protein u5-15 k and gyf-domain of u5-52 k  <cit> . we performed docking between these two individual proteins using frodock  <cit>  to obtain  <dig> poses, and the native complex structure was added to this pool of poses. this pool was submitted to the webserver and the docked poses were ranked. the native complex was ranked first and the pose ranked second was structurally very similar to the native complex structure . the overlap among interface residues was 90% and 86% for the two chains . the scores and fraction of overlap between the interface residues  are provided as additional file  <dig> figure  <dig> interface analysis of a capri target. for 1syx, one of the chains is superposed for native and the pose ranked next to native. in yellow is the second protein chain from the native complex and blue represents the second chain of the pose ranked second. the interfaces were very similar in both the poses .
interface analysis



chain a
chain b

native
ranked next to native
native
ranked next to native
in the example of 1syx, the native complex was ranked as the first pose using dockscore. the pose ranked next to the native complex was structurally very similar to the native pose and the interface residues were overlapping with the native complex interface residues .

*overlapping interface residues between native and the pose ranked second.



scale-up in docked poses
we next examined the effect of sampling additional number of docked poses, rather than  <dig> poses, with two cases referred as ‘example’ and a ‘difficult example’ derived from the dockscore testing dataset.

in the ‘example’ , which was a success while testing dockscore, we sampled  <dig> docked poses to see if dockscore is still able to rank the native pose as a top-ranking pose out of a pool of  <dig> docked poses. we find that the performance of dockscore is not reduced due to enhanced sampling . in the ‘difficult example’ , the native pose was not the top-ranking pose while performing the test runs. so, we sampled  <dig> poses to see if dockscore ranks the native pose as top-ranking one and still the performance did not seem to improve .

CONCLUSIONS
dockscore helps in distinguishing the native/near-native complexes from the pool of docked poses. it can be employed post-docking to rank the poses. different interface parameters are considered to perform this scoring like interface surface area, conservation, hydrophobicity, spatial clustering and short contacts. we implemented this scoring scheme in the form of webserver for its use by the community. the web tool provides a list of all scores for the given docked poses provided as input. the top-ranking poses can also be visualized.

availability and requirements
project name: dockscore webserver

project home page:http://caps.ncbs.res.in/dockscore/

operating system: platform independent

programming language: perl, java, javascript

other requirements: java plug-in for the respective browser

license: free for academic use

any restrictions to use by non-academics: free for academic purposes. for commercial use please contact the corresponding author



the software driving the webserver can be made available upon request for academic use.

additional files
additional file 1: 
z-scores for the test cases. the z-scores for all the docked poses and native pose is calculated for the normalized weighted score. the scores for native pose is plotted as filled circles.

additional file 2: 
scores for the test example 1syx. the scores for each of the docked poses are listed and the last column highlights the fraction overlap of interface residues with the native pose.  <dig> pdb  is the native complex.

additional file 3: 
large scale docking for a success case. the list provides the scores for  <dig> poses of a complex 1ghd . sheet  <dig> has results for  <dig> poses and sheet  <dig> has results for  <dig> poses and the native poses  are marked in bold.

additional file 4: 
large scale docking for a failed case. the list provides the scores for  <dig> poses of a complex 1izy . sheet  <dig> has results for  <dig> poses and sheet  <dig> has results for  <dig> poses and the native poses  are marked in bold.



competing interests

the authors declare that they have no competing interests.

authors’ contributions

rs conceived the idea and designed the project. dockscore software was written by sm and web implementation was performed by okm. both sm and okm tested the server and wrote first draft of the manuscript. rs provided critical comments and improved the manuscript. all authors read and approved the final manuscript.

