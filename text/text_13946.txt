BACKGROUND
the sirens' call of bayesian methods is that we can do without the parameters of models and, instead, compute probabilities of interest directly, indicating for example how likely a biological fact is given our data. the price one pays for that convenience is on one hand the conundrum of which prior distributions to choose and how to set their hyper-parameters; the frequent use of uniform priors is evidence that this is indeed non-trivial. on the other hand, unless the choice of likelihood and prior yields simple posteriors which we can integrate symbolically, we have to resort to sampling for example with markov chain monte carlo   <cit> .

in the following we will concentrate on hmms, stochastic functions of markov chains, which have not only been used extensively for discrete sequences--pairwise-sequence alignments with pair-hmms  <cit> , gene finding with labeled hmms  <cit> , and detecting remote homologs using profile hmms  <cit> --but also for continuous-valued observations, such as gene expression time-courses  <cit> . continuous observation sequences from either dna microarrays or next generation sequencing experiments, note that the proportion of mapped reads in an interval is frequently used as a continuous measure of copy number, to detect chromosomal aberrations or copy number variations lead to the same fundamental computational problem and share characteristics of the data. the goal is to segment an observation sequence into regions in which there is little variation around a common mean. in other words, the assumption is that the data can be approximately described by piece-wise constant functions. indeed, if hybridization intensity was an exact, un-biased measurement of dna concentration before amplification, the sequence of hybridization intensities of probes along a chromosome would yield a piece-wise constant function in arraycgh experiments. this assumption holds true for a mixture of different cell populations because a finite sum of piece-wise constant functions is again a piece-wise constant function.

a wide range of methods for copy number detection in arraycgh data have been developed in recent years, including change-point detection based methods  <cit> , smoothing based methods  <cit> , and hierarchical clustering  <cit> . here, we concentrate on hmm-based approaches which have been proposed for segmenting sequences of continuous-valued observations and shown to match or improve upon the state-of-the-art  <cit> . once a model is trained from the data, either using maximum likelihood  or maximum a posteriori , the segmentation is given by the most likely state sequence obtained with the viterbi algorithm  <cit> . the segmentation, however, is highly dependent on the model parameters. a small change in the computed parameter values can adversely affect the recovered segmentation. a full bayesian approach alleviates this dependence by integrating out the model parameters. as analytic integration of a complex high dimensional model is impossible for most distributions, the bayesian approach requires the use of numerical integration techniques like mcmc  <cit> , for example by direct gibbs sampling  <cit>  of model parameters and state paths. scott  <cit>  reports that combining the forward-backward recursions  <cit>  and gibbs sampling improves the converge rate and consequently the running time. nevertheless, mcmc remains substantially slower than training one model and running viterbi once and the loss in reliability introduced by relying on one ml or map model is ignored in practice. for discrete emissions, compressing sequences and computing forward and backward variables and viterbi paths on the compressed sequences yields impressive speed-ups  <cit> . however, discretization of continuous emissions, similar to vector quantization used in speech recognition  <cit> , is not viable as the separation between the different classes of observations is low since the observations are one-dimensional. moreover, maximal compression is to be expected for small number of discrete symbols and clearly compression ratio conflicts with fidelity in the analysis.

for a different task, arguments about spatial relations between groups of multi-variate data points were used to achieve considerable speed-up. moore and colleagues used modified kd-trees, a data structure to efficiently execute spatial queries such as determining the nearest neighbor of a given point, to accelerate k-means  <cit> . the fundamental insight is illustrated in figure  <dig> . in the reassignment step of k-means one has to find the nearest centroid for every data point. due to the kd-tree, there are groups of points contained in a node of the tree for which this decision about the nearest centroid can be made simultaneously by a geometrical argument about the vertices of the hyperrectangle defined by this node. a similar kd-tree based approach was used in speech recognition  <cit>  to quickly find the most important components in a mixture of large number of gaussians and thus approximate the full observation density in one individual hmm state with multi-variate emissions.

at the core of our approach is a similar geometrical argument about several uni-variate data points based on a modified kd-tree. we adaptively identify blocks of observations, cf. figure  <dig> . for all observations in a block we now estimate, at least conceptually, the most likely state simultaneously depending on the means of the gaussians in each state to gain a considerable speed-up proportional to the average block length. similarly, we can avoid sampling states for each individual observation in a block if we can bound the posterior. considerable care has to be taken for combining blocks and to bound the errors introduced by the approximations based on geometric arguments.

in summary, we

• propose the first use of spatial index structures for several consecutive observations and approximate computations based on geometric arguments to substantially speed-up the problem of segmenting sequences of continuous observations using hmm,

• demonstrate that very frequently used biological datasets of high relevance measuring chromosomal aberration and copy number variations are consistent with our assumptions of piece-wise constant observations with added noise, and

• achieve speed-ups between  <dig> and  <dig> on those biological datasets while maintaining competitive performance compared to the state-of-the-art.

methods
hmm
we only consider hmms with gaussian emission distributions; see figure  <dig>  for an example and  <cit>  for an introduction. we will use the following notation: n denotes the number of states, s = {s <dig>  s <dig>  ..., sn} the set of states, t the length of an observation sequence o = {o <dig>  o <dig>  ..., ot} with ot ∈ ℝ, a = {aij}1≤i,j≤n the transition matrix, π =  the initial distribution over states, b=μ <dig> σ <dig> …,μn,σn <dig> with μ <dig> ≤ ... ≤ μn are parameters of the emission distributions, and q = {q <dig>  q <dig>  ..., qt} the hidden state sequences with qt ∈ s. from an observation sequence o we can obtain a maximum likelihood point estimate of the parameters  using the expectation-maximization  or baum-welch  <cit>  algorithm and compute the most likely path using the viterbi algorithm  <cit> .

mcmc sampling
bayesian analysis requires choosing prior distributions on parameters and we use standard conjugate prior distributions following  <cit> . specifically, we choose μi~n,σi-2~gamma,ai~dirichlet, and π ~ dirichlet, where μ˜i,σ˜i,ai,bi,λai, and λπ are the hyperparameters of the model.

it is only possible in some trivial cases to compute posterior distribution in closed form using analytic integration. in most applications, specially for high dimensional distributions, monte carlo integration techniques, like mcmc sampling by gibbs sampling or metropolis-hastings, are easier to compute and generally produce more accurate results than numerical integration  <cit> . scott  <cit>  compares various mcmc approaches and strongly argues in favor of forward-backward gibbs sampling , which has been successfully used by others  <cit> , for it's excellent convergence characteristics. we briefly summarize fbg-sampling for an hmm λ = ; see  <cit>  for details:

 <dig>  choose initial parameters θ <dig> = 

 <dig>  perform the following steps for iteration  <dig> ≤ m <m.

 compute forward variables p for  <dig> ≤ t ≤ t iteratively using the forward algorithm  <cit>  for all i.

 sample qtm~p.

 sample the state sequence qm in a backward fashion for t >t ≥  <dig> 

 qtm~p∝paqtm,qt+1m. 

 sample,

 θm+1~priordistribution. 

despite its fast convergence, fbg-sampling takes o time for m iterations. for long observation sequences with millions of observations, as they are common in biological applications, realistic values for m and n make fgb-sampling intractable. in the next section we discuss how fbg-sampling can be approximated to improve the running time to o, where γ is the compression ratio of the observation sequence, while maintaining good statistical properties. we refer to our sampling technique as approximate sampling.

approximate sampling
through application of a modified kd-tree algorithm , we compress the observation sequence o = o <dig>  ..., ot into o′=o1′,…,ot′′, cf. figure  <dig> , and store precomputed first moment, second moment, and the number of observations compressed into block ot′ for all i ≤ t'. in subsequent mcmc iterations we assume that observations compressed in a block ot′ arise from the same underlying state. in other words we ignore the contribution of the state paths that do not go through the same state for ot′. by ignoring those state paths, we refer to them as weak state paths, when computing forward-variables and by reusing pre-computed statistics we are able to accelerate sampling.

at first ignoring weak state paths may sound like a very crude approximation for computing forward variables. but in many applications this is certainly not true. we demonstrate with a symmetric gaussian hmm that the weak state path assumption is a fairly realistic approximation and leads to faster sampling. we define a symmetric hmm λ =  with n states s <dig>  ..., sn, where we set self-transition probability aii = t and non-self-transition probability aij=1-tn- <dig> for  <dig> ≤ i ≠ j ≤ n, and b = {, ..., }. given a sequence of observations o  and its compressed form o' we describe an important lemma and some remarks below.

lemma  <dig>  let oi-1=o <dig> …,oi- <dig> o′=oi,…,oi+n- <dig> omin′= minoi∈o′ol,omax′= maxoi∈o′ol,d= minj≠k|μj-μk| and pp≤α. assuming there exists a state sx s.t. τ= mino′min-μsx-1+μsx <dig> μsx+μsx+12-o′max≥ <dig>  we can show that ∑∈snp∑s∈sp≤αn-1+c2nnn-1), where r=1-tt and c=e-dx2σ <dig> 

proof. see appendix.

remark  <dig> for realistic values of τ, t, and n, the contribution from ignored weak state paths, which we call ϵ, can be very small. if ϵ ≪  <dig>  ignoring weak state paths will not introduce large errors in the computation. for the 2-state example in section: results, where t =  <dig> , d =  <dig>  and σ <dig> =  <dig> , ϵ is at most  <dig> for a block length n ≤  <dig> if we assume τ >  <dig>  and α =  <dig>  if τ is much larger and consequently c2nn is much smaller, we can roughly say that n can be as large as  <dig> + log1+rc in a symmetric gaussian hmm.

remark  <dig> we often encounter situations where p ≫ p. even though it is not exploited in the lemma , as a consequence of this, the observation sequence can be compressed into larger blocks keeping ϵ small in practice.

from the above lemma and the remarks we see that the longer blocks created by an algorithm should concentrate around the means of the gaussian distributions. while a brute force algorithm looks at local information, a kd-tree like algorithm alternately looks at both dimensions and utilizes global information like the density of data points  to create better quality blocks. we use a modified kd-tree based algorithm to find such blocks and discuss the details below.

kd-tree based sequence compression
given a starting width parameter w we create a list of nodes from the observation sequence o = o <dig>  ..., ot using the following steps.

 <dig>  let o' = ϕ be the starting list, δ =  <dig>  , level l =  <dig>  and dimension d =  <dig> 

 <dig>  if |maxoi∈o-maxoi∈o|<wδl or |o| =  <dig>  create a node storing the first and second moment of the observations in o, append it to o', and then go to the end step. otherwise, go to the next step.

 <dig>  if d =  <dig>  find om, the median value of the observations in o. partition o into maximal set of consecutive observations o <dig>  ..., oi, ..., op such that ∀o∈oio≤om or ∀o∈oto≥om. for each oi, go to step  <dig> with new input set oi, level l +  <dig>  and d =  <dig> 

 <dig>  if d =  <dig>  divide the input set o into two parts ol = o <dig>  ..., oi and or = oi+ <dig>  ..., o|o| such that |oi-oi+1|≥maxj|oj-oj+1|. then for each set ol and or, go to step  <dig> keeping the level value l unchanged, and setting d =  <dig> 

 <dig>  end step.

in the above recursive algorithm, w states the initial width, δ controls the rate of width shrinking in successive levels of the iterations, and o' accumulates the compressed blocks of observations. the current iteration level l, the current dimension d, and the current input set o are local variables in the recursive algorithm. notice that we start with an empty list o' and at the end of the recursive procedure o' contains an ordered list of compressed observations. to gain further compression of the sequence, we sequentially go through the blocks of o' and combine consecutive blocks if the distance between their means is less than w. we also combine three consecutive blocks if the outer blocks satisfy this condition and the inner block has only one observation. in step  <dig> of the above algorithm, the input set is divided into two subsets and each subset contains half of the elements from the original set. consequently, the height of the recursion tree is at most 2logt and the running time of the above algorithm is o. this overhead is negligible compared to the time that it takes to run m iterations of mcmc sampling.

width parameter selection
for increasing values of w the average block size increases exponentially in the above kd-tree based compression. as a result, the compression ratio γ=t′t plotted as a function of w, has a knee which can inform the choice of w. moreover, methods originally developed to find the optimal numbers of clusters in clustering can be used to find the knee of such a curve automatically. in particular, we use the l-method  <cit>  which finds the knee as the intersection of two straight lines fitted to the compression curve.

fast approximate sampling
given the compressed input sequence o′=o1′,o2′,…,ot′ computing forward variables and subsequent sampling is a straightforward modification of the uncompressed case. in particular we make the following two changes to the fbg-sampling algorithm.

 <dig>  modified forward variables at positions t*= ∑i=1t|o′i| are computed using the following formula,

 p= ∑1≤j≤npajiaii|o′t|- <dig> ∏ok∈o′tp.︸constant time computationusing precomputed statistics 

 <dig>  after sampling the state sequence, parameters are updated ignoring non-self transitions between consecutive observations in ot′.

clearly, each iteration of approximate sampling takes o resulting in tt′ times speed up.

RESULTS
we evaluate fbg-sampling and approximate sampling in three different settings. first, its effectiveness is verified for a simple two state model. then, we test on simulated arraycgh data which is the accepted standard for method evaluation  <cit> . finally, we report findings from an analysis of mantle cell lymphoma  cell lines  <cit> , corriel cell lines  <cit> , gbm datasets  <cit> , and high resolution snp arrays  <cit> . for biological data, if multiple chromosomes are present, we use pooling  <cit>  across chromosomes, which does not allow transition between different chromosomes but assumes model parameters to be identical across chromosomes. throughout this section we define σd to be the standard deviation of all observations in the dataset. we compress the dataset with increasing values of w =  <dig> σd,  <dig> σd,  <dig> σd, .... for evaluation we consider the experiments as two class problems: aberrant clones belong to the positive class and normal clones belong to the negative class. when ground truth labels of a dataset are available we report f1-measure, recall, and precision for the experiment. with tp, fp, tn, fn we denote the number of true and false positives and true and false negatives respectively. recall is defined as tptp+fn, precision as tptp+fp, and f1-measure as 2×recall×precisionrecall+precision. experiments were run with a python implementation on a linux machine with  <dig>  ghz intel core  <dig> duo processor and  <dig> gb memory. for expectation maximization , we use the baum-welch algorithm from the ghmm package which is implemented in c and considerably faster than a python implementation.

synthetic data
2-state hmm
we define a hmm λ2st =  with a=,],b=,π= <dig> . from λ2st we sample an observation sequence o = o <dig>  ..., o <dig> , and run mcmc for m =  <dig> steps with hyperparameter values μ˜1:2= <dig>  for the prior mean on μ, σ˜1:2= <dig> , <dig>  for the prior variance on μ, a1: <dig> =  <dig>   <dig> for the shape of gamma prior on σ- <dig>  b1: <dig> =  <dig>   <dig> for the rate of gamma prior on σ- <dig>  δπ =  <dig>   <dig> for the dirichlet prior on the initial distribution π, and δ1:2at= <dig>  for the dirichlet prior on row i of transition matrix a.

after m iterations, we compare the posterior probabilities p and p, where θfbgm and θam are m-th parameter samples of fbg-sampling and approximate sampling. figure  <dig> shows that the posterior probability of being in state  <dig> for each position can be approximated fairly well even for large values of w. the average posterior error p˜=12t∑t∑i|p-p| reflects the same fact in table  <dig>  similarly, we compute the viterbi paths and report total number of mismatches between them along with the likelihoods in table  <dig> 

p˜

simulation from genetic template
we use  <dig> simulated datasets published in  <cit> . each dataset has  <dig> chromosomes and  <dig> clones per chromosome for a total of  <dig>  clones per dataset. a four-state hmm predicts the aberrant regions--loss defined as state s <dig> and gain defined as state s <dig> or s <dig>  the neutral region is modeled as state s <dig>  we put an ordering constraint on the means, μ <dig> <μ <dig> <μ <dig> <μ <dig>  to prevent label switching of the states  <cit> . hyperparameter choices follow  <cit>  and are μ˜1:4=- <dig> , <dig> . <dig>  for the prior mean on μ, σ˜1:4= <dig> , <dig> , <dig> , <dig>  for the prior variance on μ, a1: <dig> =  <dig> ,  <dig>   <dig> for the shape of gamma prior on σ- <dig>  and b1:4=δπ=δ1:4at= <dig> , <dig>  for the rate of gamma prior on σ- <dig>  the dirichlet prior on initial distribution π, and the dirichlet prior on row i of transition matrix a, respectively.

w
approximate sampling results are reported for different choices of w. the w value which is closest to the one estimated by the l-method is shown in italic. width w is reported in σd of the corresponding dataset, time is reported in seconds, and compression is defined as t′t. for hbl- <dig>  the initial parameter values for em are sampled from the prior or uniform distributions, and the average , most likely , and best  performances along with likelihoods are reported.

biological data
mantle cell lymphoma 
de leeuw and colleagues identified recurrent variations across cell lines using arraycgh data of mcl cell lines  <cit> . out of the eight cell lines  <cit>  hbl- <dig> was fully annotated with marked gain and loss regions in the autosomes. this dataset contains about  <dig>  data points . we have used a four-state hmm for predicting aberrant regions. state  <dig> represents copy number loss, state  <dig> represents normal copy number, state  <dig> represents single copy gain, and state  <dig> multiple gain. for hbl- <dig> we report the f1-measure, recall, precision and speed-up. similar to the synthetic case we put an ordering constraint on the means, μ <dig> <μ <dig> <μ <dig> <μ <dig>  hyperparameter choices follow  <cit>  and are same as for the simulation from genetic template, except for σ˜1:4= <dig> , <dig> , <dig> , <dig> , the prior variance on μ, and a1: <dig> =  <dig>   <dig>   <dig>   <dig>  the shape of gamma prior on σ- <dig>  settings for fbg-sampling and approximate sampling are identical to the simulated case with one exception; for each simulated dataset sampling methods run once and we report the average and standard deviation over  <dig> datasets, but for hbl- <dig> we let them run  <dig> times and report the average and standard deviation of these  <dig> f1-measures, recalls, and precisions in table  <dig>  each em run starts with the initial parameter values sampled either from the prior distributions, or from uniform distributions, and continues until the likelihood value converges. we report the performance of the most likely model , the likelihood of the best model based on f1-measure, and the average and standard deviation of f1-measures, recalls, and precisions of all the models generated by em. as representative examples, we also plot the segmentation of chromosome  <dig> and  <dig> computed by fbg-sampling and approximate sampling along with the ground truth labels in figure  <dig> 

corriel
corriel cell lines were used by snijders et al.  <cit>  and are widely considered a gold standard in arraycgh data analysis. this dataset is smaller and, in fact, fairly easy compared to the mcl cell lines. for the corriel cell line we use a 4-state hmm and report the results for gm <dig> and gm <dig> in table  <dig>  again, approximate sampling performs competitively while achieving more than a 10-fold speed-up. hyperparameter choices follow  <cit> .

gbm
the glioma data from bredel et al.  <cit>  has previously been used to analyze the performance of cnv detection methods  <cit> . according to  <cit> , gbm datasets are noisy but contains a mixture of aberrant regions with different width and amplitude. in particular, chromosome  <dig> of gbm <dig> is reported to have low amplitude loss in p-arm and chromosome  <dig> of gbm <dig> is reported to have high amplitude gains near the egfr locus by previous studies  <cit> . the segmentation of these two chromosomes are shown in figure  <dig>  although  <cit>  reports that em based hmm failed to detect these aberrations we see that bayesian hmm has successfully detected both the gain in chromosome  <dig> and the loss in chromosome  <dig>  for this dataset, we use a 3-state hmm with non-informative hyperparameters, μ˜1:3=-σd <dig> ,σd <dig> for the prior mean on μ, σ˜1:3= <dig> , <dig> , <dig>  for the prior variance on μ, a1:3=1σd <dig> σd <dig> σd <dig> for the shape of gamma prior on σ- <dig>  δπ =  <dig>   <dig>   <dig> for the dirichlet prior on initial distribution π, and b1:3=δ1:3at= <dig> , <dig> for the rate of gamma prior on σ- <dig> and the dirichlet prior on row i of transition matrix a, respectively, and at the recommended w value we see a  <dig> fold speed-up.

snp array
high-resolution single nucleotide polymorphism  arrays are capable of detecting smaller cnvs than arraycgh. to demonstrate the computational advantage of approximate sampling on snp arrays we have chosen publicly available affymetrix  <dig> k pancreatic cancer datasets from  <cit>  and illumina humanhap <dig> arrays of hapmap individuals which are provided as examples in penncnv  <cit> . an affymetrix  <dig> k dataset consists of two different arrays each with ≈  <dig>   <dig> snp markers and, in total,  <dig> data points per sample. on the other hand, the illumina humanhap <dig> array has around half a million snp markers. we have applied fbg-sampling and approximate sampling with w =  <dig> σd, the recommended value by the l-method, to the sample datasets from harada et al.  <cit>  and found that the computational speed-up is 22-fold . both sampling approaches mostly agree on their predictions but they, specially fbg-sampling, detect several more cnvs than previously identified  <cit> . for example, the high amplification in chromosome  <dig>  is successfully identified by all methods but in chromosome  <dig>  the sampling algorithms find a few normal regions previously predicted  <cit>  as loss using the cnag tool  <cit>  . one possible reason for these differences is that while we use  <dig> hapmap samples as reference they use  <dig> unpublished normal samples as reference. similarly, we have tested our method with  <dig> σd ≤ w ≤  <dig> σd against illumina humanhap samples and observed  <dig> to  <dig> fold speed-up in computations . these samples are taken from apparently healthy individuals and contain very few cnvs. as expected, both sampling algorithms' predictions are nearly identical and they seem to predict extreme outliers as aberrant markers. in contrast, penncnv  <cit>  does not report cnvs which are covered by less than  <dig> snps, thus suppressing the outliers as normal. we plot a typical region  of chromosome  <dig> from sample  <dig>  in figure  <dig> 

to set hyperparameters we follow the default parameters of the hmm used in penncnv  <cit> . we have observed that hmms for large arrays are particularly sensitive to the self-transition probabilities . hence, hyperparameters were set to reflect the choice of high self-transition probability for each state--we set δ1:3at=αi1l,αi2l,αi3l, the dirichlet prior on row i of transition matrix a, where l =  <dig>  αii is  <dig>  for i =  <dig>   <dig>  for i ≠  <dig>  αij=1-αii <dig> for i ≠ j. other hyperparameters for the 3-state hmm were set such that the expected values of prior distributions match the default values for penncnv. in particular, they were μ˜1:3= <dig> , <dig> . <dig> for the prior mean on μ, σ˜1:3= <dig> , <dig> , <dig>  for the prior variance on μ, a1: <dig> =  <dig>   <dig>   <dig> for the shape of gamma prior on σ- <dig>  b1: <dig> =  <dig>   <dig>   <dig> for the rate of gamma prior on σ- <dig>  and δπ =  <dig>   <dig>   <dig> for the dirichlet prior on initial distribution π, respectively.

discussion
em vs. mcmc
as already a 4-state gaussian hmm has  <dig> free parameters applying em is often difficult due to the existence of multiple local optima and the local convergence of em. consequently, the estimate has to be repeated many times with randomly initialized parameter values to find the most likely model. it should also be noted that not necessarily the model maximizing the likelihood exhibits the best performance in classifying aberrations  <dig>  additionally, applying any constraint in an em settings, i.e. ordering of the state means, is harder than in mcmc. em also produces inferior results on datasets exhibiting class imbalance, for example where one type of aberrations  are rare or missing, while mcmc can overcome this problem using informative priors. in table  <dig> we see that mcmc sampling performs better than em on real biological data which is consistent with prior reports from guha  <cit>  and shah  <cit>  who also report difficulties with em and better mcmc performances. in particular, for hbl- <dig> we observe that the best model in terms of f1-measure--which is not available in de novo analysis--is not the most likely model and the most likely model has very low precision and, consequently, worse f1-measure than mcmc sampling. on the simulated datasets, em performs poorly if the dataset is imbalanced. as a result we observe slightly worse standard deviation for the precisions and f1-measures computed by em in table  <dig>  we also notice from the confusion matrix of three classes--loss, neutral, and gain--that even though the mean f1-measure, recall, and precision  are high, due to label switching  <cit> , em does not distinguish gain from loss, and vice versa, very well . by re-ordering the already learned state means the label switching problem can be addressed, but that increases misclassification rate due to state collapsing as the parameter values, specially means of the gaussians, become almost identical  <cit> . in contrast, bayesian methods cope with class imbalance problem by applying order constraints. moreover, using mcnemar's test  <cit>  on the combined result of the  <dig> datasets we have verified that the predictions based on em are significantly different from the predictions made by bayesian methods with p-values being less than  <dig>  in both cases.

fbg vs. approximate sampling
in an ideal setting, like the 2-state hmm example, approximate sampling closely mimics the performance of fbg sampling up to moderate compression level. for the simulated and real dataset approximate sampling's performance is comparable to fbg's while achieving a speed-up of  <dig> or larger. we also observe that for higher compression levels approximate sampling reports small number of aberrant clones, which results in small tp and fp values, but large fn value. as a result, we see low recall and high precision rate when the compression level is too high for a particular dataset .

from figures  <dig>   <dig>   <dig>  and  <dig> we observe that segmentations by both sampling methods are almost identical at the recommended width w value. in case of hbl- <dig>  they differ from the ground truth in some places. they predict a few extra gain regions and outliers are generally predicted as gains. we, as well as shah et al.  <cit> , have noticed that the hbl- <dig> dataset has many outliers, and the variance of emission distribution of gain state  <dig> converges to a high value which tries to explain the outliers. in contrast, gbm has fewer outliers  and approximate sampling seems robust to those outliers. as the compression algorithm forces possible outliers to be included in a compressed block, it is robust to moderate frequencies of outliers.

width parameter
by varying the width parameter w we can control the compression ratio γ and the speed-up achieved by approximate sampling. but from table  <dig> and  <dig>  and lemma  <dig> it is also clear that by setting a large value one can get unfavorable results. we have analyzed the effect of different w values using a synthetic dataset with a controlled level of noise following  <cit> . each dataset has three chromosomes with total probe counts  <dig>   <dig>  and  <dig>  ten aberrant regions of size 11- <dig> probes, randomly assigned gain or loss, are inserted in random positions of the  <dig> probe chromosome. similarly,  <dig> aberrant regions of size 11- <dig> probes, randomly assigned gain or loss, are inserted into larger chromosomes. a noise component n is added to the theoretical log-ratios - <dig> , <dig>   to model the data. for a set of noise levels, σ ranging from  <dig>  to  <dig> ,  <dig> synthetic datasets are generated. we use a 3-state hmm with width parameter values in the range 0σd, ..., 4σd . signal-to-noise ratio  is defined as  <dig> σ. in figure  <dig> we plot the mean compression ratio, f1-measure, recall, and precision for  <dig> synthetic datasets and the real biological data hbl- <dig>  for all noise levels the compression ratio drops exponentially with increasing values of w. ideally, one would like to compress as much as possible without affecting the quality of the predictions. we visually identified a best value for width as the point after which the f1-measure drops substantially. comparing the knee of the curve with the best value, we notice that while using the knee computed by l-method  <cit>  is a conservative choice for width, in most cases we can still obtain a considerable speed-up.

outliers
gaussian hmms are known to be sensitive to outliers which is evident from our results of hbl- <dig> and snp arrays. traditionally, outliers have been handled either by using a mixture distribution as the emission distribution or by preprocessing the data to remove possible outliers or impute more appropriate values. we have observed that a simple local median approach works very well to identify the outliers in a time series of log2-ratio values. although using a mixture distribution or a distribution with fat tails, i.e. student's-t distribution, is a better choice we lose a significant computational advantage in approximate sampling. for a block of observations o' = oi, ..., ok we can compute ∏j=ikp in constant time using precomputed values ∑j=1koj and ∑j=ikoj <dig> if the emission distribution is gaussian. but it is not obvious how we can accomplish this for a more complicated distribution. another approach, which we prefer in this context, is to use a hmm state with a very wide gaussian and low self-transition probability to model the outliers. we have observed very good performance in this way. however, as our primary focus is to compare fbg-sampling with approximate sampling we choose to use a simple gaussian model at the end.

CONCLUSIONS
analyzing cgh data either from dna microarrays or next generation sequencing to estimate chromosomal aberrations or investigate copy number variations , leads to the problem of segmenting sequences of observations which are essentially noisy versions of piecewise-constant functions. for reasons of efficiency, ml or map point estimates of hmm parameters combined with the viterbi-algorithm to compute a most likely sequence of hidden states and thus a segmentation of the input are most popular in practice. this ignores research which clearly demonstrates that bayesian approaches, where mcmc is used for sampling and thus integrating out model parameters, is more robust with higher recall and higher precision  <cit> . additionally, our experiments show that likelihood is not informative with respect to the quality of cnv calls putting the use of ml into question even if the estimation problem could be solved.

we propose a method using approximate sampling to accelerate mcmc for hmms on such data. our method constitutes the first use of ideas from spatial index structures for several consecutive observations and approximate computations based on geometric arguments for hmm; the effectiveness of this approach was previously demonstrated for k-means clustering, mixture estimation, and fast evaluation of a mixture of gaussians.

we demonstrate that these very abundant biological cgh datasets, which measure chromosomal aberrations and copy number variations, are consistent with our assumptions of piece-wise constant ground truths, and we are able to achieve speed-ups between  <dig> and  <dig> respectively  <dig>  on these biological datasets while maintaining competitive prediction accuracy compared to the state-of-the-art. as datasets with even higher resolution, both from higher density dna microarrays and next generation sequencing, become available, we believe that the need for precise and efficient mcmc techniques will increase. the added precision over popular ml/map-based methods is of particular biological relevance as for complex neurodegenerative diseases such as autism de-novo copy number variations have recently been shown to play a role  <cit> ; a precise and quick analysis on large collectives of patients is desirable.

applying approximate sampling to multi-dimensional observations--to jointly analyze data sets for recurrent cnvs  <cit>  instead of analyzing individuals and post-processing results--and considering more complicated hmm topologies and observation densities are directions for our future work.

authors' contributions
mpm and as designed the study and wrote the manuscript. mpm implemented approximate sampling and tested it's performance. all authors read and approved the final manuscript.

appendix
lemma  <dig>  let oi-1=o <dig> …,oi- <dig> o′=oi,…,oi+n- <dig> omin′= minoi∈o′ol,omax′= maxoi∈o′ol,d= minj≠k|μj-μk| and pp≤α. assuming there exists a state sx s.t. τ= mino′min-μsx-1+μsx <dig> μsx+μsx+12-o′max≥ <dig>  we can show that ∑∈snp∑s∈sp≤αn-1+c2nnn-1), where r=1-tt and c=e-dx2σ <dig> 

proof. using the assumption on τ, for any position i ≤ l ≤ i + n -  <dig>  we can argue that,

  e-12ol-μqlσ2e-12ol-μsxσ2≤e-|μql-μsx|τσ2≤1ifql=sx,e-dτσ2otherwise. 

for any partial state path qi, . . ., qi+n- <dig> 

  p=pp∏k=ii+n-2aqkqk+1p=pe-12oi-μqiσ22πσ <dig> ∏k=ii+n-2aqkqk+1e-12ok+1-μqk+1σ22πσ <dig>  

we partition sn, the set of all possible partial state paths of length n, into n subsets ss1…ssn such that, ssj={s˜∈sn:>c)∨≥c)∧s˜1=sj)} for  <dig> ≤ j ≤ n, where c= ∑qk∈s˜ <dig>  we again partition ssj=∪k=0n-1sksj such that, sksj={s˜∈ssj:∑l=1n-11=k}.

the size of sn can be expressed in terms of total number of non-self-transitions present in a path,

  |sn|=nn=n∑k=0n-1n-1kk. 

as the sets ssj are equal sized partitions of sn, |ssj|= ∑k=0n-1n-1kk. also notice that, by definition, the partial state paths in sn with exactly k number of non-self-transitions are equally distributed among the subsets ssj. as a result, |sksj|=n-1kk.

now we define s = { : }. for the remaining part of the proof, if y is a set of partial state paths, we use p in place of ∑∈yp for clarity.

  ∑∈snp∑s∈sp=p∑s∈sp<pp= ⋃j=1npp. 

now we derive an upper bound of the contribution from state paths in ssx. in the following equations we make use of the fact that a state path with k non-self-transitions goes through at least k <dig> non-sx states.

  pp=∑k=0n-1∑s˜∈sksxpp= ∑k=0n-1∑s˜∈sksxpp= ∑k=0n-1∑s˜∈sksxs˜=qi,…,qi+n-1pe-oi-μqi2σ2pe-oi-μsx2σ <dig> ∏j=ii+n-2aqjqj+1e-oj+1-μqj+12σ2asxsxe-oj+1-μsx2σ2= ∑k=0n-1∑s˜∈sksxs˜=qi,…,qi+n-1pp∏j=1i+n-2aqjqj+1asxsx ∏j=ii+n-1e-oj-μqj2σ2e-oj-μsx2σ2≤∑k=0n-1∑s˜∈sksxs˜=qi,…,qi+n-1α1-ttk ∏j=ii+n-1e-oj-μqj2σ2e-oj-μsx2σ2≤∑k=0n-1n-1kkα1-ttke-dτσ2k2= ∑k=0n-1n-1kα1-ttke-dτσ2k2= ∑k=0n-1αn-1k1-ttke-dτσ2k2= ∑k=0n-1αn-1kk=αn- <dig>  

similarly, we derive an upper bound of the contribution from state paths in ssy, where  <dig> ≤ y ≠ x ≤ n. now we use the fact that, because of the pigeonhole principle any state path in ssy has to go through at least nn non-sx states.

  pp≤∑k=0n-1∑s˜∈sksys˜=qi,…,qi+n-1α1-tt∏j=iki+n-1e-12oj-μqjσ2e-12oj-μsxσ2≤∑k=0n-1n-1kkα1-ttke-dτσ2nn= ∑k=0n-1n-1kkα1-ttke-dτσ2nn= ∑k=0n-1n-1kα1-ttke-dτσ2nn= ∑k=0n-1αn-1k1-ttke-dτσ2nn= ∑k=0n-1αc2nnn-1krk=αc2nnn-r. 

applying  and  in  we get,

 ∑∈snp∑s∈sp≤αn-1+c2nnn-1). 

note: for simplicity of the notation, we follow the convention that μx0=-∞ and μxn+1=∞ so that the proof holds for x =  <dig> or x = n.
