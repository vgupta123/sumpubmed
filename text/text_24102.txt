BACKGROUND
close interaction between experiments and mathematical models has proven to be a powerful research approach in systems biology. especially the modeling of regulatory and signaling networks, however, is typically hampered by a lack of information about mechanistic details, as often one can only determine the interactions of the involved species in a qualitative way. the current shift of focus in systems biology from single signal transduction pathways to networks of pathways exacerbates this lack of information even more. therefore, the creation of mass action based models that accurately describe the underlying biochemistry is typically restricted to small well-studied subsystems.

large-scale models of regulatory or signaling networks are often so-called boolean models  <cit> . in fact, these models can be seen as the mathematically rigorous representation of qualitative biological knowledge. their components, henceforth called species, can have only discrete states, typically two; these may be referred to as  <dig> and  <dig>  'off' and 'on', 'deactivated' and 'activated', etc. time is discretized and the state of a species at time t +  <dig> is a function of the states of the species at time t. although being a crude simplification of biological reality, boolean models are often able to reproduce the qualitative behavior of a system  <cit> . naturally, boolean models can neither describe continuous concentration levels nor realistic time scales. for this reason, they cannot be used to explain and predict the outcome of biological experiments that yield quantitative data. however, with increasing emphasis on these quantitative experiments the need for precisely this kind of model arises. in this contribution, we present and exemplify a practicable solution to this problem: a standardized method for accurately converting any boolean model into a continuous model. this transformation fills the gap in the modeling process shown in figure  <dig>  it allows construction of a continuous model from qualitative knowledge by representing this knowledge as a boolean model and then transforming this discrete model into a continuous one. the continuous model can now be used to explain experimental results and to design and optimize further experiments. the results of these experiments, in turn, help to refine the model.

boolean models are a very coarse description of biochemical processes. they phenomenologically describe observed dependencies often leaving out still unknown players or intermediate steps. as our transformation requires no additional information the resulting continuous models are, of course, still phenomenological models. we can automatically create these continuous phenomenological models out of a boolean model, but we cannot create a mass action law without additional knowledge on the biochemistry. our method is a top-down approach for  networks with incomplete mechanistic knowledge — derived e.g. from pathway databases — where predictive kinetic modeling is infeasible. the main point that we want to make in this contribution is that also these phenomenological models can be used in systems biology to explain and predict quantitative experimental results.

to this end, we focus on a large boolean model of t-cell activation proposed by klamt et al.  <cit> . these cells play a pivotal role in the immune system. when foreign antigens bind to their receptors, signaling cascades are triggered within the t-cell leading to an activation of several transcription factors. the logical structure of the model is shown in figure 2a. there are three inputs: the t-cell receptor tcr, the coreceptor cd <dig> and an input for cd45; as well as four outputs: the transcription factors cre, ap <dig>  nfkb and nfat. the rephosphorylation of pag-csk by fyn and ccbl mediated degradation are known to be slow processes compared to the other interactions. this is modeled by activating the feedback loops fyn → pag-csk and zap- <dig> → ccbl only at a later stage. therefore three scenarios are defined:

scenario  <dig>  resting state: all inputs are set to  <dig>  feedback loops are deactivated.

scenario  <dig>  early events: inputs are set to  <dig>  feedback loops are still deactivated.

scenario  <dig>  mid-time events: inputs are still  <dig>  feedback loops are active.

a qualitative analysis of an expanded version of this boolean model by saez-rodriguez et al.  <cit>  yielded new and non-obvious signaling pathways. there are also quantitative models covering aspects of t-cell signaling in mechanistic detail, e.g.  <cit> . in contrast thereto, the continuous model we obtain in the following describes the t-cell signaling cascade on a larger scale yet in less mechanistic detail.

we apply the transformation method to the t-cell model. the resulting continuous model is able to fully reproduce the behavior of the boolean model. moreover, we show that it can easily include and deal with the different time scales of interactions in the three scenarios. hence the continuous model is indeed a generalization of the boolean model with richer dynamic properties. this is in line with previous findings  <cit> , indicating that the qualitative behavior of a discrete model is reproduced by its continuous homologue. we can further corroborate this hypothesis by generalizing existing theoretical results on the steady-states of discrete and continuous models.

the crucial question is, of course, whether the continuous model derived from a boolean network is indeed competent to explain an aspect of biological reality in a precise quantitative fashion. we answer this question in the affirmative by showing that our t-cell model reproduces time courses of concentration levels measured for three different ligand concentrations  <cit> . moreover, it is able to predict binding affinities of different ligands from their induced signaling profiles. the fact that the model can differentiate between more than two different concentrations shows that we have definitely left the boolean  world behind.

RESULTS
representation of boolean functions and models
a boolean model consists of

• n species x <dig>  x <dig>  ...., xn, e.g. genes, proteins, etc., each represented by a variable xi taking values in { <dig>  1},

• for each species xi a set of species  that influence xi and

• for each species xi an update function

  

giving the value of xi at the next time step for every possible combination of .

in the following we think of bi as a function on the vertices of the unit cube. since vertex  corresponds to the and gate

  

we can write bi in the form

  

this is a so-called sum-of-product representation of bi. these representations are especially convenient, as they allow to graphically represent our models using interaction hypergraphs  <cit> . the idea is to represent each product  in the sum-of-product form of bi by a directed hyperedge between a set of start nodes  and the end node xi. each pair , s ∈ s, carries a sign — '+' or '-' — depending on whether there is a factor s or ¬s in the product. all incoming hyperedges at node xi are then a graphical representation of bi. this is further illustrated in additional data file  <dig> 

the general approach to making discrete models continuous
the first step for obtaining a continuous model from a boolean one is to replace the discrete variables xi by continuous variables  taking values in  <cit> , i.e. we normalize concentrations to the unit interval. consequently, we have to 'extend' the functions bi to functions :  <cit> n →  <cit> . we call the functions continuous homologues of the boolean functions bi. the crucial point is, how the transformation of a boolean function into a continuous homologue is performed. we will address this issue in the next section and continue with the outline of the general approach.

in the second step we have to specify how to build the actual continuous model, for which there are two possibilities. the most straightforward is probably to proceed analogously to the boolean model, i.e. to use discrete time steps and to compute the value of  at time t +  <dig> by

   

in numeric simulations the discretization of time is obviously irrelevant. it complicates, however, the detection of small-scale continuous effects and is a serious drawback in the further investigation of the model by analytical methods.

another way to build the continuous model is to try to mimic biological reality more closely: mrnas, proteins, etc. are produced at a certain rate and are at the same time degraded. we assume the production of xi to be given by , and the degradation to be proportional to . then the development of  over time is governed by the ordinary differential equation 

   

where τi can be interpreted as the life-time of species xi. note that due to the normalization of concentrations to the unit interval we have only one parameter for production as well as decay. to clarify this, assume that  denotes the non-normalized concentrations and  the corresponding production functions. then a general system of odes is of the form , where αi is the production rate and γi the decay rate of species xi. since the maximal concentration of xi is αi/γi we have the relation . it now follows that

  

and by setting τi = 1/γi and  we obtain the odes .

herein we focus on model , as this model can be further analyzed using the rich and mathematically rigorous theory of odes. note furthermore that model  can be considered a special case of model  after numeric integration.

continuous homologues of boolean functions
as already mentioned, the key point is how a continuous homologue  can be obtained from a boolean function bi in a computationally efficient manner. a suitable transformation has to satisfy three conditions:

accuracy: it has to be accurate, which means that  and bi must agree on the vertices of the unit cube, i.e. for values in . functions  satisfying this condition are called perfect continuous homologues. as will be shown, for perfect continuous homologues discrete and continuous models exhibit a similar steady-state behavior.

good analytical properties: the functions  should have good analytical properties such as smoothness in order to allow and facilitate a mathematical analysis of the system of odes.

minimality and uniqueness: the functions  should be the unique minimal solution in their interpolation class.

the three transformations we propose in the following are all based on multivariate polynomial interpolation  <cit>  . here  is defined as a polynomial in the variables  that agrees with bi on the vertices of the unit cube. as will be shown in the methods section, this technique satisfies all three of the above requirements. there are other approaches which we shortly review and compare in the discussion section.

boolecube
in a first step, we define the functions

   

by linearly interpolating the functions bi using the technique of multivariate polynomial interpolation as explained in the methods section. these functions are called boolecubes. by substituting  for bi in equation , we can then define a system of odes that describes the temporal development of the .

hillcube
the functions  are affine multilinear, i.e. for each  <dig> ≤ j ≤ ni and fixed , k ≠ j, there exist constants a, b ∈ ℝ such that . molecular interactions, however, are known to show a switch-like behavior, which can be modeled using sigmoid shaped hill functions  <cit>  . the two parameters n and k have a clear biological meaning. the hill coefficient n determines the slope of the curve and is a measure of the cooperativity of the interaction. the parameter k corresponds to the threshold in the boolean model, above which one defines the state of a species as 'on'. mathematically speaking, it is the value at which the activation is half maximal.

we now define a hill function fij with parameters nij and kij for every interaction and define new functions

   

which we call hillcubes. plots of the hillcubes of all  <dig> two-variable boolean gates can be found in additional data file  <dig>  now a new system of odes can be defined by replacing the  in equation  by the hillcubes .

normalized hillcube
note that hill functions never assume the value  <dig>  but approach it asymptotically. hence, the hillcubes are not perfect homologues of the boolean update functions bi. if this is desired a simple solution is to normalize the hill functions to the unit interval. this yields another  continuous homologue of the

boolean functions bi

   

which we call normalized hillcubes, and thus defines also a new continuous ode model.

theoretical results about the relation between discrete and continuous models
a natural and interesting question is how similar the discrete and the continuous model are. it can easily be shown  that, whenever the  in equation  are perfect homologues of the boolean update functions bi, a steady-state of the boolean model will also be a steady-state of the continuous system. this result can be applied to the boolecube model as well as the normalized hillcube model, but not to the non-normalized hillcube model. therefore, boolean steady-states will in general not be steady-states of the non-normalized hillcube system. the question is if boolean steady-states still correspond to 'similar' steady-states of this continuous model, at least for certain parameters. using the implicit function theorem we were able to show that this is indeed the case . the reverse statement is, of course, not true, as in the continuous model additional  steady-states may arise. besides the steady-state behavior, monotony properties are a further important characteristic of a dynamical system. these properties determine the effect of a down- or up-regulation of a certain species on the other species. due to its accuracy the presented transformation method preserves the monotony properties of a boolean network. in the discussion section we illustrate this further using the t-cell model as an example.

we show these results as they justify our transformation approach by demonstrating that it preserves essential properties of the boolean model. for a deeper mathematical investigation of the relation between discrete and continuous models we refer the interested reader to the rich literature on this subject, e.g.  <cit> 

simulation of the boolean t-cell model
after deactivation oscillations occurred, artefacts of the synchronous updating. when the species were updated asynchronously according to some permutation, these oscillations could be observed for  <dig> out of  <dig> randomly sampled permutations; in the other cases a steady-state was reached.

continuous t-cell model
we applied the transformation technique to the boolean t-cell model. using non-normalized hillcubes we obtained a large quantitative model of t-cell activation . in a first step, we manually determined approximate parameters for which the continuous model reproduces the behavior of the boolean model during all three scenarios. the information about fast and slow interactions was thereby encoded in the values of specific parameters. consequently, the continuous model was able to explain both, the activation as well as the deactivation of t-cells, without any alteration of the network topology between different scenarios. note that this was necessary in the boolean case. we set all hill coefficients to n =  <dig>  the thresholds to k =  <dig>  and the life-times to τ =  <dig>  with the exception of fyn and zap- <dig>  here we knew that the interactions fyn → pag-csk and zap- <dig> → ccbl operate on a slower time scale. therefore the thresholds for these interactions were set to kslow =  <dig>  whereas the thresholds for the interactions fyn → tcr-phos, zap- <dig> → lat-phosp, zap- <dig> → plcg  and zap- <dig> → itk were set to kfast =  <dig> . the hill functions for the three thresholds k, kslow and kfast are displayed in figure 2b. finally, we set the life-times of fyn and zap- <dig> to τfyn = τzap- <dig> =  <dig> to enlarge the time gap between the two switching points.

the numeric simulation of the continuous t-cell model with the manually determined parameters is shown in figure 3b. at first, the cell was again in its resting state with all three inputs turned off. then at t =  <dig> we manually switched on all inputs and the signaling cascade was triggered off showing an expression profile very similar to the boolean simulation . we observed a total activation of the four transcription factors at around t =  <dig> just like in the boolean simulation. one can clearly see that fyn and zap- <dig> were activated more slowly. nonetheless tcr-phos, lat-phosp, plcg  and itk were instantly turned on due to the low threshold kfast. only when at around t =  <dig> the concentrations of fyn and zap- <dig> were high enough, the feedback loops fyn → pag-csk and zap- <dig> → ccbl became active and began to switch on pag-csk and ccbl. while pag-csk reached a constant medium expression level, ccbl was only weakly and transiently expressed. this, however, sufficed to switch off the cascade and ultimately at around t =  <dig> all transcription factors were again deactivated. in contrast to the boolean model, the continuous model did not exhibit an oscillatory behavior but reached a steady-state after deactivation of the signaling cascade. the species with long expression periods in the boolean oscillation  were expressed at high or medium levels whereas the species with short expression periods were not expressed at all.

comparison of the discrete and the continuous t-cell model
although one can argue that there is no real time scale in boolean networks, we compared both models by substracting the discrete from the continuous time course . the activation of the feedback loops in the boolean model was conveniently chosen such that we have a total deactivation of the transcription factors at around t =  <dig> in both models. while we observed an almost perfect agreement of the time courses of the three inputs, there was a huge difference in the time courses of the species involved in the two feedback loops. this was not surprising, considering that these loops are regulated differently in both models. the species downstream of the regulatory loops  showed again a similar expression pattern.

we then analyzed this part of the cascade more deeply. figure 3c also shows the correlation between the discrete and the continuous expression pattern of the species downstream of the feedback loops at each time point  <dig> <t <  <dig>  we observed a high correlation in the more stationary phases  and a significant drop of correlation during the transitions between these phases. this met our expectation that the two models show the same qualitative but a different dynamic behavior.

ratio of activation and deactivation time
when looking at figures 3a and 3b, a striking difference between the dynamics of both models is that in the discrete model activation and deactivation took approximately the same time, whereas in the continuous model activation was a much faster process than deactivation. this can also be seen from the red and blue 'steps' in upper figure 3c during the activation and deactivation phases. to confirm that this was not merely an artefact of our choice of parameters, we calculated and analyzed the ratio between activation and deactivation time for different parameters. we defined

• the beginning of activation tactbeg as the time when the first species  reaches 5% of its maximal value,

• the end of activation tactend as the time when the last species reaches 95% of its maximal value,

• the beginning of deactivation tdeactbeg as the time after tactend when the first species drops under 95% of its maximal value,

• the end of deactivation tdeactend as the time when the last species drops under 5% of its maximal value,

• and, finally, the ratio of interest

  

in the boolean model we could easily compute ρb =  <dig> implying equally fast activation and deactivation. in the continuous model the crucial parameters were the life-times τfyn and τzap- <dig> on the one hand and the concentration thresholds kfast and kslow on the other hand. the remaining parameters were set to n =  <dig>  k =  <dig>  and τ =  <dig> 

first, we computed ρ for fixed kfast and kslow and different τfyn = τzap- <dig>  the result is shown in figure 3d. for τfyn = τzap- <dig> =  <dig> the cascade was not activated properly. for larger values we observed a decrease in ρ implying that an increase of τfyn and τzap- <dig> prolonged the deactivation phase. this was to be expected — longer life-times resulted in a lessened increase of the decisive elements fyn and zap- <dig> in the regulatory loop.

second, we analyzed the effect of kfast and kslow for fixed τfyn = τzap- <dig> =  <dig>  the result is shown in figure 3e. only for parameters kfast ≪ kslow <  <dig> the cascade was activated properly. this agrees well with the fact that the difference between these two parameters is responsible for the delayed activation of the feedback loops. if it was not big enough the cascade was being deactivated before it had been fully activated. the greater this difference was, i.e. the farther we go away from the diagonal in figure 3e, the smaller ρ got, implying that a later activation of the feedback loops prolonged the deactivation phase. however, despite all these influences of the parameters, we observed much smaller ratios ρ in the continuous model than in the boolean model. the average ρ's in figures 3d and 3e were  =  <dig>  and  =  <dig> , respectively, which were both significantly smaller then ρb =  <dig>  this suggests that ρ ≪  <dig> may be an invariant of the dynamical system of biological importance.

explanation of experimental data using the continuous t-cell model
the crucial question is if our model can reproduce real data. to test this we used the data set presented in  <cit>  . it describes the dynamics of the activation of key signaling elements upon activation of the tcr by three different ligands with varying affinity, q <dig>  y <dig> and l <dig>  we considered, in particular, the ligand l <dig> for which experiments were performed with three different ligand concentrations. using global minimization of the model fit with respect to the data, we were able to determine a set of parameters for which our model reasonably reproduced the experimental data . figures 4a-d show the corresponding simulated time courses. we see that the model was able to approximate the time courses of erk and ikk well. the fit of jnk was also acceptable, although the high measured concentrations at time t =  <dig> constituted a problem, as the model was naturally unable to reproduce them due to the delaying effect of the signaling cascade. in the case of nfat, the model was unable to reproduce the non-monotone dependence on the ligand concentration. this suggests that the network structure cannot be reconciled with the non-monotone dependence of the two key signaling molecules jnk and especially nfat with respect to the ligand concentration. a non-monotone response of t-cell signals has been reported in other contexts  <cit> , and is consistent with the role of t-cells: their response has to be exquisitely regulated so as to reply only to a particular stimulus; an uncoupled response between the jnk  and erk map kinases has also been observed  <cit> . the regulation of nfat and jnk, and more generally of tcr-induced signaling, is complex and not yet fully understood. to mention just two examples, processes such as ras localization  <cit>  have been shown to play a key role, but are not included in the model, and the regulation of calcium, which governs nfat behavior, is more complex than described in the model. it is out of the scope of this paper to investigate this intriguing behavior in detail, but this result illustrates the power of our approach to gain new biological insight: taking exactly the same knowledge encoded in the discrete model and fitting it to quantitative data, we were able to identify the incompleteness of our model in an aspect that we could not have explored with a discrete model.

the bold entries are the parameters downstream of all measured species. they were not affected by the optimization process.

best fit parameter set
subsequently, we analyzed the distribution of the hill parameters within the best fit parameter set for ligand l <dig> . when looking at the distribution of the exponents n upstream of the measured species  we found that after the optimization  <dig> out of  <dig>  were below the ad hoc estimate  and only  <dig> were above it. this was to be expected, as in order to fit three different concentration levels the model had to contain mainly slow switches  and only few boolean-like switches . figure 4e shows the distribution of the threshold parameters k upstream of the measured species. as explained above, we had manually set these parameters to  <dig> , with the exception of four k's which had been set to kslow =  <dig>  and two k's which had been set to kfast =  <dig> . interestingly, this structure had been preserved during the optimization. the mean of the thresholds k was  <dig>  and hence well agreed with the ad hoc estimate. also the high and low thresholds were still at least two standard deviations away from the mean, cf. the red and blue markers '+' in figure 4e. only one other parameter k also had a z-score above 2: the threshold kl <dig> for the stimulation of the tcr by the ligand l <dig>  cf. marker 'o'. possible implications hereof are discussed below.

due to the large number of parameters the obtained parameter set was, of course, far from being unique. but we showed that a continuous model inferred from a boolean model is able to reproduce experimental data in a quantitative way. moreover, this transformation could enhance the explanatory power of the model in the sense that it was enabled to differentiate between more than two states.

in our example, the threshold parameters k are rather tightly centered around their mean. in principle, however, we could also have extreme outliers, i.e. very large or very small  values in the distribution. mapped back to the boolean model, this would imply a change of the network topology, as the corresponding reactions are then quasi-constant, either 'off'  or 'on' . thus, a fitting of the continuous model to experimental data may also yield information about the network structure of the boolean model.

prediction of binding affinities of different ligands
as already mentioned, the fitted threshold kl <dig> for the stimulation of the tcr by the ligand l <dig> was significantly below the mean of the other thresholds k, cf. marker 'o' in figure 4e. this gave rise to the question of which affinities the model predicts for the other two ligands. to this end, we fitted the affinities of q <dig> and y <dig>  mapped to the inverse of the hill function's threshold parameters kq <dig> and ky <dig>  respectively, keeping the rest of the parameters constant. as expected, the fits themselves were far from perfect, due to parameter indeterminacies. surprisingly however, the values of kq <dig> and ky <dig> we obtained were significantly above the mean of the other thresholds k, cf. markers '◇' and '□' in figure 4e. this suggests that the predicted relation between the parameters kl <dig> ≪ ky <dig> <kq <dig> is not simply an artefact of the optimization process. and indeed, it agrees well with experimental data  <cit> .

discussion
we now further discuss the presented transformation method and compare it to various other approaches. also the relation between discrete and continuous models is discussed, especially with respect to their steady-state behavior and monotony properties.

comparison of different transformation approaches
the relation between discrete and continuous models has already been investigated and various approaches to the problem of constructing the continuous homologues of the boolean update rules have been proposed. in the following we shortly review previous work and compare the different approaches.

piecewise linear differential equations
the idea to compare continuous and discrete models is almost as old as boolean modeling itself. in  <dig>  glass et al.  <cit>  studied the relation between discrete models and ode models of the form . their motivation, however, was quite the opposite of ours. while we intend to enrich the dynamic behavior of discrete models, glass et al. wanted to investigate the qualitative properties of continuous networks by studying corresponding simpler discrete models. they propose hill functions as a suitable continuous homologue of one-variable boolean step functions. in the case of multi-variable boolean functions bi a  continuous homologue  is constructed as follows: note that, when building a boolean model, one implicitly introduces a threshold  <dig> <θi <  <dig> for each species xi and defines its state as 'on' if its concentration is above this threshold. the hyperplanes  = θi, i =  <dig>   <dig>  ..., n decompose the cubes  into  rectangular regions called domains. each of these domains contains exactly one vertex  and is denoted by  accordingly . a simple way of defining the functions  is now to set

   

with this definition model  is a so-called piecewise linear ode model which means that within each domain  equation  is a linear ode of the form . this kind of equation is very well understood and can be solved analytically. the functions  defined in  perfectly agree with bi on the vertices of the unit cube. using piecewise linear odes glass et al. could prove some theoretical results on the relation between discrete and continuous models, e.g. that boolean steady-states are also steady-states of the continuous model. some of these results are restated and generalized in the methods section. piecewise linear models are typically not used for quantitative simulations, as the step-like transition between the different domains is often unrealistic. rather they are analyzed in a qualitative and semi-qualitative way, where their trajectories between the different domains are treated analogously to the state transition graphs of boolean models  <cit> .

fuzzy logic
another well studied way of generalizing boolean models is fuzzy logic  <cit> . recall that in a boolean model one defines the state of a species as 'on' if its concentration is above a certain threshold. in fuzzy logic this concept is relaxed and a so-called degree of membership  function  is introduced for each species xi. for concentrations  <dig> =  =  <dig> this function gives the degree with which we say that xi is 'on'. there are two standard ways of generalizing the boolean operators and, or, not:

 min-max logic

   

 product-sum logic

   

when using product-sum logic, a normalization to the unit interval is necessary, since  can assume values greater than  <dig>  both,  as well as  are ways to construct the functions  from the boolean functions bi. if the dom functions satisfy μ =  <dig> and μ =  <dig>  the functions  obtained by min-max logic agree with bi on the vertices of the unit cube and hence the steady-states of the boolean model are also steady-states of the continuous model. the major drawback of this method is that the functions  are in general not differentiable, and do not have a 'nice' analytic representation . hence most analysis methods are not applicable to the resulting ode systems. when we use product-sum logic, we encounter the problem that the resulting functions  do not necessarily agree with bi .

standardized qualitative dynamical systems
mendoza et al.  <cit>  put forward a method to transform a boolean model into a system of odes similar to  called standardized qualitative dynamical system. their approach, however, is applicable only to a subclass of boolean models: for each species xi we have a set of activators ai and a set of inhibitors ii of xi. then xi is set to  <dig> at the next time step if at this time any of its activators and none of its inhibitors are acting upon it, otherwise xi is set to  <dig>  this corresponds to the boolean logic . clearly, many logic functions, like xor gates for example, cannot be represented that way. from this boolean model a continuous model is built up consisting of odes of the form

  

where

   

the right-hand side of the above ode consists of two parts: an activation function and a term for decay as in . the activation is given by a sigmoid shaped function of ωi, where ωi represents the total input to node xi. the steepness of the activation function is determined by the parameter h. decay is assumed to be proportional to . actually, a more general form of ωi is introduced in  <cit> , where the influence of the activators and inhibitors can be differently weighted. for the sake of better comparability we set all these weights equally to  <dig>  as suggested in  <cit> . the more activators and the less inhibitors of a node are  <dig>  the greater ωi is. it takes its minimum , iff all activators are  <dig> or all inhibitors are  <dig>  and its maximum , iff all activators are  <dig> and all inhibitors are  <dig>  this, however, does not exactly correspond to the boolean rule from above. in consequence, steady-states of the boolean model are not necessarily steady-states of the continuous model. this will be further discussed below.

multivariate polynomial interpolation
the aforementioned attempts only lead to functions which are either not differentiable or do not precisely generalize the boolean logic. a straightforward approach to eliminate these drawbacks is to use multivariate polynomial interpolation  <cit>  for the construction of the functions  . this technique can be applied to any boolean function bi. the resulting boolecubes  are smooth and can easily be analytically differentiated and integrated. they agree with the boolean functions bi on the vertices of the unit cube and hence the steady-states from the boolean model are also steady-states in the continuous model.

we define hill functions fij for all interactions and consider the hillcubes  from equation . the idea behind this is that each interaction is described by its own hill function with specific parameters and the different interactions are coupled by the boolecubes. since they are affine multilinear, the latter preserve the shape of the individual hill functions. thus, we can mimic single-component non-linearities which are common in switch-like regulatory systems. additional data file  <dig> shows the hillcubes derived from all  <dig> two-variable boolean gates. a mathematically rigorous treatment of this kind of dynamical systems can be found in  <cit> . if the hill coefficient n goes to infinity the hill function becomes more and more like a boolean step function . hence for large exponents the hillcubes are very similar to the boolean functions bi and the continuous system will likely show an almost boolean behavior. this is further illustrated in figure  <dig> 

the hillcubes do not perfectly agree with the boolean update functions due to the asymptotic behavior of the hill functions. by a suitable choice of the hill parameters the difference can be reduced but not fully eliminated. an easy way to achieve a perfect agreement is to normalize the hill functions to the unit interval, as is done in the normalized hillcubes  from equation .

comparison
to conclude, we illustrate the above methods applied to a simple or gate between two species x <dig> and x <dig>  we compute

• the piecewise linear function

  

from equation ,

•  obtained by fuzzy logic  following ,

•  obtained by fuzzy logic  following ,

• the input function from equation  introduced by mendoza et al.

  

• the boolecube  from equation  obtained by the interpolation technique,

• the hillcube  from equation  for hill functions f <dig> and f <dig> with parameters n =  <dig>  k =  <dig> ,

• and, finally, the normalization

  

of  from equation .

figures 5c and 5d show the product-sum fuzzy logic function  and the input function ω. one can clearly see that they do not represent a pure or gate, where the values at  =  and  =  should already be maximal. this is the case in figures 5a and 5b which show the piecewise linear  and the min-max fuzzy logic function . here however, the problem is that the functions are not differentiable, as can easily be seen from their plots. the boolecube  shown in figure 5e is both, smooth and maximal as soon as any concentration is equal to  <dig>  finally, figures 5f and 5g show the  hillcubes  and , respectively, which are also smooth and can be considered good transformations of the boolean or gate. an overview about the discussed advantages and disadvantages of the different transformation techniques is provided in figure 5h.

theoretical results about steady-states
a fundamental principle of biological modeling is that steady-states of a model typically correspond to the different operating modes or states of the biological system under study. this correspondence was also the motivation for kauffman's seminal study  <cit> , where boolean models were introduced for the first time in biology. a critical step in the justification of any transformation method therefore is to ensure that at least the steady-states of the boolean model are still steady-states in the homologue continuous system. in the case of a perfect agreement of the boolean update rules bi with their continuous homologues  this can easily be shown . this perfect agreement, however, is not a biologically plausible assumption; biological interactions, such as enzyme kinetics for example, are known to asymptotically approach but never fully reach a saturation level. empiric evidence that also in real-world examples, the steady-states of a boolean model correspond to steady-states of a homologue continuous model, is given by mendoza et al.  <cit> . the method of transformation used therein has already been described above and we also mentioned that it does not accurately transform the boolean update rule into a continuous activation function. this inaccuracy is due to a systematic difference between the boolean logic and the analytic form of the activation function. it is not the result of an asymptotic sigmoid function; in fact, the used sigmoid function assumes its maximal values  <dig> and  <dig>  one can easily construct an example where due to this systematic difference boolean steady-states are not conserved under the transformation .

in the case of the hillcube model, it is the other way round. there is no systematic difference between the boolean update rules and the hillcube functions, the imperfect agreement is caused by the asymptotic behavior of the hill functions. therefore, the difference between both can be made arbitrarily small — albeit not zero — by a suitable choice of parameters. in this situation, we can show that for certain parameters, more precisely for sufficiently large exponents, there will be a steady-state of the continuous system in the neighborhood of each boolean steady-state . this theoretical result further justifies the presented transformation method.

monotony properties
a nice feature of our method for converting boolean into continuous models is that monotony properties, typically captured in the underlying interaction graph of the system, are preserved. interaction graphs are signed directed graphs where each directed edge reflects a causal dependency, which can either be positive or negative, between its start and end node. boolean models represented as interaction hypergraphs have a unique underlying interaction graph which can easily be derived from the logical model . for example, the boolean function a =  ∨ d would be translated into two positive arcs  and one negative arc . in the interaction graph one may then compute the recently introduced dependency matrix  <cit> , which determines for each pair  of species the global effect of x on y. this effect can — in some cases only initially — be positive, negative, ambivalent or vanishing.

for example, the dependency matrix of the t-cell model tells us, that lat-phosp exerts purely positive effects on erk, jnk, ikk, and nfat, because there are only positive paths from lat-phosp to these species and no negative feedback is involved. if we simulate a scenario with the logical model and repeat it then with e.g. fixing lat-phosp to  <dig> , the resulting boolean values in the four species mentioned above cannot decrease. in continuous systems, the interaction graph is encoded in the sign structure of the jacobian matrix. in fact, in a continuous system obtained from a boolean model the interaction graph is up to negative self-loops identical and monotony properties are therefore preserved. accordingly, a positive perturbation in lat-phosp, e.g. by permanently decreasing the threshold of zap- <dig> in the interaction activating lat-phosp, results in a trajectory that is always above the trajectory of the non-perturbed system . in fact, in accordance with the interaction graph of the boolean model, we observe purely positive effects on all species downstream of lat-phosp with the exception of ikb. hence, important qualitative properties of the dynamics derived from the logical model are reflected in the dynamics of the continuous system.

CONCLUSIONS
with increasing amounts of quantitative data being available, the challenge arises how we can use our typically qualitative knowledge about biological systems to explain this data. for this purpose, we presented a canonical and fully standardized way of transforming qualitative discrete into continuous models. the transformation is accurate and we can show that it preserves the steady-state behavior as well as the monotony properties of the discrete model. the feasibility of the presented approach was substantiated by applying it to a logical model of t-cell receptor signaling. the resulting model is an extensive continuous model of t-cell activation. in contrast to the boolean model it allowed to accommodate different time scales by adjusting kinetic parameters. it was competent to reproduce time courses of key signaling molecules measured for three different ligand concentration levels. moreover, the model was able to predict the binding affinities of different ligands.

being fully automatized  the presented method recommends itself to be applied to further biological systems. future work could also aim at generalizing the approach from boolean  to s-state systems, where one no longer differentiates between two but s >  <dig> discrete states, e.g. 'low', 'medium' and 'high'. finally, the relation between a discrete model and its continuous homologue needs to be further investigated, especially with respect to more complex behaviors like oscillations, which are of importance in many biological systems, such as cell cycle.

