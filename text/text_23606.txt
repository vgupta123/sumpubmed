BACKGROUND
metabolomics, the comprehensive analysis of metabolites present in a biological sample  <cit> , is technically one of the most challenging fields in systems biology. while genetics has to handle the four digit code chemistry of the nucleic acids and proteomics the  <dig> letter code of amino acids  <cit> , there are several thousands of metabolites with diverse organochemical properties known  <cit> .

for the identification and quantification of metabolites a number of techniques have been available  <cit> . besides nuclear magnetic resonance  <cit>  and optical spectroscopies, e.g. raman- and fourier transform infra-red spectroscopy  <cit> , a major part of the methods rely on chromatographic separation, either by gas chromatography, liquid chromatography or capillary electrophoresis, followed by a mass spectroscopic characterization of the substances  <cit> . during gas chromatography coupled to mass spectroscopy  the boiling points of the compounds are usually decreased by derivatization prior to measurement in order to provide a higher yield in detection  <cit> .

the detection of metabolites is typically accomplished by the comparison of obtained mass spectra and their retention time or retention index value with standards pooled in a library  <cit> . while this information may be sufficient for the identification, in many cases there is a need to add additional data to a library entry. one common task is e.g. to draw data attained from experiments onto metabolic pathway maps, and there are several tools to handle such maps, e.g. vanted  <cit>  and cytoscape  <cit> . however, for the automatic mapping of the data it is necessary to connect a standard in a library to a metabolite on the pathway map, e.g. by utilizing its kegg compound number  <cit> .

for the maintaining of libraries there are several tools available, from which nist ms search  <cit>  and amdis  <cit>  are the most common ones. however, the possibilities to edit and manage mass spectra as well as associated information are limited. none of the programs is capable of handling more than two libraries at the same time, performing complex sort and filter options and automated operation via scriptable commands. furthermore the data fields lack important areas such as multiple reference ions for quantification, kegg compound numbers, inchi codes  <cit>  or systems biology data like associated reactions, enzymes or genes. therefore we present mspecs, an open source based software for the manual and automated management of libraries used in chromatography/mass spectroscopy approaches.

implementation
mspecs is released under the gnu general public license  <cit>  and was programmed using c++ and the qt4-framework  <cit> . it can be compiled on all major platforms including windows, linux and macos x. an installer package for windows platforms as well as documentation and source code is provided on the website of the project.

RESULTS
data fields
mspecs provides an easy-to-use graphical user interface . the workspace is divided into three pages , on which data can be entered. the entries of the library are listed in a separate table on the left side, which can be undocked from the main window and moved to an arbitrary screen location. the given data fields cover all areas of interest, including viewing the spectrum in visual and tabular form, information such as retention time and kováts retention index  <cit> , identification numbers, e.g. from kegg  <cit> , chemspider  <cit>  or hmdb  <cit>  other chemical data like smiles-codes  <cit> , monoisotopic masses  <cit>  and the author's name or the date of measurement. a complete overview can be found in table  <dig>  since in the field of gc/ms it is often necessary to maintain the information of two chemical entities, the metabolite and its derivative, data fields for both substances are provided.

1) table with a given number of columns and arbitrary number of rows.

2) object storing a molecular structure.

capabilities of the user interface
each of the data fields can be activated or deactivated using the built-in settings dialog and the user interface will dynamically fit to the available space. this way, the scientist is able to adapt the interface to his needs without losing data in the hidden fields.

there is no limit to the number of open files and the user is able to copy and paste or drag and drop entries between the libraries. any user input can generally be undone by the program's undo/redo functionalities. in order to navigate through the list of entries, there are multiple sort and filter options available . the maximum number of simultaneously maintained entries depends only on the size of the main memory of the computer. assuming one gigabyte of free memory and an average size of an entry from four to  <dig> kilobytes, there are  <dig>  to  <dig>  entries that can be maintained simultaneously. bearing in mind that the nist ms library  <cit> , one of the largest mass spectral libraries available, contains about  <dig>  spectra, this should be enough for most of the tasks.

much of the data is entered in simple text boxes. however, certain information cannot be stored in simple text strings, so that a special treatment is applied. an example is the graphical representation of the structures of metabolite and derivative. structures can be imported in mdl mol file  <cit>  or cml  <cit>  version  <dig> or  <dig> format and can be displayed. furthermore structures can be exported in mdl mol file, cml version  <dig> and  <dig>  scalable vector graphics  <cit>  and several image formats such as jpeg.

it is possible to compute the molecular formula from the structure, the molecular weight of the component or the monoisotopic mass of the derivative based on the formula and furthermore the kováts retention index  <cit>  starting from the retention time and a reference list of alkanes. moreover certain fields like the identification numbers or the fields in the systems biology area  provide a link to corresponding information on the internet.

loading and saving of libraries
mspecs provides various import and export options. in addition to its own binary format, which is optimized for fast disk operations while maintaining small size, mspecs is able to load and save the amdis/nist mass spectral format  <cit> , which is also supported by the xcalibur software package from thermo scientific  <cit> . as a second file format jcamp-dx  <cit>  is supported, which again can be used together with the chemstation software by agilent technologies  <cit> .

a major part of the data fields can be exported into a tab-delimited text file, which then can be viewed in spreadsheet software. an export into the portable document format   <cit>  as well as printing is also possible. furthermore mspecs provides an implementation of the extensible markup language   <cit> , which serves as an interexchange format for prospective developments.

automation using scripts
in order to allow automated manipulations of the library a scripting language based on the ecmascript scripting language  <cit> , which is also the basis of e.g. javascript, was implemented. within the scripting environment it is possible to access all data fields and the calculations and supporting functions such as disk input/output and user interactions. additionally the scripts are embedded into the undo/redo framework of mspecs. the use of scripts can considerably simplify the maintenance of large libraries. below a script is listed that calculates the chemical formula from the given structure of each compound in a library. this script requires less than two seconds on a library with more than  <dig> entries on a  <dig> ghz processor.

/* description:

this is a demo script to illustrate the automated operation of mspecs.

*/

// process every entry in the active library.

for 

{

   // get structure of the actual component.

   var molecule = library.at.moleculecomponent;

   // calculate chemical formula from the structure.

   var formula = tools.calculateformulafromstructure;

   // store formula in the corresponding data field.

   library.at.formula = formula;

}

future development
our primary goal is to provide further interoperability with other tools like metaquant  <cit>  or bioclypse  <cit>  in order to make mspecs usable for a larger community. the data fields, the user interface and the scripting functionalities will be extended on the basis of user feedback. more vendor-specific file formats will be supported depending on available implementation details. we are currently working on a suite to view and analyze data obtained from gc/ms or lc/ms-experiments similar to amdis  <cit> , but with more possibilities such as handling high-resolution mass spectroscopic data. mspecs will be part of this suite as a library maintaining tool.

discussion and 
CONCLUSIONS
mspecs is a versatile tool for the management and editing of mass spectral libraries in the field of metabolomics. beyond that it provides capabilities for the automatic management of libraries though its scripting functionality. mspecs can be used on all major platforms and is licensed under the gnu general public license and available at 

availability and requirements
project name: mspecs;

project home page: ;

operating system: platform independent;

programming language: c++; other requirements: qt  <dig>  ;

license: gnu gpl

abbreviations
gc/ms: gas chromatography – mass spectrometry; lc/ms: liquid chromatography – mass spectrometry.

authors' contributions
bt carried out the major part of the program design and did the major part of the programming. sh participated in the design and testing of the program. ds consulted and supervised the project. all authors read and approved the final manuscript.

