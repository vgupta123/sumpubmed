BACKGROUND
the importance of rna within cellular machinery and regulation is well established  <cit> . consequently, a proper understanding of rna structure and function is vital to a more complete understanding of cellular processes. it is conjectured that the human genome contains several thousand yet undiscovered ncrnas that play critical roles throughout the cell. profile-sequence and structure-sequence methods, such as hmmer  <cit>  and infernal  <cit> , are commonly used to identify rna homologs within much larger genomic segments. however, the requirement of a reliable family alignment and/or structure diminishes the utility of these approaches. this can happen especially when searching for evolutionary distant homologs or the query rna sequence is surrounded by unalignable flanking nucleotides. in fact, homologous sequences below 60% pairwise identity are generally too difficult for current methods  <cit> . simple pairwise alignment approaches are commonly used when sufficient familial data is not available. the ssearch program  <cit> , a popular implementation of the smith-waterman algorithm, is frequently used for finding rna homologs in genomic sequences. moreover, it is a commonly used benchmark that new homology search methods are compared against  <cit> . the ncbi blast program  <cit> , which is also a local alignment algorithm, is faster than ssearch but much less sensitive.

ssearch and blast both search for optimal local alignments, with blast sacrificing sensitivity for speed. conversely, the maximal expected accuracy approach is based on suboptimal alignments. here, sequences are aligned using posterior/match probabilities within pairwise alignments. these probabilities can be computed using partition function dynamic programming matrices, introduced by miyazawa  <cit>  and later studied by others  <cit> , or pairwise hmms as done in probconsrna  <cit> . partition function posterior probabilities are analogous to nucleotide-nucleotide frequency counts estimated from an ensemble of suboptimal alignments . we recently implemented the partition function approach within the program probalign  <cit> , which outperforms other leading multiple aligners  on three different protein alignment benchmarks .

while probalign was designed for global alignment, its performance on datasets of heterogeneous length  <cit>  suggests an affinity for local alignment. here, we implement a slightly modified probalign version attuned to local alignment search. we have studied its performance on the pairwise rna-genome homology search problem for divergent sequences and when the query is flanked by genomic nucleotides. we compare it to ssearch, blast, clustalw  <cit> , and hmmer . we include clustalw  due its wide usage in solving different alignment problems. in addition, clustalw serves as an analogous example of a global multiple alignment method applied to this problem for us to compare probalign to. we have carefully constructed a benchmark of divergent rna-genomic alignments using real dna and rna sequences from the embl  <cit>  and rfam  <cit>  databases, respectively. in order to maintain a reasonable level of difficulty and tractability for the experiments, each genomic sequence in our benchmark is at least 5k and at most 16k nucleotides in length. for added difficulty and to simulate practical conditions where exact 5' and 3' ends of ncrna are unknown, we add real genomic flanks of size  <dig>   <dig>  and  <dig> nucleotides to the query rna of each dataset.

we specifically omit infernal from this investigation for several reasons. first, and most importantly,  the utility of profile-sequence and structure-sequence alignment methods is limited by experimental data. at large evolutionary distances and with unalignable genomic flanks surrounding the query, which is the particular focus of this study, obtaining reliable rna family alignments is considerably difficult. second, the cmsearch program of the infernal suite is, in part, used for constructing rfam families from which we construct our benchmark. additional sequences found using infernal were added to the rfam seed alignments  <cit> . finally, we use cmsearch in intermediary steps of producing the benchmark . in light of all these facts, it would be inappropriate to include infernal in our experiments. we include hmmer in our experiments using both global-local and local-local alignment models ; however, we construct the hmmer model using single sequence queries  from the benchmark. in this way we have a reasonable comparison to the other sequence-based programs in our test set. in the remainder of the paper we refer to this setting of the program as just hmmer.

we find probalign to have overall highest accuracies on the full benchmark. it leads by 10% accuracy over ssearch  on  <dig> out of  <dig> families. on datasets restricted to maximum of 30% sequence identity, probalign's overall median error is  <dig> % vs.  <dig> % for ssearch . this difference has friedman rank test p-value less than  <dig> . furthermore, on these datasets, probalign leads ssearch by at least 10% on five families whereas ssearch leads probalign by the same margin on two families out of a total of fourteen. we also demonstrate that the probalign mean posterior probability, compared to the normalized ssearch z-score, is a better discriminator of alignment quality. the probalign mean posterior probability has receiver operator characteristic  area under curve of  <dig>  compared to  <dig>  of the normalized ssearch z-score.

note that the performance of rna homology search programs was examined previously by freyhult et. al.  <cit> . their benchmark and goals, however, were considerably different than ours. they studied rna homology searches within rfam rna sequence databases without genomic flanks, and considered only a single genomic search example. here, we are specifically interested in performance of programs for finding low sequence similarity rna homologs  in long genomic sequences.

RESULTS
we computed the mean error of each method within each rna family by averaging over all pairwise alignment scores belonging to that family. we then computed the overall error of each method as the average score across all families.

full benchmark with query flanks
the full benchmark containing query rnas with flanks constitute  <dig>  datasets. we exclude hmmer when unalignable flanks are present since these will only confound the model. table  <dig> lists the overall mean and median error of all methods on the full benchmark. probalign's improvement is statistically significant lowest on datasets restricted to max 30% sequence identity. on these datasets it leads ssearch  by  <dig> % in mean error and  <dig> % in median error.

blast does not return an alignment in  <dig> datasets and hence they are omitted from the calculations. hmmer is not shown since queries with unalignable flanks cannot be used to produce a reliable model. there are  <dig> families that contain datasets with at most 30% sequence identity. probalign has overall lowest mean and median error. bold indicates the best performance; the difference is larger on datasets with low sequence identity and significant with p-value <  <dig>  .

unlike table  <dig> above, where some datasets are omitted due to blast, all datasets of the benchmark are considered here. difference is always calculated as the ssearch error minus probalign error, meaning positive numbers indicates probalign outperforms ssearch. shown in parenthesis is the number of datasets in each family with maximum pairwise sequence identity of 30% .

column two of the table lists the probalign and ssearch error on datasets restricted to maximum 30% sequence identity. there are fourteen families containing datasets that satisfy this criterion. out of the total fourteen, probalign leads by at least 10% on five families whereas ssearch leads probalign by at least same margin on two families.

in table  <dig> we look at the effect of increasing query flank size on the accuracy of all methods. as expected, all methods yield higher error as the query rna flank size increases. however, probalign still has the statistically significantly lowest error .

for each flank size there are  <dig>  datasets . as in table  <dig> about  <dig> datasets per flank size are omitted on which blast does not return any output. bold indicates the best performance and * indicates friedman rank test p-value <  <dig> .

benchmark without query flanks
in order to compare the programs against hmmer, we separate from the benchmark those datasets with no query rna flanks . each of these query rnas can be used to specify a model in hmmer since misleading flanks are now absent. from table  <dig> we see that hmmer does not perform very well with single sequence profiles, which is not surprising as using in this way  clearly goes against its intended usage. on datasets restricted to maximum pairwise identity of 30% probalign has the lowest mean and median error, leading by at least 18% over ssearch, the next best method.

probalign has lowest mean and median error on low sequence identity datasets.

discriminating true from false alignments
in order for the evaluated methods to be of practical utility in ncrna searches, alignments found when there is no target-query match , should be of poorer quality than the alignments above where target-query matches were always present. to assess the discriminative ability of probalign and ssearch , we generated a false dataset of query-target pairs where the query and target were randomly selected from distinct rfam families . the size of the false dataset is  <dig> , exactly the same as the real dataset used above. concatenating the real and false datasets results in  <dig>  target-query pairs that were subsequently aligned using both methods. an alignment on a false positive dataset or an alignment with 100% error on the benchmark is classified as a false positive. an alignment on the benchmark with less than 100% error is classified as a true positive. a good discriminator would have a high value on alignments with high accuracy and low value on alignments with 100% error on benchmark datasets or on the false positive dataset. in this case we are interested in the quality of the probalign mean column posterior probability and the ssearch normalized z-score as alignment discriminators.

in order to evaluate a discriminator, we need to set an ad hoc threshold. for example, we may choose to classify all alignments above  <dig>  probalign mean column posterior probability to be correct hits and incorrect otherwise. in order to eliminate the arbitrariness of such a definition, we employ receiver operating characteristic  analysis. along the roc curve, true and false positive prediction values are plotted for a series of less stringent thresholds. the further the roc curve is to the left, the better the method is; the diagonal indicates a method based on random guesses. as can be clearly seen in figure  <dig>  both methods perform significantly better than random. however, the analysis also clearly indicates that probalign is better able to discriminate true from false target-query pairs. probalign has an area under curve of  <dig>  whereas ssearch has  <dig> . the improved performance of probalign is most striking at false positive rates between  <dig> and 40%.

computational running time and memory requirements
the current probalign implementation is not as sophisticated as its ssearch counterpart, and therefore is much slower in comparison to the ssearch time. however, in practice it never takes more than a few seconds on any of our datasets. the average probalign running time on the benchmark is  <dig>  seconds compared to  <dig>  seconds of ssearch,  <dig>  seconds of clustalw,  <dig>  seconds of blast, and  <dig>  seconds of hmmer . these running times were computed on  <dig>  ghz amd opteron  <dig> bit machines.

discussion
a standard technique for discovering new rnas, in the absence of queries, is to align genomic fragments and search the alignment for significant structural conservation. qrna  <cit>  rnaz  <cit>  and msari  <cit>  are some well-known programs frequently used for this purpose. their performance, of course depends upon the underlying sequence alignments. our work here suggests that probalign genomic alignments may align hidden  rna better than standard methods when given two genomic sequences. as a result it could produce more informative alignments for rna detection programs such as the ones listed above.

several improvements are currently underway to probalign. a full probalign-local implementation would include a smith-waterman implemenation of posterior probability local alignment, as done in the proda  <cit>  program. we expect such an implementation to produce better mean posterior probabilities estimates of the alignment quality since it would exclude unrelated genomic flanks.

in big-o notation probalign's worst-case running time and memory requirements for pairwise alignment is o where m and n are the lengths of the input sequences. probalign's memory requirements can be improved to o with a  <dig>  factor slowdown using memory reduction techniques used for hmm-based alignment programs  <cit> . this is part of planned future work.

finally, it remains to be seen if probalign partition function posterior probabilities demonstrate the same level of improvement seen her for the profile-sequence alignment and profile-profile alignment problems. the utility of profiles, however, is limited when unknown and unalignable genomic flanks are present or the family alignment is not rich or accurate enough. in that case, our current probalign implementation offers a viable solution as demonstrated.

CONCLUSIONS
this report represents the first examination of the probalign alignment algorithm to search for rna homologs within much larger genomic segments using partition function posterior probabilities. we show that the method does much better than the widely used ssearch and blast programs. furthermore, the probalign mean posterior probability  has been shown to be a better indicator of alignment quality than the standard ssearch z-score.

