BACKGROUND
the sequencing of entire genomes has become a routine task in molecular biology. to date, about  <dig> fully sequenced eukaryotic genomes comprising more than  <dig>  million protein coding sequences are available in the public domain  <cit> . only a small fraction of these species are model organisms with considerably well characterized protein functions. most of the remaining species are either of commercial or medical interest, qualify for new model organisms, or hold key positions required for the understanding of organismal evolution. the benefit of a newly sequenced organism essentially depends on the extent to which its data is integrated into existing knowledge about function and evolutionary relationships of genes in other species. a thorough experimental characterization of all proteins is not feasible. therefore, comprehensive bioinformatics approaches are needed to reliably identify functionally equivalent proteins across species. two roads are usually followed to accomplish this task.

the first and more common approach searches for proteins with a significant sequence similarity, which is commonly taken as evidence for their common ancestry. for example, a protein with unknown function can be used as query to search for similar sequences in annotated protein databases, e.g., with blast  <cit>  or, for more sensitive searches, using machine learning algorithms, like psiblast  <cit>  or support vector machines  <cit> . the functional annotations of the best hits serve then as tentative annotations for the query, e.g.,  <cit> .

clearly, one limitation is inherent in this approach: functional equivalence is not tied to a significant sequence similarity. this can have several reasons: first, a query may not obtain a significant hit in a similarity search since the homologous proteins with the same function are too diverged, or are of low complexity. second, homologs may be identified via sequence similarity but they have assumed diffrent functions  <cit> . for example, in the case of enzymes about 60% of sequence identity between homologous proteins is required to reliably infer functional equivalence  <cit> . thus, a functional annotation transfer between homologs can be wrong. if such an error remains undetected, it can spread through databases  <cit> . third, it has been shown that proteins with the same function are not always homologous, but rather are a result of convergent evolution  <cit> . in such instances sequence similarity based searches for functional equivalents produce no results. in summary, functional equivalence is not synonymous with homology. the second approach to identify functional equivalents does not rely on homology inference by means of pair-wise sequence similarity but rather considers other measures of protein similarity. amino acid sequences can be annotated with a plethora of features, capturing different properties of the protein. among others, these are functional domains, secondary structure elements and compositional properties.

the aggregate of all features in a protein constitutes its feature architecture, and it is supposed that this feature architecture allows conclusions about the function of a protein. a number of studies have shown the applicability of such a feature based approach, e.g.,  <cit> . the possibility to deduce protein function from the feature architecture suggests that feature architecture similarity can be used to identify proteins sharing a similar function. for example, inparanoid displays the pfam  <cit>  domain annotation of homologous proteins  <cit> . thus, we can quickly assess if homologs can be functional equivalents. in the same way, proteinarchitect  <cit>  finds similar proteins to a query sequence and displays the feature architecture of the hits. however, these tools provide the feature annotation only as an accessory information. the search for similar proteins in the first place is still performed on the amino acid sequence level. the necessity to include information about the feature architecture into the search for functional equivalents was emphasized by forslund et al.  <dig>  <cit> . they showed that roughly 12% of the feature architectures in  <dig> eukaryotic proteomes evolved more than once independently. hence, the corresponding proteins are functionally similar although they are not homologous.

despite its potential for identifying functionally equivalent proteins, only few strategies exploit the feature architecture for similarity searches  <cit> . lin et al.  <cit>  were the first to measure the similarity between feature architectures using a weighted sum of three indices. the first index measures the ratio of shared features to the total amount of features. the second index assesses the feature duplication similarity, and the third, the goodman-kruskal index, measures to what extent the same feature pairs occur in two proteins. a detailed description of the lin score is given in the implementation section. lee and lee  <dig>  <cit>  additionally introduced a weighting scheme that reduces the influence of promiscuous pfam domains  <cit> . notably, all approaches share the same limitations. most importantly, feature architectures are constructed only from pfam domains. thus, other features such as transmembrane regions or coiled coil domains indicative of protein function are ignored. furthermore, the positional information of shared features in the compared proteins is not taken into account. eventually, a systematic evaluation to what extent feature architecture similarity is helpful in detecting functional equivalents is also missing. lin et al.  <dig>  <cit>  and lee and lee  <dig>  <cit>  evaluated their approaches only for their capability of detecting homologous proteins. thus, the search for functional equivalents using feature architecture similarity is still in its infancy.

here, we present fact a comprehensive method for searching for functionally equivalent proteins using the criterion of feature architecture similarity. fact considers a broad spectrum of features  to determine the feature architecture of a protein. moreover, the positions of the features in a protein sequence are taken into account. fact can be used to search for functional equivalents in entire proteomes and the credibility of the best hit is assessed by a p-value. this makes an automated large scale search for functional equivalents possible. a graphical interface, the feature dotplot, complements the automated similarity search and facilitates a visual comparison of two feature architectures. we evaluate the fidelity of fact using a collection of ec classified enzymes and demonstrate fact's applicability for identifying functional equivalents. a comparison to the performance of existing approaches to infer functional equivalence from feature architecture similarity, as e.g., described in  <cit> , on the same set of enzymes is used to assess the improvement of fact. finally, we compare for the first time the usability of two protein similarity measures, sequence similarity and feature architecture similarity, for identifying functional equivalents, and we explore their respective strengths and weaknesses.

implementation
as a first step, fact annotates the query and each protein in the search set with a broad variety of features , i.e., functional domains , secondary structure elements , and compositional properties . a pipeline of several feature prediction programs serves this purpose. the underlying feature set Φ is, therefore, determined by the collection of prediction programs. the feature architecture of a protein is then the arrangement of instances of features in Φ .

measuring the similarity of feature architectures
to identify proteins with a similar feature architecture to a query protein q, we measure the pairwise similarity between q and every protein p in a proteome. we implemented a modified version of the score from lin et al.  <dig>  <cit>  and introduce the fact score.

modified lin score 
lin et al.  <cit>  score the similarity of two pfam based feature architectures by combining the jaccard index, a domain duplication similarity index, and the goodman-kruskal index with relative weights  <dig> ,  <dig> , and  <dig> , respectively. calculating the goodman-kruskal index requires the order of pfam domains along the sequence. our feature set Φ contains a plethora of additional features that can overlap in the feature architecture . in such instances, it is unclear how to assess the feature order. however, given its low relative weight of  <dig> , the contribution of the goodman-kruskal index to the total score is negligible. thus, we ignored this index in our implementation and adapted the weights of the two other indices accordingly. we calculate the mls as

  l= <dig> *npqnp+nq−npq+ <dig> *exp, 

where npq is the number of shared features between protein p and the query protein q. np and nq are the number of different features in p and q, respectively. nip and niq count the instances of feature i in p and q, respectively and

  nmax=∑i=1np+nqmax. 

one drawback of the mls is that it does not include information about the position of individual features in the proteins. therefore, we introduce a new scoring function.

fact score
the fact score computes the feature architecture similarity between proteins as the weighted sum of three scores considering  the number of instances for all shared features,  pfam clan annotations, and  the positions of shared features in the proteins. we describe the three building blocks of the fact score in the following paragraphs.

feature multiplicity similarity 
the ms assesses to what extent the numbers of instances for a shared feature agree between two architectures. for each shared feature i, we compute the product of its number of instances in p  and q , and normalize this number by the theoretically maximal value max <dig>  the ms is then the weighted sum over all shared features.

  ms=∑i=1npqωi*nip*niqmax <dig>  

where ωi >  <dig> is the weight for feature i. we use two weighting functions. first, ωi = 1/nq where i =  <dig>  ..., npq. this corresponds to an equal weighting of all features in q. the resulting score is called msuni. second, we include the frequency of a feature i from q in p into the weighting. to this end, nip counts how often feature i from q is observed in p. the corresponding weight is then

  ωi=nipΣj=1nqnjp, 

where i = . this ensures that Σi=1nqωi= <dig>  it is now straightforward to extend this weighting to a set of proteins {p <dig>  p <dig>  ..., pl}, e.g., a search proteome. we calculate the weight as

  ωi=Σk=1  lnipkΣk=1  lΣj=1  nqnjpk. 

we refer to this score as msst. in the msst, feature architectures sharing features that are rare in the search proteome receive a higher score than those sharing frequent features. this reflects the intuition that shared rare features are more likely to point towards a similar function than shared frequent features.

pfam clan similarity 
pfam groups similar domains into clans  <cit> . for example, the pfam clan rnase_h  consists of  <dig> domains with a tertiary structure similar to that of ribonuclease h. this structural similarity implies similarity in the function of the clan members. the cs score takes into account the co-occurrence of different pfam domains in a clan. it is calculated analogously to the msuni score.

  cs=1cq∑i=1cpqcip*ciqmax <dig>  

where cq is the number of different pfam clans in q, cpq is the number of shared pfam clans between p and q, and cip and ciqare the numbers of instances of clan i in p and q, respectively.

feature positional similarity 
the ps measures the distance between the relative positions a shared feature occupies in the compared proteins. for every instance of a shared feature in p and q, we first determine the relative position within p and q. subsequently, we identify for each instance in q the instance in protein p having minimal distance. one minus the minimal distance between two feature instances yields a similarity. we calculate ps as following

  ps=∑i=1npqωiniq∑j=1niq, 

where the relative position qj of the jth instance of feature i in protein q is the center position of this instance divided by the sequence length. the positions pl of the feature instances in protein p are calculated accordingly. the use of relative positions ensures that shared features located at the c-terminus in both proteins have a small distance even if the protein lengths are different. the weights ωi of the individual features correspond to those of the msst.

the fact score is a weighted linear combination of the feature multiplicity similarity , the pfam clan similarity , and the feature position similarity  .

  fact=α*msst+β*cs+γ*ps∈ <cit> , 

where α + β + γ =  <dig>  and α, β, γ ≥  <dig> 

score statistics
using the scoring functions introduced in the previous section, we calculate the feature architecture similarity scores between a query protein and every protein in a search proteome. from the resulting distribution of scores, we assess the extent to which the top scoring protein stands out from the lower ranking proteins . for this purpose, we fit a beta distribution  <cit>  to the score histogram. we have chosen the beta distribution for two reasons. first, it can assume different shapes. this fits well with histograms, even when different scoring functions are used . second, it is defined in the range from  <dig> to  <dig>  which is the exact range of the scores. we estimate the two shape parameters of the beta distribution from the mean, and the variance from all scores by the method-of-moments  <cit> . the p-value for a score x is then calculated as one minus the cumulative distribution function of the beta distribution of x. the smaller the p-value is, the more pronounced is the feature architecture similarity between the query and the highest scoring protein compared to that of the lower ranking proteins.

feature dotplot
for a visual inspection of individual query hit pairs, we have developed the feature dotplot , which extends the idea of a classical dotplot to the feature level. the fdp projects the features of two proteins along the x-and y-axis, respectively. a feature occurring in both proteins is represented by a diagonal line in the dotplot, where the slope of the line indicates the length ratio of the features in the proteins. different features are represented by different colors. the standard amino acid dotplot is embedded into the fdp as well.

fact webpage
fact is provided online on the webpage http://www.cibiv.at/fact. the user can search for functional equivalents to a query protein in entire proteomes. currently, the collection consists of  <dig> eukaryotic species , but further species will be added. for every query protein fact determines the feature architecture. then the fact, msuni, msst and the mls scores between the query protein and all proteins in a search proteome are computed. for each scoring function the  <dig> highest scoring proteins are listed and a histogram of all scores is displayed. additionally, the p-values for the highest scoring protein are shown. the fdp between the query protein and any protein from the score list can be viewed. the fdp links pfam and smart domains to the corresponding web pages. furthermore, possibilities for displaying or hiding specific features, changing the word size for the amino acid dotplot and for exporting the feature dotplot are provided. finally, a blast search against the search proteome is performed and the best three hits are listed. a fact search conducted on this webpage takes currently about  <dig> to  <dig> minutes depending on the size of the search proteome. as an alternative to the proteome wide search, the fdp can be used to compare two user-defined proteins. the features of both sequences are annotated automatically and displayed in the dotplot.

RESULTS
fact has been developed for identifying functionally equivalent proteins. to assess the applicability of our program we require that the tested proteins have the exact function assigned. to the best of our knowledge, only the proteins annotated by the enzyme commission  satisfy this condition. the ec provides a hierarchical classification of the reaction catalyzed by an enzyme. the code consists of four numbers separated by dots. the first number determines the main catalyzed reaction , while the last number provides the most specific information about the catalyzed reaction. if two enzymes share the same ec number, they catalyze the same reaction and are therefore functional equivalents. thus, the ec classifies enzymes according to their function and not according to their evolutionary relationships . we collected ec annotated proteins from human, fly, worm, yeast, and arabidopsis and filtered the dataset such that each ec number is represented at least twice. the final test set is comprised of  <dig>  proteins. the average and median numbers of proteins with the same ec number are  <dig> and  <dig>  respectively.

comparison of different scoring functions
for our evaluation, each protein from the test set served as a query for fact. the similarity scores between the query protein and the remaining  <dig>  proteins from the test set were then calculated. subsequently, we compared the ec number of the highest scoring protein to that of the query. if one highest scoring protein has the same ec number as the query, the proteins are functional equivalents. the fidelity of a scoring function is then the percentage of searches where a functional equivalent gets the best score. table  <dig> shows the fidelities for the different scoring functions. for the fact score we chose α, β and γ in the ratio 3:1: <dig> . the mls and msuni display fidelities of around 80%, thus in 20% of the  <dig>  searches a protein that is not functionally equivalent to the query obtains the highest score. weighting the individual features according to their frequency in the test set  increases the fidelity to 83%. the best result was obtained with the fact score which also takes clan similarity and positional information into account. in  <dig>  out of  <dig>  cases , a functional equivalent to the query obtained the highest score.

'# prot ' denotes the number and percentage of correctly identified functional equivalents in the test set of  <dig>  proteins.

when we analyzed the fidelity with respect to the main reaction catalyzed , a functional equivalent was identified for  <dig>  query proteins .

relevance of features
in addition to pfam and smart domains, the underlying feature set Φ of fact includes a variety of other protein features, e.g., secondary structure elements and compositional properties. we next assessed the relevance of including these features. we compared the fidelity of the functional equivalent search using pfam domains only to the fidelity based on the full feature set. the median number of proteins having the same best score is 9- <dig>  for the pfam only set. this number decreases to  <dig> for the full feature set. thus, considering a broad variety of features leads to a better discrimination in the assessment of feature architecture similarity. in contrast, searches using only pfam domains frequently end up with many equally best scoring proteins representing different ec numbers. for further evaluation, we consider a hit protein only then as an identified functional equivalent when its ec number matches that of the query, and additionally when it is uniquely top ranked in the score list. table  <dig> shows the results of this analysis. the fidelities for the pfam only set range, depending on the scoring function, between  <dig> and 9%. using the full feature set leads to a drastic increase of the fidelity to values between  <dig> and 74%.

'# prot ' denotes the number of top ranked functional equivalents with a unique highest score. since the fact scoring considers clan information it was not used for the calculation with only pfam domains.

p-value for fact hits
for each highest scoring protein a p-value is calculated. we determined the relation between p-value and the fidelity of fact using the fact score. with a decreasing p-value, the fidelity increases to a maximum of 98% at a p-value smaller than 10- <dig> . considering only those functional equivalents as identified that are uniquely top ranked, the fidelity increases up to 85% at a p-value below 10- <dig> . however, as expected, the increased fidelity comes at the cost of the coverage. for example, of the  <dig>  searches only  <dig>  have a highest scoring protein with a p-value smaller than 10- <dig> . our analysis shows that an annotation transfer between the query hit pair becomes more reliable when the p-value is small. thus, we conclude that the choice of the beta distribution leads to sensible results.

feature architecture similarity vs. sequence similarity as a proxy for functional equivalence
with fact we provide a comprehensive tool to search for functional equivalents using feature architecture similarity. we now compare fact to the alternative approach that identifies functional equivalents via a significant sequence similarity, e.g., using blast  <cit> . therefore, we run both methods on the test set. to ease the comparison between the two results, we again required a correctly identified functional equivalent to be uniquely top ranked. figure  <dig> breaks down the results from blast and fact . blast identified  <dig>   functional equivalents compared to  <dig>   for fact. in  <dig>   searches both approaches obtained a functional equivalent as highest scoring protein. moreover, in  <dig>   searches the highest scoring proteins were even identical.  <dig>   functional equivalents were detected exclusively by fact, whereas  <dig>   were detected only by blast. although fact performs slightly better than blast, the large number of functional equivalents found only by blast indicates that both approaches are complementary. this conjecture is further corroborated by the following observation: when fact and blast detect the same protein as best hit, the query hit pair is in 99% of the cases functionally equivalent.

fact outperforms blast in situations where sequence similarity between functional equivalents is low. when the e-value exceeds one, the best blast hit is only in 1% a functional equivalent. for the same query proteins fact still achieves a fidelity of 31% . for e-values ≥10- <dig> the fidelity of blast increases to 39%, but it is still higher for fact .

to further explore the complementarity of both approaches we conducted a more detailed analysis. for any query protein in our test set, blast and fact each identified a top scoring protein with an associated e-value and p-value, respectively. first we showed that e-value and p-value are not correlated . thus, a query obtaining a blast hit with a small e-value does not imply a fact hit with a small p-value, and vice versa. second, we binned the query proteins according to their e-value/p-value combination. for each combination, we counted the number of query proteins that fall into the bin. then for each bin we counted how often blast and fact identified a functional equivalent. these numbers are represented in the matrix shown in figure  <dig>  this matrix gives a guideline under which e-value/p-value combination either blast or fact is more likely to find a functional equivalent. for query proteins obtaining poor blast hits , the fact predictions are more credible. a similar picture emerges for queries having a blast hit with a reported e-value of zero. once the p-value exceeds 10- <dig>  fact always identifies more functional equivalents than blast. finally, we note that psiblast is more sensitive than blast in detecting even weak sequence similarities that may be indicative of a similar function. we therefore compared fact also to psiblast. this confirmed our findings from the fact-blast comparison .

example applications of fact
to illustrate the versatility of fact in searching for functional equivalents we discuss two examples. the general procedure of a fact search is summarized in figure  <dig> 

missing link in the glutathione metabolic pathway
a common task in comparative genomics is the identification of proteins that are involved in known metabolic pathways in different species. as of today, the evolutionary relationships between proteins are usually used for this purpose, e.g.,  <cit> . in some cases however, orthologs to individual proteins cannot be identified. consequently, the question is raised of whether the corresponding functional equivalents are not present in the respective species or whether sequence similarity based searches cannot detect them. the glutathione metabolic pathway in the kegg database  <cit>  constitutes one illustrative example. it is one of the central detoxification pathways in animals and fungi. an ortholog to the human glutathione s-transferase , a central enzyme in this pathway, is not annotated in the yeast genome. however, orthologs to the human proteins flanking the glutathione s-transferase in the pathway are present .

a blast search using the human glutathione s-transferase protein as query revealed no significant hits in the yeast proteome. the best blast hit  has no feature in common with the human query protein except α-helices and β-sheets. instead, it contains two rna recognition motifs . similarly, the best psiblast hit  has no feature in common with the human query protein except α-helices and β-sheets. next, we performed a fact search in the yeast proteome, again with the human enzyme as query. this revealed the same best hit for all scoring functions . thus, from the corresponding e-value/p-value entry in figure  <dig> , there is a 50% chance of having detected a functional equivalent. we next used the fdp of the fact hit and the query protein to validate the candidate . both proteins have the n-terminal and the c-terminal glutathione s-transferase  domains and share a predicted transmembrane region. therefore, we conclude that the two proteins are functional equivalents. this has indeed been confirmed, since both proteins have been annotated with the same ec number  <cit> . thus, fact helps to identify candidate proteins that may close gaps in biochemical pathways.

functional equivalents for golga5
in our second example we focussed on a structural protein, golga <dig>  which is important for assembling and maintaining the structure of the human golgi apparatus  <cit> . almost the entire protein is made up of coiled coils. this structure is formed by low complexity repeat units consisting of hydrophobic and polar residues. consequently, many different sequences can assume a coiled coil structure. thus, a sequence similarity based search for functional equivalents in very distantly related species is likely to be not successful. we performed a fact search with the human golga <dig> in trypanosoma brucei. the highest scoring protein agrees only between the msst and the fact score , while two different proteins were identified by the ms
uni  and the mls . for that reason, all top ranked hits and the best blast hit  and best psiblast hit  were analyzed with the fdp  since the function of golga <dig> requires its anchoring in the plasma membrane, we curated the results according to the presence of a transmembrane region. among all hits, tb <dig> . <dig>  is the only protein that shares a c-terminal transmembrane region with the human golga <dig>  thus, we consider it to be the most promising candidate for the golga <dig> functional equivalent in t. brucei. notably, it was recently shown that this protein exerts the same function in t. brucei as golga <dig> does in humans  <cit> .

discussion
here we present fact, a tool for searching for functionally equivalent proteins. fact computes the pairwise similarity between feature architectures and identifies for a query protein the highest scoring hit in an entire proteome. evaluating the performance of fact on ec classified enzymes reveals a fidelity of 84%.

how to measure the similarity between feature architectures still remains an open question. so far, all suggestions are ad-hoc solutions to the scoring problem. for example, the lin score  <cit>  assesses the similarity between two proteins from their features in common and also considers the set difference. thus, features that are not shared between two proteins reduce the score. this scoring appears reasonable when feature architectures consist only of functional domains, e.g., pfam domains. in such cases, the presence of an extra feature in one protein is likely to also reflect a functional difference between the compared proteins. however, in our study we used a comprehensive feature set, where some features lack an obvious connection to function. therefore, we introduce a new score that considers only shared features. our evaluation on a set of ec classified enzymes reveals that the fidelity in identifying functional equivalents does not heavily depend on whether or not the feature set difference between two proteins is taken into account. both scoring functions, the mls and msuni perform equally well. their conceptual difference, however, becomes relevant in individual cases as shown by our golga <dig> example application. the best scoring protein according to the mls shares  <dig> features with the query and has one extra feature . in contrast, msuni identifies a highest scoring protein that shares  <dig> features with the query but has  <dig> extra features .

the idea of giving individual features different weights has been presented before. lee and lee  <dig>  <cit>  weight a pfam domain depending on its frequency in the refseq database  <cit>  and on the diversity of its flanking pfam domains. note that the latter criterion is not straightforward to implement when features can fully overlap, and hence, feature order cannot be determined. in the msst, we weight a feature according to its inverse frequency in the search proteome. this weighting scheme can be applied to any feature, and takes into account that feature frequencies can vary between search proteomes. the comparison of msuni and msst reveals that the introduction of weighting increases the fidelity by 2%. unfortunately, comparing the effect of our weighting to that of lee and lee  <dig>  <cit>  is impossible, since in their evaluation the scoring functions differed not only in the weighting but also in the way shared domains are scored.

among all scoring functions, the fact score performs best . this is the consequence of including clan similarity and positional similarity. we compute the fact score by combining the scoring functions msst, cs, and ps in a ratio of 3:1: <dig>  we consider the number of shared features and their number of instances to be the most important parameters in determining the similarity between feature architectures. the clan annotation as well as the position of features are supplementary information that only have a moderate influence on the final score. note that we deliberately did not optimize the weight parameters α, β, and γ with respect to the fidelity on the ec based functional annotation. enzymes cover only a fraction of the diversity of protein functions. we wanted to avoid a bias towards this particular class of proteins, which could interfere with the general applicability of fact  <cit> .

in contrast to existing tools that use pfam domains for identifying functionally similar proteins  <cit> , fact recruits a diverse set of features for building the feature architectures. our evaluation highlights the significance of using a comprehensive feature set. when considering only pfam domains, the median number of equally best scoring proteins is 9- <dig>  depending on the scoring function. the most extreme case comprises the  <dig> enzymes lacking any pfam domain. when these proteins are used as query, all proteins in the search proteome obtain the same score. however, the median number of enzymes with the same ec number as the query is only  <dig>  consequently, in the vast majority of searches more than one ec number is represented by the top ranked proteins. the search result is therefore ambiguous. to facilitate a meaningful assessment of the fidelity, we required a correctly identified functional equivalent to be uniquely top ranked. this reveals a maximal fidelity of 9% . in contrast, when we use the fact feature set, the median number of equally best scoring proteins reduces to one. this shows that the similarity score becomes more discriminative when more features are considered. as a consequence, the fidelity raises to 74% . notably, for the proteins without pfam domains a correct functional equivalent was still identified in  <dig> cases.

there is still room for improvement regarding the search for functional equivalents. so far, all approaches are based on ad-hoc solutions for measuring the similarity between feature architectures since modeling their evolution is still an open problem. moreover, the function of a protein essentially depends on its tertiary structure. however, tertiary structure elements are not yet part of the feature set. both the integration of evolutionary models and of complex features is likely to result in more sensible similarity measures.

feature architecture similarity based approaches identify functional equivalents. this supposedly complements sequence similarity based approaches represented, e.g., by blast or psiblast. here we have compared the fidelity of fact to that of blast. a substantial fraction of functional equivalents were top ranked exclusively by fact. this includes the cases where sequence similarity was too low to result in a significant blast hit, but fact still detected functional equivalents. finally, we observed no linear correlation between the e-value of the best blast hit and the p-value of the best fact hit for a given query. in summary, these results confirm the complementarity of feature architecture similarity based approaches and sequence similarity based approaches in the search for functional equivalents. this finding is independent of whether we used blast or psiblast. the complementarity is further corroborated by those searches where fact and blast identify the same best hit. in such instances, the fidelity increases to 99%. thus, a joint application of a feature architecture measure and a sequence similarity measure allows for highly reliable automated functional annotation transfers. however, this increase of the fidelity comes at the cost of detecting only 42% of the present functional equivalents in our test data. in cases where the two approaches disagree, we need to decide which of the hits is more likely to be a functional equivalent. to facilitate this decision, we have compared the fidelities of blast/psiblast and fact depending on the e-value and p-value of the highest scoring protein for a given query . notably, for searches where both methods obtained a good hit, i.e., small e-value and small p-value, respectively, fact finds a functional equivalent more often than the other program. however, in most cases, a decision of whether a fact hit that is not confirmed by blast, or vice versa, is a functional equivalent will require manual curation. we have presented two examples where we searched for functional equivalents to the human glutathion s-transferase in yeast, and to the human golga <dig> in t. brucei. these examples showed that the feature dotplot is a versatile tool to curate results from fact searches. the feature dotplot facilitates an educated judgement of how similar two feature architectures are, and how likely it is that the corresponding proteins are functionally equivalent. together with the implementation of four different scoring functions and the blast search, the feature dotplot complements the toolbox for a comprehensive search for functional equivalents.

CONCLUSIONS
fact uses the similarity of feature architectures between two proteins to search for functional equivalents in entire proteomes. fact has a high fidelity and outperforms existing approaches that identify functional equivalents based on the presence of pfam domains. this increase in fidelity is mainly accomplished by using a diverse set of features that are recruited for building the feature architectures. the different weighting of individual features and the relative position of shared features in the compared proteins provide additional information. fact complements sequence similarity based approaches, such as blast, in the search for proteins with an equivalent function. it is, thus, particularly useful when distantly related species with highly diverged sequences are analyzed, or in cases where functional equivalents are not homologous. both aspects will become increasingly relevant the more genome data from 'exotic' species becomes available. however, there exists no globally optimal solution to the problem of identifying functionally equivalent proteins. it is therefore necessary to compare the results from different scoring functions measuring feature architecture similarity and from sequence similarity based searches to select the most promising functional equivalent candidates. the feature dotplot to visually inspect the feature architectures of two proteins facilitates this manual curation. we have demonstrated the joint use of fact, blast and the feature dotplot in a comprehensive search for functional equivalents in two example applications. they serve as a guideline of how to use these tools to propagate existing knowledge about the function of proteins from one species to another.

