BACKGROUND
ribonucleic acids  are macromolecules that play fundamental roles in many biological processes, and in many cases their structure is essential for their biological function. a secondary structure for an rna strand is simply a set of pairing interactions between bases in the strand. each base can be paired with at most one other base. most base-pairings occur between watson-crick complementary bases c and g or a and u, respectively . other pairings, such as g•u, can be found occasionally. secondary structure determines many important aspects of rna tertiary structure; it can, for example, be used in part to explain translational controls in mrna  <cit>  and replication controls in single-stranded rna viruses  <cit> .

almost all widely used computational approaches for prediction of rna secondary structures from single sequences are based on thermodynamic models that associate a free energy value with each possible secondary structure of a strand. the secondary structure with the lowest possible free energy value, the minimum free energy  structure, is predicted to be the most stable secondary structure for the strand. there are widely used dynamic programming algorithms that, given an rna strand of length n, find in Θ time the secondary structure with the lowest free energy, from the class of pseudoknot-free secondary structures. throughout this paper, all references to secondary structures refer to pseudoknot-free secondary structures.

 <dig>  the rna secondary structure design problem
this work focuses on the design of rna strands that are predicted to fold to a given mfe secondary structure, according to a standard thermodynamic model such as that of mathews et al.  <cit> . this rna secondary structure design problem, which can be seen as the inverse of the rna secondary structure prediction problem, is relevant because the ability to solve it will facilitate the characterization of biological rnas by their function and the design of new ribozymes that can be used as therapeutic agents  <cit> . there are also applications in nanobiotechnology in the context of building self-assembling structures from rna molecules  <cit> .

dirks et al.  <cit>  described two paradigms for designing a structure. a positive design optimizes sequence affinity for the target structure, while a negative design optimizes sequence specificity to the target structure. sequences with high affinity have energetically favourable conformations similar to the target structure. for sequences with high specificity, structures other than the target structure are energetically less favourable. dirks et al.  <cit>  defined several criteria to evaluate the specificity and the affinity of a structure and found that it is desirable to achieve both, high affinity and high specificity. another solution to the rna secondary structure design problem is the stochastic local search algorithm provided by hofacker et al.  <cit> , rnainverse, the implementation of which is included in the vienna rna secondary structure package. a more recent stochastic local search algorithm, the rna secondary structure designer  of andronescu et al.  <cit>  has been shown to achieve substantially better performance on artificially designed and biological rna structures.

the purpose of this work is to understand better the factors that render rna structures hard to design. such understanding provides the basis for improving the performance of rna-ssd and for characterising its limitations. to our knowledge, it has not been determined whether there is a polynomial-time algorithm for rna secondary structure design. schuster et al.  <cit>  performed experiments with the rnainverse algorithm on few small random sequences and a simple trna to support the hypothesis that there is no need to search huge portions of the sequence space to find a particular structure by mutation and selection. based on these experiments, they argue that sequences sharing the same structure are distributed randomly over sequence space and that common structures, that is, structures that have many sequences that fold into them, can be accessed from an arbitrary sequence compatible with the target structure by a number of mutations much smaller than the sequence length. these results are based on small sequences and therefore they do not give insight into the computational complexity of the design problem. on the other hand, andronescu et al.  <cit>  found evidence that some ribosomal rna structures are difficult to design and that the correlation between the size and hardness is not very strong. for example, from a set of four ribosomal rna structures of length between  <dig> and  <dig>  rna-ssd solves two structures in less than five cpu seconds on a high-performance pc, compared to three cpu minutes expected run time for the third structure and  <dig> cpu minutes for the fourth one. 

therefore, to gain insights into the practical complexity of the rna secondary structure design problem, we present an empirical analysis of an improved version of the rna-ssd algorithm of andronescu et al.  <cit>  that has been developed in the context of this work . we also include the vienna rnainverse algorithm  <cit>  in our analysis. our analysis uses randomly generated structures, obtained by folding a randomly generated sequence with the rnafold function from the vienna package, as well as structures that were generated according to a statistical model derived from biological rna structures; we refer to the latter as biologically motivated structures. our scaling analysis supports the hypothesis that the running time of the algorithms is polynomial in the size of the input structure. in addition, we identify structures that cannot be designed by the rna-ssd algorithm, and in some cases show that these structures are provably undesignable, in the sense that there exist no rna sequences with these mfe structures under the thermodynamic model by turner et al.

secondly, we introduce and analyse a version of rna-ssd that additionally allows the specification of primary structure constraints. such constraints are important, for example, when designing rnas such as ribozymes or trnas, where certain base positions must be fixed in order to permit interaction with other molecules. we show that depending on their number and location, such constraints can have a significant impact  on the running time of the design algorithm. our results indicate that when the primary structure constraints are restricted to stems, our new version of rna-ssd is faster than when the constraints are distributed randomly, and in both cases the algorithm's median expected running time scales polynomially with the size of the structure to be designed.

 <dig>  the rna-ssd algorithm
the rna secondary structure design problem can be formalised as a discrete constraint satisfaction problem, where the constraint variables are the positions in the desired rna strand, the values assigned to these variables correspond to the bases at the respective positions, and the constraints capture the base-pairings that define the given secondary structure. for this problem, evaluating the quality of candidate solutions is computationally expensive, since it uses an implementation of the algorithm of zuker and stiegler  <cit>  for prediction of the mfe  secondary structure of a given rna sequence. zuker's algorithm has time complexity Θ, where n is the length of the given sequence. unfortunately, a single local reassignment of a base in the sequence can result in a completely different mfe secondary structure. it is not known whether provably efficient  for the rna secondary structure design problem exist, and previous work on solving this problem is based on heuristic approaches. because of its relevance for this work, in the following we give a brief overview of the rna-ssd algorithm, which is described in detail by andronescu et al.  <cit> .

rna-ssd is a stochastic local search  algorithm that iteratively modifies single unpaired bases or base-pairs of a candidate strand in order to obtain a sequence that is predicted to have the target mfe structure. the rnafold function from vienna package is used to evaluate the quality of candidate solutions, as it is the most efficient publically available implementation of zuker's algorithm of which we are aware. since evaluating the quality of candidate solutions is computationally expensive, rna-ssd hierarchically decomposes the input secondary structure into small substructures. the sls algorithm is only applied to the smallest substructures, and the corresponding partial solutions are combined into candidate solutions for larger subproblems guided by a decomposition tree. since the smaller subproblems are not independent, this does not always result in valid designs for the corresponding larger substructure. consequently, multiple attempts  are often required before partial solutions can be combined successfully. there are other components in the algorithm that are also important for its performance. for instance, a biased probabilistic method is used for generating a good initial design for the rna strand that increases the chances of correct folding. this initialisation assigns bases probabilistically to the strand, using different probabilistic models for base positions that are paired and unpaired in the target structure. the algorithm also ensures that complementary stretches of bases are avoided across the design, except where desired along two sides of a stem.

 <dig> 
RESULTS
the main contributions of our work fall into four categories: improvements to the rna-ssd algorithm, including support for primary structure constraints; results on the scaling of run time for our new rna-ssd algorithm and rnainverse on design problems without primary structure constraints; results regarding the undesignability of certain structures; and results on the impact of primary structure constraints on the relative difficulty and scaling of run time for our new rna-ssd algorithm. in the following, we describe each of these results in detail.

 <dig>  improvement of the rna-ssd algorithm
in preliminary experiments, we found that some structures are very difficult to design by using the hierarchical decomposition of andronescu et al.  <cit> . this is the case, for example, for structures that have two loops separated by a very short stem . recall that after splitting a structure , it is necessary to connect the two free ends created by the split such that both resulting substructures have exactly two free ends. to create structural boundary conditions at the split points that are similar to those of the original structure, this connection is achieved by merging the free ends of one fragment with those of a static cap structure, which is a small hairpin loop of size four ; furthermore, two unpaired bases are added to the free ends of the other fragment if it contains a bulge directly after the first base pair. .

this mechanism can be improved by introducing a dynamic cap structure and dynamic dangling ends in order to create structural boundary conditions that are exactly identical to the original structure in terms of the number of paired and unpaired bases adjacent to the split point. in our new mechanism, the number of paired bases in the cap structure added to one fragment depends on the number of paired bases at the beginning of the other substructure . furthermore, we add one unpaired base to the 5'  end of a substructure if, and only if, its adjacent base in the original structure is a free base . it is sufficient to add one unpaired base to the end of the structure since dangling ends of more than one base do not contribute to the free energy of the structure  <cit> . the use of dynamic instead of static cap structures and free ends often results in improved performance for structures that are hard to design. for instance, the expected time to design the structure rand-75-n <dig> from figure 1a is reduced from  <dig>  cpu seconds to  <dig>  cpu seconds when using the new dynamic mechanism.  more extensive testing on sets of random , biologically motivated  and biological structures  have shown that the average run time of the new version of rna-ssd is very close to that of the old version on our set of biological structures, but about  <dig> times lower for the random structures and  <dig> times lower for the biologically motivated structures. more detailed analysis shows that the use of the new dynamic mechanism leads to run time reductions of up to four orders of magnitude on about half of the structures. however, in many other cases run time is somewhat increased, and sometimes, more severe performance degradation is observed.

we also extended rna-ssd to support primary structure constraints, that is, constraints on the bases that occur in certain sequence positions. the additional sequence constraints limit certain sequence positions to specific bases or sets of bases. for this purpose, the standard iupac symbols  <cit>  listed in table  <dig> are supported. primary structure constraints facilitate the design of more realistic structures. for instance, when a ribozyme is re-engineered to make it more stable, certain bases of the molecule can be modified while others are constrained because they define the cleavage site  <cit> . sequence constraints are also needed in the design of nanostructure components with "sticky ends"  <cit> .

our extended version of rna-ssd supports primary structure constraints as follows. given a sequence specification using the iupac symbols listed in table  <dig>  first, all pairs of constrained bases are checked for feasibility, that is, for whether there are watson-crick-complementary bases or wobble pairs that satisfy the given primary structure constraints. then, base constraints are propagated across all paired positions, that is, the set of allowed bases for each paired sequence position is adjusted to take into account constraints on the other base involved in the pairing. this improves the efficiency of the subsequent search process by restricting the number of bases that have to be potentially considered for the respective sequence positions. when initialising the search process, we ensure that all bases are consistent with the given primary structure constraints . furthermore, whenever we modify a base assigned to a sequence position during the search, we ensure that the respective primary structure constraints  remain satisfied; in other words, we ensure that at all times during the search process, all primary structure constraints are satisfied.

 <dig>  analysis of rna-ssd and rnainverse on secondary structures without constraints
we now report results from our analysis of the empirical complexity of solving rna secondary structure design problems with the improved version of rna-ssd and with the rnainverse algorithm. we performed experiments on random and biologically motivated structures of different lengths. 

we study the behaviour of the algorithm on biological structures since it will have an impact in biological applications such as ribozyme design. because of the limited availability of true biological structures, we generated structures with biological characteristics based on the set of real structures listed in table  <dig>  the statistics reported in table  <dig> summarise salient structural properties of these naturally occurring rnas. we used a probabilistic model based on this data to generate new sets of rna structures with similar properties. this allows us to evaluate rna-ssd  on a large number of structures and helps us to reduce the chance of drawing erroneous conclusions from a small set of atypical results. using this approach, we can also control salient properties of the generated structures, such as the size of a given structure, the relative prevalence of bulges or the average branching of multiloops, and study their impact on the performance of rna design algorithms.

biological structures obtained from the literature and used by andronescu et al.  <cit> . the structures marked with an asterisk  were obtained from original, pseudoknotted structures by eliminating  <dig> base pairs in each case to remove the pseudoknot.

properties of the structures from table 2; the intervals specify the minimal and maximal values observed for the respective features. these parameters were used to generate structures with biological properties. * this value denotes the ratio of bulges to base pairs in the stems.

as can be seen from figure 2b, we obtained similar results for random structures as well as when using rnainverse. notice that overall, rna-ssd performs substantially better than rnainverse, and that random structures tend to be somewhat more difficult to design than biologically motivated structures. distributions of expected run time for rna-ssd over our sets of random and biologically motivated structures of various sizes are shown in figures  <dig> and  <dig>  note that there is a large variation in difficulty between structures from the same set. also, there are some structures that rna-ssd is unable to design .

the random structures are designable by construction since they were obtained by folding a set of random sequences with the rnafold function from the vienna package . rna-ssd was able to design all of these structures except one of length  <dig> . this structure has several short stems separated by loops . in particular, it has two internal loops next to each other; one of these is slightly asymmetric with seven unpaired bases, while the other is symmetric with four unpaired bases. although allowed by the thermodynamic model, this motif is hard to design.  rnainverse failed to design  <dig> %  of the random structures of length  <dig> or less and was not evaluated on larger structures because of excessive run time requirements.

as can be seen from figure 3b, there are biologically motivated structures of every length that rna-ssd was unable to design; none of these structures could be designed by rnainverse, which also did not succeed to design a number of other structures. overall,  <dig> % and  <dig> %  of the biologically motivated structures could not be designed by rnainverse and rna-ssd, respectively; this indicates that biologically motivated structures are more difficult to design with these algorithms than randomly generated structures.

to further explore rna-ssd's ability to design larger structures, we evaluated its performance on two additional sets, containing random structures of length  <dig> and biologically motivated structures of length  <dig>  respectively. in these experiments, we found that rna-ssd designed  <dig> % of the randomly generated structures and  <dig> % of the biologically motivated ones within a cutoff time of  <dig> cpu minutes.

 <dig>  undesignable structures
when examining the structures that appeared to be undesignable by the rna-ssd algorithm, we found that they typically have short stems separated by loops, as shown in figure  <dig>  further analysis revealed two kinds of motifs that are impossible to design for any algorithm based on the current thermodynamic model. one of these consists of two bulges next to each other, separated only by one base pair ; the other one is formed by two internal loops, separated also by a single base pair . for internal loops of size bigger than four and for asymmetric internal loops of size four, these motifs are predicted to be unstable by the current thermodynamic model, and are hence undesignable . however, it is possible to design two internal loops separated by one base pair if at least one of them is symmetric and has four unpaired bases.

unstable motifs were found in several biologically motivated structures, and they also seem to appear in nature. for example, according to the comparative rna web  site, which provides rna secondary structures based on comparative sequence analysis  <cit> , the small subunit ribosomal rna of acanthamoeba castellanii  <cit>  has three adjacent bulges of size two, one and three, respectively . similarly, the crw structure for the small subunit ribosomal rna of escherichia coli  <cit>  has two adjacent internal loops of size seven and nine, respectively .

 <dig>  analysis of rna-ssd on secondary structures with constraints
from the previous experiments we learned that the empirical time-complexity of the rna design problem is polynomial for random and biologically motivated structures. next, we will investigate the hardness of the problem when primary structure constraints are imposed on the design of the biologically motivated structures that we used for the unconstrained case.

the hardness of an instance of this constrained secondary structure design problem not only depends on the given secondary structure, but also on the set of primary structure constraints. to capture the impact of the primary structure constraints on the performance of rna-ssd, we used every secondary structure with a number of different sets of primary structure constraints; furthermore, because of the stochastic nature of rna-ssd, we performed multiple runs of our algorithm for each such problem instance. the expected cpu time required to design a structure with a given set of primary structure constraints was estimated from these runs. most of our analysis is based on the median expected run time of rna-ssd over all sets of constraints for a given structure. because of the computational burden incurred by the large number of runs per secondary structure required by this protocol, we performed these experiments on smaller sets of biologically motivated structures; these sets were obtained by uniform random sampling  from the respective sets used for our empirical analysis of the unconstrained case. two different methods were used to create sets of primary structure constraints. one of these essentially selects the base positions to be fixed within the given structure at random, while the other fixes the base assignments of entire stems. in both cases, the bases in the selected positions are fixed according to a sequence that folds stably into the given structure. 

as can be seen in figure  <dig>  the hardness of a constrained design problem varies significantly depending on the given set of constrained bases. in particular, constraining entire stems rather than randomly selected bases tends to result in slightly easier problems.

 <dig>  performance of rna-ssd with different number and locations of primary base constraints
in a second series of experiments, we studied the correlation between the number of bases constrained and the performance of the rna-ssd algorithm. the experiments were conducted using some biological structures from table  <dig> as well as biologically motivated structures. table  <dig> shows some features of these structures. the two biological structures chosen for this experiment are the vs ribozyme from neurospora mitochondria and the group ii intron ribozyme d <dig> from saccharomyces mitochondria. the biologically motivated structures were chosen according to various criteria. bio-150-nl <dig> has the same size and number of multiloops as the vs ribozyme; for bio-150-n <dig>  the run time required by rna-ssd  to design the structure is very similar to that required by vs ribozyme; bio-200-nl <dig> is a longer structure that has several multiloops, like the group ii intron ribozyme; and bio-150-nl <dig> is particularly easy to design. in every case, the primary structure constraints are based on sequences that are computationally predicted to fold into the target structure ; therefore, the respective design problems are solvable by construction.

set of structures used to study the correlation between the primary structure constraints and the performance of rna-ssd. structures with similar characteristics  appear in the same group. the structure bio-150-nl <dig> was included in this set because it is relatively easy to design.

 <dig> discussion
in earlier work by andronescu et al.  <cit> , no clear correlation has been detected between the size of a given rna structure and the performance of rna secondary structure design algorithms such as rna-ssd. here, we used a bigger set of structures to investigate the empirical complexity of rna design and found a clear correlation between the size of the structure and the performance of the two algorithms we studied, rna-ssd and rnainverse. in particular, the results of our empirical scaling analysis for the unconstrained rna secondary structure design problem indicates that the expected run time of rna-ssd and rnainverse increases polynomially with the size of the structure to be designed. however, rna-ssd shows substantially better scaling behaviour than rnainverse, as indicated by a significant difference in the degree of the polynomial obtained when approximating the scaling with expected run time with structure size .

both, rnainverse and rna-ssd, failed to design some structures, but there was no case in which rna-ssd was unable to design a structure solved by rnainverse. some of the structures that could not be designed by rna-ssd contain motifs that are provably not allowed by the thermodynamic model of rna secondary structure and are hence inherently undesignable using that model. such motifs contain short stems that are not stable enough to compensate for the penalty associated with the adjacent loops; we have observed similar motifs in all structures that rna-ssd failed to design, and suspect that most  of these structures may be inherently undesignable. on the other hand, we also found inherently undesignable structural motifs in trusted structures of biological rnas. this could be due to inaccuracies of the thermodynamic model commonly used for rna secondary structure, tertiary structure effects or interaction of the rna with other molecules, which prevent it from folding into its "true" mfe conformation.

we also found that artificially generated structures with statistical features derived from trusted biological structures  are easier to design than structures of random sequences, probably because they contain more structural motifs that are easy to design. also, for the undesigned trusted biological structures, it is not clear a priori whether they can be designed using the standard thermodynamic model. the fact that the empirical hardness of designing trusted biological structures is very similar to that of designing our biologically motivated structures provides evidence that the latter capture important structural features of real rnas and thus provide a good test-bed for studying rna secondary structure design.

one of the improvements over the first version of our rna-ssd algorithm  introduced in this work is our use of dynamic cap structures and dangling ends to better approximate the boundary conditions encountered at the split points used during hierarchical decomposition of a given rna secondary structure into substructures. this modification can lead to a significantly increased chance to obtain a sequence that folds into the desired structure when merging the subsequences designed for the respective substructures; this is particularly advantageous in the design of difficult structures like the one in figure 1a. we did not find evidence that this new version of rna-ssd can design structures that the previous version cannot handle, given sufficiently long running times.

however, we observed marked improvements in the running time and success rates in many cases. for example, andronescu et al.  <cit>  found a particular ribosomal rna structure obtained from the ribosomal database project, leptospira interrogans strain 94– <dig> to be particularly hard to design even though it has only  <dig> bases. this rna contains a structural motif consisting of two internal loops separated by one base pair, similar  to the undesignable motif shown in figure 6b. they reported an expected run time of  <dig>  cpu seconds to design this structure with a success rate of six in fifty runs when using a cutoff time of  <dig> cpu seconds. using our improved version of rna-ssd, the expected time to solve this structure is  <dig>  cpu seconds with a success rate of forty four in fifty runs using the same machine and cutoff time. this structure is hard to design because it contains two internal loops separated by a single base pair only; one of these is a symmetric internal loop of size four and the other is slightly asymmetrical with size five. by introducing an additional base pair between these internal loops, the structure becomes much easier to design, requiring of our new version of rna-ssd only an expected run time of  <dig>  cpu seconds with a success rate of forty nine in fifty runs.

our study also sheds light on the hardness of designing structures with primary structure constraints. in particular, our detailed analysis of primary structure  constraints on the performance of rna-ssd suggests that it is generally easier to design a structure when the stems are constrained. this is intuitively plausible, given that generally, stems represent the most stable parts of rna secondary structures. however, there are exceptions: structure bio-150-nl <dig>  was found to be difficult when more than seven stems of its ten stems were constrained. when we further analyzed the correlation between the constrained stems and the expected run time required for designing this structure, we found that constraining two particular stems, labelled  <dig> and  <dig> in figure  <dig>  made the design problem significantly more difficult. these short stems are separated by a bulge of size one, and they are not stable enough to compensate for the penalty incurred by the bulge. figure  <dig> shows a difficult problem instance where these two stems are constrained. the structure is easy to design if the base pairs a•u in stems  <dig> and  <dig> are replaced by c•g, which is a more stable interaction.

we also observed that for structures with similar characteristics , the behaviour of rna-ssd algorithm shows significant qualitative variation. structures such as that of the vs ribozyme from neurospora mitochondria  and bio-200-nl <dig> are easier to design when the number of constrained bases increases; the same holds for structure bio-150-n <dig> when the constrained bases are located within stems. in these cases, the base constraints reduce the size of the search space and additionally may help to steer the search process towards solution sequences.

however, the problem can also get harder as the number of constrained bases increases and then becomes easier again, as approximately 80% or more of the bases are constrained or when all the stems are constrained. this is observed for structures bio-150-n <dig>  bio-nl50-nl <dig> and bio-150-nl <dig> when using random base constraints, as well as for bio-150-nl <dig> and the group ii intron ribozyme d <dig> from saccharomyces mitochondria when the stems are constrained . in these cases, the reduction in the size of the search space caused by the base constraints is counteracted up to a point by factors that make finding solutions within these smaller spaces harder. one such factor is solution density, which can be substantially reduced by adding base constraints. beyond a certain number of primary structure constraints, the advantages from reduction in search space size outweigh these factors, such that the problem becomes easier again. this is not surprising, since the design problem becomes trivial in the extreme case in which all base positions are constrained.

somewhat surprisingly, as can be observed for structure bio-150-nl <dig>  there are cases where constraining all stems, leaving only unpaired base positions to be assigned by the algorithm, renders the design problem harder than constraining a smaller number of stems . another extreme example is the structure of the group ii intron ribozyme d <dig> from saccharomyces mitochondria, where the run time of rna-ssd increases well beyond the point where 80% of the base positions are constrained . more detailed analysis indicates that this behaviour is caused by substructures obtained in rnd-ssd's decomposition process that consist entirely of constrained bases, with the exception of the cap structure that is added to ensure appropriate boundary conditions. in some cases, these substructures are hard to design, since the correct structure is only obtained for a particular base assignment to the cap structure, which may differ from the assignment of the corresponding bases on the other side of the split point, leading to a large number of failed attempts of preserving the designed substructures when merging the subsequences. one obvious solution to this problem is to prevent structural splits that give rise to fully constrained substructures.

it should be noted that our empirical complexity results do not rule out the possibility that the rna secondary structure design problem  could be np-hard, but suggest that such worst-case asymptotic scaling is not reflected in the typical behaviour of existing algorithms applied to distributions of random and biologically plausible structures studied here. however, careful examination of our scaling data indicates that the degree of the polynomial characterising the scaling of run time with structure size is considerably higher for the hardest structures in our test-sets than it is for typical or easy structures, which could be seen as an indication of possible exponential scaling of the run time of rnainverse and rna-ssd in the worst case.

 <dig> 
CONCLUSIONS
we have introduced an empirical analysis for the design of rna secondary structures with the rnainverse algorithm from the vienna rna package and with an improved version of rna-ssd that supports primary structure constraints. our analysis helps us to better understand the strengths and limitations of both algorithms. for this study we used a big set of structures  of different lengths generated randomly and also generated with structural and statistical properties  based on different classes of biological rnas. we investigate the hardness of the design of these structures without primary structure constraints and with different number and locations of base constraints in the structure. in every case the problem scales polynomially with the size of the structure. experiments on biologically motivated structures show that in general there is an advantage in the design if we impose primary base constraints in stems. when we tried to determine if the structure design is easier as we increase the number of fixed positions, we found that this is not always the case. the design of some structures gets harder when approximately 50% of the bases are constrained. this suggests a reduction in the effective search space size that depends on the properties of the structure.

rna-ssd performs substantially better than rnainverse, both in terms of speed as well as with respect to the structures that can be designed within a given amount of time. we compared both algorithms on random structures without primary structure constraints and found that the scaling of the median expected run-time is about o for rna-ssd and about o for rnainverse, where n is the size of the structure. the structures not designed by rna-ssd were also not designed by rnainverse. furthermore, we believe that most of these structures are undesignable because they contain motifs like the ones shown in figure  <dig>  in the appendix we prove that some motifs with two internal loops or two bulges that are separated by one base pair are impossible to design using the current thermodynamic model for rna secondary structure.

we also identified some structural motifs that make the rna design task harder . in particular, short stems separated by loops are difficult to design. short stems are not stable enough to compensate for the penalties associated with adjacent loops, and therefore, energetically more favourable motifs are preferred. some of these motifs are not allowed by the thermodynamic model  <cit> , yet they are found in biological structures. for other motifs, which have short stems separated by loops that are allowed by the thermodynamic model, it was possible to improve the performance of rna-ssd by modifying the structural decomposition approach in such a way that at the split points, the boundary conditions from the original structure are replicated. intuitively, this leads to an increased probability that when merging the respective subsequences, the correct secondary structure is obtained.

the results of this study suggest further improvements to the rna-ssd algorithm. for example, it is possible that structural splitting leads to substructures that, apart from the cap structure, are completely determined by primary base constraints. such substructures can cause artificial challenges to our search algorithm and should be treated differently. alternatively, the structural decomposition approach could be modified in such a way that the fraction of constrained bases in each substructure is balanced. another improvement which has already been proposed by andronescu et al.  <cit>  is to consider split points at motifs other than multiloops; it may be noted that such a modification could easily be extended with primary base constraints.

interactions between rna molecules are of substantial biological interest, and we are therefore planning to extend rna-ssd to the design of duplexes of interacting rnas. with this extension of the algorithm, it will be possible to design pairs of strands in biomolecular nanostructures  <cit>  as well as ribozymes that interact with an rna target  <cit> . in order to design for interaction, it is important to have a method to predict the secondary structure of two interacting rna strands. when only pseudoknot-free duplex structures are considered, we can use the pairfold software of andronescu et al.  <cit> . pseudoknot-free interacting structures arise, for example, in the interaction of a ribozyme with its target  <cit> . for more complicated, pseudoknotted structures, the methods of dirks et al.  <cit>  or alkan et al.  <cit>  could be used. another important factor in designing rna molecules is the stability of the desired respective structure. typically, there are many rna sequences that can fold into a given structure, but in many cases, we are interested in finding a sequence with the most thermodynamically stable mfe target structure. currently, rna-ssd does not explicitly evaluate or optimise the thermodynamic stability of the desired secondary structure that is achieved by the designed sequence. in future work, we will extend rna-ssd to support the design of stable structures based on some of the positive and negative design criteria defined by dirks et al.  <cit> .

very recently, busch and backofen  <cit>  have introduced a new sls algorithm for the rna secondary structure design problem, dubbed info-rna . different from rna-ssd, info-rna uses dynamic programming to determine an initial sequence that adopts the given target structure t with the lowest possible energy. then, it uses an improved sls procedure that performs search steps based on a look-ahead mechanism for determining energetically favorable sequences in combination with the structural decomposition approach of rnainverse in order to find a sequence with mfe structure t. in most cases, info-rna performs better than the improved version of rna-ssd described in this paper, and we therefore expect that its empirical median expected run time also shows polynomial scaling with input size .

however, compared to rnainverse and rna-ssd, rna-info is more biased towards sequences that form low-energy structures and can hence be expected to find more restricted ensembles of solutions to any given rna secondary structure design problem. we conjecture that by combining features of rna-ssd and rna-info, in particular rna-ssd's less biased initialisation and balanced hierarchical decomposition approach with rna-info's more efficient sls procedure, further performance improvements could be achieved. furthermore, rna-info currently does not support primary structure constraints, and it would be interesting  to incorporate these into a future version.

 <dig> methods
to investigate the empirical complexity of designing structures without constraints we used the following data sets. we generated random structures by folding, with the rnafold function from the vienna package, a set of randomly generated sequences with a uniform distribution of nucleotides . structures with biological characteristics were generated with the help of an rna structure generator  <cit>  that allows us to directly control salient properties of the structures being generated, including the overall size as well as the number and size of bulge, internal, and multiloops, and the length of stems. in order to determine these properties, we selected from the biological literature ten structures that are consistent with experimental evidence and empirical data, ranging from  <dig> to  <dig> bases in length . average values of each of the features captured in the parameters of the rna structure generator over our set of structures were used to roughly summarise the structural properties of naturally occurring rnas . using the rna structure generator with these parameter values, several sets of biologically motivated structures were generated .

sets of structures generated by folding random sequences with the rnafold function from the vienna rna package. nucleotides in the sequence are assigned uniformly at random. the sets of structures of longer than  <dig> bases are smaller because of the amount of time required for designing these structures.

sets of structures generated with the rna structure generator, using the parameters from table  <dig> 

for the experiment in which rna-ssd was used to design structures with primary structure constraints, we utilised only biologically motivated structures. this experiment was computationally expensive because it required the design of a given structure with several constraints. for this reason, we chose subsets of the previously described sets of biologically motivated structures by means of random sampling . these subsets consist of  <dig> structures of the data sets biom- <dig> and biom-75;  <dig> structures of the data set biom-100; and  <dig> structures of the data sets biom- <dig>  biom- <dig>  biom- <dig> and biom- <dig>  respectively.

the primary base constraints were generated in the following way. for each structure, we used rna-ssd to obtain  <dig> sequences that are computationally predicted to fold into it. of these, we selected the sequence that gave the most stable mfe structure and used it for generating base constraints for certain positions using two different methods. in one method, we sampled 50% of the sequence positions uniformly at random . additionally, when generating a constraint for a paired base, we also generated a constraint for the base to which it is paired to be fixed to the correct watson-crick complementary base; consequently, more than 50% of the bases may be fixed in the resulting design problem. in the other method, we sampled 50% of the stems in the given structure uniformly at random  and fixed all bases occurring in these stems.

to control for the variation in run time of the design algorithms due to the choice of constrained bases, we generated all of the possible sets of constraints in cases where this number was found to be less than  <dig>  and random samples of size  <dig> otherwise. thus, for each structure in a test set, we considered up to  <dig> possible sets of constraints obtained by each of the two generation methods. for structures of length  <dig>  which are computationally expensive to design, we used only  <dig> instead of  <dig> constraint sets .

all computational experiments were carried out on pcs with dual intel xeon  <dig>  ghz processors ,  <dig> kb cache, and  <dig> gb ram running red hat linux, kernel version  <dig> .5- <dig> smp. both, rna-ssd and rnainverse are highly stochastic algorithms: when applied to the same structure multiple times, the time for finding a solution may vary substantially.  therefore, it is necessary to perform sufficiently many runs on each problem instance in order to get reasonably stable statistics on run time. for the unconstrained experiment we performed  <dig> runs on a given structure and estimate the expected time required for finding a solution as

es+eu     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgfbqrdawgaawcbagaem4camhabeaakiabgucarmaabmaabawaasaaaeaacqaixaqmaeaacqwgmbgzdawgaawcbagaem4camhabeaaaagccqghsislcqaixaqmaiaawicacaglpaaacqwgfbqrdawgaawcbagaemydauhabeaakiaaxmaacawljawaaewaaeaacqaixaqmaiaawicacaglpaaaaaa@3e1f@

where es and eu denote the average time for successful and unsuccessful runs, respectively, and fs is the fraction of successful runs  <cit> . unsuccessful runs were terminated after  <dig> cpu seconds for structures that are decomposed by rna-ssd. for structures not subject to decomposition, the algorithm terminates in less time, determined by the maximal number nl of base modifications performed by the sls procedure without finding a solution. in our experiments, we used nl =  <dig>  for structures with no successful runs, we arbitrarily reported the expected run time to be  <dig> cpu seconds.

for the experiments with primary structure constraints,  <dig> runs were performed for each structure and set of primary structure constraints. the expected cpu time required for designing a structure with a given constraint was estimated from these runs using the same formula as in the unconstrained case, and the median over the  <dig> sets of constraints per structure was used for all analyses.



authors' contributions
rah, hh and ac jointly developed the improvements and extensions of rna-ssd, designed experiments and analysed results; rah implemented the improved version of rna-ssd and performed all experiments; all authors were involved in writing the paper.

appendix
consider the structure motif b from figure 6a, which is formed by two bulges of size two and three, respectively, where si ∈ {a, g, c, u} for all i. we will show that this structure is impossible to design with the standard thermodynamic model, because the internal loop i of size seven, formed by breaking the base pair si+1·sj- <dig> , is energetically more favourable.

let s be a set of assignments of bases in which the base pairs are complementary. let Δg and Δg be the energies of motif b and i, respectively, for s ∈ s. we will show that

Δg < Δg ∀s ∈ s

following the notation of andronescu  <cit>  and using the thermodynamic parameters of mathews et al.  <cit>  for computing Δg and Δg. table  <dig> shows the definition of parameters and their possible values involved in the calculation of the free energy of an internal loop.

Δg = Δg-length-i + Δg-internal-n

+ Δ g-internal-n

+ Δ g-asymmetry ∀s ∈ s

⇒ maxs∈s{Δg} =  <dig>  + maxs∈s{Δg-internal-n

+ Δ g-internal-n}

=  <dig>  + 2· <dig> =  <dig> 

on the other hand,

Δg = Δg-length-b + Δg-length-b

=  <dig>  +  <dig>  =  <dig> ∀s ∈ s

then

maxs∈s{Δg} <mins∈s {Δg}.

therefore,

Δg < Δg ∀s ∈ s.

consider the motif 2i in figure 6b, which is formed by two internal loops both of size eight. we will show that this structure motif is impossible to design, because the internal loop 1i of size eighteen, formed by breaking the base pair si+6·sj- <dig> , is more favourable. let

Δg-internal-n = x1

Δg-internal-n = x2

Δg-internal-n = y1

Δg-internal-n = y2

where x <dig>  x <dig>  y <dig>  y <dig> ∈ {- <dig> , - <dig> , - <dig> ,  <dig>   <dig> }. then

Δg = Δg-length-i + x <dig> + x <dig> ∀s ∈ s

⇒ Δg =  <dig>  + x <dig> + x <dig> ∀s ∈ s.

on the other hand,

Δg = 

+  ∀s ∈ s

⇒ Δg =  +  ∀s ∈ s

⇒ Δg =  <dig>  + x <dig> + y <dig> + y <dig> + x <dig> ∀s ∈ s.

therefore,

Δg < Δg ∀s ∈ s.

