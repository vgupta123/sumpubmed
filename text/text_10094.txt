BACKGROUND
effective visualization of transcriptomic, genomic, and epigenomic data generated by next-generation sequencing-based high-throughput assays have become an area of great interest. most of the data sets generated by such assays are lists of genes or variants, and genomic region sets. the genomic region sets represent genomic locations for specific features, such as transcription factor – dna interactions, transcription start sites, histone modifications, and dnase hypersensitivity sites. a common task in the interpretation of these features is to find similarities, differences, and enrichments between such sets, which come from different samples, experimental conditions, or cell and tissue types.

classically, the intersection or overlap between different sets, such as gene lists, is represented by venn diagrams  <cit>  or edwards-venn  <cit> . if the number of sets exceeds four, such diagrams become complex and difficult to interpret. the key challenge is that there are 2
n combinations to visually represent when considering n sets. an alternative approach, the upset plots, was introduced to depict the intersection of more than three sets  <cit> . the advantage of upset plots is their capacity to rank the intersections and alternatively hide combinations without intersection, which is not possible using a venn diagram. however, with a large number of sets, upset plots become an ineffective way of illustrating set intersections. to visualize a large number of sets, one can represent pairwise intersections using a clustered heat map as suggested in  <cit> .

there are several web applications and r packages available to compute intersection and visualization of up-to six list sets by using venn diagrams. although tools exist to perform genomic region set intersections , there is a limited number of tools available to visualize them  <cit> . to our knowledge no tool exists to generate upset plots for genomic region sets. consequently, there is a great need for integrative tools to compute and visualize intersection of multiple sets of both genomic regions and gene/list sets.

to address this need, we developed intervene, an easy-to-use command line tool to compute and visualize intersections of genomic regions with venn diagrams, upset plots, or clustered heat maps. moreover, we provide an interactive web application companion to upload list sets or the output of intervene to further customize plots.

implementation
intervene comes as a command line tool, along with an interactive shiny web application to customize the visual representation of intersections. the command line tool is implemented in python  and r programming language . the build also works with python versions  <dig> ,  <dig> , and  <dig> . the accompanying web interface is developed using shiny , a web application framework for r. intervene uses pybedtools  <cit>  to perform genomic region set intersections and seaborn , matplotlib  <cit> , upsetr  <cit> , and corrplot  <cit>  to generate figures. the web application uses the r package venerable  <cit>  for different types of venn diagrams, upsetr for upset plots, and heatmap. <dig> and corrplot for pairwise intersection clustered heat maps. the upset module of the web shinyapp was derived from the upsetr  <cit>  shinyapp, which was extended by adding more options and features to customize the upset plots.

intervene can be installed by using pip install intervene or using the source code available on bitbucket https://bitbucket.org/cbgr/intervene. the tool has been tested on linux and mac systems. the shiny web application is hosted with shinyapps.io by rstudio, and is compatible with all modern web browsers. a detailed documentation including installation instructions and how to use the tool is provided in additional file  <dig> and is available at http://intervene.readthedocs.io.

RESULTS
an integrated tool for effective visualization of multiple set intersections
as visualization of sets and their intersections is becoming more and more challenging due to the increasing number of generated data sets, there is a strong need to have an integrated tool to compute and visualize intersections effectively. to address this challenge, we have developed intervene, which is composed of three different modules, accessible through the subcommands venn, upset, and pairwise. intervene accepts two types of input files: genomic regions in bed, gff, or vcf format and gene/name lists in plain text format. a detailed sketch of intervene’s command line interface and web application utility with types of inputs is provided in fig.  <dig> fig.  <dig> a sketch of intervene’s command line interface and web application, and input data type




intervene provides flexibility to the user to choose figure colors, label text, size, resolution, and type to make them publication-standard quality. to read the help about any module, the user can type intervene < subcommand > −-help on the command line. furthermore, intervene produces results as text files, which can be easily imported to the web application for interactive visualization and customization of plots .

venn diagrams module
venn diagrams are the classical approach to show intersections between sets. there are several web-based applications and r packages available to visualize intersections of up-to six list sets in classical venn, euler, or edward’s diagrams . however, a very limited number of tools are available to visualize genomic region intersections using classical venn diagrams  <cit> .

intervene provides up-to six-way classical venn diagrams for gene lists or genomic region sets. the associated web interface can also be used to compute the intersection of multiple gene sets, and visualize it using different flavors of weighted and unweighted venn and euler diagrams. these different types include: classical venn diagrams , chow-ruskey , edwards’ diagrams , and battle .

as an example, one might be interested to calculate the number of overlapping chip-seq  peaks between different types of histone modification marks  in human embryonic stem cells   <cit>  .fig.  <dig> example of intervene’s command line interface outputs. a a three-way venn diagram of chip-seq peaks of histone modifications  in hesc obtained from encode  <cit>  b upset plot of the intersection of four histone modification peaks in hesc c a heat map of pairwise intersections in terms of jaccard statistics of super-enhancers in  <dig> mouse cell and tissue types downloaded from dbsuper




upset plots module
when the number of sets exceeds four, venn diagrams become difficult to read and interpret. an alternative and more effective approach is to use upset plots to visualize the intersections. an r package with a shinyapp  and an interactive web-based tool are available at http://vcg.github.io/upset to visualize multiple list sets. however, to our knowledge, there is no tool available to draw the upset plots for genomic region set intersections. intervene’s upset subcommand can be used to visualize the intersection of multiple genomic region sets using upset plots.

as an example, we show the intersections of chip-seq peaks for histone modifications  in hesc using an upset plot, where interactions were ranked by frequency . this plot is easier to understand than the four-way venn diagram .

pairwise intersection heat maps module
with an increasing number of data sets, visualizing all possible intersections becomes unfeasible by using venn diagrams or upset plots. one possibility is to compute pairwise intersections and plot-associated metrics as a clustered heat map. intervene’s pairwise module provides several metrics to assess intersections, including number of overlaps, fraction of overlap, jaccard statistics, fisher’s exact test, and distribution of relative distances. moreover, the user can choose from different styles of heat maps and clustering approaches.

as an example, we obtained the genomic regions of super enhancers in  <dig> mouse cell type and tissues from dbsuper  <cit>  and computed the pairwise intersections in terms of jaccard statistics . the triangular heat map shows the pairwise jaccard index, which is between  <dig> and  <dig>  where  <dig> means no overlap and  <dig> means full overlap. the bar plot shows the number of regions in each cell-type or tissue. this plot can be generated using the command intervene pairwise --test).

an interactive web application
intervene comes with a web application companion to further explore and filter the results in an interactive way. indeed, intersections between large data sets can be computed locally using intervene’s command line interface, then the output files can be uploaded to the shinyapp for further exploration and customization of the figures .

the shinyapp web interface takes four types of inputs:  a text/csv file where each column represents a set,  a binary representation of intersections,  a pairwise matrix of intersections, and  a matrix of overlap counts. the web application provides several easy and intuitive customization options for responsive adjustments of the figures . users can change colors, fonts and plot sizes, change labels, and select and deselect specific sets. these customized and publication-ready figures can be downloaded in pdf, svg, tiff, and png formats. the pairwise modules also provides three types of correlation coefficients and hierarchical clustering with eight clustering methods and four distance measurement methods. it further provides interactive features to explore data values; this is done by hovering the mouse cursor over each heat map cell, or by using a searchable and sortable data table. the data table can be downloaded as a csv file and interactive heat maps can be downloaded as html. the shiny-based web application is freely available at https://asntech.shinyapps.io/intervene.fig.  <dig> screenshots of web application user interface




case study: highlighting co-binding factors in the mcf- <dig> cell line
transcription factors  are key proteins regulating transcription through their cooperative binding to the dna  <cit> . to highlight intervene’s capabilities, we used the command-line tool and its shinyapp companion to predict and visualize cooperative interactions between tfs at cis-regulatory regions in the mcf- <dig> breast cancer cell line. specifically, we considered  tf binding regions derived from uniformly processed tf chip-seq experiments compiled in the remap database  <cit>  and  promoter and enhancer regions predicted by chromhmm  <cit>  from histone modifications and regulatory factors chip-seq  <cit> . the pairwise module of intervene was used to compute the fraction of overlap between all pairs of chip-seq data sets and regulatory regions. the output matrix was provided to the shinyapp to compute spearman correlations of the computed values and to generate the corresponding clustering heat map . the largest cluster  was composed of the three key cooperative tfs involved in oestrogen-positive breast cancers: esr <dig>  foxa <dig>  and gata <dig>  they were clustered with enhancer regions where they have been shown to interact  <cit> . the cluster highlights potential tf cooperators: arnt, ahr, greb <dig>  and tle <dig>  promoter regions were found in the second largest cluster , along with ctcf, stag <dig>  and rad <dig>  which are known to orchestrate chromatin architecture in human cells  <cit> . the last cluster was principally composed by tfap2c data sets. taken together, intervene visually highlighted the cooperation of different sets tfs at mcf- <dig> promoters and enhancers, in agreement with the literature.fig.  <dig> mcf- <dig> cluster heat map. cluster heat map of the spearman correlations of fractions of overlap between tf chip-seq data sets and regulatory regions in mcf- <dig>  three clusters  are highlighted




discussion
a comparative analysis of different tools to compute and visualize intersections as venn diagrams, upset plots, and pairwise heat maps is provided in table  <dig>  most of the tools available currently can only draw venn diagrams for up-to six list sets. intervene provides venn diagrams, upset plots, and pairwise heat maps for both list sets and genomic region sets. to the best of our knowledge, it is the only tool available to draw upset plots for the intersections of genomic region sets. intervene is the first of its kind to allow for the computation and visualization of intersections between multiple genomic region and list sets with three different approaches.table  <dig> comparison of intervene with currently available tools to draw venn diagrams, upset plots and pairwise heatmaps




in the near future, intervene will be integrated to the galaxy tool shed to be easily installed to any galaxy instance with one click. we plan to develop a dedicated web application allowing users to upload genomic region sets for intersections and visualization.

CONCLUSIONS
we described intervene as an integrated tool that provides an easy and automated interface for intersection, and effective visualization of genomic region and list sets. to our knowledge, intervene is the first tool to provide three types of visualization approaches for multiple sets of gene or genomic intervals. the three modules are developed to overcome the situations where the number of sets is large. intervene and its web application companion are developed and designed to fit the needs of a wide range of scientists.

availability and requirements

project name: intervene


project home page: https://bitbucket.org/cbgr/intervene



project documentation page: http://intervene.readthedocs.io



project shiny app page: https://asntech.shinyapps.io/intervene/



operating system: the shinyapp is platform independent and command line interface is available for linux and mac os x


programming language: python, r


other requirements: web browser for the shinyapp


license: gnu gpl


any restrictions to use by non-academics: gnu gpl

additional files

additional file 1: a pdf version of detail documentation including installation instruction and how to use the command line interface and web application 

 


abbreviations
chip-seqchromatin immunoprecipitation followed by sequencing

encodethe encyclopedia of dna elements

hescshuman embryonic stem cells

sessuper-enhancers

tfstranscription factors

electronic supplementary material

the online version of this article  contains supplementary material, which is available to authorized users.

