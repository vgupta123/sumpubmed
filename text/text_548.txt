BACKGROUND
time-lapse assays probe biological questions that can only be investigated by observing the dynamic behavior of organisms, cells, organelles, or molecular assemblies over time  <cit> . the combination of automated imaging and large-scale, high-content, live-cell experiments is capable of delivering large amounts of data in very little time  <cit> . however, time-lapse imaging is acutely susceptible to many artifacts that negatively affect the proper identification and tracking of cells; the appearance of such anomalies in a single frame can ruin an entire time series. thus, image and image analysis quality requirements for time-lapse microscopy are more stringent and, due to the volume of data, automated quality control is more necessary.

interfaces for review or correction of time-lapse data are sometimes provided in customizable open-source software but are usually manual in nature, requiring visual inspection to detect aberrations  <cit> . alternately, commercial software may present such functionality within a polished interface , but such packages are not open-source, precluding access to or adjustment of features and underlying algorithms. we saw a need for a tool that would link cell images themselves directly to their morphological measurements within a tracking assessment tool; without this, a valuable opportunity is missed for the researcher to visually assess important changes in cell morphology and cellular context that accompany particular tracking results.

the cellprofiler biological image analysis package is widely used for collecting an extensive suite of morphological, intensity, and textural features for cells and organisms in high-content screens  <cit> . moreover, it includes modular cell-tracking capabilities for time-lapse assays, such as the linear assignment problem  approach  <cit> , which provides robust tracking by closing temporal gaps and capturing object merges and splits. cellprofiler is one of the few options for conveniently combining the need for robust cellular identification and the ability to process large numbers of time-lapse movies . however, configuring tracking algorithm parameters has been tedious without a tool to readily assess track quality. we present cellprofiler tracer to enable the visualization of the rich set of cellular features characteristic of high-content time-lapse assays, as well as to provide measures for assessing track quality.

implementation
cellprofiler tracer is implemented as part of the cellprofiler analyst software package  <cit>  . although most seamlessly used with data from cellprofiler, the tracer software is intended as a visualization and quality assessment tool compatible with high-content object tracking data derived from any two-dimensional time-lapse image sets, which most commonly involve fluorescence or brightfield microscopy. thus, tracer is not itself a tracking algorithm, nor a general-purpose image visualization tool, nor a tool for manual track editing, but may be used in conjunction with other software for those purposes  <cit> . we used cellprofiler analyst as the foundation for tracer, as cellprofiler analyst was designed for visualizing large, multi-parametric data sets, with the ability to create various plots of cellular features. it emphasizes linking the plotted data to the originating image for visual inspection and improved biological interpretation. to create tracer, we added visualizations to cellprofiler analyst that are specific to time-lapse tracking data and that have already been proven useful in the scientific community but have not as yet existed in a single freely-available and open-source software package, namely the following:xyt plot : an xyt plot is a 3-d plot of the cell centroid versus time and is useful as a straightforward means of visualizing discrete cellular trajectories  <cit> . tracer can color-code the trajectories based on a selected per-cell feature, so that variations in the trajectory color reflect the size, shape, intensity, or other high-content, multi-channel features collected during the experiment. the plot can be rotated using the mouse to view the trajectories from any angle.fig.  <dig> the cellprofiler tracer interface. the user interface is divided into the  xyt panel, showing the object trajectories in  coordinates, color-coded here by the frame number; the trajectories can be color-coded to be any cell measurement of interest;  the lineage tree panel, highlighting the ancestor/progeny relationships corresponding to the trajectories in , and  the control panel containing various display tools. other visualizations include  synchrograms of selected cells, as well as heatmaps 



lineage tree : lineage trees omit the positional information of xyt plots to display relationships between cell descendants over time; such graphs are commonly used for developmental mechanism and cell cycle progression studies . each cell at a given timepoint is represented as a node, connected by edges to the tracked predecessors and successors. as with the xyt plot, the nodes can be color-coded according to the desired per-cell image feature. errors in object segmentation often appear and disappear within a few frames, which results in an object split followed by a re-merge . this topological distortion is most obvious in the lineage display and is used to call attention to the need for adjustment to the image analysis parameters.

synchrograms : a synchrogram is a sequence of images of an individual cell over time. this visualization helps track the progression of sub-cellular processes  <cit> . the selected cell is centered in each frame to remove motion as a visual degree of freedom; this also makes frame-to-frame tracking errors immediately apparent. this tool allows for follow-up on suspect trajectories or lineages identified with the other tools, using a simple point-and-click interface linked to the other plots.

heatmaps : heatmaps are used to represent numerical data graphically as a colored two-dimensional matrix. tracer can average each per-object feature across all trajectories at each timepoint and display a heatmap of the result. this display provides a simple means for the user to visually evaluate the data for significant trends in the cell population, even if the time-lapse data is not temporally synchronous. this can be helpful for quality control purposes  or perhaps relevant to the phenotype under investigation .fig.  <dig> heatmap of high-content cellular time-lapse measurements. the per-nucleus measurements from a drosophila time-lapse movie are averaged over all nuclei for each timepoint; the measurements were collected by cellprofiler software. feature values were normalized from  <dig> to  <dig> for visualization purposes. feature names were omitted for conciseness but are provided in the tracer display; the features shown are listed in order in the additional file 3: table s <dig>  and are further described in the cellprofiler documentation





a control panel  is used to adjust various aspects of the display panels. other visualization features, such as plots and trajectory selections, are provided via a context menu available on the display panels . in addition, diagnostics related to the lap tracking method  <cit>  and other quality metrics  may also be displayed as an aid to tracking optimization .

tracer is designed to process and explore any mysql- or sqlite-based database of image-based screening data structured according to the following simple schema:an image table where each row corresponds to an image acquired at a unique timepoint and field of view and the columns contain the image data . a requirement for this table is an image index, given as a column of integers referencing each site  acquired.

an object table in which each row represents an object  from a given image and the columns contain the collected object measurements . required for this table is an image index as described above, as well as an object index given as a column of integers referencing each object identified in an image. an  location for each object is also required  as columns in the table; this permits limited 3d + t functionality if a 2d centroid of each 3d object is provided rather than an entire 3d segmentation, e.g., by using a maximum projection into the xy plane or a particular z-slice.

in addition, an object relationship table is also required. each row corresponds to the image and object index for a given object and that of its “parent”, i.e., tracked predecessor.



the above data tables can be automatically generated by cellprofiler using its exporttodatabase and exporttospreadsheet modules; example files are provided at http://www.cellprofiler.org/tracer/. however, these schema are intended to be simple enough that a third-party software package  can easily format its data accordingly. using this format, a trajectory  can be captured by following the ancestor-progeny mapping for an object. the relationship table captures both one-to-many and many-to-one object mappings created by splits and merges, as well as temporal gaps produced by transient object disappearances.

the primary challenge in handling aberrations in time-lapse data is discriminating between natural biological behaviors versus analysis artifacts . to address this issue, tracer allows the user to assess the quality of object trajectories by treating the trajectories as a network graph and highlighting possible aberrations in the graph connectivity. the use of graph-based methods to analyze and resolve defects in time-lapse tracking data has been explored previously ; here, we use tracer to simply bring attention to aspects of the network that may represent possible mistakes in cellular segmentation and tracking.

RESULTS
we demonstrate the data analysis and quality assessment features of cellprofiler tracer using two time-lapse movies that reveal the dynamics of nuclear division: a drosophila blastoderm embryo with gfp-histone marking the nuclear dna  and mcf- <dig> nuclei tagged with nls-mcerulean fusion protein ; further details on these data and permissions for use are included in the additional file  <dig>  we used cellprofiler to identify the nuclei, track them over time, and measure over  <dig> features of area, shape, intensity and texture ; the image data and cellprofiler pipelines are available from http://www.cellprofiler.org/tracer/. in the case of the drosophila embryos, the nuclei proceed through the cell cycle in synchrony, due to their sharing a common cytoplasm. from the heatmap shown in fig.  <dig>  one can see that the rich set of features derived from gfp-histone expression at each time point of the movie could be used to fingerprint nuclei at particular phases of the cell cycle. similarly, any of the features collected can be visualized on the xyt and lineage panels by selecting the desired measurement for color-coding the object tracks; additional file 1: figure s <dig> shows examples for the two data sets. hypotheses about cell behavior can be generated and tested using this view.

cells typically exhibit a limited range of dynamic behavior, and hence the resultant network graphs are expected to assume only certain topologies, as shown in a movie of mcf- <dig> nuclei . therefore, deviations from expected topologies  may indicate that something is amiss in the tracking. the user can select to display three different graph deviations in the tracer interface: loops, crossings, and singletons; all of these are evaluated when the data is first loaded. for example, transient split/merge  or merge/split  events are unlikely to occur in typical biological settings and may indicate an object mis-segmentation . likewise, a very short trajectory  may correspond to a spurious object detection. for singletons, the user can produce a display showing the distribution of track lengths and a chart listing the total number of tracks and the median, 10th and 90th percentiles of the track lengths .fig.  <dig> schematics of tracking errors. a an inset of the lineage panel for a movie of mcf- <dig> cells, with various tracking topologies highlighted. b-d tracking errors are reflected in synchrograms of mcf- <dig> nuclei  and graph topologies  with color indicating the unique object label. b typical graphs with no tracking errors. c mis-segmentation of neighboring objects produces transient merging and erroneous object creation. d a brief mis-segmentation of an object results in a transient  split



cellprofiler tracer examines the tracking data for these deviations and highlights suspect nodes by color-coding them in the display panels. in the case of singletons, these nodes may be removed to create a new network graph saved with the original data for retrieval across tracer sessions. it should be emphasized that the highlighted nodes are intended to call attention to possible object segmentation or tracking problems; the absence of suspect nodes in a particular dataset does not preclude other errors. however, a large number of highlighted nodes would indicate the need for further optimization of the original cell segmentation settings. while other tracking interfaces include manual or semi-supervised segmentation editing  <cit> , this functionality is currently outside the scope of tracer. this is because the tool aims to support the completely automated analysis of thousands of time-lapse image sets, for which manual intervention is impossible and some amount of automated error must be tolerated. thus, the tool is designed to assist researchers in selecting appropriate segmentation and tracking parameters in other software , such that the resulting data files are as high quality as possible. if feasible and necessary , manual editing of individual trajectories can be carried out using other software, after tracer has assisted in optimizing the automated segmentation and tracking parameters.

to illustrate the use of cellprofiler tracer for optimizing parameters, we tracked nuclei in the mcf- <dig> time-lapse data set using cellprofiler; for this movie, the default settings for its lap tracking method yielded substantial errors . anecdotally, researchers have reported that the lack of visual feedback makes adjusting the algorithm’s many parameters extremely challenging. using tracer to visualize and assess the resulting tracks, the tracking settings in cellprofiler were then changed accordingly and the nuclei re-analyzed to produce revised tracks. this procedure was iteratively repeated until the final tracks reflected the actual temporal behavior of the nuclei; these optimized settings were then confirmed in tracer to reproduce the expected tracking behavior for a different mcf- <dig> data set . it bears noting that while only the lineage panel is shown in additional file 1: figure s <dig> for brevity, all three visualization tools were employed for optimization. while this one particular movie could have been analyzed more quickly using a tool for manual correction; the value in using tracer is to optimize automated settings on subsets of time-lapse data, so that they can be applied to hundreds of thousands of data sets, for example, using cellprofiler’s high-throughput interface.

CONCLUSIONS
as cellular tracking matures and the size of microscopy data sets continues to increase, progress in validating tracking quality will make powerful time-lapse experiments on larger data sets feasible . cellprofiler tracer is a tool that augments the cell-tracking functionality of the cellprofiler biological image analysis package by visualizing multi-parametric time-lapse data. the software incorporates graph-based assessment of tracking quality, and makes it easy to produce and interact with xyt plots, lineage trees, synchrograms and heatmaps — visualizations that have proven useful but have not as yet existed in a single freely-available and open-source software package.

availability and requirements
project name: cellprofiler tracer

project home page: http://www.cellprofiler.org/tracer/ , https://github.com/cellprofiler/cellprofiler-analyst/tree/cellprofiler-tracer 

operating systems: windows, 64-bit 

programming language: python

other requirements: the tracer source code for cellprofiler analyst requires the following libraries :○ for basic cellprofiler analyst functionality■ python  <dig>  or greater 

■ numpy  <dig>  or greater

■ scipy

■ wxpython

■ scikit-learn

■ mysqldb

■ matplotlib

■ javabridge

■ python-bioformats

■ verlib 



○ for tracer functionality■ enthought tool suite 

■ vtk,  <dig>  or greater

■ networkx,  <dig>  or greater

■ configobj 





license: gnu general public license, version  <dig> 

any restrictions to use by non-academics: none



additional files
additional file 1: figures s1–s <dig>  referenced in the main manuscript text. 

additional file 2: 
details of the cellular image data including cell type, acquisition technique, resolution and temporal resolution. 

additional file 3: 
listing of high-content image-based features generated by cellprofiler, categorized by feature type. 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

mab developed and implemented the software, and drafted the manuscript. aec contributed to the design of the software and case studies and was involved in writing and editing the manuscript. both authors reviewed and approved the final manuscript.

the authors thank the members of the foe and ramaswamy laboratories for contributing image data to the development of the software and this article, as well as john albeck, albert yeh, and evgeny shlevkov for their helpful feedback on the tracer tool. we are also grateful to lee kamentsky and vebjørn ljoså for helpful advice, coding edits and discussions on compilation, and the imaging platform team members for comments during manuscript preparation.

this work was supported by the national science foundation  and national institutes of health .
