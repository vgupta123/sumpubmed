BACKGROUND
functional noncoding rnas  have been recognized as regulatory or catalytic molecules, and have received much attention in recent years. it is known that ncrna genes cover a fair proportion of the whole genome in higher organisms including humans  <cit> , and studying functional ncrnas is an important task to understand complex mechanism of higher organisms. structure analysis of ncrnas will help us elucidate their functions since it is widely recognized that there is correlation between structure and function. due to difficulty in determining rna 3d structure  by experimental techniques, many attempts have so far been made at predicting secondary structure given an rna sequence . a secondary structure is defined as a set of hydrogen-bonding base pairs such as watson-crick complementary pairs . one of the fundamental secondary structures is shown in figure  <dig>  which is called a hairpin loop or stem loop. another diagrammatic representation is arc depiction where base pairs are connected by arcs over the rna sequence ). among several rnas, including rrnas, tmrnas and viral rnas, there are substructures called pseudoknots ) where some arcs over the sequence cross in the arc representation as shown in figure  <dig>  prediction of rna secondary structure with pseudoknots has increased in importance since pseudoknots have been known to play an important role in a number of rna functions such as ribosomal frameshifting and splicing. furthermore, a biologically reliable database called pseudobase  <cit>  has been constructed, which contains structural, functional and sequence data on rna pseudoknots.

many single-stranded rnas are considered to fold back on themselves to be thermodynamically stable. this idea has led to the development of several algorithms that minimize the equilibrium free energy of rna. in the pioneering work, we refer to the zuker's algorithm  <cit>  that predicts secondary structure with the lowest free energy by using a dynamic programming  technique, and its implementation named mfold  <cit>  is one of the major softwares for rna secondary structure prediction. the time complexity of the zuker's algorithm is o where n is the length of an input rna sequence. however, this algorithm cannot deal with pseudoknots. to predict pseudoknotted structure, several dp algorithms that minimize free energy in the range from o to o time were proposed including pknots  <cit> , pknotsrg  <cit>  and iterated loop matching   <cit> . these algorithms focus on some restricted pseudoknots for solvability in polynomial time since prediction of arbitrary pseudoknotted structure was proven to be np-hard  <cit> . 

there have also been several grammatical approaches to modeling some kinds of pseudoknots, including use of tree adjoining grammar  <cit> , crossed-interaction grammar  <cit> , parallel communicating grammar  <cit>  and multiple context-free grammar  <cit> . in these grammatical approaches, secondary structure prediction can be interpreted as parsing of the grammars, which can be addressed in o to o time. although performance of these grammar-based methods is comparable to that of energy-based methods, grammatical approaches have the advantage of the capability of constructing profile  when multiple structural alignment is given in advance.

the sequence alignment information is also useful for rna secondary structure prediction. sankoff  <cit>  proposed a dp algorithm that can simultaneously solve the sequence alignment and folding problems for multiple sequences. later, sankoff's algorithm was improved by mathews and turner  <cit> , where their proposed algorithm is called dynalign. dynalign combines free energy minimization and comparative sequence analysis to find a low free energy structure common to two sequences without requiring any sequence identity.

recently, parisien and major  <cit>  presented a new analysis of rna secondary structure prediction by incorporating all base pairs including noncanonical ones. they introduced a new representation of the nucleotide relationships in structural rnas, called the nucleotide cyclic motif . ncm is incorporated into the scoring function of a folding algorithm, which is also based on dp.

returning to the viewpoint of energy minimization, rna secondary structure prediction can be regarded as a kind of optimization problem. in fact, several problems in bioinformatics can be formulated as combinatorial optimization problems. one of the successful applications is raptor  <cit> , which calculates protein threading using an integer programming  formulation. although ip problems are known to be np-hard, descriptive power of ip is strong and flexible. in addition, recent commercial optimization softwares can deal with relatively large-scale instances even if a problem is computationally hard to solve. 

in this paper, we present a new method of predicting rna secondary structure with pseudoknots based on ip. in our model, thermodynamic information is incorporated into the objective function whose value is to be minimized, and structural information is represented by constraints. it should be noted that we focus on a practical class of pseudoknots by setting constraints appropriately. we use the cplex software  <cit>  to solve the ip problem and evaluate our method on a set of rna sequences contained in pseudobase  <cit>  and rfam  <cit> . advantages of our proposed method are summarized as follows:

• our prediction method using ip is flexible. specifically, various types of secondary structures can be handled by adding or removing constraints. in fact, we can describe pseudoknot-free structures as well as generalized planar pseudoknots  by ip formulations, and in this paper we provide a modeling of a certain type of recursive pseudoknot .

• the ip-based method outperforms three existing methods pknots, pknotsrg and ilm in sensitivity for  <dig> rna sequences known to have pseudoknots. in particular, for a set of sequences of small length , our approach achieved good performance in both sensitivity and specificity.

• once we can model the prediction problem by an ip formulation, we need not develop any algorithm from scratch because high-performance solvers for ip are now available. thus, we can focus on how to describe the topology of structure and how to assign appropriate scores to the model.

• the ip-based approach is extensible. if we have incomplete data on secondary structure where parts of the structure  have been determined by experiment, we can complement the incomplete structure by modeling the known parts of the structure as constraints and solving the ip problem.

methods
definitions of rna secondary structure and pseudoknot
in this section we will describe the preliminary definitions of rna secondary structure including pseudoknots.

definition  <dig> . an rna sequence is represented by a string of n characters s = s1s <dig> ⋯ sn where si ∈ {a, c, g, u}. a secondary structure of the sequence s is defined as a set s of base pairs  such that the following conditions are satisfied:

 <dig>   <dig> ≤ i <j ≤ n, meaning, two bases that form a pair must be located at different positions.

 <dig>  j - i > t where t is a small positive constant, meaning, the sequence does not fold too sharply on itself.

 <dig>  for all base pairs  and  in s, i = i' if and only if j = j', meaning, each base can be paired with at most one base.

here, we allow only watson-crick base pairs  and , and a wobble base pair  to form the secondary structure, which we call valid base pairs.

definition  <dig> . an rna secondary structure s is said to contain a pseudoknot if and only if there exist ,  ∈ s  such that i <i' <j <j'.

definition  <dig> . an rna secondary structure s is called pseudoknot free if and only if for all pairs ,  ∈ s , one of the following conditions is satisfied:

 <dig>  i <j <i' <j', i.e.,  precedes , or

 <dig>  i <i' <j' <j, i.e.,  includes .

there are various kinds of pseudoknots, depending on how arcs representing base pairs cross above the sequence. for tractability in computational complexity, several classes of pseudoknots were proposed.

definition  <dig> . let si0si0+1⋯sk <dig> be a consecutive rna subsequence. a set of base pairs s′i <dig> k <dig> is called a simple pseudoknot if there exist positions j <dig>  j′ <dig>  satisfying the following conditions ):

 <dig>  each  ∈ s′i <dig> k <dig> satisfies either i <dig> ≤ i <j′ <dig> ≤ j <j <dig> or j′ <dig> ≤ i <j <dig> ≤ j ≤ k <dig> 

 <dig>  there exists  ∈ s′i <dig> k <dig> satisfying i <dig> ≤ i <j′ <dig> ≤ j <j <dig> 

 <dig>  there exists  ∈ s′i <dig> k <dig> satisfying j′ <dig> ≤ i <j <dig> ≤ j ≤ k <dig> 

 <dig>  if pairs  and  in s′i <dig> k <dig> satisfy either i <i' <j′ <dig> or j′ <dig> ≤ i < i', then j > j' holds.

definition  <dig> . if internal unpaired regions of a simple pseudoknot ) fold into pseudoknot-free structure and/or simple pseudoknot, the structure is called a recursive pseudoknot ).

in this paper, we propose an integer programming-based method that can predict a subclass of recursive pseudoknots. it should be noted that our formulation allows unpaired regions of a simple pseudoknot to fold into pseudoknot-free structure only.

integer programming-based model
definitions of integer programming
integer programming  is an extension of linear programming. a linear programming  problem is one of the optimization problems, which optimizes a linear function subject to linear equality and/or inequality constraints. an lp problem is composed of decision variables whose values are to be decided in some optimal fashion, an objective function to be maximized or minimized, and a set of constraints. the constraints consist of linear equalities and/or inequalities with respect to the decision variables. when the decision variables are required to be integer, the problem is called an integer programming  problem. in general, an ip problem can be written as follows:

 minimize∑j=1ncjxjsubject to∑j=1nαijxj≤bi,i= <dig> ,...,mxj∈ℤ+,j= <dig> ,...,n 

where aij, bi, cj ∈ ℝ  and xj  denotes a decision variable defined over a set of nonnegative integers ℤ+. note that the maximization problem is equivalent to the minimization problem where the sign of the objective function is inverted.

formulation for rna pseudoknot prediction
we will formulate the rna pseudoknotted structure prediction problem as an ip problem. specifically, we define the decision variables, the objective function and the linear constraints with respect to the decision variables.

we first define the following decision variables:

 xij,yij={1 is a valid pair), <dig> 

for i, j =  <dig>   <dig>  ..., n. the difference between xij and yij is that xij =  <dig> corresponds to an arc that connects two bases drawn above the sequence, while yij =  <dig> represents an arc drawn below the sequence ).

in order to incorporate stacking energy into decision variables, we use  <dig> ×  <dig>  energy parameter matrix e =   shown in table  <dig> . this matrix provides stacking energy parameters for rna folding at 37°c given by mfold version  <dig>   <cit> . note that the value of k denotes the "type" of six valid pairs. for example, k =  <dig> indicates a-u pair and we call it "type  <dig> " this statement also holds for the value of l.

we then define variables for representing the stacking pair of  and  as follows:

 zxijkl={ <dig> ,zyijkl={ <dig>  

for i, j =  <dig>   <dig>  ..., n and k, l =  <dig>   <dig>  ...,  <dig> ). note that the above definitions include illegal variables xi+ <dig>  and xn+ <dig> j- <dig> for each i and j respectively , though we allow this notation for simplicity.

let lxi =  <dig> and rxi =  <dig> if and only if the base si pairs with some base at any other position greater than i and less than i respectively. in other words, lxi =  <dig> means that si is on the left side of a base pair and rxi =  <dig> means that si is on the right side of a base pair. this set of variables also applies to yij, defined by lyi and ryi.

we will use variables ltij and rtij to represent a recursive pseudoknotted structure. we let ltij =  <dig> if and only if for a base pair  below the sequence, there is at least one base pair above the sequence  such that i' <i <j'. similarly, let rtij =  <dig> if and only if for a pair  below the sequence, there is at least one base pair above the sequence  such that i' <j <j' ). with these variables, we can formulate an ip problem for rna pseudoknot prediction as follows:

 minimize∑i=1n∑j=1n∑k=16∑l= <dig> 

subject to

  zxijkl≤xij+xi+ <dig> j− <dig> 

  is type k and  is type l), 

  zyijkl≤yij+yi+ <dig> j− <dig> 

  is type k and  is type l), 

  ∑j=1i−1xji+∑j′=i+1nxij′+∑j=1i−1yji+∑j′=i+1nyij′≤ <dig>  

  xij + yij ≤  <dig>  

  xij + xi'j' ≤  <dig> , 

  yij + yi'j' ≤  <dig> , 

  lxi−∑j=i+1nxij= <dig>  

  rxi−∑j=1i−1xji= <dig>  

  lyi−∑j=i+1nyij= <dig>  

  ryi−∑j=1i−1yji= <dig>  

  lxi−1++lxi+1≥ <dig>  

  rxi−1++rxi+1≥ <dig>  

  lyi−1++lyi+1≥ <dig>  

  ryi−1++ryi+1≥ <dig>  

  ltij≥1n2∑i′<i<j′<jxi′j′, 

  rtij≥1n2∑i<i′<j<j′xi′j′, 

  ltij+rtij≤ <dig>  

  yij + yi'j' ≤  <dig> , 

  xij,yij,zxijkl,zyijkl,lxi,lyi,rxi,ryi,ltij,rtij∈{ <dig> } 

where i, j, i', j' =  <dig>   <dig>  ..., n; k, l =  <dig>   <dig>  ...,  <dig> 

the first term in summations of the objective function is the sum of the overall energy of stacking base pairs formed above the sequence, while the second term is the sum of the overall energy of the stacking base pairs formed below the sequence. we multiply the second term by a positive weighting parameter σ. the weighting parameter restricts the occurrence of base pairs below the sequence. this is to take into account that pseudoknotted structure frequently does not appear in nature. the value of σ suggested in  <cit>  is σ <  <dig>  though the early work employed a dynamic programming-based approach. in our model, we define σ ∈ { <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> }.

constraints  and  mean that if  is a valid pair with type k and  is a valid pair with type l, the energy parameter associated with  stacking type will contribute to the total energy of the structure ). constraints  and  say that each base can be paired with at most one base regardless of whether the pair is formed above or below the sequence ). constraints  and  inhibit crossing pairs both above the sequence and below the sequence ). in constraints , ,  and , lxi, rxi, lyi and ryi are defined respectively. constraints , ,  and  guarantee that if a base is paired with another one, its adjacent base must also form a base pair ). the purpose of these constraints is to promote stacking pairs because they are known to help to stabilize the structure. constraints  and  define ltij and rtij respectively. in the constraint , if  is a base pair formed below the sequence, either ltij or rtij can take the value  <dig>  this means that the crossing region can occur once at a time ). notice that base pairs can be formed recursively in the loop regions, for example, the region from i' to i and the region from i to j' in figure  <dig>  by virtue of constraints , , , this ip model can handle a subclass of recursive pseudoknots where internal unpaired regions of a simple pseudoknot can have pseudoknot-free structure. the constraint  is used for prohibiting bifurcation structure from occurring below the sequence ). the constraint  guarantees all variables to be either  <dig> or  <dig> 

RESULTS
data set
test sequences that are known to form pseudoknots were taken from pseudobase  <cit> , where we selected  <dig> sequences of several kinds of secondary structures and of various lengths  from different families . specifically, we first selected a set of sequences of lengths 20– <dig> bases uniformly. we then checked the secondary structure of each sequence and removed sequences of similar secondary structure from the set.

other test sequences that do not contain any pseudoknots were obtained from rfam  <cit> . seven pseudoknot-free sequences from different families were selected in the same way as the sequences that contain pseudoknots, so that their secondary structures and lengths are different .

implementation
after formulating the ip problem for prediction of rna secondary structure, we employed the optimizer software called ilog cplex  <dig>   <cit>  to solve the ip formulation. cplex is a commercial software that can solve mathematical optimization problems, including ip problems. we implemented the ip formulation by c++ and included the c++ optimization library provided by cplex on a machine with intel xeon cpu  <dig>  <dig>  ghz and  <dig>  gb ram.

in our implementation, we reduced the set of variables xij and yij to solve the problem fast. during implementation of xij and yij, we focused on the fact that at least two base pairs are likely to appear consecutively on the sequence. we considered not only the pair of  but also its adjacent pairs, i.e.,  and . if  and at least one of those adjacent pairs are valid, we implemented xij and yij as decision variables.

tests
prediction accuracy of our method was measured by the sensitivity and specificity. specificity is defined as the proportion of the number of correctly predicted base pairs to the number of base pairs of the known structure. specificity is defined as the proportion of the number of correctly predicted base pairs to the total number of base pairs predicted by the algorithm.

we compared the prediction results on the best σ  of ip with the results from ilm  <cit> , pknotsrg  <cit>  and pknots  <cit> , shown in table  <dig> . note that pkb number is an identification number of each rna sequence used in pseudobase. moreover, we compared computation time of each method . as the table shows, computation time of the ip-based method depends on the sequence length. specifically, as the sequence length elongates, the computation time increases exponentially.

we also tested the ip-based model with the pseudoknot-free sequences. the ip-based model with σ =  <dig>  gives  <dig> % of average sensitivity and  <dig> % of average specificity. since the input data set is a set of pseudoknot-free sequences, the appropriate value of σ should be close to  <dig>  hence, we tested the model with σ ∈ { <dig> ,  <dig> ,  <dig> ,  <dig> }. the results showed that σ =  <dig>  gives the best average sensitivity  and the best average specificity .

discussion
we averaged the sensitivity and specificity to examine the overall performance of each prediction method. our ip-based method gives  <dig> % sensitivity, which is the highest of the four models. for specificity, the ip-based method gives  <dig> %, which is the third highest, and the best specificity is given by pknots . from table  <dig> , it is obvious that for short sequences , the accuracy of ip is very high and at least comparable to the other algorithms. for sequences of lengths 70– <dig> bases, ilm yields the highest sensitivity and specificity for most of the sequences in this group. one reason might be that some statistical information that ilm uses plays a key role in achieving good accuracy for long sequences. it is a challenge to incorporate some kind of statistical information into our ip-based method. 

the reason why the ip-based method does not yield high specificity could be that when ip is being optimized, xij and yij are assigned to be  <dig> as many as possible because the energy parameters are negative values and the objective function is to minimize the overall energy. this results in the occurrence of a number of false positive pairs. therefore, the specificity of our method is lower than that of the other methods.

when we observed predicted structures, we found that ip always outputs pseudoknotted structure. although ilm and pknots provide good specificity, it is not guaranteed that base pairs forming pseudoknots are always predicted, especially for short sequences . since the proportion of base pairs that constitute pseudoknots in rna secondary structure is small compared to the total number of base pairs, the specificity of those algorithms is high.

we considered using the leave-one-out strategy to verify the optimality of σ, resulting in a drop in accuracy . among  <dig> leave-one-out experiments, there are  <dig> experiments where σ =  <dig>  yields the best prediction result. however, there is one experiment that gives low accuracy , where pkb <dig> is used as a test sequence and σ =  <dig> . as a result, the average sensitivity and specificity is lower than the results shown in table  <dig>  where we do not perform the cross validation for σ. as stated before, σ is a fixed weighting parameter to restrict the occurrence of base pairs that form pseudoknots. it is not necessary to train the value of σ because our main purpose is not to optimize the σ parameter but to test the applicability of the ip-based model to the secondary structure prediction problem. if we aim at training parameters of the prediction algorithm, we should consider not only σ but also the other coefficients of the objective function , which is left as future work.

as explained in implementation subsection, we implemented decision variables xij and yij based on two valid consecutive base pairs. it should be noted that the number of these variables is fewer than the number of original variables before the reduction . such a reduction contributes to lower memory usage, which leads to the capability of dealing with long sequences for prediction. furthermore, we also considered three valid consecutive pairs, i.e., , , , and  for each pair of  so that we can further reduce the number of variables and can expect to increase the prediction accuracy. however, the performance using two consecutive pairs was better than using three consecutive pairs. this might reveal that reducing too many variables could make the problem harder to optimize, which results in worse prediction accuracy and more computation time. note that in this paper we only show the results using variables on two consecutive pairs.

since actual rna structure does not necessarily have the lowest energy, it is important to consider suboptimal structures, which might improve prediction accuracy. from this viewpoint, zuker  <cit>  proposed an efficient suboptimal folding algorithm. in our case, the optimal solution depends on how the solver  works out the ip problem, which is hidden to us, and thus we cannot retrieve suboptimal solutions from the solver. however, once an optimal solution  is determined by the solver, we might be able to calculate some of the suboptimal structures by describing constraints where some stacking pairs are forbidden.

CONCLUSIONS
we proposed an integer programming -based method of predicting rna secondary structure with a certain kind of recursive pseudoknot. prediction tests on a set of rna sequences were carried out, which showed good performance in accuracy for a data set of relatively small length. furthermore, our method achieved higher average sensitivity than that of several existing prediction methods for the same test set, as well as guaranteed that base pairs involved in pseudoknots are always predicted.

we also tested the ip-based model with pseudoknot-free sequences. although this ip formulation is specifically designed for pseudoknotted structure, the results showed that the ip-based method can also be useful in predicting secondary structure in the absence of pseudoknots. however, based on this ip formulation, we can formulate another ip-based model to predict pseudoknot-free structure and would be able to obtain better prediction accuracy.

as described before, our ip-based approach is flexible and extensible. recall that the ip-based prediction method takes much time for long rna sequences. in general, computation time of ip is exponential to the number of variables and thus it is important to reduce the number of variables. although in this paper we used an ip variable  to represent just one base pair, we would be able to define variables in such a way that they can handle larger units at a time, which results in further reduction of the number of variables. a kind of divide-and-conquer approach could also be useful where a long input sequence is divided into several subsequences of short length and then we apply the ip-based prediction method to each short subsequence. this approach will shorten the computation time, as well as increase the prediction accuracy, which is left as our future work.

competing interests
the authors declare that they have no competing interests.

authors' contributions
up carried out all experiments and drafted the manuscript. yk participated in the design of the integer programming formulation and drafted the manuscript. ta conceived the idea of the work and helped to draft the manuscript. all authors read and approved the final manuscript.

