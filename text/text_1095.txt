BACKGROUND
most biological processes are carried out by proteins that physically interact to form stoichiometrically stable complexes. even in the relatively simple model organism saccharomyces cerevisiae , these complexes are comprised of many subunits that work in a coherent fashion. these complexes interact with individual proteins or other complexes to form functional modules and pathways that drive the cellular machinery. therefore, a faithful reconstruction of the entire set of complexes from the physical interactions between proteins is essential to not only understand complex formations, but also the higher level organization of the cell.

these physical interactions between proteins have been most extensively catalogued for yeast using high-throughput methods like yeast two-hybrid  <cit>  and direct purification of complexes using affinity tags followed by mass spectrometry  analyses  <cit> . in  <dig>  the direct purification strategy or "pull-down" was first applied to yeast in two independent studies by gavin et al.  <cit>  and ho et al.  <cit> . more recently , two separate groups, gavin et al.  <cit>  and krogan et al.  <cit> , employed tandem affinity purification  followed by ms analyses to produce enormous amount of new data, allowing a more complete mapping of the yeast interactome. although these individual datasets are of high quality, they show surprising lack of correlation with each other  <cit> , and some bias towards high abundance proteins  <cit>  and against proteins from certain cellular compartments   <cit> . also, each dataset still contains a substantial number of false positives  that can compromise the utility of these datasets for more focused studies like complex reconstruction  <cit> . in order to reduce the impact of such discrepancies, a number of data integration and affinity scoring schemes have been devised  <cit> . these affinity scores encode the reliabilities  of physical interactions between pairs of proteins. therefore, the challenge now is to detect meaningful as well as novel complexes from protein interaction  networks derived by combining multiple high-throughput datasets and by making use of these affinity scoring schemes.

the interaction data produced from the high-throughput tap/ms experiments comprise of tagged "bait" proteins and the associated "prey" proteins that co-purify with the baits. gavin et al.  <cit>  considered direct bait-prey as well as indirect prey-prey relationships , followed by a socio-affinity scoring system to encode the affinities between the protein pairs. the socio-affinity score quantizes the log-ratio of the number of times two proteins are observed together relative to what would be expected from their frequency in the dataset. subsequently, gavin et al. used an iterative clustering approach to derive complexes. each complex was then partitioned into groups of proteins called "core", "attachment" or "module" . on the other hand, krogan et al.  <cit>  used machine learning techniques  to define confidence scores for interactions derived from direct bait-prey observations . subsequently, krogan et al. defined a high-confidence 'core' dataset of interactions, and used the markov clustering algorithm   <cit>  to derive complexes. hart et al.  <cit>  generated a probabilistic integrated co-complex  network by integrating matrix modeled relationships of the gavin et al., krogan et al. and ho et al. datasets using a measure similar to socio-affinity scores, and then used a mcl procedure to derive complexes from this network. collins et al.  <cit>  developed a purification enrichment  scoring system to generate the 'consolidated network' from the matrix modeled relationships of the gavin et al., and krogan et al. datasets. collins et al. used a bayes classifier to generate the pe scores in the consolidated network by incorporating diverse evidence from hand-curated co-complexed protein pairs, gene ontology  annotations, mrna expression patterns, and cellular co-localization and co-expression profiles. this new network was shown to be of high quality - comparable to that of ppis derived from small-scale experiments stored at the munich information center for protein sequences . zhang et al.  <cit>  used dice coefficient  to assign affinities to protein pairs, and evaluated their affinity measure against socio-affinity and pe measures. they concluded that dc and pe offered the best representation for protein affinity, and subsequently used them for complex prediction. pu et al.  <cit>  used mcl combined with cluster overlaps on the consolidated network to reveal interesting insights into complex organization. wang et al.  <cit>  proposed haco, a hierarchical clustering with overlap algorithm, to reconstruct complexes and used them to build the 'complexnet', an interaction network of proteins and complexes, in order to study the higher-level organization of complexes. chua et al.  <cit>  and liu et al.  <cit>  developed network topology-based scoring schemes called functional similarity weight  and iterative-czekanowski-dice , respectively, to assign reliability scores to the interactions in networks. subsequently, liu et al.  <cit>  used a maximal clique merging strategy  to derive complexes from networks scored using these two systems. friedel et al.  <cit>  developed a bootstrapped scoring system to score tap/ms interactions from gavin et al. and krogan et al., and subsequently derived complexes using a variant of mcl. friedel et al.  <cit>  also developed a minimum spanning tree-based method to reconstruct the topology of complexes from co-purified proteins in tap/ms assays. voevodski et al.  <cit>  used pagerank, a random walk-based method employed in context-sensitive web search, to define the affinities between proteins within ppi networks. subsequently, voevodski et al. used it to predict co-complexed proteins within the network. approaches like core  <cit>  and coach  <cit>  adopted local dense neighborhood search to derive cores and attachments from unscored networks. mitrofanova et al.  <cit>  measured the connectivity between proteins in unweighted ppi networks by edge-disjoint paths instead of edges to overcome noise, and modeled these paths as a network flow and represented it in gomory-hu trees. they subsequently isolated groups of nodes in the trees that shared edge-disjoint paths in order to identify complexes. very recently, ozawa et al.  <cit>  used domain-domain interactions to validate and refine the complexes predicted by mcl.

in this study, we develop an algorithm to derive yeast complexes from weighted  ppi networks. inspired by the experimental findings by gavin et al.  <cit>  on the modularity structure in yeast complexes, and the distinctive properties of "core" and "attachment" proteins, we develop a novel core-attachment based refinement method coupled to mcl for reconstruction of yeast complexes. we had proposed the idea of core-attachment based refinement in a preliminary work  <cit>  and called it mcl-ca.

however, mcl-ca worked only on unscored networks. here, we devise an improved algorithm  and provide a natural extension to work on scored  ppi networks. even though most eukaryotic complexes are hypothesized to display such core-attachment modularity, here we design our algorithm specific to yeast complexes because of lack of sufficient evidence, high-throughput datasets and reference complexes from other organisms. we combine tap/ms physical datasets from gavin et al.  <cit>  and krogan et al.  <cit>  to generate an unscored ppi network . we then score this network using two topology-based affinity scoring schemes, fs weight  <cit>  and iterative-cd  <cit> , to generate scored ppi networks. we gather two additional readily-available scored ppi networks from collins et al.  <cit>  and friedel et al.  <cit> . the evaluation of mcl-caw on these networks demonstrates that:  mcl-caw is able to derive higher number of yeast complexes and with better accuracies than mcl;  affinity scoring effectively reduces the impact of noise on mcl-caw and thereby improves the quality  of its predicted complexes;  mcl-caw responds well to most available affinity scoring schemes for ppi networks. we compare mcl-caw with several recent complex detection algorithms on both unscored and scored ppi networks. finally, we perform in-depth analysis of the predicted complexes from mcl-caw.

the gavin+krogan network was generated by combining the gavin and krogan-core datasets, obtained from biogrid  <cit> . the icd and fsw networks were generated by scoring the gavin+krogan network using the iterative-cdk and fs weightk schemes  <cit>  . the consolidated <dig>  network refers to the high-confidence subset  of the consolidated network derived by collins et al.  <cit> . the bootstrap <dig>  network refers to the high-confidence subset  of the bootstrap network derived by friedel et al.  <cit> . the inferred network comprised of computationally inferred interactions from the predictome database  <cit> . the gavin+krogan+inferred network was generated by augmenting the gavin+krogan network with these inferred interactions. the icd and fsw networks were generated by scoring this augmented network using the iterative-cd and fs weight systems, respectively.

methods
the mcl-caw algorithm: identifying complexes embedded in the interaction network
our mcl-caw algorithm broadly consists of two phases. in the first phase, we partition the ppi network into multiple dense clusters using mcl. following this , we post-process  these clusters to obtain meaningful complexes. the mcl-caw algorithm consists of the following steps:

 <dig>  clustering the ppi network using mcl hierarchically

 <dig>  categorizing proteins as cores within clusters

 <dig>  filtering noisy clusters

 <dig>  recruiting proteins as attachments into clusters

 <dig>  extracting out complexes from clusters

 <dig>  ranking the predicted complexes

we use the following notations while describing our algorithm. the ppi network is represented as g = , where v is the set of proteins, and e is the set of interactions between these proteins. for each e =  ∈ e, there is a confidence score  w encoding the affinity between the proteins p and q. these affinity scores depend on the scoring system used.

clustering the ppi network using mcl hierarchically
the first step of our algorithm is to partition  the ppi network using mcl  <cit> , which simulates random walks  to identify relatively dense regions in the network. the inflation coefficient parameter i in mcl is used to regulate the granularity of the clusters - higher the value more finer are the generated clusters . mcl tends to produce several large clusters  that amalgamate smaller clusters  <cit> . on the other hand, the size distributions of hand-curated complexes from wodak lab  <cit> , mips  <cit>  and aloy et al.  <cit>   reveal that most complexes are of sizes less than  <dig>  therefore, we perform hierarchical clustering by iteratively selecting all clusters of sizes at least  <dig> and re-clustering them using mcl.

after iterative rounds of mcl-based hierarchical clustering on the protein network g = , we obtain a collection of k disjoint  clusters {ci : ci = ,  <dig> ≤ i ≤ k}, where vi ⊆ v and ei ⊆ e.

categorizing proteins as cores within clusters
microarray analysis by gavin et al.  <cit>  of their predicted complex components showed that a large percentage of pairs of proteins within cores were co-expressed at the same time during the cell cycle and sporulation, consistent with the view that cores represent main functional units within complexes. three-dimensional structural and yeast two-hybrid analysis showed that the core components were most likely to be in direct physical contact with each other. to reflect these findings in our post-processing steps, we expect:

• every complex we predict to comprise of a non-empty set of core proteins; and

• the proteins within these cores to display relatively high degree of physical interactivity among themselves.

we identify the core proteins within a cluster in two stages: we first identify the set of preliminary cores and subsequently extend this to form the final set of cores. we categorize a protein p∈vi to be a 'preliminary core' protein in cluster ci = , given by p ∈ pcore, if:

• the weighted in-connectivity of p with respect to ci is at least the average weighted in-connectivity of ci, given by: din ≥ davg ; and

• the weighted in-connectivity of p with respect to ci is greater than the weighted out-connectivity of p with respect to ci, given by: din >dout.

the weighted in-connectivity din of p with respect to ci is the total weight  of interactions p has with proteins within ci. similarly, the weighted out-connectivity dout of p with respect to ci is the total weight of interactions p has with proteins outside ci. these are given by din  = ∑ {w : q ∈ vi} and dout  = ∑ {w : q ∉ vi} respectively. the average weighted in-connectivity davg of cluster ci is therefore the average of the weighted in-connectivities of all proteins within ci, given by davg=1|ci|⋅∑q∈vidin.

we use these preliminary cores to find the 'extended core' proteins. we categorize a protein p ∉ pcore to be an extended core protein in cluster ci, given by p ∈ ecore, if:

• the weighted in-connectivity of p with respect to pcore is at least the average of the weighted in-connectivities of all non-cores r ∉ pcore  to the preliminary cores, given by: din ) ≥ davg ); and

• the weighted in-connectivity of p with respect to pcore is greater than the weighted out-connectivity of p with respect to pcore, given by: din) >dout).

here, din) is the total weight of interactions p has with the preliminary cores of ci, given by: din ) = ∑ {w : q ∈ pcore }. similarly, dout) is the total weight of interactions p has with all the non-core proteins within ci, given by:

din ) = ∑ {w : r ∈ pcore }. finally, davg) is the average weight of interactions of all non-cores r with the preliminary cores, given by:

 davg)=1|)⋅∑r∈pcoredin). 

combining the preliminary and extended core proteins, we form the final set of core proteins of cluster ci, given by:

  core={pcore∪ecore}. 

filtering noisy clusters
consistent with the assumption that every complex comprises of a set of core proteins, we consider a cluster as noisy if it does not include any core protein as per our above criteria. we discard all such noisy clusters.

recruiting proteins as attachments into clusters
microarray analysis by gavin et al.  <cit>  of their predicted complex components showed that attachment proteins were closely associated with core proteins within complexes and yet showed a greater degree of heterogeneity in expression levels, supporting the notion that attachments might represent non-stoichiometric components. also, attachment proteins were seen shared between two or more complexes, consistent with the view that the same protein may participate in multiple complexes  <cit> . on the other hand, the application of mcl to ppi networks yields clusters that do not share proteins . mapping these clusters back to the original ppi network shows that proteins having similar connectivities to multiple clusters are assigned arbitrarily to only one of the clusters. these proteins might as well be assigned to multiple clusters. to reflect these findings in our algorithm, we expect the attachment proteins to be those proteins within complexes that are:

• non-core proteins;

• closely interacting with the core proteins; and

• may be shared across multiple complexes.

we consider the following criteria to assign a non-core protein p belonging to a cluster cj  as an attachment in an acceptor cluster ci , that is, p ∈ attach:

• protein p has sufficiently strong interactions with the core proteins core of the cluster ci;

• the stronger the interactions among the core proteins, the stronger have to be the interactions of p with the core proteins;

• for large core sets, strong interactions are required to only some of the core proteins or, alternatively, weaker interactions to most of them.

combining these criteria, we assign non-core p as an attachment in the acceptor cluster ci, that is p ∈ attach, if:

  ip≥α.ic.−γ, 

where ip = i) is the total weight of interactions of p with core, given by i) = ∑{w: q ∈ core}, while ic = i) is the total weight of interactions among the core proteins of ci, given by i)=12⋅∑{w : q, r∈core}, and sc = |core|, which is is normalized to yield  <dig> for core sets of size two. the parameters α and γ are used to control the effects of i ) and |core|. for a simple illustration, let α =  <dig>  and γ =  <dig>  and consider all interactions to be of equal weight  <dig>  therefore, p is attached to a core set of four proteins, if the total weight of its interactions with the core proteins is at least  <dig>  which is possible if p is connected to at least three core proteins . this step ensures that non-core proteins having sufficiently strong interactions with the cores in more than one clusters are recruited as attachments into all those clusters.

extracting out complexes from clusters
for each cluster we group together its constituent core and attachment proteins to define a unique complex. we expect all the remaining proteins within the cluster to have weaker associations with this resultant complex, and therefore categorize them as noisy proteins. in fact, experiments  <cit>  have shown that mcl clusters tend to include several such noisy proteins leading to reduction in accuracies of the clusters. therefore, our step ensures that such noisy proteins are discarded in order to extract out more accurate complexes. additionally, since these resulting complexes include attachment proteins that potentially may be recruited by multiple complexes, this step ensures that our predicted complexes adhere to the protein-sharing phenomenon observed in real complexes  <cit> . we discard all complexes of size less than  <dig> because many of these are false positives. it is difficult to predict small real complexes solely based on interaction  information .

for each cluster ci, we define a unique complex cmplx as:

  cmplx={core∪attach}. 

each interaction  among the constituent proteins p and q within this complex carries the weight w observed in the ppi network.

ranking the predicted complexes
as a final step, we output our predicted complexes in a reasonably meaningful order of biological significance. for this, we rank our predicted complexes in decreasing order of their weighted densities. the weighted density wd of a predicted complex c′i is given by  <cit> :

  wd=∑p,q∈c′iw|ci′|⋅. 

the unweighted density of a predicted complex is defined in a similar way by setting the weights of all constituent interactions to  <dig>  this blindly favors very small complexes, or complexes with proteins having large number of interactions without considering the reliability of those interactions. on the other hand, the weighted density considers the reliability  of such interactions. if two complexes have the same unweighted density, the complex with higher weighted density is ranked higher.

RESULTS
preparation of experimental data
we gathered high-confidence gavin and krogan-core interactions deposited in biogrid http://thebiogrid.org/ <cit>  . these were assembled from a combination of bait-prey and prey-prey relationships  observed by gavin et al.  <cit> , and the bait-prey relationships  observed by krogan et al.  <cit> . we combined these interactions to build the unscored gavin+krogan network . we then applied iterative-cdk  <cit>  and fs weightk  <cit>  scoring  on the gavin+krogan network, and selected all interactions with non-zero scores. this resulted in the icd and fsw networks, respectively. in addition to these two scored networks, we downloaded the consolidated <dig>  network  from http://interactome-cmp.ucsf.edu/, and the bootstrap <dig>  network  <cit>   from http://www.bio.ifi.lmu.de/complexes/procope/. the consolidated network was derived from the matrix modeled relationships of the original gavin and krogan datasets using the pe system  <cit> . therefore, this network comprised of additional prey-prey interactions that were missed in the krogan 'core' dataset. the bootstrap network was derived from the matrix modeled relationships using the bootstrapped scores  <cit> . table  <dig> summarizes some properties of these networks.

the benchmark  set of complexes was built from hand-curated complexes derived from three sources:  <dig> complexes of the wodak lab cyc <dig> catalogue  <cit> ,  <dig> complexes of mips  <cit> , and  <dig> complexes curated by aloy et al.  <cit> . the properties of these reference sets are shown in table  <dig>  we considered each of these reference sets independently for the evaluation of mcl-caw. we did not merge them into one comprehensive list of complexes because the individual complex compositions are different across the three sources and some complexes may also get double-counted . an alternative strategy was adopted by wang et al.  <cit>  by integrating the complexes from three sources  using the jaccard score: two complexes overlapping with a jaccard score of at least  <dig>  were merged together - the proteins to be included into the resultant complex were chosen based on a voting scheme.

to be accurate  while evaluating our method on these benchmark sets, we considered only the set of derivable benchmark complexes from each of the ppi networks: if a protein is not present in a ppi network, we remove it from the set of benchmark complexes. by repeated removals, if the size of a benchmark complex shrinks below  <dig>  we remove the complex from our benchmark set to generate the final set of derivable benchmark complexes for each of the ppi networks.

in order to evaluate the biological coherence of our predicted complexes, we downloaded the list of cellular localizations  of proteins from gene ontology   <cit> . we selected only the informative go terms. a go term is informative if no less than  <dig> proteins are annotated with this term and none of its descendant terms are annotated to no less than  <dig> proteins  <cit> . the list of essential genes was obtained from the saccharomyces genome deletion project  <cit> : http://www-sequence.stanford.edu/group/yeast_deletion_project/deletions <dig> html

evaluation metrics for matching predicted and benchmark complexes
let b = {b <dig> b <dig> ...,bm} and c = {c <dig> c <dig> ...,cn} be the sets of benchmark and predicted complexes, respectively. we use the jaccard coefficient j to quantify the overlap between a benchmark complex bi and a predicted complex cj :

  j=|bi∩cj||bi∫cj|. 

we consider bi to be covered by cj, if j ≥ overlap threshold t. in our experiments, we set the threshold t =  <dig> , which requires |bi∩cj|  ≥|bi|+|cj| <dig>  for example, if |bi| = |cj | =  <dig>  then the overlap between bi and cj should be at least  <dig> 

we use previously reported  <cit>  definitions of recall rc  and precision pr  of the set of predicted complexes:

  rc=|{bi|bi∈b∧∃cj∈c;j≥t}||b| 

here, |{bi|bi ∈ b Λ ∃cj ∈ c; j ≥ t}| gives the number of derived benchmarks.

  pr=|{cj|cj∈c∧∃bi∈b;j≥t}||c| 

here, |{cj |cj ∈ c Λ ∃bi ∈ b; j ≥ t}| gives the number of matched predictions.

we also evaluate the performance of our method by plotting the precision versus recall curves for the predicted complexes. these curves are plotted by tuning a threshold on the number of predicted complexes considered for the evaluation. the predicted complexes are considered in decreasing order of their weighted densities .

biological coherence of predicted complexes
a complex can be formed if its proteins are localized within the same compartment of the cell. so, we use the localization coherence of the predicted complexes as a measure their quality. let l = {l <dig>  l <dig> ..., lk } be the set of known localization groups, where each li contains a set of proteins with similar localization annotations. the co-localization score ls of a predicted complex cj is defined as the maximal fraction of its constituent proteins that are co-localized within the same localization group among the proteins that have annotations. this is given as follows  <cit> :

  ls=max{|cj∩li|:i= <dig> ,…,k}|p:p∈cj∧∃li∈l,p∈li|. 

therefore, the co-localization score ls for the set of predicted complexes c is just the weighted average over all complexes  <cit> :

  ls=∑cj∈cmax{|cj∩li|:i= <dig> ,…,k}∑cj∈c|p:p∈cj∧∃li∈l,p∈li|. 

setting the parameters i, α and γ for mcl-caw
before evaluating the performance of mcl-caw, we describe the procedure used for setting inflation parameter i for mcl, and α and γ for core-attachment refinement in order to determine a good combination of parameters for mcl-caw in practice. only the predicted complexes of size ≥  <dig> from mcl and mcl-caw were considered for setting the parameters as well as for further experiments. we used f <dig>  measured against the wodak lab  <cit> , mips  <cit>  and aloy  <cit>  benchmarks as our basis for choosing the best values for these parameters.

we adopted the following four-step procedure for each ppi network:

 <dig>  run mcl for a range of i values and choose i that offers the best f <dig> measure;

 <dig>  set i to the chosen value, set a certain α for mcl-caw, and choose γ from a range of values that offers the best f <dig> measure;

 <dig>  set i and γ to the chosen values, and choose α for mcl-caw from a range of values that offers the best f <dig> measure;

 <dig>  set α and γ for mcl-caw to the chosen values, and reconfirm the value chosen for i.

setting i for mcl
inflation i in mcl determines the granularity of the clustering - the higher the value more finer are the clusters produced. typical values used for clustering ppi networks are i =  <dig>  and  <dig>   <cit> . for each ppi network, we ran mcl over a range of i , and measured f <dig> against the three benchmark sets. we then normalized these f <dig> values against the best f <dig> obtained on each benchmark, summed up these normalized f <dig> values across benchmarks, and finally normalized these sums to obtain a final ranking for the i values. the detailed calculations are presented in additional files  <dig>  tables s <dig> and s <dig>  in figure  <dig>  we show sample f <dig> versus i plots for the unscored gavin+krogan and scored icd networks for the range of i =  <dig>  to  <dig> . we noticed that inflation i =  <dig>  gave the best f <dig> on both unscored and scored networks. the f <dig> obtained at i =  <dig>  and  <dig>  was only marginally less than that at i =  <dig> .

setting α and γ for ca refinement
for each ppi network, we set i to the chosen value, fixed a certain α, and ran mcl-caw over a range of γ. we adopted the same method as above to choose the value of γ offering the best f <dig> measure. figure  <dig> shows sample f <dig> versus γ plots on the unscored gavin+krogan and scored icd networks for i =  <dig> , α =  <dig>  and γ =  <dig>  to  <dig> . the detailed calculations are presented in additional files  <dig>  table s <dig>  we noticed that γ =  <dig>  gave the best f <dig> on both unscored and scored networks.

next, we set i and γ to the chosen values, and ran mcl-caw over a range of α. figure  <dig> shows sample f <dig> versus α plots on the unscored gavin+krogan and scored icd networks for i =  <dig> , = γ =  <dig>  and α =  <dig>  to  <dig> . the detailed calculations are presented in additional files  <dig>  table s <dig>  we noticed that α =  <dig>  gave the best f <dig> on the unscored network, while α =  <dig>  gave the best f <dig> on the scored networks.

reconfirming i for the chosen values of α and γ
finally, for each ppi network, we ran core-attachment refinement with the chosen values of α and γ over a range of i for mcl. figure  <dig> compares the f <dig> versus i plots for plain-mcl and mcl followed by ca refinement on the unscored gavin+krogan and scored icd networks for range i =  <dig>  to  <dig> . the plots reconfirmed that the chosen values for α and γ gave the best performance for ca refinement when i =  <dig>  . the detailed calculations are presented in additional files  <dig>  tables s <dig> and s <dig>  we settled on i =  <dig> , α =  <dig>  and γ =  <dig>  for the unscored gavin+krogan network, and i =  <dig> , α =  <dig>  and γ =  <dig>  for the scored networks as our final combination of parameters for mcl-caw.

evaluating the performance of mcl-caw
 <dig>  after clustering using mcl;

 <dig>  after hierarchical clustering followed by core-attachment refinement using mcl-caw.

the effect of core-attachment refinement on the predictions of mcl
compare the topmost rows in table  <dig> for mcl and mcl-caw evaluated on the unscored gavin+krogan network. they show that mcl-caw achieved significantly higher recall compared to mcl on gavin+krogan - on an average 31% higher number of complexes derived than mcl. in fact referring back to figure  <dig>  mcl-caw achieved higher f <dig> compared to mcl for the entire range i =  <dig>  to  <dig> . in order to further analyse this improvement, we considered two sets of complexes derived from gavin+krogan.  set a = mcl ∩ mcl-caw, consisting of all complexes correctly predicted by both mcl and mcl-caw, but with different jaccard accuracies;  set b = mcl-caw\mcl, consisting of all complexes correctly predicted by mcl-caw, but not by mcl. there was no complex correctly predicted by mcl that was missed by mcl-caw. we calculated the increase  in accuracies for complexes from a and b. this increase for a was noticably high, the average being  <dig> % on the wodak set. the increase for b was significantly high, the average being  <dig> % on the wodak set. this shows:  ca-refinement was successful in improving the accuracies of mcl clusters;  this improvement was particularly high for low quality clusters of mcl . mcl-caw was successful in elevating the accuracies above the threshold t =  <dig>  for those clusters that were difficult to be matched to known complexes using mcl alone. consequently, mcl-caw derived significantly higher number of benchmark complexes than mcl.

affinity scoring of ppi networks improved the performance of mcl and mcl-caw. affinity scoring followed by ca refinement had a compounded effect in improving the performance of mcl.

impact of noise on mcl and mcl-caw and the role of affinity scoring in reducing this impact
among the four scored ppi networks, both mcl and mcl-caw showed best precision and recall on the consolidated <dig>  network, which can be directly attributed to the high quality of this network. however, this high quality of consolidated <dig>  came at the expense of lower protein coverage , resulting in reduced number of derivable complexes. in order to counter this, we gathered a larger subset of the consolidated network with pe cut-off  <dig>  , which accounted for a higher protein coverage . we noticed that the improvement of mcl-caw over mcl was significantly higher on consolidated <dig> , compared to the improvement seen on consolidated <dig> . we also noticed that icd scoring of consolidated <dig>  drastically reduced the size of this network, revealing that this larger subset in fact included significant amount of false positives . these experiments indicate that any reasonably good algorithm like mcl can perform well on high quality networks. however, due to the lack of protein coverage as well as scarcity of such high quality networks, we need to consider larger networks for complex detection . this in turn exposes the algorithms to higher amount of natural noise . therefore, the need is to develop algorithms that can detect larger number of complexes in the presence of such noise. in this scenario, our results show that mcl-caw is able to derive considerably higher number of complexes than mcl. taking this further, we introduced different levels of random noise to study its impact on mcl and mcl-caw. we introduced 10% to 75% random noise  to the gavin+krogan network. we noticed that mcl-caw performed better than mcl even upon introducing 50% random noise . however, at 75% random noise, the performance of mcl-caw marginally dropped below that of mcl. therefore, mcl-caw was reasonably robust to random noise - it was stable in the range 10% - 40% noise, which covers the typical levels of noise seen in tap/ms datasets  <cit>  . we next scored these noisy networks using the icd scheme. we found that the performance of both mcl and mcl-caw improved considerably on these scored networks. mcl-caw performed considerably better than mcl even at 50% to 75% random noise . therefore, affinity scoring helped mcl-caw to maintain its performance gain over mcl.

the consolidated <dig>  and consolidated <dig>  networks were subsets of the consolidated network  <cit>  derived with pe cut-offs  <dig>  and  <dig> , respectively. we ran icd and fsw schemes on these networks. consolidated <dig>  had significant amount of false positives  that were discarded by the scoring. the performance of mcl-caw was only marginally better than mcl on consolidated <dig> , but mcl-caw performed considerably better than mcl on the "more noisy" consolidated <dig> .

the gavin+krogan network was introduced with  <dig> -  <dig>  random interactions. following this, these noisy networks were scored using the icd scheme. with the aid of scoring, mcl-caw was able to perform better than mcl even at 50% random noise.

biological coherence of predicted components
the co-localization scores for the various predicted components  of mcl-caw are shown in table  <dig>  the table shows that:  the predicted complexes of mcl-caw showed high co-localization scores compared to mcl on both the unscored and scored ppi networks. mcl included several noisy proteins into the predicted clusters, thereby reducing their biological coherence;  the predicted cores of mcl-caw displayed higher scores compared to complexes, indicating that proteins within cores were highly localized;  the complexes of both mcl and mcl-caw displayed higher scores on the four scored networks compared to the gavin+krogan network.

findings:  the complexes produced after ca-refinement showed higher scores than those of mcl;  the complexes predicted from the scored networks showed higher scores than from the gavin+krogan network;  the cores in mcl-caw showed higher scores than whole complexes.

relative ranking of complex prediction algorithms and affinity-scored networks
in order to gauge the performance of mcl-caw relative to existing techniques, we selected the following recent algorithms proposed for complex detection:

• on the unscored gavin+krogan network, we compared against mcl  <cit> , our preliminary work mcl-ca   <cit> , core by leung et al.   <cit> , coach by wu min et al.   <cit> , cmc by liu et al.   <cit> , and haco by wang et al.   <cit> ;

• on the affinity-scored networks, we compared against mcl, mcl incorporated with cluster overlaps by pu et al.   <cit>  , cmc and haco.

parameters
core , coach , mcl-ca  were compared against mcl-caw only on the unscored gavin+krogan network, while mcl , mclo , cmc  and haco  were evaluated also on the scored networks.

tables  <dig>   <dig>   <dig>   <dig> and  <dig> show detailed comparisons between complex detection algorithms on the unscored and scored networks. figures  <dig> and  <dig> show the precision versus recall curves on these networks, while table  <dig> shows the area-under-the-curve  values for these curves. considering ± 5% error in auc values, the table shows that core attained the highest auc followed by mcl-caw and cmc on the unscored network, while mcl-caw and cmc achieved the overall highest auc on the scored networks. in addition to this, on each network we ranked the algorithms based on their normalized final f <dig> measures , as shown in table  <dig>  we summed up the normalized f <dig> values for each algorithm across all the networks to obtain an overall ranking of the algorithms as shown in table  <dig>  the detailed calculations are presented in additional files  <dig>  table s <dig>  on the unscored network cmc showed the best f <dig> value, while on the scored networks mcl-caw showed the best overall f <dig> value. in particular, mcl-caw performed the best on icd, fsw and consolidated <dig>  networks, while haco performed the best on bootstrap <dig> . this more or less agreed with the relative performance gathered from the auc values .

wodak
mips
aloy
methods considered: mcl, mcl-ca, mcl-caw, coach, core, cmc and haco. cmc performed the best in terms of precision, while haco and core performed the best in terms of recall. mcl-caw stood third among of the seven algorithms in both precision and recall. #matched: #predictions matching some benchmark complex. #derived: #benchmark complexes derived by some predicted complex.

the unscored gavin+krogan network

#proteins 2964; #interactions 13507

wodak
mips'
aloy
methods considered: mcl, mclo, mcl-caw, cmc and haco. haco performed the best in terms of precision, while cmc performed the best in terms of recall. mcl-caw was a close second in both precision and recall. #matched: #predictions matching some benchmark complex. #derived: #benchmark complexes derived by some predicted complex.

the icd network

#proteins 1628; #interactions 8707

wodak
mips
aloy
methods considered: mcl, mclo, mcl-caw, cmc and haco. haco performed the best in terms of precision, while mcl-caw and cmc performed the best in terms of recall. mcl-caw was a close second in terms of precision. #matched: #predictions matching some benchmark complex. #derived: #benchmark complexes derived by some predicted complex.

the fsw network

#proteins 1628; #interactions 8688

wodak
mips
aloy
methods considered: mcl, mclo, mcl-caw, cmc and haco. cmc performed the best in terms of precision, while mcl-caw performed the best in recall. #matched: #predictions matching some benchmark complex. #derived: #benchmark complexes derived by some predicted complex.

the consolidated <dig>  network

#proteins 1622; #interactions 9704

wodak
mips
aloy
methods considered: mcl, mclo, mcl-caw, cmc and haco. haco performed the best in terms of precision, while cmc performed the best in terms of recall. mcl-caw was positioned third in both precision and recall. #matched: #predictions matching some benchmark complex. #derived: #benchmark complexes derived by some predicted complex.

the bootstrap <dig>  network

#proteins 2719; #interactions 10290

considering ± 5% error in auc values, core showed the highest value on unscored network, while mcl-caw and cmc showed the overall highest on the scored networks.

ranking obtained from normalized f <dig> values. the g+k network is unscored, while the remaining are scored using affinity scoring schemes.

ranking obtained from normalized f <dig> values.

the precision of mcl-caw  was lower on bootstrap <dig>  compared to other scored networks . mcl-caw produced many redundant complexes from this network compared to other scored networks, leading to the drop in precision. in fact we observed such variance in cmc and haco algorithms as well. for example, cmc achieved the best recall on the icd network, but lowest on the consolidated network. also, cmc produced significantly fewer complexes  on the consolidated network compared to other networks . further, all algorithms displayed "sudden dips" in precision versus recall curves towards the beginning on the bootstrap <dig>  network . all these findings indicate that the choice of affinity scoring schemes affected the performance of algorithms. in other words, each algorithm made use of certain characteristics of the ppi networks, and favored a scoring scheme that magnified or reinforced those characteristics. there was no single algorithm which performed relatively best on all the scored networks. having said that, we note mcl-caw was ranked among the top three algorithms on all scored networks, and therefore mcl-caw responded reasonably well to the considered affinity scoring schemes.

we also ranked the different affinity-scored networks based on the f <dig> measures offered to the complex detection algorithms, as shown in tables  <dig> and  <dig>  the table shows that the consolidated <dig>  network offered the best f <dig> measures to the algorithms, followed by the fsw, icd and bootstrap <dig>  networks . this agreed well with the fact that the consolidated <dig>  network was shown to have a tp/fp ratio comparable to small-scale experiments from mips, and therefore was of very high quality  <cit> .

ranking obtained from normalized f <dig> values.

ranking obtained from normalized f <dig> values.

impact of augmenting physical ppi networks with computationally inferred interactions
in this set of experiments, we studied whether augmenting the physical ppi networks with inferred interactions improved the performance of complex detection algorithms. we gathered interactions in yeast comprising of inferred interlogs , and also based on genetic  and functional  associations; downloaded from the predictome database  <cit> http://cagt.bu.edu/page/predictome_about. these were used to generate the inferred network . we then augmented the gavin+krogan network with these interactions to generate the gavin+krogan+inferred network and its scored versions, the icd and fsw networks .

we evaluated mcl, mcl-caw, cmc and haco on these augmented networks . all the algorithms displayed very low precision and recall values on the inferred network, indicating that the inferred interactions alone were not sufficient to predict meaningful complexes. interestingly, most algorithms displayed marginal dip in their performance on gavin+krogan+inferred compared to gavin+krogan. this dip in performance was explained by the analysis on the two augmented-scored networks, icd and fsw. most algorithms showed higher precision and recall on these two augmented-scored networks compared to gavin+krogan and gavin+krogan+inferred. this indicates that augmenting with raw inferred interactions gave little benefit due to presence of false positives , but scoring the augmented networks helped to improve the precision and recall values of the algorithms.

most algorithms showed marginal dip in performance on gavin+krogan+inferred compared to gavin+krogan. however, upon scoring the augmented network, their performance was better compared to gavin+krogan. this indicated that inferred interactions were useful for complex detection provided affinity scoring is employed to reduce the impact of the noise present in them.

in-depth analysis of individual predicted complexes
to facilitate the analysis of our individual predicted complexes, we mapped the complexes back to the corresponding ppi networks and examined the interactions between components of the same complex, as well as between components of a given complex and other proteins in the network. we performed this analysis using the cytoscape visualization environment http://www.cytoscape.org/ <cit> .

instances of correctly predicted complexes of mcl-caw
the first example is of an attachment protein shared between two predicted complexes of mcl-caw. the subunits of these predicted complexes  make up the compass complex involved in telomeric silencing of gene expression  <cit> , and the mrna cleavage and polyadenylation specificity factor, a complex involved in rnap ii transcription termination  <cit> . the shared attachment swd <dig>  formed high confidence connections with the subunits of both predicted complexes. on this basis, the post-processing procedure assigned swd <dig>  to both predicted complexes, in agreement with available evidence  <cit>  that swd <dig>  belongs to both compass and mrna cleavage complexes. the next example illustrates the case where a new protein was predicted as a subunit of a known complex. the attachment protein ski <dig>  was included into a predicted complex  that matched the exosome complex involved in rna processing and degradation  <cit> . additionally, ski <dig>  was also included into a prediction  matching the ski complex . however, the ski complex in the wodak lab catalogue  <cit>  did not include this new protein. further literature survey suggested that ski <dig> acts as a mediator between the ski and exosome complexes for 3'-to-5' mrna decay in yeast  <cit> .

the rna polymerase i, ii, and iii complexes  are required for the generation of rna chains  <cit> . as per the wodak lab catalogue  <cit> , all the three complexes share subunits: yor224c, ybr154c, yor210w and ypr187w, while pol i and pol iii share ynl113w and ypr110c. due to the extensive sharing of subunits, the corresponding predictions were grouped together into one large cluster by mcl. on the other hand, mcl-caw segregated the large cluster into three independent complexes, which matched the pol i, pol ii and pol iii complexes with accuracies of  <dig> ,  <dig>  and  <dig> , respectively.

in addition to these cases, a good fraction of already known core-attachment structures  were confirmed, and putative complexes were identified . some examples are worth quoting here. our predicted complex id#  <dig> closely matched the hops complex. all five cores {ylr148w, ylr396c, ymr231w, ypl045w, yal002w} and two attachments {ydr080w, ydl077c} that were covered matched those reported in gavin et al. biological experiments show that the cores have the function of vacuole protein sorting, and with the help of attachments, the complex can perform homotypic vacuole fusion  <cit> . we identified the ubiquitin ligase erad-l complex comprising of yos <dig>  hrd <dig> , usa <dig>  and hrd <dig>  that is involved in the degradation of er proteins  <cit> . this matched the hrd1/hrd <dig> purified by gavin et al. four subunits {oca <dig>  oca <dig>  siw <dig>  oca1} of a predicted novel complex  showed high similarity in functions  and localization  when verified in sgd  <cit> . this complex exactly matched the putative complex  <dig> in gavin et al.

instances depicting mistakes in the predictions of mcl-caw
here we discuss an interesting case in which the sharing of subunits was so extensive and the web of interactions was so dense that separating out the smaller subsumed complexes purely on the basis of the interaction information was much harder. it was the amalgamation of the clusters matching the saga, saga-like , ada and tfiid complexes. based on the wodak lab catalogue  <cit> , the  <dig> subunits making up the saga complex involved in transcriptional regulation  <cit>  include four subunits  that are members of the ada complex  <cit>  as well. sixteen components of the saga complex including the four shared with the ada complex, are also the components of the slik complex  <cit> . additionally, five subunits  of the saga complex also belong to the tfiid complex  <cit> . because of such extensive sharing of subunits involved in a dense web of interactions  network), mcl-caw was able to segregate out only two distinct complexes - saga  and slik . the clusters matching tfiid and ada remained amalgamated together. in the next set of analysis, we compared the derived complexes from the gavin+krogan and the icd networks, and identified cases where mcl-caw had missed a few proteins or whole complexes due to affinity scoring. from the wodak, mips and aloy reference sets, there were  <dig>   <dig> and  <dig> complexes, respectively, that were derived with better accuracies from the gavin+krogan network than from the icd network. and, there were  <dig>   <dig> and  <dig> complexes, respectively, that were derived from the gavin+krogan network, but missed totally from the icd network. table  <dig> shows a sample of such complexes from the wodak reference set. for the complexes that were derived with lower accuracies , mcl-caw had missed a few proteins due to low scores assigned to the corresponding interactions. for example, in the predicted complex from the icd network matching the swi/snf complex, two proteins  out of the four missed ones were absent due to their weak connections with the rest of the members; instead, these proteins were present in the prediction matching the rsc complex. in the gavin+krogan network, these two proteins were shared between two complexes matching the swi/snf and rsc complexes, which also agreed with the wodak catalogue  <cit> .

the upper half shows sample complexes from wodak lab derived with lower accuracies from the icd network compared to those from the gavin+krogan network. the lower half shows those missed from the icd network. the #incorrect proteins in icd network is with respect to the benchmark complexes.

in the cases where mcl-caw had completely missed some complexes from the scored network , it is interesting to note that mcl-caw had pulled-in many additional  proteins as attachments into the predicted complexes, which caused the accuracies to drop below  <dig> . one such case is of the predicted complex id# <dig> matching the eif <dig> complex with a low jaccard score of  <dig> . the eif <dig> complex from wodak lab consisted of  <dig> proteins: yor361c, ylr192c, ybr079c, ymr309c, ydr429c, ymr012w and ymr146c. the predicted complex id# <dig> from the gavin+krogan network consisted of  <dig> proteins :  <dig> cores  and  <dig> attachments . therefore, there were  <dig> missed and  <dig> additional proteins in the prediction, leading to an accuracy of  <dig> . the predicted complex id# <dig> from the icd network consisted of  <dig> proteins:  <dig> cores  and  <dig> attachments . therefore, there were  <dig> missed and  <dig> additional proteins in the prediction, leading to an even lower accuracy of  <dig> . all the core proteins had same or similar go annotations   <cit> . upon analysing the go annotations of the  <dig> attachment proteins, we noticed that only one  had the same annotation as the core proteins. this was also part of the eif <dig> complex from wodak lab  <cit> . out of the remaining  <dig> attachment proteins, five  had related go annotations  as the core proteins. a literature search revealed that these proteins belonged to the multi-eif initiation factor conglomerate  and the  <dig> s ribosomal subunit involved in translation  <cit> . the remaining two  were involved in translation activity, but were absent in the wodak lab catalogue. these might be potentially new proteins belonging to the eif <dig> or related complexes, and need to be further investigated. we also analysed the go annotations of the level- <dig> neighbors to the predicted complex seen in the network, none of them had annotations similar to the proteins within the network. this example illustrates that carefully incorporating go information into our algorithm to include or filter out proteins can be useful in cases where making decisions solely based on interaction information is difficult.

correlation between essentiality of proteins and their ability to form complexes
early works by jeong et al.  <cit>  and han et al.  <cit>  studied the essentialities of proteins based on pairwise interactions within the interaction network, and concluded that hub  proteins are more likely to be essential. this formed one of the criteria within the "centrality-lethality" rule  <cit> . however, a deeper insight can be obtained by studying the essentialities at cluster or group level of proteins rather than pairwise interactions. recently, zotenko et al.  <cit>  argued that essential proteins often group together into densely connected sets of proteins performing essential functions, and thereby get involved in higher number of interactions resulting in their hubness property. therefore, hubness may just an indirect indicator of protein essentiality. more recently, kang et al.  <cit>  studied essentiality of proteins by generating the reverse neighbor  topology  <cit>  out of protein networks. this topology groups those proteins together that are within the reverse neighborhood of a given protein. kang et al. concluded that centrality within the rnn topology is a better estimator of essentiality than hubness or degree in the interaction network. studies by hart et al.  <cit>  showed that essential proteins are concentrated only in certain complexes, resulting in a dichotomy of essential and non-essential complexes. wang et al.  <cit>  concluded that the size of the  recruiting complex of a protein may be a better indicator of protein essentiality than hubness.

in our work, we attempt to understand the relationship between the essentiality of proteins and their ability to form complexes. table  <dig> shows that a high proportion , fsw , consolidated <dig>  and bootstrap <dig>  networks, respectively) of essential proteins present in the four affinity-scored networks belonged to at least some correctly predicted complex. this indicated that essential proteins are often members of complexes or co-clustered groups of proteins.

the figures in brackets represent the proportion of essential genes present in the corresponding group out of the  <dig> total essential genes obtained from the yeast genome deletion project  <cit> .

# essential genes in ydp: 1123

to further analyse this ability of essential proteins to form complexes or groups, we binned our correctly predicted complexes based on their sizes and calculated the proportion of essential proteins in all complexes for each bin . figure  <dig> shows that essential proteins were present in higher proportions within larger complexes. we then calculated the proportion of essential proteins within the top k ranked complexes. figure  <dig> shows that essential proteins were present in higher proportions within higher ranked complexes. both these figures hint at the same finding: essential proteins come together in large groups to perform essential functions.

discussion
in spite of the advances in computational approaches to derive complexes, high-accuracy reconstruction of complexes has still remained a challenging task. in deriving protein complexes from ppi networks, a key assumption made by most computational approaches is that complexes form densely connected regions within the networks. therefore, these approaches attempt to cluster the networks based on measures related to connectivities between proteins in the network. some approaches like mcl simulate random walks  to identify dense regions, while others like cmc merge maximal cliques into larger dense clusters. therefore, the performance of these methods varies widely depending on network densities. a glance through tables  <dig> to  <dig> reveals that all the methods considered for comparison in this work achieve very low recall on the mips set compared to the wodak and aloy sets. table  <dig> shows that the average density of complexes in mips is much lower than that of wodak and aloy sets. only  <dig> out of  <dig>  derivable mips complexes of size ≥  <dig> could be detected from the gavin+krogan network by all methods put together. we analysed the remaining  <dig> mips complexes and found most of them to have very low densities  in the gavin+krogan network. for example, the mips complex  <dig> . <dig>  went undetected by all the methods even though  <dig> of its  <dig> proteins were present in the gavin+krogan network. there were  <dig> interactions among these  <dig> proteins, giving a low density of  <dig>  to the complex in this network. continuing with this analysis, we tested mcl and mcl-caw on a ppi dataset from dip http://dip.doe-mbi.ucla.edu, comprising of  <dig> interactions among  <dig> proteins giving a low average node degree of  <dig> . mcl-caw was able to achieve only marginal improvement  over mcl, due to the low average node degree of the dip network. these experiments show that all the methods considered here find it difficult to uncover complexes that are very sparse. this should prompt us to rethink whether over importance is being given to model complexes as dense regions in ppi networks.

apart from these limitations in the existing computational methods, there are some inherent difficulties in the accumulation of interactome data as well that make complex detection difficult. complexes display different lifetimes, and their compositions vary based on cellular localizations  and conditions. the same protein may be recruited by different complexes at different times and conditions. due to such temporal and spatial variability of complexes, repeated purifications using tap/ms methods yield somewhat different "complex forms"  <cit> . the ppi networks constructed out of such purifications represent only a probabilistic average picture of the yeast interactome  <cit> . therefore, the complexes predicted out of such networks only approximate the actual complex compositions.

another limitation arises from the bias in tap/ms purifications against complexes of certain kind . since tap/ms data are acquired in a single condition , some complexes may not be present in the cell in that condition  <cit> . therefore, new experimental assays are needed before such complexes can be reconstructed and studied.

finally, even though s. cerevisiae is used as a model organism for eukaryotic interactome analysis, some key complexes specialized to other organisms  can be studied only by analysing the interaction datasets specific to these organisms. however, the incompleteness of interactome data from these organisms makes the reconstruction of complexes difficult.

CONCLUSIONS
the ultimate goal of interactome analysis is to understand the higher level organization of the cell. reconstruction of protein complexes serves as a building block towards achieving this goal. in this paper, inspired by the findings of gavin et al.  <cit> , we developed a novel core-attachment based refinement method coupled to mcl to identify yeast complexes from weighted ppi networks. we demonstrated that our algorithm  performed better than mcl in deriving meaningful yeast complexes particularly in the presence of natural noise. we also showed that mcl-caw responded reasonably well to the considered affinity scoring schemes. in the future work, we intend to improve the prediction ability of our algorithm by incorporating information from gene annotations, gene expressions, literature mining as well as domain-domain interactions. we also intend to extend our work to predict complexes of organisms other than yeast. in this context, we intend to use our mcl-caw model to study the existence  of core-attachment modularity in complexes from other organisms.

availability
the mcl-caw software is developed using pl/sql on oracle  <dig> g, using the framework in  <cit> . the source code, yeast ppi datasets, benchmark and predicted yeast complexes used in this work are freely available at the mcl-caw project homepage hosted on the nus server: http://www.comp.nus.edu.sg/~leonghw/mcl-caw/.

authors' contributions
ss conceived the initial ideas and discussed them with hwl and kn. ss devised the algorithm, developed the software, performed the experiments and analysis, and wrote and revised the manuscript. hwl supervised the project, advised ss, and reviewed and revised the manuscript. kn took part in the discussions and helped in reviewing the manuscript. all authors have read and approved the manuscript.

supplementary material
additional files 1
additional figures and tables: figures for core-attachment modularity and illustration of a predicted complex by mcl-caw. tables for setting of mcl-caw parameters, and ranking of complex detection algorithms and affinity-scored networks.

click here for file

 additional files 2
the mcl-caw software package: the source code and installation details for the mcl-caw software.

click here for file

 acknowledgements
we would like to thank the editor as well as reviewers for their valuable comments and suggestions; sean collins  and caroline friedel  for making available the consolidated  <cit>  and the bootstrap  <cit>  networks, respectively; guimei liu  and limsoon wong  for the iterative-cd, fs weight and cmc softwares  <cit> ; henry leung  and wu min  for the core  <cit>  and coach  <cit>  softwares, respectively. this work was supported in part by the national university of singapore under arf grant r252-000-361- <dig> 
