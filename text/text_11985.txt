BACKGROUND
the tertiary structures of proteins are important for understanding their functions, and have a lot of biomedical applications, such as the drug discovery  <cit> . with the wide application of next generation sequencing technologies, millions of protein sequences have been generated, which create a huge gap between the number of protein sequences and the number of protein structures  <cit> . the computational structure prediction methods have the potential to fill the gap, since it is much faster and cheaper than experimental techniques, and also can be used for proteins whose structures are hard to be determined by experimental techniques, such as x-ray crystallography  <cit> .

there are generally two major challenges in protein structure prediction  <cit> . the first challenge is how to sample the protein structural model from the protein sequences, the so-called structure sampling problem. two different kinds of methods have been used to do the model sampling. the first is template-based modeling method  which uses the known structure information of homologous proteins as templates to build protein structure model, such as i-tasser  <cit> , falcon  <cit> , mufold  <cit> , raptorx  <cit> , and mtmg  <cit> . the second is ab initio modeling method , which builds the structure from scratch, without using existing template structure information. the second challenge is how to select good models from generated models pool, the so-called model ranking problem. it is essential for protein structure prediction, such as selecting models generated by ab initio modeling methods. there are mainly two different types of methods for the model ranking. the first is consensus methods , which calculate the average structural similarity score of a model against other models as its model quality, such as modfoldclust <dig>  <cit>  which compares 3d models of proteins by the q measure. this method assumes the models in a model pool that are more similar to other models have better quality. it shows good performance in previous critical assessment of techniques for protein structure prediction  experiments  <cit>  , which is a worldwide experiment for blindly testing protein structure prediction methods every  <dig> year. however, the accuracy of this method depends on input data, such as the proportion of good models in a model pool and the similarity between low quality models. it has been shown that this kind of method is not working well when a large portion of models are of low quality  <cit> . the time complexity of most consensus methods is o time complexity , making it too slow to assess the quality of a large number of models. these problems with consensus methods highlight the importance of developing another kind of protein model quality assessment  method - single-model qa method  that predicts the model quality based on the information from a single model itself. single-model quality assessment methods only require the information of a single model as input, and therefore its performance does not depend on the distribution of high and low quality models in a model pool. in this paper, we focus on develop a new single-model quality assessment method that uses deep learning in conjunction with a number of useful features relevant to protein model quality.

currently, most single-model qa methods predict model quality from sequence evolutionary information  <cit> , residue environment compatibility  <cit> , structural features and physics-based knowledge . one such single-model qa method - proq <dig>  <cit>  has relatively good performance in the casp <dig> experiment, which uses support vector machines with a number of features from a model and its sequence to predict its quality. proq <dig>  <cit>  is updated version of proq <dig> by exchanging features with energy terms calculated from rosetta and shows superior performance over proq <dig>  another single-model quality assessment method - rfmqa  <cit>  applies random forest on structural features and knowledge-based potential energy terms, which achieves good performance on casp <dig> targets. in addition, resq  <cit>  is a new protein model quality assessment method for estimating b-factor and residue-level quality in protein structure prediction, based on local variations of modelling simulations and the uncertainty of homologous alignments.

here, we propose to develop a novel single-model quality assessment method based on deep belief network - a kind of deep learning methods that show a lot of promises in image processing  and bioinformatics  <cit> . we benchmark the performance of this method on large qa datasets, including the casp datasets, four datasets from the recently 3drobot decoys  <cit> , and a dataset generated by our in-house ab initio modeling method unicon3d. the good performance of our method - deepqa on these datasets demonstrate the potential of applying deep learning techniques for protein model quality assessment.

the paper is organized as follows. in the methods section, we describe the datasets and features that are used for deep learning method, and how we implement, train, and evaluate the performance of our method. in the result section, we compare the performance of deep learning technique with two other qa methods based on support vector machines and neural networks. in the results and discussion section, we summarize the results. in the conclusion section, we conclude the paper with our findings and future works.

methods
datasets
we collect three previous casp models  from the casp website http://predictioncenter.org/download_area/, 3drobot decoys  <cit> , and  <dig> native protein structure from pisces database  <cit>  as the training datasets. we use casp <dig> models that were not used in training as testing dataset, and unicon3d ab initio casp <dig> decoys as the validation datasets.

the 3drobot decoys have four sets:  <dig> non-homologous  single domain proteins each having  <dig> structural decoys;  <dig> proteins used in a rosetta benchmark  <cit>  each having  <dig> structural decoys;  <dig> proteins in a modeller benchmark  <cit>  each having  <dig> structural decoys; and  <dig> proteins in a i-tasser benchmark each having  <dig> structural decoys. two sets  of casp <dig> targets are used to test the performance of deepqa. each target at stage one contains  <dig> server models spanning the whole range of structural quality and each target at stage two contains  <dig> top server models selected by davis-qaconsensus method. in total,  <dig> proteins with  <dig>  structural decoys covering wide range of qualities are collected for training and testing deepqa. all of these data and calculated quality scores are available at: http://cactus.rnet.missouri.edu/deepqa/. the quality score of a model is the gdt-ts score  <cit>  in the range  <cit>  that measures the similarity between the model and its corresponding native structure. the lga package  <cit>  is used to calculate gdt-ts score and the official casp website is used to download models and native structure based on domains. in addition, we validate performance of our qa methods in a dataset produced by our ab initio modeling tool unicon3d, which in total includes  <dig> targets and  <dig>  models. the average of first ranked gdt_ts scores  for  <dig> models of stage one and stage two is  <dig>  and  <dig>  respectively. for the ab initio dataset, the average of first ranked gdt_ts score is  <dig> .

input features for deepqa
in total,  <dig> features are used as input for our method deepqa, which describe the structural, physio-chemical and energy properties of a protein model. these features include nine available top-performing energy and knowledge-based potentials scores, including modelevaluator score  <cit> , dope score  <cit> , rwplus score  <cit> , rf_cb_srs_od score  <cit> , qprob scores  <cit> , goap score  <cit> , opus score  <cit> , proq <dig> score  <cit> , dfire <dig> score  <cit> . all of these scores are converted into the range of zero and one as the input features for training the deep leaning networks. occasionally, if a feature cannot be calculated for a model due to the failure of a tool, its value is set to  <dig> .

the remaining seven input features are generated from the physio-chemical properties of a protein model. these features are calculated from a structural model and its protein sequence  <cit> , which include: secondary structure similarity  score, solvent accessibility similarity  score, secondary structure penalty  score, euclidean compact  score, surface  score, exposed mass  score, exposed surface  score. all of these  <dig> scores are converted into the range between zero and one for training the deep learning networks, and the following formula is used for normalizing dfire <dig>  rwplus, and rf_cb_srs_od scores: norm_sdfire=−pdfirescore <dig> *lnorm_srwplus=−prwplusscore <dig> *lnorm_srf_cb_srs_od=700−prf_cb_srs_odscore1000+ <dig> *l 


l is the sequence length, p
dfire score is the predicted dfire <dig> score, p
rwplus score is the predicted rwplus score, and p
rf_cb_srs_od score is the predicted rf_cb_srs_od score. the score is set to zero when the calculated result is less than zero, and one when the calculated result is larger than one. occasionally, if a feature cannot be calculated for a model due to the failure of a tool, its value is set to  <dig> .

a summary table of all features and their descriptions is given in table  <dig> table  <dig>  <dig> features for benchmarking deepqa




deep belief network architectures and training procedure
our in-house deep belief network framework  <cit>  is used to train deep learning models for protein model quality assessment. as is shown in fig.  <dig>  in this framework, a two-layer restricted boltzmann machines  form the hidden layers of the deep learning networks, and one layer of logistic regression node is added at the top to output a real value between  <dig> and  <dig> as predicted quality score. the weights of rbms are initialized by unsupervised learning called pre-training. the pre-train process is carried out by the ‘contrastive divergence’ algorithm to adjust the weight in the rbm networks  <cit> . the mean square error is considered as cost function in the process of standard error backward propagation. the final deep belief architecture is fine-tuned and optimized based on broyden-fletcher-goldfarh-shanno optimization  <cit> . we divide the training data equally into five sets, and a five-fold cross validation is used to train and validate deepqa. five parameters of deepqa are adjusted during the training procedure. the five parameters are total number of nodes at the first hidden layer , total number of nodes at the second hidden layer , learning rate Ɛ , weight cost ω , and momentum ν . the last three parameters are used for training the rbms. the average of mean absolute error  is calculated for each round of five-fold cross validation to estimate the model accuracy. mae is the absolute difference of predicted value and real value.fig.  <dig> the deep belief network architecture for deepqa




model accuracy evaluation metrics
we evaluate the accuracy of deepqa on  <dig> protein targets on both stage one and stage two models of the 11th community-wide experiment on the critical assessment of techniques for protein structure prediction , which are available in the casp official website .

the real gdt-ts score of each protein model is calculated against the native structure by tm-score  <cit> . second, all feature scores are calculated for each protein model. the trained deepqa is used to predict the quality score of a model based on its input feature scores.

to evaluate the performance of qa method, we use the following metrics: average per-target loss which is the difference of gdt-ts score of the top one model selected by a qa method and that of the best model in the model pool, average per-target correlation which is the pearson’s correlation between all models’ real gdt-ts scores and its predicted scores, the summation of real tm-score and rmsd scores of the top models selected by a qa method, and the summation of real tm-score and rmsd scores of the best of top five models selected by qa methods.

to evaluate the performance of qa methods on ab initio models, we calculated the average per-target tm-score and rmsd for the selected top one model, and also for the best of selected top five models by qa methods.

RESULTS
comparison of deep learning with support vector machines and neural networks
we train the deep learning and two other widely used machine learning techniques  separately on our training datasets and compare their performance using five-fold cross-validation protocol. svmlight  <cit>  is used to train the support vector machine, and the tool weka  <cit>  is used to train the neural networks. the rbf kernel function is used for support vector machine, and the following three parameters are adjusted: c for the trade-off between training error and margin, Ɛ for the epsilon width of tube for regression, and parameter gamma for rbf kernel. we randomly select  <dig>   <dig> data points from the whole datasets to form a small dataset to estimate these parameters of support vector machine to speed up the training process. based on the cross validation result on this selected small dataset, c is set to  <dig>  Ɛ to  <dig> , gamma to  <dig> . for the neural network, we adjust the following three parameters: the number of hidden nodes in the first layer , the number of hidden nodes in the second layer , and the learning rate . based on the cross validation result on the entire datasets, we set the number of hidden nodes as  <dig> and  <dig> for the first and second layer respectively, and the learning rate is set to be  <dig> . for the deep belief network, we test the number of hidden nodes in the first and second layer of rbms from  <dig> to  <dig> respectively, learning rate Ɛ from  <dig>  to  <dig> , weight cost ω from  <dig>  to  <dig> , and momentum ν from  <dig>  to  <dig> . based on the mae of cross validation result, we find the following parameters with good performance: the number of hidden nodes in the first and second layer of rbms is set to  <dig> and  <dig> respectively, learning rate to  <dig> , weight cost to  <dig> , and momentum from  <dig>  to  <dig> . after these three machine learning methods are trained, they are evaluated on the test datasets.

the correlation and loss on both stage one and stage two models of casp <dig> datasets are calculated for these three methods, and the results are shown in table  <dig>  deep belief network has the best average per-target correlation on both stage one and stage two. the loss of deepqa is also lower than or equal to the other two methods. the result of wilcoxon signed ranked sum test between deep belief network and other two methods is also added in table  <dig>  the results suggest that deep belief network is a good choice for protein quality assessment problem.table  <dig> the accuracy of deep belief network, support vector machines, and neural networks in terms of mean absolute error  based on cross validation of training datasets with  <dig> features, the average per-target correlation, and loss on stage  <dig> and stage  <dig> of casp <dig> datasets for all three difference techniques. p-value is calculated for the significance of dbn compared to other two methods




comparison of deepqa with other single-model qa methods on casp11
in order to reduce the model complexity and improve accuracy, we do a further analysis by selecting good features out of all these  <dig> features for our method deepqa. first of all, we fix a set of parameters with good performance on all  <dig> features , and then train the deep belief network for different combination of all these  <dig> features. based on the mae of these models in the training datasets, we use the following features which has relatively good performance and also low model complexity as the final features of deepqa: surface score, dope score, goap score, opus score, rwplus score, modelevaluator score, secondary structure penalty score, euclidean compact score, and qprob score. after deepqa with these sub set of features is trained on the training data, it is blindly tested on the test datasets.

we evaluate the deepqa on casp <dig> datasets, and compare it with other single-model qa methods participating in casp <dig>  we use the standard evaluation metrics - average per-target correlation and average per-target loss based on gdt-ts score to evaluate the performance of each method . on stage one of casp <dig>  the average per-target correlation of deepqa is  <dig> , which is the same as the proq <dig> - the top single-model quality assessment method in the casp <dig> experiment - and better than qprob. the average per-target loss of deepqa is  <dig> , same as proq <dig> and proq2-refine, and better than other single-model qa methods. on stage two models of casp <dig>  deepqa has the highest per-target average correlation. its per-target average loss is the same as proq <dig>  and better than all other qa methods. the result of wilcoxon signed ranked sum test between deepqa and other methods is also added in table  <dig>  overall, the results demonstrate that deepqa has achieved the state-of-the-art performance.table  <dig> average per-target correlation and loss for deepqa and other top performing single-model qa methods on casp <dig>  the table is ranked based on the average per-target loss on stage two of casp <dig>  p-value of wilcoxon signed ranked sum test* between deepqa and other methods is also included in the table

* the wilcoxon signed ranked sum test was performed on the correlation and loss of targets between each method against deepqa

* resq was evaluated on  <dig> targets in casp <dig>  the local quality scores were converted into global quality score by equation global=1l∑i=1l11+locali <dig>  more detailed results can be found in additional file 1: table s4




in order to evaluate how deepqa aids the protein tertiary structure prediction methods in model selection, we apply deepqa to select models in the stage two dataset of casp <dig> submitted by top performing protein tertiary structure prediction methods. for most cases, deepqa helps the protein tertiary structure prediction methods to improve the quality of the top selected model. for example, deepqa improves overall z-score for zhang-server by  <dig> , baker-rosettaserver by  <dig> , and raptorx by  <dig> . the result of applying deepqa on  <dig> top performing protein tertiary structure prediction methods is shown at additional file 1: table s <dig> 

case study of deepqa on ab initio datasets
in order to assess the ability of deepqa in evaluating ab initio models, we evaluate it on  <dig> ab initio targets with more than  <dig>  models generated by unicon3d. table  <dig> shows the average per-target tm-score and rmsd for the top one model and best of top  <dig> models selected by deepqa, proq <dig>  and two energy scores , respectively. the result shows deepqa achieves good performance in terms of tm-score and rmsd compared with proq <dig> and two top-performing energy scores. the tm-score difference of best of top  <dig> models between deepqa and proq <dig> is significant. in most cases, z-score is also widely used to highlight the significance of qa methods for model selection. the summation of z-score based on tm-score and rmsd for each qa method is also included in table  <dig>  the results demonstrate that deepqa achieves the best performance compared to other methods based on z-score. additional files  <dig> and 3: tables s <dig> and s <dig> show the per-target tm-score and rmsd of deepqa and proq <dig> on this ab initio datasets, along with z-score of top  <dig> model and best of top  <dig> models for deepqa.table  <dig> model selection ability on ab initio datasets for deepqa, proq <dig>  dope <dig>  and rwplus score based on tm-score and rmsd, and their summation of z-score




comparison of deepqa with individual features on casp11
in order to examine the improvement that deepqa achieved by integrating multiple features for protein quality assessment, specifically, the improvement of deepqa compared against its nine input training features, we performed wilcoxon signed ranked sum test on per-target correlation and loss metrics between each input feature and deepqa predictions. the correlation, loss and significance on stage one and stage two for deepqa and nine input training features are shown in table  <dig>  in table  <dig>  deepqa achieves best correlation on stage <dig> against all other nine features, and p-value of statistical analysis between deepqa and most features  is less than  <dig> . however, p-value of statistical analysis on stage two in table  <dig> is less than  <dig>  for deepqa against all nine input features. for the loss metric, deepqa achieves the best performance against all nine input features, but p-value of statistical analysis shows that the improvement is not always significant. in summary, we compared the performance of deepqa with all nine input features, and the result shows improvement based on both correlation and loss on casp <dig> datasets. in addition, the significant improvement of deepqa on correlation metric compared with most input features  has been achieved according to the statistical analysis of wilcoxon signed ranked sum test, and the improvement of deepqa on loss metric is not significant compared with most input features, especially on stage two of casp <dig> datasets.table  <dig> average per-target correlation and loss on stage  <dig> and stage  <dig> for deepqa and its training features on casp <dig>  the significance between deepqa and individual feature was assessed by wilcoxon signed ranked sum paired t-test*, and its p-value was included to represent the improvement of deepqa against its input features

* the wilcoxon signed ranked sum paired t-test was performed on the correlation and loss of targets between each feature against deepqa




CONCLUSIONS
in this paper, we develop a new single-model qa method  based on deep belief network. it performs better than support vector machines and neural networks, and achieve the state-of-the-art performance in comparison with other established qa methods. deepqa is also useful for ranking ab initio protein models. and deepqa could be further improved by incorporating more relevant features and training on larger datasets.

additional file

additional file 1: 
table s <dig>  z-score improvement of applying deepqa for casp <dig> top performance protein tertiary structure prediction methods. table s <dig>  tm-score and rmsd score  of deepqa on ab initio datasets. table s <dig>  tm-score and rmsd score of proq <dig> on ab initio datasets. table s <dig>  average per-target correlation and loss for deepqa and resq on  <dig> targets of casp <dig>  




abbreviations
bfgsbroyden-fletcher-goldfarh-shanno

caspcritical assessment of techniques for protein structure prediction

ec scoreeuclidean compact score

em scoreexposed mass score

es scoreexposed surface score

maemean absolute error

qaquality assessment

rbmsrestricted boltzmann machines

sa scoresolvent accessibility similarity score

sp scoresecondary structure penalty score

ss scoresecondary structure similarity score

su scoresurface score

