BACKGROUND
the living cell is a dynamic, interconnected system where proteins interact with each other to facilitate biological processes. large protein-protein interaction  datasets have become available due to advances in experimental biology and the development of high-throughput screening techniques. however, while existing data describe thousands of protein interactions, such interactions still constitute only a fraction of all ppis for a small number of available organisms  <cit> . moreover, available ppi datasets acquired from different experiments are often seemingly inconsistent with each other, implying that the different methods might produce false positive interactions or fail to identify certain types of interactions  <cit> . here, we attempt to address this seemingly intractable problem by focusing on bioinformatics approaches that use protein domains as fundamental building blocks of protein interactions.

domains as protein interaction building blocks
proteins consist of one or more domains and multiple studies have shown that domain-domain interactions  from different experiments are more consistent than their corresponding ppis, suggesting that domains may be fundamental in mediating physical interactions between proteins  <cit> . under the assumption that protein interactions are mediated by domain interactions, we can hypothesize that each interaction in a ppi dataset can be converted into a corresponding set of pairwise domain interactions. however, lack of direct experimental evidence for interactions at the domain level means that we can only account for, or explain, a small fraction of known ppis for any organism using experimentally determined ddis. determining the particular domains that physically bind  a given ppi based on limited structural information remains a challenge.

to address this challenge, we must first characterize the specific protein domains that mediate protein interactions. it is estimated that approximately 80% of eukaryotic proteins and 67% of prokaryotic proteins have multiple domains  <cit> . most annotation databases characterize each domain family using a small, curated set of amino acid sequences common to representative members. these databases share a significant amount of protein-domain annotation data; however, each database also contains a noteworthy number of unique protein-domain annotations. some databases, e.g., conserved domain database   <cit>  and interpro  <cit> , provide protein-domain annotation information collected from several databases but none provides the capability to methodically merge these annotations .

combining data from multiple databases, while addressing annotation inconsistencies, is a non-trivial procedure. for example, a naïve domain annotation data-merging strategy consisting of the aggregation of all annotation data regardless of domain sequence overlaps or domain name/label similarities would increase the average number of hypothetical domains per protein. however, this strategy would also overestimate the total number of domains, because it considers domains that are not identically represented in two different databases as two different domains . in contrast, considering sequence information as part of the naïve merging strategy, e.g., by aggregating all annotation data that overlap in at least  <dig> continuous amino acids, would reduce the number of inferred domains per protein. however, such a merging strategy inherently assumes that all domains that overlap in sequence are identical, leading to a small number of merged domains and, likely, an underestimation of the total number of true domains . the strategy presented here combines sequence locations and name/label information to construct merged domain annotation sets in which the number of domains per protein is not a priori over- or underestimated .

domain-based methods for reconstituting whole protein interaction networks
the use of domains as mediators of protein interactions requires the ability to assign domains to all proteins under consideration. however, in the case of multi-domain proteins, it is unclear which particular domains truly mediate a given ppi set, because more than one potential domain pair can account for a single interaction. this uncertainty could lead to predictions of false positive ppis, as domains identified as mediators of protein interactions account not only for the original ppi set but also for all other protein pairs that contain the same domain pair combinations. existing computational methods use varying approaches to tackle different aspects of these problems, each with its own set of aims, strengths, and limitations  <cit> . for example, some methods use additional biological information, such as gene expression data, to establish whether a ppi can occur  <cit> , and others limit the ppi coverage to smaller sets of high-confidence interactions  <cit> . an additional promising approach is to use a feature selection algorithm to find a set of ddis that best discriminate between true and false ppis  <cit> . however, these methods are not broadly applicable to non-model organisms or comprehensive enough to include protein interactions on a proteomic scale.

in this regard, reconstitution methods provide a framework that does not a priori require additional data and is applicable on a genomic scale to any organism provided a ppi dataset exists  <cit> . the aim of these methods is to identify small sets of potential ddis that reconstitute the complete original set of ppis. overall, the aim of the maximum-specificity set cover  method  <cit>  is to minimize the number of potential false positive interactions regardless of the number of ddis used to explain the ppi set, while the aim of the parsimonious approach   <cit>  and the generalized parsimonious explanation  method  <cit>  is to minimize the number of selected ddis regardless of the introduction of false positive interactions. despite their underlying differences, all three approaches  have been shown to recover ddis experimentally identified from structural data. this leads to the observation that true ddis are not necessarily rare, promiscuous, or parsimonious, but rather are distributed between the extremes. consequently, a method that reconstitutes protein interactions based on different degrees of rare, promiscuous, and parsimonious ddis could prove beneficial.

our contributions
here, we investigate how to create merged sets of domain annotations and how to use these annotations to select sets of ddis that reconstitute large-scale ppi networks using different true positive and false positive selection weights. first, we introduce a novel computational strategy to merge protein-domain annotation data from multiple databases, a needed capability that is not currently available elsewhere. we believe that merging protein-domain annotation data from multiple sources will help ensure a large and consistent domain annotation set for any given organism. second, we introduce a novel heuristic computational approach, parameter-dependent ddi selection , which, given a set of ppis, extracts a small set of ddis that explains the original set of protein interactions and is not biased towards ddis with either low or high occurrence counts. the heuristic scoring system for selecting ddis can be tuned between favoring known interactions  and penalizing non-observed interactions . given that the domain-merging procedure increases the number of domains per protein and, hence, the number of possible domain combinations, padds was designed to minimize both the number of false positive ppis and the size of the extracted ddi set.

RESULTS
merged domain annotations from multiple databases
our strategy combines sequence locations and name/label information to construct merged domain annotation sets as detailed in the methods. here, we illustrate its application on a well-annotated single-cell organism. we created a merged set of protein-domain annotations for yeast  using sequences of  <dig>  proteins,a downloaded from the saccharomyces genome database   <cit>  and yeast annotation data from six commonly used annotation databases: pfam-a   <cit> , superfamily   <cit> , smart  <cit> , prodom  <cit> , tigrfam  <cit> , and cdd  <cit> . to assign protein-domain annotations, we either used curated yeast domain annotations   <cit>  or extracted domain annotations based on an e-value threshold of ≤ 10- <dig> <cit> . although approximately 80% of the proteins had at least one domain annotation in one of the databases , this level of annotation density cannot be expected for less-studied organisms. thus, merging protein-domain annotation data from multiple sources will help ensure a maximally large and consistent domain annotation set for any given organism.

a total of  <dig>  proteins containing a total of  <dig> , <dig> amino acids were downloaded from the saccharomyces genome database <cit> . np, proteins with at least one domain annotation. ns, protein-domain amino acid sequence coverage. no, number of unique domains in the original database. nu, number of unique domains in the unified database. ad, average number of domains per protein in the unified database.

table  <dig> shows that, despite extensive annotation efforts, each database characterized each protein by a small average number of domains. it also shows the variation in the number of domains extracted among the different databases, as well as the variation in the number of proteins with domain annotations.

the content of the final merged domain annotation set does not depend on the order in which we merged the databases. however, to create high-confidence merged annotation sets of different sizes, e.g., merged annotation from two, three, …, six, databases, we first merged the pfam-a and sf contents because they contain curated domains of high confidence. we selected the merging order of the other four databases randomly and table  <dig> shows the database origins of the six merged sets, set- <dig> to set- <dig> 

table  <dig> shows that the merging procedure increased the number of proteins with domain annotation by more than 10%. at the same time, the average number of domains per protein increased from  <dig>  to  <dig>  , approaching the estimated average value of ~ <dig>  <cit> . the final domain annotation set created using the database merging procedure consisted of  <dig>  unique domains . the domain length distribution in this set was similar to the domain length distribution from each of the six original databases , and most domains ranged in length between  <dig> and  <dig> amino acids.

database sets set- <dig> through set- <dig> are defined in table  <dig>  set-6-nb  contained the union of unique domain annotations from the six databases used in set- <dig>  set-6-sb contained merged domain annotations from the same six databases as in set- <dig>  but domains in this set were merged only if their sequences overlapped and they shared at least ten common amino acids . nu, number of unique domains. np, proteins with at least one domain annotation. ns, protein-domain amino acid sequence coverage. ad, average number of domains per protein.

evaluation of the protein-domain annotation merging strategy
to evaluate the merged domains, we compared our results to those obtained with two simple alternative strategies: a naïve domain-merging strategy  and a naïve domain-merging strategy that takes into account sequence overlaps . because the number of original domains is constant, all three merged sets  yielded the same number of proteins with domain annotation. however, their final domain annotations resulted in different numbers of unique domains, as well as different average numbers of domains per protein . set-6-nb consisted of over  <dig>  unique domains, with an average number of  <dig>  domains per protein. this set considerably overestimated the total number of unique domains, as many of its  <dig>  domains represented the same domain with a slightly different label. for example, the naïve merging strategy would consider the formin homology  <dig> domain represented in three annotation databases  as different domains, because their domain labels and sequence locations are not identical . by merging annotations that overlap in at least  <dig> continuous amino acids, set-6-sb reduced the number of unique domains to  <dig> , as well as the average number of domains per protein to  <dig> . although the average number of domains per protein was greater than the average number for any of the original databases, the total number of unique domains was underestimated. for example, the sequence location of arm repeat overlaps with the sequence location of drf_fh <dig> and drf_gbd domains  and this strategy would merge the arm repeat with drf_fh <dig> and also with drf_gbd. this would result in a merged domain that consists of the three original domains, arm repeat, drf_fh <dig>  and drf_gbd, even though these three domains are different and should not have been merged. our merging strategy does not suffer from these issues, as it distinguishes between the same and different domains that cover the same sequence location based on their domain labels .

these results showed that our protein-domain-merging strategy did not overestimate or underestimate the number of domains per protein. however, this does not necessarily imply that the merged domain annotation is biologically more relevant. to this end, we compared our merged protein-domain annotations to the recently released high-confidence annotations from the pfam-a database . to assess the amount of correctly retrieved annotations from our merged set, we compared them to the following two independent subsets of the new pfam release: 1) a set of new domain annotations that replaced annotations from the previous pfam release  and 2) a set of new domain annotations that did not exist in the previous pfam release but have a corresponding annotation in the merged dataset.b the comparison procedure consisted of two steps. first, for each new domain annotation, we found one or more merged domain annotations that covered the same protein sequence location. then, we manually compared domain labels and descriptions between the new domain and the merged domains. out of  <dig> new domain annotations in the first subset and  <dig> new domain annotations in the second subset, we found  <dig>  and  <dig>  annotations, respectively, in our merged dataset . because these account for >70% of the new pfam-a annotations, it demonstrates the benefits of the proposed domain-merging strategy.

use of annotation-based domains to reconstitute protein interaction networks
the introduction of a more complete set of domain annotations across all interacting proteins in a genome would allow for the enumeration of all domain interactions that could account for an original set of ppis. furthermore, this would also allow for a comprehensive evaluation of ddis and identification of an optimum ddi set. however, this process has the disadvantage of exponentially increasing the number of domain combinations. to circumvent this problem, our padds method enumerates only a subset of ddi combinations and evaluates each one of them based on the following two criteria: 1) the number of ddis used to account for the observed ppis and 2) the number of non-observed ppis  introduced by the combination of ddis. as detailed in the methods, this selection depends on the value of the parameter that specifies the true/false positive biases, denoted as α; α ε , where an α of  <dig>  favors observed protein interactions and an α of  <dig>  maximally penalizes non-observed interactions. we first used padds to investigate the choice of selecting different values of the parameter α on retrieved ddis. here, the ddis were constructed from a study containing multiple organisms, but with protein-domain annotations from a single database. the padds-extracted ddis were compared to other methods and validated using the ipfam  <cit>  and domine  <cit>  databases of known and predicted ddis. we then applied the algorithm to extract ddis from a high-confidence yeast ppi dataset using merged domain annotations. we compared the results from our analysis to those of existing reconstitution methods on the same datasets.

multiple organism ppis characterized by a single domain annotation database
to determine the consequences of favoring true positives or penalizing false positives, we examined the ability of padds to generate different sets of ddis that can reconstitute a diverse set of ppis from multiple organisms for different values of α. we applied padds to a collection of ppis from  <dig> different organisms as assembled by riley et al.  <cit> . in order to compare our results on this dataset to the gpe method, previously identified as giving the best reconstitution results on this dataset  <cit> , we converted all domains to the same pfam-a supra-domain annotations used by gpe  <cit> . we identified  <dig>  proteins with pfam-a supra-domain annotations and  <dig>  ppis where both interacting proteins had at least one domain annotation. this dataset yielded a total number of  <dig>  potential ddis that could be used to reconstitute all ppis and the average number of domains per protein for this dataset was  <dig> .

for each α used in padds to extract the ddi sets , we ranked the ddis based on their corresponding benefit values . we evaluated each set of top-scoring ddis for enrichment of ddis detected in crystal structures available in the ipfam database   <cit> . out of  <dig>  potential ddis from the riley dataset,  <dig> ddis were present in the set of known ddis  <cit> . figure 2a shows the fraction of known ddis retrieved for different values of α in different top-ranked ddi sets. the overall number of extracted known ddis did not increase linearly with the number of ddis analyzed, and the total retrievable number was less than 70% of the known set. additionally, the number of known ddis retrieved varied in a non-linear fashion with α, indicating that the extraction procedure was sensitive to the selection weights for both observed and non-observed interactions. these observations imply a non-trivial solution to the optimal ddi extraction problem. we also noted that the largest number of known ddis were always retrieved in sets for which α was not at its extreme values of  <dig>  or  <dig> . for the small to intermediate size sets between  <dig>  to  <dig>  analyzed ddis, the maximum retrievable number occurred at α values ~ <dig> .

figure 2b, figure 2c, and additional file 4: table s <dig> show the difference in retrieving known ddis between padds and the published results using gpe methods. for padds, we show both the best results using selected α values and average results using non-extreme values of α. for this dataset, padds was more successful  than the best gpe method in the majority of the α selections away from the extreme values. this implies that the ability to modulate the preference for known interactions and tolerance of non-observed interactions was an important factor in the process of ddi extraction and the overall ability to extract known ddis. while there is always a dataset dependency on these results, it was also clear that relaxing either extreme selection  retrieved more known ddis .

although ddi extraction can be optimized for each dataset by varying α, one cannot in all cases independently determine an optimal α value. hence, we were also interested in the robustness of the algorithm and, in particular, evaluating extracted ddis that are independent of α. we used the domine database as a comprehensive source of known and predicted ddis derived from multiple sources  <cit>  to construct ddis . the analysis showed that there was a large overlap among the sets of extracted ddis for different values of α, indicating robustness of the algorithm to choices of α. furthermore, the padds algorithm was capable of providing parameter-independent and unique ddi predictions not derivable from high-confidence results of other computational procedures. to further characterize padds-extracted ddis, we next examined the high-confidence protein interaction network from a single organism  with our merged domain annotations.

single organism ppis characterized by multiple annotation databases
to evaluate the influence of the underlying set of ppis and protein-domain annotation data on the ddi extraction process, we reconstructed a set of high-confidence yeast ppi data created by the interaction detection based on shuffling  procedure at a 5% false discovery rate  <cit> . we have previously shown that this dataset identified binary interactions as well as, or better than, the high-confidence consolidated yeast two-hybrid set or other high-confidence datasets based on affinity purification followed by mass spectrometry  <cit> . the idbos dataset consists of  <dig>  ppis between  <dig>  proteins. for protein-domain annotation of the idbos dataset, we used our merged protein-domain annotation data  as described above. the average number of domains per protein for the idbos dataset was  <dig> . additional file 4: table s <dig> shows the complete statistics for the domain annotations in the idbos dataset.

evaluating domain interactions for high-confidence yeast protein interactions
we evaluated the merged domain annotation sets using three reconstitution methods: padds, mssc, and gpe. we used padds with parameter α ε  in  <dig>  increments, ranked the extracted ddis based on the corresponding benefit value, and extracted the corresponding ranked data for mssc and gpe . although, by construction, all obtained ddi sets accounted for all original ppis, different methods yielded ddi sets of different sizes for each of the six domain annotation schemes, with padds consistently extracting the smallest sets of ddis. additional file 4: figure s <dig>  additional file 4: table s <dig>  and additional file 4: table s <dig> provide the complete results of this analysis. however, despite of their aim to minimize the number of false positives, all three methods identified a much larger number of novel  ppis than what could be expected to occur in a living cell  <cit> . even if we assume that all predicted interactions represent plausible physical interactions between proteins, e.g., a specified ppi would occur if two proteins were in close proximity, it is likely that in their native environment they are under additional biological regulation. thus, one cannot assume that all proteins that contain interacting domains will necessarily interact within the cell, due to the existence of alternative regulatory mechanisms that control these interactions  <cit> .

to evaluate the performance of the different reconstitution methods on different domain annotation sets, we investigated the ability of each method to extract ddis that accounted for the given ppis while limiting the number of false positive ppis. for this calculation, we defined the set of true non-interacting protein pairs as the set of all pairwise protein interactions minus the known true interaction set  <cit> , see methods. based on these definitions, we could then ascertain true and false ppi predictions for each extracted set of ddis and construct the corresponding receiver operating characteristic  curves from an analysis of true positive and false positive rates. padds outperformed the other two methods for all six annotation sets . the largest differences were most evident for the larger annotation sets, e.g., set- <dig>  where the other methods lack padds’s flexibility to extract a small number of ddis while limiting the introduction of non-observed interaction.

padds increases diversity of ddis when provided with sufficient amounts of annotations
to investigate the relationship between the size of the domain annotation sets and the obtained results, we compared the set of ddis  extracted by padds for different values of α. we found that, for set- <dig>  approximately 80% of the ddis were represented in all extracted sets and were not dependent on the particular value of α . figure  <dig> shows that, with an increasing amount of domain annotation data, the number of ddis represented in all extracted sets decreased, and for set- <dig> only ~30% of the ddis were represented in all sets. in contrast, we observed an increased percentage of ddis represented by a single value of α with larger annotation sets, implying that this parameter introduced significant variations among the extracted ddi sets when more domain annotation data were available. these observations suggest that, for limited amounts of domain annotation data, computational methods are forced to select particular ddis, as these ddis are the only ones that could account for certain ppis. using additional domain annotation data removed this bias, as more than one ddi accounted for a larger number of ppis.

in summary, padds extracted the smallest set of ddis for this extensively annotated high-confidence network. however, similar to other methods, regardless of how we biased our benefit score in the extraction process or how efficient padds was in extracting true positives, a large number of non-observed ppis resulted from these ddi selections.

CONCLUSIONS
proteins consist of one or more domains, and physical interactions between proteins arise from interactions between their specific domains. given that there is more consistency in ddis detected from different experiments than in the corresponding ppis, the hope is that an in-depth analysis of ddis would improve our understanding of ppis and give us better insights into cellular function, disease, and evolution. however, determining which particular ddi mediates any given ppi is challenging, because currently available experimental ddi data accounts for only a small fraction of all existing ppis. in this paper, we present two contributions to the field of domain interaction analysis.

first, we introduced a novel computational strategy that systematically merged domain annotation data from multiple databases; a needed capability that is not currently available elsewhere. by combining sequence locations with domain name and labeling information, our merging strategy was less likely to grossly overestimate or underestimate the number of domains per protein. we showed that merging domain annotations from six different databases increased the average number of domains per proteins, bringing it closer to the estimated true value. we believe that our merging strategy can ensure a large and consistent domain annotation set for any given organism.

the second contribution detailed here is the development of padds, a novel computational method that, given a set of ppis, can identify a small set of potential ddis that account for the provided set of ppis and is not biased towards ddis with low or high occurrence counts. we showed that padds was more successful in extracting known ddis, i.e., ddis that have been determined experimentally from crystal structures, than the mssc method and the current best reconstitution method, gpe.

it was also noteworthy that the choice of α value influences the number of known ddis retrieved. for the ppi dataset aggregated from multiple organisms from different sources and annotated by pfam only, we retrieved the largest number of known ddis for small α values in the range of  <dig> - <dig> . we interpreted this to indicate that a small tolerance of false positives in the ppi reconstitution procedure relaxed constraints in the ddi selection process sufficiently enough to garner additional known ddis, yet avoiding overwhelming the solution with too many non-observed interactions. this result also hints that the hypothesis that all protein interactions must strictly be composed of pairwise domain interactions could be relaxed. we further found that increased amounts of domain annotation data increased the diversity of ddis that could account for a single ppi. as a result, for the densely annotated high-confidence yeast ppi network, we found that less than 30% of the extracted ddis were present in all extracted sets. this last observation indicates that, once we have a sufficient amount of annotation data, more diverse ddi sets can be used to reconstitute ppi sets equally well. as currently available reconstitution methods identify only a single set of ddis that account for a given set of ppis, a method that is able to identify multiple ddi sets without a priori bias towards ddis with either low or high occurrence counts is a needed capability that is not currently available elsewhere.

