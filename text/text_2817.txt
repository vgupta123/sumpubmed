BACKGROUND
microarray technology allows researchers to monitor transcript levels of thousands of genes in a single experiment  <cit> . typically it confronts the researcher with vast amounts of numerical data as a starting point from which to begin to investigate how molecular mechanisms are involved in a specific biological setting. typically, scientists have to manually query several resources/databases for information. although these can be highly informative individually, the collection of available content would be more useful if provided in an integrated manner. high-throughput, automated annotation summaries can expedite this step and today several resources like source  <cit> , genecards  <cit>  and netaffx  <cit>  already offer this.

in order to understand how cells function within a tissue, e.g. in a given state one can use data-driven methods, such as hierarchical clustering and self-organizing maps  <cit> , which identify groups of genes with similar expression patterns. however, a complementary approach is to view data at the level of biological background knowledge such as a gene's involvement in a biological processes or pathway. the leading controlled vocabulary for such functional information is gene ontology   <cit> . annotation of genes with go terms creates a biological knowledge profile, in three layers dependent on the top-level go branch used .

several tools are suited for analysis of the go hierarchy and for statistical evaluation of go category representations between gene lists  <cit> . comparisons of gene lists are important in order to answer questions such as "are genes involved in process p overrepresented among the total of differentially expressed genes in an experiment" or "does treatment a induce more genes involved in process p than treatment b?".

a potential problem using such tools, is that the existing annotation databases are incomplete and for most organisms only a subset of the known genes are functionally annotated  <cit> . moreover, a major part of the available annotations e.g. those inferred from electronic annotations may be imprecise or incorrect.

the present paper describes genetools, a package of web-based tools for gene annotation. genetools is built on top of an underlying database that is updated on a weekly basis to provide information as recent as possible. the annotation data is accessible through two user interfaces, the nmc annotation tool which offers general functional annotation information in both single- and batch search mode, and the egon tool which can annotate, display and perform statistical hypothesis testing to assess the degree of similarity of go category representation between different gene lists. an important function in egon is the possibility to filter on evidence codes. also, additional user defined go annotations can be added to the database through the go annotator tool for use in further analysis. another unique feature in genetools is that user submitted data is stored in the database and can be shared with other users.

finally, a significant part of this paper deals with how the hypothesis testing for go category representations is performed, which we think has been inadequately described for many other resources.

implementation
genetools is a web service. it runs on most web browsers, including ie  <dig>  or higher, netscape  <dig> or higher and mozilla firefox  <dig>  or higher, and is platform-independent. genetools is implemented in the php programming language. we have chosen to implement this tool as a web service to make it as user-friendly as possible, as most of the users are not bioinformaticians able to perform programming. however, more advanced use of the service is possible as described later in this chapter.

genetools is the front-end of a mysql database containing annotation data from the following publicly available resources: unigene  <cit> , entrezgene  <cit>  , gene ontology  <cit> , swissprot  <cit> , and homologene  <cit> . information from  <dig> organisms available through unigene is included, but the most comprehensive information is available for human, rat and mouse genes. all these databases are stored as local copies, enabling quick access to the data in response to the user query. since many of the resources on which genetools draws continuously change their information content, the genetools database is updated on a weekly basis to ensure that it contains the most up-to-date information, continuously updating the stored gene reporter lists. an automated process checks for updates of the outside databases, downloads these files, and populates database tables accordingly. this ensures that the connections between external databases made within genetools are as accurate as possible. thus, both the mapping of clones to genes and the functional attributes associated with those genes are dynamic and current. all data and graphics from searches and analysis can be exported in various formats .

due to the heterogeneous nature of annotation information, bioinformaticians and systems biology researchers may want to perform more high-level analysis than offered through our web service. we therefore offer an api solution, based on web services description language , for external resources wishing to use data from our database. typically new and important tools like taverna  <cit>  can easily utilize this system using sope/rpc. currently our api solution is utilized by the norwegian microarray consortium  which updates their local base   <cit>  servers with information from this database. moreover, scicraft  <cit> , a general data analysis tool, uses data from the genetools database in its microarray data analysis tool box. we will also offer r code for the statistical testing in egon upon request. the structure of our genetools database is built so that it can be used in the future as part of local or external data warehouses.

RESULTS
inputs
single search
the database enables searching by gene symbols/names, genbank accession numbers, unigene cluster ids, swissprot entry names and several unique clone ids .

the names and symbols of genes/proteins may be highly ambiguous  <cit> . we therefore recommend using primary gene ids, like genebank accession numbers or specific probe ids when querying the database. however, if gene names or symbols are used, caution is advised because only official names/symbols associated with uniprot knowledgebase will be recognized.

batch search
input of gene reporter lists for batch search is done by uploading tab-delimited text files to the server. after submission, the gene reporters are automatically mapped to a unigene cluster, and functional annotations/attributes  are associated with the specific gene/protein . uploaded gene reporter lists are stored and can easily be managed in folders or shared with other users. if new annotation information becomes available for any of the stored gene reporter lists, the user will be notified.

updates
the user may at any time choose to update a stored gene reporter list, thus incorporating the most recent annotation information from the weekly update of the genetools database in the analysis. the updating process is fast even for lists of thousands of gene reporters. the user receives a specified report detailing which gene reporters are associated with new annotation information and the changes made.

tools, analyses and outputs
nmc annotation tool
a major challenge when using genomic scale methods like microarrays, is to handle annotation information from the resulting comprehensive gene reporter lists. thus, one of the most important features of genetools is the ability to simultaneously extract pre-existing annotation data from a wide variety of database resources for thousands of genes in a batch. since the genetools database is weekly updated and the nmc annotation tool provides user friendly functionalities for associating new annotation information with the reporters in uploaded gene lists, the nmc annotation tool is particularly useful when it is important to always have access to the most recent information on the genes and clones being examined. the nmc annotation tool enables the user to query the genetools database by singe gene search or by batch search after submission of a gene reporter list for a microarray experiments. given the massive amount of data available through genetools , information overload can be a potential problem. therefore, we have provided the user with the option to select  the information to be shown on the screen for single search and batch view and to select which information to export. however, we will stress that this option should be used cautiously, because it may introduce selection bias and important information may be lost.

single search outputs
the single search function captures the collection of features attributable to the given gene and its products, when a gene is defined by a unique unigene cluster. whenever available, each single search result view will contain all or a subset of the following categories of data:

i. data from unigene, including e.g. a. gene cluster, name and symbol. b. protein similarities with selected organisms . c. chromosome localization information. d. unigene associated sequences with cluster.

ii. data from homologene: shows homologous genes for human, rat and mouse.

iii. data from entrez gene: a. gene name, symbol and aliases. b. biological roles and summary of functions curated by entrez . c. gene ontology  annotations with direct link to references and links to alternative ontologies like kegg. d. direct link to curated pubmed gene rifs .

iv. data from swiss prot: a. protein names and aliases. b. biological role and function information curated by swiss prot. c. protein sequence information. d. direct links to various external sources associated with current protein are offered for each gene reporter.

batch search outputs
one of the most important and unique features of the nmc annotation tool is the batch search mode which utilizes all of our database sources for gene reporter lists from microarray experiments. for instance, the users can easily extract biological function, chromosomal localization, and get access to publications  that describe gene functions. the results for reporter gene list from a batch search can be viewed in a user-friendly tabular form . moreover, the annotation data displayed on the screen are associated with hyperlinks to the underlying database or to the single search view. the annotation data can be exported in several formats for printing or storage .

nmc annotation tool provides several features not available in other gene annotation tools. to our knowledge, few other application stores users' gene reporter lists allowing update of the reporter lists at any time with the most recent unigene, entrez gene and go information. this is important since the clusters in unigene change rapidly and new go annotations are being added continuously. to achieve this, the submitted gene reporter lists can easily be updated with all new information. information about the external databases included in genetools and their last updates can be found from a link named "database status" in the menu, and provides useful documentation for publishing purposes. information about commercial arrays supported by genetools  is also given. to our knowledge, a similar variety of important features is not available in gene annotation tools like source  <cit> , genecards  <cit> , netaffx  <cit> , genecruiser  <cit> , onto-tools  <cit> , garban  <cit>  and genelynx  <cit> .

go annotator tool 
the introduction of gene ontology   <cit>  as a standardised vocabulary for describing genes, gene products and their biological functions represents an important milestone in the possibilities to handle and include biological background information in functional genomics analyses. many databases today provide go annotations for a variety of organisms including humans and other species. however, go is still incomplete and significant extensions to its structure are needed before all available biological knowledge can be represented as go annotations in public databases. also, besides the human research filed other organisms e.g. common model organisms like rat and mouse are still lagging behind when it comes to raising the quality of curation of go annotations. thus, a high proportion of go annotations offered in the rat genome database   <cit>  and the mouse genome database   <cit>  are associated with the iea  evidence code, which implies a lower degree of certainty than some users may require.

to overcome at least some of these problems, genetools allows a user to define their own go annotations to genes of interest. the go annotation tool  enables the addition of new, user defined go annotations as well as the curation of go annotations e.g. annotations with evidence code iea. go annotation tool is supported by a go term search system, simplifying the browsing for go terms. evidence codes and references  according to go standards and free text can be added . new annotations are stored in the database and can be included in further analysis . we are in the process of making an export function, where these user defined go annotations can be exported to the goa database  <cit>  by an email service. goa will curate these annotations and make them available for others through the go annotation database  <cit> .

explore gene ontology 
controlled vocabularies facilitate query and retrieval of knowledge from many different sources using a common query structure. three separate important activities are needed to enable this: the production and maintenance of the ontologies themselves; the creation of associations  between the go terms and gene products, and the development of tools that facilitate the creation, maintenance and use of the ontologies.

egon visualizes gene annotations in the go hierarchy and offers a collection of statistical tests that translate the go annotation information associated with the reporters in gene lists from functional genomics experiments to provide insight into the biological mechanisms involved.

a wide range of resources are available for go analysis  <cit> . in a recent review, khatri et al.  <cit>  question how such resources are built and used. khatri et al. point out that existing annotation databases are incomplete, that a proportion of the annotations may be imprecise or incorrect, that name space mapping  is a problem, and that available statistical tests are not always validated. we think that the tool egon of the genetools suite meets many of these challenges since it enables filtering of annotations by evidence code, it allows the entry of new annotations and curation via the go annotator tool and it provides a series of robust statistical tests that are thoroughly validated and documented.

for go annotations, genetools uses entrez gene which offers curated data from the go database that includes all registered go annotations  <cit> . some annotations available in the go database will not be included using the entrez curated go annotations but the quality of annotation is most likely better. egon offers the possibility to filter the go annotations from a gene reporter list by evidence codes. a substantial proportion of go annotations are inferred by electronic methods , potentially being imprecise and possibly biasing further analysis. thus, in a given analysis, it may be beneficial to exclude iea annotations and only use more robust annotations, like e.g. annotations derived from "traceable author statement" , "inferred from direct assay"  or "inferred by curator" . in other situations it may be desirable to include electronic annotations in order to obtain a sufficient amount of data to do a valid analysis, e.g. for rat and mouse genes where most of the annotations up to now are iea. another possibility which to our knowledge is not in use by any go analysis tool today, might be to perform some kind of weighting by the type of evidence code for the statistical calculations.

an essential feature of egon is the possibility to compare and analyze annotated genes from two or more gene reporter lists in the go-tree. egon both visualizes these comparisons within the go-tree and formally calculates the degree of go category representation similarity between the gene lists using statistical tests .

testing statistical hypotheses of association between gene reporter lists
to investigate and better interpret the relevance of biological annotations of lists of gene reporters, statistical hypothesis testing can be a valuable tool. let us for example consider a microarray experiment where the objective of the study is to compare the differentially expressed genes from heart failure tissue between cases and controls where the cases are patients with coronary artery disease  or dilated cardiomyopathy  and the controls are tissue from non-failing hearts  <cit> .

to formally state the statistical hypothesis, consider a randomly chosen gene and a given go category denoted g. define the following three events:

• a = the gene is in gene reporter list a

• b = the gene is in gene reporter list b

• g = the gene is a member of go category g.

in this example the list a would be the list of differentially expressed genes between cad and controls while list b would be the differentially expressed genes between dcm and controls. at the given go category g , we are interested in investigating whether the probability of belonging to go category g is different for genes on gene list a and genes on gene list b. for each gene on list a, there is a conditional probability p of belonging to go category g, and for each gene on list b, there is a conditional probability p of belonging to go category g. under the null hypothesis these two probabilities are equal. from this the following null hypothesis and alternative hypothesis can be formulated.

h0: p = p vs. h1: p ≠ p

by using the laws of conditional probability, we have the following additional interpretation. for a chosen go category g, the ratio between the probability of membership of gene reporter list a and membership of gene reporter list b, is the same as the ratio between the probability of being a member of gene reporter list a to the probability of being a member of gene reporter list b in the whole go-tree. statistically we need to distinguish between three situations, to correctly handle the possible dependencies between gene reporter lists a and b. an illustration of these situations is given in figure  <dig>  different statistical hypothesis tests are suitable for the three situations. in egon we have implemented three tests for these situations: the master-target test, the mutually exclusive target-target test and the intersecting target-target test. in brief, all three tests are parametric and the tests for the master-target situation and the mutually exclusive target-target situation are based on the same implementation of fisher's exact test, but with different inputs. the intersecting target-target test is based on a test statistic by leisenring et al.  <cit> . the test of leisenring is designed to test if the positive predictive value  of two medical diagnostic tests is equal. a further description of the different situations and the corresponding tests can be found in the next chapters. moreover, a detailed description of the statistical tests is offered in the supplementary material .

master-target situation
in the master-target situation the go categories  of the genes of interest  from a given experiment  are compared with the distribution of go categories for all gene reporters represented as physical probes on the microarray  used in the experiment. the purpose is to find whether, in any of the go categories, the genes of interest are over- or underrepresented compared to the genes represented on the microarray. for our heart failure example, list m would be a list of all the genes investigated on the microarray and list b would be the genes that are found to be differentially expressed between the dcm hearts and the controls .

this type of comparison between two gene reporter lists is useful and most go tools offer tests for this. statistically this situation can be transformed into a problem where we for each go category under consideration want to test if two independent binomial proportions are equal . several statistical approaches can be used, e.g. fisher's exact test, pearson's asymptotic chi-square-test, a conditional mid-p test, or an unconditional test. we refer to agresti  <cit>  for a presentation of these tests, and to khatri and dragici  <cit>  for an overview of different statistical tests implemented in the various go-tools available in the master-target situation. in egon we have chosen the fisher's exact test for the master-target situation and we call this the master-target test. the implementation is based on a translation to php of a java-script by langsrud  <cit> . the use of this two sided test is further explained by zeeberg et al.  <cit> .

mutually exclusive target-target situation
in the mutually exclusive target-target situation there are no common genes in the two lists compared, in the heart failure example list a <dig> could be the list of differentially expressed genes that are up-regulated for the cad hearts compared to the controls, while list a <dig> contains the genes that are down-regulated for the cad hearts compared to the controls. the purpose with this type of comparison is to find which e.g. biological processes as defined by go categories are differentially represented in the up- and down-regulated genes in the same experiment .

statistically this situation is very similar to the master-target situation and can be transformed into a problem where we for each go category under consideration want to test if two independent binomial proportions are equal. the same statistical tests as listed for the master-target test can be used. in egon we have chosen to implement the fisher's exact test for the mutually exclusive target-target situation, called the mutually exclusive target-target test, using the same implementation, but with different inputs, as for the master-target test.

intersecting target-target situation
when two gene reporter lists are compared and a number of gene reporters are represented on both lists, the intersecting target-target test is used to investigate whether the go categories represented by these genes are over- or under represented in the experiments behind the two lists. in our heart failure example, list a could be the differentially expressed genes between cad hearts and controls while list b would be the differentially expressed genes between dcm hearts and controls .

in günther et al.  <cit> , three different statistical tests are presented in the situation where the two gene lists are intersecting. all three tests are constructed for use with large samples, and are based on an asymptotic relation to the chi-square distribution. in egon we have chosen to implement the test based on leisenring et al.  <cit> , originally constructed for comparing positive predictive values of two diagnostic tests, tests a and b, with respect to a disease g. this test uses a score statistic based on generalized estimating equations to fit a generalized linear model. we have translated this test into the setting of comparing two gene lists at a given go category. further details can be found in günther et al.  <cit>  or in the supplementary material .

methodical considerations
the statistical tests for association between two gene reporter lists under consideration are based only on the gene lists submitted to egon, and the raw data underlying the statistical analyses producing the gene reporter lists are not submitted to egon. this means that egon does not offer permutation based methods for addressing the dependence structure between the genes. the statistical tests in egon are thus based on the assumption that under the null hypothesis the genes on the lists  act independently, as is also commonly assumed in other go-tools. this should be taken into consideration when analysis is performed, and duplicate genes/reporters, close family members or pathways partners may be removed. this can easily be done by the filtering tool in genetools.

the p-values produced by the statistical test can be displayed for all go categories or only those satisfying a certain p-value cut-off. adjusted p-values can be calculated for a selected set of go categories and is dependent on how the go hierarchy is collapsed/expanded, using the step-up procedure of benjamini and hochberg  <cit>  for controlling the false discovery rate . setting a cut-off at  <dig>  for the adjusted p-value will control the  at level  <dig> . the benjamini-hochberg step-up procedure controls the fdr under certain dependence structures . however, the dependency structure among the selected go-categories in the go-tree is not known, and questions remain about controlling the fdr in hierarchical structures.

one important "consensus point" within statistical inference discussed by allison et al.  <cit>  is that gene set testing is desirable, and has become a popular and widely accepted analytical tool. however, one problem with gene class testing, according to allison et al.  <cit> , is that the null hypotheses of these tests are not, or poorly defined. by formally stating the null and alternative hypotheses, we think our paper has addressed these concerns in a thorough manner. an important consideration when searching for statistically significant go categories within a gene reporter list  is the choice of the reference  list of gene reporters from which the p-values for each go category in the results are calculated. some tools use the total set of genes in a genome as a reference . we do not think this is the best solution since the observed number of gene reporters for a specific go category should be compared with the number of gene reporters that could appear if a random selection was taken from the list of all genes that was under study in the experiment.

in egon p-values can be shown for the whole go tree and unlike most other tools several preset levels can be chosen and users can modify the tree as they like. in addition a result report view is accessible, showing only the go nodes which satisfy a specific pre set p-value cutoff. unique in the egon tool, we offer statistical tests for comparisons between gene reporter lists. the master-target test and mutually exclusive target-target test are both used in different variations in several programs today, but no other go-tool, to our knowledge, offers tests for the intersecting target-target situation. however, the statistical test of fatigo  <cit>  is valid for the mutually exclusive target-target situation, and was in a simulation study found to preserve the test size when the gene reporter lists are of equal length  <cit> . our intersecting target-target test is valid when the two gene reporter lists are intersecting, potentially constituting a useful test, since it offers the opportunity to compare gene reporter list for different experiments . in this way both our target-target tests may answer questions not necessary answered by the standard master-target tests applied to most tools.

future plans
genetools was released in september  <dig> and has steadily gained popularity since then. in october  <dig> over  <dig>  <dig> users from  <dig> countries were registered and over  <dig>  <dig> gene reporter lists were submitted to the database. we plan to continue adding new features to genetools, including more information from external databases like e.g. ensembl and omim. furthermore, we hope to provide developers of other tools an extended version of our api and extend the export function to support sbml   <cit>  which will make more high-level analysis possible. we think the need for central and publicly available resources which curate biological data will only continue to grow and that genetools and similar tools will be essential for biologists and bioinformaticians to efficiently analyze genome-scale datasets. today their main utility is for gene expression analysis, but in the future proteomic and snp data need to be analyzed by similar tools. in addition, an important future use of annotation tools will be in systems biology approaches that are now evolving rapidly.

CONCLUSIONS
genetools is a flexible and user friendly "all in one" annotation tool, where the users can rapidly extract gene annotation data for e.g. thousands of genes or clones at once. the user can add "user defined" go annotation to gene products and all annotation information is stored in a database which can easily be shared with other users and exported in different formats. egon is the first tool that can perform hypothesis testing for three different situations, looking for over- or under-representation of go categories between gene reporter lists.

availability and requirements
project name: genetools

project homepage: 

operating system: platform independent

programming language: php

underlying database: mysql

authors' contributions
vb initiated and coordinated the project and wrote the manuscript. al co-initiated the project and together with aks they supervised the project and were involved in drafting and reviewing the manuscript. ml, ccg and sl devised the statistical algorithms. fkj, hb and hr designed and built the underlying database. lj, hb and fkj contributed equally in writing the program code and maintain the underlying database. fkj, hb, and vb designed the genetools web interface. all authors read and contributed to revising the manuscript for intellectual content and approved the final manuscript.

supplementary material
additional file 1
egonv2_statistics.pdf. as supplementary materials a detailed description of the background for the statistical tests in egon is offered.

click here for file

 acknowledgements
we wish to thank martin kuiper for reviewing the manuscript and øyvind møll for his great help with debugging and implementing the final features of the software. in addition, we wish to thank vladimir yankovski and jan komorowski for their contributions to early stages of genetools.

vb is the recipient of a research fellowship from the national council on cardiovascular diseases. ccg is funded by a ntnu grant.

genetools was developed with support from the national microarray technology platform , which is supported by the functional genomics program  of the norwegian research council.
