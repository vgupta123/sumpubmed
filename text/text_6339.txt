BACKGROUND
genomic and other high dimensional data analyses often face the challenge to collapse multiple variables. such collapsing of data can be advantageous for several reasons: 1) to allow direct comparison of similar data from unique sources, 2) to amplify the signal by removing noisy information, or 3) to reduce the computational burden. as a first example, consider the task of combining or contrasting gene expression data measured on different microarray platforms. most array platforms measure multiple probes per gene, and different platforms typically include different probes for the same gene. to compare such expression data sets at the level of a gene identifier  requires that the multiple probe measurements of a given gene be collapsed into a single gene measurement. an important, yet relatively unexplored, empirical question is how to choose the best representative probe. as a second example, consider the task of representing co-expression modules  by a single value . several approaches for finding a module centroid have been proposed in the literature , but it is unclear in which situation each method should be used. as a third example, consider the task of estimating cell type abundances based on data for lineage and cell-specific markers such as selectively expressed genes or proteins. often, microarray analyses are performed using heterogeneous tissue ; thus, gene expression changes occurring between two groups of samples could either be due to changes in transcriptional levels in one or more cell types, or they could be due to changes in cell type proportion variation. by accurately estimating cell type abundances including data from independent measurements using complementary technologies , more accurate measures of transcriptional changes could be established.

statistically speaking, all of these tasks involve summarizing several closely related variables into one collapsed variable. collapsing approaches fall into one of two categories: 1) composite values, which involve forming an average  of multiple variables in a group; and 2) representatives, where a single variable is chosen from those in the group. two examples of composite values include the mean and the first principal component . the first pc explains the maximum amount of variation underlying the variables. for example, when summarizing the gene expression profiles of a co-expression module, the first pc is known as the module eigengene . several strategies can be used for choosing a representative; for example, one could choose the variable with the least number of missing data or the maximum mean expression value or the maximum variance. apart from these statistical approaches, network methods are increasingly used to collapse data. for example, one can first construct a network between the variables and then choose the one that has the highest connectivity . toward this end, signed correlation networks are particularly relevant since often one wants to keep track of the direction of the relationship between variables. for example, in the case of transcriptional networks, genes showing positive correlation are more likely than uncorrelated or negatively correlated genes to have known protein-protein interactions  <cit> .

in the present work, we have created an r function, collapserows, that implements a host of widely used collapsing methods. we will describe this function in more detail and present several motivating examples involving gene expression data . we explore this function in the context of the several distinct gene expression-related situations presented above, describing situations when certain collapsing methods are advantageous. for example, we find that in most microarray experiments performed on brain tissue it is best to choose the probe with the maximum mean expression per gene, whereas when choosing a single gene to represent a co-expression module, the optimal collapsing method depends on the goal of the analysis. for predicting the true proportion of cell types within a tissue homogenate, on the other hand, network-based collapsing approaches perform best. finally, we provide r code for both the collapserows function as well as for performing all of the analyses discussed in the text. overall, we find that the collapserows function is useful in many situations in which data aggregation is required.

RESULTS
robust methods for summarizing large quantities of genomics data can be critical to advancing biological understanding. to address this issue we created collapserows, which takes a numeric matrix of data as input, in which rows correspond to the variables, as well as a grouping variable that assigns each row to a group. this function implements standard collapsing methods , as well as alternative network based methods  as possible strategies for data aggregation, then outputs one representative or composite value per group of rows. thus, the resulting matrix has the same number of columns as the input matrix but typically has far fewer rows, potentially alleviating computational bottlenecks and often increasing between-study comparability. for example, in figure  <dig> we present a hypothetical pipeline for using microarrays from multiple data sets to predict clinical outcome, in which collapserows is used twice: first to collapse probes to genes, and then to collapse genes to modules.

in the following, we describe the r implementation of collapserows and present examples from several empirical studies of high dimensional genomics data. in particular, for each of our examples, we run a subset of the following six collapsing strategies: maximum mean , maximum variance , maximum mean + maximum connectivity , maximum variance + maximum connectivity , module eigengene , and the average . table  <dig> provides an overview of our empirical studies and the types of employed collapsing strategies.

"#" - the  <dig> human brain data sets were the following gse numbers:  <dig>   <dig>   <dig>  2164b, 3526a, 3526b, 3790a, 3790b, 3790c,  <dig>   <dig>  5281a, 5281b, 5388a, 5388b,  <dig>   <dig>  and  <dig>  "%" - the  <dig> mouse brain data sets were the following gse numbers:  <dig>  1782a, 1782b,  <dig>   <dig>  3327a, 3327b, 3594c, 3963a, 3963b,  <dig>   <dig>   <dig>   <dig>  6514a, 6514b, 9444a, 9444b, 9444c,  <dig>  for "#" and "&," underlined data sets were used in figure  <dig> as well as figure  <dig>  see miller et al  <dig> for more details on these data sets. "$" - the  <dig> human blood data sets were from dumeaux et al  <dig>  goring et al  <dig>  pankla et al  <dig>  and saris et al  <dig> 

r implementation of the function collapserows
this collapserows function implements several network-based and biostatistical methods for finding a single value to represent each group specified in the function call. collapserows is available in the wgcna package for r  <cit> , and is presented as additional file 1: the collapserows function, while code for performing all of the above analyses is presented in additional file 2: r code to perform analysis. accompanying data files can be downloaded from the collapserows website  <cit> . our code was run using version  <dig> . <dig> of r, although any recent version should work. a few steps of the analysis  require a computer with a large amount of ram ; however, most analysis steps can be performed on laptops , and the entire analysis can be reproduced in a few hours. the r function is called as follows:

collapserows

in this call, datet represents a matrix or data frame containing numeric values where rows correspond to variables  and columns correspond to observations . each row must have a unique row identifier . the group label of each row is encoded in the vector rowgroup . the argument method is a character string for determining which method is used to collapse rows into groups. the implemented options, described in more detail in the methods, are "maxmean," "minmean," "maxrowvariance," "absmaxmean," "absminmean," "me", "average," and "function." if method = "function", the method used is set by the argument methodfunction, which must be a function that takes a matrix of numbers as input and produces a vector the length of the number of columns as output . the logical argument connectivitybasedcollapsing controls whether groups with  <dig> or more corresponding rows should be collapsed by choosing the row with the highest connectivity according to a signed weighted correlation network adjacency matrix , where the power is determined by the argument connectivitypower. all collapsing strategies presented in the empirical studies were formed by setting a combination of the method and connectivitybasedcollapsing parameters. finally, the logical argument selectfewestmissing , controls whether datet should be trimmed such that only the rows with the fewest number of missing values per group are retained. detailed information regarding the function is available within r using the help command.

example 1: collapsing microarray probes to genes
gene expression microarrays often have several probes  per gene. collapsing methods can be used to arrive at a single measurement per gene, which facilitates merging of data across different platforms. for example, in a previous study of mouse and human brain, a preliminary version of collapserows was used to convert gene expression matrices from  <dig> human and  <dig> mouse data sets run on five separate microarray platforms into matrices that could be compared  <cit>  . here we re-analyze these same data sets, along with several additional data sets from studies of human blood  <cit> .

we evaluate the performance of the collapsing methods in multiple ways. to begin with, we determine how reproducible the result of the collapserows function is across different data sets. for example, assume two different gene expression data sets in brain are available. after collapsing the probes by gene one can calculate the mean expression value of each gene in the two data sets. next one can correlate the mean expression levels of the first data set with those of the second data set. a high correlation indicates that the output of the collapsing method allows one to robustly define the mean expression level of a gene. since we are mainly interested in ranked expression levels, we determine the correlation of ranked mean expressions . apart from studying the reproducibility of the mean expressions, we also study the reproducibility of the network connectivity since this informs co-expression network applications. the connectivity  is the most widely used network statistic for describing the topological properties of a network node   <cit> . it is of great practical interest to determine to which extent the connectivity  is preserved between  <dig> data sets. for example, it has often been used to compare networks from different species  <cit> . in this case, we define a signed weighted correlation network  after collapsing the probes into genes. next we calculate the whole network connectivity measure ki, which measures how correlated the i-th gene is with other genes in the network . a significant positive correlation of ranked connectivity suggests that a co-expression network between the genes  is robustly defined.

to empirically assess the reliability of different strategies of probe selection, we ran the collapserows function on the brain and blood data sets described above, using  <dig> max,  <dig> var,  <dig> kmax, and  <dig> kvar. for each pair of gene expression matrices, we took the subset of genes in common and correlated the ranked mean expression and the ranked connectivity between data sets for each of the four collapsing strategies . we then determined the average correlation of these two measures across data set pairs in human brain , mouse brain , and human blood  and assessed how frequently and to what degree these measures were highest for each collapsing strategy. overall, we found that  <dig> max was the most robust method, particularly with regards to the expression correlation; in other words, choosing the probe with the highest mean expression nearly always lead to the most comparable results between these data sets. we should point out that numerous alternative approaches for collapsing probes per gene are possible. some of them are discussed below.

example 2: choosing one centroid per gene expression module
the collapserows function allows one to aggregate the genes that make up a co-expression module. a co-expression module is sometimes defined via a clustering method, but any module assignment can be specified with the row-grouping variable of the collapserows function . we assessed the reliability of the following three different strategies for collapsing module genes into a single representative per module:  <dig> max, which chooses the module gene with highest mean expression;  <dig> kmax, which chooses the most highly connected intramodular hub gene; and  <dig> me, which defines the first principal component of the module genes, resulting in the module eigengene. we focused only on these three collapsing methods since they are often used in network based data reduction methods  <cit> .

to perform this analysis, we started with expression data from a single data set in each group  and defined co-expression modules using wgcna, since it is a widely used method for defining co-expression modules  <cit> . modules were defined as branches of a hierarchical clustering tree. to increase the robustness of our results, different choices of branch cutting parameters implemented in the dynamictreecut r library  <cit>  were chosen to define  <dig> different module assignments. for each choice of module assignments , we then ran collapserows on the subset of seven human and eight mouse brain data sets run on the hg-u133a and mg-u430a affymetrix platforms, respectively, and on all five human blood data sets from example  <dig>  finally, we calculated the resulting ranked mean expression and ranked connectivity correlations between the different data sets as described above . if rows represent genes in a module, the connectivity of the collapsed variables measures how closely related the module is to other modules. several studies have found that these correlations between modules may reveal higher order relationships between them  <cit> .

for human brain , mouse brain , and human blood  the ranked mean correlation measure suggests that  <dig> max is the best collapsing strategy, whereas the ranked connectivity measure suggests that  <dig> kmax is a better collapsing strategy. furthermore, in the case of mouse brain,  <dig> kmax actually leads to higher ranked connectivity correlations than the standard method of calculating the module eigengene . together, these results suggest that different parameter options should be chosen depending on the goal of the analysis and the specific input data being used. for example, if the goal of the analysis were to determine correlation patterns between modules then  <dig> kmax would be a more appropriate collapsing strategy than  <dig> max.

example 3: predicting cell type abundances in mixtures of pure cell lines
most microarrays measure tissue rna from tissue homogenate rather than from a pure cell type. it has been recognized that markers for pure cells can sometimes be used to estimate the proportion of pure cells that make up the tissue homogenate. for example, standard expression deconvolution  can be used to simultaneously estimate the abundance of multiple cell types  <cit> . while using a multivariate linear model may afford greater efficiency in estimating cell type abundances, it may perform poorly if it is incorrectly specified, for example due to omission of an unknown cell type. our collapserows based approach to expression deconvolution addresses a more limited, but related question: how well can expression levels of a set of marker genes for a single cell type  be used to estimate the relative abundance of that cell type between samples? thus, the rows of the input matrix correspond to marker genes and the grouping variable assigns markers to their respective cell types. the collapsed variable per group is used as an abundance measure for the pure cell line.

to evaluate the performance of expression deconvolution methods, abbas and colleagues  <cit>  created a data set that involved mixing four distinct "pure" cell lines--raji and im- <dig> , jurkat , and thp- <dig> --using pre-specified proportions. these known proportions could be used as gold standard measurement for judging the performance of methods that aim to estimate cell type abundances. included in the expression data are microarrays run on each pure cell line, as well as microarrays run on four mixtures of these cell lines in known proportions, each in triplicate  <cit> .

we applied the collapserows function to the microarray data from the cell mixture study described above. we first chose the top  <dig> marker genes for each of the four cell lines by finding the genes with the highest fold change enrichment in a given cell line compared with the other three. we then ran the collapserows function on the four mixtures of cell lines, using these  <dig> marker genes as rows and the four cell lines as groups, and using several collapsing methods. finally, we scaled these collapsed expression matrices to obtain the predicted proportions of each cell type across samples. we should emphasize that a limitation of our deconvolution approach is that it can only estimate the proportion of cells up to a constant. while our prediction is expected to be correlated with the true proportion across samples, it cannot be used to estimate the true proportion. the situation is similar to predicting degrees fahrenheit based on another temperature scale:  <dig> degrees fahrenheit does not correspond to  <dig> degrees celsius, but a linear transformation can relate fahrenheit to celsius. it is often sufficient to use such an approach in the context of measuring cell type abundance, e.g. when correlating cell type abundances to a clinical outcome, because the correlation measure is scale invariant.

to assess the performance of different marker gene collapsing methods, we correlated the predicted abundances  of pure cell types with the true proportion determined by the mixture proportions . we find that all four tested methods of collapsing genes-- <dig> max,  <dig> kmax,  <dig> me, and  <dig> avg--produced significant correlations , but that collapsing based on maximum connectivity  led to by far the most accurate predictor . in this application, collapsing rows by choosing the module eigengene  leads to the least accurate predictions.

example 4: predicting cell type abundances in peripheral human blood
finally, to assess whether these methods can accurately predict cell type abundances in a more realistic model, we obtained microarray data from a deconvolution study of peripheral blood both pre- and post-kidney transplant  <cit> . similar to the previous data set, these data include microarrays run on pure cell populations  as well as on whole blood; however, these arrays were run using actual human blood and the constituent blood cell populations were purified using magnetic beads from the same samples used for whole blood assays. to assess the performance of different marker gene collapsing methods, we correlated the predicted abundances  of pure cell types with the true proportion determined by flow cytometry data . again, we find high correlation between true and predicted cell proportions for these cell types , although unsurprisingly, these real cell subset predictions for whole blood are not as accurate as the highly contrived strategy of using fixed combinations of transformed cell lines by abbas and colleagues  <cit> . we also varied the number of marker genes per cell type used to form predictor. collapsing on connectivity , me , and average  all lead to comparably good predictors. furthermore, choosing n~ <dig> marker genes produces the best results, although these three predictors are all fairly robust to the number of marker genes chosen. choosing the gene with the maximum mean expression , however, is a much less robust method, and should not be used in this situation.

data aggregation using collapserows leads to increased reproducibility
despite advantages, data aggregation or collapsing will inevitably lead to a loss of information. therefore, it is important to assess whether the loss of information has an impact on analysis results and if so what the impact looks like. most of our empirical analyses use reproducibility  as a measure of how much usable information remains in the data after aggregation. we now extend these analyses to assess how selective removal of information using collapserows affects reproducibility, using the subset of  <dig> human brain samples run on the hg-u133a array and the subset of  <dig> samples run on the mg-u430a array. we measured the correlation of ranked mean expression and connectivity for comparisons on the probe level, and compared those with our best result using collapserows . in human we find average expression correlations of r =  <dig>  and  <dig> , and connectivity correlations of r =  <dig>  and  <dig>  for the probe-level and gene-level comparisons, respectively. in mouse the comparable correlations are r =  <dig>  and  <dig> , and r =  <dig>  and  <dig>  for probe-level and gene-level comparisons. together, these results suggest that, while present, the loss of information using collapserows actually leads to increased reproducibility, at least as measured by correlation of ranked connectivity.

the function userlistenrichment facilitates biological interpretation of gene lists
after collapsing gene lists into groups, either for the purpose of finding co-expression modules or for determining marker genes, it is often useful to relate the collapsed data to cell type markers. for example, when using collapserows to predict cell type abundances in a data set that does not contain control samples from pure cell lines, it would be useful to be able to compare each gene group against lists of known marker genes for the expected cell type before using these groups for deconvolution. such a biological indicator is particularly useful when studying brain, where it is almost never possible to precisely separate cell types as an experimental control. to address this issue, we have created the function userlistenrichment, which is also available in the wgcna library  <cit> . this function measures enrichment of input lists of genes  with respect to pre-defined or user defined collections of brain- and blood-related lists curated from the literature . files containing user-defined lists can also be input as reference lists directly. userlistenrichment measures enrichment using a hypergeometric test, after which significant enrichments are output to a file that can then be used for further biological assessments. while biological assessment of userlistenrichment is beyond the scope of this article, we present a tutorial for how to perform a co-expression analysis using both collapserows and userlistenrichment on our website: http://www.genetics.ucla.edu/labs/horvath/coexpressionnetwork/jmiller/.

discussion
the collapserows function implements widely used collapsing methods and lesser known ones based on correlation network methodology. for example, we describe situations when it can be useful to collapse a group of numeric variables by determining the most highly connected hub variable. the main contributions of this article are: i) to describe important uses of this function, ii) to empirically compare different collapsing methods, and iii) to make recommendations regarding when to use various collapsing methods. overall, our empirical studies show that collapserows is a useful function in many situations when comparing data from separate high-throughput gene expression sources, with a set of default parameters that are often, but not always, the best parameters to use. in the case of collapsing probes to their respective gene symbols, for example, we find that the  <dig> max strategy  produces the most robust results. on the other hand, when using the collapserows function to predict cell type abundances, we find that the  <dig> kmax strategy  leads to the most accurate results. in the more general case of choosing a single value as representative for all genes in a co-expression module, we would suggest trying multiple parameter options to see which work best for that particular set of data. although originally designed and tested for expression data, in principle collapserows could be used in any situation requiring data aggregation . in this case, one should try several collapsing strategies to determine the most robust one for the task at hand.

for the special setting of expression data, alternative methods have been developed to aid in the annotation and comparison of data sets between studies. first, several sequence-based strategies for reannotating microarray probe identifiers based on updated genomic sequences have been proposed  <cit> . the most extensive such endeavour is the array information library universal navigator , which provides an up-to-date mapping between probe identifiers and entrez gene ids for microarray platforms in  <dig> species  <cit> . while very useful, these studies address a slightly different issue than the collapserows function, improving probe annotations rather than combining similarly annotated probes. in fact, we expect that first downloading the appropriate data from ailun and then running collapserows would lead to an improvement in the robustness of one's results. other software packages have sought to combine these steps to some degree. genecruiser, for example, allows users to find gene annotation, as well as display heat maps of data, view the location of probes in the genome using the ucsc genome browser, and perform keyword searches for probes  <cit> , but it only includes affymetrix data sets. integrative array analyzer  allows the user to perform several between- and within-study analyses, including data processing, co-expression analyses, differential expression analyses, and graphical visualization  <cit> , but requires genes from different array platforms to already be linked  by gene name. in short, while all of these studies provide useful resources for gene expression analysis, the collapserows function is involved in an important processing step for between-study analysis that, to the best of our knowledge, has not been systematically addressed elsewhere.

although our study provides a key step in the comparison of multiple numeric matrices, particularly with regards to gene expression analysis, it also has several limitations. first, our empirical studies only involve the use of a weighted correlation networks for finding a representative hub gene, when in fact other association networks  could be used. fortunately, close relationships exist between the seemingly countless statistical and network based approaches for constructing networks. along the same lines, we choose intramodular hub genes using the connectivity , while in principle other centrality measures could be used. third, our strategy  <dig> avg only uses a straight average, whereas an equally valid approach would be to form a weighted average based on other statistical or biological information. fortunately, through the use of the methodfunction parameter, these or any other collapsing functions could be used with collapserows as required. finally, it is important to note that group assignments should be carefully checked  before running collapserows, as this function does not test whether annotations are correct.

CONCLUSIONS
the collapserows functions implements powerful and widely used methods for combining related variables. for example, collapserows can be used to collapse probes to genes, to collapse genes to modules, or both. it can be used to choose an optimal cell marker gene. it can be used to aggregate dependent variables in such a way that computational memory requirements are greatly diminished. our applications illustrate that the proposed collapsing strategies lead to robust, reliable results.

