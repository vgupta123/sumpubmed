BACKGROUND
networks are ubiquitous in biology and inference of network structure from observed data is a common learning task. many important biological networks have specific structural properties affecting this task. gene regulatory networks, for instance, are nearly bipartite graphs with a small set of transcription factors regulating all the other genes. this structure has been successfully incorporated in gene regulatory network inference, often assuming a linear dependence between the regulators and targets, in both static  as well as dynamic  models. these fundamental assumptions form the basis for even very recent successful network inference projects .

the simplest and possibly the most widely used generic approaches for network inference are based on estimating the sparse precision matrix, i.e. the inverse covariance matrix, from data. the motivation for the approach stems from the fact that for a gaussian markov random field model, zeros in the precision matrix translate exactly to absent edges in the corresponding undirected gaussian graphical model, thus being informative about the marginal and conditional independence relationships among the variables.

the full p-dimensional covariance matrix contains p/ <dig> parameters, making its accurate estimation from limited data difficult. additionally, the structure learning requires the inverse of the covariance, and matrix inversion is in general a very fragile operation. to make the problem tractable, some form of regularisation is typically needed. direct optimisation of the sparse structure would easily lead to very difficult combinatorial optimisation problems. to avoid these computational difficulties, several convex ℓ
1-penalty-based approaches have been proposed. popular examples include ℓ
1-penalised maximum likelihood estimation  <cit> , which also forms the basis for the highly popular graphical lasso  algorithm  <cit> . ℓ
 <dig> regularisation has also been used for example in a non-probabilistic alternative with linear-programming-based constrained ℓ
 <dig> minimisation  algorithm  <cit> .

at the heart of the optimisation problems considered by all these methods is a term depending on the ℓ
 <dig> norm of the estimated precision matrix. ℓ
1-penalisation-based approaches such as lasso are popular for sparse regression, but they have a known weakness: in addition to promoting sparsity they also push true non-zero elements toward zero  <cit> . in the context of precision matrix estimation this effect would be expected to be especially strong when some elements of the precision matrix are large, which happens for scaled covariance matrices when the covariance matrix becomes ill-conditioned. this phenomenon occurs frequently under the circumstances where some of the variables are nearly linearly dependent.

in this paper we demonstrate a drastic failure of the ℓ
1-penalised sparse covariance estimation methods for a class of models that have a bipartite structure where some variables depend linearly on others, such as in the commonly used and very successful gene regulatory network models. for such models even in the limit of infinite data, popular ℓ
1-penalised methods cannot yield results that are significantly better than based on random guessing on any setting of the regularisation parameter. yet these models have a very clear sparse structure that becomes obvious from the empirical precision matrix with an increasing n. motivated by our discovery, we also explore the inconsistency of ℓ
1-penalised methods on models derived from real gene expression data and find the methods poorly suited for such applications.

structure learning of gaussian graphical models
we start with a quick recap on the basics of gaussian graphical models in order to formulate the problem of structure learning. for a more comprehensive treatment of the subject, we refer to  <cit> . let x=t denote a random vector following a multivariate normal distribution with zero mean and a covariance matrix Σ,x∼n
p. let g= be an undirected graph, where the v={ <dig> …,p} is the set of nodes and e⊂v×v stands for the set of edges. the nodes in the graph represent the random variables in the vector x and absences of the edges in the graph correspond conditional independence assertions between these variables. more in detail, we have that ∉e and ∉e if and only if x
i is conditionally independent of x
j given the remaining variables in x.

in the multivariate normal setting, there is a one-to-one correspondence between the missing edges in the graph and the off-diagonal zeros of the precision matrix Ω=Σ
− <dig>  that is, ω
ij=0⇔x
i ⊥ ⊥x
j |x∖{x
i,x
j} . given an undirected graph g, a gaussian graphical model is defined as the collection of multivariate normal distributions for x satisfying the conditional independence assertions implied by the graph g.

assume we have a complete  i.i.d. sample x= from the distribution n
p. based on the sample x, our goal in structure learning is to find the graph g, or equivalently, learn the zero-pattern of Ω. the usual assumption is that the underlying graph is sparse. a naive estimate for Ω by inverting the sample covariance matrix is practically never truly sparse for any real data. furthermore, if n<p the sample covariance matrix is rank-deficient and thus not even invertible.

one common approach to overcome these problems is to impose an additional ℓ
1-penalty on the elements of Ω when estimating it. this kind of regularisation effectively forces some of the elements of Ω to zero, thus resulting in sparse solutions. in the context of regression models, this method applied on the regression coefficients goes by the name of lasso  <cit> . there exists a wide variety of methods making use of ℓ
1-regularisation in the setting of gaussian graphical model structure learning .

methods
ℓ1-regularised methods for gaussian graphical model structure learning
in this section we provide a brief review of selected examples of different types of ℓ
1-penalised methods.

glasso
we begin with the widely used graphical lasso-algorithm   <cit> . glasso-method maximises an objective function consisting of the gaussian log-likelihood and an ℓ
 <dig> penalty: 
  <dig> logdet−trace−λ|Ω| <dig>  


where s denotes the sample covariance matrix and λ> <dig> is the regularisation parameter controlling the sparsity of the solution. the ℓ
 <dig> penalty, |Ω|1=∑i,j|ωij|, is applied on all the elements of Ω, but the variant where the diagonal elements are omitted is also common. . the objective function  is maximised over all positive definite matrices Ω and the optimisation is carried out in practice using block-wise coordinate descent.

clime
the clime method   <cit>  approaches the problem of sparse precision matrix estimation from a slightly different perspective. it seeks matrices Ω with a minimal ℓ
 <dig> norm under the constraint 
  <dig> |sΩ−i|∞≤λ, 


where λ is the tuning parameter and |a|∞= maxi,j|a
ij| is the element-wise maximum. the optimisation problem minΩ|Ω| <dig> subject to the constraint  does not explicitly force the solution to be symmetric, which is resolved by picking from estimated values ω
ij and ω
ji the one with a smaller magnitude into the final solution. in practice, the optimisation problem is decomposed over variables into p sub-problems which are then efficiently solved using linear programming.

scio
the recently introduced sparse column-wise inverse operator   <cit>  method decomposes the estimation of Ω into the following smaller problems 
 minβi∈ℝp12βitsβi−eitβi+λ|βi| <dig>   where s and λ are defined as before and e
i is an i:th standard unit vector. the regularisation parameter λ can in general vary with i but this is omitted in our notation. the solutions β^i form the columns for the estimate of Ω. scio does not guarantee the symmetry of the resulting precision matrix, which is resolved as in the case of clime.

alternative methods
the naive approach
in addition to the above-mentioned ℓ
1-penalised methods, we consider two alternative approaches. in a “naive” approach, we simply take the sample covariance matrix, invert it, and then threshold the resulting matrix to obtain a sparse estimate for the precision matrix. the threshold value is chosen using the ground truth graph so that the naive estimator will have as many non-zero entries as there are edges in the true graph. setting the threshold value according to the ground truth is of course unrealistic, however, it is nevertheless interesting to compare the accuracy of this simple procedure to the performance of the more refined ℓ
 <dig> methods, when also their tuning parameters are chosen in a similar fashion.

fmpl
lastly, we consider an approximate bayesian approach which is based on finding a graph with the highest fractional marginal pseudo-likelihood   <cit> . seeking the graph that maximises the marginal likelihood is equivalent with finding the maximum a posteriori graph, assuming a uniform prior over different graphs. however, computing the marginal likelihood is computationally challenging for a general graph, even in the gaussian setting with conjugate priors. the fmpl method aims at circumventing this problem by replacing the true likelihood in the marginal likelihood with pseudo-likelihood. this leads to a convenient factorisation of marginal likelihood over variables and the resulting expression can be evaluated in closed form using previous results regarding objective comparison of gaussian directed acyclic graphs  <cit> . in practice, the factorisation allows the method to identify optimal markov blankets independently for each of the variables using a greedy hill-climbing algorithm. the found markov blankets are then combined into a proper undirected graph using any of the three different schemes commonly employed in graphical model learning: or, and and greedy hill-climbing   <cit> .

model selection consistency
the assumptions required for a consistent model selection with an ℓ
1-penalised gaussian log-likelihood have been studied, for instance, in  <cit> . the authors provide a number of conditions in the multivariate normal model that are sufficient for the recovery of the zero pattern of the true precision matrix Ω
∗ with a high probability when the sample size is large. for our purposes, the most relevant condition is the following:

assumption 1
there exists α∈−1∥∞≤1−α. 


here s⊂v×v is a set defining the support of Ω
∗, that is, the non-zero elements of Ω
∗  and s
c refers to the complement of s in v×v. the Γ term is defined via kronecker product ⊗ as Γ=−1⊗−1∈ℝp2×p <dig> and Γ
ab refers to the specific rows and columns of Γ indexed by a⊂v×v and b⊂v×v, respectively. the norm in the equation is defined as ∥a∥∞=maxj∑i|aij|.

the above result applies to glasso. however, a quite similar result was presented for scio in  <cit> :

assumption 2
there exists α∈, such that 
 max1≤i≤p∥Σsicsi∗Σsisi∗−1∥∞≤1−α. 


here Σ
∗=− <dig> and s
i={j∈{ <dig> …,p} | ij≠0}. assumption  <dig> under the multivariate normality guarantees that the support of Ω
∗ is recovered by scio with a high probability as the sample size gets large.

bipartite graphs inducing inconsistency with ℓ <dig> penalisation
methods for sparse precision matrix estimation generally depend on an objective function  and a penalty function or regulariser, which in a bayesian setting is usually represented by the prior. the ideal penalty function for many problems would be the ℓ
 <dig> “norm” counting the number of non-zero elements: |x|0=#{i|x
i≠0}. this ℓ
 <dig> function is not a proper norm, but it provides a very intuitive notion of sparsity. the main problem with its use is computational: using ℓ
0-penalisation leads to very difficult non-convex combinatorial optimisation problems. the most common approach to avoid the computational challenges is to use ℓ
 <dig> penalisation as a convex relaxation of ℓ
 <dig>  as mentioned above this works well in many cases but it comes with a price, since in addition to providing the sparsity, ℓ
 <dig> also regularises large non-zero values. depending on the problem, as we demonstrate here, this effect can be substantial and may cause ℓ
1-regularised methods to return totally meaningless results.

intuitively, ℓ
1-regularised methods are expected to fail when some elements of the true precision matrix become so large that their contribution to the penalty completely overwhelms the other parts of the objective and the penalty. one example where this happens is when some set of variables depends linearly on another set of variables. in such situation the covariance matrix can become ill-conditioned and the elements of its inverse, the precision matrix, grow. one example of when this happens is models with a linear latent variable structure.

let us consider a model for x∈ℝd <dig> y∈ℝd <dig>  where y=a
x+ε. the graphical structure of the model and the corresponding precision matrix structure are illustrated in fig.  <dig>  assuming x∼n,ε∼n, the covariance of the concatenated vectors t is given by the block matrix 
  <dig> covxt,ytt=c=σx2iataaat+σε2i. 
fig.  <dig> 
left: graphical representation of a latent variable model as an undirected graphical model for a case with somewhat sparse a. right: the adjacency matrix of the graph showing the sparse pattern of non-zero elements in the corresponding precision matrix




the covariance matrix has an analytic block matrix inverse  <cit>  
  <dig> c−1=σx−2i+σε−2ata−σε−2at−σε−2aσε−2i. 


this precision matrix recapitulates the conditional independence result for gaussian markov random fields: the lower right block is diagonal because the variables in y are conditionally independent of each other given x. the matrix is clearly sparse, so we would intuitively assume sparse precision matrix estimation methods should be able to recover it. the non-zero elements do, however, depend on σε− <dig> which can make them very large if the noise σε <dig> is small.

it is possible to evaluate and bound the different terms of eq.  evaluated at the ground truth for these models: 
  <dig> logdet=−logσx2−d2logσε <dig> 



  <dig> −trace=− 



  <dig> −λ|c−1|1<−λσx−2σε− <dig>  


the magnitude of the penalty term  clearly grows very quickly as σε <dig> decreases while the magnitudes of the two first log-likelihood terms  and  grow much more slowly as they only depend on logσε <dig>  thus the total value of eq.  decreases without bound as σε <dig> decreases.

ignoring the ground truth, it is easy to see that one can construct an estimate Ω for which the objective remains bounded. if we assume |c|∞= max|c
ij|≤ <dig> , then 
 trace≤|Ω| <dig>  


as the other terms only depend on Ω it is easy to choose Ω so that they remain bounded. the estimate Ω that yields these values will in many cases not have anything to do with c
− <dig>  as seen in the experiments below.

here eq.  follows from the block matrix determinant identity  <cit>  
 detabcd=detdet,  while eq.  is based on a lower bound of the ℓ
 <dig> norm as the sum over all except the top-left block of the block matrix in eq. .

RESULTS
synthetic example
we tested the performance of glasso, scio and clime as well as fmpl using the model structure corresponding to the bipartite graph introduced above. the performance of the methods was investigated by varying the noise variance σε <dig>  and the sample size n. the model matrix a was created as a -array of independent normal random variables with mean  <dig> and variance  <dig>  the majority of the tests were run using input dimensionality d
1= <dig>  output dimensionality d
2= <dig> and noise variance σε2= <dig>  but we also tested varying these settings. for each individual choice of noise and sample size, k= <dig> different matrices a were generated and the results were averaged.

generating n samples using model described, data were normalised and analysed using the five different methods. we calibrated the methods in a way that number of edges in the resulting graph would match the true number. similarly, we thresholded the naive method by taking inverse matrix directly to output the correct number of edges. the fmpl method has no direct tuning parameters so we used its or mode results as such. similar tuning is not possible in a real problem where the true number of edges is now known. the tuning represents the best possible results the methods could obtain with an oracle that provides an optimal regularisation parameter.

we evaluated the results using the hamming distance between the ground truth and the inferred sparsity pattern, i.e. the number of incorrect edges and non-edges which were treated symmetrically. for methods returning the correct number of edges, this value is directly related to the precision pr through 
 dhamming=2ntrue positives  or conversely 
 pr=1−dhamming2ntrue positives. 


we will nevertheless use the hamming distance as it enables fair comparison with fmpl that sometimes returns a different number of edges.

figures  <dig> and  <dig> show the hamming distance obtained by the different methods as a function of the noise level when using  <dig> and  <dig> samples, respectively. the results show that especially for low but also for high noise levels, the ℓ
1-based methods all perform very poorly with especially glasso and clime performing very close to random guessing level for low noise levels σ
ε≤ <dig> . the naive inverse and fmpl work much better up to moderate noise levels of σ
ε≈ <dig> after which the noise starts to dominate the signal and the performance of all methods starts to drop. scio is a little better than the other ℓ
1-based methods but clearly worse than fmpl and naive in the low noise regime.
fig.  <dig> performances of different methods on the bipartite graph model with  <dig> samples. 


fig.  <dig> performances of different methods on the bipartite graph model with  <dig> samples. 



 <dig> from  <dig>  the results show that the performance of all ℓ
1-based methods is very poor across all d
 <dig>  glasso performance is close to random guessing level across the entire range considered, while clime is slightly better for d
2≥ <dig> and scio slightly better across the entire range. both fmpl and naive are significantly better than any of the ℓ
1-based methods.
fig.  <dig> performances of different methods on the bipartite graph model with varying output dimensionality. 



 <dig>  the results are now quite different as all methods are better than random especially for larger values. scio still outperforms clime which outperforms glasso. fmpl is really accurate for small d
 <dig> but degrades for larger d
 <dig> while the naive method is the most accurate in almost all cases.
fig.  <dig> performances of different methods on the bipartite graph model with varying input dimensionality. 




to further illustrate the behaviour of glasso on these examples, fig.  <dig> shows the contributions of the different parts of the glasso objective function  as a function of the noise level both for the true solution  as well as the glasso solution. the results show that for low noise levels the penalty incurred by the true solution becomes massive. the glasso solution has a much lower log-likelihood  than ground truth but this is amply compensated by the significantly smaller penalty. as the noise increases, the penalty of the true solution decreases and the glasso solution converges to similar values.
fig.  <dig> contributions of the different terms of the glasso objective  for the bipartite graph model with  <dig> samples. the green curves show the contributions of the first two terms of eq.  and the blue curves show the contributions of the last penalty term. solid lines show the result of the glasso optimal solution while dashed lines show the result for the true solution




necessity of assumption 1
it can be checked that the norm γ in assumption  <dig> and eq.  for bipartite graph models presented above depends on the scale of a. we took advantage of this by creating examples with different values of γ and testing the precision of glasso using the true covariance which corresponds to infinite data limit. the results of this experiment are shown in fig.  <dig>  the results verify that glasso consistently yields perfect results when γ< <dig> which is a part of the sufficient conditions for consistency of glasso. as γ grows and the sufficient conditions are no longer satisfied, it is clearly seen that the accuracy of glasso starts to deteriorate rapidly. this suggests that the sufficient condition of assumption  <dig> is in practice also necessary to ensure consistence.
fig.  <dig> precision of glasso on infinite data as a function of the norm γ of assumption  <dig> and eq. . values to the left of the green vertical line satisfy this condition while values to the right violate it. 




inconsistency for models of real gene expression data
we tested how often the problems presented above appear in real data using the “tcga breast invasive carcinoma  gene expression by rnaseq ” data set  <cit>  downloaded from https://genome-cancer.ucsc.edu/proj/site/hgheatmap/. the data set contains gene expression measurements for  <dig> genes for n= <dig> samples. after removing genes with a constant expression across all samples there are p= <dig> genes remaining.

in order to test the methods we randomly sampled subsets of d genes and considered the correlation matrix c
 <dig> over that subset. we generated sparse models with known ground truth by computing the corresponding precision matrix Λ
 <dig> from the empirical correlation matrix, setting elements with absolute values below chosen cutoff δ= <dig>  to  <dig> to obtain 
  <dig> Λij=ijif|ij|>δ0otherwise 


and the testing covariance matrix c=Λ
− <dig>  the cutoff lead to networks that were sparse with on average  <dig> % zeros in the precision matrix.
fig.  <dig> testing the condition of assumption  <dig> of  <cit>  in eq.  on real gene expression data showing the fraction of random subsets of d genes that fulfil the requirement and various relaxations. the condition  requires γ< <dig>  but the figure shows results also for larger γ cutoffs, denoted by c





we further studied how accurately glasso can recover the graphical structures when the data were generated using the precision matrices described above. we used a similar thresholding with a cut-off value of  <dig>  in order to first form sparse precision matrices for a random subset of genes with given dimension. these matrices were then inverted to obtain covariance matrices. we checked that the resulting matrices were positive definite and then used them to sample multivariate normal data with zero mean with different sample sizes.

the obtained data sets were centred and scaled before computing the sample covariance which was used as input to the glasso algorithm. the regularisation parameter was chosen with the aid of the ground truth graph, so that the the graph identified by glasso would contain as many edges as there were in the real graph. results are shown in fig.  <dig>  the results show that glasso performance decreases as the network size increases and is approaching that of random guessing for the largest networks considered here.
fig.  <dig> average precisions for glasso with different dimensions and sample sizes of the real gene expression data, higher values are better. in these experiments,  <dig> data sets were created. we encountered convergence problems with few of the data sets and the corresponding results were omitted when computing the average values shown here. the precision obtained by random guessing is also illustrated



fig.  <dig> average contributions of the different terms of the glasso objective function  on real gene expression data over random subsets of d genes. the values are shown for the ℓ
 <dig> penalty term as well as the unnormalised log-likelihood, divided by d to make them comparable. solid lines show the values for glasso result while dashed lines show the result for ground truth




discussion
the class of models with bipartite graphs presented above is an interesting example of models that have a very clear sparse structure, which all ℓ
1-penalisation-based methods seem unable to recover even in the limit of infinite data. this class complements the previously considered examples of models where glasso is inconsistent including the “two neighbouring triangles” model of  <cit>  and the star graph of  <cit> , the latter of which can be seen as a simple special case of our example.

an important question arising from our investigation is how significant the discovered limitation to inferring sparse covariance matrices is in practice, i.e. how common are the  bipartite structures in real data sets. given the popularity and success of linear models in diverse applications it seems plausible such structures could often exist in real data sets, either as an intrinsic property or as a result of some human intervention, e.g. through inclusion of partly redundant variables.

the gene expression data set is a natural example of an application where graphical model structure learning has been considered. the original glasso paper  <cit>  contained an example on learning gene networks, although from proteomics data. other authors  have applied gaussian graphical models and even glasso  to gene network inference from expression data. our experiments on the tcga gene expression data suggest that in such applications it is advisable to consider the conditions for the consistency of ℓ
1-penalised methods very carefully when planning to apply those.

previous publications presenting new methods for sparse precision matrix have typically tested the method on synthetic examples where the true precision matrix is specified to contain mostly small values. specifying the precision matrix provides a convenient way to generate test cases as the sparsity pattern can be defined very naturally through it. at the same time, this excludes any models that have an ill-conditioned covariance. as shown by our example, such ill-conditioned covariances arise very naturally from model structures that are plausible from the application perspective. the example presented in this paper thus represents a very useful additional test case for method developers and benchmarkers.

CONCLUSIONS
our results strongly suggest that users of the numerous ℓ
1-penalised and other ℓ
1-based sparse precision matrix and gaussian graphical model structure learning methods should be very careful about checking whether the conditions of consistency for precision matrix estimation are likely to be fulfilled in the application area of interest. the consistency conditions are typically presented in a form which requires knowing the ground truth which makes it difficult to test them directly. developing alternative criteria that can be checked more easily in practice would be an important avenue of future research for these methods.

from the 10th international workshop on machine learing in systems biology den haag, the netherlands. 3- <dig> september 2016

we would like to thank the authors of the fmpl method for sharing their code.

declarations
this article has been published as part of bmc bioinformatics volume  <dig> supplement  <dig>  2016: proceedings of the tenth international workshop on machine learning in systems biology . the full contents of the supplement are available online at http://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-17-supplement- <dig> 


funding
this work was supported by the academy of finland  and the european research council .

availability of data and materials
python code used in the experiments is available at https://github.com/probic/l1-inconsistency. matlab code for fmpl is available from the fmpl authors upon request.

authors’ contributions
oh implemented and performed the consistency criterion analyses and experiments on synthetic data. jl performed the fmpl analyses and took part in analysing the gene expression data. ah conceived the approach and performed the gene expression data analyses. oh, jl, jc and ah interpreted the results and wrote the manuscript. all authors read and approved the final manuscript.

competing interests
the authors declare that they have no competing interests.

consent for publication
not applicable.

ethics approval and consent to participate
not applicable.
