BACKGROUND
integration of protein sequence and structure information is essential in many problem domains, including structural biology, protein engineering, and drug design. a suite of tools within ucsf chimera  <cit>  has been developed for studying sequence-structure relationships and comparing related structures.

common tasks in sequence-structure work include:  displaying information from a sequence alignment on one or more corresponding structures, or displaying information from the structures on the alignment;  superimposing structures so that they can be compared;  generating a structure-based sequence alignment.

the multalign viewer extension of chimera displays sequence alignments and automatically associates structures with sequences in the alignment. structures can be superimposed using the alignment, and sequence-related data such as conservation can be shown on the structures. if one does not already have a sequence alignment, the matchmaker extension can be used to generate sequence alignments and superimpose structures accordingly. a novel score incorporating both secondary structure and residue type is used to align the sequences. completing the cycle, the match -> align extension constructs sequence alignments from pre-existing superpositions of structures.

these tools work together within chimera to enhance the understanding of sequence information in the context of structure and vice versa. below, we describe the tools in more detail and discuss their advantages and disadvantages relative to other programs.

implementation
the implementation of the chimera system is described elsewhere  <cit> . the tools described in this paper  are all implemented as extensions to chimera and are distributed along with chimera. they are written in the python scripting language and their user interfaces are implemented using tkinter, python's interface to the tk gui toolkit. chimera's normal extension mechanisms are used to make the tools available in chimera's "tools" menu and to register file types that the tools can open, which then appear in the list of types in chimera's main file-opening dialog.

the multalign viewer, matchmaker, and match -> align tools are accessed from the structure comparison section of the tools menu. descriptions of parameters refer to the default settings in chimera version  <dig> .

RESULTS
multalign viewer
sequence alignments in several common formats  can be opened in chimera and shown with multalign viewer. when a sequence alignment and a structure have been opened in chimera , the sequence of the structure is compared to each of the sequences in the alignment. the structure is then associated with the alignment sequence that yields the fewest mismatches, if within a user-specified tolerance. the default mismatch tolerance is 1/ <dig> the number of residues in the structure chain. reasons for mismatches include point mutations, portions of a structure missing due to insufficient density for coordinates to be determined, and association with a homologous protein rather than the same protein . for rapid automatic association, it is assumed that gaps in the structure sequence relative to the alignment sequence can only occur where residues are missing from the structure. multiple structures can be associated with multiple sequences, or even with the same sequence. when a sequence is associated with a structure, its name is shown in bold over a rectangle of the structure's default color .

sequence-structure associations can be changed or added if the automatic procedure does not give the desired result. if an association did not meet the criteria for the automated approach but is requested by the user, the needleman-wunsch algorithm  <cit>  with identity scoring is used to align the structure sequence with the alignment sequence. although slower than the automatic-association method, this approach will yield the optimal alignment even in those rare cases where automatic association fails .

if the sequence names are based on pdb identifiers  <cit>  , the structures can be fetched over the internet from the pdb and opened automatically, instead of explicitly by the user. similarly, if the sequence names are based on scop  <cit>  domain identifiers, the domain structures can be fetched from astral  <cit>  and opened automatically.

association permits many types of sequence-structure crosstalk, including the following: selections made with the mouse in the sequence are highlighted in the structure, and vice versa; the structure residue number is displayed when the cursor is placed over a residue in the sequence; and structures can be matched based on the sequence alignment. by default, structure matching uses the alpha-carbon pairs corresponding to every column in the alignment  in a least-squares fit. alternatives include using only columns highlighted by the user, or columns with high conservation. the fit can be improved iteratively by pruning alpha-carbon pairs that are not well superimposed. in each cycle, the atom pairs removed are either the 10% farthest apart of all pairs or the 50% farthest apart of all pairs exceeding a specified cutoff distance, whichever is fewer. iteration allows the best-matching regions to govern the fit and conformationally dissimilar regions like flexible loops to be excluded, even though they may be aligned in the sequence alignment. while this matching is inherently pairwise, a multiple superposition can be achieved by using a consistent reference structure, for example, by matching b to a and c to a. match statistics are reported in the chimera reply log, which can be opened from the favorites menu. the matched structures can be saved as pdb or mol <dig> files.

a unique feature of multalign viewer is the treatment of headers, annotations that appear above the sequences in an alignment. header information is automatically propagated as a residue attribute to any associated structures. if the header is numerical , associated structures can be colored by the attribute value and/or shown as a "worm" with thickness scaled by the attribute value, using chimera's render by attribute extension.

the font size, text wrapping, and residue letter coloring can be adjusted in multalign viewer's preferences. minor editing can be performed. alignments or parts of alignments can be written out in any of the formats that can be read, with optional removal of all-gap columns. the sequence window contents can also be saved as an encapsulated postscript file for publication.

there are many additional features, including searching for a particular sub-sequence or prosite  <cit>  pattern, display of secondary structure elements on the alignment, calculation of pairwise percent identities, and superposition assessment by generating a "closeness of fit" residue attribute. the state of multalign viewer is included in saved chimera sessions. a user can save a session, exit from chimera, and later resume work after restoring the session in chimera.

matchmaker
most structural comparisons require the structures to be superimposed in some sensible way. a user may have a collection of structures to be compared, but no pre-existing sequence alignment to govern matching. the matchmaker extension of chimera constructs pairwise sequence alignments and uses them to superimpose the structures. the sequence alignment can be kept hidden or opened in multalign viewer. as in structure matching with multalign viewer, the fit can be improved iteratively by pruning residue pairs far apart in space, match statistics are reported in the chimera reply log, and a multiple superposition can be achieved by using a consistent reference structure. matchmaker can be run from its graphical interface or from the chimera command line.

the standard needleman-wunsch  <cit>  and smith-waterman  <cit>  algorithms are available for producing global and local sequence alignments, respectively. the chains to match can be specified explicitly, or matchmaker can identify the best-matching chains based on alignment scores. alignment scores can include residue similarity, secondary structure information, and gap penalties:

residue similarity
any of several common substitution matrices  can be used.

secondary structure
this contribution is analogous to residue similarity, but instead of residue types, the values depend on what type of secondary structure the residues fall within: helix, strand, or other.

gap penalties
alignment scores can be penalized for opening and extending gaps. when secondary structure scoring is used, there can be different penalties for opening gaps within different types of secondary structure.

the default settings are to use the needleman-wunsch algorithm with blosum- <dig> and 30% weighting of the secondary structure term . these settings perform well in many situations, but users can easily adjust these parameters, as well as the gap penalties and secondary structure matrix values, via the graphical interface. secondary structure scoring can be turned off or its weight adjusted with a slider. without secondary structure scoring, the method collapses to purely standard protocols for sequence alignment and scoring.

matchmaker originally did not use secondary structure information. however, we often evaluated its performance by showing secondary structure on the sequence alignment, begging the question of why such information was not used directly. using secondary structure extends the applicability of matchmaker to more distantly related proteins, where purely sequence-based methods either cannot achieve a correct alignment, or can achieve a correct alignment, but only with a narrow set of parameters that may be hard to identify.

for example, enolase  and mandelate racemase  are homologous but share less than 20% identity; common features include three metal-binding residues in the active site  <cit> . matchmaker with default settings superimposes the structures correctly. in the sequence alignment, two of the three metal-binding residues are paired correctly and the third is offset by one position. except for slight changes in the offset of the third metal-binding residue, this result is robust to changes in the weight of the secondary structure term  or switches to other matrices, except pam- <dig>  without secondary structure scoring, only the blosum-35– <dig> matrices yield roughly correct superpositions, but with the active site residues poorly superimposed in space and incorrectly paired in the sequence alignments. data for additional pairs are presented below, in the section on matching distantly related proteins.

fit iteration does not change the sequence alignment; it just prunes columns of the alignment from the least-squares fit of the structures. thus, the requirement for success with matchmaker is merely that enough columns in the sequence alignment are structurally correct to dominate the initial superposition. pruning during iteration will then exclude the "wrong" positions, yielding a correct superposition based on fitting the remaining pairs. because relatively few pairs may remain at this stage, matchmaker alone does not yield a full set of residue equivalences between structures. residue equivalences can be obtained using match -> align, described next.

match -> align
given a superimposed set of two or more protein structures, match -> align constructs a corresponding sequence alignment. it does not matter how the input superposition was generated; it could have been created interactively, or with a tool in chimera such as matchmaker, or with some other program. residue types are not used, only the spatial proximities of alpha-carbons. the user specifies a cutoff distance and a column inclusion criterion: whether a residue must be within the cutoff distance of at least one other residue in the column or all other residues in the column. structures related by circular permutation can be accommodated with sequence doubling. match -> align determines if sequence doubling is needed and if so, which sequence should be doubled.

in the pairwise case, a dynamic programming algorithm is used to determine the sequence alignment that best represents the structural alignment. the score for aligning a pair of residues is  for distances no greater than the cutoff and - <dig> for distances greater than the cutoff. a gap penalty of zero is used so that spatial proximity overrules adjacency in sequence.

in the case of more than two structures, heuristics are required to render the problem tractable. for each pair of chains, all residue-residue pairings or "links" within the cutoff distance are identified. links that cross when the sequences are laid out in parallel are removed, starting with the link with the most crossings, until no links between the pair cross. alignment columns are then assembled and merged starting with the shortest-distance links, with each new addition checked for internal consistency and whether distances to other column members meet the column inclusion criterion.

the resulting sequence alignment is shown with multalign viewer and can be saved in various formats from that tool.

calculation time scales approximately as n <dig> with the number of models .

matching distantly related proteins
superpositions can be evaluated using the number of residues paired  and the corresponding root-mean-square deviation . since there is always a trade-off between higher n and lower rmsd, little can be said about a comparison where one superposition has both values higher or both lower than another. in fact, many n/rmsd pairs can describe the same superposition. for a given pair of structures, however, a superposition with both higher n and lower rmsd is clearly better.

obtaining such data provides an example of how the sequence/structure tools in chimera work together. once the structures have been opened in chimera, matchmaker can be called from the menu or used via a command to superimpose them. the sequence alignment from matchmaker could be shown with multalign viewer, but in the current situation, this would not be used. information on the final  number of pairs and alpha-carbon rmsd is sent to the status line and chimera reply log. as explained above, relatively few pairs may be used in matchmaker's final fit, so match -> align would then be called from the menu to generate a full set of equivalences between the two structures, in the form of a sequence alignment. this sequence alignment is automatically shown with multalign viewer. structure matching on all aligned positions would then be called from multalign viewer's menu to obtain an rmsd for the set of equivalent pairs. this procedure may sound elaborate, but actually takes just a few seconds.

fischer and coworkers  <cit>  collected a set of same-fold, low-identity protein pairs and rated their difficulty for sequence alignment and fold recognition. table  <dig> shows n/rmsd data for the ten pairs rated most difficult. superpositions were generated using matchmaker with default alignment scoring, scoring without secondary structure, and scoring with only secondary structure, that is, 100% weighting of the secondary structure term.

based on visual inspection and the results in table  <dig>  matchmaker with default scoring superimposes nine of the ten pairs correctly. the fit of pair  <dig> appears close, but is likely wrong in that it implies a circular permutation of one protein relative to the other . without secondary structure scoring, none of the superpositions are correct; no result was obtained for pair  <dig> because iteration halted when the number of residue pairs fell below four, and the other nine pairs were superimposed incorrectly. with secondary structure scoring alone, the superpositions of seven pairs are grossly correct, but most of the fits are not as good as with default scoring. pair  <dig> was also matched correctly, lacking the circular permutation obtained with default scoring, but pairs  <dig> and  <dig> were matched incorrectly.

not surprisingly, secondary structure scoring makes matchmaker sensitive to secondary structure assignments. we have found that recalculating secondary structure with the kabsch and sander algorithm  <cit>   instead of using pre-existing assignments yields very similar or improved results, depending on the pair . this option is on by default in matchmaker. the improvement is likely due  to the use of consistent criteria among the structures being matched. secondary structure assignments in the input pdb files may have been generated with different criteria for different structures.

one might argue that the default matrix, blosum- <dig>  is not appropriate for such divergent proteins. to address this issue, analogous tests were performed with blosum- <dig> instead . with secondary structure scoring , blosum- <dig> superimposed all pairs correctly except pair  <dig>  thus, when combined with secondary structure scoring, blosum- <dig> and blosum- <dig> each correctly superimpose nine of the ten pairs. without secondary structure scoring, blosum- <dig> yielded only roughly correct matches for pairs  <dig> and  <dig>  and incorrect matches for the others. this is better than the zero correct matches obtained with blosum- <dig> alone, but still quite poor. secondary structure scoring helps to generate better fits than can be obtained with sequence methods alone and decreases matchmaker's sensitivity to the choice of substitution matrix.

interestingly, end results are almost identical when the smith-waterman algorithm  is used in matchmaker instead of the default needleman-wunsch algorithm  . apparently, the pruning of pairs during iteration leads to use of the same or nearly the same set of positions in the final fit.

matchmaker's purpose is to provide correct and useful superpositions for interactive study in a wide range of research situations , and to do so quickly and conveniently. it does not produce any significance metric and is not intended for remote homology detection. we envisioned it would be used on structures above the "twilight zone" of sequence identity, including trivial cases like different conformations of a given protein or mutants versus wild-type proteins. the ability to correctly match distantly related proteins is an added and somewhat unforeseen benefit.

comparisons with other programs
several programs overlap in function with chimera's multalign viewer. alone or in combination with partner visualization programs, these generally allow adjustments to the sequence and structure displays and simple crosstalk between sequence and structure. some of the programs allow alignment editing and superposition of structures based on the sequence alignment. modview  <cit>  and its stand-alone successor friend  <cit>  also integrate phylogenetic information such as dendrograms. vito  <cit>  displays alignment insertions and deletions on structures and reports threading energies. strap  <cit>  is designed to handle large numbers of sequences; structure visualization is provided by a partner program such as pymol  <cit>  or visual molecular dynamics   <cit> . modview  <cit>  and strap  <cit>  can be used as web plug-ins. cn3d  <cit>  is a web plug-in distributed as part of entrez  <cit> . sting  <cit>  is a web plug-in that can display pairwise alignments from combinatorial extension  <cit>  ; many types of structure-related data are shown on the sequence alignment, and jmol  <cit>  is used to display the structures.

multalign viewer cannot be used as a web plug-in. other disadvantages, which we plan to address in the future, are that editing capabilities are limited and there is no interaction with phylogenetic information such as dendrograms. although there is no hard limit on the number of sequences that can be handled, chimera uses more memory per sequence and structure than many other programs. advantages of multalign viewer include the ability to add arbitrary sequence annotations, automatic propagation of sequence annotations to associated structures, sophisticated options for calculating conservation, and the ability to wrap alignment text instead of presenting it as a horizontal bar.

it is beyond the scope of this paper to discuss the many existing methods for protein superposition. for comparison with matchmaker, we will mention a few that are integrated with programs with broader sequence/structure visualization capabilities. the align command in pymol  <cit>  is similar to matchmaker without the secondary structure term. it generates a sequence alignment and fits structures accordingly, with or without fit iteration. the multiple alignment plug-in  <cit>  to vmd  <cit>  uses stamp  <cit> . stamp starts with approximate matches that can be generated by sequence methods or by scanning segments of a protein against the others for structural similarity. it then refines the fits and determines a sensible order in which to add successive structures to a multiple superposition. cn3d  <cit>  aligns structures using vast   <cit> , which pairs secondary structure elements of similar types, orientations, and connectivities. the program friend  <cit>  can superimpose structures with topofit  <cit>  or combinatorial extension   <cit> . strap  <cit>  can use ce  <cit>  or an unpublished method by goede. topofit, ce, and the goede method are quite different from each other, but they all use structure information, not sequence .

to our knowledge, only matchmaker can use both sequence and structure information in the initial round of matching. methods that use only sequence information often fail when proteins are highly divergent. conversely, methods that use only structure are discarding any signal present in the sequences.

in practice, superpositions of low-identity pairs from chimera are comparable to those from structure-based methods. table  <dig> shows results obtained with chimera, topofit  <cit> , and ce  <cit>  for the same pairs of structures as in table  <dig>  in terms of n and rmsd, the chimera results fall between those of topofit and ce for all pairs except pair  <dig> 

the agreement between chimera's matchmaker and ce is more evident when a consistent method is used to obtain equivalences. columns chimera and ce/ma in table  <dig> show data for the equivalences determined by match -> align with cutoff  <dig>  angstroms. only pairs  <dig> and  <dig> show major differences. as mentioned above, the superposition of pair  <dig> from matchmaker implies a circular permutation of one protein relative to the other . allowing for circular permutation when using match -> align on this superposition yields  <dig> pairs matched with  <dig>  angstroms rmsd. the non-permuted alignment from match -> align for the ce superposition, however, also yields  <dig> pairs but with a lower rmsd , further evidence that the ce superposition is the correct one. the opposite is true for pair 10: in the ce superposition, a central sheet is shifted over by one strand relative to the correct match. importantly, default settings were used in chimera; it is likely that performance could be improved with pair-specific parameter tuning or with additional cycles of matching, pruning, and creating another sequence alignment.

the ratio of sequence to structure information used by matchmaker is adjustable; the ratio most appropriate for a given problem depends on the divergence of the proteins and the intended use of the results. however, results are generally robust to a wide range of parameter settings, and there should be little need for hunting down an optimal set of parameters. the combined sequence-structure score is similar in spirit to that used in staccato  <cit>  for a different purpose . disadvantages of matchmaker are that it is inherently pairwise and does not provide guidance on which structure should be used as the reference for overlaying multiple structures.

few programs exist to derive a sequence alignment from an arbitrary pre-existing superposition. the only one we know of besides match -> align is staccato  <cit> . the methods are very different, however. staccato uses a unique sequence-structure score with contributions from residue similarity, residue secondary structure environment, and spatial proximity. in chimera, the first two types of information are used by matchmaker to fit the structures, but only the third, spatial proximity, is used by match -> align to determine equivalences. staccato can use a distance cutoff with an "all others" column inclusion criterion, but it can also operate without a cutoff; the score will still favor the alignment in sequence of residues close in space.

the separation of structure matching from generation of a structure-based sequence alignment is important when a user has already obtained the desired fit using protein-specific knowledge, such as by matching a constellation of important active site residues, or by fitting using only the atoms of a bound ligand or cofactor. in such cases, it would defeat the purpose to use a global structure-based superposition program to produce a sequence alignment, as that would simultaneously alter the structural fit. separation of these two tasks also makes it more obvious that many different sequence alignments are consistent with a given structural superposition; users can vary the column inclusion criterion and cutoff distance as appropriate for the intended purpose of the alignment and the divergence of the proteins under study.

the chimera sequence/structure tools provide access to many parameter settings via graphical interfaces. a further advantage, apart from their individual merits, is the convenience of having the tools work together within a single program. advantages relating to chimera as a whole are a broad feature set for structure analysis, detailed and searchable documentation, program extensibility, and continuing development. finally, although chimera has many features, it is not meant to be a closed system; it can read many common file formats. this allows researchers to use superpositions or sequence alignments from outside programs or databases in lieu of one of chimera's similar tools, while still benefiting from features of the other tools discussed.

future directions
we have many ideas for future developments; some of the more concrete and near-term issues are mentioned here.

editing in multalign viewer is currently limited to shifting highlighted blocks of sequence to create, extend, or remove gaps; residues cannot be changed, and they can only be deleted by rewriting a new file minus those residues. we plan to allow entire sequences and alignment columns to be deleted without new file creation.

we envision reading phylogenetic data along with an alignment and displaying the tree and sequences side by side. nodes in the alignment would be collapsible to representative or consensus sequences, and analyses such as conservation calculations could be applied to only the members of a node.

although several ways to calculate conservation are already included and users can create their own header information by loading a text file, we plan to make headers even more powerful by allowing users to define their own header functions. while loading a header file places static values in the header line, values produced by a function can be recomputed for different alignments or as the alignment is changed by editing. we will also allow headers to be graphical representations, such as cylinders and thick arrows to symbolize stretches of helix and strand. another option will be to show residue numbers at the ends of lines.

in principle, the sequence-structure tools in chimera can be used on nucleic acids, but little attention has been paid to this application. matchmaker has a dna matrix, but it would be helpful to add a matrix that works with rna.

chimera as a whole will benefit from ongoing efforts to improve its speed and memory usage.

CONCLUSIONS
chimera includes tools for integrating protein sequence and structure information. the multalign viewer tool displays internally and externally generated sequence alignments with customizable layout and coloring. structures opened in chimera are automatically associated with sequences in the alignment, as appropriate. association enables matching of structures according to the sequence alignment, display of alignment-related data such as conservation on the structures, and display of structure-related data on the sequence alignment. in the absence of a pre-existing alignment, the matchmaker tool constructs a new alignment and matches structures accordingly. the alignment score includes secondary structure information, extending the usefulness of matchmaker to distantly related proteins. the match -> align tool creates sequence alignments of two or more proteins that have already been superimposed, using only the spatial proximities of their alpha-carbons.

advantages of using chimera for sequence/structure research include a rich set of features co-existing in a single program, certain unique methods, facile integration of user data, access to the broader visualization and analysis capabilities of chimera, program extensibility, detailed documentation, and continuing development.

availability and requirements
project name: ucsf chimera

project home page: 

operating systems: microsoft windows, linux, apple mac os x, sgi irix, and hp tru <dig> unix

programming language: python, c++

license: chimera is free to academic and non-profit users, subject to an online license agreement. commercial use requires a fee and a separate, written license agreement . the distribution bundle includes user documentation, executables, and all python code. the full source code including c++ files is also available for download.

abbreviations
ucsf: university of california san francisco; gui: graphical user interface; gcg msf: genetics computing group multiple sequence format; gcg rsf: genetics computing group rich sequence format; nbrf: national biomedical research foundation; pir: protein information resource; pdb: protein data bank; scop: structural classification of proteins; rmsd: root-mean-square deviation; vmd: visual molecular dynamics; stamp: structural alignment of multiple proteins; vast: vector alignment search tool; ce: combinatorial extension; staccato: structural sequence alignment, correspondence and conservation analysis tool.

authors' contributions
efp designed and implemented the chimera extensions described in this work, with major input from ecm. ecm wrote the user documentation, generated the results presented herein, and wrote the paper, with major input from efp. along with efp, gsc, cch, and tef designed and implemented the chimera system. all authors have participated in discussions about this manuscript and the tools described.

supplementary material
additional file 1
supplementary data. default parameters in chimera version  <dig> , matchmaker results with different parameter settings , scaling of match -> align computation time .

click here for file

 acknowledgements
we are grateful to john h. morris for comments on this manuscript. ucsf chimera development is funded by the nih national center for research resources .

figures and tables
results are of the form n/rmsd, where n is the number of residue pairs matched and rmsd is the corresponding alpha-carbon root-mean-square deviation. the first set per column represents the final matchmaker iteration , while the second represents all equivalences from subsequent use of match -> align . mm-default: matchmaker with default parameters . mm-noss: same as mm-default except without secondary structure scoring. mm-allss: same as mm-default except with only the secondary structure term . nr: no results; matchmaker iteration ended prematurely when the number of residue pairs fell below four.

results are of the form n/rmsd, where n is the number of residue pairs matched and rmsd is the corresponding alpha-carbon root-mean-square deviation. chimera: results from using matchmaker and then match -> align with default settings, as reported under mm-default in table  <dig>  topofit  <cit>  results were obtained using the web server  <cit> . ce  <cit>  results were obtained using the web server  <cit>  with default settings. ce/ma: equivalences obtained by using match -> align with cutoff  <dig>  angstroms on the superpositions from ce.
