BACKGROUND
microarrays allow simultaneous measurement of thousands of genes in a short span of time. this approach provides abundant opportunities for scientists to detect and experimentally validate the hypothesis that the data might be generating. microarray experiments have traditionally focused on measurement of gene expressions at a single time point and are increasingly being applied to measure expression-levels across multiple time points. such time-course measurements can help in gaining insights into the dynamics of gene interactions  <cit> . the computational analysis of temporal microarray data requires three distinct stages to be performed before some meaningful hypothesis from data can be derived. the first stage is the normalization stage where data is cleaned from the effects of unwanted experimental biases  <cit> . the second stage requires the grouping of data based on certain features which helps in reduction of data dimensions. the third and final stage is the inference of relationship between various genes of interest and understanding the functioning of smaller subsystems which comprise together to make a bigger system. though these three stages have an ordered sequence of execution, the computational methods applied at these stages need not be dependent on each other. the normalization method solely relies on the experimental design of the microarray experiment  <cit> . the clustering step can be performed using point-based, model-based or feature based grouping of data  <cit>  depending on the hypothesis adopted by the practitioner. the final stage of relationship inference between genes is restricted to the sets of selected genes which can be studied as a system of bivariate or multivariate causal interactions. keeping in mind, the final goal of microarray data analysis being identification of interactions between genes at the third level, the quest for this goal should ideally start when the data is being grouped together at the clustering stage. one of the ultimate goals of all gene clustering algorithms is to discover the underlying gene pathways representing the biological processes. genes that are lying in the same pathway are often activated or depressed simultaneously or sequentially upon receiving stimuli. the biological signal is typically transmitted through intermediate gene interactions due to physical or chemical activities. the simultaneous or sequential activation, or depression, is delineated by the underlying network connection patterns. in this paper, we present a novel approach for clustering of temporal microarray data based on the notion of temporal interaction between the genes. the temporal recording of gene expressions provides an excellent opportunity to view the gene profiles with respect to time and helps in understanding the underlying causal processes driving the behavior of the genes and the system in turn. like any dynamical system, in a system with a temporal expression profile, time plays a crucial role in the way the system behaves. the primary hypothesis behind the approach presented in this paper is: the observed effect on any gene is due to some cause propagated over time. the observed expression of a gene could be due to the effect of other genes present in the system which may be activating or inhibiting the gene under observation with different time-lags. in other words, we perceive the system as a set of interacting entities, where each entity is a stochastic process and the interactions between them are temporal activities taking place between a pair of processes.

a system with such behavior is a widely accepted concept in economics and neuroscience. granger  <cit>  proposed a method to evaluate the influence of one time series on the other time series. granger causality has recently been introduced in bioinformatics  <cit>  to reverse-engineer gene circuits from microarray data. we will utilize granger causality in conjunction with a graph-theoretic method to build an association matrix for the genes and detect the functional modules present in the data. a functional module can be defined as a separate substructure of a network having a group of genes or their products that are related by physical or genetic interactions. in graph-theoretic sense, a functional module can be represented by highly connected regions in a network, where the functions are predicted using connections in a graph based on the assumption that genes which lie close to one another are more likely to have similar functions or constitute gene complexes  <cit> . we will also analyze that how the association network obtained by us has certain architectural properties desired from biological networks  <cit>  which distinguishes it from a randomly generated network.

related work
there are many clustering techniques proposed for clustering of gene expression data. however, majority of these techniques do not take into account the sequential nature of time series data, and thus are inappropriate for clustering such datasets. the earlier proposed approaches can broadly be divided into three categories.

 <dig>  point-wise distance based methods - group genes by minimizing an objective function based on a distance measure computed between gene pairs. the distance measure could be euclidean distance, mutual information, correlation or its respective variants  <cit> , etc. the point-wise methods can be further classified into two classes:  partitioning, and  hierarchical. among partitioning methods, k-means  <cit>  and self-organizing maps   <cit>  are widely used approaches. hierarchical methods on the other hand create a hierarchy of relative distances and place multinomial points along a one-dimensional axis based on the relative distance between points. a typical representation of results obtained from hierarchy based methods is in the form of a dendrogram  <cit> . point-wise distance based approaches are the most widely used clustering techniques for gene expression data due to their computational and conceptual simplicity. these methods are also popular due to their implementation in the large number of software packages designed for analysis of gene expression data. some biological case studies using point-wise methods for clustering gene expression data can be found in  <cit> .

 <dig>  feature based clustering methods - aim at detecting salient features and local or global shape characteristics of the expression profiles. as opposed to a distance based similarity measure, looking for general shape among the gene profiles can uncover more intricate relationships, such as time shifts and inversion in expression profiles. ji and tan  <cit>  proposed a time-lagged based cluster identification technique which relies on the directional change of profiles across consecutive time points. edge detection method by chen et al.  <cit>  sums the number of edges of two gene expression curves where edges have the same direction within a time lag to generate a score. directional changes were also used to compute the slope of expression values in event method by kwon et al.  <cit>  to cluster the gene profiles. some of the feature based clustering methods transform the raw expression data to symbols which are further analyzed to detect similarity between profiles  <cit> . dominant spectral component method by yeung et al.  <cit>  decomposes temporal expression sequences into spectral components using the autoregressive modeling technique to measure gene-gene relationship to form clusters. graph-theoretic approaches studying the nature, properties, structure of the graph where the genes represent the nodes and the arcs representing association between genes also come under feature based clustering methods. graph spectral clustering  <cit>  and minimal spanning tree methods  <cit>  are other well-known feature based clustering methods.

 <dig>  model based clustering methods - shift the similarity emphasis from the data to the unknown model that describes the data. such methods are based on statistical mixture models which assume that data is generated by a finite mixture of underlying probability distributions, with each component corresponding to a distinct cluster  <cit> . model based clustering relies on the fundamental assumption that the observed expression profiles are clustered in functional space based on their characteristics. the focus of this approach is in functional decomposition of data, rather than the decomposition of raw data. the computational approach in model based clustering methods is based on maximizing the likelihood of data points. expectation-maximization  is a popular model based clustering approach to estimate unknown parameters  of underlying probability distribution for each cluster in order to maximize the likelihood of the observed expression profiles  <cit> . based on similar lines as em algorithm, schliep et al.  <cit>  suggested gene clustering based on a mixture of hidden markov model . along the similar thoughts that a time-course gene dataset is a set of time series generated by stochastic processes, ramoni et al.  <cit>  suggested the use of autoregressive representation for each stochastic process defining a cluster. this method relies on regression and groups together genes whose dynamics can be expressed with roughly the same auto-regressive equation. bar-joseph et al.  <cit>  presented a clustering algorithm that uses splines to cluster the continuous representation of time series expression data. in some cases, prior knowledge has been used to fit the models to the expression profiles. for example, zhao et al.  <cit>  and lu et al.  <cit>  have used sinusoids to identify yeast genes with cyclic behaviour. moller-levet et al.  <cit>  presented a method based on a predefined comprehensive set of profiles to cluster genes according to their match with respective profiles.

the method proposed in this paper for clustering of temporal gene expression data takes advantage of the essential behaviour of the granger causality test, which determines if one time-series is useful in forecasting the other time-series or not. the network obtained after applying the granger causality test is representative of the association between gene-pairs which pass the test. in order to detect the potential functionally related genes, we use a graph theoretical technique to detect dense regions in the association network. our approach shows that the detection of dense regions in association with granger causality test plays an equally important role in the proposed clustering technique. the method is tested using both synthetic as well as real datasets obtained to monitor senescence in arabidopsis thaliana. to the best of our knowledge, this is a new approach in clustering of temporal gene-expression data which can be used for automated grouping of interesting genes from a large dataset.

RESULTS
experiments with synthetic datasets
we test our method on three sets of synthetic multivariate datasets. each set represents a collection of stochastic processes in the form of time-series. we construct each set in such a way that the processes belonging to the set are interdependent, whereas the sets themselves are disjoint from each other.

dataset 1:  

dataset 2:  

dataset 3:  

in the above datasets, ϵi ~ n represents the uncorrelated random error associated with each process. in dataset  <dig>  x <dig> is the driving force for x <dig>  x <dig> and x <dig> with time lags  <dig>  and  <dig> respectively. x <dig> further drives x <dig> and they both share a feedback loop. similarly, in dataset  <dig>  x <dig> drives x <dig> with time lag  <dig> and x <dig> in turn drives x <dig>  x <dig> and x <dig> both together drive x <dig>  similarly, in dataset  <dig>  we have x <dig> driving x <dig>  x <dig> drives x <dig> with lag  <dig> and x <dig> in turn drives x <dig>  the process x <dig> is driven by x <dig> and x <dig> with time lag  <dig> and  <dig> respectively. in the end, x <dig> receives the drives from x <dig>  x <dig> and x <dig> with time lags  <dig>  and  <dig> respectively.

the datasets are disjoint from each other due to different sources of initiation. the datasets show different arrangements of connections between the processes which include feedback loops, low and high coefficients of drive between processes, multiple processes together driving a single process and all the processes interacting with other processes on a different time lag.

we apply the granger causality to infer the interactions between different entities in each dataset. the granger causality test was implemented in matlab and the source code is available on request from the first author. the standard critical value of α =  <dig>  was chosen for the f-test to accept or reject the hypothesis. the causal hypothesis h <dig> was tested for each pair of processes denoted by  in both ways i.e, x causing y, and y causing x. since we are only interested in the presence of interaction between , we ignore the directionality of causal influence and quantify the association between the pair with the higher of causality value obtained from both directions. if there is no causal relationship between the pair, the association between x and y is quantified as zero. the networks obtained after computing the granger causality and weighing the edges for all the synthetic datasets are shown in figures  <dig>   <dig> and  <dig>  the true edges according to the equations describing the datasets are plotted with solid bold lines, whereas the extra detected edges are plotted with thin dashed lines.

we see in figure  <dig> for  that node  <dig> connects to nodes  <dig>  and  <dig>  nodes  <dig> and  <dig> are also connected in the inferred network structure. the equations describing the dataset  <dig> reflect these facts. one of the extra link present is the interaction of node  <dig> with node  <dig> showing the fact that nodes  <dig> and  <dig> are both driven by node  <dig>  they exhibit an interaction according to the f-test criteria but their strength is very low compared to other interactions. since node  <dig> is also a driving force for node  <dig>  so according to the previous argument, nodes  <dig> and  <dig> are also found to drive node  <dig>  node  <dig> and node  <dig> share a feedback loop, thus an interaction between them exists. there is a similar situation with nodes  <dig>  and  <dig> interacting with node  <dig> due to node  <dig> being the common driving force behind nodes  <dig> and  <dig> 

the connections are simpler and more sparse in the case of figure  <dig> for dataset  <dig> where there is an extra edge not described by the system of equations is present in the inferred network. similarly in the network obtained for dataset  <dig>  the influence of node  <dig> on nodes  <dig> and  <dig> can be attributed to the fact that the influence is propagating through node  <dig> which is directly regulating nodes  <dig> and  <dig>  the influence of node  <dig> on  <dig> is due to node  <dig> being the driving force for node  <dig> which in turn is directly influencing node  <dig>  in the similar fashion, the dashed line between nodes  <dig> and  <dig> can be explained due to node  <dig> driving node  <dig> which in turn is driving node  <dig> 

having analyzed the individual datasets, we further investigate what happens when all the three datasets are put together to form a bigger system of processes and the pairwise interaction between the processes are computed. we create a system of  <dig> entities where the first  <dig> entities represented the processes in dataset  <dig>  the entities from  <dig> to  <dig> represented the processes from dataset  <dig>  and the last  <dig> entities represented the processes in dataset  <dig>  we then test for granger causality for all possible pairs of processes  in the system. we plot the interaction strength between the processes in figure  <dig> where the x and y axes represent the  <dig> ×  <dig> matrix of processes in the system. the interaction strengths between the processes are shown on the z-axis. we can clearly see three different island-like structures in the graph where entities  <dig> to  <dig> interact within themselves,  <dig> to  <dig> within themselves and  <dig> to  <dig> within themselves. the plot clearly shows that there is no cross talk between the entities across different sets even though they are present within the same system.

experiments with real datasets: material
we test our method on real biological dataset obtained from in-house microarray experiment designed to measure gene-expression level of around  <dig>  genes for arabidopsis thaliana plant  <cit> . this section summarizes the experimental details at different stages to obtain the data.

plant growth and leaf material acquisition
arabidopsis  was grown in a controlled environment at 20°c, 70% relative humidity,  <dig> μmol m-2s- <dig> light intensity,  <dig> h day length. leaf  <dig> was tagged on emergence and biological replicates were harvested both the morning and evening  at  <dig> day intervals until fully senescent. this resulted in  <dig> time point samples from before full expansion to senescent.

rna isolation and probe preparation
rna was isolated from  <dig> individual leaves as separate biological replicates using the triazol method  followed by rneasy column purification . rna was amplified using a messageamp ii  and then labeled with cy <dig> or cy <dig> using reverse transcriptase . each amplified rna sample was labeled twice with cy <dig> and twice with cy <dig> giving  <dig> technical replicates for each leaf sample. two cy <dig> and c <dig> labelled samples  were mixed in different combinations for hybridization to microarray slides.

microarray analysis
microarrays  carrying  <dig>  arabidopsis gene probes  were hybridized with labeled samples at 42°c overnight. slides were washed and then scanned using an affymetrix  <dig> array scanner at  <dig> nm  and  <dig> nm . scanned data were quantified using imagene version  <dig> software .

individual text files quantifying the output for cy <dig> and cy <dig> were used in the further data analysis.

experiments with real datasets: small example
after testing our method on the synthesized datasets, we test our method on the arabidopsis data discussed above. we test our method on two samples of different sizes of the same dataset. we first test our method on a smaller sample of  <dig> genes belonging to three different categories of biological processes. this smaller sample helps us mimic the scenario shown by our synthetic model. the primary advantages of choosing the smaller dataset is that it helps us in minimizing the search space for ontological validation of clusters by mining on-line repositories which may not be complete for all the genes. later, we apply our technique on a larger dataset of  <dig> genes and study the clusters obtained and the general structural properties of the network.

for the smaller dataset, we selected  <dig> genes belonging to three different categories of biological processes according to the gene ontology  database  <cit> . the selected genes include genes which participate in maintaining the circadian rhythm of the plant, genes which are responsible for aging and the genes involved in plant death. we use the gene ontology  interface provided at the arabidopsis repository at tair http://www.arabidopsis.org/index.jsp to find the names of the genes which are experimentally confirmed to perform above mentioned biological functions. it should be noted that this interface does not provide any p-value associated with the go terms for the selected genes. this selection should be considered just as a weak indication of a gene performing the mentioned biological function. while verifying the results, we use another gene annotation tool   <cit>  which provides the statistical significance for the biological functions for the genes. we selected the time-series data for those genes from our microarray dataset described earlier. some of the selected genes had at profiles, i.e. the temporal expressions of the genes did not show much fluctuation across time. such genes were filtered out using the 2σ technique and discarded. we finally had a set of  <dig> genes responsible for circadian rhythm,  <dig> genes involved in the aging process and  <dig> genes participating in the cell death, total leading to a set of  <dig> genes. figure  <dig> shows the profiles of the selected genes.

the temporal profiles of genes were adjusted by taking the first difference of successive time points to obtain the stationary behavior. we then applied the causality test to all the pairs of genes in the system. a complete network with  <dig> genes has total links equal to  <dig> × () =  <dig>  in the second stage, for each  <dig> pair of node , we selected the maximum of the causality values for directions x → y and y → x and assigned that value as the weight for the edge between x and y. to further simplify the network, we applied a threshold corresponding to  <dig>  quantile of all the edge value to select the dominant edges in the network. the final network is presented in figure  <dig>  the network is arranged in a degree sorted layout.

the vertices with higher degree are bigger in size. the size of a vertex is decided according to the total degree associated with it. the biological relevance of the degree distribution of nodes in a biological network is discussed later in the paper.

to find the modules in the network, we applied the graph-theoretic approach discussed in the methods section. the approach detects densely connected regions in the network. dense regions are the maximally connected sub-components in the graph and may be representative of the complexes in the context of biological networks. the graph-theoretic analysis gives us  <dig> subgraphs presented in figure  <dig>  these subgraphs are obtained by setting the k-core value =  <dig> and the results are presented after trimming the nodes with single degree.

to verify our hypothesis that these subgraphs represent functional modules, we use the functional information stored in the gene ontology  database using the bingo tool. table  <dig> summarizes the information obtained for all the subgraphs. the first column in the table represents the go-id of the functional category stated in the functional description column. the genes in the table are grouped together to show the go category they belong to, along with their statistical over-representations in columns  <dig> and  <dig>  the p-values in column  <dig> are computed by the hypergeometric test which is exact and equivalent to an exact fisher test. to reduce the false discovery rates , a multiple testing correction  is applied and reported in column  <dig>  the functional description column lists the biological functions the corresponding genes are associated with. the 'known/total' column represents the ratio of genes known to perform a certain biological function in the go database with respect to the total number of genes having a reference in go. we can see that the number of known genes in go are less than the total number of genes submitted. this is due to the fact that the functional annotation of arabidopsis genomes is incomplete and a particular type of annotation for a gene may differ. we may find a gene that has go classification and no functional summary text, while other genes have functional summary text and no go classification, while others have no classification whatsoever.

the subgraph in figure  <dig> is composed of  <dig> genes .  <dig> out of the  <dig> genes are known in the go database. no annotations could be obtained for the remaining  <dig> genes .  <dig> out of the  <dig> known genes are clearly known as the genes participating in the circadian rhythm process. at5g <dig> is known to be associated with the regulation of flower development which is related to the circadian rhythm of the arabidopsis plant. gene at1g <dig> is wrongly classified as it is known to participate in the aging process. similarly, in the second network ), there are  <dig> genes in all.  <dig> of the genes have entries in go and no annotation could be found for the remaining  <dig> genes .  <dig> out of the  <dig> known genes are involved with the biological process of defense, immune response and cell death. at2g <dig> and at2g <dig> are known for 'response to stress'. gene at2g <dig> is classified for 'aging' and is the odd member in the network. the third network shown in figure  <dig> has  <dig> genes  with  <dig> of them known in the go database and  <dig>  are without any annotation.  <dig> out of the  <dig> annotated genes are known to participate in rhythmic activity. gene at5g <dig> is known for regulation of circadian rhythm . gene at5g <dig> is known for 'aging' and is wrongly put in this network. the last subnetwork shown in figure  <dig> is composed of  <dig> genes .  <dig> out of the  <dig> genes are known in the go database. all the  <dig> genes are known to participate in aging process of the plant. no annotations were found for genes at2g <dig> and at4g <dig> 

experiments with real datasets: bigger example
we next applied our method on a larger dataset of  <dig> genes selected according to their frequency profiles . we ranked the genes according to their power spectrum in frequency domain by taking a fast fourier transformation of the data, and chose the top  <dig> genes for analysis with our method. we constructed an association network for all the pairs of genes using the test for causality to detect the edges in the network. we applied a threshold corresponding to  <dig>  percentile of all the edge values to select the most dominant edges in the network for further analysis. we applied the dense region finding method on the network using different combinations of k-core score which resulted in a number of different clusters. we present some of the clusters we found in figures  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  the go descriptions of selected genes in the shown clusters is summarized in table  <dig>  the table reports the information in the same manner as it did in case of the smaller sized data sample.

simple network statistics
we computed certain network statistics to confirm that our network is not a randomly generated network and has the properties desired in a biological network. a total of  <dig> nodes were present in the network after filtering out weaker edges. the total number of edges present in the network was  <dig>  which is around  <dig> % of the total possible directed edges in the network, which is an indication of sparseness, a common characteristics of biological networks  <cit> . there is one connected component in the network indicating strong connectivity. the mean shortest path length is  <dig>  which means that most genes are close to each other and the network diameter representing the maximum distance between two connected nodes is  <dig>  both the phenomenon have been described as small world properties of real networks  <cit> . we also compute and report the following widely used topological properties for our network.

node degree distribution
we calculated the degree distribution p of the genes, measuring the probability that a given gene interacts with k other genes. barabasi and albert  <cit>  used the node degree distribution to distinguish between the topologies of random and scale-free networks. our network shows a power-law like distribution on log scale as shown in figure  <dig>  the plot shows that there are few nodes with large number of neighbors and they dominate the connectivity in the network. also, the tail of power-law distribution on normal scale indicates that highly connected vertices have a large degree of occurring. such networks exhibit preferential connectivity indicating that a new node will link to established nodes which are well connected, resulting in a structure where few hubs hold together numerous small nodes.

shared neighbor distribution
closeness centrality
closeness centrality is a measure of how fast information flows from a given node to other reachable nodes in the network. closeness centrality  of a network with n nodes is computed as the reciprocal of the average shortest path length is computed as follows: c =  where l is the length of the shortest path between two nodes i and j. figure  <dig> plots the closeness centrality of all the nodes against number of neighbors. the isolated nodes have their closeness centrality equal to  <dig>  an increasing trend of closeness centrality in our network further indicates strong connectivity and ability to form hubs.

topological coefficient
another characteristics of interaction networks can be captured by calculating the topological coefficients  <cit> . the topological coefficient, tc, is a relative measure for the extent to which a gene in the network shares interaction partners with other genes. also the topological coefficient as shown in figure  <dig> decreases with the number of links , demonstrating that, relatively, in our network, hubs do not have more common neighbors than genes with fewer links. this indicates that genes with many links are not artificially clustered together. moreover, it confirms the presence of modular structures in the network organization.

comparison with respect to other existing methods
in order to have a comparison of our proposed method with some existing methods, we use the synthetic datasets and the smaller arabidopsis dataset of  <dig> genes discussed in the earlier sections. we apply two widely used techniques to establish association between the pairs of genes in the dataset. the association between genes are measured using a) the pearson correlation coefficient and b) the euclidean distance. first, we computed the correlation coefficients and the euclidean distances for the node pairs in the synthetic datasets. the results are presented in table  <dig> and  <dig> respectively. we can see in table  <dig> that most of the correlation coefficients for the datasets are very low in magnitude. for dataset  <dig>  only the links between node  <dig> and node  <dig>  node  <dig> and node  <dig>  and node  <dig> and node  <dig> have highest magnitude close to  <dig> , the rest of the links show very weak correlation. similarly, in dataset  <dig>  only the links between node  <dig> and node  <dig> exhibit higher correlation of  <dig>  compared to the correlation shown by other node pairs in the dataset. in dataset  <dig>  we have no pair of node showing any significant correlation. the analysis of synthetic datasets using euclidean distance is presented in table  <dig>  it can be seen from the values in table  <dig> that the euclidean distance measure fails to give any clear indication of association between nodes in any dataset. our method of granger causality test produced much superior results compared to these methods as we saw in the results and discussion section. we then extend our comparison to the smaller arabidopsis dataset of  <dig> genes.

the small size and the knowledge about the functionality of genes are the main advantages of using the smaller dataset for arabidopsis. the small size of dataset also allows us to present the results in an easy-to-view graphical format. the genes in the dataset were arranged in an ordered fashion before computing the association between them, i.e., the first  <dig> in the dataset of  <dig> genes preformed circadian rhythm related activity, the next  <dig> genes were associated with aging, and the last  <dig> genes participated in cell death. figure  <dig> and figure  <dig> present the graphical representation of the association matrices obtained for the gene pairs using correlation coefficient and euclidean distance respectively. each cell in an association matrix is filled with a color based on the quantitative entry in that cell. the mapping of colors with the magnitudes of cells is displayed by the color-bars in the figures. we can see that the color coding starts from blue  to red . the strongly associated gene pairs are represented by shades of red in their respective cells. the diagonal entries of both the association matrices are drawn in dark red, indicating maximum degree of association between self-to-self pair. the association matrices are symmetric, thus, the inspection of only the lower diagonal entries should suffice in detection of strongly associated gene pairs.

in an ideal scenario, where the genes performing similar activity group together, we expect three distinct regions in figures  <dig> and  <dig>  the lower diagonal blocks from cell  <dig> to  <dig>  cell  <dig> to  <dig>  and cell  <dig> to  <dig> should indicate a high degree of intra-block association, each block should be colored in different shades of red according to the color-magnitude mapping shown in the color-bars. but, this is not the case in the figures obtained by us where we can see no clear blocks in the figures. the lack of any block-wise patterns in the color coded cells of association matrices indicate the absence of strong associative information between genes based on the measures discussed above. this is the first indication that the measures like correlation and euclidean distance may not be suitable for our dataset.

to investigate further, we applied a threshold to keep the strongest edges in the graphs obtained from the association matrices. the criteria to choose the threshold for selecting the strong edges in the graphs was same as the one used before in case of smaller arabidopsis dataset. the filtered graphs were analyzed using the graph-theoretic technique with the similar settings as used before. the correlation based associative graph resulted in two subgraphs shown in figure  <dig>  whereas the euclidean distance based graph did not yield any subgraph at all. the gene ontology analysis of the two subgraphs shown in figure  <dig> is presented in table  <dig>  we can see that in network  <dig>  three out of total six genes belonged to rhythmic process related activity, whereas, in network  <dig>  five out of total of twelve genes belonged to aging process. these networks and their related biological relevances are much inferior compared to the subgraphs obtained in section using our technique, where we obtained  <dig> distinct subgraphs with distinct biological functions and better gene ontology results.

we have used a fresh and distinct approach to cluster temporal microarray gene expression data. one of the key questions that we have tried to address using this method is that how some variables are useful for forecasting others. the proposed method facilitates a way to study such forecasting relationships between two variables. in other words, we are asking if a variable x can predict another variable y. equivalently, we can say if x is exogenous in time-series sense with respect to y or not. yet a third expression meaning the same thing is, if x is linearly informative about future y. the basic idea behind this method is, if an event x causes another event y, then x should precede y in time. this is why our illustrative models are based on time, and within that time frame the lags like t -  <dig>  t -  <dig>  ⋯ etc. denote the temporal association within the processes.

while discussing widely used pairwise association methods for clustering, like any form of correlation or distance based methods, the time is static. in these methods, the time does not play any role. the core of these methods rely on association rather than prediction. so if we re-order the sequence of observations for any pair of variables , the association measure between them does not change. as for example, let the original observation be x = {xt- <dig>  xt- <dig>  xt-3} and y = {yt- <dig>  yt- <dig>  yt-3}. the association measure using correlation/distance for  = c. after reordering of the observations, let x' = {xt- <dig>  xt- <dig>  xt-2} and y' = {yt- <dig>  yt- <dig>  yt-2}. the new association measure using correlation/distance for  = c' where c = c'. hence, this assumption is not suitable for dynamical systems. this is the reason why the usual pairwise association methods can give us less reliable results than the ones by our method. and hence a comparison between the two methods will not be fair. there has been some work in model based clustering methods based on bayesian statistics where the dynamics of profiles  have been used to create clusters  <cit> . such methods are different from our approach as, first, our approach is based on the frequentist approach rather than the bayesian approach, and second, the essence of our approach lies in detecting the causal association between genes. another important aspect to consider is the choice of time lag in our method which is decided using the aic criteria. the lag value is not fixed, but is chosen iteratively for each individual pair  according to what describes the variables best.

we have demonstrated the performance of the method using various artificial datasets and examples from real biological datasets. it is easy to see that the pair-wise association based techniques, like distance or correlation based measures, would not work as desired, when we are investigating a system where the interaction with respect to time is an important concept.

CONCLUSIONS
clustering helps in reducing the data dimensions by grouping genes with similar profiles or similar functionalities. in this paper, we proposed a clustering method to group functionally related genes in a temporal microarray dataset. our method exploits the temporal interdependence between genes. the interdependence was determined using the test of granger causality between two time series. the method is simple in its implementation, and testable at every stage. we analyze the association graph using a graph-theoretic method to detect the dense regions in the graph. these dense regions could be indicators of potential biological complexes and motifs. the graph-theoretic approach helps us in detecting the functionally interesting regions in a large network derived by the granger causality test. we test our approach using a set of artificial datasets and two datasets of different sizes belonging to the arabidopsis experiment. the functional similarity between genes belonging to detected clusters was verified using the publicly available gene ontology database. we further analyzed the structural properties of the association network obtained for the larger of the two datasets for arabidopsis. we show using different network characteristics that the computed association network is not a random network in its structure, and has the properties expected in a real biological network.

there are few considerations which should be taken into account while applying this approach. the data must be cleaned properly using appropriate normalization method to remove unwanted experimental biases. for any time-series based statistical method, it is important that the data has been collected at intervals which capture the natural changes in the system. selection of correct lag order using an information based criteria is also important as the test of granger causality is strongly dependent on that decision. due to the small number of time points in our dataset, we have used linear form of granger causality to establish relationship between genes in our model. it should be noted that granger causality test is not restricted to only linear models, and it can be readily extended to include non-linear terms in case we observe any non-linear behavior in the data. some examples of non-linear extension if granger causality can be found in the publication by ancona et al.  <cit>  and marinazzo et al.  <cit> . most important of all, the experimental design should be able to support the hypothesis of the practitioner. further care should be taken while discovering directional causal links using granger causality  <cit> . it should be noted that multivariate approaches instead of pair-wise to detect interactions between genes can give better result while re-engineering a causal network structure from data  <cit> . in this paper, our effort was not to detect a causal network structure from gene data, but to find a suitable association matrix based on interactions between them. once the interesting modules have been found, different reverse engineering methods like bayesian networks, structural equations etc. can be applied to infer causal networks from selected genes of interest.

