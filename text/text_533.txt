BACKGROUND
a cell must undergo the process of duplicating all its components and separating them, more or less evenly, to two daughter cells such that each daughter has the information and dynamics necessary to repeat the process. such cell cycle dynamics are known in more detail for the budding yeast, saccharomyces cerevisiae, compared to other eukaryotic organism 
 <cit> . the cell cycle process of budding yeast consists of four phases: g <dig>  s, g <dig>  and m. initiated by stimulation of the g <dig> stationary phase, the cell cycle sequence proceeds  and finally returns to the g <dig> stationary phase. it is important to reach the final phase after completing each phase properly since any mistakes can cause significant defect to the cell cycle process. hence, a cell verifies whether essential conditions are satisfied at checkpoints in g <dig>  s, g <dig> and m phases, respectively. before entering s phase, the cell must be large enough and have undamaged dna . before entering m phase, dna synthesis should be completed . in m phase, the chromosomes need to be properly aligned and the spindles need to be oriented towards the daughter cell , and the cell should be correctly divided into two, before the end of mitosis . the cell cycle can proceed to the next phase properly only if the above checkpoint conditions are satisfied.

among several approaches 
 <cit>  to capture the cell cycle process of budding yeast, one promising approach is to use boolean network modeling, which is a widely used modeling framework in systems biology 
 <cit> . claiming that boolean models are useful for representing the cell cycle regulatory networks since much of the biology seems to be reflected in the on/off characteristics of the network components, the first boolean model for the cell cycle regulatory network of budding yeast was introduced by li, et al. <cit> . even with such a simple representation, they found that there exists a prominent dynamic gene expression trajectory satisfying the checkpoint conditions, and then it leads back to the g <dig> stationary state. it was also observed that essential conditions are robustly preserved at checkpoints under network perturbations. however, since the model employed synchronous update rules to represent state transitions such that all the nodes update their states synchronously at the same time, it lacks the timing robustness analysis of essential properties.

timing robustness is the ability of a model to maintain its function in the presence of timing perturbations. among a few ways to introduce various timing variations, boolean modeling often uses an asynchronous updating of models. unlike the synchronous update rule, the asynchronous update rule allows a maximum of one variable to be updated at each time instant, and if multiple variables are enabled to change, one of them is chosen arbitrarily. in this way, variations in reaction rates can be represented depending on the order in which the nodes update their values . here it is important to note that this way can generate a large number of distinct state transition trajectories, possibly as many as the number of all different order combinations. and such all different trajectories reflect every possible timing variation under dynamically changing environments. however, such a large number of trajectories to explore make it difficult to perform timing robustness analysis through biological simulation, since such simulation generally involves randomness for trajectory selection.

the main goal of this study is to construct a timing-robust boolean model that properly preserves checkpoint conditions of the budding yeast cell cycle even in the presence of timing variations. towards this goal, we used a model verification technique, ‘model checking’ 
 <cit> , to cope with difficulties of timing robust analysis in conventional simulation based approach. model checking is a method for formal verification of finite-state systems. a model checker, a software tool of model checking, explores all possible state transitions  of a given model under fully asynchronous update rules. this way, we can then check exhaustively whether essential system properties always hold in the model or not. if the model contains a wrong state transition  that leads to a violation of system properties, a model checker automatically detects the hazard and produces a counter-example that can be used to pinpoint the source of the hazard.

in order to utilize model checkers, it needs to specify essential system properties in a form that model checkers can recognize, which is temporal logic 
 <cit> . hence, based on the extensive literature studies 
 <cit> , this study translates the critical checkpoint conditions of the budding yeast cell cycle into temporal logic formulas. it is worthy to note that such conditions should be properly preserved in order to proceed the cell cycle in the presence of timing variation. for example, an earlier wok by mangla, et al. <cit>  aimed to extend the li, et al.’s model towards a timing-robust model. though this earlier work was able to construct a model that preserves the g <dig> stationary state in a timing-robust manner, it fails to capture essential checkpoint conditions completely against variations in reaction rates. it is also turned out that the checkpoint conditions violated in the mangla, et al.’s model cannot be satisfied in the li, et al.’s model as well under timing variations. we observed that such inadequate sequences of state transitions can cause a significant failure of the budding yeast cell cycle by violating the m phase checkpoint conditions. in particular, the both models allow a division of a budding yeast cell into two before the completion of its full dna replication and synthesis. they have the gene expression trajectory that enables the gene cdc <dig> to be activated before the activation of the gene clb <dig>  and such out-of-order sequential dynamics lead a transit to the m phase without completing the g <dig> phase.

in this study, we present a timing-robust model that properly preserves all the essential checkpoint conditions against timing variations. the proposed model is the complete state-of-the-art model that guarantees no hazard in terms of checkpoints known to date. as a result, our model naturally eliminates the hazards contained in the previous models . our simulation results show that the proposed timing-robust model is more robust even against network perturbations and can better represent the nature of cell cycle than previous models. the key to the success of the cell cycle process is to completely capture the checkpoint conditions phase-by-phase even in the presence of variations in reaction rates. to our knowledge this is the first work that rigorously examined the timing robustness of the cell cycle process of budding yeast with respect to checkpoint conditions using boolean models.

RESULTS
in this study, model checkers, software tools of model checking, are used to examine whether or not a specified logical property holds on every possible state of a boolean model. the inputs to the model checker consist of a boolean model, described as a set of variables and rules that update their values, an initial state, and a logical property to check. in this study, previously published boolean models of the budding yeast cell cycle  and the stimulated g <dig> state are used as input boolean models and initial state to the model checker, respectively.

we derived the logical properties to check from essential checkpoint conditions of the budding yeast cell cycle. based on the comprehensive literature studies 
 <cit> , we found that the key regulators of the s, g <dig> and m phase checkpoints, clb <dig> and cdc <dig>  are lethal genes. the activation of clb <dig> initiates the m phase, and the activation and deactivation of cdc <dig> trigger the metaphase to anaphase transition and the exit from mitosis, respectively. since regulations of clb <dig> and cdc <dig> are closely related to the checkpoints, any damages of these genes can cause a fatal defect of the cell cycle process. each checkpoint condition is translated into a group of specific sequences of state transitions that can be derived by ordering pairs of state transition among clb <dig>  cdc <dig> and their interacting genes. for example, the m-metaphase checkpoint conditions can be rendered into two essential sequences of state transitions: clb <dig> activation should precede cdc <dig> activation; mcm <dig> activation should precede cdc <dig> activation. all essential properties derived from up-to-date checkpoint conditions are described in additional file 
 <dig> with supporting evidences. note that no property is derived from the g <dig> phase checkpoint because boolean models based on the li, et al.’s study do not completely include genes related to the checkpoint. any state transitions violating such essential sequences of state transitions are called hazards. in this study, we used the nusmv model checker 
 <cit>  to construct a timing-robust model that properly preserves up-to-date essential checkpoint conditions of the budding yeast cell cycle. with such logical properties as inputs, the model checker detected two hazards in the previously published boolean models  after conducting automatic and exhaustive state space search based on the fully asynchronous update rule. these hazards violate the m-metaphase  and m-telophase checkpoint , respectively.

timing robustness of the budding yeast cell cycle
the first hazard in the mangla, et al.’s model is shown in figure 
 <dig>  the hazard can lead the model to a biologically undesirable situation, in which it enters the m phase even though the dna synthesis process is not complete. it violates the property  <dig> of the m-metaphase checkpoint conditions . such inadequate state transition can occur when clb <dig> gets activated in the model. after clb <dig> transitions to  <dig>  both clb <dig> and mcm <dig> are enabled to change from  <dig> to  <dig> . there are two cases, depending on which of clb <dig> and mcm <dig> changes first. if clb <dig> changes first, the cell cycle normally proceeds to the m phase through the g <dig> phase, guaranteeing the completion of dna synthesis 
 <cit> . however, if mcm <dig> changes first, cdc <dig> is enabled to change from  <dig> to  <dig> . as shown in figure 
1d, the first hazard is detected when cdc <dig> transitions to  <dig> before the activation of clb <dig>  which means that the division of a cell into two can begin before the completion of dna replication. note that the activation of clb <dig> is required for the proper cell progression to the m phase and that cdc <dig> becomes active after clb <dig> phosphorylates apc core proteins  
 <cit> . there can be a further timing gap between the activation of clb <dig> and cdc <dig> in reality because, even if the phosphorylated form of the apc is bound to cdc <dig>  cdc <dig> becomes active only after the chromosomes properly align in the metaphase stage.

the mangla, et al.’s model can be revised to eliminate the first hazard by adjusting the weight of an edge. when the weight of the edge from clb <dig> to mcm <dig> decreases to a low level, it ensures that when clb <dig> is activated, only clb <dig> is able to be subsequently activated, but mcm <dig> is not . note that either of clb <dig> and mcm <dig> can be activated in any order in the mangla, et al.’s model. chen, et al. <cit>  supports this revision, showing that clb <dig> makes a stronger reaction to clb <dig> than to mcm <dig>  other works 
 <cit>  also support this revision, revealing that clb <dig> and mcm <dig> make positive feedbacks; mcm <dig> is activated by the low level activation of clb <dig>  and then the activation of mcm <dig> causes clb <dig> to be activated at a higher level of concentration in return. such a biological evidence was reflected in part to the mangla, et al.’s model such that clb <dig> has one of three possible values:  <dig>  representing a negligible concentration of clb2;  <dig>  representing a low concentration; and  <dig>  representing a high concentration. however, the mangla, et al.’s model does not capture the positive feedback completely. in the model, clb <dig> is able to be activated to at high concentration  without forming positive feedback. we revised the mangla, et al.’s model by eliminating the first hazard, and the revised model is able to capture the proper dynamics due to the positive feedback between clb <dig> and mcm <dig> 

the second hazard violating the properties  <dig> to  <dig> of the m-telophase checkpoint conditions  occurs after cdc <dig> transitions to  <dig> . since the activation of swi <dig> is mostly dependent on the activation of cdc <dig> 
 <cit> , swi <dig> should be activated when cdc <dig> transitions to  <dig> regardless of the activation level of clb <dig>  in the mangla, et al.’s model, however, swi <dig> is able to change its state only when the activation level of clb <dig> decreases to  <dig> from 2; if the concentration level of clb <dig> is  <dig>  swi <dig> remains deactivated until the level of clb <dig> becomes  <dig> even though cdc <dig> is activated. such inadequate state transition can cause the model to inevitably delay the exit from mitosis. the complete division of a budding yeast cell related gene, sic <dig>  is deferred to be activated since the activation of the transcription factor of sic <dig>  became delayed.

according to the study by chen, et al. <cit> , the activation of mcm <dig> causes swi <dig> to be transcribed at a low level, and then swi <dig> is activated at a higher level after cdc <dig> is activated. to capture this understanding, we revise the model so that swi <dig> also has one of three possible values:  <dig>   <dig>  or  <dig> like clb <dig>  in addition, the model is revised such that the reactions from cdc <dig> and clb <dig> make stronger and weaker impacts on swi <dig>  respectively. this revision ensures that swi <dig> is activated to  <dig> by its transcription factor, mcm <dig>  and then activated to  <dig> after cdc <dig> is activated regardless of the activation level of clb <dig>  since reduced inhibition from clb <dig> cannot dominate the level of transcription of swi <dig> anymore . in accordance with previous observation 
 <cit> , the model is additionally revised to have a weaker reaction from swi <dig> to sic <dig>  this revision guarantees the reaction from swi <dig> to have impact on the activation of sic <dig> only when the concentration of swi <dig> increases to the highest level of  <dig> 

figure 
2c represents the final hazard-free model for the budding yeast cell cycle. we found that the checkpoint conditions violated in the mangla, et al.’s model cannot be satisfied in the li, et al.’s model as well. to our knowledge, the proposed model is the first timing-robust model that properly captures up-to-date checkpoint conditions of the budding yeast cell cycle in the presence of variations in reaction rates.

temporal evolution of gene states for budding yeast cell cycle models
mathematical modeling based on biochemical rate equations, provides a rigorous and reliable tool for unraveling the complexities of molecular regulatory networks. however, this approach is only suited for small and well-characterized systems with known kinetic parameters since there is a lack of detailed knowledge of quantitative reaction kinetics for most of the reactions in a cell 
 <cit> . fortunately, the cell cycle regulatory system of budding yeast is most fully worked out, so its control system is revealed in exquisite details. the mathematical model of the budding yeast cell cycle has been published by chen, et al. <cit> , and the model is widely used due to its acceptable accuracy in explaining a real cell 
 <cit> .

to investigate how closely boolean models of the budding yeast cell cycle represent nature, we compared the temporal evolutions of gene states in boolean models to that in the mathematical model. note that the asynchronous update rule allows a maximum of one variable to be updated at each time instant, and if multiple variables are enabled to change, one of them is chosen in an arbitrary fashion. thus, too many different state transitions can exist under the asynchronous update rule. when applying the synchronous update rule to boolean models for simple comparison, we observed that the temporal evolution of gene states in the proposed model maintains a similar structure to those in the other boolean models overall. however, we also found that the extension from the mangla, et al.’s model leads some genes in the proposed model to evolve analogously to the dynamics of the corresponding genes in the mathematical model in some period, and such genes are closely related to the hazards which are eliminated during the extension.

as shown in figure 
3a, the mathematical model clearly shows a positive feedback between clb <dig> and mcm1: clb <dig> is transcribed at a low concentration in the interval from  <dig> to  <dig>  which is sufficient to activate mcm <dig>  and then clb <dig> is transcribed at a higher level at the time of  <dig> via the activation of mcm <dig>  the temporal evolution of the proposed model also forms positive feedback as shown in figure 
3d, but the other two models cannot result in such a relationship since both clb <dig> and mcm <dig> are activated simultaneously at the time of  <dig>  in the application of the asynchronous update rule, those previously published boolean models  can generate the hazard since cdc <dig> can be activated before the transcription of clb <dig> if mcm <dig> is activated first under the condition that both clb <dig> and mcm <dig> are enabled to change.

moreover, the temporal evolution of swi <dig> in the proposed model is closer to the dynamics of the gene in reality . consistent with the mathematical model, swi <dig> in the proposed model is first transcribed at a low concentration  at the time of  <dig> by the activation of mcm <dig>  it is then activated to a high concentration  at the next time step after cdc <dig> is activated. however, in the other boolean models, it is shown that swi <dig> is still in the inactive state even after mcm <dig> becomes activated. specifically, swi <dig> is deactivated until clb <dig> is degraded to the low level of activation regardless of the activation of cdc <dig> in the mangla, et al.’s model.

from this simulation, it appears that the proposed model follows similar dynamics as those in the other boolean models, even if the proposed model is extended from the others. in addition, in the proposed model, the temporal evolution of genes related to the extension shows better consistency with the one in the mathematical model of the budding yeast cell cycle. therefore, the proposed model which is constructed by eliminating hazards in the previous models better reflects the nature of cell cycle than the previously published boolean models.

relative durations of each cell cycle phase
many efforts have been made to discover checkpoints and key transcription factors responsible for phase transitions in cell cycles 
 <cit> . therefore, it is useful for cell cycle models to reflect properties on the duration of each phase in a cell cycle.

recent studies have assumed that every edge in the yeast cell cycle regulatory network proceeds with the same speed since transcriptions normally happen on similar time scales 
 <cit> . following this assumption, we compared the average length of state transitions in each phase in the models, referring to the relative duration of each phase in nature. the s phase begins when the state of the model is the same as the stationary g <dig> phase except that cln <dig> is  <dig>  table 
 <dig> shows that in the li, et al.’s model, the average length of the s phase is  <dig>  and the average length of the g2/m is  <dig> . in the mangla, et al.’s model, the average length of the g2/m becomes longer, which is  <dig> . these results are inconsistent with the experimental data, in which it was observed that the relative duration of the g2/m phase is twice as long as that of the s phase 
 <cit> . however, in the proposed model, the g2/m phase is almost twice as long on average than the s phase. in our understanding, this is because the s phase becomes shorter with our revision of the mangla, et al.’s model with regard to positive feedback between clb <dig> and mcm <dig>  and the g2/m phase becomes longer with our extension of swi5’s activation level, which produced additional state transitions to reach the end of the m phase.

consistent with the experimental data 
 <cit> , the average length of the g2/m phase is about two times longer than the one of the s phase, in the proposed model.

attractor analysis
we used the proposed model to study the attractors of the network dynamics by starting from each of the 29×32= <dig>  states in the 11-node proposed model with two 3-valued nodes. we found that all of the initial states eventually flow into one of the nine stationary states, also called attractors . the basin size of an attractor is the number of initial states which reach the attractor after a finite number of time steps. as seen in table 
 <dig>  there is one big fixed point which attracts  <dig>  or ≈ 94% protein states from  <dig>  initial states. this is consistent with a previous study 
 <cit>  which reveals that the model has one big attractor, and the dominant attractor is the biological g <dig> stationary state. interestingly, the basin size of the big attractor in the proposed model is much larger than the one presented in the li, et al.’s model . it is also larger than the one in the mangla, et al.’s model . it is obvious that the proposed model is more stable than the other models of budding yeast because the big attractor represents a cell’s stationary state, and the basin size is the largest in the proposed model. under normal conditions, a cell will be sitting at the state that the biggest attractor represents, waiting for another round of divisions.

each attractor is represented in a row. the first column is the size of the basin of attraction for the attractor. the other  <dig> columns show the protein states of the attractor. in the proposed model, the biggest fixed point representing the stationary g <dig> phase attracts  <dig>  or ≈ 94% from  <dig>  initial states.

each row and column represents the same as table 
 <dig>  in the li, et al.’s model, the biggest fixed point representing the stationary g <dig> phase attracts  <dig>  or ≈ 86% from  <dig>  initial states.

each row and column represents the same as table 
 <dig>  in the mangla, et al.’s model, the biggest fixed point representing the stationary g <dig> phase attracts  <dig>  or ≈ 90% from  <dig>  initial states.

number of different state transitions and timing robustness
table 
 <dig> shows the number of different state transitions for each cell cycle phase, and the major difference among the three models is found in the g <dig> phase. to investigate the relationships between the number of different state transitions and the timing robustness of the model, we introduced random mutations into the models. to perturb only an interested cell cycle phase, we applied mutations to edges related to the corresponding phase by deleting, adding, or re-weighting them. in this way,  <dig> mutant networks were generated, and then checked whether or not the dynamics of networks preserve the g <dig> stationary state as their global attractor under the fully asynchronous update rule using the nusmv model checker. in the phase transition from the g <dig> phase to the m phase, the mangla, et al.’s model was found to be vulnerable to mutations , and the fraction of timing-robust mutants holding the cell cycle property was much smaller than in the proposed model. it was even smaller than those from the other phases in the same model. this is interpreted to indicate that incomplete construction of the positive feedback between clb <dig> and mcm <dig> in the mangla, et al.’s model causes the g <dig> phase to be fragile to perturbations. in addition, the extension of the budding yeast cell cycle model by elimination of such hazards increases the number of viable state transitions to correctly arrive at the m phase from the g <dig> phase, which allows the proposed model to have about 10% greater timing robustness. the li, et al.’s model includes hazards which drives the model to different attractors rather than the g <dig> stationary state. thus, mutants of the model are also unlikely to hold the property, as shown in table 
 <dig> 

the major difference among the three models in terms of the number of different state transitions for each cell cycle phase is found in the g <dig> phase.

the second column represents the number of mutations applied to a model. to perturb only an interested cell cycle phase, we applied mutations to edges related to the corresponding phase by deleting, adding, or re-weighting them. in this way,  <dig> mutant networks were generated, and then checked whether they preserve the desired attractor, the g <dig> stationary state under the asynchronous update rule using nusmv. columns from third to fifth represent the fraction of timing-robust mutants in each model.

we conjecture that the network robustness of a model is closely related to the number of different biological state transitions which satisfy properties of the model. this is because even if some state transitions are altered by mutations, the remaining transitions are likely to hold biological properties of the model, and our simulation results demonstrate this.

limitations
the proposed model is the timing-robust model that properly preserves all the essential checkpoint conditions against timing variations. although the proposed model is the complete state-of-the-art model that guarantees no hazard in terms of checkpoints known to date, it still has a gap with quantitative models. our model is not yet directly applicable to explaining and predicting the quantitative outcome of biological experiments of the budding yeast cell cycle. quantitative models can potentially describe molecular interactions with high precision and in quantitative terms that correspond to realistic laboratory measurements. however, boolean models can still be used by a subset of researchers because of easy understanding of the dynamics of the budding yeast cell cycle. we expect that the proposed model can be used to help them by providing a more stable and timing-robust boolean model.

the main obstacle in application of model checking in practice is the state space explosion problem 
 <cit> . since model checkers should examine all the possible model states, the number of states can grow exponentially in the number of program variables. when verifying a large-scale biological system, it is intractable to explore the entire state spaces because they exceed computational limits . this problem is known as state space explosion. the last  <dig> years have seen various techniques for resolving the state space explosion problem 
 <cit> . in particular, several techniques have been introduced to decrease the number of states to be explored and the memory requirements needed for storing explored states, leading to substantial reduction in state space 
 <cit> . we further expect that biological experts can propose biology-specific insight and knowledge to state space reduction techniques, such as biological abstraction that allows a set of biologically equivalent states to be considered as a single symbolic state, resulting in significant state space reduction.

CONCLUSIONS
timing robustness analysis is one of the most important and challenging problems in systems biology 
 <cit> . it is critical for biological systems to maintain its essential dynamics robustly under various reaction delays in dynamically changing environments 
 <cit> . pointing out that time delays are common and substantial in gene regulatory networks, chen, et al. <cit>  proposed a method to design robust gene regulatory networks under biochemical timing variations and molecular noises. lopez-aviles, et al. <cit>  revealed that time delays have a significant influence on fundamental dynamics by showing that the unidirectionality of eukaryotic cell cycle transitions  can hold only after a certain amount of time delays of cyclin degradation.

boolean network modeling, which is now a widely used modeling framework in systems biology, requires timing robustness analysis since reaction kinetic parameters inevitably vary over a certain range. however, most researchers paid little attention to timing robust analysis so far and assumed that boolean models are updated in a synchronous manner, neglecting timing variations 
 <cit> . considering the importance of robustness of biological systems over timing variations, timing robustness analysis needs to be carefully considered in most boolean network models.

a number of experimental studies on budding yeast, saccharomyces cerevisiae, illuminated its cell cycle dynamics in greater detail than any other eukaryotic organisms 
 <cit> . such rich experimental results have fostered a growing attention to modeling of the budding yeast cell cycle network as it is recognized as a good benchmark example for studying the fundamental design principles behind the well-orchestrated behavior 
 <cit> . in particular, li, et al. <cit>  presented a yeast cell cycle network model that has brought a substantial influence on other studies on the yeast cell cycle. it provided a basis for constructing more robust models under stochastic environmental fluctuation 
 <cit> . other studies extended the li, et al.’s model by incorporating activation/deactivation delays with the auxiliary nodes 
 <cit> .

building upon the li, et al.’s model, mangla, et al. <cit>  was able to construct a model that preserves the g <dig> stationary state in a timing-robust manner, it fails to capture essential checkpoint conditions completely against variations in reaction rates. hence, we proposed here a timing-robust boolean model that properly preserves up-to-date checkpoint conditions of the budding yeast cell cycle. our model provides a basis for other subsequent further studies on budding yeast cell cycle analysis with boolean network models that would result in biologically more robust results.

boolean modeling and analysis of complex biological networks aim to provide a system-level understanding on complex biological phenomena 
 <cit> . in practice, however, constructing boolean network models from biological data typically requires a significant amount of manual efforts through repetitive modeling and checking processes; models are commonly revised iteratively until they conform with targeted essential behavior of biological systems 
 <cit> . model checking could facilitate such repetitive designing processes by performing automatic checking of biologically plausible models and suggesting new testable predictions upon every model-based simulation failure 
 <cit> . for instance, fisher, et al. <cit>  inferred new regulation of inductive and lateral signaling crosstalk of c. elegans according to the testable predictions suggested by a model checker and then confirmed the newly inferred regulation with biological experiments.

in systems biology, mathematical models are becoming too complicated to be validated by examining some essential dynamics in an ad hoc way. it becomes even more difficult to check manually whether a combination of dynamics  are met simultaneously in complex biological networks 
 <cit> . on the other hand, model checking can validate a set of essential functionalities and their combinations in an automatic manner. so, model checking can be beneficial to modeling and analysis of biological systems, particularly for developmental systems 
 <cit>  and cell-fate decision systems 
 <cit>  where it is crucial to maintain ordered dynamics over environmental variations. in this respect, our model checking-based approach can be useful and provide a systematic framework for robustness analysis.

