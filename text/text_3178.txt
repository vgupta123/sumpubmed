BACKGROUND
the shape of a protein is complicated by its many clefts, pockets, protrusions, channels and cavities. protein concavities offer a unique microenvironment for biological functions, such as ligand binding or enzymatic catalysis. protein shape is of great interest to medicinal chemists working in the drug discovery industry and looking for inhibitors, enzymologists interested in identifying substrate molecules based on the well known "lock and key" mechanism and protein chemists studying protein-protein or protein-dna interactions. the identification of protein pockets and cavities has been the focus of several studies  <cit>  and various algorithms have been developed for the calculation of protein volume and surface area. a large number of enzymes possess buried active sites that are connected to the external solvent environment by access routes . a catalytic step must always be preceded by the formation of an enzyme-substrate complex, which may require passage of the substrate through these routes. the size and shape of the access routes may become an important determinant of enzyme substrate specificity  <cit> . changes in the diameter of the access tunnels during the dynamic movement of a protein play an important biological role, such as that described for acetylcholinesterase  <cit> . two narrow active site gorges are positioned deep inside the protein core and movement of the residues making up the gorge walls is necessary to allow ligands access to the active site. a method based on molecular surface was used for the calculation of the gorge diameter in acetylcholinesterase. the diameter was defined as the maximum probe size that produces a continuous molecular surface between an active site and a solvent. calculation of one diameter in this approach requires the generation of several molecular surfaces using a series of probes of increasing size  <cit> . a more effective method is implemented in the cast program, which utilizes the alpha shape theory. cast computation of pockets and their openings does not require direct human interaction. the required inputs are atomic coordinates, van der waals radii, and the radius of the probe sphere  <cit> . the program voidoo, a component of o package utilizes a grid-based algorithm for detection, delineation, and measurement of protein cavities and solvent accessible pockets. the voidoo algorithm suffers from crude grid spacing and the "can-of-worms" phenomenon  <cit> . the central problem in the analysis of tunnels in protein structures is the identification of the centerline, i.e. spine, of a 3d object. algorithms dealing with centerlines have been applied to medical procedures, for example in virtual colonoscopy and bronchoscopy  <cit> .

the aim of this study was to develop a rapid and accurate algorithm for the identification of routes from buried active sites to the external solvent in static protein structures. we aimed to produce an algorithm that could also be applied to molecular dynamic trajectories. further, the algorithm was intended to allow changes in the radius of a channel gorge with time to be monitored and the most probable access routes to be identified. several other requirements were taken into consideration during development of the algorithm and its implementation:  speed, thus enabling rapid analysis of an entire trajectory from a molecular dynamic simulation, i.e. thousands of snapshots, in a few hours;  easy identification of a starting point for the calculation;  that the algorithm functions independently of the probe radius;  storage of paths in pdb format; and  intuitive visualization.

implementation
the algorithm
the most accessible path from the protein cavity to the bulk solvent has to be found by systematic exploration of the protein interior, in order to calculate the access route gorge radius . in our model, a protein consists of hard sphere atoms with appropriate van der waals radii. the protein body is modeled on a discrete three-dimensional grid space and all grid nodes are clustered into two classes: nodes located in the interior of the protein body  and nodes located outside the protein body. outer nodes can lie in the cavity, access tunnels or in the external environment of the protein, e.g. a bulk solvent. the convex approximation of the protein, termed the 'convex hull', is used to distinguish nodes that lie either in the interior or exterior of the protein . nodes that are located outside of the convex hull, are eliminated and not used in further calculations.

attention is paid to nodes that lie on a boundary of the modeled convex hull. these nodes are potential end-stops of the grid search algorithm because each boundary node can be treated as a putative outfall of the channel. the mathematical object, which is called a vertex-weighted graph, is constructed and the algorithm applied to identify the shortest low-cost path. each possible path from the active site to the exterior is evaluated as a positive value. this value represents the relative cost to navigate each path in what could be described as a "highway-toll". long and complicated paths are more "expensive", while the short direct paths are "cheaper" . more formally, the cost function c is defined  for the given path p as the sum of node-price-function values calculated for all nodes forming the path p. let n be the set of all points form the path p, then the c is expressed as

c=∑x∈nc.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqggoaakcqwgqbaucqggpaqkcqgh9aqpdaaeqbqaaiabdogajjabcicaoiabdiha4jabcmcapawcbagaemieagnaeyici4saemota4kaeiikagiaemiuaalaeiykakcabeqdcqghris5aogaeiola4iaaczcaiaaxmaadaqadaqaaiabigdaxagaayjkaiaawmcaaaaa@43e1@

this cost function depends on the number of nodes in each sum and, as such, this function is not suitable for the purposes of comparison. a normalized cost function is defined  to avoid cost function dependence on a summand number:

cn=1n∑x∈nc,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqdawgaawcbagaemoba4gabeaakiabcicaoiabdcfaqjabcmcapiabg2da9maalaaabagaegymaedabagaemota4eaamaaqafabagaem4yammaeiikagiaemieagnaeiykakcaleaacqwg4baecqghiiizcqwgobgtcqggoaakcqwgqbaucqggpaqkaeqaniabgghildgccqggsaalcawljagaaczcamaabmaabagaegomaidacagloagaayzkaaaaaa@479f@

where n is the number of the summand. next, the single node cost function c must fulfill two requirements. first, it must provide a positive value for each node and a low-value for nodes that are surrounded by empty space. second, it must identify preferred nodes that are surrounded by sufficient empty space to allow a hypothetical substrate to pass through a channel without risk of collision. these low-weighted nodes are preferentially selected by the search-algorithm. in our case, the cost function c for a single node was chosen 

c=1+ε) <dig>      
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbwycqggoaakcqwg4baecqggpaqkcqgh9aqpdawcaaqaaiabigdaxaqaaiabcicaoiabdkhaynaabaaaleaacyggtbqbcqgghbqycqgg4baeaeqaaogaeiikagiaemieagnaeiykakiaey4kascccigae8xtdumaeiykakyaawbaasqabeaacqaiyagmaaaaaogaeiilawiaaczcaiaaxmaadaqadaqaaiabiodazagaayjkaiaawmcaaaaa@462c@

where function rmax  is equal to the maximal radius of a hypothetical ball that can be inserted into node x just touching the protein surface. the small constant ε is here only for technical purposes to get rid of a singularity of the function in points where rmax  equals zero.

the graph-searching algorithm then establishes the lowest cost path from the active site to the external environment. the calculated path can be visualized  using the rmax radii for each node of the path. the smallest radius represents the channel gorge and as such the point coordinates can be determined together with the gorge radius rgorge.

implementation details
the method was implemented in the caver program  time) computes a convex hull for a given set of n points in three dimensions. the result of qhull was used to eliminate nodes located outside the convex hull. all points were investigated regardless of whether they lay inside or outside the convex hull. this can be achieved by traversing all facets of the convex hull and testing whether a point lies in the same halfspace as another convex hull point. this process takes o time, where n is the number of points inside the convex hull, and k is the number of facets forming the convex hull.

based on graph theory, several methods for the shortest path problem have been described. the most widely used algorithms are dijkstra's  <cit> , bellman-ford's  <cit> , a* search algorithm, and the floyd-warshall algorithm  <cit> . in our case, a positively vertex-weighted graph is plotted on a three dimensional grid, where the source vertex is known while the destination vertex is not. we used a modified form of the dijkstra's algorithm.

the dijkstra's algorithm effectively solves the problem of the shortest path from a single source vertex to the destination one. it was originally designed for edge-weighted graphs but its vertex-weighted variation is easy to implement. the algorithm can be used even if the destination vertex is unknown. in the main loop of the algorithm, the shortest path to the closest available vertex  is determined. then, estimates of the shortest path for all the adjacent vertices are updated. this means searching can be terminated if the nearest available vertex is the boundary vertex indicating that the shortest path has been identified. to speed up the algorithm, a modification related to the cost function was implemented. the single node cost function is evaluated as part of the main loop of the dijkstra's algorithm. the cost function is evaluated only at nodes where it is required.

the identified path can be easily visualized since the program writes a pdb file containing the coordinates of the path nodes accompanied by the maximum probe radius that touches the vdw protein surface . a user-friendly gui was implemented in the graphic program pymol  <cit> .

method performance
an algorithm to perform a skeleton search on a defined grid was developed and implemented in the caver program as described in the methods section. the algorithm developed automatically finds the easiest path from the starting point, typically located inside the molecule, to the exterior of the molecule. the identified path resembles a tunnel that connects protein clefts, pockets or cavities with the surrounding bulk solvent. the tunnel characteristics, e.g. length, mean radius and gorge radius are determined and can be further analyzed. in molecular dynamics trajectories it is possible to analyze time fluctuations of tunnel characteristics and construct a dynamic picture of tunnel behavior.

the tunnel gorge radius rgorge is one of the most important tunnel characteristics because the tunnel gorge can form a bottleneck for substrate access or product release to and from the active site of a protein. the radius rgorge as estimated by the algorithm is always underestimated in finite grids. the maximal error "max" of an rgorge estimation is expressed by the equation :

εmax⁡=32d,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacqwf1oqzdawgaawcbagagiyba0maeiyyaemaeiieaghabeaakiabcicaoiabdkhaynaabaaaleaacqwgnbwzcqwgvbwbcqwgybgccqwgnbwzcqwglbqzaeqaaogaeiykakiaeyypa0zaasaaaeaadagcaaqaaiabiodazawcbeaaaoqaaiabikdayaaacqwgkbazcqggsaalcawljagaaczcamaabmaabagaeginaqdacagloagaayzkaaaaaa@45f5@

where d is equal to the length of the grid cell edge. the probability of εmax realization is equal to zero and this error is overestimated, therefore the mean error should be defined. the mean error of rgorge determination is equal to :

〈εmax⁡〉=1v∭d3rdv≅ <dig> d,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqghpms4iigacqwf1oqzdawgaawcbagagiyba0maeiyyaemaeiieaghabeaakiabcicaoiabdkhaynaabaaaleaacqwgnbwzcqwgvbwbcqwgybgccqwgnbwzcqwglbqzaeqaaogaeiykakiaeyokjevaeyypa0zaasaaaeaacqaixaqmaeaacqwgwbgvaawaa8wuaeaacqwgybgccqwgkbazcqwgwbgvasqaaiabdsgaknaacaaameqabagaeg4mamdaaawcbeqdcqghrii8cqghrii8cqghrii8aogaeyyriakaegimaajaeiola4iaeginaqjaegioagjaemizaqmaeiilawiaaczcaiaaxmaadaqadaqaaiabiwda1agaayjkaiaawmcaaaaa@5aea@

and its variance and deviation equal to 

var⁡=〈εmax⁡2〉−〈εmax⁡〉2var⁡≅ <dig> d <dig> σε≅ <dig> d,     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqadegabaaabagagiodaynaeiyyaemaeiocainaeiikagcccigae8xtdumaeiykakiaeyypa0jaeyykjeuae8xtdu2aa0baasqaaigbc2gatjabcggahjabciha4bqaaiabikdayaaakiabcicaoiabdkhaynaabaaaleaacqwgnbwzcqwgvbwbcqwgybgccqwgnbwzcqwglbqzaeqaaogaeiykakiaeyokjevaeyoei0iaeyykjeuae8xtdu2aasbaasqaaigbc2gatjabcggahjabciha4bqabagccqggoaakcqwgybgcdawgaawcbagaem4zacmaem4ba8maemocainaem4zacmaemyzaugabeaakiabcmcapiabgqyixpaacaaaleqabagaegomaidaaagcbagagiodaynaeiyyaemaeiocainaeiikagiae8xtdumaeiykakiaeyyriakaegimaajaeiola4iaegimaajaegymaejaegyoakjaemizaq2aawbaasqabeaacqaiyagmaagccqggsaalcqwfdpwcdawgaawcbagae8xtdugabeaakiabgwkiajabicdawiabc6cauiabigdaxiabisda0iabdsgakjabcycasaaacawljagaaczcamaabmaabagaegonaydacagloagaayzkaaaaaa@7ee2@

the rgorge estimation should be corrected by adding  <dig> d to the rgorge. the corrected rgorge estimate has a mean error value με =  <dig> and the variance of error is var =  <dig> d <dig>  in the case of a globular protein  the εmax  costs  <dig>  Å for a grid with d =  <dig>  Å, however, the mean ε equals  <dig>  Å, and σε =  <dig>  Å. the results of the tests  focus on the convergence of the identified paths with d decreasing from  <dig>  to  <dig>  Å.

performance of the method is given as the tunnel volume i.e. number of vertexes searched rather than the number of atoms. in the case of haloalkane dehalogenases  the typical calculation of one tunnel takes about 10– <dig> sec. but in the case of cytochrome p <dig> 2c <dig> or 3a <dig>  the calculation takes about 20– <dig> sec. in case of very large cavities  calculation may take several minutes at low resolution . the program performance was tested on pentium iv  <dig>  ghz machine with  <dig> gb ram running on windows xp professional operating system.

RESULTS
case study
haloalkane dehalogenases  are microbial enzymes that cleave a carbon-halogen bond in a broad range of halogenated compounds  <cit> . the molecular structures of three different haloalkane dehalogenases are known: dhla from xanthobacter autotrophicus gj <dig>  <cit> , dhaa from rhodococcus sp.  <cit>  and linb from sphingomonas paucimobilis ut <dig>  <cit> . the overall shape of haloalkane dehalogenases is globular, with the active site buried between the main domain of an α/β hydrolase fold and a cap domain with a uteroglobin fold. there are three access routes connecting the protein surface with the active site, denoted the main tunnel, the upper tunnel and a slot . the three proteins differ in the number of routes that provide access to their active site: linb has the most available active site, accessible through three tunnels. the active site in dhaa is accessible through the upper tunnel and the slot, while dhla is believed to have a single accessible route via the main tunnel  <cit> . here we used caver to conduct a thorough analysis of the access paths using all available x-ray structures and pre-calculated molecular dynamics trajectories.

analysis of x-ray structures
analysis of fifteen available crystal structures of the dhla enzyme  revealed two similar access routes . the main tunnel was identified as the most accessible route in nine of the structures . in six structures, the most accessible tunnel was equivalent to the slot in dhaa and linb. the gorge, i.e. the bottleneck, of the main tunnel is made up of w <dig>  l <dig> and h <dig>  the gorge of the slot is formed by p <dig>  f <dig>  f <dig> and the backbone by g <dig>  k <dig> and l <dig>  in the next step, a more systematic analysis was conducted to identify additional paths. four paths were calculated for each structure and averaged . caver found that, in each case, two tunnels were equivalent to previously described paths, i.e. the main tunnel and the slot. two other paths had significantly higher cost function and a narrower gorge , making it less likely that they fulfill a biological role. we note that the crystallographic analysis  <cit>  revealed one access tunnel, while two parallel access paths were deduced from the kinetic data  <cit> . the existence of the second tunnel in dhla provides an additional explanation for the elevated activity of f172w with 1-chlorohexane, which is attributed to the increased flexibility of the 'helix-loop-helix' region  <cit> .

the three crystal structures available for the dhaa enzyme  were analyzed for the presence of access routes. caver detected one clearly preferred route, which corresponded to the upper tunnel. the gorge of this tunnel is made up of w <dig>  f <dig>  a <dig>  f <dig>  v <dig> and c <dig> . the additional paths were located in the slot . the slots of the three structures studied showed a slightly different spatial position and variable size with respect to the mean gorge radius, mainly due to repositioning of the side-chain r <dig>  the cost function of these routes was almost twice that of the upper tunnel , but still comparable with the main tunnel and the slot of dhla, which are known to be involved in substrate binding and product release. exchange of solvent molecules between the active site and the slot was observed during a 1ns molecular dynamic simulation  <cit> .

analysis of eleven available linb crystal structures  identified the lower tunnel as the most accessible access route in nine of them . the gorge of this tunnel is made up of p <dig>  d <dig>  l <dig> and a <dig>  the upper tunnel was identified as the most accessible route in two out of the nine structures. the gorge of the upper tunnel is formed by d <dig>  f <dig>  v <dig> and l <dig>  systematic searches of the four tunnels in the structures revealed the slot as another possible access route . the cost function of this route is, however, twice that of the lower tunnel . its gorge is formed by d <dig>  p <dig>  l <dig>  g <dig> and m <dig>  previous molecular dynamics simulations  <cit>  demonstrated that all three access routes can be used in the exchange of water molecules between the active site and the bulk solvent. the existence of alternative export routes explains the activity of linb mutants that carry a large amino acid residue at position l <dig>  <cit> . l <dig> is located inside the lower tunnel and its substitution may result in closure of this tunnel.

analysis of molecular dynamics trajectories
a molecular dynamics simulation of the dhla enzyme was analyzed using caver to determine the easiest routes from the active site. about  <dig> snapshots taken at  <dig> ps intervals were analyzed, the tunnels identified and their corresponding gorgeswere further analyzed by visual inspection . caver identified two clusters of gorges that correspond to two different paths. the most populated tunnel gorges  are located in the main tunnel and the other remaining gorge clusters are located in the slot.

as in the previous case, the molecular dynamics simulation of the dhaa enzyme was analyzed using the caver program. two main clusters were identified by caver, one having two subclusters  of gorges resulting in three different paths,. the most populated access gorges  were located in the upper tunnel and the two remaining gorge clusters were positioned in the slot. the two subclusters in the slot  have populations equal to 26%  and 10% , respectively. analysis of the linb molecular dynamics trajectory identifies the main tunnel as the most accessible route to the active site .

CONCLUSIONS
a new algorithm for the identification of tunnels in large molecular systems was developed and implemented in the caver program, which is available within the public domain. the algorithm automatically explores a grid, which is constructed over the molecule and stripped to its convex hull. nodes are evaluated using a cost function, which determines the amount of free space around the node. the grid search algorithm is used to find the lowest-cost centerline path between a given starting point and the surface of the molecule. the user needs only to provide the molecular geometry, atomic van der waals radii and the designated starting point, to enable the analysis of any molecular system be it protein, nucleic acid or inorganic material. the algorithm is sufficiently rapid and robust for the routine analysis of molecular dynamics trajectories that contain thousands of snapshots. the program is also available as a plug-in for pymol and, additionally a web-based version of the program offers analysis of static protein structures online.

availability and requirements
project name: caver;

project home page: ;

operating systems: unix/linux, windows;

programming language: c++;

other requirements: qhull package required 

licence: caver licence;

any restrictions to use by non-academics: licence needed.

authors' contributions
mp developed the algorithm for search of access paths, wrote and tested the software, prepared initial draft of the manuscript and prepared web pages; mo developed concept of the software, conducted performance tests, wrote parts of the manuscript and prepared graphic material for the web; pb contributed ideas on algorithm and conducted statistical analyses; pk conducted performance tests; jk financially supported mp; jd contributed fundamental biochemical concept and interpreted data, wrote parts of the manuscript, contributed ideas on web pages and coordinated project.

supplementary material
additional file 1
source codes of caver. additional file  contains source codes of caver ver.  <dig> . <dig> for unix platforms and pymol plug-in. instructions for the installation and updates are provided at web page .

click here for file

 acknowledgements
the authors express their thanks to petr kulhánek  for his valuable suggestions. this work was supported by the czech ministry of education and the grant agency of the czech republic . j.d. is funded by an embo/hmmi young investigator grant.

figures and tables
aannotation of paths is provided in figure  <dig>  rrgorge – gorge radius; c – mean cost function; l – mean length of the tunnel. the values are averaged over all available x-ray structures.
