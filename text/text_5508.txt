BACKGROUND
a detailed understanding of protein folding energetics is fundamental for ab initio prediction of protein 3-d structures from sequences, for the rational engineering of new proteins, and for understanding diseases related to protein misfolding or aggregation  <cit> . the unfolded state of proteins is central in developing the theoretical framework of folding processes because it represents the starting point from which proteins evolve to the native state. the hydrophobic effect operating on apolar side chains is an important factor driving protein folding  <cit> , and the change in solvent accessible surface area  of a protein upon folding can be used to estimate the contribution of the hydrophobic effect to the free energy of folding  <cit> . empirical models relate changes in sasa  upon folding to the heat capacity, enthalpy, or entropy of folding, and to equilibrium m-values in chemical unfolding  <cit> .

the sasa of a protein was defined  <cit>  as the surface described around the protein by the centre of a solvent sphere in contact with the van der waals surface of the molecule. experimental determination of accurate sasas of folded proteins at the atom level is not yet possible. fortunately, computation of sasa values in the native state is straightforward when 3-d structures are available. accurate sasa values for the unfolded state are not only difficult to determine but also difficult to calculate. in attempts to calculate the changes in sasa associated to the protein folding reaction, a variety of models of the unfolded state have been proposed. they include tripeptides  <cit> , peptide-fragment collections in both native and extended conformations, extracted from a set of native structures  <cit> , ensembles of ac-3-x-3-nme peptides  <cit> , and ensembles of polypeptide conformations of a specific selected protein  <cit> . a common characteristic of all these models, but the last one, is that they provide mean solvent accessibilities for the  <dig> residue types, but they do not take into account the possibility that these accessibilities are modulated by the specific sequence context of the residue of interest.

we have recently developed a way to estimate sasa at atomic resolution in the unfolded ensemble. the method provides individual sasas for each atom of each residue in a given protein sequence  <cit> . the structural model chosen to describe the unfolded state consists of hundreds to thousands of unfolded conformations generated by flexible-meccano, an algorithm that performs conformational sampling using a coil-library and a simple volume exclusion term  <cit> . the ensembles generated in this way successfully describe backbone fluctuations of several intrinsically unfolded proteins probed by nuclear magnetic resonance  and small-angle x-ray scattering   <cit> . our analysis of solvent exposures in unfolded ensembles of proteins generated with this method clearly indicates that the sasa of any residue is strongly influenced by its sequence neighbours  <cit>  and, therefore, using generic residue-type values is not justified. a detailed benchmarking of the method has been described  <cit> .

here, we present a web application that calculates sasa of protein unfolded-state ensembles, detailed per residue and atom, using the methodology described  <cit> . as far as we know, only two related servers exist. bppred  <cit>  calculates, from the number of residues, an overall protein change of sasa upon folding. unfolded implements the approach by  <cit> , which is based in generic residue-type values. none of these two servers calculates sasa values on a sequence specific representation of the unfolded-state ensemble of the protein of interest. in this sense, protsa is an innovative web application that will provide researchers with more accurate accessibility data for the parameterization and interpretation of protein folding thermodynamics.

implementation
protsa architecture consists of three parts: the user web browser, a middle tier common gateway interface  application running on a web server, and the server part that calculates sasa of the protein unfolded-state ensemble. the server part uses three external software programs to perform the calculations: flexible-meccano for backbone-conformation generation, sccomp <cit>  for side chain building, and alphasurf <cit>  for sasa calculations of each conformation of the unfolded ensemble of the requested protein. the interaction between the protsa parts is as follows: the user fills in the input form using the web browser; the browser sends the input data to the cgi application, which checks its completeness and validity, and redirects complete and valid requests to the server part; the server part is a multithreaded program, with one network thread for receiving requests, and several worker threads for processing requests ; the network thread receives the request from the cgi application, checks for resource availability and replies to the cgi application with an acceptance or refusal message; the cgi application informs the user whether the request is accepted or not, with the reason for refusal in the latter case; if resources are available, the network thread in the server part queues the request and, when a worker thread becomes available and no earlier requests are queued, that worker thread processes the request, calculating sasa of the protein unfolded-state ensemble; finally, the worker thread emails the results to the user. both the cgi application and the server part were programmed using c++.

protsa basically follows the method shown in  <cit>  for calculating sasa of a protein unfolded-state ensemble, though protsa uses alphasurf instead of naccess <cit>  for the calculations of each unfolded-state protein conformation. alphasurf was chosen because it uses an exact analytical method  and is free software; the results section shows that alphasurf and naccess give very similar results. the steps of the protsa method are:

 <dig>  check that all residues in the protein sequence belong to the set of  <dig> standard types. if the user provides a 3-d structure, check it for gaps or missing atoms.

 <dig>  generate, from the protein sequence, a set of unfolded-state backbone-only conformations using flexible-meccano.

 <dig>  add side chains to each conformation using sccomp.

 <dig>  calculate sasa of each conformation using alphasurf. obtain mean values per residue and per atom.

 <dig>   calculate sasa for the 3-d structure  using alphasurf. calculate differences between folded and unfolded sasa, per atom and per residue.

flexible-meccano's monte carlo algorithm for generating the backbone of the unfolded-state conformations uses a subset of the database of amino-acid-specific Φ-and Ψ-torsion angles described in  <cit> ; the subset is obtained by exclusion of all residues in α-helices and β-sheets. the database includes symmetric values for glycine Φ- and Ψ-torsion angles, and has special cases for residues preceding a proline. for each protein unfolded-state conformation the algorithm constructs the backbone starting at the c-terminal, although it has been shown that building directionality does not influence sasa results  <cit> . residue i is connected to residue i+ <dig> by selecting a random pair of Φ- and Ψ-angles, for the type of residue i, from the torsional subset database. if residue i presents clashes with other residues , the Φ- and Ψ-torsion-angle pair is rejected, and another one is randomly selected. if, after  <dig> tries, the algorithm does not find a non-clashing Φ-and Ψ-torsion-angle pair, the partially-built conformation is rejected and the algorithm starts again at the c-terminal residue.

a key factor to the sequence-specificity of sasas calculated for unfolded ensembles is the decoration of each polypeptide backbone with energetically realistic conformers of the sequence residues. this is performed using the iterative method implemented in sccomp. using the rotamers of a backbone-dependent library, and a backbone independent one for special locations in the protein chain , sccomp assigns rotamers, residue by residue, optimizing a scoring function with terms accounting for atom-atom contacts, steric overlaps, torsion energy, and the hydrophobic effect. sccomp repeats the complete assignment of rotamers to the protein residues until either there is no change in structure in two consecutive iterations or the limit of allowed iterations is reached.

RESULTS
the original method described to calculate solvent accessibilities in unfolded ensembles  <cit>  used naccess, while the protsa application relies in alphasurf. we have compared the performance of these two methods by recalculating unfolded solvent accessibilities for the set of  <dig> proteins used in the original implementation. another popular program to calculate exposures, dssp  <cit> , yields values 5% higher than those of naccess and alphasurf .

the results of the new calculations performed with alphasurf are shown in table  <dig> compared with those obtained with naccess and previously reported  <cit> . the two algorithms provide very similar exposures for the same protein with overall sasa values differing less than  <dig> %. the average, minimum and maximum sasa accessibilities found for each residue type within the unfolded ensembles of the  <dig> proteins are shown in table  <dig>  differences with the original data reported  <cit>  are also minimal. for average residue sasas, the biggest difference  is for methionine , and the mean of the differences observed for all the residues using the two methods is  <dig> %. similarly, for the minimum value of sasa found for each residue type within the  <dig> ensembles, the biggest difference is at  <dig> % for one specific threonine residue, with a mean of  <dig> % for the twenty residue types. for the maximum sasa values for residue types, the biggest difference is  <dig> % for one specific glutamic acid residue . the main utility of protsa calculations is that they can highlight strong divergences in the exposure of specific residues from the average values exhibited by their corresponding residue types in the unfolded ensemble . these divergences are sequence context dependent and can only be revealed with sequence specific calculations.

1solvent accessibilities  calculated with protsa, using alphasurf. they are averaged over  <dig> unfolded structures of each protein. the first and the last five residues of each sequence are not taken into account.

2solvent accessibilities  calculated with naccess in otherwise identical conditions .

1total number of residues of that kind found in the  <dig> protein sequences simulated.

2residue-specific solvent exposure averages. the numbers in parenthesis were calculated with naccess 

3minimum solvent exposure found in one of the  <dig> denatured ensembles.

4maximum solvent exposure found in one of the  <dig> denatured ensembles.

5percentage difference between maximum and minimum solvent exposures found for one residue type: 100/max

protsa is available at  <cit> . the input web form in protsa is very simple . the user can supply a protein sequence, a pdb-formatted file, or a pdb id. the user must also specify the number of protein conformations to generate, and the radius of the solvent probe. specification of probe radius may be used for calculating surface accessibility to different ions, not just water molecules. the user also specifies the email address where protsa will mail the results. when the user supplies a protein sequence , protsa calculates only the sasa for the unfolded ensemble. when the user supplies a pdb file or a pdb id , protsa also calculates the sasa for the 3-d structure, which is assumed to represent the folded state. protsa emails the user the calculated results. for each atom and residue, the results include the average sequence-specific sasa in the unfolded ensemble and, if it was calculated, the sasa in the folded state, and the difference .

to highlight those residues with unusually high or low exposures in the unfolded ensemble relative to typical values , the protein sequence is also returned colour-coded so that underexposed residues appear in a gradation of red colours and overexposed ones in a gradation of blue colours . this plot allows detecting residues that are more exposed than expected, either because they appear in terminal regions, or because they are surrounded by small residues. when protsa calculates sasas for the folded state, two additional colour-coded protein sequences are returned. one of them  depicts residues comparing their folded sasa values to those of the average folded sasa of the  <dig> residue types in an 11-protein subset of the  <dig> test-sequences . the other one  depicts, for each residue, the ratio between its folded sasa and its unfolded sasa. in addition, the original pdb file is returned with those sasa ratios replacing the b-factors, to allow a straightforward three-dimensional visualization of exposure changes associated to protein folding . two examples illustrate the usefulness of these coloured sequences for pinpointing residues that may significantly contribute to protein stability as a consequence of unusually high or low solvent exposures. the first one refers to a classical  <dig> article  <cit>  where a reverse hydrophobic effect on tyr  <dig> of the λ-cro protein was proposed, based upon an estimated  <dig> -fold hyper exposition in the folded state compared to that in the unfolded state. subsequent studies refuted this proposal by showing that the ratio was close to  <dig>   <cit> . protsa, using a more detailed model of the unfolded state, clearly supports the latter studies. it only requires the user a single look at the coloured ratio sequence  where tyr  <dig> appears on a white background, to grasp that the folded-to-unfolded ratio is close to  <dig> . on the other hand, inspection of the folded sequence  reveals that the exposure of this tyrosine residue in the folded state is well above average, which could have influenced the initial interpretation. the second example refers to thr  <dig> in the v36t mutant of rnase sa. compared to the wild type protein, the presence of a threonine at position  <dig> destabilizes the folded state  <cit> . protsa depicts thr  <dig> in the ratio sequence on an orange background , which visually indicates this residue losses a large percentage of its solvent exposure upon folding, and is expected to destabilize the folded conformation. incidentally, the ratio sequence for this protein shows that additional polar residues appear more buried in the folded conformation than in the unfolded ensemble. to asses whether they are likely to destabilize the native conformation their local environments should be analysed. they may establish appropriate compensating polar interactions or else they should be considered as potentially destabilising residues.

from the execution times of the  <dig> test proteins in a computer running centos  <dig>  with  <dig> gb of ram and a core  <dig> duo- <dig>  ghz cpu  we can deduce a linear dependence on the size of the input sequence. for the more demanding requests corresponding to ensembles of  <dig> protein molecules there is a fix cost of about  <dig> minutes and a variable cost of about  <dig>  minutes per residue in the sequence.

CONCLUSIONS
protsa, the freely-available web application presented in this work, represents a novel tool for the researcher interested in protein folding energetics. the sequence-specific protein solvent accessibilities in the unfolded state ensemble calculated by protsa will provide researchers a more precise view of unfolded state ensembles, and will help to understand the influence of mutations on protein stability.

availability and requirements
project name: protsa

project home page: 

operating system: platform independent

programming language: c/c++

other requirements: javascript-enabled web browser

any restrictions to use by non-academics: none

authors' contributions
je developed protsa. pb and js directed the design. mb created software parts. all authors wrote the manuscript, and read and approved the final version.

