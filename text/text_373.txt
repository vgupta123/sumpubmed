BACKGROUND
the prediction of rna structure has received increasing attention over the last decade as the number of known functional rna sequences, called non-coding rna , has increased  <cit> . these new ncrna sequences range in size from micrornas to xist  <cit> . they serve numerous roles, from modulating gene expression  <cit>  to catalyzing reactions  <cit> .

one of the first steps to understanding the mechanism of action of an rna is to determine its structure  <cit> . secondary structure, defined as the set of canonical base pairs , can be determined using comparative analysis if a large number of sequences are available  <cit> . in comparative analysis, base pairs are determined when they are conserved in multiple sequences and instances of compensating base pair changes occur. compensating base pair changes demonstrate the conservation of structure in spite of sequence not being conserved, for example a gc base pair in one sequence being replaced by a homologous au pair in another sequence. comparative analysis, however, requires both significant user input and a large number of homologous sequences that can be aligned.

as an alternative to comparative analysis, the secondary structure of an rna can be predicted for a single sequence using thermodynamics  <cit> . the thermodynamic methods are based on nearest neighbor rules that predict the stability of a structure as quantified by folding free energy change  <cit> . often, structure prediction is accomplished by finding the lowest free energy structure, which is the single most probable structure in a folding ensemble  <cit> . alternatively, structures can be sampled from the boltzmann ensemble and a centroid, i.e. representative structure, determined  <cit> . another alternative method for structure prediction is the prediction of a structure with the highest sum of pairing probabilities, called the maximum expected accuracy structure  <cit> .

single sequence secondary structure prediction is reasonably accurate. on average, for sequences of fewer than  <dig> nucleotides, the accuracy of predicting known base pairs is as high as 73%  <cit> . the accuracy, however, benchmarked lower when longer sequences were included  <cit> . additional sources of information can be used to improve accuracy. for example, base pair probabilities can be determined using a partition function and highly probable pairs are more likely to be correctly predicted pairs  <cit> . alternatively, using two or more homologous sequences to determine a conserved structure can result in significantly more accurate structure prediction  <cit> . experimental data, such as enzymatic cleavage  <cit> , chemical mapping  <cit> , oligonucleotide array binding  <cit> , shape  <cit> , and nmr data  <cit>  can all be used to improve structure prediction accuracy.

in addition to structure prediction, the thermodynamic methods can be applied to other problems. for example, antisense oligonucleotide and sirna design can be improved using thermodynamic predictions of self-structure in the oligonucleotides and target  <cit> . sequences can be designed to fold to a specific structure  <cit> . reverse-pcr primers can be designed to avoid self structure in the template that could prevent hybridization  <cit> . novel types of ncrnas can be found in genomes on the basis of folding stability  <cit> .

in this contribution, the rnastructure software package is described. rnastructure first appeared in the literature in  <dig> as a secondary structure prediction package  <cit> . at that time, it contained a method to predict the lowest free energy structure and a set of low free energy structures  <cit> . it was subsequently expanded to include bimolecular folding and hybridization thermodynamics with oligowalk  <cit> . it was then expanded to include an algorithm for finding lowest free energy structures common to two sequences, dynalign  <cit> ; a partition function algorithm  <cit> ; an alternative prediction method that can determine all low free energy structures for a sequence  <cit> ; and stochastic sampling of structures  <cit> . it provides methods for constraining structures with enzymatic data  <cit> , chemical mapping data  <cit> , shape  <cit> , and nmr data  <cit> . finally, recent extensions include parts  <cit> , which calculates partition functions for secondary structures common to two sequences and can perform stochastic sampling of common structures  <cit> ; maxexpect, which finds maximum expected accuracy structures  <cit> ; and a method for removal of pseudoknots, leaving behind the lowest free energy pseudoknot-free structure  <cit> . several tutorials exist for using rnastructure  <cit> .

rnastructure has been publicly available with a user-friendly interface for microsoft windows. testing and development occur in-house using unix/linux text-based interfaces, but these have generally been available only upon request. the package is coded in c++. extensive benchmarks of individual components have been published  <cit> .

here, three major extensions of rnastructure are reported. first, a new java-based graphical interface  is available. this interface functions cross-platform and binaries are available for apple os-x and linux. second, text interfaces are now available for each component of the package. these interfaces use a standard unix syntax and include online help. binaries for the text interfaces are available for microsoft windows and source code, including makefiles, are available for download. finally, a new class library is available for programmers who want to incorporate the rnastructure functions into c++ programs. each of these components is available for download and covered by the gnu public license, version  <dig> 

implementation
c++ class library
the c++ class library encapsulates the i/o functions of rnastructure and also the secondary structure prediction and analysis methods. four main classes are provided for accessing these functions: rna, for single sequence structure predictions; dynalign_object, for dynalign calculations  <cit> ; hybridrna, for bimolecular structure prediction  <cit> ; and oligowalk_object, for oligowalk  <cit>  and oligoscreen  <cit>  calculations. two other notable classes are utilized by inheritance by the four main classes. thermodynamics is a class that handles reading and storage of the nearest neighbor parameters. tworna is a class that contains two rna classes and is inherited by dynalign_object and instantiated by hybridrna. a class inheritance diagram is provided as figure  <dig> 

the classes are designed to be easily included in c++ projects. the classes are compiled to linux/unix shared libraries, windows dynamic link libraries, or macintosh dynamic shared libraries. an included makefile provides facility for this. furthermore, the header  files are commented using doxygen-formatted comments that facilitate the creation of a manual http://www.stack.nl/~dimitri/doxygen/. programmers can either compile their own manuals into html or latex using doxygen or they can refer to precompiled html manuals included in the source code and posted on the rnastructure website.

text interfaces
the new text interfaces are designed to provide the features of rnastructure for use on the command line and in scripts. most programs available in the graphical user interfaces are provided with text interfaces. each of these programs provides a brief description of the parameters when invoked without parameters. additionally, invoking most programs with "-h," "-h," or "--help" will return a more detailed description of the parameters.

the text interfaces are built with ansi-standard c++. makefiles are included for compiling the programs in a unix/linux/os x environment. binaries for microsoft windows are also available for download.

the rnastructure class library is used to implement most of the functions in the text interfaces. therefore, the text interfaces can be used as tutorials by programmers implementing the rnastructure algorithms in their own programs.

java graphical user interface
the new java gui is a cross-platform re-implementation of the rnastructure windows gui. this is designed to be user-friendly to make these algorithms accessible to a large audience. executables are available for apple os-x and both 32-bit and 64-bit linux. a makefile is provided to facilitate local compilation on unix/linux environments.

the java gui utilizes the new rnastructure c++ class library to implement the algorithms. the connection between the java front end and the c++ back end is made using swig http://www.swig.org/. swig wraps the c++ classes, making them accessible to java. the swig-wrapped code is made available as part of the rnastructure code download, so that the java interface can be built on local machines that do not have swig installed.

availability of algorithms
maximum
expected
accuracy
suboptimal
function rna
thermodynamic parameters
the algorithms implemented in rnastructure use nearest neighbor parameters to predict the stability of secondary structures. these include both free energy change parameters at 37Â°c and enthalpy change parameters to allow prediction of conformation stability at an arbitrary temperature. for rna, these parameters are those most recent parameters from the turner group  <cit> . for dna, the parameters are derived from the experimental literature  <cit> . most algorithms for rna structure prediction can be invoked for dna structure prediction using the class, text interfaces, or guis. dna-rna hybridization parameters are also used by oligowalk  <cit> .

unit testing
the rnastructure package now includes a facility for unit testing. a makefile automates testing of the text interfaces and comparison with calculation standards. the same tests can be used to test the guis, but this requires manual selection of the input. unit testing is helpful when changes are made to the algorithms to ensure that structure prediction is unchanged. unit testing is also important when rnastructure is installed in environments that have not been previously tested, to ensure that the installation worked correctly.

RESULTS
to demonstrate the utility of rnastructure, an example of secondary structure prediction is provided, showing the input and output. the method utilized is free energy minimization and the example sequence is the 5s rrna from pneumocystis carinii  <cit> .

after clicking "start," the calculation proceeds and the structure is then drawn as shown in figure  <dig>  the lowest free energy structure is shown by default and the user can display other structures by selecting the "draw" menu item or by typing control-up-arrow or control-down-arrow.

the same calculation could have been performed on the command line using the program "fold." the command line for the same default method is "fold pcarinii.seq pcarinii.ct." a set of postscript images of the predicted structure can then be rendered using "draw pcarinii.ct pcarinii.ps."

behind the scenes, the structure prediction is performed using the rna class. for this example, the class was instantiated using a constructor that reads sequences: rna::rna. the integer  <dig> indicates that the file is a sequence file and the bool true indicates that the sequence is rna . structure prediction is then accomplished using rna::foldsinglestrand, where the parameters that control suboptimal prediction are the max % energy difference, the max number of structures, and the window size, respectively, as appeared in the gui . the pairing can then be queried using rna::getpair or the drawing coordinates can be determined using rna::determinedrawcoordinates.

CONCLUSIONS
rnastructure is a software package for rna secondary structure prediction and analysis. it is designed to make algorithms accessible for a variety of user needs. user-friendly guis are available for windows, using native windows code, and for linux/unix and macintosh os-x using java. text interfaces are provided for performing calculations on the command line or for scripting. finally, a c++ class library is available to implement the algorithms into new programs. the package can be downloaded at http://rna.urmc.rochester.edu/rnastructure.html.

availability and requirements
â¢ project name: rnastructure, version  <dig>  and later

â¢ project home page: http://rna.urmc.rochester.edu/rnastructure.html

â¢ operating system:

text interfaces: compilation is platform independent.

executables are provided for microsoft windows and for 32- and 64-bit linux.

class library: compilation is platform independent.

windows gui: windows xp or later.

java gui: compilation is platform independent, but requires sun jdk  <dig>  or higher. executables are provided for macintosh os-x  and linux.

â¢ programming language:

text interfaces, class library, windows gui: c++ 

java gui: java

â¢ other requirements:

windows gui: compilation requires microsoft foundation classes  as found in microsoft visual studio  <dig> or later and the intel c++ compiler.

java gui: requires sun java jdk version  <dig>  or later. recompilation of swig interface requires swig version  <dig> . <dig> or later.

â¢ license: gnu gpl

â¢ any restrictions to use by non-academics: none.

abbreviations
gui: graphical user interface; ncrna: non-coding rna; sirna: small interfering rna

authors' contributions
jsr wrote the java interface and the new text interfaces. dhm wrote the c++ class library. both authors contributed to the debugging of the code. dhm drafted the manuscript and both authors contributed to revisions.

