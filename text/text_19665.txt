BACKGROUND
feature selection is widely used to identify the most discriminating features out of a large number of features in bio-medical applications, such as biomaker discovery, medical diagnosis, and gene selection. random forest  is an ensemble classifier, which applies bagging technique to construct an ensemble of trees, with randomization technique for the growth of each tree  <cit> . the tree-based ensemble makes rf suitable for handling with both categorical and numerical features, missing values, and redundant features  <cit> . especially, rf is suitable for high-dimensional and small-sample datasets . rf provides two variable importance measures , i.e. the mean decrease accuracy  and mean decrease gini . the feature ranking produced by mda or mdg serves as a filter to eliminate irrelevant features, and has been applied in a large variety of domains .

it is widely believed that high stability is equally important as high classification accuracy in the feature selection literature . the stability of feature selection always refers to the sensitivity of a vim to data perturbation or parameter variations. with respect to data perturbation stability, the main focus is the consistence between feature rankings, each of which comes from different subsamples of a training set  . calle and urrea discussed the stability of both mda and mdg rankings based on the variations in a bladder cancer recurrence dataset containing  <dig> independent features  <cit> . the average percentage of overlap between the original ranking and the ranking in the perturbed datasets  is used to assess the stability. the conclusion was that mdg is robust to small perturbations of the data while mda rankings behavior was completely unstable. nicodemus, k.k kept going deep into the instability of vims with respect to data-specific characteristics. some artificial datasets were generated concerning within-feature relevance and differences in category frequencies  <cit> . the stability was analyzed by the correlation coefficient between the feature rankings from the original data set and  <dig>  <dig> % subsamples. the comparison leads to the conclusion that mdg is inferior to mda on artificial datasets. verikas et al explored the mda stability by observing the spearman coefficient of feature rankings obtained in  <dig> different runs  <cit> . each run performs under the same parameter setting with the training dataset being randomly selected out of the original dataset. kursa, m.b. compared the stability of four rf-based or rf-relevant vims  <cit> . the stability was assessed among  <dig> optimal feature subsets derived from  <dig> bootstrap samples of equal size to the original data. with respect to parameter-variations stability, the studies concentrate on the consistence between feature rankings, when the parameter settings are different from each other  <cit> . okun and priisalu noticed the influence of the number of features for node split on the feature rankings from mdg, where the correlation of two feature rankings was computed, provided before and after the number of features for node split is changed  <cit> . the results showed the correlation of two feature rankings can be weak while they may exhibit similar accuracy on the same data set. verikas et al also tried to demonstrate the correlations between a pair of feature rankings generated by a pair of random forests with a very similar number of trees and/or variables   <cit> . the results showed lower correlations when the number of variables used to split a node in two rfs differs more. in summary, previous studies on the stability of vims have tried to attribute the stability problem to the perturbations of training data or parameter settings.

in this paper we address the problem of intrinsic stability which comes from the algorithm design of vims. generally speaking, most feature selection algorithms are relatively stable when eliminating the impacts of data-perturbations or parameter variations, e.g. support vector machine recursive feature elimination  <cit>  and relief-f  <cit> . however, due to the intrinsic randomness of bagging and randomization, random forest lacks stability decreasing the robustness of performance . in our previous work  <cit> , we noticed the intrinsic stability problem of random forest and tried to alleviate it by combining of proximity measure and support vector machine. however, the intrinsic stability problem has not been formally defined and thoroughly investigated, especially the comparison with traditional stability and potential affecting factors. this limitation motivated us to explore the intrinsic stability of vims based on random forest. we introduce the concept of intrinsic stability which is defined by the self-consistence among the feature rankings of repeated runs. intrinsic stability describes the stability of vims stemming from the intrinsic randomness in algorithm design and distinguishes from traditional stability of data perturbations and parameter variations.

the goal of this study is to explore the intrinsic stability that stems from the intrinsic randomness of vims. the experiments were carried out on  <dig> benchmark datasets with diversified characteristics. ten of them are gene expression datasets, which are described as high dimensional and small sample problemm, since small sample size and high feature redundancy are important factors that increase randomness  <cit> .

besides the demonstration of intrinsic stability on a variety of datasets, a more valuable goal of this study is to investigate the influence of several factors on intrinsic stability throughout the vim process. first, we examined the impact of parameters setting, i.e. the number of trees  and the number of splitting features candidate for each node . second, we investigated the impact of dataset indicators, i.e. the number of features, sample size, the number of classes, and model accuracy. another highlight of our study is the comparison of magnitude of intrinsic stability with traditional stability, which gives a better understanding of the importance of intrinsic stability.

methods
random forest variable importance measures
random forest model
random forest  is an ensemble of multiple decision trees. each tree of rf is grown with a subset of data made from bootstrap and random subset of variables  <cit> . the process of sampling a bootstrap data from the original training data to establish the training dataset for each tree is described as bagging technique. the process of selecting a feature subset of the original feature set for tree-node split is described as randomization technique. to classify a new instance, rf puts the new instance down each tree in the forest. each tree provides a predicted label as a vote for prediction. rf chooses the classification with the most votes. with respect to bagging method, there are on average  <dig>  % of original instances not used as the training dataset for each meta tree  <cit> . all the excluded examples construct the so called out-of-bag dataset . the oob accuracy is always applied to evaluate the rf performance. building on the bagging and randomization technique, rf achieves higher accuracy with low bias and variance than other popular tree structured algorithms like cart, c <dig>  and id <dig>  and has been considered as a highly preferred state-of-art machine learning model  <cit> .

mda and mdg
considering the learning scenario, the data is described as z= where x refers to an instance and y refers to the label. the instance can further be denoted as x=∈x, with the upper index  <dig> ,...,d representing the original sequence numbers of the features, and d is the size  of the feature set. when a vim method is performed, each feature is designated with an importance score. thus a feature ranking can be obtained by ordering the importance scores. the feature ranking can be described as follows: 
  rankfea=,xπ,...,xπ) 

where π,j= <dig> ,...,d is the new index of feature xj in the descending ranking.

building on rf modeling, mda and mdg have been proposed to serve as variable importance methods. suppose ht and ht refer to the predicted label for oob instance xi before and after feature permutation respectively, mda measures the importance of a feature xj by calculating the mean decrease in the oob accuracy before and after the permutation of feature xj, i.e., 
  vi=1ntree∑t=1ntree∑i∈oobiyi=htxi−∑i∈oobiyi=htxijoob 

for mdg, we measure the total decrease in node impurities  from splitting on the feature, and average over all trees. suppose gini is the gini index of feature xj, and ndot is the number of tree nodes based on feature xj, the importance score by mdg is defined as follows: 
  vi=1ndot1−∑k=1ndotginik 

where ginik is the kth gini index of feature xj among the ndot tree nodes.

sources of randomness in mdg and mda
the problem of the reproducibility of rf has received attention  <cit> . it is pointed out that the stability of rf is reduced by two random components: the bagging method and the randomization method. according to the algorithm mechanism, both mda and mdg involve the two random components in feature ranking process. beyond that, one more random component has been involved in mda, i.e. feature permutation  <cit> . the random components of vims can be eloquently visualized in fig.  <dig> 
fig.  <dig> visualization of random components involved in the procedures of mdg and mda. the distribution of random components of vims is eloquently visualized to understand the source of intrinsic randomness of vims



it can be seen in fig.  <dig>  mdg only includes two random components from rf, i.e., bagging  and randomization . besides them, mda involves the third random components of feature permutation . knowing the anchor points of random components in vims helps understand the sources of intrinsic instability.

evaluation criteria for vim stability
there are a few evaluation criteria aiming to measure the vim stability . here we propose to measure the consistence between the sequences as a measure of vim stability. generally, vim stability is measured with respect to feature ranking. three commonly used evaluation criteria, i.e., spearman coefficient, jaccard index and kuncheva index, are applied to comprehensively assess the vim stability. among them, spearman coefficient focuses on the correlation between two sequences, while jaccard index and kuncheva index concern the overlap of feature subsets. moreover, considering the fact that a slight perturbation in feature importance may lead to a dramatic change in feature ranking, mean absolute relative difference  is also used to evaluate the performance of vim stability. mard is often used as a quantitative indicator of quality assurance and quality control for repeated measurements where the outcomes are expected to be the same. the measurement of mard provides detailed information of vim stability.

now consider the general framework for assessing vim stability among multiple feature rankings. given k feature rankings: rankfea <dig> rankfea <dig> ...,rankfeak, the consistence among the k feature rankings is measured by averaging over all pairwise feature rankings, i.e.,  where g,h∈{ <dig> ,...,k} and g≠h. the average consistence is computed as follows: 
  stabidxk=2∑g=1k−1∑h=g+1kstabidx2k 

where stabidx <dig> represents an evaluation criterion to measure the pairwise consistence.

it is worth noting that, vims are extremely sensitive to redundant or noisy features, especially on high dimensional with a small sample size datasets. it makes sense to only analyze the top ranked features  <cit> . in this study, we constrain that up to top  <dig> features submitted to stability evaluation. that means, stabidx <dig> is computed with respect to the top  <dig> features if the length of feature ranking is larger than  <dig> 

spearman coefficient
spearman coefficient instinctively assesses the rank correlation between two sequences of ranking features  <cit> . the calculation of spearman coefficient begins with the process of converting the numerical sequence to ranks. building on two sorted feature rankings , the spearman coefficient defined for pairwise consistence can be given by 
  stabidxspearman2=1−6∑j=1drankfeajg−rankfeajh2d 

where rankfeajg and rankfeajh are the index of feature xj in the feature ranking respectively. a preferred value is  <dig> when the two feature rankings are identical and a value of - <dig> meaning that they have exactly inverse orders. according to the limit of up to top  <dig> features, d is set to be  <dig> if the length of feature ranking is larger than  <dig> 

jaccard index
jaccard index is widely used in the literature of stability evaluation, which calculates the similarity between pairs of feature rankings concerning the aspect of overlap  <cit> . for two sorted feature rankings , jaccard index is defined as the size of the intersection of two sequences divided by the size of the union of the two sequences. the jaccard index definitely will be  <dig> when the numerator and denominator are both  <dig>  therefore, in order to correct this problem, an alternate jaccard index, which iterates through each sub-sequence and then averages the aggregated results from all steps, is given as follows: 
  stabidxjaccard2=1d−1∑j=1d−1rankfea <dig> ..jg∩rankfea <dig> ..jhrankfea <dig> ..jg∪rankfea <dig> ..jh 

where rankfea <dig> ..jg,rankfea <dig> ..jh are the sub-sequence of the original feature rankings . jaccard index takes value in  <cit> . the closer that number is to  <dig>  the better the vim stability is. according to the limit of up to top  <dig> features, d is changed to be  <dig> if the length of feature ranking is larger than  <dig> 

kuncheva index
kuncheva index is a more sensitive measure than jaccard index, which can correct the evaluation bias  <cit> . it is pointed out that jaccard index tends to produce higher values for larger subsets due to the increased bias of selecting overlapping features by chance. kuncheva index tends to provide a correction for chance. for two sorted feature rankings , the computation iterates through each sub-sequence and then averaged evaluation is defined as 
  stabidxkuncheva2=1d−1∑j=1d−1rj−j2/dj−j2d 

where rj is the cardinality of intersection of sub-sequences rankfea <dig> ..jg and rankfea <dig> ..jh. kuncheva index takes a value in . larger value indicates larger number of common features in both sub-sequences. according to the limit of up to top  <dig> features, d is set to be  <dig> if the length of feature ranking is larger than  <dig> 

mard
the evaluation criterion of mean absolute relative difference  is a frequently used measure of the differences between two sequences of real values  <cit> . basically, the mard represents the standard deviation of the differences between two sequences. mard is a good measure of consistence of two sequences with respect to real values. for two sequences of importance score imsg and imsh, mard calculates the difference of absolute values of importance score between sequences as follows: 
  stabidxmard2=1d∑j=1dsjg−sjh/ <dig> 

where sjg,sjh represent the elements of scores sequence imsg,imsh, respectively.

it is worth noting that the calculation of mard up to the top  <dig> features is somewhat complicated. in this study, the sequence of importance score is obtained by the union of pairwise sequences with up to top  <dig> features. therefore, there may be more than  <dig> features involved in each sequence of importance scores. accordingly, d is the united length of the two sequences when the original feature ranking is larger than  <dig> 

datasets and experimental setup
in order to provide a more convincing empirical verification, various types of datasets were chosen. most of the datasets in this study are collected from the biology domain and have the characteristics of small sample-size and high-dimensional features. table  <dig> shows a summary of the  <dig> data sets used. among them,  <dig> of the total  <dig> datasets comes from the application of biology, and  <dig> from gene expression datasets except arcene and madelon, are obtained from a repository of the most widely studied gene expression sets   <cit> . the dataset arcene, madelon and the rest are obtained from uci machine learning repository .


four dataset indicators are used to describe the characteristics of datasets. besides three commonly used statistics, i.e., #feature, #sample and #class, the fourth indicator oob accuracy is used to evaluate the complexity of a dataset  <cit> . the oob accuracy of each dataset is the best result of rf on the original dataset with fine-tuned parameters. the implementation of rf model, as well as the runs of mda and mdg, is executed in the r environment  by calling for the r package of randomforest <dig> - <dig>  <cit> .

in our experiments, the intrinsic stability is assessed by the self-consistence of the results in repeated  <dig> runs. the self-consistence among the  <dig> feature rankings are evaluated respectively by spearman coefficient, jaccard index, and kuncheva index, while the difference of  <dig> sequences of importance scores is measured by mard. the illustration of intrinsic stability was conducted in three stages. first, in order to get a stable performance of vims, the impact of parameter setting was explored. second, the correlations between four dataset indicators and the intrinsic stability are statistically investigated. finally, the magnitude of intrinsic stability was compared with that of the traditional stability with respect to data perturbations and parameter variations.

RESULTS
influence of the parameter setting on intrinsic stability
in order to explore whether or not the intrinsic stability is affected by the parameter setting of vims, the distribution of intrinsic stability against different parameter settings are investigated. the two key parameters ntree and mtry are set to different values respectively. the range of ntree is set as  and the range of mtry is set as , where def means the default value of mtry i.e. the square-root of the total number of features, dwdef means a half of def and updef means one and a half of def. for each dataset, the distribution of intrinsic stability against different values of ntree with the value of mtry being def is displayed in fig.  <dig>  the distribution of intrinsic stability against different values of mtry with ntree being  <dig> is displayed fig.  <dig>  it is worth noting, there are two set of stability indices presented in our study. the first group includes spearman coefficient, jaccard index and kuncheva index, which are based on feature ranking and prefer to be as high as  <dig>  the other is mard, which is based on the scores of feature importance and prefers to be as low as zero.
fig.  <dig> influence of the setting of parameter ntree on the intrinsic stability. for each dataset, the distribution of intrinsic stability against different values of ntree are illustrated  mda  mdg

fig.  <dig> influence of the setting of parameter mtry on the intrinsic stability. for each dataset, the distribution of intrinsic stability against different values of mtry are illustrated  mda  mdg



it can be seen from fig.  <dig>  for both mda and mdg, the intrinsic stability is significantly more obvious to parameter ntree. with the increase of ntree, spearman coefficient, jaccard index and kuncheva index ascend gradually and mard gradually declines. it shows that the role of ntree nonlinearly decreases with its increasing value. note that, even when ntree equal to  <dig>  the values of indices on most of the datasets are still away from the preferred value, which is  <dig> for the stability indices based on feature rankings and  <dig> for mard, especially for datasets with small-size examples and high-dimensional features.

in contrast, fig.  <dig> shows that the parameter mtry has little impact on the performance of intrinsic stability. it remained stable against different values of mtry across the  <dig> datasets. similar to the results of ntree, the magnitudes of intrinsic stability are always away from the preferred value. especially, the intrinsic stability on datasets with small-size examples and high-dimensional features tend to be poorer than others.

the demonstration of intrinsic stability on different datasets
the intrinsic stability across all the  <dig> datasets are investigated under predefined parameter settings. according to the finding in figs.  <dig> and  <dig>  to eliminate the influence of parameters we set ntree to be  <dig> and mtry to be the default settings of def. the results are respectively shown in table  <dig> for mda and table  <dig> for mdg. in each table the performance of stability index is described as its mean and variance over all possible  <dig> pairwise computations.


it can be seen in table  <dig> with respect to spearman coefficient, jaccard index and kuncheva index, most of values in terms of the mean are smaller than  <dig>  and the scores in terms of mard do not touch the bottom of zero. these observations illustrate the prevalence of inconsistence among the results in repeated runs. especially, the values on gene expression datasets are significantly more obvious than other datasets, which reveals that vims on datasets with small-size samples and high dimensional features are more likely to suffer from intrinsic instability. additionally, all the values in terms of variance are as small as zero, which indicates that the results from different pairwise computations are consistent. according to table  <dig>  the performance of mdg is analogous to that of mda.

correlation between the dataset indicators and intrinsic stability
in this section, we analyze the correlation between the indicators of dataset characteristics and the intrinsic stability with the purpose of better understanding of the potential factors that may affect the intrinsic stability. the indicators including the number of features, sample size, oob accuracy and number of classes are studied respectively. in our experiments, two correlation coefficients, i.e., spearman coefficient and pearson coefficient, are both used to capture the relationship. spearman benchmarks monotonic relationship while pearson coefficient benchmarks linear relationship. for each correlation test, the performance is described as estimate and p value, which is tested with confidence of  <dig> %.

a preliminary test on the dependencies between different indicators on the  <dig> datasets showed that #feature and #sample is not independent. . specifically speaking the datasets in table  <dig> can be divided into two categories of datasets: a) low-dimensional with a large number of samples which is the former  <dig> datasets in table  <dig>  b) high-dimensional with a small sample size the latter  <dig> datasets in table  <dig>  to eliminate the interference we study the role of feature and sample independently on these two groups respectively. the results in terms of spearman coefficient and pearson coefficient are displayed in table  <dig> for datasets and table  <dig> for datasets respectively. further more, to investigate the coupling effect of #feature and #sample on the whole  <dig> datasets, we evaluate the relationship between intrinsic stability and a synthetic indicator #feature/ #sample, which can be seen as an indicator of degree of high dimensional and small sample of the dataset. tables  <dig> and  <dig> show the relationships between intrinsic stability and #feature/ #sample as well as #class and oob accuracy for mda and mdg respectively.


as shown in table  <dig> with respect to the synthetic indictor #feature/#sample, the estimates of spearman coefficient and pearson coefficient are all negative in terms of the stability indices based on feature ranking and positive based on mard, with their p values all below the significance level  <dig> %. this observation reflects that the synthetic indictor #feature/#sample performs both negative monotonic correlation and negative linear correlation with the intrinsic stability. this implies that high dimensional and small sample datasets are prone to intrinsic instability of vims. when it comes to #class all the p values are higher than the significance level  <dig> %, which indicates that there is no significant correlation between the number of classes and the intrinsic stability. the results of oob accuracy in the case of spearman coefficient are not consistent. the p value of the stability index in terms of spearman coefficient is over  <dig> % while that of jaccard index, kuncheva index and mard are below the significance level of  <dig> %. in the case of pearson coefficient, only kuncheva index has p value below the significance level. the performance in terms of oob accuracy leads us to conclude that there is only monotonic correlation between oob accuracy and intrinsic stability. this implies that data complexity may have impact on the intrinsic stability of vims. from table  <dig>  we find similar performance except for the results of oob accuracy. it shows only the p values in terms of spearman coefficient between oob accaracy, jaccard index and kuncheva index are below  <dig> %, which reveals a weak monotonic correlation between the mdg intrinsic stability and the oob accuracy. remembering the importance scores of mdg which is not calculated by oob accuracy but by gini index, the mechanism of importance score calculation contributes to this observation.

comparison of intrinsic stability and data-perturbation stability
in this section, the comparison of intrinsic stability and data-perturbation stability are conducted. the data perturbation is conducted by 10-fold cross validation. to do this, an original dataset is randomly partitioned into  <dig> equal sized data subsets,  <dig> of the  <dig> data subsets are used as training set to produce a feature ranking. this process is repeated  <dig> times, each of which includes different folds as the training dataset. the  <dig> lists of feature importance scores are then used to compute spearman coefficient, jaccard index, kuncheva index and mard. then the average over the  <dig> pairwise computations are recorded. for intrinsic stability  <dig> runs of vims are executed on each training set, and the stability indices on that training set are computed. finally, the averaged results over all the  <dig> training sets is reported. the comparison of intrinsic stability and data-perturbation stability of mda are displayed in fig.  <dig> and the results of mdg are displayed in fig.  <dig> 
fig.  <dig> comparison of intrinsic stability and data-perturbation stability with respect to mda. for each dataset, a comparison of the distributions of two kinds of stability is presented, one comes from intrinsic stability and the other refers to data-perturbation stability. the distribution is depicted by the notched box which focuses on the variation in the distribution

fig.  <dig> comparison of intrinsic stability and data-perturbation stability with respect to mdg. for each dataset, a comparison of the distributions of two kinds of stability is presented, one comes from intrinsic stability and the other refers to data-perturbation stability. the distribution is depicted by the notched box which focuses on the variation in the distribution



the results are depicted with notched box plot. each notched box plot displays the variation in the distribution of data based on some statistical summaries; the central rectangle spanning the first quartile to the third quartile , the lines extending vertically from the hinge to the highest value  is within  <dig>  times of iqr, the lower whisker extends from the hinge to the lowest value within  <dig>  times of iqr. data beyond the end of the whiskers are outliers and are plotted as individual points. additionally, the notch is a segment around the median displaying the a confidence interval, with a height of  <dig>  times the height of the central box divided by the square root of the number of data elements in the corresponding data distribution. the notch is useful for determining whether two distributions are drawn from the same population. similar notches of boxes indicate that the data visualized by the boxes have the same distribution. besides, if the notches of two boxes do not overlap this is strong evidence that the medians differ.

as shown in the case of both mda and mdg, the positions of boxes referring to intrinsic stability are always higher than that of perturbation stability in terms of spearman coefficient, kuncheva index and jaccard index, while the situation is reversed in terms of mard. however, the notches of boxes referring to intrinsic stability overlap that of perturbation stability in some cases. for example, the overlap appears in terms of kuncheva index for mda, and the situation happens in terms of spearman coefficient. additionally, some notches go outside the hinges, such as the notches in terms mard for both mda and mdg, the notches in terms of spearman coefficient for mdg. this is because the size of the notch is bigger than the interquartile range. in other words, the distributions of intrinsic stability or perturbation stability are not symmetric but skewed. this finding reveals that intrinsic stability or perturbation stability are not always normally distributed. especially, the difference between the intrinsic stability and data-perturbation stability on mushroom dataset are substantially small. considering the unavoidable intrinsic stability, the observation on mushroom dataset reveals that the major component of data-perturbation stability of mushroom is intrinsic stability. the tendency of splice dataset is similar to that of mushroom dataset. comparatively, the gaps with respect to mushroom dataset are substantially smaller than that of splice dataset. the most obvious reason for the observation is the good characteristic of mushroom, which has large sample size and high oob accuracy. for the comparison of mda and mdg, the size of the box with respect to mdg in terms of mard is substantially larger than that of mda. this observation reveals that there exists high variability in the distributions of mdg.

comparison of intrinsic stability and parameter-variation stability
in this section the magnitude of intrinsic stability is compared with that of parameter-variations stability. considering two parameters ntree and mtry are required for vims, the comparison is conducted from two aspects.

first, the comparison is carried out between the intrinsic stability and the ntree-variations stability. to do so the parameter ntree takes  <dig> different values with the range of . in this scenario, the parameter mtry is set default def. based on each ntree setting, the vim can be conducted. the  <dig> lists of feature importance scores are then used to compute ntree-variation stability. for intrinsic stability,  <dig> repeated runs are executed under each setting of ntree. the results of stability evaluation based on  <dig> different settings of ntree are collected and then are averaged. the performance of stability is presented by the distributions of all possible  <dig> points by pairwise computations. the distributions are then depicted by notched box plot. for each dataset, the comparison of intrinsic stability and ntree-variations stability was conducted. the results of all  <dig> datasets were illustrated. the results of mda are displayed in fig.  <dig> and the results of mdg can be found in fig.  <dig> 
fig.  <dig> comparison of intrinsic stability and ntree-variations stability with respect to mda. for each dataset, a comparison of the distributions of two kinds of stability is presented, one comes from intrinsic stability and the other refers to ntree-variations stability. the distribution is depicted by the notched box which focuses on the variation in the distribution

fig.  <dig> comparison of intrinsic stability and ntree-variations stability with respect to mdg. for each dataset, a comparison of the distributions of two kinds of stability is presented one comes from intrinsic stability and the other refers to ntree-variations stability. the distribution is depicted by the notched box which focuses on the variation in the distribution



it can be seen from fig.  <dig> and fig.  <dig>  generally speaking the positions of boxes referring to intrinsic stability are always higher than that of parameter stability in terms of spearman coefficient, kuncheva index and jaccard index, while the situation is reversed in terms of mard. meanwhile, the notches of intrinsic stability do no overlap that of ntree-variations stability. additionally, some notches go outside the hinges which reveals that the distribution of data is not symmetric but skewed. but beyond that, a remarkable characteristic is that the sizes of box with respect to ntree-variations stability are substantially larger than that of intrinsic stability. this observation reveals that there exists high variability in the distributions of ntree-variations stability.

second, similar comparison is carried out between the intrinsic stability and mtry-variations stability. to do so the parameter mtry changes its values: one, dwdef, def and updef. the value of def means the square-root of the total number of features, dwdef means a half of def, and updef means one and a half of def. in this scenario, the value of ntree is set as default  <dig>  similar computations are conducted to get the results. the results of mda are displayed in fig.  <dig> and the results of mdg can be found in fig.  <dig> 
fig.  <dig> comparison of intrinsic stability and mtry-variations stability with respect to mda. for each dataset, a comparison of the distributions of two kinds of stability is presented, one comes from intrinsic stability and the other refers to mtry-variations stability. the distribution is depicted by the notched box which focuses on the variation in the distribution

fig.  <dig> comparison of intrinsic stability and mtry-variations stability with respect to mdg. for each dataset, a comparison of the distributions of two kinds of stability is presented, one comes from intrinsic stability and the other refers to mtry-variations stability. the distribution is depicted by the notched box which focuses on the variation in the distribution



it can be seen from figs.  <dig> and  <dig>  generally speaking there is no any clear tendency with respect to the positions and the overlap between boxes referring to intrinsic stability and that of mtry-variations stability. meanwhile, the notches of intrinsic stability do no overlap that of mtry-variations stability. additionally, the comparison in terms of spearman coefficient in case of both mda and mdg, as well as the comparison in term of mard in case of mda is obscure, which shows that the positions of boxes referring to intrinsic stability are almost as high as that of parameter stability. moreover, the notches of intrinsic stability and that of mtry-variations stability are mutually overlapping.

discussion
experimental results show that intrinsic instability is prevalent across different datasets. particularly, the degree of intrinsic stability is dramatically low in the case of gene expression datasets. the influence of parameter setting of vims on the intrinsic stability is investigated and the observations and conclusions are presented as follows: 
with the increase of ntree, the intrinsic stability gets better. nevertheless, even when ntree equal to  <dig>  the values of indices on most of the datasets are still away from the preferred value  <dig>  these observations lead to the conclusion that intrinsic instability is inevitable, but can be reduced by a larger value of ntree.

there is no clear tendency of the distribution of intrinsic stability against different settings of mtry. this observation indicates that the setting of mtry is not a solution to control the intrinsic instability.



with respect to four data-specific indicators, i.e., the number of features, the sample size, the number of classes and oob accuracy, our observations and conclusions are summarized as follows: 
the relationships between #sample and intrinsic stability can not be observed. for the #feature, there is a perfect monotone decreasing relationship, as well as strong negative linear correlation with intrinsic stability on low-dimensional datasets with a large number of samples. however, only #feature in case of spearman coefficient for mda shows both negative monotonic correlation and negative linear correlation on high dimensional datasets with small sample size. this implies a complicated and ambiguous relationship between intrinsic stability and #feature for high dimensional and small sample datasets.

tests on the whole  <dig> datasets show that #feature and #sample have a coupling effect on the intrinsic stability. the synthetic indictor #feature/#sample performs both negative monotonic correlation and negative linear correlation with the intrinsic stability. this implies that high dimensional and small sample datasets are prone to intrinsic instability of vims. this effect may stem from the intrinsic randomness in the mechanism of vims, the feature randomization  for both mda and mdg, as well as the feature permutation  for mda.

generally, the oob accuracy have a clear monotonic correlation with the intrinsic stability. however, there is no linear correlation. this observation reveals that data complexity does have impacts on the intrinsic stability.

there is no significant correlation between the number of classes and the intrinsic stability.



further, the magnitude of intrinsic stability is compared with that coming from data perturbation or parameter variations. the observations and conclusions are summarized as follows: 
the magnitude of intrinsic instability is generally smaller than that of data-perturbation instability. this observation indicates that data-perturbation stability may contain intrinsic stability.

the magnitude of intrinsic instability is significantly smaller than that of ntree-variations instability. moreover, the intrinsic stability has a dramatically smaller variability than that of ntree-variability stability. it shows that the intrinsic stability may be involved in the ntree-variations stability and vims is more sensitive to the change of ntree.

the magnitude of intrinsic stability is generally smaller than that of mtry-variations stability. nevertheless, there still exists the observation that intrinsic stability and mtry-variations stability have nearly equal magnitude in terms of spearman coefficient. besides both intrinsic stability and mtry-variations stability have significantly low variability. these observations reveal that the intrinsic stability is involved in the mtry-variations stability, but mtry has little impact on the stability of vims.



additionally, comparison of mda and mdg exhibits a lot of similarities between them. they both suffer from the issue of intrinsic stability. comparatively, mdg performs relatively high variability in terms of mard while always making a consistent conclusion with the stability indices based on feature ranking. the difference between mda and mdg lies in the degree of intrinsic stability. nevertheless, from an overall perspective, there is not any clear conclusion about which one is more stable. the observation is consistent with previous studies. in the research of calle and urrea, mdg is more robust than mda to small perturbations of the data  <cit> . however, nicodemus, k.k concluded that mdg is inferior to mda on artificial datasets  <cit> . according to the mechanism of intrinsic randomness, the number of random components in fig.  <dig> cannot completely depict the behavior of mda and mdg. seemingly, mdg involves less random components than mda. whereas, fig.  <dig> only focuses the breath of random components and does not consider the intensity of each component. it is better to consider the quantity and intensity of random components to evaluate the intrinsic stability of vims on different implementations.

CONCLUSIONS
in this paper, a new concept of intrinsic stability of variable importance measures  is introduced to concern the influence of intrinsic randomness in algorithm design. the intrinsic stability in vims based on random forest mda and mdg, are comprehensively investigated which assesses the self-consistence between the feature rankings of repeated runs. first, the prevalence of intrinsic stability of vims over many real-world datasets demonstrates that the instability of vims not only comes from data perturbations or parameter variations, but also stems from the intrinsic randomness of vims. the fact that the magnitude of intrinsic stability is always smaller than that of traditional stability indicates that the intrinsic stability is implicitly involved in traditional stability. this finding gives a better understanding of vim stability, and may help reduce or eliminate the instability of vims. studies towards stable and robust vims without regard to the intrinsic randomness of vims may not be likely to make any real progress. second, by investigating the potential affecting factors of intrinsic stability, users would be more aware of the risks and hence more careful when using vims, especially on high-dimensional, small-sample and high complexity datasets. in practice a large enough value of ntree is preferred.

competing interests

the authors declare that they have no competing interests.

authors’ contributions

hw and fy designed the work. hw collected the data, ran the experiments and wrote the initial draft of the manuscript. zl and fy analyzed the results. all authors read and approved the final manuscript.

