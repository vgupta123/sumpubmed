BACKGROUND
molecular interaction databases have made searching for interactions between interesting genes easier, and have thus brought countless new hypotheses to the work of researchers around the globe. standardized data exchange formats such as psi-mi  <cit>  and biopax  <cit>  have facilitated communication of large amounts of data, stretching the reach of genome- and proteome-wide interaction data in biological research. the usefulness of these data to researchers has been dramatically enhanced by cytoscape  <cit> , the popular network visualization and analysis software, which provides a platform to integrate and visualize data in the context of molecular interaction networks  <cit> . although data exchange formats are widely supported among interaction databases, not all represent interactions in the same way, particularly with respect to the identifiers used to represent the genes. bionetbuilder  <cit>  is an open-source client-server cytoscape plugin that addresses this issue by integrating molecular interaction databases, the gene ontology, and gaggle-enabled tools to generate and serve whole or partial networks to a user's cytoscape environment.

in version  <dig>  of bionetbuilder, we have made significant improvements to expand the volume and usability of interaction data for cytoscape users. to begin, we added the intact  <cit> , mint  <cit> , and mppi  <cit>  interaction resources. the list of integrated databases now includes bind  <cit> , biogrid  <cit> , dip  <cit> , hprd  <cit> , intact, kegg  <cit> , mint, mppi, and prolinks  <cit> . the integration of these networks is made possible via a new synonyms-resolution system that provides a means of translating between the many different identifiers used by each individual database or tool. the synonym translator provides mappings for gene/protein identifiers based largely on the refseq  <cit>  and iproclass  <cit>  databases. while the previous version of bionetbuilder allowed users to assign a variety of alternate gene/protein names as node attributes in cytoscape, networks could only be constructed with refseq protein gi numbers as the cytoscape node identifiers. this was limiting because present versions of cytoscape do not allow users to exchange node identifiers for node attributes, and many downstream analysis tools operate only on node identifiers. the second major improvement in version  <dig>  is that bionetbuilder now allows users to select from a diverse list of id types to set as the cytoscape node identifiers; this greatly increases the interoperability of our tools with other downstream analysis . this interoperability was a key prerequisite to our third main improvement, which is that bionetbuilder  <dig>  is now gaggle enabled  <cit> .

the gaggle is a cross-platform data integration system designed to allow seamless shuttling of biological data across applications. bionetbuilder  <dig>  can construct interaction networks based upon data received from any resource with a plugin that implements the gaggle framework, including but not limited to: cytoscape itself; mev, a data matrix viewer for navigating and plotting high throughput experimental data; r, the open-source statistical computing software; matlab, the scientific computing software; and the web browser firefox, which enables communication with kegg, string  <cit> , and david  <cit> . additionally, information from networks constructed with bionetbuilder can be used to transfer data to any of the aforementioned resources using the cytoscape gaggle plugin cygoose.

the fourth and most significant improvement to bionetbuilder  <dig>  is that interactions can be transferred across species. although more than  <dig> species are represented in bind, biogrid, dip, hprd, intact, mint, and mppi, most model organisms, including chicken, have relatively little interaction data available. to address this problem, all interactions in the databases listed above were used to compute integrated interolog networks for many eukaryotic model systems, including chicken  <cit> . an interolog, or interaction homolog, of a pair of interacting proteins  can be faithfully transferred from one species to another if the orthologs to : , share at least 80% joint sequence identity to   <cit> . as reported by konieczka et al.  <cit> , coverage of the chicken interactome improved dramatically when interolog-derived interactions were included.

to facilitate the use of bionetbuilder  <dig>  and cytoscape by researchers who may have little formal bioinformatics experience, we provide a tutorial on how to use bionetbuilder  <dig>  to download and use a custom chicken interactome. in the first section, we describe step-by-step construction of a customizable interactome for chicken. in the second section, we show how to integrate a sample microarray data set into the network and apply a method for extracting relevant subnetworks. finally we discuss how to use information in a subnetwork to generate novel biological hypotheses.

methods
bionetbuilder  <dig> 
bionetbuilder consists of a client, explained further below, and a java servlet as explained in greater detail by avila-campillo et al.  <cit> . a major change in the version  <dig>  client and servlet came as a result of an upgrade of the apache xml-rpc to the latest version . this paved the way for critical changes to the way interactions are passed across the web.

another major change in version  <dig>  lies in how interactions are stored. in the original version of bionetbuilder, design was centered on flexibility for developers to add new interaction resources. in version  <dig> , we have added the constraint that the internal node identifiers for any interaction resource be refseq protein gi numbers. this is because our synonyms resolution engine, largely powered by the iproclass database, refers every id type translation through refseq protein gis. although this has the disadvantage of losing interactions from some databases, we have found these losses to be relatively negligible. advantages however, include significant improvements in the speed of database access, as well as several advantages for new developers trying to understand the bionetbuilder code required to add custom databases. bionetbuilder  <dig>  also allows client-side users to select the id types to be returned to cytoscape .

the synonyms resolution engine  can also be used to translate interactions across species via the interologger. this engine incorporates a local installation of the ncbi database homologene and recently the orthology database inparanoid  <cit> . interologs are computed and integrated as described in konieczka et al.  <cit> , and stored in the bionetbuilder  <dig>  database so they can be served to the client seamlessly along with other data services.

microarray data
epiblast, primitive streak, and mesoderm cell layers from hamburger-hamilton stage  <dig> white leghorn chicken embryos  <cit>  were microdissected and pooled into  <dig> respective tissue samples. rna was extracted, amplified, labelled and hybridized according to standard kits and protocols by the genomics research laboratory at the university of arizona. hybridizations were performed using a custom  <dig> -feature long-oligo microarray. a standard wheel design was used for comparing three samples, in which each sample is compared to the other, with a dye swap for each comparison, for a total of six microarray chips. to normalize the results, a custom pipeline was written in the r statistical computing language. within-chip normalization was performed using the r package olin   <cit> . the false discovery rates were then computed for each spot based on intensity- and location-dependent bias. spots demonstrating a bias were removed from downstream analysis. having normalized spots within chips, standard libraries in the r bioconductor package were used to normalize between chips  <cit> . finally, linear models were fit to the normalized gene expression data using the limma library, which computes log <dig> fold-change, indicating the direction and quantity of the differential gene expression between the samples, summary statistics including t- and b-statistics, and the adjusted p-value that takes into account the false discovery rate  <cit> .

RESULTS
to illustrate the utility of bionetbuilder  <dig>  to researchers working with avian models, we will demonstrate how it can be used to create a chicken interactome containing  <dig>  interactions among  <dig>  genes, with interactions mapped from all sources listed above . to demonstrate one of many possible interoperative tools, the following tutorial takes the user step-by-step through the process of construction, use, and analysis of this interactome using the jactive modules cytoscape plugin. this example uses all interactions available for chicken and, depending on the computer, the entire tutorial can take several hours to two days to complete. we therefore also provide precomputed files for download to allow users to skip the most time consuming steps. we also illustrate an alternate use-case in the supplemental material, using a subset of interaction data that demonstrates another way in which bionetbuilder can be used without the overhead of constructing and analyzing the entire interactome.

building a custom chicken interactome with bionetbuilder  <dig> 
before getting started, download and install cytoscape  <dig>  from http://www.cytoscape.org. we encourage new users to go through the cytoscape basic online materials http://cytoscape.org/cgi-bin/moin.cgi/presentations/basic, which are well designed to acclimate users to the cytoscape environment and its basic functions. you will also need data from the supplemental data package for this tutorial: bionetbuilderdata.tgz . unpack the file by double clicking it, and a directory called "bionetbuilderdata" will be created. refer to this for files needed throughout the tutorial.

next, launch cytoscape  <dig>  and install the bionetbuilder <dig>  plugin and a plugin called jactivemodules  <cit> . this can be accomplished manually or through the cytoscape plugin manager. to load plugins through the plugin manager, click the plugin drop-down menu and select manage plugins. this will open the "manage plugins" window, showing a list of plugin types available for installation. click the arrow next to the analysis folder to open it, select jactivemodules, and click install. then click the arrow next to the network and attribute i/o folder to open it, select bionetbuilder <dig> , and click install. to install bionetbuilder  <dig>  manually, download the plugin from http://err.bio.nyu.edu/cytoscape/bionetbuilder/downloads.php and place the bionetbuilderclient.jar file in the "plugins" directory found inside your cytoscape application folder.

restart cytoscape, and you are ready to begin the tutorial for building a custom chicken interactome:

 <dig>  under the plugin drop-down menu, you should now have an option to select the bionetbuilder wizard... button to launch bionetbuilder. type "gallus" in the "species search string:" text box and click search. the filename "speciesname=gallus gallus, taxid = 9031" will be returned in the text area below; select that line in the text area  and click next >.

 <dig>  the node id type selection pane should now be visible with five ordered options for selecting node id types. these are used for selecting your preference for node identifiers. these preferences are used to create network nodes in decreasing order of priority. if all nodes are available in the first priority you set, these are the only id types that will be present in your network. if a node cannot be mapped to this id type, however, bionetbuilder attempts to map the node to your second preference, and so on. if none of your priorities can be found, the node will not be created. as mentioned above, the default identifier type for nodes in bionetbuilder is refseq protein gi numbers . to guarantee return of all nodes and interactions available, set "gi" as the first priority id type. however, for this tutorial, we will need to have all of our node identifiers as entrez gene uid numbers. select geneid for each of the  <dig> options , then click next >. this guarantees that all nodes in the network will have entrez geneids as identifiers since this is the only option available. if a node does not map to an entrez geneid, it will not be included in the network.

 <dig>  you will now see a pane for selection of node sources for your biological network . we will not use this for the main tutorial, so you can click next > and go to step  <dig>  alternatively, at this point proceed to step  <dig> in the supplemental tutorial to avoid construction of the entire interactome. in the supplement, we demonstrate construction of a smaller network from a set of starting nodes, which can be any combination of the following: nodes with certain go annotations, nodes from a custom starting list , nodes found by searching names at ncbi, nodes from another gaggle resource, or nodes from another network loaded into cytoscape. you would click on the check box to the left of the resource to make the button available, then click the button itself for further options.

 <dig>  you will now see the pane for selecting "data sources for the edges in your network". click the boxes next to the following to select the resources that could have interactions available for chicken: bind, biogrid, dip, intact, interologger, kegg, mint, and mppi. now click calculate number of edges from selected databases to display the number of interactions available for chicken from each resource . because few interactions have been verified directly in chicken, almost all of the interactions come from kegg and interologger, the latter being those transferred from other species. if you wish to restrict this set based on scores and/or interaction types, you may do so by clicking on the interologger... button and setting your criteria. the confidence threshold is a value  above which interolog-derived interactions will be included. the scoring system is explained in detail in konieczka et al  <cit> . for this tutorial, leave the threshold set at  <dig>  in order to return all available interactions. click next > to advance to the attributes pane.

 <dig>  you should now see the pane for selecting "attributes you wish to add to your network" . although all node identifiers will be entrez gene uids due to our selection in step  <dig>  we can attach various other data to our nodes as well by selecting them here. when you are satisfied with your selections, click next > to advance to the network name panel.

 <dig>  finally, set your "network name" by entering it in the text field . click finish to construct your network, which is very large and depending on the speed of your computer and internet connection can take from minutes to hours to construct.

if you do not wish to download the network through bionetbuilder, the network is included as a file in the supplemental data package called "chicknet.xgmml", which can be imported into cytoscape by selecting file → import → network .... once your network is finished downloading, or importing, a view will not be created due to its size. you can see the summary information for the network by clicking the network button in the "control panel" on the left side of the cytoscape window. it may be necessary to scroll to find the network button using the left arrow in the "control panel . we do not need to view the network at this point. however, if desired, you can create a view by right-clicking on the network name in the "control panel" and selecting create view, but this is not recommended at this point since it will require a great deal of memory to render such a large network. at time of publication, this particular configuration loaded a network with  <dig>  edges connecting  <dig>  nodes. to convey the density of information within it, a view of the rendered network is shown in figure  <dig> 

getting value from the chicken interactome
in this section of the tutorial, we will take you through the process of integrating an expression data set with your newly constructed interactome, and then extracting a relevant subnetwork. for this example, we will use expression data from experiments comparing gene expression differences as cells undergo a transition from the epithelial epiblast to form the primary germ layers during gastrulation. this is a fundamental transformation that occurs during early development of most multicellular organisms and is regulated through numerous evolutionarily conserved pathways. the question we are addressing is, "what are the core modules of genes driving the progression of cells from the epiblast through the primitive streak to become mesoderm during chicken gastrulation?" as will be made clearer below, this will set the stage for more specific questions once we have completed this first phase of analysis. to address this question we will use statistical results from two microarray comparisons: primitive streak vs. epiblast, and mesoderm vs. primitive streak. both comparisons are derived from the same microarray study using pooled tissue dissections of epiblast, primitive streak, and newly formed mesoderm from hh stage  <dig> chick embryos  <cit> . the statistics provided result from analysis of a standard 3-way wheel design with  <dig>  2-color hybridizations on a custom  <dig> -feature long-oligo microarray.

complete the following steps to integrate the expression data and extract a subnetwork that addresses the fore-mentioned question:

 <dig>  find the files "streak_vs_epiblast.pvals" and "mesoderm_vs_streak.pvals" in the supplemental data package. these files contain mappings from entrez gene ids  to expression values  and a statistic estimating the probability of differential expression .

 <dig>  import each by clicking file → import → attribute/expression matrix... leave the assignment of nodes set to id and click import. repeat this process for the second file. the expression data are now attached to the nodes as attributes and can be viewed by first selecting all nodes ; then selecting "streak_vs_epi_exp", "streak_vs_epi_sig", "meso_vs_streak_exp", and "meso_vs_streak_sig" from the "select attributes" menu in the "node attribute browser". this browser is visualized in the data panel at the bottom of your cytoscape window by clicking node attribute browser .

 <dig>  if you are following the alternate tutorial  provided in the supplement, or if you would prefer not to spend the time required, you may want to skip these last two steps. depending on the speed of your computer, this program can run for a few hours or even overnight. launch jactivemodules by selecting it from the plugins menu. jactivemodules will appear in the "control panel" on the left side of your cytoscape menu. select "streak_vs_epi_sig" and "meso_vs_streak_sig" by clicking once on each in the "expression attributes for analysis" text area . leave the default settings and click find modules at the bottom of the panel.

 <dig>  once jactivemodules finishes computing, a "results panel" will appear on the right side of your cytoscape window . here you will find five subnetworks each with scores indicating the relative strength of the respective subnetwork. to create a network from any of these subnetworks, select the desired subnetwork by clicking directly on the number, then click create network at the bottom of the "results panel".

although often similar, the subnetworks returned by jactivemodules are not identical, so we have provided a network we computed in exactly the way described above in the supplemental data package called "esm_subnetwork.xgmml". import this network by clicking file → import → network ... an important feature of cytoscape is the ability to visualize networks in various customizable styles through the vizmapper™. we have also provided vizmap property files in the supplemental data package: "streak_vs_epiblast.props" and "mesoderm_vs_streak.props", either of which can be loaded by clicking file → import → vizmap property file... once the visual style is loaded, it can be applied to the network by selecting vizmapper™ in the "control panel" on the left side of the cytoscape window, then selecting the visual style from the drop-down menu . instruction for creating and modifying visual styles can be found in the cytoscape online tutorials mentioned above. after loading the subnetwork we provided and importing and selecting the "streak_vs_epiblast" visual style, your cytoscape window should look exactly like the network shown in figure  <dig>  the individual gene expression profiles can be selected to view as attributes in the node attribute browser of the "data panel" at the bottom of your cytoscape window as described above in step  <dig> of the second tutorial. to visualize the mesoderm vs. streak gene expression differences, load the "mesoderm_vs_streak.props" vizmap property file and select it as described above. to search for specific gene names in the network, click the "configure search options" button to the right of the "search:" menu , and select the "genename" attribute from the list of node options .

the network in figure  <dig> represents a subnetwork of the chicken interactome that is highly differentially expressed, relative to other subnetworks, in the progression of cells from the epiblast through the primitive streak to become mesoderm. the implication is that within this subnetwork are smaller modules, or at least interacting components, necessary to drive cells through this progression.

a major strength of visualizing gene expression data layered onto interaction networks is that the networks contain large numbers of molecular relationships, only some of which might be discoverable from the published literature. novel relationships between groups of co-regulated molecules can be rapidly identified, frequently linked through molecules that are not differentially expressed but nevertheless are important components of the overall functional network. this latter category of molecules is not readily identifiable through standard analysis of microarray data.

to illustrate how subnetworks derived from layering expression data onto the chicken interactome can illuminate biological processes, we will focus on two small portions of the subnetwork shown in figure  <dig>  here we are examining changes in gene expression between cells of the epiblast, an epithelium that surrounds the primitive streak, and cells of the primitive streak region, where many cells are undergoing changes associated with the epithelial to mesenchymal transition  that leads to the formation of endoderm and mesoderm. cells undergoing emt in the primitive streak are derived from the more lateral epiblast. this process involves large-scale changes in transcription mediated by cell signalling pathways, and changes in cell shape and movement.

first we examine a small module of the subnetwork that validates existing knowledge concerning mechanisms regulating gastrulation. the first subnetwork  shows a collection of linked nodes that represent several fgf ligands, including fgfs  <dig>   <dig>   <dig>   <dig>   <dig> and fgf receptor  <dig> . of these, fgfs  <dig>   <dig> and  <dig> are upregulated, indicating that fgf signalling is activated in the primitive streak region relative to the more lateral epiblast. spry <dig>  a negative modulator of fgf signalling that is typically expressed in regions of active fgf signalling, is also upregulated. in contrast, pdgfa, which is known to interact with fgf ligands, is downregulated in the primitive streak relative to the epiblast. fgf signalling is a known regulator of the transcriptional and cell migration changes that occur during gastrulation  <cit> , and as such, it is reassuring to see these signalling molecules present as a module in this subnetwork.

the second module  encompasses nodes and edges that link several cytoskeletal proteins associated with cell junctions in epithelial cells to the wnt signalling pathway. wnt intercellular signalling molecules such as wnt <dig> and wnt <dig> bind to frizzled cell surface receptors , and mediate downstream signalling. while "canonical wnt signaling" leads to changes in gene transcription, the so-called "non-canonical wnt signalling" pathways regulate cell shape and movement  <cit> . in chicken embryos it has recently been shown precise levels of signalling through the non-canonical pathway mediated by the wnt <dig> homologue wnt11b, regulates migration of cells from the epiblast through the primitive streak during gastrulation  <cit> .

of particular interest in this module is the linkage between fzd <dig> and dvl <dig> , and several cell junction associated proteins including dlg <dig> , gja <dig> , ezr , and two tubulin proteins . in drosophila, dlg <dig> is required for maintenance of certain junctional complexes, and lack of this protein leads to loss of many aspects of epithelial polarity and disruption of the microtubule and actin cytoskeleton  <cit> . while the primitive streak is a region in which cells are losing epithelial characteristics, our microarray studies show that dlg <dig> expression is strongly upregulated in the primitive streak region relative to the epithelial epiblast. although published data implicates non-canonical wnt signalling as a positive regulator of cell migration  <cit> , dlg <dig> has been broadly implicated in maintaining integrity of the epithelium, aberrations of which are responsible for certain human diseases  <cit> . these findings suggest that one or more negative modulators of emt, including dlg <dig>  are activated in the primitive streak. the relationship between non-canonical wnt signalling and dlg <dig> expression and function within the primitive streak remains conjectural until further explored experimentally. nevertheless, combining the chicken interactome with expression data has uncovered an intriguing and potentially significant group of biological interactions would have otherwise remained unrecognized.

CONCLUSIONS
bionetbuilder  <dig>  introduces a new suite of tools to the chicken model system, and by extension many other model systems  <cit> , that are user-friendly and interoperable with a wide variety of other useful programs via an easy to use  interface. by transferring and integrating interactions across species and serving them directly to cytoscape, with any combination of previously available interaction data, a very large chicken interaction network is available for experimental investigation. users can take advantage of the numerous plugins for downstream analysis as well as all resources available through the gaggle.

competing interests
the authors declare that they have no competing interests.

authors' contributions
jhk, kd, ap, kb, and sd implemented the improvements to bionetbuilder. jhk wrote the manuscript, generated the figures, and performed statistical analysis of the microarray data. tay planned and performed the chicken embryo dissections for microarray analysis. rb supervised aspects of bionetbuilder  <dig>  development and wrote and edited portions of the manuscript. pba designed and coordinated the studies, interpreted data and wrote the manuscript. all authors read and approved the manuscript.

supplementary material
additional file 1
this file contains all necessary data in the tutorial. it can be unpacked by double-clicking it.

click here for file

 additional file 2
this file contains screen-shots of each step of part  <dig> of the main tutorial to help user's follow along.

click here for file

 additional file 3
this file contains screen-shots of each step of part  <dig> of the main tutorial to help user's follow along.

click here for file

 additional file 4
alternate tutorial.

click here for file

 additional file 5
this file contains screen-shots of each step of the alternate tutorial to help user's follow along.

click here for file

 acknowledgements
this work was supported by a university of arizona bio <dig> seed grant. jhk is supported by an nih institutional predoctoral training grant.

this article has been published as part of bmc genomics volume  <dig> supplement  <dig>  2009: proceedings of the avian genomics conference and gene ontology annotation workshop. the full contents of the supplement are available online at http://www.biomedcentral.com/1471-2164/10?issue=s2
