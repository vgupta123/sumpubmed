BACKGROUND
most of the existing efforts to identify the binding sites in protein-protein interaction are based on analyzing the differences between interface residues and non-interface residues, often through the use of machine learning or statistical methods. these methods differ in the features analyzed, that is, the sequence and structural or physical attributes. chung et al. <cit>  used multiple structure alignments of the individual components in known complexes to derive structurally conserved residues. sequence profile and accessible surface area information are combined with the conservation score to predict protein-protein binding sites by using a support vector machine. ofran et al. <cit>  employed neural networks to predict binding sites, using the sequence environment, the profile and the structural features as input. the random forest algorithm is used to utilize these features from sequences or 3d structures for the binding site prediction
 <cit> . psiver
 <cit>  uses sequence features for training a naïve bayes classifier to predict binding sites. in psiver, conditional probabilities of each sequence feature are estimated using a kernel density estimation method.

besides the machine learning and statistical approaches, 3d structural algorithms and other methods have also been used to identify binding sites through investigating protein surface structures. probis
 <cit>  predicts binding sites by local surface structure alignment. it compares the query protein to 3d protein structures in a database to detect proteins with structurally similar sites on the surfaces. burgoyne et al. <cit>  analyzed clefts in protein surfaces that are likely to correspond to the binding sites. they ranked them according to sequence conservation and simple measures of physical properties including hydrophobicity, desolvation, electrostatic and van der waals potentials. ortuso et al. <cit>  defined most relevant interaction areas in complexes deriving pharmacophore models from 3d structure information. it is based on 3d maps computed by the grid program on structurally known molecular complexes.

promate
 <cit>  is based on the idea of interface and non-interface circles. a circle is first created around each residue. then, features are extracted from these circles. statistics are performed and histograms are created for each feature. thereafter, the probability for each circle of a test protein to be an interface is estimated. the interface circles are clustered for each test protein to identify the binding patch.

bradford et al. <cit>  proposed an approach  which uses svm  on surface patch features to predict binding sites. ppi-pred generates an interacting patch and a non-interacting patch for each protein. seven features are extracted for each patch to build an svm model, which is then used to predict if a given test patch is an interacting patch.

in pinup
 <cit> , an empirical scoring function is presented to predict binding sites. the function is a linear combination of energy score, interface propensity and residue conservation score. a patch is formed by a residue and its spatial neighbors within the protein subunit. pinup takes the top 5% scoring patches and ranks residues based on their occurrences in these patches. the top  <dig> ranked residues are predicted as the interface residues.

li et al. <cit>  proposed another svm approach . the residues of the proteins are divided into four classes: the interior residues, the core interface residues, the rim interface residues, and the non-interface residues. the core interface and rim interface residues are distinguished by the percentage of their neighboring residues which are interface residues. an svm is built over eight features extracted from the interface residues, and used to compute the probability of whether a residue is a core interface residue.

meta-servers have also been constructed to combine the strengths of existing approaches. the program called meta-ppisp
 <cit>  combines three individual servers, namely cons-ppisp, promate and pinup; another program called metappi
 <cit>  combines five prediction methods, namely ppi-pred, pinup, ppisp, promate, and sppider
 <cit> .

another approach in binding site prediction is to examine the possible structural configurations, or referred to as poses, of protein subunits, that is, how the subunits may dock. docking methods based on fast fourier transformation 
 <cit> , geometric surface matching
 <cit> , as well as intermolecular energy
 <cit>  have been proposed. fernández-recio et al. <cit>  simulated protein docking and analyzed the interaction energy landscapes. their method uses a global docking method based on multi-start global energy optimization of the ligand. it explores the conformational space around the whole receptor, and uses the rigid-body docking configurations to project the docking energy landscapes onto the surfaces. the low-energy regions are predicted as the binding sites.

in this paper, we propose a method which enumerates the configurations of two binding proteins , and identify binding sites by evaluating the interaction between the components using the atomic contact energy  function
 <cit> . we perform rigid transformation to enumerate the configurations of two binding proteins. the enumeration is performed in conjunction with a surface identification technique for avoiding clashes between protein subunits when computing rigid transformations. the transformations which result in the minimum score according to the atomic contact energy function are found; the corresponding interacting residues are reported as binding sites. our method is implemented in a program called dobia.

we perform experiment to compare dobi with the existing methods using commonly used measures for assessments. the program outperforms the other methods on these measures. dobi achieved a success rate higher than all the other methods, improving prediction quality in terms of both accuracy and coverage. in addition, it predicts the configurations of two binding proteins, as opposed to giving only the binding sites.

methods
the main idea of our method is to enumerate “all” configurations between two proteins, where a configuration refers to the 3d coordinates representing the relative position and orientation of two protein subunits in a complex. we use the atomic contact energy  function to compute the score for a configuration. the configurations with the lowest score are chosen, and the corresponding interacting residues are predicted as binding sites. we use rigid transformation to enumerate the configurations. the key techniques required here contain  an efficient algorithm to enumerate “all” configurations  and  a good energy score.

atomic contact energy
atomic contact energy  is an atomic desolvation energy measure developed in
 <cit> . it is defined over the energy of replacing a protein-atom/water contact, with a protein-atom/protein-atom contact. the ace score takes into account  <dig> atom types, hence resulting in 18× <dig> possible atom pairs. the score for each atom pair has been determined, based on a statistical analysis of atom-pairing frequencies in known proteins. these pre-determined scores are given as log likelihood values in
 <cit> , thus allowing the summation of these values. the pre-determined score of effective contact energy between atom type i and type j is defined as 

  t=−lnni,j/ci,j× 

 where type  <dig> corresponds to the solvent. the number of i-j contact  and the number of i- <dig> contact  are estimates of the actual contact numbers of known complexes. in addition, ci,j and ci, <dig> are defined as the expected numbers of ij contact and i- <dig> contact.

for a given configuration, the ace score is a summation of each of the atom pairs  within threshold distance d, and d = 6Å is used in this paper. denote the sets of atoms from the two subunits as s <dig> and s <dig>  respectively, then the ace is computed as 

  eace=∑s∈s <dig> t∈s <dig> ||s−t||≤dt 

 where |s−t| is the euclidean distance between s and t, and t is the pre-determined score of the atom pair s and t.

the ace score can be considered an estimate of the change in desolvation energy of the two proteins in going from the unbound state to the complex. a lower ace value implies a lower  desolvation free energy.

enumeration of the configurations
in this paper, we assume that subunits are rigid. a protein structure consists of a sequence of residues. each residue consists of a set of atoms. we assume that the atoms in a residue are ordered as a sequence. hence, the whole protein structure can be represented by a sequence of atoms. in the rest of this subsection, we let a and b denote two protein structures , and write a = , and b = , where ai, and bj are atoms of structure a and b. without loss of generality, we assume that n ≥ m. we also assume that we know the 3d coordinates of each atom in both input proteins. we use a to denote the subsequence , and refer to a subsequence of atoms as a structural fragment.

to enumerate all the configurations, we assume b is fixed, and we perform rotations and translations  on a. the method proposed here is modified from the algorithms for structure comparison
 <cit> .

assume that two points ai and aj of a interact with two points bi′ and bj′ of b, then we know that ||ai − bi′|| ≤ d and ||aj − bj′ || ≤ d. to enumerate the configurations, we enumerate the positions for atoms ai and aj first, and for each fixed positions of ai and aj, we rotate a about the line formed by ai and aj. let the d-ball of an atom a be the ball with radius d centered at a. we discretize the d-ball of bi′ with step size εd, where ε is a small constant . each grid point in the d-ball of bi′ is used as a candidate position for atom ai for the binding. when ai is fixed at one of the grid points, the possible positions for aj form a sphere cap, where the sphere is centered at ai with radius |ai−aj |, and the cap is the portion of the spheres enclosed in the d-ball of bj′. again, we discretize the sphere cap with step size εd. each grid point on the sphere cap is a candidate position for aj. this gives us a total of
o5) possible positions for the pair of ai and aj. after ai and aj are fixed on their respective grid points, the only degree of freedom to move a is to rotate it around the axis through ai and aj. we use a 1° step size; that is, we explore  <dig> different positions for the remaining atoms through  <dig> rotations. figure
 <dig> illustrates the steps to compute a transformation.
o3) grid points d-ball of bi′.  put aj at a grid point on the intersection of the sphere centered at ai with radius |aiaj| and d-ball of bj′. there are at most
o2) grid points on the intersection.  use ai and aj as the rotation axis.

the method will work well if we know two interaction pairs  and . we can simply enumerate all the atoms pairs as the interaction pair candidate. however, there will be o such cases, which makes the computer program too slow in practice. this is perhaps one of the reasons that such a method has not been tried. the focus of the following subsection is to identify two pairs  and  which are more likely to be interaction pairs.

when enumerating “all” configurations, we also want to make sure that  only surface fragments can be candidate binding sites for a configuration and  there is no clash between the two proteins in such a configuration. before presenting the details of the method, we define the surface atoms and clashes of two subunits first.

surface atoms
the interface residues of two proteins are necessarily surface residues. inspired by the work in ligsitecsc <cit> , we propose a method to identify the surface atoms of a protein.

first, we build a 3d grid with step size 1Å around the protein. then, each grid point is labeled as a protein point if it is within distance 2Å of any atom, and labeled as empty otherwise. we further subdivide the protein grid points into two types: interior or surface. a protein grid point is labeled as surface if at least one of its six neighboring grid points is empty, otherwise it is labeled as interior. with the grid points labeled, we can label the atoms. an atom is labeled as a surface atom if it is within distance  <dig> Å of a surface grid point, otherwise it is labeled as an interior atom.

figure
 <dig> gives an example in 2d, where a protein grid point is labeled as interior if it has all four neighbors as protein points. in 3d, a protein grid point should be labeled as interior if all of its six neighbors are labeled as protein.

clashes of two subunits
a configuration cannot result in two subunits to have clashes. the following method is used to capture if a configuration resulted in clashes. given a configuration, we build a 3d grid as in the previous subsection. for each of the structures a and b, we mark the grid points as interior, surface, or empty. we use a threshold θ to identify whether two subunits clash, by calculating the proportion of interior points for both of them. we say that the two subunits clash if they share more than θ × 100% of their interior points; that is, if x is the number of interior grid points which are shared by both proteins, and xa and xb are the number of interior grid points of each subunit, respectively, then we require that x ≤ θ × min{xa,xb} if the subunits do not clash.

finding the two interaction pairs
in the following subsections, we present the details to explore the potential interaction pairs.

identify candidate fragment pairs
we first select fragment pairs that are potential binding sites. as discussed in section “enumeration of the configurations”, there are o possible fragment pairs  and  for each binding site. to reduce the computational complexity, we adopt a local alignment algorithm to accelerate this selection. this is a raw estimation and we hope that the actual binding sites are not discarded by this process.

we first use a heuristic to quickly discard fragments pairs that are unlikely to bind. the heuristic simplifies the problem, as follows:  every atom is within the threshold value required in the ace computation ;  each atom interacts with at most one atom;  interacting pairs follows a sequential order. that is, for any two pairs of interacted atoms  and , we have either i < i′ and j < j′, or i′ < i and j′ < j. with these three simplifications, the standard smith-waterman local alignment algorithm
 <cit>  can be employed, with the ace scores used as the penalty  for alignment. we use a penalty of  <dig> for aligning an atom to a space. each local aligned segment gives us two fragments, where each atom in the fragment is either aligned to another atom from the partner, or aligned to nothing .

we present details here. for two sequences p1and p <dig>  an alignment of p <dig> and p <dig> can be obtained by  inserting spaces into the two sequences p <dig> and p <dig> such that the two resulting sequences with inserted spaces p′ <dig> and p′ <dig> have the same length and  overlap the two resulting sequences p′ <dig> and p′ <dig>  the score of the alignment is the sum of the scores for all the columns, where each column has a pair of letters  and for each pair of letters there is a pre-defined score. a subsequence α of p <dig> and a subsequence β of p <dig> can be formed as a local aligned segment such that the score between α and β is minimum. here we want to find all  pairs of subsequences with a score of at most x. for our purpose, we set x =  <dig> throughout the paper.

due to the simplifications, there are many false positive results, and some of the interaction pairs can be filtered. the latter issue can be handled to some extend by raising the threshold. the former issue is tackled by further refinement in the next subsection. in practice, our program outputs  <dig> to  <dig> fragment pairs as potential binding sites, which is much smaller than o, where the number of atoms n in a protein is from  <dig> to a few thousands.

since a binding site is necessarily on the surface of a subunit, we filter out fragments with only very few atoms on the surface. to achieve this, we use a sliding window of length  <dig> to parse the aligned fragment pair. for each window, if the surface atoms are at least 2/ <dig>  for both fragments, the fragment pair of this window is kept for further processing and this fragment pair is extracted from the alignment. we continue this process on the un-extracted portion of the alignment. if the window does not contain sufficient surface atoms, we continue at the next window. our choice of 2/ <dig> comes from observations with a docking decoy set from the dockground
 <cit> , where 94% of the binding sites have more than 2/ <dig> of surface atoms.

identify configurations of fragment pairs
from the fragment pairs obtained in the previous step, a second step is used to further filter out fragment pairs of ace scores below a threshold. given two structural fragments a = , and b = , we assume that ai interacts with bi′, and aj interacts with bj′. using the enumeration method described earlier, we enumerate different configurations for a and b and compute the corresponding ace score for the atom sets a and b. we do not consider any configuration which causes a and b to clash. in this step, a pair of structural fragment which does not give any configuration with an ace score below a specified threshold is discarded. in this paper, we define the threshold value as  <dig>  since the ace scores of actual interface in the docking decoy set from dockground are all less than  <dig>  after this step, it is unlikely for two protein structures which cannot be bound to have an unfiltered fragment pair.

identify the configuration for the two subunits
in the third step, for each pair of protein structures with at least one remaining fragment pair, we enumerate all the potential configurations for the structures. we want to use the begin and end atoms of the identified fragments for our choice of  and  in the enumeration, since these are the atoms that are likely to be interacting. assuming that there are k fragment pairs from the same two proteins left after the filtration of the second step, we will have a maximum of 2k distinct atom pairs to choose. thus, there is a total of at most
2k <dig> combinations to consider for the choice of  and .

when the best configuration is obtained, two residues, one from each subunit, are reported as the interface residues if they can be connected with a pair of atoms within distance  <dig> Å. in our search for the best configuration, we also require the configurations to be free from clashes.

RESULTS
three commonly used measures are utilized to assess the performance of dobi. accuracy and coverage are two common measures to assess the quality of the binding sites adopted by a method
 <cit> . the accuracy of the predicted interface is the fraction of correctly predicted residues over the total number of predicted interface residues; the coverage of the predicted interface is the fraction of correctly predicted interface residues over the total number of actual interface residues. f-score  is a weighted average of the accuracy and coverage, where an f-score reaches its best score at  <dig> and worst score at  <dig>  another common measure is success rate, which is defined in
 <cit> . a reported result is claimed as a success if at least half of the predicted residues are actual interface residues; that is, the accuracy is no less than 50%. the success rate is the fraction of successful predicted cases in the total number of predicted proteins.

a protein complex may contain several subunits, and multiple binding sites. each binding site in a protein complex consists of a pair of subunits. two residues in a pair of subunits are called interface residues if any two atoms, one from each residue, interact. by interact, we mean the distance between the two atoms is less than the sum of the van der waals radius of the two atoms plus 1Å. the number of residues on interface is referred to as the interface size.

training set
we use the unbound protein structures from dockground
 <cit>  as the training set to calculate the parameters of dobi. the docking decoys from dockground were generated by gramm-x scan. the gramm-x docking scan was used to generate  <dig> unbound-unbound complexes and  <dig> unbound-bound complexes. by excluding the proteins used in the comparison,  <dig> unbound-unbound complexes and  <dig> unbound-bound complexes can be used to calculate the value of the threshold θ. when we set θ =  <dig> , the overall f-score of dobi on the training set is  <dig> %, which is the best score that dobi achieves under different threshold values. the details on the training set are shown in table
 <dig> 

afr  is the f-score of our method on the receptor proteins.

bfl  is the f-score of our method on the ligand proteins.

comparison to the existing methods
we divide our comparisons into four separate groups, where in each group we compare a different set of methods. the reason that we cannot compare all the methods with the same data set is due to the unavailability of some methods, in which case the only comparison possible is with the results in the respective publications.

comparison to fernández-recio et al.’s method
dobi is compared to the method introduced by fernández-recio et al. in
 <cit> , using the test data therein, which consists of  <dig> complexes. the results are reported in table
 <dig>  the overall accuracy and coverage for dobi are  <dig> % and  <dig> %. fernández-recio et al. ’s method achieved the overall accuracy and coverage of  <dig> % and  <dig> %, respectively. the success rate for dobi is  <dig> %, improving over the success rate of  <dig> % reported by fernández-recio et al.. the f-score is  <dig>  for dobi, and  <dig>  for fernández-recio et al.’s method.

asuc  is the success rate of the corresponding method on the data set.

bacc  is the average accuracy of the corresponding method on the data set.

ccov  is the average coverage of the corresponding method on the data set.

dm is the average of the sizes predicted by the corresponding method on the data set.

ev is the standard deviation of the sizes predicted by the corresponding method on the data set.

ff is the f-score of the corresponding method on the data set.

the average predicted sizes for dobi and fernández-recio et al.’s method are  <dig>  residues and  <dig>  residues respectively, while the average actual size is  <dig>  residues. the standard deviation of the sizes predicted by dobi is  <dig> , while that of the sizes predicted by fernández-recio et al.’s method is  <dig> .

table
 <dig> displays the detailed results for all unbound structures of  <dig> complexes. each row corresponds to a pair of proteins. we can observe from the table that the binding sites are identified accurately for the complexes 2sni, 2sic, 1ay <dig> and 1wq <dig> 

apdb is the unbound structure of the receptor or ligand in the complex.

bintn is the number of residues on the actual interface in the complex.

cacc  is the accuracy of the corresponding method on the data set.

dcov  is the coverage of the corresponding method on the data set.

ethe values for this method are from literature
 <cit> .

comparison to metappi, meta-ppisp and ppi-pred
in this group of our comparisons, the test set in
 <cit>  is used. it consists of  <dig> complexes from the benchmark v <dig> 
 <cit>  and  <dig> targets from the capri experiment
 <cit> . the  <dig> complexes are divided into two categories, enzyme-inhibitor  and others. we compare our method to metappi, meta-ppisp and ppi-pred with this group of data. the overall accuracy and coverage of each prediction method are shown in table
 <dig>  dobi has an f-score of  <dig> , where in contrast, metappi, meta-ppisp and ppi-pred have the f-scores  <dig> ,  <dig>  and  <dig>  respectively. dobi has a success rate of  <dig> %, as well as overall accuracy and coverage of  <dig> % and  <dig> % respectively.

asuc  is the success rate of the corresponding method on the data set.

bacc  is the average accuracy of the corresponding method on the data set.

ccov  is the average coverage of the corresponding method on the data set.

de-i is the type of enzyme-inhibitor.

em is the average of the sizes predicted by the corresponding method on the data set.

fv is the standard deviation of the sizes predicted by the corresponding method on the data set.

gf is the f-score of the corresponding method on the data set.

the detailed results on all the unbound structures of the  <dig> complexes are displayed in table
 <dig>  the detailed results on  <dig> capri targets are displayed in table
 <dig>  each row displays the results of the methods tested on the two corresponding binding partners.

apdb is the unbound structure of the two proteins in complex.

bintn is the number of residues on actual interface in complex.

cacc  is the accuracy of the corresponding method on the data set.

dcov  is the coverage of the corresponding method on the data set.

ee-i is the type of enzyme-inhibitor.

fthe values for metappi and meta-ppisp are from literatures
 <cit> .

gthe results for ppi-pred are calculated by using the same definition of actual interface with dobi.

hthe binding sites between chain e and chain i of 1acb are predicted by each method; two unbound structures are chain b of 2cga and the only one chain of 1egl.

aintn is the number of residues on actual interface in complex.

bacc  is the accuracy of the corresponding method on the data set.

ccov  is the coverage of the corresponding method on the data set.

dthe values for these methods are from literatures
 <cit> .

besides the identification of binding sites, our program also estimates the orientations and positions of the proteins after binding. figure
 <dig> displays the orientation and position discovered by our program for 1qa <dig>  the cα interface rmsd   between the experimental structure and the predicted complex is  <dig> Å.

comparison to promate and pinup
in this experiment, dobi is compared to promate and pinup. the test data is originally used by promate, and consists of  <dig> non-homologous proteins. the results are reported in table
 <dig>  dobi has an f-score of  <dig> , while pinup and promate have the f-scores  <dig>  and  <dig>  respectively. the overall accuracy and coverage of dobi are  <dig> % and  <dig> %. the success rate of dobi is  <dig> %. hence the success rate is improved by at least  <dig> %, while the overall accuracy and coverage are improved by at least  <dig> % and  <dig> % respectively.

asuc  is the success rate of the corresponding method on the data set.

bacc  is the average accuracy of the corresponding method on the data set.

ccov  is the average coverage of the corresponding method on the data set.

dm is the average of the sizes predicted by the corresponding method on the data set.

ev is the standard deviation of the sizes predicted by the corresponding method on the data set.

ff is the f-score of the corresponding method on the data set.

the average of the sizes predicted by dobi, pinup and promate are  <dig>  residues,  <dig>  residues and  <dig>  residues respectively, while the actual average size  is  <dig>  residues. the number of residues correctly predicted to be on interface by dobi, pinup and promate are  <dig>  residues,  <dig>  residues and  <dig>  residues respectively.

table
 <dig> shows the detailed results of  <dig> unbound proteins. dobi performed better for most of the cases. however, for some cases where all three methods do not perform well, dobi is usually the worst, e.g. 1avu_, 1aye_, 1qqra and 1b1ea.

apdb is the unbound structure of the predicted protein.

bintn is the number of residues on actual interface in complex.

cacc  is the accuracy of the corresponding method on the data set.

dcov  is the coverage of the corresponding method on the data set.

ethe unbound structure of 1jtgb was not available in pdb, and we used the bound structure instead.

fthe values for promate are from literature
 <cit> .

gthe results for pinup are calculated by using the same definition of actual interface with dobi.

comparison to core-svm
in this study, we compare dobi to core-svm using the same data set of  <dig> dimers which core-svm was tested against
 <cit> . the results are shown in table
 <dig>  the overall accuracy and coverage for our method are  <dig> % and  <dig> %, while those for core-svm are  <dig> % and  <dig> %. the success rate of dobi is  <dig> % on  <dig> pairs of proteins in those binary complexes. the f-score is  <dig>  for dobi, and  <dig>  for core-svm. the average of the size predicted by dobi is  <dig>  residues , while the average actual size is  <dig>  residues. the number of residues correctly predicted by dobi to be on the interface is  <dig> .

asuc  is the success rate of the corresponding method on the data set.

bacc  is the average accuracy of the corresponding method on the data set.

ccov  is the average coverage of the corresponding method on the data set.

dm is the average predicted size for dobi on the data set.

ev is the standard deviation of predicted size for dobi on the data set.

ff is the f-score of the corresponding method on the data set.

gthe values for core-svm are from literature
 <cit> .

table
 <dig> shows the details for dobi on the data set used by core-svm. the performance of dobi is particularly good on several proteins such as 1aym <dig> and 1rzhm.

aintn is the number of residues on actual interface in complex.

bcn is the number of residues correctly predicted to be on interface by our method.

cpn is the number of total residues predicted to be on interface by our method.

dacc  is the accuracy of our method on the data set.

ecov  is the coverage of our method on the data set.

evaluation on benchmark v <dig> 
to further evaluate our method, we perform tests on the protein-protein docking benchmark v <dig> 
 <cit> . this benchmark consists of  <dig> complexes. proteins dynamically change their conformations upon binding with other proteins
 <cit> . a single protein without binding with any other structure is referred to as unbound, whereas a protein with a binding partner in a complex is referred to as bound. we test our method in both the bound and the unbound cases. 

"running time"

we used a pentium  <dig>  to run dobi. the computation for each of the  <dig> complexes took  <dig> seconds on average.

results on bound states
the complexes are classified into broad biochemical categories: enzyme-inhibitor , antibody-antigen  and others . the average accuracy and coverage of dobi are  <dig> % and  <dig> % respectively on the  <dig> complexes in enzyme-inhibitor,  <dig> % and  <dig> % on the  <dig> complexes in antibody-antigen, and  <dig> % and  <dig> % on the  <dig> complexes in others. a success rate of  <dig> % is achieved for the enzyme-inhibitor complexes. the details are shown in table
 <dig> 

atype is based on the broad biochemical categories.

bsuc  is the success rate of dobi on the data set.

cacc  is the average accuracy of dobi on the data set.

dcov  is the average coverage of dobi on the data set.

em is the average of the sizes predicted by dobi on the data set.

fv is the standard deviation of the sizes predicted by dobi on the data set.

results on unbound states
the pairs of unbound proteins are classified into three categories:  <dig> rigid-body  cases,  <dig> medium difficult cases, and  <dig> difficult cases, according to the magnitude of conformational change after binding
 <cit> . the average accuracy and coverage of dobi are  <dig> % and  <dig> % on the  <dig> rigid-body cases,  <dig> % and  <dig> % on the  <dig> medium difficult cases, and  <dig> % and  <dig> % on the  <dig> difficult cases. the success rate of dobi is  <dig> % for the rigid-body cases, which is significantly better than for the other two categories. in general, the accuracy and coverage decrease as the magnitude of conformational increases. the details are shown in table
 <dig> 

asubset is based on the magnitude of conformational change after binding.

btype is based on the broad biochemical categories.

csuc  is the success rate of dobi on the data set.

dacc  is the average accuracy of dobi on the data set.

ecov  is the average coverage of dobi on the data set.

fm is the average predicted size for dobi on the data set.

gv is the standard deviation of predicted size for dobi on the data set.

dobi discovered several good configurations for the medium difficult cases. one of the instances is 1wq <dig>  its configuration discovered by dobi is shown in figure
 <dig>  the cα irmsd between the experimental structure and the predicted complex is  <dig> Å.

docking result of dobi
dobi is optimized for binding site prediction, but it also can be used to dock two protein structures. we compare dobi’s poses to the best configurations obtained by zdock and 3d-dock. zdock
 <cit>  uses a fast fourier transform to search all possible binding modes for the proteins, and evaluates them based on shape complementarity, desolvation energy, and electrostatics. it can produce structures with the smallest irmsd values in top  <dig> predictions with minimum energy. 3d-dock
 <cit>  uses an initial grid-based shape complementarity search to produce lots of potential interacting conformations. they can be ranked by using interface residue propensities and interaction energies. it reports structures with the smallest irmsd values in top ten predictions.

acα irmsd between the configuration by the respective method and the experimental structure.

bnc  is fraction of native contacts for each method.

cfl is the f-score of each method for the ligand protein on the data set.

dfr  is the f-score of each method for the receptor protein on the data set.

ethe values for 3d-dock are from literatures
 <cit> ; the blank results mean that 3d-dock never produced on these targets.

we calculate the predicted structures by different methods on the complexes in benchmark v <dig>  and the targets in capri. capri is a community-wide experiment to assess the capacity of protein docking methods to predict protein-protein interactions
 <cit> . the cα irmsd, f-score and the fraction of native contacts are used to evaluate the results by different methods. the fraction of native contacts is used by 3d-dock
 <cit> . it is calculated as the total number of native contacts for the predicted configuration divided by the total number of contacts in the native structure. a native contact exists between residues i and j if distances between them in native structure and in predicted configuration are both less than  <dig> Å.

we compare the docking results of dobi, zdock and 3d-dock on the capri targets. the results are shown in table
 <dig>  the top  <dig>  configurations predicted by dobi and zdock are used for comparison. among the  <dig>  predictions, we choose the configuration of the best irmsd value to evaluate the methods. the average irmsd values for dobi and zdock are  <dig> Å and  <dig> Å, respectively. however, the average fractions of native contacts for dobi and zdock are  <dig> % and  <dig> %, respectively. dobi improves the f-score of binding site prediction by at least  <dig> %. dobi’s performance on docking is worse than zdock, but its performance on binding site prediction is more accurate than zdock.

acα irmsd between the configuration by methods and the experimental structure.

bfl  is the f-score of each method for the ligand protein on the data set.

cfr  is the f-score of each method for the receptor protein on the data set.

each of dobi and 3d-dock produced ten results for each target, and the configurations with smallest irmsd values among those ten predictions are used for comparison. the average irmsd values for dobi and 3d-dock are  <dig> Å and  <dig> Å. however, the overall fractions of native contacts for dobi and 3d-dock are  <dig> % and  <dig> %. dobi’s performance on binding site prediction is better than that of 3d-dock.

the docking results obtained by dobi and zdock on benchmark v <dig>  are shown in table
 <dig>  similarly, we compare the best configurations in the top  <dig> predictions from each method of dobi and zdock for each target. the average irmsd values of dobi and zdock are  <dig> Å and  <dig> Å, respectively. for the binding site prediction, the overall f-score values of ligand proteins by dobi and zdock are  <dig> % and  <dig> %, and those of receptor proteins by dobi and zdock are  <dig> % and  <dig> %, respectively. these results indicate that dobi’s performance on binding site prediction is better than zdock. the docking quality of dobi requires further efforts to improve.

aeact is ace score for the experimental structure on the data set.

bepre is ace score for the prediction complex on the data set.

cfr  is the f-score of our method for the receptor protein on the data set.

dfl  is the f-score of our method for the ligand protein on the data set.

we calculate the docking results of 1i4d. the cα irmsd values between the experimental structure and the configurations by dobi and zdock are  <dig> Å and  <dig> Å, respectively. dobi improves f-score value of ligand protein by  <dig> %, and that of receptor protein by  <dig> %. the configurations produced by methods are shown in figure
 <dig> 

factors affecting the performance of dobi
we notice that dobi performed badly on a few specific instances. we analyze this performance issue with table
 <dig>  which compares the ace scores for the experimental structures and predicted complexes, for the bound states of proteins in the benchmark v <dig> . among the  <dig> complexes, only  <dig> of them have an ace score for experimental structures lower than that of the predicted complexes. this implies that in  <dig> cases, dobi is able to find a configuration of a lower score than the experimental structures. these anomalies suggest that the score function currently used in dobi may be inaccurate, and this inaccuracy may have contributed to the poorly performed cases of dobi. we also note that the search space currently explored by our method is incomplete, and this may have contributed as well to the inaccuracy of dobi in some cases.

figure
 <dig> shows the protein complex incorrectly predicted by dobi as well as the experimental structure for 1kxq. the irmsd between the two complexes is  <dig> Å. the ace score of the docking structure predicted by dobi, - <dig> , is lower than the ace score of the experimental structure,  <dig> . the binding sites predicted by dobi are incorrect as well.

CONCLUSIONS
in this work, we proposed an approach to identify binding sites in protein complexes by docking protein subunits. the method is implemented in a program called dobi. dobi consistently and significantly performed better than existing techniques in predicting binding sites in experimental results.

we identify a few potential areas for future improvements to our method. the first area to work on is in the energy function used. currently, dobi uses a simple score function. as suggested by the experiment results, a better energy function is able to improve the performance of dobi.

a second area for improvement is in our current assumption that protein structures are rigid when binding. in reality, protein structures may vary sightly or even dramatically when they bind. hence, further studies on this issue are very much in demand.

although our method shows better overall performance, there are some protein complexes where other methods outperformed dobi. it will be beneficial if we could combine the strengths of these existing programs with dobi, to come up with a more reliable method.

endnote
athe initial two letters from each of the two words, docking and binding, were taken.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
fg participated in the design of the study, performed the statistical analysis, and is in charge of the software package development. sl participated in the experiment design and drafted the manuscript. lw conceived of the study, participated in its design, and helped to draft the manuscript. dz is heavily involved in the computation of the tables. all authors read and approved the final manuscript.

