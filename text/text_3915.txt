BACKGROUND
the reconstruction of multiple sequence alignments  is a crucial step in most of the advanced homology-based sequence analyses, because it prepares input data fed into a wide variety of bio-macromolecular analyses in computational biology, such as the inference of phylogenetic relationships among dna/rna/protein sequences  <cit> , the prediction of their 3d structures  <cit> , the prediction and comparison of their functions , and the identification of their sites or regions under selection  <cit> . because of such importance, it is essential to reconstruct msas as accurately as possible. the development of msa aligners, i.e., programs to reconstruct msas, has a long history . since the advent of clustalw about two decades ago  <cit> , it had been a de facto standard for a long time. then, it was followed by the “next generation” of aligners, such as t-coffee  <cit> , mafft , muscle  <cit> , probcons  <cit> , prank  <cit> , mummals  <cit> , probalign  <cit> , m-coffee  <cit>  and dialign-tx  <cit> , which feature improved computational speed and/or accuracy, and currently they and the upgraded clustalw can be regarded as the state-of-the-art programs to search for an optimum msa. nevertheless, even recently, the accuracy of reconstructed msas has frequently come into question . for example, wong et al.  <cit>  pointed out that different aligners produce different msas, which often result in conflicting conclusions on the sequence phylogeny or positively selected sites, and they hypothesized that uncertainty in the alignment can lead to such problems. landan and graur  <cit>  estimated that, depending on the sequence divergences, about 5–90% of the “homologous” residue pairs in each reconstructed msa are erroneous. msa errors influence the results, and even the conclusions, of the downstream analyses . especially, msa errors impact the inference of insertions/deletions  directly  <cit> , because the msa reconstruction problem is, after all, how to place gaps, and because gaps are usually supposed to represent the effects of indels on the sequences. thus, the success of methods to infer the history of indels from a given msa  depends heavily on how accurately the msa was reconstructed.

the exact purpose of this study is to gain new insights into how to further improve the accuracy of msa reconstruction. for this purpose, we will look into msa errors from angles different from those attempted thus far. we consider that there are at least three major causes of msa errors:  discrepancies between the score and the true likelihood of a msa,  inadequate exploration of the msa space, and  the stochastic nature of sequence evolutionary processes. first, any msa scoring system must have been devised so that the msa with the highest score will be the most likely under some “model” of msa creation, which may have been conceived explicitly or implicitly. as the “model” represents  the natural evolutionary processes more faithfully, the msa score will approximate the true occurrence probability, or the “true likelihood,” of a msa more accurately. in reality, however, the highest scoring of a msa under a certain scoring system does not necessarily guarantee that the msa is truly most likely to be generated through real evolutionary processes. this is conspicuous for “similarity-based” aligners that use some sum-of-pairs scoring systems or their derivatives , as they do not faithfully reflect evolutionary processes, especially those of insertions/deletions  . but, although subtle, “evolution-based” aligners  are not completely immune to this problem, either, because their scores are usually based on probabilistic models that are not genuine stochastic evolutionary models of realistic sequence evolution. here a “genuine stochastic evolutionary model,” or an “evolutionary model” for short, means a stochastic model that describes the evolution of an entire sequence along a time axis  via substitutions and indels without unnatural restrictions on the processes.  second, it is inevitable that a practical msa aligner explores only a portion of the entire msa space. the dynamic programming  for pairwise alignment  reconstruction  can explore the entire pwa space with the time complexity from o to o, where l denotes the dimension of the sequence length. however, applying dp to the msa search would take at least o  or practically forever for a set of sequences commonly analyzed . thus, inevitably, all current practical msa aligners resort to heuristics. the commonest among them are the progressive alignment  and the iterative msa refinement  <cit> , both of which are techniques that repeatedly apply the pairwise dp to align, or re-align, two sub-msas. although these techniques enable the alignment to finish within a reasonable amount of time, they could leave some important regions of the msa space unexplored. and third, it should be kept in mind that the evolutionary process on a sequence is stochastic by nature . thus, even if we were equipped with an ideal scoring system under which the truly most likely msa always scores the highest, and even if we could somehow explore the entire msa space, the optimum msa thus identified could still be different from the true msa that resulted from the actual evolutionary process. in order to contemplate strategies to improve the msa accuracy, it is therefore important to figure out the relative frequencies of msa errors by these three causes. to this end, we here use the “complete-likelihood score” of a msa, which is the logarithm of the total probability that the msa resulted under an evolutionary model , as a good proxy for the true log-likelihood of the msa.

another essential issue is the number of moves by which the true msa is separated from the reconstructed msa. if the true msa is quite “close” to the reconstructed msa in a majority of msa errors, the strategy to explore only the vicinity of the reconstructed msa could be practical. if, on the other hand, the true msa is mostly “far away” from the reconstructed msa, we may need to come up with a totally new strategy to search for the true msa. to address this issue, we introduce another new tool, the “position-shift map” , which can directly estimate the number of moves separating the two msas. the tool will also help examine msa errors at the single-residue level, because it focuses directly on the gap misplacement itself.

we chose to examine msa errors by two state-of-the-art aligners, mafft  and prank  <cit> , as representatives of similarity-based and evolution-based aligners  <cit> , respectively. although there are many other state-of-the-art aligners searching for a single optimum, such as the aforementioned clustalw, t-coffee, muscle, probcons, probalign, dialign-tx, mummals, all aligners listed here were classified as similarity-based in  <cit> . and other state-of-the-art aligners should also be classified into either of the two types. thus, we expect that the characteristics of errors by mafft and prank should well represent errors by other similarity-based aligners and evolution-based aligners, respectively.

in order to identify errors in each reconstructed msa, we need to compare it with the true msa of the identical sequence set. traditional evaluations of the msa accuracy and characterizations of msa errors used some benchmark sets of reference msas, typically based on structural alignments, such as homstrad  <cit> , balibase  <cit>  prefab  <cit> , sad  <cit> , and sabmark  <cit> . an inevitable problem in principle with these benchmark sets is that nobody knows whether or not each reference msa is indeed the true msa that faithfully reflects the actual evolutionary process. unfortunately, this is unavoidable, even though structural alignments may in general be more accurate than exclusively sequence-based alignments, or even though dedicated experts may have manually edited the reference msas to enhance their credibility. besides, when studying, e.g., the evolution or functions of non-coding dna sequences , we cannot usually rely on the 3d structural information. because this study crucially depends on the true msa in order to identify and characterize msa errors precisely, we chose to use a set of reference msas generated by computer simulations via dawg  <cit> . dawg was shown to satisfy some critical criteria for a genuine simulator of the molecular evolution of dna and protein sequences  <cit> . moreover, it also enables us to use the biologically more realistic zipf power-law distributions of indel lengths . these features of dawg guarantee that each reference msa was indeed generated through a somewhat realistic evolutionary process.

in this study, we attempt to characterize msa errors by similarity-based and evolution-based aligners, by using the complete-likelihood score and the position-shift map. we would like to stress that our purpose here is to characterize msa errors in order to find clues for improving msa accuracy but not to compare the accuracy of the aligners. those who are interested in the latter should read the aforementioned references on the aligners and the benchmark msa sets. in results and discussion, after briefly explaining these two tools , we discuss the results of the analyses using them. in its last section , the scope of this study is discussed. in methods, we describe how we did the analyses, including how we prepared the input data. some details on the analyses and the underlying theories are described in supplementary methods in additional file  <dig> 

RESULTS
r <dig>  new tools: complete-likelihood score and position-shift map
the complete-likelihood score is the log-likelihood, under a given msa, of a genuine stochastic evolutionary model. by definition, the msa with the highest complete-likelihood score should have most probably resulted from actual evolutionary processes, provided that the evolutionary model faithfully represents the processes. although similar notions  and their program implementations were proposed in the past , these studies harbor at least one of two problems. one problem is that they were based on probabilistic models that are not evolutionary models.  the other problem is that their models inevitably depended on geometric distributions of indel lengths, which are substantially different from the empirically established power-law distributions . in a previous study  <cit> , we proposed an algorithm to quite accurately calculate the occurrence probability of a msa under an evolutionary model of indels with any length distributions including power-laws. by combining this algorithm with an existing algorithm or program that calculates the occurrence probability of a msa through substitution processes , we should be able to calculate the complete-likelihood score of a msa exactly under the evolutionary model used by a genuine sequence evolution simulator as presented, e.g., in  <cit>  . one of the key results in this study is the proof that the complete likelihood score can be calculated as the summation of the substitution component and the indel component, given some commonly satisfied conditions. this result substantially facilitates the calculation of the complete likelihood, once we know how to calculate its indel and substitution components. the proof is somewhat long and thus given in section sm- <dig> of supplementary methods in additional file  <dig>  1

the other tool, the position-shift map, helps visualize how two msas of an identical sequence set differ from each other . the “position-shift” of each residue  is its horizontal position along the reconstructed msa minus that along the true msa, and a position-shift map is created from one of the two msas by replacing the residues in it with the corresponding position-shifts. the map clarifies differences between two msas  at a residue-level resolution, by focusing directly on the gap misplacement itself . in contrast, traditionally used measures of msa accuracy, such as the sum-of-pairs score and the column score  <cit> , are based on the proportion of correctly inferred homologous residue relationships. given two msas of the same homologous sequences, the construction of the position-shift map is unique, simple, and quick . and the map itself should be very useful for manual inspections of msa errors, as exemplified by panel c of fig.  <dig>  for massive analyses, however, we need to computerize the extraction of information from the position-shift map. for this purpose, we introduce “position-shift blocks,” each of which consists of contiguous residues with the same position-shift . a position-shift map is partitioned into blocks with the help of the phylogenetic tree of aligned sequences . the block can define a single step of move from one msa to the other. therefore, we can also use the map to estimate “how far” the two msas are separated from each other, and possibly to disentangle a composite msa error into a set of “elementary” errors. fig.  <dig> example position-shift map. a a true msa, which was created by a simulation along the tree in fig. 2b. b a reconstructed msa. in the position-shift map , each site of each sequence is occupied by the residue’s horizontal position in the reconstructed msa minus that in the true msa. d partitioning the map into position-shift blocks . each of the yellow and green blocks  was associated with a “shift.” the blue block  and the red one  were paired and associated with a “merge + shift.” the purple one  was judged as accompanying the blue one to result in the “merge.” [note: the rectangles in panel
d were drawn manually, based on the output of a prototype script to parse a position-shift map.]

fig.  <dig> phylogenetic trees used for simulated dna sequence evolution. a the tree of  <dig> primates. b the tree of  <dig> mammals. c the tree of  <dig> fast-evolving mammals. the number along each branch is its length . additional file 1: table s <dig> associates the sequence ids with species names



r <dig>  overall statistics on simulated and reconstructed msas
we simulated msas using dawg  <cit> , with a zipf power-law distribution of indel lengths as empirically established . each simulation started with a 1000-base dna sequence at the root. other parameters were chosen to be typical of the neutral evolution of mammalian dna sequences  <cit> . more precisely, we created three msa sets: the first along the phylogenetic tree of  <dig> primates , the second along the tree of  <dig> mammals , and the third along the tree of  <dig> fast-evolving mammals . these three sets were intended to represent homologous dna sequences with small, moderate, and large divergences, respectively . see section m <dig> of methods for details on the simulations. in total, the simulated msass in these three sets consisted of  <dig> ,  <dig>  and  <dig>  gapped segments, respectively, as well as gapless segments separating them .table  <dig> representative branch lengths for  <dig> phylogenetic trees used for simulations

total branch length a
note: each branch length is measured in terms of the expected number of substitutions per base. except in the first row, the numbers in each cell are: average ± standard deviation.


athe summation of branch lengths over all branches in the tree.

  <dig>  gapped segments with long indels b  c
mafft-i a
  <dig>  true gapped segments in item  <dig>  c
  <dig>  erroneous segments without long indels d
  <dig>  true gapped segments in item  <dig>  c

athe aligner labels, “maft-1” and “mafft-i” stand for e-ins- <dig>  and e-ins-i , respectively, of mafft


beach of these segments involves at least one apparent indel longer than  <dig> bases


cthese percentages are relative to the number of all true gapped segments  in the same column


din these segments, neither the true msas nor the reconstructed msas involve any apparent indels longer than  <dig> bases each



then, after removing all gaps from the simulated msas, the msas were reconstructed using mafft  <cit>  and prank  <cit>  . for mafft, we used an accuracy-oriented option, e-ins-i, because it was intended to perform well on msas with long gaps, which are expected to be quite common in our simulated msa sets. to examine the effect of the iterative refinement, we also performed e-ins- <dig> of mafft, which is a progressive-only option and is equivalent to e-ins-i with no iterative refinement. for prank, we tried two sets of parameters, one default and the other “best-fit.” because msas with the “best-fit” setting seemed slightly more accurate and slightly more stable against perturbations of simulation conditions in our preliminary analysis , we will henceforth discuss only the results with this setting.

after pre-processing , each simulated true msa and its reconstructed counterpart were compared and the pair of msas was chopped into an alternating series of correctly aligned segments  and erroneously aligned segments  as in  <cit>  . the basic statistics on the reconstructed msas are also shown in table  <dig>  briefly, about 37–45%, 75–87% and 97–99% of true gapped segments were involved in the errors of msas among  <dig> primates,  <dig> mammals, and  <dig> fast-evolving mammals, respectively, regardless of the alignment methods . in order to avoid extremely long computations, the analyses described hereafter were performed after removing erroneous segments containing apparent indels that are over  <dig> bases long. the fractions of the true gapped segments lost by this screening were small for  <dig> primates and  <dig> mammals, but they were substantial for  <dig> fast-evolving mammals . therefore, it should be kept in mind that the actual situations with large sequence divergences could be severer than what the data presented below will indicate.

r <dig>  comparisons of complete-likelihood scores and of aligner-specific scores
as argued in background, we consider that there are at least three major causes of msa errors:  discrepancies between the score and the true likelihood of a msa,  inadequate msa space exploration, and  the stochastic nature of evolutionary processes. by comparing the reconstructed msa with the true msa in each erroneous segment in terms of both the complete-likelihood score and the “aligner-specific score,” which was calculated according to the aligner’s own scoring scheme , we classified the erroneous segments into three broad score categories. we named them “d,” “i” and “s,” taking the first letters of the above three causes. their definitions are graphically shown in fig.  <dig>  the rationale for these definitions is as follows. first, if the true msa does not have a larger complete-likelihood score than the reconstructed msa, we cannot identify the true msa even via an ideal single-optimum search for the truly most likely msa. therefore, such erroneous segments are categorized as “s.” in each remaining segment, the true msa has a larger complete-likelihood score than the reconstructed msa, and thus it may be identified via an ideal single-optimum search. especially, if the true msa has a larger aligner-specific score than the reconstructed msa, an improved msa space exploration alone may suffice for the reconstruction of the true msa. thus, such cases are categorized as “i.” the rest exhibits discrepancies between the comparison of aligner-specific scores and that of complete-likelihood scores. thus, it is classified as “d.” it should be kept in mind, however, that a better score of the true msa than that of the reconstructed msa does not necessarily mean that the true msa has the best score, whereas a lower-score of the true msa than that of the reconstructed msa always means that the true msa is not best scoring. this fact suggests that the proportions of “s” and “i” reported below should be lower bounds and upper bounds, respectively.fig.  <dig> definitions of three broad score categories, “d,” “i” and “s.” the “<,” “=“and “>” represent the results of the comparisons of the scores of the two msas. the “rec” and “true” stand for the score of the reconstructed msa and that of the true msa, respectively. see the text for the rationale underlying these definitions of the categories



the results of this analysis are summarized in fig.  <dig> . first, we notice that category “s” always accounts for a substantial fraction, from approximately 1/ <dig> to more than 3/ <dig>  indicating the huge impact of the stochastic nature of evolutionary processes. the impact may be bigger than what the figure naively indicates, because of the caveat in the previous paragraph. second, we notice that the relative influences of categories “i” and “d” differ greatly between mafft  and prank; “d” predominates in errors via mafft and “i” predominates in errors via prank. the latter indicates that the scoring scheme of prank generally does a better job in identifying truly most likely msas, <dig> but that its msa space exploration  is not enough. in contrast, the former indicates that the scoring scheme of mafft does not represent the true likelihoods of msas so faithfully, but that its iterative refinement strategy can search for optimum msas  quite efficiently. the efficiency of the iterative refinement strategy was also corroborated by the comparison between the progressive and the iterative options of mafft . another interesting observation would be that the proportion of “i” via mafft  is nearly equal to that via prank regardless of the sequence divergence. this may not be a coincidence, because both resort to the progressive alignment for the msa space exploration.fig.  <dig> proportions of three broad score categories. each pie chart shows the proportions of  <dig> broad score categories, i , d  and s , in a particular msa set  via a specified alignment method . the specific “progressive” and “iterative” options of mafft are e-ins- <dig> and e-ins-i, respectively. for the definitions of the  <dig> categories, see fig.  <dig>  for numerical values of the proportions and the absolute frequencies, see additional file 1: table s2



r <dig>  position-shift map analysis : separation between true and reconstructed msas
here, we examine “how far” the reconstructed msa is separated from the true msa in each erroneous segment, using the position-shift map . as briefly explained in section r <dig> and section m <dig> of methods, the position-shifts mapped onto a msa are lumped into several blocks .  in principle, the number of such blocks ) should represent the number of topological steps  necessary to transform the reconstructed msa into the true msa. another important measure is the “total path length” between the two msas, which represents the number of sites whose positions need to be switched  until the two msas match. thus it is the number of “site-wise moves.” we approximated it by the summation of the lengths of the non-background position-shift blocks in each erroneous segment. we also tallied the sizes of the position-shift blocks.

additional file 1: figures s <dig> and s <dig> show their distributions for mafft , prank and mafft . on the same msa set, the distributions are quite similar among different alignment methods, and the distributions get broader and broader as the sequence divergences increase. what attracts our particular interests is the proportion of erroneous segments in which the reconstructed msa is close to the true msa. considering the feasibility of a simple exploration strategy by multiple block-shifts, we regarded the two msas as “close” to each other if they are separated only by less than  <dig> block-wise moves, or less than  <dig> site-wise moves.  table  <dig> and additional file 1: table s <dig> show the complements, i.e., the proportions of the erroneous segments where the true and reconstructed msas are “far apart” from each other. overall, regardless of the alignment method, when the sequence divergences are small or moderate, the two msas are “close” to each other in a majority of the erroneous segments: about 99% or more for  <dig> primates and about 80% for  <dig> mammals. for  <dig> fast-evolving mammals, however, the two msas are “close” to each other in only about a half of the segments. remember that intractable segments, which account for a substantial fraction in this data set, were excluded from the analysis. thus, the segments in which the two msas are “close” to each other should actually be a minority for large sequence divergences.table  <dig> erroneous segments in which reconstructed msa is “far-apart” from true msa

note: shown in each cell is the percentage of each specified score category  that the errors with each specified type of “apart”-ness  account for


a the true and reconstructed msas are separated by  <dig> or more block-wise steps


b the true and reconstructed msas are separated by  <dig> or more site-wise steps


c position-shift blocks that are  <dig> or more sites long



the tables also indicate that the proportions differ considerably among the  <dig> broad score categories. in short, category “s” contains larger proportions of segments in which the two msas are “close” to each other, whereas category “d” contains smaller proportions of such segments. this result has an important implication for possible strategies to improve the msa accuracy .

r <dig>  position-shift map analysis : tallying msa errors of different types
in order to explore the msa space starting from a reconstructed msa, it would be useful to learn what types of msa errors are common. landan and graur  <cit>  classified pairwise alignment  errors into five types: a “shift,” which is a re-positioning of a single gap not influencing any neighboring ones; a “merge” of two neighboring gaps, resulting in a single incorrect gap; a “purge” of a pair of gaps with the same size and on opposite sequences; a “split” of a gap into two incorrect gaps; an “ex-nihilo,” which creates a pair of spurious gaps of the same size on opposite sequences out of a gapless region. <dig>  and errors that cannot be classified as any of the above were tentatively put into the “complex” category. these five types apply also to msa errors, if we re-interpret a msa as a pwa of two complementary sub-msas . furthermore, because of an additional temporal  dimension, some other types of msa errors can also be defined. for example, we here define a “vertical merge” , a “collapse of independent insertions ” ” as its reverse), and an “incomplete collapse of independent insertions ” ”) . <dig> we wrote a prototype perl script that attempts to disentangle msa errors in each erroneous segment by associating each position-shift block with a msa error. the underlying idea is to compare indel events inferred by the two msas, and to attribute the changes in the inferred events to the moves of the blocks.  in addition, we noticed some cases where a pair of errors  is associated intrinsically with a pair of position-shift blocks. our prototype perl script also attempts to identify such pairs of errors . if the script failed to associate a block with an error of any definite type in this way, the block was associated with a “complex” error.fig.  <dig> “elementary” msa errors associated with single position-shift blocks. the figure schematically illustrates a “shift” , a “merge” of the events of the same type , a “merge” of the events of opposite types , a “purge” , a “vertical merge” of two deletions , a “vertical merge” of two insertions , a “collapse of independent insertions ” , and an “incomplete collapse of independent insertions ” . in each panel, the tree and the position-shift map on the left are for the true msa, and those on the right are for the reconstructed msa. in each position-shift map, the position-shift block is highlighted in yellow, a red gap was derived from an  insertion, and a blue gap was derived from a  deletion. on each tree, the thick branch delimits the position-shift block, and a red lightning bolt and a blue lightning bolt represent an insertion and a deletion, respectively, any of which may be spurious



before performing the full-scale analysis, we manually validated the prototype script using the first five msas simulated along the tree of  <dig> mammals, in order to see if the script indeed works as intended. we confirmed that the script correctly classified 95% or more of  <dig> block-associated and block-pair-associated non-complex errors,  <dig> via mafft and  <dig> via prank. 

tables  <dig>   <dig> and additional file 1: table s <dig> show the proportion of erroneous segments explained solely by each of these types of errors. among them , “shift” was always the largest category. for erroneous segments in this category, it will be relatively easy to reach the true msas from the reconstructed msas. its proportion decreased as the sequence divergence increases, from 79–90% for  <dig> primates to 19–32% for  <dig> fast-evolving mammals. in contrast, the proportion of “complex” increased with the divergence, from 4–8% for  <dig> primates to 55–67% for  <dig> fast-evolving mammals. basically, the “complex” errors mean that their classification is beyond the scope of the current prototype script . thus, their percentage is expected to decrease in the future, as we develop an algorithm to parse position-shift maps more thoroughly. <dig> the third conspicuous category was “mixture,” in which each segment contains two or more different types of non-complex errors. its proportion was about 3–10%. “paired” accounted for substantial fractions  of “mixture” when the divergence is small or moderate.table  <dig> frequencies of errors of different types in msas among  <dig> primates

v-merge a
v-split b
cii c
icii d
others e
mixture f
 g
complex h
note: shown in each cell is the number or the percentage of erroneous segments via a specified aligner  belonging to a specified error type . in each of the top  <dig> rows, the specified error type alone can explain each erroneous segment


avertical-merge


bvertical-split


ccreation of independent insertions


dincomplete creation of independent insertions


eeach segment is explained solely by a non-complex error type other than the  <dig> types above


feach segment is explained by a mixture of two or more non-complex error types


geach segment is explained solely by non-complex errors associated intrinsically with a pair, or pairs, of blocks. this is included in the “mixture” category


heach segment includes at least one complex error



tables  <dig>   <dig> and additional file 1: table s <dig> also imply some differences in nature between errors via mafft  and those via prank.  aside from the aforementioned three categories, relatively frequent categories were “merge,” “purge,” “icii,” “cii” and “vertical merge” for mafft, and “merge,” “purge,” “vertical merge,” “split” and maybe “vertical split” for prank. this was somewhat expected. first, “merge,” “purge” and “vertical merge” tend to increase both complete-likelihood and aligner-specific scores, by decreasing the number of indels, and thus are expected to be common regardless of the aligner. second, “icii” and “cii” frequently occur via mafft but not via prank, because prank was in a sense designed to reduce these types of errors, by appropriately scoring closely neighboring independent indels. and third, the relatively larger frequencies of “split” and “vertical split” via prank may be a side effect of the aforementioned design.  inspection of the “paired” category  also corroborated these observations.table  <dig> frequencies of errors of different types in msas among  <dig> mammals

v-merge a
v-split b
cii c
icii d
others e
mixture f
 g
complex h
the same note and footnotes apply as those for table 4




but these uncovered differences between the aligners are just the tip of the iceberg, and more differences will be revealed as more “complex” errors are disentangled. to get some hints on such differences, we also examined three measures of the misestimated indel counts. first, the “ordinary difference” is the number of indel events in the reconstructed msa minus that in the true msa. second, the “l <dig> distance” is the summation of the differences between the two msas in the numbers of insertions and deletions. and third, the “deletion bias” measures the tendency to overestimate the number of deletions and underestimate the number of insertions. they are defined clearly in section m <dig> of methods. the 2-dimensional distributions of the l <dig> distance and the deletion bias  highlight the different natures of errors via the two aligners.  were quite similar to those for mafft  .) aside from “shifts” predominating the large population at the origin, , errors via mafft  seem heavily biased toward overestimated deletions and/or underestimated insertions , whereas errors via prank seem more balanced . this is evident also from the overall averages of the three measures  and is consistent with the past findings  <cit> . the result suggests that the tendencies directly revealed by the position-shift map analysis , i.e., the prevalence of cii-like and icii-like errors via mafft and the prevalence of split-like and vertical-split-like errors via prank, are likely to remain valid even after unraveling errors currently classified as “complex.”fig.  <dig> different features of indel count misestimations by mafft  and prank. a,c,e via mafft, e-ins-i . b,d,f via prank. a,b with  <dig> primates. c,d with  <dig> mammals. e,f with  <dig> fast-evolving  mammals. each panel shows a 2-dimensional distribution of two measures of indel count misestimations, namely, the l <dig> distance  and the deletion bias . see section m <dig> of methods for the definitions of the measures. each of the integers is the count of erroneous segments whose l <dig> distance and deletion bias belong to the specified classes



the averages of the three measures behave differently also among the score categories . for example, for mafft, the absolute value of the deletion bias is almost equal to the l <dig> distance in categories “i” and “d,” whereas the former is much smaller than the latter in category “s.” this result may imply the following composition of errors via mafft: categories “i” and “d” are relatively richer in cii-like and icii-like errors, whereas category “s” is relatively richer in merge-like, purge-like and vertical-merge-like errors. indeed, the score-category-wise distributions of error types showed a trace of such composition .

r <dig>  suggested strategies to improve accuracy of msa reconstruction
the results of this study suggest that, even if we adhere to the traditional practice of searching for an optimum msa, we could still substantially improve the accuracy of msas via the current state-of-the-art aligners. we could potentially correct about 15–75% of the msa errors at the maximum. in the case of similarity-based aligners like mafft, especially after iterative refinement, the accuracy improvement would be only marginal by introducing a better msa search strategy alone. thus, we need to introduce the complete-likelihood score, or its good proxy, in order to cover most of the theoretically correctable msa errors. in contrast, in the case of evolution-based aligners like prank, the improvement by a better scoring system alone would be relatively small, and it is essential to explore the msa space more thoroughly in order to substantially improve the accuracy. because the current version of prank performs solely the progressive alignment, introducing an iterative refinement step may significantly improve its accuracy.

our analysis of position-shift maps showed that, among those true msas which were truly most likely but missed by the aligners, at least a majority could be identified by a simple exploration of the neighborhoods of the reconstructed msas, as long as the sequence divergences are at most moderate. on the other hand, the analysis also demonstrated that a substantial fraction of such true msas are quite “far away” from the reconstructed msas, especially in category “d” erroneous segments. to recover such true msas, we would need to devise a new algorithm that explores the msa space to search preferentially for regions likely to harbor the true msa. for this purpose, it would be helpful to delve further into the nature and characteristics of msa errors, e.g., by using the position-shift map introduced in this study.

another major conclusion of this study is that a substantial fraction  of msa errors occur because the molecular evolutionary processes are stochastic by nature, that is, because the true msa is not most likely . this supports the hypothesis by wong et al.  <cit>  in a demonstrable manner. it also implies that, in order to recover most of the true msas, it is essential to obtain the probabilistic distribution of considerably likely msas, instead of just searching for a single most likely  msa. this reemphasizes what have been concluded repeatedly in the past, especially concerning pairwise alignment methods . some algorithms aiming for this goal on msas were developed in the past . but they seem to have been avoided by most biological researchers, possibly because the methods are formidably sophisticated, or maybe because people are skeptical of the usefulness or necessity of such methods. this study clarified that the probability distribution of msas is crucial in order to recover most, if not all, of the true msas. moreover, our analyses via position-shift maps revealed that erroneously reconstructed msas in category “s” tend to be “closer” to the true msas than those in categories “i” and “d.” this, in conjunction with the fact that the former accounts for a substantial fraction of msa errors, implies that even exploring only close neighborhoods of the reconstructed msas could recover a majority of true msas. hence, it could lead to the programs conceptually and algorithmically more accessible. if such a program is established, the algorithm to calculate the complete-likelihood will further improve the accuracy of the prediction of msas. in the meantime, programs and methods that assess the reliability of the portions of an msa, such as mumsa  <cit> , hot, cos  <cit> , guidance  <cit> , psar  <cit>  and tcs  <cit> , will continue to be useful, as long as the analysis’s focus is not on indels.

in this study, we focused our attention on msas of neutrally evolving dna sequences. and we believe that the results presented here can be extrapolated to msas of weakly selected dna sequences, such as non-coding sequences . however, the results may not be directly extrapolated all the way to msas of sequences under strong functional constraint, such as those coding for proteins with solid 3d structures. at this point, there seems to be a long way to go for simulating msas or calculating the ab initio occurrence probabilities of msas under a realistic evolutionary model of these strongly constrained sequences, although some recent simulators  and our theoretical formulation  <cit>  could provide a good starting point. most benchmark msa sets were based on structural alignments, and similarity-based aligners were in general tuned to perform excellently on these sets. therefore, as far as the functions and the 3d structures are concerned, similarity-based aligners may provide decent solutions for the msas of strongly constrained sequences. when performing evolutionary analyses, however, it should always be kept in mind that ciis, iciis and sequence analogies  must not be confused with sequence homologies .

r <dig>  scope of this study
to keep the matters in perspective, it would be important to correctly understand the scope of this study.

first, the current versions of the tools presented here depend critically on correctly reconstructed gapless columns, and this poses some limitations on the msas  that can be handled. in a sense, the msas with the  <dig> fast-evolving mammals  could be deemed as largely beyond the scope of the current tools, because nearly a half of the erroneous segments were too long to be handled . but true msas themselves seemed generally tractable even with the  <dig> fast-evolving mammals . thus, the essential problem must be the failure to correctly reconstruct gapless columns, rather than the lack of them. it depends on the total branch length; on average, as it increases, gapless segments become shorter and gapped segments become longer, making it harder to correctly reconstruct gapless columns.  it also depends on the individual branch lengths, because an alignment across a longer branch will be more difficult to reconstruct correctly. provided that the total branch length can be kept nearly unchanged, increasing the number of species to divide long branches will make the msas more tractable, because more gapless columns will be correctly reconstructed. at least theoretically, we can even make the presented tools not depend on gapless columns, by exploiting the “phylogenetic correctness condition” on the ancestral sequence states . such a methodological improvement will be useful particularly for a msa of many sequences connected by many short branches .

second, for the msa reconstruction and the score calculation, we used the true or the “best-fit” parameters and the true phylogenetic trees as guide trees, and we did not thoroughly examine the effects of wrong parameters on the msa errors. in general, the accuracy of reconstructed alignments was shown to be robust against considerable perturbations of the parameters   <cit> . the effects of erroneous guide trees were also examined a number of times . we refer the readers interested in the subjects to these studies.

last but not least, it should be remembered that this study is based on msas simulated under simpler conditions than those expected in real, biological situations. although we incorporated some biological realism by using the indel length distribution based on the past empirical studies, our simulation only modeled neutral substitutions and insertions/deletions . in contrast, real dna sequences should also undergo more complex evolutionary processes such as long indels , selection, inversions, duplications, copy number changes of microsatellites, transposon insertions, etc. . we chose to focus on this simple setting because most aligners only take account of substitutions and indels, and because we expected that focusing on this basic setting would highlight the essence of the problems underlying msa errors. in this way, we were able to avoid getting confounded by other biological complexities. we hope that this study will provide a ground on which more sophisticated studies on msa errors could be conducted in the future, taking account of further biologically realistic features. an extended theoretical framework of sequence evolution  <cit>  might help address the issues of msas affected by genomic rearrangements, among major biological complexities.

CONCLUSIONS
in this study, to meticulously characterize msa errors, we introduced two new tools, the complete-likelihood score and the position-shift map. the complete-likelihood score enables us to compare msas of the same homologous sequences in terms of their occurrence probabilities under the stochastic model of a genuine sequence evolution simulator. the position-shift map clearly visualizes msa errors and could help disentangle a composite error into elementary ones. our analyses of the simulated msas and their reconstructed counterparts revealed that a substantial fraction of msa errors are due to the inherently stochastic nature of the evolutionary processes and thus could not be rectified even if we thoroughly searched the msa space for the truly most likely msa. this re-emphasizes how important it is to obtain a probability distribution of fairly likely msas, instead of merely searching for a single optimum msa. the analyses also implied that, out of the remaining errors, most by the similarity-based aligners may be corrected via the complete-likelihood score or its good proxy, and most by the evolution-based aligners may be rectified via more thorough msa space exploration such as in iterative refinement. this suggests the possibility to considerably improve the accuracy of msa reconstruction even if adhering to the search for a single optimum msa.

