BACKGROUND
analysis performed on small data sets have shown  <cit>  that geometrical properties of the protein surface influence protein-protein interactions. for the analysis of larger data sets , tools that can process a wider range of structural information descriptors are necessary.

it is also important to generate results that can be easily formatted for statistical analysis with standard software. current software for protein analysis  typically investigates a single aspect of molecular structure geometry and generates results only as simple text tables. these tables, whilst easily readable, are not ideal for parsing by computer.

tools for determining protein-protein interactions are very scarce. also, current software tools for structural property calculations from protein geometry  process only one molecular structure at a time. to avoid the need to manually run the program repeatedly for each structure, a user would need to write a controlling script in order to automate the analysis for a batch of structures.

psaia was designed both to simplify the use of algorithms for the analysis of sets of protein data bank   <cit>  files implemented in other applications  <cit> , and to provide access to algorithms for interaction analysis thus far not readily available to the public  <cit> . additionally, we have included a novel algorithm for interaction analysis, piada . piada defines interaction types according to the type of interacting atoms or groups of atoms as well as the residue distances . all interactions with the atom distance below the sum of their van der waals radii plus  <dig>  Å are classified as van der waals, while interactions between the polar atoms at distance below  <dig>  Å are classified as polar. hydrophobic interaction is defined as an interaction between any of the so called hydrophobic amino acid residues  when their side chains are within the  <dig>  Å distance. it is possible for one pair of the interacting amino acids to participate in multiple types of interactions. for details see the paragraph 'piada ' and table  <dig> 

arg n
cys s
gln n
his n
ser o
thr o
trp n
tyr o
cys s
gln o
his n
ser o
thr o
tyr o
cys s
gln n
his n
ser o
thr o
trp n
tyr o
cys s
gln o
his n
ser o
thr o
tyr o
psaia can process each chain within a given molecular structure file separately . this feature usefully allows easy investigation of structure features before and after association , but is rarely offered in other software tools. instead, users are required to create a separate pdb file for each chain they wish to investigate individually.

four protein-protein interaction analysis algorithms are currently offered to the user by psaia. a strong feature of psaia is that it allows these algorithms to be used in combination with a selection of structure analysis methods. whilst valuable, information provided by specialised databases, e.g. ipfam  <cit>  represents only one analytical approach. using software tools such as psaia the user is able to vary the methods employed and also to analyse unpublished structure data.

psaia supports two output formats: a textual table, for reading directly, and xml  for parsing for further statistical analysis.

psaia can process nucleotide as well as peptide chains from pdb, although currently no interaction parameters are calculated for nucleotide chains.

implementation
psaia consists of two separate tools: the psa  and the pia . the software is designed to function in both linux and windows operating systems, either as a command-line tool or through a standalone graphical user interface . the software is written in c++ and the gui uses the qt library  <dig> . <dig>  <cit> . psaia uses standard protein data bank  structure files in text format as input data, and provides output in both text  and xml formats. psaia is a modular tool that can be easily adapted to particular user requirements by simple editing of configuration files.

psaia verifies all input files format including configuration and pdb files. the input filter accepts "null" chains  in pdb files. from summer  <dig>  pdb files with "null" chains will not appear in new releases. psaia accepts "null" chains for backward compatibility.

in case of missing parameters  psaia will issue a warning to the user at the end of processing. in case of incorrect pdb or configuration file formats, psaia will stop execution and display a warning message.

structure algorithms
geometry calculation algorithms included in psaia work primarily at the atomic level, with residue attribute values derived by averaging atomic measurements. the following geometry parameters can be calculated: depth index – dpx  <cit> , protrusion index – cx  <cit> , solvent accessible surface area – asa  <cit> , relative solvent accessible surface area – rasa  <cit> . psaia also associates a hydrophobicity value to each residue using the kyte and doolittle scale  <cit> .

asa and rasa
the accessible surface area  is the atomic surface area of a molecule  that is accessible to a solvent, and is usually expressed in Å <dig> . asa is calculated using the 'rolling ball' algorithm  <cit> , which uses a sphere  of a particular radius to 'probe' the surface of the molecule. a typical value of a 'probe radius' is  <dig>  Å, which approximates the radius of a water molecule.

relative asa  attribute is the per-residue ratio between the calculated asa and 'standard' asa for a particular residue. standard asa values are usually determined by calculating asa values of a central residue in a triplet   <cit> .

for use within psaia, for each of the twenty standard residues, one thousand random triplets  were selected from random pdb files. for each central residue within the extracted triplet, five asa attributes  were calculated and their mean values were determined. these mean values are taken as representative standard asa attributes for each of the twenty residues, and are provided in a file within psaia distribution. however, the user has the possibility to provide alternative 'standard asa' values as a separate input file. standard asa values were also calculated for nucleotides in the same manner as for amino-acid residues.

the asa and rasa parameters are calculated separately for each chain in the pdb file, as well as for all chains together. compared to naccess there is a difference in calculation of backbone and side chain asa of glycine. psaia treats glycine c-alpha atom as a part of the backbone, while naccess considers it a part of the side chain.

for asa and rasa, the following residue attributes are calculated:

• total – sum of all atom values.

• backbone – sum of all backbone atom values.

• side-chain – sum of all side-chain atom values.

• polar – sum of all oxygen, nitrogen and phosphorus  atom values.

• non-polar – sum of all carbon atom values.

dpx and cx
the depth of an atom i  is defined as its distance  from the closest solvent accessible atom j :

 dpxi = min 

where d <dig>  d <dig>  d <dig>  ..., dn are the distances between the atom i and all solvent accessible atoms. the depth  is thus zero for solvent accessible atoms, and > <dig> for atoms buried in the protein interior, with deeply buried atoms having higher dpx values  <cit> .

the principle of cx algorithm is as follows. for each non-hydrogen atom in protein structure, the program calculates the number of heavy atoms within a fixed distance r . the number of atoms within sphere is multiplied by the mean atomic volume found in proteins , which gives the volume occupied by a protein within sphere vint. the remaining volume of the sphere, vext, is calculated as the difference between the volume of the sphere and vint. the cx value is then defined by vext/vint  <cit> .

for both dpx and cx the following residue attributes are calculated:

• total mean – mean value of all atom values.

• total standard deviation.

• side-chain mean – mean value of all side-chain atom values.

• side-chain standard deviation.

• maximum – highest of all atom values.

• minimum – lowest of all atom values.

interaction algorithms
the following interaction algorithms are implemented in psaia :

• atom nucleus distance – method introduced by ofran and rost  <cit> .

• atom van der waals radii distance – method introduced by aytuna et al.  <cit> .

• asa change on complexation – method introduced by jones and thornton  <cit> .

• piada – a novel algorithm designed during psaia development.

pia calculates only protein-protein interaction. protein-nucleic acid and nucleic-nucleic acid interactions are not included in the calculation.

atom nucleus distance
this very simple method defines two residues from the opposite chains as interacting if there is at least one pair of non-hydrogen atoms, one from each residue, at a distance below the specified threshold. values for the threshold are usually  <dig>  –  <dig> Å.

asa change on complexation
in this method, asa is calculated for a particular residue before and after the process of complexation. if the difference between asa in unbound and bound form is above the specified threshold, then a residue is defined as an interacting residue. the usual value for threshold is  <dig> Å <dig>  it is important to emphasize that this method can only define interaction residues, but not their interacting partners.

atom van der waals radii distance
two residues from the opposite chains are marked as interacting if there is at least one pair of non-hydrogen atoms, one from each residue, at a distance smaller than the sum of their van der waals radii plus a threshold. thresholds are usually  <dig>  –  <dig>  Å.

piada 
although algorithms that use atomic distance cut-off for definition of interaction exist, they are either too general  <cit>  or do not contain  <cit>  hydrophobic and long range electrostatic interactions. while designing piada, we directed our attention to possible atom and residue interaction partners .

our algorithm for detecting the protein-protein interactions calculates four different types of interactions: ionic, van der waals, hydrophobic and polar. table  <dig> shows decision criteria for ionic and polar interactions used in psaia. many of these interactions can be classified as hydrogen bonds, however currently we do not consider directionality and therefore have not defined this type of interaction explicitly. nevertheless, pre-processing of the raw pdb file by adding hydrogen atoms and selecting the best amino-acid residue rotamers would enable reliable analysis of the hydrogen bond interactions.

hydrophobic interactions are defined as interactions between any two of the seven non-polar amino acids  when the following condition is fulfilled: distance between residues, measured as distance between any two atoms from different residues, is less than  <dig>  Å.

van der waals interactions are defined as interactions between any two amino acids when the distance between residues  is less than the sum of their van der waals radii plus  <dig>  Å. the value of  <dig>  Å has been determined empirically by comparing our results with results from the ipfam database  <cit> .

graphical user interface
there are two main tabs in the interface: the structure analyser and the interaction analyser. figure  <dig> presents the structure analyser and figure  <dig> the interaction analyser.

structure analyser
prior to analysing a structure, the user should predefine the following files:

• a file with total, backbone, side chain, polar and non-polar asa for particular amino acid residue and nucleotides.

• a file with value of hydrophobicity for each of amino acid residues.

• a file with van der waals radii for each atom of particular residue and nucleotide, ligand atoms and hetero atoms.

all of the files mentioned above are included in the installation package with common values, but users can easily change them or add some values if it is necessary for their analysis. the software memorises the location of the last configuration files and uses them as default for the next run.

the user can optionally change asa attributes   <cit>  and protrusion index attributes   <cit> . solvent probe radius, sphere radius and atom volume are described in paragraph 'structure algorithms', while with z-slice value users can define precision of calculation. it is recommended to use default values.

upon predefining parameters, the user should select the following: output directory attributes for analyses , chain bonding type  and output data format . example output from structure analyzer is given in additional files  <dig> and  <dig> 

the final step is the selection of protein files. files can be added manually or from a predefined list file. pdb files should be correctly formatted or the software will return an error message.

there are two additional options: saving the already selected files in a list file and creating a configuration file based on selected parameters and definition files. both of these options can also be used for a console version of application for massive analysis on the remote server.

interaction analyser
interaction analyser gives the user a possibility to use one of the four interaction calculation algorithms mentioned above . like in the structure analyser, the user should first specify parameters and configuration file. the only configuration file is van der waals radii file. in accordance with the selected algorithm, the user can choose threshold distance  or delta asa threshold value  <cit>  between unbound and bound residue, z slice and probe radius value . secondly, the user chooses the output directory, output format  and output data options . finally, the user selects protein files, starts application and has the possibility to create a file list and configuration file for console application.

console applications
there are two console applications: psa  and pia . in order to use both of them, it is necessary to define the configuration file and a file with the list of proteins. these files can easily be created by gui version of the application.

RESULTS
psaia is a software tool that integrates several algorithms for protein interaction and structure geometry analysis of protein complexes into a single application. the software can be used via a graphical user interface or from the command-line, and user can choose between a tabular and xml output formats. protein structure and protein interaction data are in many cases investigated together, and respective algorithms often share the same software code. therefore, it was an obvious choice to combine the two analysis types into a single application.

the main aim of psaia is to analyse and predict both protein structural features and interaction sites. xml formatted output simplifies conversion of results into any other desired format. gui and command-line versions for ms windows and linux platform make the software accessible to a broader range of potential users. furthermore, the console application enables the execution of large scale analyses on remote servers.

results for each of the two integrated tools  are presented separately.

structure analyser
a single program that contains the same set of algorithms is not available, so we compared our results with those obtained by original software tools for each separate algorithm. naccess and dssp are the most frequently used algorithms for asa calculation. both are available only with the command-line interface. for testing purposes, we used a ras-ral crystal structure . the obtained values  are similar. overall protein asa calculated by naccess is  <dig>  <dig>  Å <dig>  by dssp  <dig>  <dig> Å <dig> and by psaia  <dig>  <dig> Å <dig>  the differences are very small, up to  <dig> percent. when we test the performance for  <dig> proteins from protein-protein docking benchmark  <cit> , the overall asa calculated by naccess is  <dig>  Å <dig>  by dssp  <dig> Å <dig> and by psaia  <dig>  Å <dig>  the differences between methods are similar to those calculated for pdb:1lfd – up to +/- <dig> percent. most of the discrepancies originate from different rounding off procedures, psaia rounds off at the third decimal place, naccess at the second and dssp at the first. dssp only calculates total asa per residue, while naccess and psaia also calculate backbone, side chain, polar and non-polar asa. the main advantage of psaia is that it can perform calculations on chains in unbound and bound conformations, which is not possible with other available tools.

dpx and cx values were calculated using web servers  <cit> . results for pdb:1lfd, calculated by psaia  differ from those obtained with web servers  by up to +/- <dig> percent. web servers are intended for calculations of a single pdb file at a time and have no possibility of automating the calculation for a batch of structures. instead, the user should repeatedly set calculation parameters and upload new files. the main advantage of psaia is the possibility to sequentially process a large number of files in one step. also, cx server produces results only for unbound chains while psaia gives the possibility to view results for both unbound and bound forms. dpx and cx servers output tabulated results for each atom in the pdb file. however, we found this option unnecessary for large scale analyses and instead designed psaia to output per-residue maximum, minimum, mean and standard deviation values. in addition, side chain, backbone, polar and non-polar parts of residue are given as separate values – a feature we consider informative for the analysis.

from the above results, it is evident that the precision of psaia calculation is comparable to that of the established tools, while the easy handling provided by the gui, the possibility of calculation of bound and unbound chains and "batch" processing a large number of input files are psaia's advantages.

we tested psaia performance with all algorithms and output data file format included. the test platform was a server with intel xeon dual core  <dig>   <dig>  ghz processor. the test set consisted of  <dig> proteins.

the average running time for psa was  <dig> seconds , and piada algorithm of pia ran for an average of  <dig> seconds .

interaction analyser
the interaction analyser consists of three pre-existing algorithms for calculation of interacting residues plus the newly designed piada which determines the interaction between particular residues according to their type and the type of interacting atoms as described in the implementation section. a similar algorithm is used for creating ipfam database  <cit> . however, ipfam can only provide information, generated in one way, describing the pdb structures from which it was constructed. it cannot include information about interaction residue pairs outside known domains. piada can be applied in an intuitive fashion to new protein complexes obtained experimentally or by computer simulation, e.g. docking. with psaia, the user can compare results obtained by different algorithms. this enables a more precise calculation of a particular interaction than with the distance based algorithms  <cit>  and the algorithm based on asa change  <cit>  alone.

to test the new algorithm, we compared the number of interactions obtained by piada on a set of  <dig>  <dig> protein complexes with the results obtained by the distance based algorithm  and data from the ipfam database .

total numbers of interacting residues found by a particular algorithm are summarised in table  <dig>  according to the number of detected interacting residues, the highest score was obtained by the algorithm based on delta asa , followed by piada  and the atom distance algorithm . the least of the residues were found in ipfam database . one of the reasons for this is the fact that ipfam database consists only of interaction pairs from known pfam  <cit>  protein domains.

interacting residues detected by the atom distance algorithm overlap with piada results in  <dig> percent of instances. the observed difference occurs mostly in the 'weak van der waals' interactions, i.e. those with inter-atomic distance under  <dig>  a, but above the van der waals threshold . piada found  <dig> % of the total number of interacting residues present in ipfam database. however, piada detected many interacting residues not present in ipfam. possible explanations are a) longer distance threshold used for ionic and polar interactions, and b) taking into account the hydrophobic interactions not covered by ipfam database. further reasons for the difference in the results obtained by these two algorithms are in different threshold value used for definition of the van der waals interactions . piada found  <dig> % of the interaction residues found by the asa based algorithm. the main difference between these two methods lies in different definitions of interaction . also, delta asa  threshold for interaction is taken as  <dig> Å <dig>  <cit> . more careful tuning of this parameter would probably lead to better correspondence of results, however that is outside the scope of this paper.

comparing the results from the above mentioned algorithms, we found that piada and 'delta asa' algorithms detected the largest number of interaction residues confirmed by at least one other method.

to our knowledge, there is no other software tool that calculates protein interaction residues and pairs for a large number of proteins in automated fashion, and users are often forced to use some form of scripting for large-scale batch analysis.

tool applicability
we developed psaia in order to predict and investigate protein interaction sites. we used the program on a series of  <dig> non-redundant 3d structures of protein complexes in order to obtain structural information relevant for predicting protein interaction sites. the results obtained in combination with sequence information enabled us to develop a highly reliable method for predicting protein interaction sites . we successfully tested the method on a test set of  <dig> pdb structures prepared by psaia.

moreover, psaia is of great help as a verification tool in docking studies. for example, we use it for the calculation of changes in asa as well as for a quick scan of interacting residue pairs in docked structures.

further work
in the next version we plan the following improvements to the software: increasing the number of available algorithms and improving implementation of the existing ones in terms of speed; program parallelisation and support for other input data formats. protein secondary structure is an important factor for studying protein interactions and therefore we plan to include one of the secondary structure calculation algorithms into the program psaia is designed for analysis of a large number of molecular structures using pdb files as input data. further improvement in speed and processing capability of the program will be parallelisation of the analysis process by distributing one structure per processor. the next release of the piada algorithm will include the possibility to investigate interactions between molecules of any type, including hetero atoms and nucleic acids. additionally, mmcif and xml file formats are now widely used for storing molecular structure information in the protein data bank, and the next program version will include the possibility to process these file formats.

CONCLUSIONS
psaia can process a series of pdb files and calculate a large number of protein structure parameters as well as determine interaction residues based on several different algorithms. in addition psaia can calculate parameters for protein chains in unbound and bound form.

in addition to established algorithms, psaia offers our new piada algorithm for calculation protein interaction residue pairs. results obtained from piada correlate well with, and generally improve upon, the results of the alternative algorithms. piada offers the advantage that it can be also used to define the type of protein interaction and to execute a quick scan of interacting residue pairs in docked structures.

uniquely, psaia allows simultaneous application of so many different algorithms for structure analysis and for determination of interacting residue pairs. xml output enables an easy conversion of data to formats suitable for statistic analysis using standard software. results from smaller data sets demonstrated the influence of geometry on protein interaction sites. comprehensive analysis of properties of large data sets lead to new information useful in the prediction of protein-protein interaction sites.

availability and requirements
• project name: psaia

• home page: 

• operating systems: ms windows, linux

• programming language: ansi c++

• other requirements: qt  <dig> . <dig> for linux

• license: gnu gpl

• availability: additional file  <dig> contains ms windows installer and additional file  <dig> includes installer for linux operating systems. source code and updated installation versions are available from the project home page

• restrictions for the use by non-academics: none

abbreviations
psaia: protein structure and interaction analyzer; psa: protein structure analyzer – console application; pia: protein interaction analyzer – console application; pdb: protein data bank; asa: accessible surface area; cx: protrusion index; dpx: depth index; mpi: message passing interface; pvm: parallel virtual machine; gui: graphical user interface; xml: extensible mark-up language

authors' contributions
jm contributed to design, developed software and has been involved in manuscript drafting. ms contributed to design, had made intensive testing of software and was involved in manuscript drafting. st contributed to design of piada algorithm, and was involved in revising the manuscript. bj contributed to design and was involved in revising the manuscript. kv contributed to design and was involved in revising the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
pdb:1lfd – output of psaia structure analyser in table form. this file includes information about asa, dpx, cx and hydrophobicity values per residue of pdb:1lfd obtained by psaia. in this case, the chains were calculated in bound form.

click here for file

 additional file 2
pdb:1lfd – output of psaia structure analyser in xml form. this file includes information about asa, dpx, cx and hydrophobicity values per residue of pdb:1lfd obtained by psaia. in this case, the chains were calculated in bound form.

click here for file

 additional file 3
pdb:1lfd binding residues – output of psaia interaction analyser in table form. this file includes information about residues that are included in interaction in pdb:1lfd obtained by maximum distance algorithm from psaia application.

click here for file

 additional file 4
pdb:1lfd binding residues – output of psaia interaction analyser in xml form. this file includes information about residues that are included in interaction in pdb:1lfd obtained by maximum distance algorithm from psaia application.

click here for file

 additional file 5
xml schema for binding residues. this is the xsd schema definition for xml output file 

click here for file

 additional file 6
pdb:1lfd binding status – output of psaia interaction analyser in table form. this file includes information on interaction status  of a particular residue in pdb:1lfd obtained by maximum distance algorithm from psaia application.

click here for file

 additional file 7
pdb:1lfd binding status – output of psaia interaction analyser in xml form. this file includes information on interaction status  of a particular residue in pdb:1lfd obtained by maximum distance algorithm from psaia application.

click here for file

 additional file 8
xml schema for binding status. this is the xsd schema definition for xml output file 

click here for file

 additional file 9
pdb:1lfd contacts – output of psaia interaction analyser in table form. this file includes information on interaction partners in pdb:1lfd obtained by maximum distance algorithm from psaia application.

click here for file

 additional file 10
pdb:1lfd contacts – output of psaia interaction analyser in xml form. this file includes information on interaction partners in pdb:1lfd obtained by maximum distance algorithm from psaia application.

click here for file

 additional file 11
xml schema for residue contacts. this is the xsd schema definition for xml output file.

click here for file

 additional file 12
xml schema for peptide structure in bound form. this is the xsd schema definition for xml output file.

click here for file

 additional file 13
xml schema for peptide structure in unbound form. this is the xsd schema definition for xml output file.

click here for file

 additional file 14
pdb:1lfd – output of dssp application. this file includes information about secondary structure and total asa per residue of pdb:1lfd obtained from dssp application.

click here for file

 additional file 15
pdb:1lfd – output of naccess application. this file includes information about total, relative, backbone, side-chain, polar and non-polar asa per residue of pdb:1lfd obtained from naccess application.

click here for file

 additional file 16
pdb:1lfd – cx output of psaia structure analyser. this file includes information about cx per residue of pdb:1lfd obtained by psaia. in this case, the chains were calculated in unbound form.

click here for file

 additional file 17
pdb:1lfd – output of cx server . this file includes information about maximum, minimum and average cx values per residue of pdb:1lfd obtained from cx server.

click here for file

 additional file 18
pdb:1lfd – output of dpx server . this file includes information about maximum, minimum and average cx values per residue of pdb:1lfd obtained from cx server.

click here for file

 additional file 19
psaia – ms windows setup file. setup file for installation psaia, psa and pia. newer versions of the application can be downloaded from the project web site.

click here for file

 additional file 20
psaia – linux installer. psaia installer for a x <dig> linux platform. linux installers for other architectures as well as the source code can be downloaded from the project web site.

click here for file

 acknowledgements
this work is funded by croatian ministry of science, education and sports grant 119-0982913- <dig> to kv; grant 036-0362214- <dig> to bj and grant 098-1191344- <dig> to st. authors wish to thank david judge for proofreading the manuscript.
