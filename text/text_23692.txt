BACKGROUND
because of a protein's essential cellular role, it is important to fully understand its structure and interactions. predicting the location of the binding site and the ligand binding residues, is a necessary step towards elucidating how a protein functions  <cit> . the determination of the ligand binding site residues in a protein is also important, because substrate specificity of an enzyme is determined by the fine details of the binding site residues, such as side chain orientation and physiochemical properties  <cit> .

several different protein ligand binding site prediction methods have been developed, which mostly fall into two major categories: sequence-based methods and structure-based methods  <cit> . the sequence-based methods rely on identifying conserved residues that may be structurally or functionally important and include methods such as firestar   <cit> , wssas  <cit> , frcons  <cit> , confunc   <cit> , consurf  <cit> , fpsdp   <cit>  and interpid  <cit> . the structure-based methods can be further subdivided into the geometric methods utilised by findsite  <cit>  and sitehunter   <cit> ; energetic methods utilised by sitehound  <cit>  and q-sitefinder  <cit>  and miscellaneous methods that utilise information from; homology modelling, such as 3d ligandsite  <cit>  , mariner <dig>   <cit>  and metsite  <cit> ; surface accessibility used by the ligsitecsc  <cit>  method and physiochemical properties utilised by screen  <cit> .

in the casp <dig> experiment, a function prediction category was included for the first time, where groups were required to predict enzyme commission numbers  and gene ontology  terms  <cit> . as a result of the difficulty in assessing these terms, the casp <dig> assessors made a decision to modify the function prediction category  <cit> . consequently in casp <dig>  the function prediction was included in a different format, with ligand binding site residues assessed, as many casp targets were found to crystallize with biologically relevant ligands  <cit> .

in casp <dig>  the top methods in the function prediction category were the methods by the lee group  <cit>  and the sternberg group  <cit> . the lee group had two main methods: a manual method  and an extended deadline server method . the lee extended deadline server method relied on manual configuration of distance cut-offs for each target and, at the time of writing, a server based on this method is not publicly available. the sternberg group was also registered as a manual prediction group , however since casp <dig>  the group has produced a publicly available server, 3d ligandsite, which is reported to be similar in performance to their manual prediction method from casp <dig>  <cit> .

the lee group's manual and server methods from casp <dig> only differed in the top 3d models used for prediction. the methods were both based on 3d superposition of structurally similar proteins that contain ligands. residues were considered to be in contact with the ligands if the distance between them was less than  <dig> Å + the van der waals radii, and the cut-offs for including residues in predictions were manually altered depending on the target  <cit> .

the sternberg group's manual predictions in casp <dig>  and their 3d ligandsite  <cit>  server, used a very similar method  <cit>  to the lee group for ligand binding site prediction. the sternberg group used the 3d-jury method  <cit>  in order to select from amongst the casp <dig> server models followed by structural superposition of models and related templates. in addition, residue conservation was considered using confunc  <cit> .

however, for the 3d ligandsite  <cit>  server method, wass et al. used the top 3d models from the phyre server  <cit>  and mammoth  <cit>  for structural superposition of similar templates with bound ligands. the residue conservation scoring was found to cause significant over prediction of residues  <cit>  and so data from confunc is not directly included in the current 3d ligandsite server predictions  <cit> . to the best of our knowledge the 3d ligandsite server is the best publicly available fully automated method for prediction of ligand binding residues that has been independently benchmarked on the casp <dig> data set and it produces comparable results to that of group fn <dig>  <cit> . hence in this study we firstly compare our novel approach, funfold, against all the groups at casp <dig>  paying particular attention to the comparison with the predictions from casp <dig> group fn <dig> 

in casp <dig>  the top few ranked methods in the function prediction category were by the zhang group  and the firestar group . the i-tasser-function and zhang human methods are again based on model-to-template superposition, to predict the ligand binding site residues. however, at the time of writing no publicly available server has been produced that implements the i-tasser-function method. the firestar  server, which is publicly available, also utilized sequence conservation from psi-blast  <cit>  profile alignments in order to predict ligand binding site residues  <cit> .

according to the official casp <dig> assessment  <cit> , it was difficult to find statistically significant separations between the top  <dig> or so groups in the function prediction category, which included - zhang , i-tasser-function , firestar , famssec , cnio-firestar , sternberg , seok , jones-ucl , seok-server , lee , mcguffin  and gws . hence we also compare funfold against all groups at casp <dig>  paying particular attention to the comparison with these top performing groups and their associated servers: i-tasser-function , firestar , seok-server , gws  and the 3d ligandsite servers .

the funfold method is similar in concept to other groups' methods, such as the lee group and the sternberg group methods, which use protein structure superposition of distantly related templates to a modelled protein to identify ligand binding sites. however, the funfold algorithm uses a novel automated method for ligand clustering and identification of binding residues. we also investigate the use of modfoldclust <dig>  <cit>  to select different starting models from amongst the pool of alternative server models and gauge the affect on accuracy.

implementation
funfold
the funfold method for predicting ligand binding site residues is based on the concept that, ligand containing templates from the pdb with the same folds  as the 3d model of the target protein under analysis, may contain similar binding sites. the funfold standalone method takes as its input a 3d model of the protein under analysis and a list of template pdb ids, which can be obtained from the templates used to build the model. the prototype version of the funfold server method, which was developed during the casp <dig> prediction season ), queried the firedb  <cit>  in order to identify if ligands in each template pdb file were biologically relevant. this method worked well, but it relied on the firedb database, which has been updated since casp <dig>  although it was unlikely that the identified biological ligands within templates would have changed since casp <dig> , there was a small chance the list of relevant ligands in firedb could have been influenced by new related pdb entries since casp <dig>  in addition, during the casp <dig> prediction season our prototype version of the server often had connectivity problems with the database. in order to become independent of querying the firedb database, a list of biologically relevant ligands was obtained from the sternberg group, which was originally used by the 3d ligandsite server  <cit> . using this list allows the funfold standalone software and the current version of the funfold server to be more reliable, independent on external servers and suitable for benchmarking on both of the casp datasets.

the funfold algorithm used the tm-align method  <cit>  to superpose each of the template structures containing relevant ligands onto the 3d protein model. each model-to-template superposition was saved if the resulting tm-score ≥ <dig>  . a simple pymol script allowed each of the superposition files to be used in order to orientate the original pdb structures with bound ligands correctly relative to the model. the resulting pymol superposition of all templates and models was then saved and parsed to leave only the coordinates of the model and relevant ligands.

ligands were then assigned to clusters using an agglomerative hierarchical clustering algorithm that identified each continuous mass of contacting ligands, thereby indicating putative binding pockets. ligands were considered to be part of a cluster if any of their atoms were in contact with the continuous mass. thus, the linkage criteria for clustering were determined by contacts between ligands, which were defined as ≤ the van der waals radius of an atom plus  <dig>  Ångströms. once each continuous mass of contacting ligands was identified, the cluster with the largest number of ligands was selected as the location of the most likely binding pocket. the distances between all atoms within the mass of ligands and all atoms within the 3d protein model were then calculated. again, residues were determined to be in contact with the ligand if the distance between a ligand atom and a residue atom was ≤ the van der waals radius plus  <dig>  Ångströms.

in order to determine which residues were most likely to bind to the predicted ligand, a "residue voting" procedure was carried out. for a residue to be included in a prediction it must have had at least one contact with  <dig> or more ligands and at least 25% of the ligands in the cluster. this cut-off was determined during the casp <dig> prediction season whilst the method was in development and was based on comparisons of the funfold server output with that obtained from state-of-the-art servers, such as 3d ligandsite, that were publicly available at the time. however, no optimization of this cut-off was carried out prior to testing of the funfold software on the casp <dig> and casp <dig> data sets.

the residue voting system used in funfold can be illustrated in figure  <dig>  in figure  <dig> we can see a cluster that contains a continuous mass of metals ,  <dig> gdp and  <dig> po4s. the residues that are only contacting the gdp ligand are not considered as potential ligand binding residues, as the residues only receive 1/ <dig> votes each . whilst the residues that are in contact with gdp and one po <dig> molecule receive  <dig> votes, they only receive a 15% share of the vote  and so they are also excluded from the prediction. the final predicted ligand binding residues are therefore: his <dig> with 7/ <dig> votes , his <dig> with 11/ <dig> votes , asp <dig> with 12/ <dig> votes  and asp <dig> with 5/ <dig> votes ; all are above the 25% threshold required to be included in the prediction.

accuracy benchmarking
the funfold method was benchmarked using only the information concerning templates and models for each target that could be obtained from the casp <dig> and casp <dig> server predictions. thus all of the information used was available to predictors during both casp prediction seasons. the fn prediction files for the  <dig> targets analysed for function prediction in casp <dig>  <cit> , the  <dig> targets analysed for function prediction in casp <dig>  and all associated 3d server models were downloaded from the casp website  <cit> .

for each casp <dig> target, the modfoldclust <dig> method  <cit>  was used to select the top 3d model from the server models submitted at casp <dig>  however, the top model from the intfold-ts server   <cit>  was used for testing performance on each of the casp <dig> targets. the intfold-ts models were used so that the method is the same as the current funfold server implementation. the top model for each target was then used as the starting model for predicting ligand binding residues. the parent records from each server model were examined in order to construct a list of template pdb ids for each target that was available at the time of each casp prediction season. the resulting template list was then filtered using fasta  <cit>  to ensure it was 70% non-redundant according to pairwise sequence identity. this type of filtering is in line with that carried out during the construction of the non-redundant fold libraries used by many fold recognition servers, such as intfold-ts. finally, a maximum of  <dig> templates were used in our analysis for efficiency.

the funfold prediction results were compared against all of the function prediction groups participating in casp <dig> and casp <dig> using the mcc scores  <cit>  as an indicator of performance. an analysis of the statistical significance between the differences in mean scores was also carried out, similar to that of the official casp assessments  <cit> . in addition, a new metric, the binding-site distance test  score  <cit>  was used with the d <dig> threshold set to 1Ǻ, in order to stringently assess the accuracy of predictions. the bdt score ranges between  <dig>  and  <dig>  and relates to the actual 3d distance between the predicted residues and the observed residues. the bdt score appropriately penalizes both under and over predictions, whilst also considering the 3d distance of predicted residues from the observed binding site. thus, predictions close to the binding site score higher than more distant predictions  <cit> .

the top function prediction methods in casp <dig> were methods by the lee group   <cit>  and the sternberg group  <cit> . in order to more stringently compare the performance of the funfold method against that of the lee and sternberg methods, for each prediction we also used the top 3d models that the lee and the sternberg groups submitted for their casp <dig> server and manual predictions . this analysis was also carried out on the casp <dig> data set, using models from both the intfold-ts server  and the zhang-server  methods. this allowed us to gauge how much of the difference in performance was due to the initial model selection. finally, the analysis was repeated using native structures for each casp target in order to evaluate performance using "perfect models".

RESULTS
the funfold method for the prediction of ligand binding residues is benchmarked using the set of  <dig> casp <dig> function prediction targets and the set of  <dig> casp <dig> function prediction targets. the casp sets are further subdivided according to the types of ligand bound, as below:

casp <dig> targets: metal - t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t0487; non-metal - t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t0508

casp <dig> targets: metal - t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t0635; non-metal - t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t <dig>  t0641



the performance of funfold is compared against that of groups that participated in the casp <dig> and casp <dig> function prediction categories.

accuracy benchmarking
the results of an assessment of binding site predictions, similar to the official casp <dig> function prediction assessment carried out by lopez et al.   <cit> , are shown in figure  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> and in all tables. the matthews correlation coefficient  and the binding-site distance test  method are used to measure prediction success and the resulting scores achieved by the different groups are compared with those from the funfold method. the funfold method is shown to outperform all other methods tested at casp <dig> according to both the mean per-target mcc scores and bdt scores .

the funfold method is also shown to be competitive with the methods tested at casp <dig>  the funfold method outperformed the 3dligandsite methods , but did not outperform the top server methods, i-tasser-function  and firestar , according to mean per-target mcc and bdt scores for both partial and extended binding site analysis . .

the mean mcc z-scores and bdt z-scores were also calculated for each group in order to normalize scores across targets and the results are shown in figure  <dig>  figure  <dig> and figure  <dig>  again, the predictions from the funfold method are shown to outperform those from all of the other casp <dig> groups  and outperformed all server methods tested at casp <dig> with the exception of i-tasser-function  and firestar  .

whilst the results shown in figures  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> indicate that the funfold method is competitive, each group has made predictions for different numbers of targets. therefore, a direct comparison of methods from casp <dig> and casp <dig> on common subsets of targets must be carried out along with an analysis of statistical significance of the differences in performance. the results in table  <dig> show that the funfold method does achieve higher mean scores and mean z-scores than every other casp <dig> method, when common subsets of predictions are directly compared.

the analysis is based on common subsets of all casp <dig> function prediction targets, with a minimum of  <dig> predictions in common. n, size of the common subset used in the comparison; mcc, matthews correlation coefficient; bdt, the binding site distance test score  <cit> .p-value, the p-value for the paired wilcoxon signed rank sum test using the raw scores; p-value , the p-value for the paired wilcoxon signed rank sum test using the z-scores;  <dig> - p-value,  <dig> minus the p-value for the paired wilcoxon signed rank sum test using the raw scores; 1-p-value ,  <dig> minus the p-value for the paired wilcoxon signed rank sum test using the z-scores. the tables are sorted by the mean mcc z-score for groups with the best casp <dig> groups at the top. the highest mean scores, mean z-scores, significant p-values and significant 1-p-values are indicated in bold. server groups are underlined .

the difference in mean mcc performance is >28% for each of the true server methods tested at casp <dig>  in addition, the funfold method shows a 13% improvement over group fn202's casp <dig> predictions, a 5% improvement over group fn293's casp <dig> predictions and a 1% improvement over fn407's casp <dig> predictions. the improvement is statistically significant for all casp <dig> groups tested, except the methods by the lee group - fn <dig> and fn <dig>  a similar increase in performance is shown if the bdt score is used for the assessment .

tables  <dig> and  <dig> show the performance of methods on the subsets of targets; those containing only metal ligands  and those containing non-metal ligands . on the casp <dig> data set the funfold method performs slightly better on the subset of targets containing metal ligands than those containing non-metals. the funfold method does improve upon the majority of other methods when tested on the non-metal subset; however there is no significant difference compared with the top four methods .

in order to produce the funfold results shown in table  <dig>   <dig> and  <dig>  the modfoldclust <dig> quality assessment program  <cit>  was used to select a 3d model for each target and this model was then used as an input for the funfold executable. however, the results in table  <dig> are also shown in order to compare the performance of funfold if the ts <dig> 3d models submitted by each casp <dig> comparison group are used instead. an improvement in mcc score of around 10% is shown compared to group fn202's predictions, which again is shown to be statistically significant. the improvement over group fn293's predictions is ~3%, whilst the improvement over group fn <dig> is increased to ~2%. again, using the bdt score shows that a significant increase over group fn <dig> is maintained along with an increase in mean scores compared with those obtained by groups fn <dig> and fn <dig>  in table  <dig>  the coordinates from the native structures are used in order to determine the difference in performance compared with the top  <dig> groups. using native structures instead of models, the funfold method shows a significant improvement over both groups fn <dig> and fn <dig> 

a repeat comparison of funfold against the top  <dig> groups at casp <dig>  using ts <dig> 3d models obtained from each comparison group. lee_ts <dig> models were used for the funfold comparison with group fn <dig>  lee-s_ts <dig> models for the comparison with fn <dig> and phyre-de-novo_ts <dig> for the comparison with fn <dig> 

group
a repeat comparison of funfold performance versus the top  <dig> groups at casp <dig> 

in order to produce the funfold results shown in tables  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  the top intfold-ts model for each target was used as an input for the funfold executable. this was done so that the method matched the current implementation of the funfold server. the results indicate that there is no statistically significant difference between the top server methods tested at casp <dig> and the funfold method, according to p-values of the raw and z-scores, on the partial  and extended binding sites . again, the casp <dig> dataset is divided into subsets of targets containing metal and non-metal ligands and the results are shown in tables  <dig>   <dig>   <dig> and  <dig>  however, there are no notable differences compared with using the full data .the results actually show fewer significant differences between methods, which is expected due to the reduced sizes of the subsets .

the analysis is based on common subsets of all casp <dig> targets, with a minimum of  <dig> predictions in common. n, size of the common subset used in the comparison; mcc, matthews correlation coefficient; bdt, the binding site distance test score  <cit> .p-value, the p-value for the paired wilcoxon signed rank sum test using the raw scores; p-value , the p-value for the paired wilcoxon signed rank sum test using the z-scores;  <dig> - p-value,  <dig> minus the p-value for the paired wilcoxon signed rank sum test using the raw scores; 1-p-value ,  <dig> minus the p-value for the paired wilcoxon signed rank sum test using the z-scores. the table is sorted by the mean mcc z-score for groups with the best casp <dig> groups at the top. the highest mean scores, mean z-scores, significant p-values and significant 1-p-values are indicated in bold. server groups are underlined.

the analysis is based on common subsets of all casp <dig> targets, with a minimum of  <dig> predictions in common. n, size of the common subset used in the comparison; mcc, matthews correlation coefficient; bdt, the binding site distance test score  <cit> .p-value, the p-value for the paired wilcoxon signed rank sum test using the raw scores; p-value , the p-value for the paired wilcoxon signed rank sum test using the z-scores;  <dig> - p-value,  <dig> minus the p-value for the paired wilcoxon signed rank sum test using the raw scores; 1-p-value ,  <dig> minus the p-value for the paired wilcoxon signed rank sum test using the z-scores. the table is sorted by the mean mcc z-score for groups with the best casp <dig> groups at the top. the highest mean scores, mean z-scores, significant p-values and significant 1-p-values are indicated in bold. server groups are underlined.

in line with the analysis performed using the casp <dig> dataset, we also tested the funfold method using the casp <dig> ts <dig> 3d models obtained from the zhang-server, but again we saw no significant difference in performance by using a different starting model . the results in tables  <dig> and  <dig> compare the funfold performance using casp <dig> native structures with partial and extended binding site definitions respectively. in table  <dig>  no improvement is seen from using native structures, whilst table  <dig> shows that a slight performance increase in mean scores can be achieved, however this is not significant.

examples of predictions
if the funfold method is provided with a good quality model and a list of templates that are structurally similar containing biologically relevant ligands, then highly accurate predictions can be achieved .

analysing the prediction for t <dig> in more detail, the funfold method correctly predicted the binding site as being a metal binding site and the observed zinc ligands to be in the binding pocket. however, the method also under predicted one residue - his <dig>  this under prediction occurred because the aromatic ring of the histidine residue was orientated away from the binding site in the model, and therefore his <dig> received a low vote of 1/ <dig> .

according to the modfoldclust <dig>  <cit>  predictions, the global model quality score for the model used in the prediction for target t <dig> is ~ <dig>  . however, the local model quality around the binding site is comparatively bad. thus, funfold did not predict the observed residues  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>  residues  <dig>   <dig> and  <dig> simply did not receive enough ligand votes to be considered; with residue  <dig> falling below the cut-off with a vote of  <dig> %,  <dig> getting a low vote of  <dig> % and  <dig> getting a vote just below the cut-off of  <dig> %. in addition funfold did not identify any ligand contacts with residues  <dig> and  <dig>  and residues  <dig> and  <dig> were identified in an alternative binding site cluster.

when a more detailed analysis of the predictions for t <dig> was carried out, the funfold method correctly predicted the binding site as being a metal binding site, the correct location of the binding site and the three binding site residues. however, the method over-predicted one residue thr <dig>  this over prediction occurred because the residue was in contact with three ligands , which were not well superposed onto the ligand cluster receiving a vote of 3/ <dig> .

according to modfoldclust <dig>  <cit>  predictions, the global model quality score for the model used in the prediction for casp <dig> target t <dig> =  <dig> , which is a reasonable global model quality score. however yet again, the local model quality around the binding site for this model is comparatively bad. this resulted in both over and under-predictions, with residues  <dig>   <dig> and  <dig> being poorly modelled.

discussion
in this study we describe a novel method, funfold, for the prediction of ligand binding site residues, which shows a significant improvement over all of the true server methods that were tested at casp <dig>  as well as the predictions from one of the top manual groups - fn <dig>  in addition, the method was tested on the casp <dig> set and was found to be competitive with the top server groups and statistically inseparable in performance from most of the top manual groups. whilst a prototype version of a server was tested in the casp <dig> function prediction category , we have since improved the reliability of the funfold server and the current automated implementation more closely resembles the performance of our manual function predictions .

the performance of all methods was measured using the standard matthews correlation coefficient   <cit> , on both the casp <dig> and casp <dig> function  targets. the mean mcc z-scores for funfold, were shown to be higher than the mean mcc z-scores for all other methods tested at casp <dig> . the funfold predictions were an improvement upon those made by the lee manual group , the lee server group  and the sternberg group , which were the top groups tested during casp <dig>  the improvement over the sternberg group on the casp <dig> data set is statistically significant at the 99% level according to the wilcoxon signed rank sum test. the funfold method is also shown to be competitive with all methods tested at casp <dig> and shows no statistically significant difference with the top ranking server methods: i-tasser-function and firestar  <cit>  . however, a statistically significant improvement was seen over the 3dligandsite methods that were tested at casp <dig>  at the 99% level according to the wilcoxon signed rank sum test.

intuitively, the quality of the starting 3d model that is used for the prediction of the ligand binding site will have an effect on the accuracy of results. thus, in this paper for the casp <dig> analysis we used modfoldclust <dig> model quality assessment method  <cit>  to select high quality input models. however, we also tested funfold using alternative 3d models that were submitted by the top function prediction groups and found that the improvement in mcc scores was maintained - the lee manual method was improved upon by +2%, lee server by +3% and the sternberg group by +10%, which was again shown to be statistically significant. in addition, when native structures were used, as might be expected, the improvement in performance was maintained.

on the casp <dig> data set we tested starting models from both our intfold-ts server and from the better performing zhang-server, however again no significant difference in performance was seen. furthermore, whilst using the native structures improved performance marginally in some cases, in the majority of cases the increases were not significant. according to these benchmarks, the results indicate that selecting an alternative starting model does not have much of an influence. therefore, where there has been a significant improvement over other groups, this must have arisen from the funfold algorithm itself, rather than from improved initial model selection.

one of the top ligand binding site prediction servers tested at casp <dig> was the i-tasser-function server method , which also relies on 3d model-to-template superposition, for binding site residue prediction. however, in addition to global model to template superposition, the i-tasser-function method also carries out local alignment of the proposed binding site region, in order to improve local superposition. in light of the results shown in figures  <dig> and  <dig>  local superposition scores, such as those used in i-tasser-function, could be adopted which may help to improve future versions of funfold. however, in our benchmarking on the casp <dig> set we could measure no significant increase in performance of the i-tasser-function method over funfold.

at the time of writing the i-tasser-function server is currently not publicly available. therefore, arguably the top ranking publicly available server tested at casp <dig> was firestar  <cit> , which predicts residue conservation in target sequences based on psi-blast alignments to the large catalogue of sites in pdb structures contained in the firedb  <cit> . however, the firestar method is not currently available as a standalone program and again we could measure no significant performance gain over the funfold method.

the funfold method is clearly also competitive with the top manual groups that were tested in casp <dig>  however no manual intervention is required for our approach. furthermore, the method significantly outperforms each of the true server methods tested at casp <dig>  whilst the lee server group  was mostly automated, the group was counted in the extended deadline category and the authors reported a small amount of human intervention  <cit> , hence in this study we have considered group fn <dig> in casp <dig> as a non-server group.

the funfold method also significantly outperformed one of the top manual groups  and since casp <dig>  the authors have developed a fully automated publicly available server, called 3dligandsite  <cit> , variations of which participated in casp <dig>  the authors reported that the predictions from the 3dligandsite server were comparable in performance to their manual predictions at casp <dig>  <cit> , therefore in this study we can consider predictions from group fn <dig> to be the gold standard for fully automated ligand binding residue prediction for testing on the casp <dig> data set.

the standalone funfold software uses similar input data to the version of the findsite  <cit>  software that is currently available to download. for both programs, a 3d model and a list of templates is required, however, the methods differ in the output produced; the funfold method outputs binding residue predictions in casp fn format, where as the findsite method outputs a list of putative locations for the centre of each binding pocket i.e. locations in 3d space rather than binding site residues. thus, the funfold software cannot be directly compared to the findsite software as they both produce different output. furthermore, the findsite dataset  <cit>  cannot be directly used in our analysis, as the location of the binding site residues for each template is not defined and would have to be predicted, adding potential for errors in methods comparison. however, the latest findsite-dbdt method did compete in casp <dig>  but to our knowledge the server is not publicly available. the current implementation of funfold, the prototype version of the server  and our manual prediction group  performed statistically significantly better than the findsite-dbdt method on the casp <dig> data set  <cit> .

the funfold method uses a similar procedure to that carried out by the most successful prediction groups participating casp; the 3d input model is superposed onto structurally similar ligand containing pdb files and the putative binding residues are then determined. however, the funfold method uses a novel, fully automated approach for both identifying clusters of ligands and determining putative binding site residues. the novel ligand residue voting method used in funfold reduces the rate of over predictions, which appears to be one of the main problems with many structure based approaches.

there are several caveats to consider when benchmarking methods for the prediction of protein ligand binding residues. firstly, uncertainties can arise if there are several ligand binding sites within a protein either predicted or observed. for this analysis we only considered the binding residues that were defined by the casp assessors and for each target only one binding site was defined. secondly, the inherent flexibility of proteins may make it difficult to determine which residues are actually in contact with the ligand. this is further exacerbated if the binding site is located in a disordered region of a protein. thirdly, the definition of the distance cut-off for a residue that is in contact with a ligand is the van der waals radii +  <dig>  Å, but this definition is subjective. finally, there may be ambiguity about whether the ligand bound to the solved structure is the protein's ideal ligand. thus a ligand used in a prediction may not necessarily be incorrect. indeed one binding site may bind more than one ligand.

each of these issues creates difficulties for the fair assessment of methods as defining a list of observed binding site residues may be subjective. some of these issues were addressed by the exclusion of "neutral residues" in the casp  <dig> analysis  <cit> , which have also been excluded in this analysis for the casp <dig> data . in casp <dig> the assessors used two classifications for binding sites - partial and extended. from the official analysis there was not a significant difference in assessment, if methods were analyzed using either partial or extended binding site definitions. however, the use of the mcc statistic for assessment does compound some of these issues and the prediction of a binding residue that is defined as incorrect, but which is nevertheless close to the observed binding pocket will therefore obtain the same score as a random incorrect prediction.

therefore we recently proposed a novel scoring method - the binding-site distance test  score, which addresses some of the shortcomings of using mcc scores, whilst maintaining the advantages  <cit> . predicted residues that are close to the observed residues will obtain a higher bdt score than more distant predictions. the bdt score was used by the casp <dig> assessors, in addition to the mcc score, to investigate if it caused a significant difference in the rankings of the methods but no significant changes in the grouping of top methods were reported  <cit> . in this analysis, the list of top groups identified using bdt scoring is again roughly in agreement with the top groups obtained using the mcc scoring; however the ranking of some of the less accurate methods does appear to change. using the mean bdt score, we also see higher scores for funfold compared with all methods tested on casp <dig> on equivalent subsets of data and the difference is again significant for all but the top two manual groups . when the casp <dig> predictions are analysed using the mean bdt scores the funfold method is ranked below the top two server methods i-tasser-function and firestar  <cit> , however again the difference in performance is not significant.

an obvious way of improving future versions of the funfold software would be to optimize the voting threshold for the inclusion of predicted residues. furthermore, predicting the ligand binding site residues on multiple models and then pooling the results may help to increase accuracy. the specific physiochemical properties of the residues could be studied, such as charge and polarity, and residues exhibiting more favorable physiochemical properties for binding to a ligand could be weighted more heavily in the residue voting process. a prediction of the enzymes functional family could be performed, with the prediction then used to weight residues that bind to ligands that occur more often within these families, more heavily in the voting process. in addition to undertaking global model-to-template superpositions, local superposition of the binding site regions could also be carried out to increase accuracy. as previously mentioned this was carried out by one of the top server groups at casp <dig> .

a general function prediction quality assessment tool could also be developed in order to weight predictions or provide probabilities scores for individual residues. features of the quality assessment might include: the type of ligands within the cluster, with clusters containing a large number of similar ligands receiving a higher score; the distance of the superposed ligands from the centroid ligand within the cluster, with clusters containing ligands that are superposed perfectly receiving higher scores; the global and local model quality scores of the starting 3d model could also be factored into the analysis using our modfold methods  <cit> , with residues in poorly modeled regions down weighted; the probability of bound residues occurring in disordered regions could also be considered by integrating our disoclust results  <cit> , with residues in regions of high disorder receiving an appropriate weighting. in future, each of these features could be integrated into an automated quality assessment tool in order to produce more appropriate confidence scores which could be used for ranking binding residue predictions.

CONCLUSIONS
the funfold software implements a competitive method for the prediction of protein binding site residues, which can also be used to determine the putative ligands interacting with a protein. the method is available as a standalone program, which can be used to predict binding residues and ligands based on user supplied 3d models and template lists. we also provide access to funfold via a simple web server, which only requires users to supply an amino acid sequence.

availability and requirements
• project name: funfold

• project homepages: the standalone software can be downloaded from http://www.reading.ac.uk/bioinf/downloads/. the web server can be accessed at http://www.reading.ac.uk/bioinf/funfold/. the funfold method is also part of the intfold server pipeline: http://www.reading.ac.uk/bioinf/intfold/

• operating system: platform independent 

• other requirements: the standalone version requires a recent version of java, a recent version of pymol , and the tmalign program .

• licence: freely available

conflict of interest
the authors declare that they have no competing interests.

authors' contributions
dbr contributed code, carried out testing of the system, carried out benchmarking, contributed figures and drafted the manuscript. sjt carried out testing of the system, and contributed text and figures to the manuscript. ljm conceived the idea, produced the executable, carried out statistical data analysis, contributed text and figures to the manuscript and carried out final editing of the manuscript. all authors read and approved the final manuscript.

