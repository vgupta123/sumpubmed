BACKGROUND
for studying biological processes at the pathway level plenty of mathematical models have been developed. answering new and even more complex biomedical questions requires models of complete cells, organs or even organisms. an arguably very efficient approach to obtain such models is to combine or integrate existing models. an ideal starting point are the continuously growing model databases, for example the biomodels database  <cit> , the cellml model repository  <cit>  or the jws online - model database  <cit> . thus model integration may potentially speed up the systems biology cycle of modeling and experimentation by re-using the data that was explained by the individual models. moreover, by combining existing data and models one may obtain an integrated model of enhanced predictive power.

in general, model integration can be subdivided into vertical integration  and horizontal integration . while much effort has been put into vertical integration  we want to emphasize that horizontal integration is an important task that deserves special attention. thereby we concentrate on the integration of two kinetic ode models a and b and address two challenges. the first challenge arises when the models are merged: identical model elements  have to be identified. we propose to use a merged model that contains every element only once. for every reaction occurring in both models one has therefore to decide which parameter values to choose, either those used in model a or those used in model b. similarly, for every species occurring in both models one has to decide which initial values to choose. clearly this choice of parameter values and initial values affects the simulation results of the integrated model and hence the ability of the integrated model to explain the experimental data that was used to parametrize models a and b. here the second challenge arises: to obtain a parameterization of the integrated model. in our point of view model integration is only successful, if the integrated model is consistent with the experimental data used to parametrize models a and b. a precise definition is given later on.

to address the first challenge we present a naming scheme that simplifies the identification of identical model elements. this naming scheme was originally developed in the context of the virtual liver network, but is applicable to most ode models arising in systems biology. with respect to the second challenge we first note that the naive way to obtain a consistent model, namely discarding all parameter values and parameter re-fitting, is hampered by high computational cost and limited availability of experimental data. hence we suggest to reuse the parameterization of the original models to a large extent. to this end we discuss ideas to retain many parameter values while adapting only  few. of course, such a model has to be validated, both theoretically and experimentally. it is an ideal staring point for numerical studies like stability and sensitivity analysis that can be performed at almost no additional cost.

to facilitate the complete integration process we propose a semi-automatic integration workflow. thereby we distinguish between ‘structural integration’, the merging of model elements  and ‘behavioral integration’, the adaption of parameter values to obtain an integrated model that is able to explain experimental data.

the term ‘integration’ will be used throughout this document to describe the whole process of fusioning the existing models to obtain a simulatable model which is able to explain experimental data. in the literature also the terms ‘merging’, ‘composition’, ‘combination’ or ‘aggregation’ can be found to describe this process . we will make use of the term ‘merging’ in the context of combining the networks.

before turning to challenges and workflow we discuss existing standards and software which can support model integration in the following two subsections. in the subsequent section ‘results and discussion’ we introduce the model integration workflow and discuss challenges and potential solutions in structural and behavioral model integration. as a proof of principle this workflow is applied to the integration of two signaling networks originally described in  <cit> . the details can be found in the final ‘methods’ section of this paper.

existing standards support model merging
merging of models from smaller submodels is a common practice in working groups. there models are often merged by hand in a straightforward way because mostly the same software tools and formats are used. one important task in model integration is to find the model overlap. the overlap of two models comprises all model elements  which are contained in both original models. within working groups the semantic meaning of a model and its elements is known or can be communicated on a short way. hence, the model overlap can often be found easily. whereas, finding the model overlap of models which originate from different groups and integrating such models in various combinations can be challenging.

usually, kinetic models in systems biology contain all mathematical information which is needed for simulation but lack semantic information needed to find elements which describe the same biological component or reaction. to discover identical model elements in different models the assignment of information to the model and the application of common modeling standards and guidelines is required. this is also an important prerequisite to enable a certain degree of automatism and to transfer the semantic meaning of a model and its elements.

in publications and presentations human readable biochemical and mathematical equations or biochemical network graphs are the most convenient ways to represent models in systems biology. but for the analysis, exchange and especially the integration of models in computational tools, standardized computer readable formats are a basic requirement. over the past years different xml-based formats have been developed  to represent models in various application areas and modeling tasks. sbml has evolved as the most widely used format to represent kinetic models. to date, more than  <dig> software tools support this model format  <cit> . furthermore, many model repositories have been build up in recent years of systems biology research. arguably the most popular example is the biomodels database  <cit> , which contains an impressive number of models . another example is jws online - model database  <cit>  which provides the opportunity to simulate models online. to assign biological information to the model elements  annotation standards have been developed. for sbml models the miriam standard  <cit>  describes how semantic information can be related to the elements. the mentioned standards for model formats, model annotation and model repositories are intensively investigated research fields in systems biology  <cit>  and can support the process of structural model integration.

existing software supports model merging
few scientific publications concerning the merging of network models and appropriate software tools appeared in recent years . in general, universal xml-tools  can be used to compare and merge the xml structure of two models. but as these tools rely only on the plain xml structure there is no support for model annotation. hence, identical elements can not be discovered based on semantic information assigned to the elements in form of annotations. the most sophisticated tool which supports a semi-automatic merging of network models of two quantitative models is semanticsbml  <cit> . besides semanticsbml other software tools support structural model integration, for example, the model composition tool  <cit>  and the software pint  <cit> . as in semanticsbml elements are matched based on annotations. another software tool, for models encoded in sbml is sbmlcompose  <cit> . the graph merging approach supported by this tool is based on the xml code and doesn’t incorporate information which is encoded in the annotation of model elements. also the software copasi supports model integration to a certain degree  <cit> . the software cytosolve  <cit>  follows the idea to dynamically integrate the computations of smaller models that can run in parallel across different machines. the source code of the individual models is kept intact. similarly the approach of randhawa et al.  <cit>  supports different processes of model merging. finally, the approach followed in the modular modeling tool promot  <cit>  can also provide assistance in model integration. there models can be defined as modules with interfaces which can be connected to obtain combined models. in a similar way sbml level  <dig> may be used for model integration . this modular language is subdivided into a core and additional packages comprising special features. the hierarchical composition package targets model integration. in the approach followed in the development of this package models are subdivided into submodels which are connected via ports.

obviously, structural integration of models has been approached in recent years. but all aforementioned approaches and software tools only support model merging and hence structural integration. neither considers the adaption of parameters after the merging step and specialized methods and software tools which can support this step do not exist.

RESULTS
in the following sections we will provide our approach to model integration. first we will introduce a workflow which subdivides the general integration task into three major steps. we then discuss challenges in structural as well as in behavioral model integration and present possible solution strategies. to illustrate challenges and solutions arising in behavioral integration, two models describing egf and ngf signaling originally presented in  <cit>  are integrated.

a semi-automatic workflow based on existing standards and software
as pointed out in the previous section, there exists a variety of standards and tools that support structural model integration. we will present a semi-automatic workflow which incorporates many of these. this workflow consists of three major steps: ‘model preparation’, ‘model merging’ and ‘model reparameterization’ .
fig.  <dig> a semi-automatic workflow for horizontal model integration in three steps. the first step is the ‘preparation of sbml models’. the second step is the ‘structural model integration’ of two sbml models that results in a merged model. this is to be checked for consistency with experimental data and eventually reparameterized in the ‘behavioral model integration’ step. several iterations of consistency check and reparameterization may be necessary to obtain an integrated model that can explain all experimental data. for a detailed description of the three steps see the main text



model preparation
prior to the merging of network models in sbml the models have to be prepared appropriately. thereby the first task is to ensure that the units used in both models match. this might require a conversion step, where the units used in one model are converted to match those of the second model.

the goal of the model preparation step is to facilitate a unique identification of model elements. here the software semanticsbml provides convenient features, as it allows, for example, to search a large collection of databases for suitable annotations using keywords. furthermore we recommend to use the sbml validator  <cit>  to ensure that the model is in valid sbml. in the section ‘challenges in structural model integration’ we will point out that established annotation standards like sbo and miriam are often not sufficient to discover identical model elements when signal transduction models are considered. this requires an appropriate naming scheme in combination with annotations . the names of model elements can comfortably be edited with the sbmleditor  <cit> . the outcome of this step are two well prepared models in sbml format.

model merging 
we recommend to use the software semanticsbml. in semanticsbml an initial matching of model elements can be calculated automatically. to this end information about the model elements is required to identify the overlap of two models automatically. this information has to be assigned in form of annotations and names in the prior model preparation step. the initial matching is calculated solely based on the annotations. a manual post-editing of this matching is supported by the software. here the element names can be incorporated to solve conflicts, clear wrong matches or add matches which have not been found automatically. the outcome of this step is a new model with a fixed network structure.

model reparameterization 
after the merging step the obtained model has to be tested if it is in valid sbml and if it is consistent with the experimental data . if the merged model is not consistent with the experimental data the parameters have to be adapted. it might be necessary to pass through the reparameterization and consistency check of the model repeatedly.

challenges in structural model integration
when integrating two models, whether semi-automatic or by hand, the overlap of the models has to be recognized and handled, that is, identical elements have to be identified and combined in an appropriate way to obtain the merged model. in this section we describe potential complications and, where available, comment on how to resolve these.

modification on different sites
in the miriam guidelines it is defined how models and model elements can be related to entries of various databases like uniprot  <cit> , kegg  <cit> , gene ontology  <cit>  or chebi  <cit>  using the resource description framework . following the miriam standard may be sufficient to discover identical elements in metabolic models, because in general, every model component can be related to web resources. whereas for signaling systems the annotation may not be sufficient to uniquely identify elements, as often only basic forms of molecules are available in databases. problems will then arise because in signal transduction species often describe molecules with multiple modifications or complexes composed of several molecules with various stoichiometry. these species cannot be identified using the database annotation alone. moreover, sometimes elements can not be found in databases. in fig.  <dig> an example is shown.
fig.  <dig> two models describe the phosphorylated protein erk. the recognition that erk and erk <dig> describe the same molecule can occur based on annotations. to distinguish that erkp and erk2p are modified on different sites  names have to be incorporated



here a solution is to encode additional information in the names of model elements, for example information on modification sites and the stoichiometry in complexes. to ensure a unique identification of the model elements a naming scheme can be used. in additional file  <dig> we provide guidelines how a combination of rdf annotations, sbo annotations  <cit>  and names, following a naming scheme can be used to ensure a unique identification of model elements for signaling. these guidelines have been developed within the framework of the virtual liver  <cit> .

a modeler may get the impression that annotating models and following common standards is connected with a high work load. there’s no denying, but the effort put in the annotation of models prior to structural integration is definitely not in vain. standardized formats, annotations and curated model repositories are a general trend in systems biology to make models available and more reusable for other modelers. this trend is reinforced by many journals where models have to be uploaded in repositories in a standardized format. and, in the context of this work, if the models are well prepared, software tools can be used to perform the structural integration in a semi-automatic manner.

different level of detail in reactions
another challenging task is the identification of the same overall reactions which are modeled on a different level of detail . this is a task which can currently not be automatized. if the model is well prepared and the elements are annotated and named as proposed in our guidelines  the reactant and product species of the overall reaction can be recognized as equal. in many cases a graphical visualization of the model may also be helpful. the decision whether the integrated model should contain the detailed or the lumped description mainly depends on the goal of the integration task.
fig.  <dig> reactions may be modeled on different level of detail. as an example the sequence of reactions on the left  describe the same overall reaction like r4



differently modeled reactions
a reaction may be represented differently in different models. both models might, for example, contain the production of s <dig> controlled by s <dig>  but in one model s <dig> acts as a modifier, while in the other model s <dig> acts as a reactant . a similar situation arises, when both models contain the reaction from s <dig> to s <dig> but use different kinetic laws. in this case a decision has to be made which of the two reactions should be chosen.
fig.  <dig> two ways to model the creation of s <dig> under the control of s1: s <dig> acts as a modifier in model <dig> and as a reactant in model2



molecules in different compartments
if the models contain the same molecule but in different compartments a review of the compartment names and annotations should be the first step. depending on the integration goal, an adoption of both species and an additional transport reaction between the compartments may be a solution.

molecules in different states
frequently two models contain a molecule in different states, e.g. one model contains a molecule only in an unmodified state; the other model contains the molecule only in a modified state. in most cases an adoption of both molecules and an additional modification or complexation reaction is a solution.

challenges in behavioral model integration
the outcome of the structural integration step is a merged model, that is, a combined model containing the elements of both models. during this structural integration parameter values  are assigned to the appropriate model elements.

the aim of behavioral model integration is to obtain a parameterized integrated model that is consistent with experimental data of the original models. as we will demonstrate below, this will usually not be the case, if all parameter values of the original models are re-used in the integrate model. rather, parameter values assigned to model elements will have to be adjusted.

one reason is the inherent ambiguity in assigning parameters to model elements. while the choice of parameter values is easy for non-overlapping model parts where only one parameterization exists, it can be challenging for reactions in the overlap, where it is not a priori clear which parameterization is suited best. choosing either one will almost certainly affect the ability of the integrated model to explain experimental data.

to illustrate this, two models describing egf and ngf signaling have been merged. these models originate in  <cit> , details are given in the ‘methods’ section. for reactions that occur only in one of the models , only one parameter set is available. but for reactions in the overlap  two possible parameter sets exist. for demonstration purposes the parameter values of the egf model have been chosen for the reactions in the overlap. consequentially, simulation results of the original egf model can be reproduced, simulation results of the original ngf model can not be reproduced . hence we argue that the model is not consistent with the experimental data of the original ngf model. .
fig.  <dig> integration example. upper part: model obtained by integrating two models described in  <cit>  . green box: elements coming from egf model alone; blue box: elements coming from ngf model alone; red box: elements coming from both models . for the non-overlapping model parts parameter values and initial concentrations are taken from the original models. for the overlap parameter values and initial concentrations of the egf model have been chosen. lower part: simulation results. simulations describe stimulation with different egf and ngf concentrations, colors represent input concentrations . first column: simulation of the egf model, second column: the same outputs obtained from the integrated model. as expected egf model and integrated model yield very similar simulation results. third column: simulation of the ngf model, fourth column: the same outputs obtained from the integrated model. here simulation results differ wildly



generally speaking, whenever two models a and b are integrated, choosing parameter values of model a for the overlap is expected to result in simulation results similar to those of model a; likewise, choosing parameter values of model b for the overlap is expected to result in simulation results similar to those of model b. thus, in general, parametrizing the model overlap with values belonging to one of the models is expected to result in an integrated model that is not able to reproduce the simulation results of both original models and hence is not consistent with the experimental data of at least one model.

consistency conditions
we propose to judge consistency with experimental data by means of input/output relations: whenever an input is applied a model produces a corresponding output.

informally speaking, if a signal is presented to the inputs of the integrated model that come from model a, while the inputs coming from model b are set to zero, then those output signals of the integrated model coming from a should be ‘similar’ to the output of a for the same input signal .
fig.  <dig> consistency condition. left panel: signal ů
a  as an input to model m_a yields output v ¨a , signal ů
b  as an input to model m_b yields output v ¨b . right panel: the integrated model is consistent, if input  yields output similar to  and input  yields output similar 



to be more precise, let ua denote the inputs of the merged model which originate from model a, ůa the inputs of model a, ub the inputs of the merged model which originate from model b, and ůb the inputs of model b. likewise, let va denote the outputs of the merged model which originate from model a, v ¨a the outputs of model a, vb the outputs of the merged model which originate from model b and v ¨b the outputs of model b. finally, let u= and v= denote input and output of the integrated model, where identical inputs and outputs are listed only once. then u= denotes a signal where all inputs that originate from model a receive a signal while all those belonging only to b are set to zero and u= denotes a signal where the roles of a and b have been exchanged. similarly, v= denotes a signal where all outputs originating from a show a specific value, while those belonging only to b may take any value and v= denotes a signal where the roles of a and b have been exchanged.

we say an integrated model is consistent with experimental data, if the following relations hold for all signal pairs ůa, v ¨a used to parametrize model a and for all signal pairs ůb, v ¨b used to parametrize model b : 
inputs u= yield output v≈

inputs u= yield output v≈



to assess the similarity of the output curves we suggest to use the χ <dig> merit function which is often optimized in parameter estimation : 
  χ2=∑i=1nyi−yσi <dig> 

in the above formula yi is the data point i with the standard deviation σi and y is the model value at time point i for parameter values p .

in the following we suggest to compute two χ2-values to assess the similarity of the output of the integrated model to that of models a and b: χa2/na and χb2/nb. thereby na and nb are the number of data points of the respective model, ya and yb denote the value of the output signals of a and b at time point i and yi the value of the output signal of the integrated model at time point i. the values χa2/na and χb2/nb are then calculated as follows: 
  χa2na=∑i=1naya−yiσi 

  χb2nb=∑i=1nbyb−yiσi 

now we say the integrated model is consistent, if 
χa2/na< <dig> and

χb2/nb< <dig> 



with this consistency condition it is possible to formulate integration goals. it is often not required to obtain consistency of the integrated model with both original models equally well. an exemplary integration goal could be: 
reproduce simulation results of model a almost exactly and reproduce simulation results of model b as well as possible, that is, obtain a parameterization such that the integrated model satisfies the condition 
  χa2/na< <dig> χb2/nb≈ <dig>  



for the integration example in fig.  <dig> we define the following integration goal: reproduce the time courses of the egf model almost exactly and those of the ngf model as well as possible . this integration goal guided our choice of parameter values for the elements of the overlap: we assigned the parameter values of the egf model to the overlap.

generally speaking, setting an integration goal can guide the initial choice of parameter values for the overlap. if the goal is to reproduce the simulation results of one of the original models almost exactly, the parameter values of this original model should be chosen for the overlap. for the non-overlapping model parts parameter values of the original models can be chosen for the integrated model. in this sense an integration goal influences structural integration.

note that to compare the output signals of integrated and original model one may either use experimental or simulation data. to check consistency of the model presented in fig.  <dig> we make use of the simulation data of the original models. for this purpose we interpret model values ya as synthetic data points ya;i and assume normally distributed errors for these data points . this approach works on the assumption that the original models have been consistent with the experimental data . if the experimental data which has been used to parametrize the original models is available an alternative approach is to use these data to judge the merged model instead of utilizing the approach with synthetic data points.

for the integration example shown in fig.  <dig> we obtain χegf2/negf= <dig>  and χngf2/nngf= <dig> ). hence the model is not consistent with experimental data.

parameter re-fitting
to achieve a consistent model, parameter values have to be modified. thereby the identification of those parameters that have to be re-fitted is a crucial question that is influenced by the integration goal and the position of the overlap of the two original models.

however, no general guidelines can be formulated for the identification of those parameters that have to be re-fitted. instead a detailed understanding of merged model and integration goal are essential. in our example the aim is to preserve the time courses of the outputs of the egf model almost exactly. hence we select those parameters of the ngf model that do not belong to the overlap .

contrary to the structural integration there is a lack of tools and software to support the whole process of reparameterization. software tools for parameter fitting like potterswheel  <cit>  or the systems biology toolbox  <dig>  for matlab  <cit>  can be used instead.

in fig.  <dig> the simulation results after the merging step  and after the reparameterization step  are depicted for the integration example. solid lines represent the original ngf model; dotted lines the integrated model after the respective step of the workflow. the time courses of the three output states ptrka, pakt and ps <dig> are shown after stimulation with different concentrations of ngf . the early response can not be reproduced very well, even after reparameterization. nonetheless, steady steady values almost coincide after the reparameterization step. comparing entire output signals via the χ2n values reveals the similarity of the signals: χegf2n= <dig>  and χngf2n= <dig> . hence the integration goal is achieved. moreover, the model is consistent according to our definition. especially for the output ps <dig> the time courses can be reproduced almost exactly after reparameterization. from our point of view this output is more important than the other two because it forms the end of the signaling cascade.
fig.  <dig> simulation of the integrated model after merging and reparameterization



methods
examining an integration example
to illustrate the important tasks in model integration which have been described in the previous sections we chose two models of signaling pathways in pc <dig> cells. the models of epidermal growth factor -dependent akt pathway and nerve growth factor -dependent akt pathway have been set up by fujita et al.  <cit>  and are publicly available in the curated branch of the biomodels database  <cit>  as biomd <dig> and biomd <dig>  each of the two models comprises  <dig> reactions and  <dig> species. with these two models fujita et al. studied how temporal patterns in the upstream signals are transmitted to the downstream effectors. experiments showed a decoupling of the peak amplitudes which could be reproduced with the two simple pathway models sufficiently. frequency response analysis has been used by fujita et al. to uncover low-pass filter properties of the three-component akt pathways.

the overlap consists of four reactions, five species and two output states. in fig.  <dig> the reactions of the original models are listed. the last four reactions of both models are equal, they solely differ in the parameters .
fig.  <dig> reactions of the two biomodels b
i
o
m
d <dig> and b
i
o
m
d <dig> . the model overlap consists of the last reactions  and the outputs



following our model integration workflow the structural integration of the two models in sbml format is straightforward. first some annotations have been corrected, sbo annotations have been added and appropriate names have been assigned to the model elements. the annotations have been edited using the software semanticsbml, names have been edited with the software sbmleditor. then semanticsbml has been used to obtain a merged model. the parameterization of the egf model was chosen for the overlap. in fig.  <dig> the network of the merged model is shown. the merged model contains the egf and ngf input species. both signals are transmitted to the downstream effectors pakt and ps <dig>  figure  <dig> depicts the reactions, initial amounts and scaling factors of the integrated model. elements which have been part of the overlap are highlighted by red boxes.
fig.  <dig> reactions, initial amounts and scaling factors of the integrated model: parameter values of the original egf model have been used for the overlap . reaction parameters and scaling factors highlighted by blue boxes have been re-estimated



as described in the ‘results and discussion’ section difficulties arise in the selection and adaption of parameters to obtain consistency of the original models and the merged model. we will now demonstrate that the selection and adaption of parameters mainly depends on the integration goal. for the integration example the following goals can be defined: 
preserve time courses of egf model exactly and obtain consistency of the integrated model with the ngf model χegf2negf< <dig> χngf2nngf≈ <dig> 

preserve time courses of ngf model exactly and obtain consistency of the integrated model with the egf model χegf2negf≈ <dig> χngf2nngf< <dig> 

preserve consistency of the integrated model with the two original models χegf2negf< <dig> χngf2nngf< <dig> 



for demonstration purposes we have chosen goal one. the consequence is that we choose the model variant which contains the parameter set of the egf model for the reactions in the overlap. after structural integration the time courses of the following outputs have been preserved exactly: pegfr, pakt and ps <dig> after stimulation with egf and ptrka after stimulation with ngf. the time courses of the outputs pakt and ps <dig> after stimulation with ngf differ from the ones in the original model . hence, the integrated model is already consistent with the egf model. the challenge is now to find the parameters that are modified in a re-fitting step to obtain consistency of the integrated model with the ngf model. this will be described later in this section.

prior to the model fitting step synthetic data points have been produced by simulating the two original models. the original data hasn’t been available. the multiple fitting functionality of the potterswheel software  <cit>  has been used. first we tried to fit the merged model only with data sets produced by simulation of the ngf model. therefore we utilized six data sets with ngf step stimulation in different concentrations . as an initial try four parameters  and one scaling parameter for the output ptrka) have been fitted to reproduce the time courses of the three outputs of the ngf model . this approach was not successful χ2n= <dig> .

as we want to keep all parameter values of the egf model, the following parameters are candidates for the fitting step: the reaction parameters in the upper model branch of the ngf model, the corresponding initial concentrations and the scaling factor for the output ptrka. if the reaction parameters and initial concentrations in the overlap or upper model branch of the egf model or the scaling factors for the outputs pakt or ps <dig> are fitted, the time courses of the original egf model can not be reproduced exactly.

of these, the parameters of the akt phosphorylation reaction in the original ngf model and three scaling factors turned out to yield the best results . because the scaling factors have an influence on the outputs in the overlap additional six data sets with egf step stimulation in different concentrations have been utilized for the fitting. the twelve data sets each contain four time courses describing the four outputs of the integrated model . with this approach χ2n= <dig>  can be achieved for all data sets, the individual quotients are χegf2negf= <dig>  and χngf2nngf= <dig> . hence both consistency conditions are fulfilled.

CONCLUSIONS
the present work describes a semi-automatic model integration workflow. this workflow is subdivided into three major steps, model preparation, structural integration, and behavioral integration. as the first two steps are mainly concerned with the semantic meaning of model elements, one may think of these steps as ‘biological integration’. the described methods are tailored to signal transduction models. for models describing metabolism the steps can be applied similarly, but more straightforward, because the identification of model elements is less complicated. the third step, behavioral integration, focuses mainly on the mathematical aspects of the integration task. hence, it can be considered as ‘mathematical integration’. this step and the discussed ideas can readily be applied to models describing either signaling or metabolism. our workflow can incorporate many existing standards and software tools.

we want to emphasize that model integration is more than model merging: one has to ensure that the integrated model is consistent with the experimental data of both of the original models. hence the choice of parameter values for the integrated model is crucial. and there is an ambiguity in assigning parameter values to the model overlap, as it is a priori not obvious which parameter values to choose . to guide this choice and to judge the success of the integration process we propose to formulate an integration goal. in particular, we suggest to use the χ2n value for this purpose.

in most cases the integration goal will not be achievable using the parameter values of the original models. instead at least some of the parameter values will have to be re-estimated. thereby the identification goal may help to define suitable subsets of the parameters. the values of the corresponding parameters have then to be re-estimated given the measurement information corresponding to both models .

besides the χ2n value other quantities may be used to formulate integration goals, for example, steady state values. fujita et al. studied the low-pass filter properties of the two akt pathways. thereby so-called ‘cut off frequencies’ play an important role. these also offer an alternative way to formulate integration goals, at least for the special systems studied in  <cit> . our choice of the χ2n values was motivated by the following ideas: steady state values do not contain information about the time courses and ‘cut off frequencies’ are a specific property of the system studied in  <cit>  and hence may not be generalized easily.

additional file
additional file  <dig> 
requirements in model preparation . 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

kk and cc developed the described methods and prepared the manuscript jointly. both authors have read and approved the final version of the manuscript.

kk and cc were supported from bmbf grant virtual liver 
