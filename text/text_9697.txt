BACKGROUND
the basic local alignment search tool , which allows for the comparison of similar sequences from the same species or across multiple species, has become one of the most popular bioinformatics programs used by biologists. this tool enables researchers to search their queries against sequence databases and produces an output of pair-wise alignments based on the query sequences and matching sequences from the database . although currently the majority of users utilize blast servers via the web which allow users to search against specialized databases , increasingly biologists are installing the blast program on their local computer in order to search against customized sequence collections . as more sequence data have become accessible and the questions posed by genomicists have increased in complexity, additional programs have been developed to address some of the limitations of the basic blast capabilities, including those aimed at helping biologists post-process large blast outputs. some examples include the museqbox  <cit>  and bioparser  <cit>  programs, which can be used to flexibly select blast matching regions based on percent alignment coverage and identity, alignment scores, expectation value , and other attributes. in addition, the nuclearblast program  <cit>  and the plan web server  <cit>  allow users to store the plain blast text output in a relational database that enables advanced keyword searches for convenient data mining. although the algorithms of such blast-utility programs are usually not sophisticated, their availability significantly improves the utility of the basic program and relieves the potential frustration of biologists who may otherwise be overwhelmed by having to manually analyze large sets of blast outputs.

in this same vein, we have developed a tool for the graphical output and visual analysis of matching regions between query and hit sequences identified by blast. this program is specifically designed to allow for the display of multiple regions of similarity between query and hit sequences which can be identified by blast, and has the additional benefit of handling single and batch query datasets. the typical blast output produces so-called high-scoring segment pairs  that correspond to each matching region between the query and the database hit sequence. the query and hit coordinates of each hsp  are embedded in the blast pair-wise alignment. in a hypothetical example, when a genomic region that contains both gene x and gene y from species a is compared to the orthologous genomic region from species b that contains gene x' and gene y' , the blast output may contain two hsps that represent the matching regions between the two orthologous gene pairs. the distribution of multiple hsps can be highly complex if gene duplications, inversions, and/or rearrangements have occurred in the regions being compared  <cit> . even moderately complex multiple hsp distribution can be very difficult to interpret based on the raw blast pair-wise alignment output. specifically, in order to find out which region of the query matches which region of the hit sequence, the matching coordinates of each hsp must be mapped on both the query and hit sequences. such a mapping process can be tedious if done by hand . to automate hsp mapping, we have developed a web program that parses the hsp coordinates of an uploaded blast output to generate interactive maps which graphically display matching regions. this tool can be used with typical single-query blast outputs obtained online or with batch query outputs generated by those users who have installed stand-alone blast programs locally on their computers.

implementation
as input, the bov program takes a plain-text blast output file. as mentioned, the blast output can be generated from either single-query or multi-query dna or protein blast searches . from the uploaded blast output file, the server will extract the length and description of each query and hit sequence, the coordinates of each hsp, the alignment score, and e-value using the freely available bioperl package  <cit> . specifically, the bov program invokes the bio::searchio module to convert plain-text blast output into bioperl objects, which have built-in functions for extracting the information listed above. all the extracted information is temporarily stored in a simple mysql relational database, which is designed to handle the many-to-many relationship between the query and hit sequences obtained from multi-query blast searches. once the inputs are submitted, the user can immediately start to browse the resulting web pages, developed using perl and dhtml programming language that interact with the blast data stored in the underlying database. for example, based on the e-value cutoff that users select, the underlying mysql database is dynamically queried to retrieve the qualifying blast hsps for display. users are encouraged to follow the tutorial that is provided at the project web site to demonstrate the step-by-step usage of the bov program . if a multi-query blast output is submitted , bov organizes the information from each extracted query into a summary table so that it is convenient for users to choose their query sequence of interest for visual analysis . following the link under each query sequence, users will be guided to the core image display page, where they can interactively visualize the blast hsps for any selected pair of query and hit sequences. the query and hit sequences are depicted as black horizontal bars. the default setting displays all the hsps along the entire length of query and hit sequences. each hsp is plotted as a pair of vertical or diagonal colored lines connecting the start and end positions of the corresponding matching region . the standard perl gd.pm library is used to draw the images . through the control panel embedded in the image page, users can easily interact with the displayed hsps. for example, the hsp select function of the control panel allows users to choose a subset of hsps for display by selecting/de-selecting the checkbox in front of each hsp . users can also filter the hsps by e-value through a simple search form at the control panel. selecting or filtering specific hsps allows users to focus on particular regions of interest or on hits that meet certain criteria. in addition, users can apply the zoom function to examine specific regions on either the query or hit sequences . the default display option uses lines to indicate the boundary of each hsp in a given region . if desired, a second display option is available and can be selected by clicking the highlight link. in this format, a solid colored box similar to the 'trapezoid' display of synview is used to show each matching region  <cit>  . allowing users to control the display style of the image and allowing for the selection of one or multiple hsps for visualization makes bov a versatile tool for interpreting blast results. in addition, the images generated can be easily downloaded for user presentations or publications by following the embedded download image link. although such graphic visualization is very convenient for exploring the matching topology of a region of interest, careful examination of the original blast output is also often essential. for example, manual inspection of the raw blast pair-wise alignments may be required to examine the quality of the hsps . for this purpose, each displayed hsp region is linked to the corresponding raw blast pair-wise alignment, so that users can inspect any particular region of interest in detail . if a particular hsp appears to be part of an interesting matching pattern , users can easily retrieve the actual sequence segment in the hsp by clicking the corresponding buttons embedded in the resulting alignment page . the identity of the retrieved sequence segments can then be analyzed or investigated using other bioinformatics programs. finally, when users submit their blast output, the server also requires the input of the user's email address. a url link to a result summary page will be emailed to the user so that they can re-examine the same bov output without submitting the input file again. the email also contains a link to access all the previously submitted jobs from the same user. for convenience, all the submitted files will be temporarily stored on our server for  <dig> days.

RESULTS
visualization tools are critical for interpreting data and making discoveries in the area of bioinformatics, and especially in the field of comparative genomics. often, complex changes in genome structure and organization  are best identified, examined, and verified graphically rather than via the automated numerical or textual output of most computer programs. for whole-genome comparisons, sophisticated tools such as vista  <cit> , genalyzer  <cit> , synbrowse  <cit> , sybil  <cit> , cinteny  <cit> , and autograph  <cit>  have been developed and are popular within the bioinformatics community. many biologists, however, may find it inconvenient to either install the software , or to prepare required data input files . on the other hand, many biologists have already become adept at using the well-known blast program and have applied it to a diverse number of research questions. in fact, many comparative genomics projects are first initiated by a simple blast search. despite the popularity of the blast program, there is no published visualization tool that converts the raw blast pair-wise alignment into a straightforward display plotting the positions of multiple hsps. such a visualization tool can allow biologists to easily and quickly investigate gene or genome structures in a comparative genomics context, without the potential hassles of having to invoke the heavyweight genome browsers mentioned above.

although few visualization programs directly related to blast outputs are currently available, some do exist that attempt to satisfy the most common goals in comparative genomics research. for example, durand et al.  <cit>  published the visual blast program. although its accompanying paper describes several useful features for analyzing blast outputs, the computer program was designed to run using the now obsolete microsoft windows 95/nt operating system and the web site hosting the program is no longer available. in addition, based on the description of their published paper, visual blast does not provide the plotting function for hsps available in bov. another program, blast2gene  <cit> , converts blast output into a graphical plot . however, the blast2gene program is only designed to compare one small gene sequence against a larger genomic region in order to identify all the similar gene copies in the latter. as a result, only an asymmetric diagram is plotted to indicate the hsp positions on the larger genomic region. in addition, its accompanying web server can only handle single-query blast outputs. in contrast, the bov program treats both the query and hit sequence equivalently and both can be long sequences. in addition, the bov server can process multi-query blast outputs and can produce a useful graphic for publication and presentation .

originally, the development of bov was prompted by our need to carefully analyze the blast comparisons among a set of daphnia pulex genomic contigs . after submitting our blast output to the server, a large-scale overview of the blast alignment regions between the assembled daphnia genomic contig # <dig>  and genomic contig # <dig>  are produced . although the two contigs are quite long, the matching regions are limited to near the 3' portion of both contigs . after zooming into the high-score matching region, some complicated matching patterns can be identified . five blocks of genomics regions show perfect co-linearity between these two contigs ; five blocks of regions of contig # <dig> show inversion and/or translocation in the corresponding regions of contig # <dig> . in addition, several regions of contig # <dig> are duplicated in contig # <dig> . the plot of the matching regions  makes it much more straightforward to fully understand the topology of complex genomic regions, including stretches of co-linearity, inversion, translocation, and duplication. in addition, using the tools embedded in bov, it is possible to retrieve the sequence segments from the above matching regions for further study of their identities. out of the ten highlighted matching regions, four match to daphnia est sequences  indicating that those hsp segments correspond to actively transcribed genic regions. using blast to search for matches among these regions and the ncbi nr and nt databases, we find no hits to known genes or repetitive elements  indicating that, although there may be functional significance to at least some of these regions, the identification of candidate homologous genes or functional domains will require further investigation.

we envision that bov will be very useful for biologists interested in examining the evolution of gene structures , relationships among orthologous and paralogous genes, analysis of repetitive elements or tandem arrays, as well as the identification of regions of small or large scale synteny along chromosomes . the bov tool provides a freely accessible web server for biologists with no software installation or maintenance required by the user. users can simply upload their blast output and follow the intuitive web interface to visualize the mapping of the hsps. similar to other blast-utility programs, bov is not sophisticated in its computer science algorithms and can be downloaded in its entirety for use and/or modification depending on specific analytical needs. for example, although the bov program is designed to process blast outputs, the parsing component can be easily replaced to handle any other pair-wise alignment program using our drawing routines. we believe that the availability of bov enriches a biologist's tool kit for effectively processing blast output and conducting comparative genomic research.

CONCLUSIONS
the blast program is widely used in genetic and genomic research. we have developed a web server, bov, to provide a visualization tool for biologists to conveniently dissect the blast output for complex matching patterns. our program allows for single- or batch-query manipulation, can be easily accessed and downloaded for use and modification, and provides a user-friendly web interface to interactively visualize the matching regions of query and database hit sequences.

availability and requirements
the bov program is freely accessible, using a web browser at . the software is also available from the web site for local installation. we have made bov portable across linux and unix distributions, and compatible with bioperl  <dig>   and mysql  <dig>  . we have tested the bov installation on sunos  <dig> , ubuntu linux server v <dig> . <dig>  and gentoo linux x86_ <dig> v <dig> . <dig>  bov can be viewed with firefox  <dig> , opera  <dig> , safari  <dig> , internet explorer  <dig> , or their higher version. the bov website will be updated to contain the latest information on operating system and software compatibility.

project name: bov

project home page: 

operating systems: local installation requires linux/unix.

programming language: perl, javascript

license: the software is under the apache license  <dig> .

authors' contributions
rg and kr implemented the computer program and web server. ch guided all software engineering aspects of the system for quality management. ss tested the system and provided on-line descriptions of the tool, and critically revised the manuscript. qd designed and supervised the project, and prepared the manuscript. all authors read and approved the final manuscript.

