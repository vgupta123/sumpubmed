BACKGROUND
there are several situations in population biology research where simulation of dna sequences is useful. simulations have been used to for hypothesis testing  <cit> , to study the impact of differing demographic scenarios on patterns of human diversity  <cit> , or to simulate the evolution of complex diseases in human populations  <cit> . in addition, population simulation of genetic datasets is also used to estimate population parameters  <cit> .

one of the most exciting research areas in the current context of population genetics is the hapmap project. knowledge about patterns of linkage disequilibrium  in humans is very important from a genomic point of view. the existence of linkage or haplotype blocks  <cit>  or, at least, networks of snps in high ld  <cit> , will facilitate the assembly of human genome haplotype maps  <cit>  that will enormously improve, among other things, the efficiency of disease gene mapping. it seems that these blocks are mainly defined by recombination hot spots  <cit> , but haplotype blocks can also be generated by genetic drift in regions of uniform recombination if rates is low enough  <cit> . we have now growing empirical knowledge about haplotype block and tagsnp diversity, but less is known about the effect of population demographic history. though important work has been undertaken in the application of population genetics to ld mapping  <cit>  and its relevance to human populations  <cit> , we still have an incomplete understanding of how the combined effect of genetic drift, mutation, recombination and migration, affect ld and tagsnp patterns, although it is known that they do  <cit> . moreover, recombination is an important evolutionary process to understand how genetic diversity is generated and maintained in populations. jointly with positive selection, recombination allows for very high rates of evolution  <cit> . however, the impact of recombination is dependent on other forces, such as selection and demography. developing tools that allow simultaneous simulation of natural selection, recombination and complex demographic patterns will be of great help in trying to better understand the trace left on the dna by the different interacting evolutionary forces.

simulation of biological populations under different evolutionary genetic models can be done following backward or forward strategies. backward simulations, also called coalescent-based simulations, are computationally very efficient because they are based on the history of lineages with surviving offspring in the current population and ignore all individuals that are not ancestral to the present-day population  <cit> . hence, coalescent is a sample-based theory relevant to the study of population samples and dna sequence data. from its beginnings, the basic coalescent has been extended in several useful ways. for example, to include structured population models  <cit> , changing population size  <cit> , recombination  <cit>  and selection  <cit> .

on the contrary, forward simulations are less efficient because the entire population is simulated from past to present. however, the coalescent framework imposes some limitations that forward simulation does not. the first of these is the same feature that causes its efficiency, namely, the coalescent does not keep track of the complete ancestral information i.e. only takes into account ancestries that survived to form the present-day sample. thus, if the interest is focused on the evolutionary process itself, rather than on its outcome, forward simulations should be preferred  <cit> . second, coalescent simulations are complicated by simple genetic forces such as selection, and although different evolutionary scenarios have been incorporated  it is still difficult to implement models incorporating complex evolutionary situations with selection, variable population size, recombination, complex mating schemes, and so on. in fact, we can only simulate limited forms of recombination and selection under the coalescent. it is known that recombination has a major impact for detecting positive natural selection  <cit> . shriner et al studied the impact of recombination under a neutral model. anisimova et al studied the recombination effect under a coalescent codon-based model i.e. the unit of change was the codon instead of the nucleotide. in the latter case, recombination was not simulated at the intracodon level. therefore, we still ignore the importance of intracodon recombination under a given codon-based model. moreover, coalescent methods cannot yet simulate realistic samples of complex human diseases  <cit> . indeed, when simulating non-neutral scenarios and/or complex models under the coalescent, much of its computational efficiency is lost . furthermore, the coalescent model is based on specific limiting values and relationships between some important parameters  <cit> . hence, there is increasing interest in forward population genetic simulation and new efficient tools have been recently developed  <cit> . therefore, a program that allows the simulation forward in time, of different markovian nucleotide or codon models of dna mutation combined with recombination, at inter and intra codon levels, fitness-based selection and complex demographic scenarios, will be of great interest. here i will introduce the program genomepop that fulfills the mentioned requirements.

implementation
genomepop uses a simple and efficient algorithm to perform forward simulation of populations and/or genomes. the basic idea considers an individual as the differences  between this individual and a reference or consensus genotype. thus, each individual is no longer represented by its complete sequence or genotype but by the mutations it carries with respect to the consensus. a more detailed explanation of the algorithm is provided at the program web page. taking advantage of the efficiency of this approach, genomepop can simulate, forward in time, dna sequences under specific markov models. the program allows the simulation of recombination under both nucleotide and codon models of evolution, providing a way to simulate recombination at inter and intracodon levels under codon models. it also permits arbitrary migration models, simulation of snps, recombination hot-spots, fitness-based selection and many other features that are detailed in the program web-page. genomepop has different output formats as genepop for snps and phylip or nexus for dna sequences.

markov models of dna mutation
markov processes are used in molecular evolution to describe the change between nucleotides, aminoacids or codons over evolutionary time. usually, time is measured as the number of substitutions because molecular sequence data does not allow the separate estimation of the rate and the time, but only of their product  <cit> . in the context of forward simulation we are not interested in the transition after an arbitrary time t  but just in the transition from a nucleotide or codon to another, given that a mutation occurs. an advantage of this approach is that we need to compute the transition matrix just once at the beginning of the evolutionary process. therefore, consider a given instantaneous substitution rate matrix q, which allows for a complete definition of any markovian substitution model  <cit> , the matrix m = -qq + i is the conditional transition matrix to go from i to j provided that a substitution occurs, where q = diagonal  and i is the identity matrix  <cit> . then, given an instantaneous substitution matrix q, estimated for example using paup  <cit>  or hyphy  <cit>  programs, we can obtain the corresponding transition matrix m that can be used to produce the necessary mutation process in a forward in time evolutionary model.

biological models
there are two basic biological models implemented in genomepop, namely "viral" and "non-viral". the only difference that distinguishes them is just that in the viral model the initial sequences are different in each population, as the different viruses infect different individuals. thus, the user can define a viral model indicating the percentage of sequence identity  between the sequences of the distinct populations. by default the sequence identity is zero i.e. the sequences at each population are randomly settled. in the non-viral model the initial sequence is the same for every population .

dna models, recombination and selection
there are different dna models implemented in genomepop . in any of them, the user can decide to allow recurrent mutation, i.e. multiple site hits or not. models can be haploid or diploid. population size can be constant or variable. in the four-allele models, the sequences can be generated by the program or provided by the user. in the case of the 2-allele model  just one or several chromosomes can be considered. in this same model, recombination can be constant or a hot spot recombination model can be defined. in the latter, the recombination rate r is per haploid region and generation. if no hot spots are defined, the expected number of recombination events between any two sites i and j will be 2rdij/ where dij is the implied region length and l is the chromosome length. the number of recombination events between the two chromosome extremes  <dig> and l - <dig> will be 2rdij/ = 2r. in genomepop, the effect of natural selection can be modelled in two different ways: 1) by its effects on the dn/ds ratio i.e. by defining a codon model, and 2) via the fitness effect of mutation on specific loci. the user can run either of two models. the codon model option runs a mg <dig> codon model  <cit>  with a given dn/ds combined with any defined nucleotide model. this model of codon evolution will be implemented by the instantaneous rate matrix to go from codon i to j. that is, qij = θmnkπn where θmn accounts for biased nucleotide, m to n substitutions; k =  <dig> or ω for synonymous or nonsynonymous mutation rates respectively and πn is the equilibrium frequency of the target nucleotide. this corresponds to the mg <dig> model  <cit>  with the restriction of α =  <dig>  nucleotide equilibrium frequencies are used instead of codon frequencies. to simulate a given dn/ds we simply set ω = dn/ds. alternatively, the user can set the codon model option to false  and define specific sites under directional selection with a given selective coefficient which will apply when a mutation occurs at such site. the user can also force all sites to undergo selection. the selection coefficient, s, can be constant or sampled from a gamma distribution with user-defined shape parameter β and scale parameter β/s. the β parameter allows for modelling of the fitness effects distribution, e.g. a low value of β  will sample many mutations with low effect and few with high. a β parameter of  <dig> corresponds to the exponential distribution. if we set β to  <dig> then a constant effect model is applied. moreover, genomepop permits the combination of both kinds of models of selection, codon and fitness-based, though the biological meaning of such a mixture is not clear.

gtr: general time reversible model  <cit> . mg94: muse and gaut  <cit>  codon model.

migration models
two basic migration schemes, island model and one-dimensional stepping stone, are pre-defined in genomepop. however, the user can define any migration model of interest . to do this, set the flow model to 'user' in the standard input file and then just introduce a scheme similar to that of figure  <dig> in a file called migrationmodel.txt. in this file, the lines beginning with '#' are comments. to indicate how individuals will migrate from a given population just begin the line with the word "pop". the order of appearance of each population in the file will correspond with its index i.e. the first population that appear is the population number one, etc. the number below "pop" refers to the migration level, i.e. the number of different migration rates defined from this population. the next line should begin with a migration rate  followed, in the same line, by the target population. we should have as many of these kinds of lines as the migration level indicates, i.e. if the migration level is  <dig> we should have two lines beginning with a migration rate. more detailed explanation and specific examples are given in the program web page.

scaling
clearly, the more complex the model defined, the slower the simulation. to avoid high computation times, genomepop incorporates a scaling option based on the fact that, under neutral models, we can scale the population size n and the time t, provided the consequent correction to the mutation , migration  and recombination  rates holds the corresponding compound products nμ, nr, nm, etc., constant.

RESULTS
input file
the input file should be called genomepopinput.txt. in this file, lines beginning with '#' are comments and will be ignored. in figure  <dig> we can see an example of an input file. note that the input is flexible, i.e. the minimum input for genomepop to work appropriately corresponds to the first line and the values below it. this line must begin with the identifier 'chromsize' and the line below with the corresponding desired values. note that, in lines with identifiers, only the first word matters for the program.

thus, the input in figure  <dig> generates  <dig> datasets under a gtr model with substitution rates typical for hiv  <cit> . both recurrent and retromutation are allowed. the system will evolve  <dig> chromosome of  <dig> kb under the given model over  <dig>  generations. as can be seen in figure  <dig>  a scaling of  <dig> was used, which implies that both, population size and the number of generations, was divided by  <dig> and mutation was multiplied by the same factor. a more exhaustive explanation of the input facilities of genomepop is provided at the program web page.

example and validation of the markov mutation method
for each obtained dataset from the input in figure  <dig>  the best-fit model of nucleotide substitution under the akaike information criteria  was estimated with modeltest v <dig>   <cit> , using maximum likelihood  estimates from paup*  <cit> . the percentage of correct model estimation  was 97% although some datasets, about 29%, were also assigned invariable sites or rate heterogeneity among sites. the substitution pattern and equilibrium frequencies were correctly estimated.

examples and validation of other general features
as genomepop has many different features and models it is difficult to validate every possibility or circumstance. however, strong effort has been made to validate the program as thoroughly as possible. for example, both unscaled and scaled simulations were performed under a jukes-cantor model with diversity θ = 4nμ =  <dig>  over  <dig> generations and then θ was estimated using the finite-sites correction of watterson θ  <cit> . the accuracy was quite good, obtaining estimates of  <dig>  ±  <dig>  and  <dig>  ±  <dig>  for the unscaled and scaled cases respectively. recombination was also tested by evolving datasets for 6n generations under a jukes-cantor 4-allele model with different values for the parameter ρ = 4nrl, where n is population size, r is recombination rate per site and l is the dna sequence length . namely, we ran cases with ρ equal to  <dig>   <dig> and  <dig>  recombination was then accurately estimated using the program kpairwise  <cit> . genomepop allows also studying 2-allele snps at different frequencies in different populations. in figure  <dig> we define a 2-allele model  with different initial composition at each population  and  <dig> independent snps . the populations have different sizes  and migration occurs under the island model. note that when defining different population sizes, the original population size provided in the 'chromsize' line under the 'popsizekmax' identifier is overwritten.

we ran this example over  <dig> generations and then analyze the output with the genepop  <dig>  program  <cit> . as expected the snps were detected as independent. we then changed the value of recombination to  <dig>  and then genepop  <dig>  tell us that the  <dig> snps are linked, as expected. note the many possibilities that the program provides in the context of studying snps under complex evolutionary situations. we can define any number of populations under any user-defined migration model. we can set any number of snps with the desired linkage relationships. the snps can be set at distinct initial frequencies in the different populations, for example, 'snpfreqs' at  <dig>  and  <dig>  defines the first population with allele  <dig> fixed and the second with allele  <dig> fixed.

impact of recombination on estimation of positive selection
we performed a simple experiment to test the impact of recombination on dn/ds estimation. we ran  <dig> replicates, with and without population recombination per gene, 4nr =  <dig> and  <dig>  respectively. the runs were performed under a mg <dig> × jc model both with dn/ds =  <dig> and dn/ds =  <dig>  evolving  <dig> codons for 10n generations with an effective population size of n =  <dig> to get samples of  <dig> sequences. the dn/ds ratio was estimated with the fel  model of hyphy  <cit>  which computes global and site by site dn/ds ratio. a p value of  <dig>  was used to infer sites under positive selection. as can be seen in table  <dig> a dn/ds of  <dig>  provokes the detection of some sites under positive selection  in only 30% of the replicates . furthermore in the strictly neutral case , one positive selected site was assigned in 10% of the replicates as expected given the p value used. if we correct by this 10% of false positive tests then positive selected sites were detected only in 20% of the replicates under a dn/ds value of  <dig>  and no recombination. this is in agreement with the conservative nature of the fel method  <cit> . also noteworthy is that recombination had no impact on global dn/ds estimation but had important effects on the number of sites detected under positive selection as is evident upon inspecting table  <dig>  it seems also that the effect of intracodon recombination is negligible. interestingly, it appears that the effect of recombination is somewhat higher under non-neutral dn/ds than in the neutral case. the impact of recombination on positive selection detection has already been studied  <cit> . however, as far as we know, the comparison of the impact of recombination under neutral or positve dn/ds jointly with the effect of intracodon recombination has never been studied before. the significance of this effect should be studied with more replicates and cases, which is out of the scope of the present work.

n: population size. r = recombination rate per gene. ω = dn/ds. npss: average number of positive selection sites. ncb: no codon break allowed.

CONCLUSIONS
genomepop has interesting characteristics for simulating snps or dna sequences under complex models of evolution and demography. these features make it unique with respect to other simulation tools. namely, the possibility of forward simulation under gtr mutation or gtr × mg <dig> codon models with intra-codon recombination, simulation of any user-defined migration pattern, diploid or haploid models, constant or variable population sizes, fitness-based selection, etc. under the 2-allele model it allows the simulation of recombination hot-spots, the definition of different frequencies in different populations, etc. genomepop can also manage large dna fragments and has a scaling option to save computation time when simulating large sequences or population sizes under complex demographic and evolutionary situations. it has many other features that are detailed in the web page  <cit> .

availability and requirements
project name: genomepop v.  <dig> 

project home page: 

operating system: windows and linux 

programming language: c++

license: gnu gpl.

authors' contributions
ac-r had the original idea for the work, designed and implemented the algorithms and wrote the manuscript.

