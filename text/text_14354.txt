BACKGROUND
laboratory techniques used to determine haplotypes  <cit>  are often too expensive for large-scale studies. the lack of phase information provided by the popular typing methods could be overcome using likelihood-based calculations  <cit> , which estimate haplotype frequencies in a population, and reconstruct the haplotype pair in each individual. this approach is more cost-effective and powerful than linkage analysis  <cit> , and gives more information than single marker-based methods  <cit> .

haplotype estimation procedures typically use maximum likelihood approach. the most popular algorithm implemented for example in arlequin  <cit>  is the expectation – maximization algorithm   <cit>  but other methods were also proposed: bayesian method using a pseudo-gibbs sampler  <cit> , partition-ligation  <cit> , monte carlo  <cit>  and hidden markov model  <cit> .

a frequent shortage of available software packages  <cit>  is the lack of possibility to analyze loci where null variants occur with an appreciable frequency. in a diploid organism, a null allele is a variant which is not detected in genotyping, because of a deletion of an entire locus or because of a mutation interfering with analysis. this makes it impossible to distinguish between some heterozygous and homozygous genotypes  <cit> . for example, if there is only one alternative allele a <dig> besides the null allele a <dig>  then there are three possible haplotype pairs: a1/a <dig>  a1/a <dig> and a0/a <dig>  but only two kinds of experimental observations: a <dig> and a <dig>  an example of a genetic system, which is at present intensely studied  <cit>  and which contains null alleles, is the locus encoding killer immunoglobulin-like receptors  of natural killer  cells.

to our knowledge, the only available computer program designed to handle null alleles is haplo-ihp  <cit> , which, however, has a shortcoming of being applicable only to biallelic loci. the purpose of our work was to design a versatile application for estimation of haplotypes from unphased population data useful for multiallelic polymorphism with and/or without null alleles.

implementation
the null variants decrease the number of different genotypes g which can be observed, equation , when the k polymorphic loci are analyzed and each locus has li different variants  for i-th locus, δi =  <dig> if i-th locus has null allele, otherwise δi =  <dig>  the number of haplotypes is h=∏i=1kli.

  g=∏i=1k+2δi <dig> 

the average number of haplotype resolutions which give genotype j  grows exponentially with the number of observed loci, thus full space search algorithm cannot be used to find the best haplotype frequencies. the equation  provides the number of haplotype resolutions rj which give genotype j, where sj is the number of observed heterozygous and tj is the number of observed  alleles for loci with null allele.

  rj={2sj−13tjfor sj>03tj+12for sj= <dig> 

maximum likelihood approach to estimate haplotypes
in the maximum likelihood approach haplotype frequencies hi are estimated to maximize the probability of the given sample of genotyping data. the sample of genotyping data from n individuals is simplified to a vector s = , where g is the number of different genotyping data ), and nj is the number of individuals having j-th genotype, ∑j=0gnj=n.

the conditional probability of sample s, given each genotype probability gi, and assuming unrelatedness of individuals in the sample is provided in equation , where α does not depend on gj.

  p=n!n1!n2!...ng!∏j=1ggjnj=α∏j=1ggjnj 

the frequency of genotype gj is the sum of frequencies of respective haplotype pairs zmn, and with hardy-weinberg equilibrium  assumption, it is calculated from haplotype frequencies as shown in equation , where zmn is the frequency of haplotype pair m and n, rj is the number of haplotype pairs for the j-th genotype , and hm, hn are the frequencies of haplotypes m and n respectively.

  gj=∑i=0rjzmn,wherezmn={hm2for m=n2hmhnfor m≠n 

the estimation of haplotype frequencies to maximize the probability of the observed sample can be described as optimization, the equation  summarizes the considered approach.

  arg⁡max⁡h <dig> h <dig> ...,hhp=arg⁡max⁡h <dig> h <dig> ...,hh∏j=1gnj 

extended em algorithm
the em alternates between performing an expectation step e, which computes an expectation value of unknown parameters, here the frequencies of haplotype pairs, and a maximization step m, which computes the value of parameters by maximizing the probability of observed data. the parameters found on the m step are then used to begin another e step, and the process is repeated until the parameters are changed.

the description of algorithm details for the observed genotype data of k linked loci, li variants for i-th locus, and the sample s =  is given below.

initiation
the em algorithm could be trapped into a local maximum, therefore multiple random starts are employed  in order to help the algorithm reach the global maximum. if n >  <dig> starting points are specified, for i-th point, the program calculates the mean error between the first and i-th estimate, and if this exceeds a predefined value  a message is displayed about possible multiple local maxima. since this feature increases computational time, it is optional.

if no random starts are used, the initial haplotype pair frequencies are set as described in equation  . for each haplotype resolution, the initial frequency depends only on the number of haplotype pairs for the given genotype. a similar initiation is described in  <cit> .

  zmn=1rjwhere the mn gives the j genotype 

maximization step
in this step, the typical em algorithm was adopted, the only modification consisting of the fact that the genotype frequency calculation was performed as a sum of corresponding haplotype pair frequencies, equation , taking into account that the heterozygotes with null allele are genotyped identically as homozygotes without null allele.

next, the haplotype pair frequencies are corrected, to maximize the probability of a given sample. details are given in equation , where zmn is the input haplotype pair frequency, gj is the calculated genotype frequency , zmn is the output haplotype pair frequency, corrected to maximize the observed sample, nj is the number of observed genotypes gj in sample and n is the number individuals in the sample.

  zmn=njn∗zmngj 

expectation step
haplotype frequencies hms are calculated from the given haplotype pair frequencies zmns, as a half of the sum of frequencies of all pairs of haplotypes in which given haplotype occurs. the next expected haplotype pair frequencies are calculated using haplotype frequencies as described in equation .

  zmn={)2for m=n2hmhnfor m≠nhm=12+∑jzmj) 

stop conditions
the algorithm stops, when the stability of estimations between the following steps is obtained, i.e. the absolute difference between the calculated frequencies is less then ε . the default threshold value for epsilon is 10- <dig>  and can be changed by a program option.

  ∑i=1r|zi−zi|<ε 

the final step is calculation of the haplotype frequencies , and of the conditional probability of the haplotype pair, given genotype estimation .

  zmn|gj=zmngj=zmn∑xrjzx 

RESULTS
the described algorithm was implemented using c++ and the boost libraries  <cit>  and called nullhap. the main advantage of our application is the ability to handle problems, when one or more multiallelic loci containing null variant occur.

nullhap was tested on simulated and real data sets and its performance was compared with those of previously described programs: arlequin  <cit> , phase  <cit>  and haplo-ihp  <cit> .

test on generated data sets
firstly, the simulated data sets were obtained as the most probable samples generated for polymorphisms with varying locus characteristics, and accuracy of estimated frequencies for different computer programs was analyzed. an example of assumed and estimated frequencies used in one such simulation is shown in table  <dig>  in table  <dig>  results of six simulations are summarized by giving a mean absolute percentage error, calculated as shown in equation , where x is the assumed frequency, and x* is the calculated one.

the assumed and estimated haplotype frequencies for a polymorphism with  <dig> loci: a, b, c.

haplotype estimation frequency error for six polymorphisms with varying locus characteristics.

  error=1n∑i=1n|x−x∗x| 

since it may not be known beforehand, whether a locus has a null allele, we also checked performance of nullhap which was run assuming the presence of a null allele in each locus. such an approach allows to screen the likelihood of the presence of a null allele in a given locus by evaluating the frequencies of haplotypes containing this allele. an appreciable frequency of any such haplotype in the output indicates the need to include a null allele in this particular locus. otherwise, the conclusion is, that given locus most likely does not contain a null variant. alternatively, genotypes of each locus could be analyzed for deviation from hwe by any of the available programs. when typing mistakes are excluded, deviation from hwe strongly indicates the presence of a null allele.

secondly, the effect of sample size on the performance of the method was investigated. this was done by generating k random samples of  <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> individuals from an infinite population in hwe. the haplotype frequencies were estimated and median of k mean absolute errors  was calculated. the results obtained for haplotype distributions such as those given in examples  <dig> and  <dig> in table  <dig> are illustrated in figure  <dig>  as can be seen, with a sample size of  <dig> individuals, an error of approximately 2% can be expected in haplotype frequency estimation, whereas a lower sample size may lead to substantially higher errors.

thirdly, tests of the effect of different levels of hwe violation on the accuracy of the algorithm were performed. the degree of hwe violation was modeled by increasing values of inbreeding coefficient f as defined by weir  <cit> , equation .

  zmn={hm2+hmffor m=n2hmhnfor m≠n 

as can be seen from figure  <dig>  there was a linear correlation of inbreeding coefficient f with the accuracy of estimation of haplotype frequencies.

finally, to evaluate the effect of haplotype frequency on the error of the estimation,  <dig> samples of  <dig> individuals were generated from a population in hwe, for a simple two loci polymorphism: a with variants a <dig>  a <dig>  a <dig> and b with variants b <dig>  b <dig>  the frequencies of haplotypes a0b <dig>  a1b <dig>  a1b <dig>  a2b <dig>  a2b <dig> were fixed and equal to  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig>  respectively, whereas the frequency of haplotype a0b <dig> varied from  <dig>  to  <dig> . results expressed as median of mean absolute percentage error ) are shown in figure  <dig>  as can be seen, the lowest error occured with haplotype frequency close to  <dig> .

performance tests
we also performed analysis of computational time in different scenarios. results presented for appropriate applications are shown in table  <dig>  all computations were achieved on celeron m  <dig>  ghz,  <dig> gb ram, under debian linux or windows xp.

computational time for considered applications . results presented only for applications able to handle the given polymorphism, otherwise '-'.

because the number of haplotypes grows exponentially with the number of considered loci, there is a practical restriction to approximately  <dig>  haplotypes, e.g.  <dig> biallelic loci. we noted with moderate number of loci the restriction is due to computational time, whereas for the very large number of loci  the memory becomes a limiting factor.

tests on real data sets
to perform a test on real data, we first used hla-drb <dig> and hla-dqb <dig> allele distributions among  <dig> poles as supplied by  <cit> . both loci are multiallelic  without null variants. the difference between estimated frequencies among programs arlequin, phase and nullhap  was less than 2%.

to test the application in the presence of biallelic loci with null variants, the kir genotypes for  <dig> irish subjects  <cit>  were analyzed with nullhap and haplo-ihp . the difference of estimated frequencies between programs was about 3%.

reanalysis of published data indicates that the kir2ds4/1d locus may be a marker of kir2ds <dig> haplotypes with different effects on psoriasis susceptibility
in order to apply nullhap to real data from an association study we reanalyzed the results of luszczek et al. on distribution of kir genotypes in polish psoriasis patients and controls  <cit> . in the original report these authors described an association between kir2ds <dig> and psoriasis, which was also observed in two subsequent studies from japan and the us  <cit> , but not in a study a of chinese population  <cit> . further analysis of genotype data of luszczek et al.  <cit>  indicated a role for kir gene variants other than kir2ds <dig> in conferring susceptibility to psoriasis, suggesting, that distinct kir haplotypes could be responsible for observed associations  <cit> .

the distributions of kir haplotypes among patients and controls obtained with nullhap are given in table  <dig>  because the structure of the kir region is very complex, it is not fully known which genes are truly allelic, i.e. occupy precisely the same chromosomal locus. at first, in our analysis, the k2dl2/kir2dl <dig>  kirds4/kir1d, and kir2ds3/kir2ds <dig> genes were treated as alleles. since in the case of kir2ds <dig> and kir2ds <dig> this may be controversial due to some haplotypes which harbor both genes in cis  <cit> , we also repeated the analysis after exclusion of these variants. in all loci a null allele was allowed  <cit> .

*with bonferroni correction 

the distribution of kir haplotypes among psoriasis patients and controls obtained with nullhap based on genotypes reported by luszczek et al.  <cit> . only haplotypes with frequency > 5% in either group are shown. odds ratio  calculated according to haldane  <cit> , p value calculated by fisher exact test. ns -not significant.

as can be seen from table  <dig>  two haplotypes  were strongly overrepresented among the patients. the fact that these haplotypes encoded kir2ds <dig> is consistent with the association between this gene and psoriasis  <cit>  whereas the lower or associated with haplotype # <dig> vs. # <dig>  supports the protective effect of kir2ds <dig> suggested previously  <cit> . in contrast to haplotypes # <dig> and # <dig> other haplotypes encoding kir2ds <dig>  were not overrepresented among the patients. both haplotypes encoded kir2ds <dig> which could be interpreted as the postulated protective effect of this variant  <cit> . however, whereas the presence of kir2ds <dig> or kir2d <dig> offers one explanation of the heterogeneity of the effects of kir2ds <dig> haplotypes, the inspection of table  <dig> shows that the risk – conferring and neutral kir2ds <dig> haplotypes are also distinguished by the kir2ds4/1d locus, which is a novel observation. as can be seen, the haplotypes # <dig>  # <dig> share the 1d variant, whereas the haplotypes # <dig>  # <dig> both have the kir2ds <dig> null allele. these effects of kir2ds4/1d locus were also apparent in analysis performed after the exclusion of kir2ds <dig> and kir2ds <dig> genes .

the fact that kir2ds4/1d and kir2ds <dig> loci are physically adjacent  <cit>  suggests that the strong predictive effect of their haplotypic combinations may be caused by linkage disequilibrium with an unknown variant in the region, which is primarily associated with psoriasis. the indirect association is particularly plausible for kir2ds4/1d because kir 1d and kirds <dig> null  are both non functional and thus should be equivalent physiologically  <cit> . in case of the kir2ds <dig> it would be tempting to speculate that the susceptibility conferring effect is limited to a rare allele  being in strong linkage disequilibrium with 1d. interestingly, such a theory could explain a lack of association between kirds <dig> and psoriasis recently reported in a chinese population  <cit> .

CONCLUSIONS
the developed application can effectively estimate haplotype frequencies with a performance that is similar or better than those of other available computer programs. it should be emphasized, that the main advantage of the created application is the ability to estimate haplotypes for every type of polymorphism, in particular polymorphisms with multiallelic loci with null variants.

the presented application is under development, and some improvements are planned, such as an additional step removing unimportant haplotypes or the partition-ligation algorithm  <cit>  to speed-up computations for a large number of loci. other planned improvements are a graphical user interface as well as an import/export module for popular data formats. the new versions will be available at project homepage.

availability and requirements
project name: nullhap

project homepage: 

operating systems: os portable

precompiled binaries: windows nt/2000/xp, debian linux

programming language: c++

license: gnu lgpl

authors' contributions
rn adopted algorithm, implemented application, performed calculations and drafted manuscript. rp proposed the idea to develop the software, outlined its main features, participated in validation process and provided biological interpretation of results of reanalysis of kir haplotypes. all authors read and approved the final manuscript.

