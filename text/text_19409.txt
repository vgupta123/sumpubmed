BACKGROUND
with the completion of many genome sequencing projects and advances in the methods of automatic discovery of sequence patterns , it is now possible to search or discover protein sequence motifs at the genome level. if one regards protein sequences as "sentences" of the biological language with amino acids as the alphabet, then protein motifs can be considered as words or phrases of that language and determining the function of a motif is equivalent to determining the sense of a word. identifying biological sequence motifs has been a fundamental task of bioinformatics, which has led to the development of several motif  databases, such as prosite, blocks, smart and pfam  <cit> . these databases are usually constructed by studying the set of protein sequences that are known to have certain functions and extracting the conserved sequence motifs that are believed to be responsible for their functions. however, the number of motifs that can be extracted in this way is quite limited, and it has been a major challenge to discover new motifs. with the advent of algorithms and programs that can automatically discover sequence motifs from any given set of sequences  <cit> , it is possible to mine a large number of sequences to find novel motifs without necessarily knowing their functions and to compile a dictionary of biological language accordingly. an essential task involved in the compilation of such a dictionary is to determine the function  of newly identified protein motifs.

here, we report development of general methods that can be used to predict the function of protein motifs by mining the knowledge in the gene ontology. the gene ontology™  project  <cit>  is a concerted effort by the bioinformatics community to develop a controlled vocabulary  and to annotate biological sequences with the vocabulary. a biological sequence is described in three different aspects, namely, biological process, cellular component, and molecular function. the standardized annotation with a controlled vocabulary is the main advantage of gene ontology, which facilitates both communications among scientists and information management. both the number of annotated sequences and the number of go terms associated with individual sequences in the gene ontology database are increasing very rapidly. moreover, natural language processing techniques are also being used to automatically annotate gene products with go terms  <cit> . thus, it can be foreseen that the annotations of protein sequences in the gene ontology database will become more and more detailed, and have a great potential to be used as an enriched knowledge base of proteins.

the basic approach for determining the function of a motif is to study all the sequences that contain the motif . intuitively, if all the functional aspects of the sequences matching a motif are known, we should be able to learn which function is most likely encoded by the motif, based on the assumption that every protein function is encoded by an underlying motif. this means that we would need a knowledge base of protein sequences, in which the functions of a sequence are annotated as detailed as possible. in addition, we would also need prediction methods that can work on a given set of protein sequences and their functional descriptions to reliably attribute one of the functions to the motif that matches these sequences. to determine the function of any novel motif, we would first search the protein knowledge base to retrieve all the functional descriptions of the proteins containing the motif, and then use such prediction methods to decide which function is encoded by the motif. in this research, we use the gene ontology database as our protein knowledge base and explore statistical methods that can learn to automatically assign biological functions  to a protein motif.

our approach is based on the observation that the gene ontology database contains protein sequences and the go terms associated with the sequences. in addition, the database also contains information of known protein motifs, e.g. the prosite patterns that match the sequences. thus, the protein sequences in the database provide a sample of potential associations of go term with motifs, among which some are correct  and some are not. this provides us an opportunity to perform supervised learning to identify discriminative features and use these features to predict whether a new association is correct or not. current gene ontology database is implemented with relational database system, which allows one to perform queries like "retrieve all go terms associated with the sequences that matches a given motif" and vice versa. however, the database usually returns more than one go terms that may or may not describe the function of the motif in the query. thus, we need methods to disambiguate which go term describe the function of the motif  and determine how confident we are as the assignment is concerned. we use statistical approaches to learn from known examples and cast disambiguation task into a classification problem. furthermore, the probability output by the classifier can be used to represent its confidence for the assignment.

recently, schug et al  <cit>  published their result of automatically associating go terms with protein domains from two motif databases – prodom and cdd  <cit> . their approach is to use protein domains to blast  <cit>  search against go database and assign the molecular functional go term from the sequence matching the domains with most significant p-value. they found that, in the database they worked with, most sequences only had one functional go term. therefore, they could assign the go term of a sequence to the motif that matched with highest score with fairly good accuracy. however, due to restrictive assumption that each sequence has only one go term, their approach can not address the potential problem that a sequence matching a motif has multiple associated go terms, which is common case now, and how to resolve such ambiguity.

RESULTS
the data set
we use the may  <dig> release of the gene ontology sequence database , which contains  <dig>  protein sequences. for each sequence, a set of go terms assigned to the sequence is identified, and a set of prosite patterns that match the same sequence is also retrieved. if both sets are nonempty, all the possible pattern-term combinations formed by the two sets are produced. table  <dig> shows an example association of go terms with prosite motifs. the protein mgi|mgi: <dig> from the database is assigned seven go terms and the sequence also matches two prosite patterns. thus, as cross product of two sets,  <dig> distinct associations are produced. note that the same pattern-term association may be observed multiple times within the database. a total of  <dig>  go terms,  <dig>  prosite motifs, and  <dig>  distinct prosite-go associations have been obtained from this database.

using the information stored in the gene ontology and prosite, we manually judged a set of  <dig>  cases of distinct prosite-go associations to determine whether the association is correct or not. the prosite-go association set has been judged in two different ways. one way is to label an association as correct if and only if the definition of the go term and the prosite motif match perfectly according to the annotator. gene ontology has the structure of a directed acyclic graph  to reflect the relations among the terms. most terms  have parent, sibling and child terms to reflect the relation of "belonging to" or "subfamily". the second way of judging go-prosite association is to label an association as correct if the go term and the prosite motif are either exact match or the definitions of go term and prosite motif are within one level difference in the tree, i.e., the definition of go term and the prosite motif have either a parent-child relation or a sibling relation according to the go structure. thus we have two sets of labeled prosite-go associations, the perfect match set and the relaxed match set . both sets are further randomly divided into training  and test  sets. since the test sample size is fairly large, the variance of the prediction accuracy can be expected to be small. thus we have not considered any alternative split of training and test sets.

measuring term-motif associations
intuitively, we may think of the go terms assigned to a protein as one description of the function of a protein in one language  while the motifs contained in the protein sequence as another description of the same function in a different language . we would like to discover the "translation rules" between these two languages. looking at a large number of annotated sequences, we hope to find which terms tend to co-occur with a given motif pattern. imagine that, if the sequences that match a motif are all assigned a term t, and none of the sequences that do not match the motif is assigned the term t, then it is very likely that the motif pattern is encoding the function described by term t. of course, this is only an ideal situation; in reality, we may see that most of, but not all of the proteins matching a motif pattern would be assigned the same pattern, and also some proteins that do not match the motif may also have the same term. thus, we want to have a quantitative measure of such correlation between go terms and motif patterns.

a commonly used association measure is mutual information , which measures the correlation between two discrete random variables x and y  <cit> . it basically compares the observed joint distribution p with the expected joint distribution under the hypothesis that x and y are independent, which is given by pp. a larger mutual information indicates a stronger association between x and y, and i =  <dig> if and only if x and y are independent.

for our purpose, we regard the assignment of a term t to a sequence and the matching of a sequence with a motif m as two binary random variables. the involved probabilities can then be empirically estimated based on the number of sequences matching motif m , the number of sequences assigned term t , the number of sequences both matching m and assigned t , and the total number of sequences in the database. table  <dig> shows the top five terms that have the highest mutual information with prosite motif ps <dig>  which is the specific active-site signature of protein tyrosine kinases, along with the related counts.

we set out to test whether we can use mutual information as a criterion to assign a go term to a prosite motif. one approach is to use a mutual information cutoff value c to define a simple decision rule: assign term t to motif m, if and only if i ≥ c. for a given cutoff c, the precision of term assignment is defined as the ratio of the number of correct assignments to that of the total assignments according to the cutoff c. in figure  <dig>  we plot the precision at different mutual information cutoff values. it is easy to see that, in general, using a higher  cutoff, the precision is higher; indeed, the pearson correlation coefficient between the precision and the cutoff is  <dig> . this suggests that mutual information is indeed a good indicator of the correlation

however, a drawback of such an approach is that, given a motif, sometimes, many observed motif-term associations can have mutual information above the cutoff value, making it difficult to decide which pair is correct. while in other cases, the mutual information of the observed motif-term pairs may all be below the cutoff value, but we still would like to predict what terms are most likely to be appropriate for the motif. to address this problem, we can use a different cutoff strategy, and adopt a decision rule that assigns a go term to a motif based on the ranking of mutual information, which is a common technique used in information retrieval text categorization  <cit> . more specifically, for each prosite motif m in the annotated data set, all observed motif-term associations containing m are retrieved and ranked according to mutual information, then the term that has highest mutual information is assigned to m. alternatively, if we use this approach to facilitate human annotation, we can relax the rule to include go terms that have lower ranks, thus allowing multiple potential go terms to be assigned to a motif, assuming that a human annotator would be able to further decide which is correct. in this method, the key in making a decision is to select a cutoff rank that covers as many correct associations as possible  while also retrieves as fewer incorrect associations as possible . the optimal cutoff can be determined by the desired utility function.

predicting motif functions using logistic regression
while the mutual information measure appears to give reasonable results, there are three motivations for exploring more sophisticated methods. first, the mutual information value is only meaningful when we compare two candidate terms for a given motif pattern; it is hard to interpret the absolute value. while a user can empirically tune the cutoff based on some utility preferences, it would be highly desirable to attach some kind of confidence value or probability of correctness to all the potential candidate motif-term associations. second, there may be other features that can also help predict the function  for a motif. we hope that the additional features may help a classifier to further separate correct motif-term assignment from wrong ones. third, there exist many motifs with known functions , and it is desirable to take advantage of such information to help predict the functions of unknown motifs. this means that we need methods that can learn from such information. in this section, we show that the use of logistic regression can help achieve all three goals. specifically, we use logistic regression to combine the mutual information with other features, and produce a probability of correct assignment. the motifs with known functions serve as training examples that are needed for estimating the parameters of the regression function.

feature extraction and parameter estimation
we now discuss the features to be used in logistic regression, in addition to the mutual information discussed in the previous section. the goal is to identify a set of features that is helpful to determine whether association of any pair of a go term and a motif is correct or not, without requiring specific information regarding the function of go term and motif. for a distinct motif-term pair, we collect following frequency-based features:  the number of sequences in which the go term  and prosite motif  co-occur .  the number of sequences in which t occurs .  the number of sequences in which m occurs .  the number of distinct go terms  seen associated with m .  the number of distinct prosite patterns  seen associated with t . in addition, we also consider, as a feature, the similarity of the sequences that support a motif-term pair. intuitively, if a motif is conserved among a set of diverse sequences, it is more likely that the motif is used as a building block in proteins with different functions. thus, the average pair-wise sequence similarity of the sequence set can potentially be used as a heuristic feature in the logistic regression classifier. given a set of sequences, we use a blast search engine to perform pair-wise sequence comparisons. we devised a metric avgs to measure the averaged pair-wise sequence similarity per  <dig> amino acids  and use it as an input feature for classifier.

to cast the prediction problem as a binary classification problem, we augment our data set of motif-term pairs with a class label variable y, so that y =  <dig> means correct assignment and  <dig> means incorrect. we represent a motif-term pair by a vector of features x = , where k is the number of features. the seven features/variables used in our experiments are nt-m, nt, nm, ng|m, np|t, avgs, and m.i.. suppose we have observed n motif-term pairs, then we have n samples of , i =  <dig>   <dig>  ..., n, where, yi is the correctness label and xi is the feature vector for the corresponding motif-term pair. our goal is to train a classifier which, when given a motif-term pair and feature vector x, would output a label y with value  <dig> or  <dig>  alternatively, we can also consider building a classifier which outputs a probability that y =  <dig> instead of a deterministic label. thus, our task is now precisely a typical supervised learning problem; many supervised learning techniques can potentially be applied. here, we choose to use logistic regression as our classification model because it has a sound statistical foundation, gives us a probability of correct assignment, and can combine our features naturally without any further transformation.

in order to build a model only with the truly discriminative features, it is a common practice to perform feature selection for logistic regression. we use a combined forward and backward feature selection algorithm. starting from the intercept, we sequentially add features into the model and test if the log-likelihood increases significantly; we keep the current feature if it does. after the forward selection, we sequentially drop features from the model, to see if dropping a feature would significantly reduce the log-likelihood of the model; if it does, we exclude the feature from the model, otherwise continue. when testing the significance, we use the likelihood ratio statistic g, given by 2l/l, where, l and l are the log-likelihood of the model with feature f and the model without feature f, respectively. since we add or drop one feature at a time, g follows χ <dig> distribution with degree of freedom of  <dig>  <cit> . we use the p-value of  <dig>  as a significant threshold. figure  <dig> illustrates the procedure of feature selection. we found that the average pair-wise similarity of supporting sequence set does not contribute to the model significantly and so excluded it; all other variables contribute to the model significantly. the results of parameters estimation are show in the table  <dig> 

logistic regression classification
after fitting the model using the training set, we tested the model on the test set, i.e., we used the model to compute an output p for each test case. table  <dig> shows an example of computed conditional probability of correct assignment for the go terms associated with the protein motif possible the motif "ps00383", which is the "tyrosine specific protein phosphatases signature and profiles". the table  <dig> lists top  <dig> go terms, which are observed to be associated with the motif and ranked according to the conditional probability returned by logistic regression.

as the results from the logistic regression are the conditional probability that an association of a go term with a given motif is correct, we need to decide the cut off threshold for making decision. we calculate the sensitivity and specificity for a different threshold from  <dig>  to  <dig>  with a step of  <dig>  and plotted the roc curves as shown in figure  <dig>  the areas under the logistic regression roc curves are  <dig>  and  <dig>  for perfect match and relaxed match test set respectively. the precision of the rules is plotted in panel b, where we see that, as the rule becomes more stringent , predictions generally become more accurate. we noticed that the precision on the perfect match test set is more variable. this is probably due to the fact that this data set has fewer cases with y =  <dig>  thus, a small change in the number of cases introduces a large change in percentage. for example, when the threshold is set at  <dig> , only three cases are covered by the rule and two of them are correct, thus percent correct drop to 66%.

to see whether the additional features are useful, we also performed roc analysis using different mutual information cutoff threshold on the perfect match test set. the result is shown in figure  <dig> panels c and d. we see that using mutual information alone performs almost as well as logistic regression with additional features. however, the area under the curve  is smaller than that of logistic regression , indicating that logistic regression does take advantage of other features and has more discriminative power than mutual information alone.

the coefficients β <dig>  β <dig> and β <dig> for the three features nt-m, nt and nm, which are also involved in the calculation of mutual information, have a very interesting interpretation – they indicate that the roles of these three variables in the logistic regression model actually are to compromise the effect of mutual information! indeed, according to the formula of the mutual information, a strong correlation corresponds to a high nt-m, low nt, and low nm, but the coefficients shown in table  <dig> clearly suggest the opposite. we believe that this actually corrects one drawback of mutual information – over-emphasizing the correlation but ignoring the support or the strength of evidence. for example, if a term is rare, say occurs only once in the data set, then it would have a very high mutual information value  with respect to any pattern matched by the sequence to which the term is assigned. but, intuitively, one occurrence is very weak evidence, and at least should be regarded as weaker than when we have a term occurring  <dig> times in total and co-occurring  <dig> times with the same motif. the key issue here is that mutual information only reflects the correlation between variables, but does not take into account the strength of evidence, therefore, tends to over-favor the situation where there is a perfect correlation but very little evidence. however, the number of sequences in which the co-occurrence happens, which is called the "support" for the association, is also very important.

the coefficients for the other two parameters, ng|m and np|t, are also meaningful. their negative signs indicate that the more terms a motif co-occurs with or the more motifs a term co-occurs with, the less likely a particular association is correct. this also makes sense intuitively, since all those co-occurring terms can be regarded as "competing" for a candidate description of the motif's function, so the more terms a motif is associated with, the competition is stronger, and thus the chance that any particular term is a correct description of function should be smaller. thus, the logistic regression model not only performs well in terms of prediction accuracy but also gives meaningful and logically plausible coefficient values.

discussion
in this paper, we explore the use of the gene ontology knowledge base to predict the functions of protein motifs. we find that the mutual information can be used as an important feature to capture the association between a motif and a go term. evaluation indicates that, even used alone, the mutual information could be useful for ranking terms for any given motif. we further use logistic regression to combine mutual information with several other statistical features and to learn a probabilistic classifier from a set of motifs with known functions. our evaluation shows that, with the addition of new features and with the extra information provided by the motifs with known functions, logistic regression can perform better than using the mutual information alone. this is encouraging, as it shows that we can potentially learn from the motifs with known functions to better predict the functions of unknown motifs. this means that our prediction algorithm can be expected to further improve, as we accumulate more and more known motifs.

although we have so far only tested our methods on the known motifs, which is necessary for the purpose of evaluation, the method is most useful for predicting the functions of new and unknown motifs. for the future work, we can build a motif function prediction system and apply our algorithm to many candidate new motifs e.g., those discovered using teiresias, splash or other programs. this would further enable us to perform data mining from the gene ontology database in several ways. for example, we can hypothesize the functions of a large number of novel motifs probabilistically, then we will be able to answer a query, such as "finding the five patterns that are most likely associated with the go term tyrosine kinase". this is potentially very useful because it is not uncommon that substantial knowledge about the functions and sub-cellular location of a given protein is available even though a structural explanation for the functions remains obscure. on the other hand, we believe that our methods will facilitate identifying potentially biological meaningful patterns among the millions of patterns returned by pattern searching programs. a sequence pattern that associates with certain go term with high m.i. or probability is more like to be a meaningful pattern that that with low scores. furthermore, our methods can also be used in automatic annotation of novel protein sequences as suggested in schug et al and rigoutsos et al  <cit> . our methods provide different approaches to associate sequence patterns with functional descriptions. after associating functional descriptions  to motifs, we can determine what motifs a novel protein sequence matches and correspondingly transfer the functional descriptions associated with motifs to the sequence. one key advantage of our methods is that the probability of correctness for a go-motif association can be considered as confidence or uncertainty. this enables one to optimize the automatic annotation according to bayesian decision theory and minimize the risk of incorrect annotation.

having stated the potential uses of our approaches, we also realize that there exist some limitations for our methods. for example, in order to predict the function of a newly identified sequence pattern correctly, we would require functional annotations of the sequences of go database be complete and accurate, which may not always be the case. in this paper, we mainly used the motifs with known function to evaluate the capability of the methods developed in this research. our result shows that the methods work well with known sequences patterns. currently, the annotation of motif function with go term is carried out manually at the european bioinformatics institute . such approach is warranted because human annotation is more accurate than automatic ones. however, as the amount of information regarding protein functions accumulates and a large number of new potential motifs are discovered, it will be very labor intensive to annotate the potential association of protein function and protein patterns. by then, the methods studied in this research will potentially prove to be useful to discover the underlying protein motifs that are responsible for the newly annotated function. for example, the methods can be used as prescreening to narrow down to the most possible associations of protein function and motifs, thus facilitate human annotation.

CONCLUSIONS
in summary, we have developed methods that disambiguate the associations between of gene ontology terms and protein motifs. these methods can be used to mine the knowledge contained in the gene ontology database to predict the function of novel motifs, discover the basis of a molecular function at primary sequence level and automatically annotated the function of novel proteins.

