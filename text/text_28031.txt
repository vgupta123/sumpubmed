BACKGROUND
in the last decade we have witnessed an explosion of biological data that are available in all branches of the tree of life. significant advances in the biotechnological and computational realm have enabled new ways of acquisition, representation, analysis, and integration of many heterogeneous and seemingly disparate sources of data. this has led to the development of numerous databases that contain validated and putative associations between dna, proteins or metabolites and various inference algorithms for network reconstruction. still, in many cases, we lack the methods to extract information that is specific to a cellular mechanism, a biological behavior, or a complex phenotype from the plethora of the available data. the need to develop such methods will become increasingly more obvious, due to the projected accumulation of data in the following years.

here, we address the problem of network minimization and regulatory information flow in gene regulatory networks. given a gene regulatory network, a set of source  and a set of sink  nodes, our task is to find  the minimal sub-network that encodes the regulatory program which involves all input and output nodes and  the information flow from the source to the sink nodes of the network. concomitantly, if no sink nodes are specified, our task is reduced to identify the underlying pathways and nodes that are recipients of the information propagated from the source node. in this context, source nodes can be thought as cellular components that are sensitive to environmental fluctuations, and they can propagate this information to their downstream targets. in bacteria, this set includes intracellular and transmembrane receptors that participate in complex behaviors, such as chemotaxis and quorum sensing, transcription factors and response-specific proteins that are activated by external environmental stimuli, and sigma factors that initiate system-wide regulatory responses to environmental changes, such as heat shocks and nutrient limitation. in vertebrates, this list expands even more to include proteins involved in signal propagation in the nervous system, tissues, and organs. similarly, sink nodes represent downstream targets of interest. some examples include enzymes that participate in metabolic reactions, and proteins that are responsible for complex traits, such as stress-response proteins, motility genes, and genes involved in aerobic respiration.

the theory of network floods that we introduce here is a fundamental extension of network flow theory for networks where  interactions can be negative and  flow is replicated instead of conserved, as it is the case in regulatory networks. network flow theory  <cit>  has been traditionally applied in other disciplines, including multiprocessor scheduling  <cit> , transportation  <cit> , and sociology  <cit> . despite the availability of efficient methods in the field early on  <cit> , network flow theory has not been applied in this biological context. the network flow theory cannot be applied directly to biological systems in general, and gene regulatory systems more specifically, since the interactions that take place in biological networks and the network properties are of different nature when compared to the networks in other applications. one of the most striking difference is that network flow is not conserved in each node, in other words, the sum of all incoming flows is not equal with the sum of all outgoing flows. in fact, most regulatory networks exhibit flow replication, where the sum of the incoming flow is replicated in each of the outgoing interactions. this network characteristic captures the process of transcriptional activation of a gene that itself has multiple downstream targets. in that case, each outgoing regulatory edge from that node can have activatory or inhibitory information that does not have to conform to any flow conservation rule. as an example of this flow replication property, imagine a transcriptional regulator,  that can bind to two distinct promoters in the genome, which drive two different genes. in that case, upregulation of the arac gene will signify the simultaneous up-regulation of the downstream targets . in this typical case, there is no conservation rule of any sort, for example the number of arac copies do not have to be equal to the number of the two gene copies. furthermore, given saturating levels of regulatory protein, the effect of the regulation will be the simultaneous up-regulation of all upstream genes and thus the replication of the information flow to each distinct path. the vast majority of signal transduction network analysis methods are focused on topological features  <cit> , such as motifs and binary interactions between nodes in the network  <cit> . other approaches use boolean theory to infer hidden regulatory pathways  <cit>  or compute the minimal set of nodes that can perform signal transduction independently  <cit> . although these methods provide valuable insight, they can’t capture quantitative relationships between nodes that are critical for elucidating the network dynamics, and where the weights of the individual edges have a critical role. in a recent study the information flow of acyclic, activation-only, hierarchical networks was studied using continuous expression models  <cit> . other relevant prior work includes the application of elementary modes in signaling and regulatory networks for functional analysis  <cit> , shortest path algorithms for biological interaction paths  <cit> , application of petri-net based analysis to signal transduction pathways  <cit> , partitioning biological data with transitivity clustering  <cit> , and measuring information flow through random walks ignoring inhibitory links  <cit> . in contrast to the methods that mostly target clustering or motif finding in biological data, network flooding can elucidate the regulatory information flow taking into account regulation weight and sign, an important challenge in systems biology  <cit> , and perform hypothesis-specific network minimization towards transforming data and networks to knowledge. although network-based approaches have been developed in the past mainly for metabolic networks  <cit> , they are not suitable to be applied in cases where both positive and negative regulation is present and flow conservation does not hold.

figure  <dig> depicts different scenarios for network minimization and information flow in regulatory networks. given a set of input/output nodes and an undirected network, node reduction can be achieved by deleting nodes that are not connected to sub-graphs that contain at least one input or output nodes . in a directed weighted network where regulation follows an additive continuous model where the combined information flow through an edge is a continuous variable and can be less or equal than that edge's weight, this approach can be extended to discard nodes that do not regulate the output node directly or indirectly . in the flood network analysis that is introduced in this paper, the weight, sign and directionality of the network is taken into account in order to minimize the network and reveal the flow of information in the various pathways .

note that network flooding is very different from simple superposition of negative and positive regulatory weights for each node, as it takes into account the amount of regulatory information in the preceding paths. for instance, nodes  <dig> and  <dig> have exactly the same regulatory influences . however, while node  <dig> will be activated and propagate the signal to downstream nodes, node  <dig> will be inactive, due to the large information flow from node  <dig> to node  <dig> , which in this case has an inhibitory effect. the outcome of this process is thus highly dependent on both the network topology, and the corresponding weights. the problem becomes more challenging in the presence of loops and cycles, where simple network traversals  are not applicable. in addition, network flooding is fundamentally different from network flows, as it introduces negative regulatory interactions and conservation of flow is not guaranteed for each node, as it would be the case in metabolic processes. the latter is a necessary addition to realistically capture regulatory interactions, as regulatory information is usually replicated as it passes through a node with multiple outputs.

methods
in this section, we define the problem of gene regulatory network  minimization and we introduce the network flooding method along with an algorithmic implementation. before we describe the method of network flooding, we first define some terms that we will use in its description.

definitions
flood networks and network floods
first, we define the capacity c  of the edge , between nodes u and v as the maximum amount of information that can pass from node u to node v. a flood network g  =   is a directed graph in which every edge  ∈ e with u, v, ∈ v has a non-zero capacity c  ∈ r, and c  = <dig> when  ∉ e . in the case of gene regulatory networks, the nodes represent genes and the edges establish the regulatory interactions between them. the capacity of each edge represents the weight and direction of each regulatory interaction, and can be either positive, or negative. we distinguish a source node s ∈ v, and for simplicity we assume that a path exists from s to all other nodes in g.

since feedback and high interconnectivity is common in gene regulatory networks specifically, and biological networks in general, we have to devise a method to account for all possible walks in a network, which are not necessary simple. for this reason we “unwind” or “traverse” all its walks that are essential, which is formally defined as follows:

essential walk: given a network g  =  , a walk p =  on g with  ∊ e is essential, if between any two successive appearances xi,xj of any node v ∈ v, there exists at least one node that does not appear in the walk p’ = .

an essential walk allows multiple appearances of some nodes, as long as each cycle introduces at least one new node to the essential walk. an essential walk is called saturated, if its expansion through any node will make it non-essential. an essential traversal of g, starting from the source node, is the set ps of all saturated walks starting from the source node s, following a breadth-first manner. for a given edge  we denote as ps = {} the subset of all saturated walks within the essential traversal that include the edge . note that the essential traversal captures feedback loops of arbitrary size. given the above, the network flood f  of an edge  corresponds to the amount of information that flows through that edge, and it can be calculated by any function f: e → r, provided that it is subject to the following three constraints:

capacity constraint: for all edges  we require that |f| ≤ c|.

polarity constraint: for all edges  we require that fc ≥  <dig> 

essential walk constraint: we denote with f  the flood f  to an edge  that is carried through a walk p = , which starts from the source node s. the following constructs by induction a set of essential walks d, which defines the essential walk constraint on |f|, for all edges : base case: initially d = ∪ ∊e{} , and we require that |f)| = |c|. inductive step: let p be a walk in d, and p′ its expansion through an edge . the essential walk constraint states that the network flood in edge  is given by: |f| = |f|  =   max  |, ∑ q ∈ d : q = f)), with d = d ∪ {p’}.

the capacity constraint restricts the magnitude of the flood that can run through an edge. the polarity constraint guaranties that the running flood has the same sign as the edge capacity, to preserve its regulatory function. finally, the essential walk constraint imposes that each non-saturating walk p entering a node has to carry out the same flood as the one it brings into u, and the magnitude of the total flood in any edge  be determined by the algebraic sum of the flood carried by the set pu,vs⊆q. in general, the function itself can take any form , similar to the kernel functions in classification, although here we define its magnitude to be the linear sum of all incoming floods from essential walks, with the edge capacity value being its upper bound , and its sign to be the same as the edge capacity . the above definitions can be naturally extended to networks with more than one distinguished source nodes.

environmental signals and source nodes: let s = {s <dig>  s2…} be a set of continuous variables that encode for environmental signals , each of which can be sensed by the organism through a non-empty set of nodes usi∈v, namely the receptor nodes for the corresponding environmental signal. an environmental signal sj serves as a source node in a flood network, and is defined as “active” when it has a positive value. an edge or a node is defined as “active” when it has a non-zero flood. floods can be positive or negative, which corresponds to activation or inhibition of the target node , respectively. depending on which environmental signals are active, different pathways in the regulatory network are activated as a response to the current environmental state.

network minimization problem
given a grn g and a set of active environmental signals sact ⊆ s, infer the minimal grn g’ = , such that g′ is the sub-graph of g that only contains all active nodes e′ and active edges e′, from the whole set of nodes and edges in g. in case that a set of sink nodes a ⊆ v is also supplied, e′ should contain only edges that are found on a path from any nodes s ∊ sact to any nodes t ∈ a. figure  <dig> depicts an example of gene regulatory network minimization problem.

regulatory network minimization through flood analysis
here, we introduce a three-phase pipeline to address the network minimization problem defined above . given a grn g, and a set of active environmental signals sact, we first transform the input network g to a flood network that captures basic properties of gene networks such as a basal steady-state expression and a saturation limit on the expression of any given gene . then, we calculate the floods on the transformed network . we then perform the actual minimization by imposing a flood threshold and then we inversely transform the resulting network to its grn counterpart .

network transformation 
in the first phase, the grn is transformed to a flood network g=, which uses signal nodes, basal nodes, saturation nodes, signal and basal regulatory links to capture the basic elements of gene regulation. the steps of the transformation are the following :

 <dig>  introduction of the signal nodes. every signal ∈ sact is mapped to a signal node s ∈ v. the set of all signal nodes serves also as the set of distinguished nodes s ⊂ v.

 <dig>  an additional basal node b ∈ v is introduced. this node captures the basal  expression of the gene that depends on the "leakiness" of the upstream promoter and the concentration of the transcription factors that are bound to the promoter and regulate the gene's expression.

 <dig>  to capture the saturation of the node v expression, a saturation gadget is introduced. for every node v in the original grn, two nodes vin,vout are introduced together with an edge  the capacity of which c , is a positive number that limits the maximum flood through node.

 <dig>  introduction of the signal and basal regulatory links. for every receptor node v in the original grn regulated by an external signal s,  is added in e. the capacity c is set equal to the corresponding signal regulation weight w  from signal s to node v. moreover, in the presence of information on the basal expression levels of a node v, an edge  is added, with the capacity c set equal to the basal expression of v, b .

the basal node b, serves as an additional source node which is always being active.

network flooding 
in this step we calculate all network floods in the transformed flood network, by applying an essential traversal on it. algorithm  <dig> provides computation of floods in a flood network g =  with a set of distinct source nodes s. the process starts from the nodes in s, and is based on repetitive expansions of essential walks until they get saturated. each walk p is carrying some flood, and upon its expansion through an edge , the following take place:  the magnitude of the flood to be stored in that edge is determined  by adding the existing flood on the edge with the one carried by the p,  possible excess of the incoming flood caused by the saturation limit is stored in a matrix ,  the flood change  is then propagated along the walk, after being polarized by the sign of the edge. the time complexity of the essential traversal is highly dependent on the network topology and while in the worst case it can scale exponentially with the number of the nodes, scalability analysis shows that our method scales robustly with the increase of the graph size.

algorithm 1
threshold imposition and reverse network transformation
now that we have calculated all floods, we can impose a lower bound on the minimal magnitude that we will allow. conservatively, this value is zero , but any threshold t can be used, so that only edges with flood magnitude greater that t will exist | >t), where negative flood values are also allowed. in case that a set of output  nodes a is also supplied, this step additionally disregards edges getting disconnected from a once the threshold is imposed. transformation the minimized network to its grn counterpart is achieved by simply reversing the steps performed in phase one. the network flooding method is deterministic for any given threshold.

RESULTS
ideally, performance evaluation of the network floods theory requires complete regulatory networks where all nodes and links are present, together with link directionality and a signed weight. in addition, the quantitative expression model for each node should be known, and the phenotypic change after the network reduction should be measurable for informative comparison between the original and minimized network. since currently we are far from having any such dataset, we first adopted a similar approach to what is used for benchmarking gene network reconstruction algorithms, by constructing synthetic datasets of in silico organisms  <cit> . we used a multi-scale microbial evolution simulator to create a synthetic complete dataset with the information mentioned above to comprehensively evaluate the proposed methods. our results show that our method has very good scaling, is robust to noise and missing data, and does not require full network knowledge. we then evaluated our method with experimental data in the case of the bacterium e. coli, a well-studied model organism. the source code, sample data files and a brief tutorial on the network flooding algorithm is provided in additional file  <dig> 

synthetic datasets
we used the eve  simulator to create a synthetic dataset and applied the network flood algorithm to the resulting networks. the eve simulator has multiple levels of abstractions that range from molecular species, gene regulatory and biochemical networks, to organisms and environment. each organism has its own distinct gene regulatory and biochemical network that can be depicted as a directed weighted graph. the network comprises of a number of “triplets” : gene/mrna, protein, and modified protein. the promoter/gene/rna node captures gene regulation and transcription, while the protein and modified protein nodes capture translation and post-translational modification , respectively. in other words, the triplets capture the “central dogma” of molecular biology. organisms undergo a stochastic evolution and their gene regulatory and biochemical networks change in size and topology in order to adapt to the synthetic environments. eve has been used to test the hypothesis of anticipatory behavior in bacteria  <cit> , to investigate horizontal gene transfer dynamics  <cit> , the distribution of fitness effects during evolution  <cit> , facilitated variation in microbial communities  <cit> , and has been documented elsewhere  <cit> . here,  <dig> populations of  <dig> organisms each where evolved in low and high mutation rates  for  <dig>  generations in dynamical environments where the existence of two environmental signals and the presence of nutrients follows a either an and or a xor gate . this resulted on a dataset of  <dig>  organisms  evolved in a total of four environments with complete information on their network connectivity, kinetic parameters, expression, evolutionary trajectory, and fitness.

as an exhaustive search has a Θ  complexity for a network of m links and thus is infeasible to run, we compare our method to the heuristic available that achieves reduction close to that of exhaustive search  <cit> . table  <dig> shows the efficiency of network flooding in terms of running time  and link removal in the final networks.

interestingly, our analysis shows that application of network flooding to network minimization can highly reduce the number of links with a minimal impact to fitness . in the case of xor, the average reduction of evolved cells is 33% and 34% of links for low and high mutation environment, respectively, and the average change of fitness is - <dig> % and - <dig> %, as shown in table  <dig>  in contrast, a random deletion of the same percentage of links leads to deleterious changes in the gene network and major phenotypic change . this result is even more pronounced for the case of the and environment. decrease in fitness by random removal of links is expected, as a subset of these links is likely to be important for the organism to exhibit the desired phenotype . additionally, cells that evolved in environments with higher mutation rates, contained cells that exhibited higher stochasticity in their expression levels, and the network flooding resulted in a larger fitness loss, but still for < <dig> % of cells. similar results have been found for cells that have been evolved in an or environment .

scalability and sensitivity analysis
we evaluated the scalability of our algorithm in respect to node size, and it was found to scale well below the exponential theoretical upper bound . to assess the performance of our method when data are missing, we randomly removed sets of links from the network before minimization . this analysis is necessary as even for e. coli, the amount of missing information is high as it currently has a reconstructed network of about  <dig> genes  and many missing associations. our method was found to be robust even in cases where half of the biological network is unknown. similarly, perturbation of 10% of the weight value did not affect the network minimization result .

escherichia coli regulatory network
next, we reconstructed the regulatory network of e. coli from data available in ecocyc  <cit>  and regulondb  <cit> . compared to the networks in the synthetic dataset, the derived e. coli network is incomplete with many genes measured in different environmental conditions and of unknown function or regulation . unit regulatory weights were used in this example and gaussian noise with a standard deviation of  <dig>  was added. to evaluate our network flooding algorithm, we considered several scenarios that are relevant to e. coli growth and stress response. we used sigma factors as information source nodes, as they act as master regulators. under various scenarios and their relative concentration ratios are known for each of the conditions we consider here  <cit> . to assess the performance of our algorithm, we created a set of reporter genes for each condition that are likely to be involved in the respective processes. this set includes genes that have been differentially expressed in these conditions , and are implicated in cellular response as indicated by their go terms. in this context, our network flooding analysis has been used to reveal regulatory information flow, and perform network minimization . a functional analysis of the genes in the minimized network show consistent patterns with what is biologically known for growth in the conditions that we focus on . more specifically, under “exponential growth”  among the over-represented terms where protein complex , cellular respiration , chemotaxis , generation of precursor metabolites and energy , carbohydrate transport , membrane part , amino acid transport . under the stationary phase scenario , over-represented terms include oxidative phosphorylation , anaerobic respiration , oxidation-reduction process , nitrogen utilization , carboxylic acid transport . table  <dig> summarizes the different scenarios that we consider, along with the sizes and average floods in each case. network flooding is able to minimize the network, while still preserving statistical significance of the results . p-values can be viewed as the probability that the reporter nodes obtained in the minimized network are by random chance. figure  <dig> depicts the minimal network for different flood thresholds.

total number of genes is shown for a sub-network regulated by the selected inputs. total flood is shown for full and minimized networks with three different flood thresholds .

CONCLUSIONS
in this paper, we have presented the method of network flooding that aims to minimize regulatory networks in order to capture core regulatory patterns and information flow for specific biological conditions. we introduced a scalable, robust, graph-based algorithmic implementation that can achieve impressive network size reduction, without disrupting core regulatory pathways in synthetic datasets. when network flooding was applied in the reconstructed e. coli regulatory network, it was able to reduce its size producing meaningful  and statistical significant  results. in addition, network topology is sufficient for network flooding to operate at the lack of other data sources, and the method copes well with missing information and unknown relationships. there are numerous extensions to our work that can prove useful for biological network analysis and pathway extraction. the presented method can be used to ask questions regarding the maximum information and  control that can be achieved by any given node or set of nodes; the importance of a single node or sub-network manifested by the amount of information flow that it channels, which is a quite different metric than its connectivity or regulatory strength; and the degree of multiplexing information that can be achieved in various organisms, a possible proxy for regulatory complexity. we intend to apply the method of network flooding in reconstructed mammalian networks, both in respect to regulation of core mechanisms  <cit> , and mirna-based regulation  <cit> . although we have mainly focused so far on regulatory networks, this work can be extended in protein-protein interaction , signal transduction and metabolic networks. this entails the extension of the network flood theory in order to handle differently nodes and edges that belong to distinct network types, as the associations between nodes are usually different . taking into account the high degree of interconnection between multiple scales of biological organization, this extension may lead to a unifying framework for the simultaneous network minimization and information flow analysis across various “omics” levels, that is more than the sum of its parts.

abbreviations
grn: gene regulatory network; go: gene ontology; ppi: protein-protein interaction; lmr: low mutation rate; hmr: high mutation rate.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
corresponding author it conceived the project and supervised all its aspects; ap designed the algorithms and performed the experiments; it, ap and vm analyzed the data and wrote the manuscript. all authors read and approved the final manuscript.

supplementary material
additional file 1
the source code, samples and a brief tutorial for netfloods.

click here for file

 additional file 2
supplementary text, figures and tables.

click here for file

 acknowledgements
we would like to thank the members of the tagkopoulos lab for their feedback and useful discussions. this work was supported by the university of california opportunity fund and nsf award to it.
