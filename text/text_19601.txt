BACKGROUND
a b-cell epitope is defined as that part of antigen recognized by either a particular antibody molecule or a particular b-cell receptor of the immune system. it may be linear , i.e. a short contiguous stretch of amino acids, or conformational , consisting of sequence segments that are distantly scattered along the protein sequence and are brought together in spatial proximity when the protein is folded  <cit> . it has been estimated that more than ninety percent of b-cell epitopes are conformational  <cit> . the main purpose of b-cell epitope prediction is to provide the facilities for efficiently rational vaccine design  <cit> . furthermore, synthetic peptides mimicking epitopes, as well as anti-peptide antibodies, have many applications in the diagnosis of human diseases  <cit> . therefore b-cell epitope prediction is very important in medicine research.

though b-cell epitopes can be directly identified using many biochemical or physical experiments, such as x-ray crystallography of antibody-antigen  complexes, these experiments are usually costly, time-consuming and are not always successful  <cit> . computational methods to predict b-cell epitope are much more efficient and cost-effective. however they are mainly focused on the prediction of linear epitopes  <cit> , because only few antigens are completely annotated with respect to their conformational epitopes, which makes it difficult to develop a conformational epitope prediction method. to the best of our knowledge, discotope  <cit>  and cep  <cit>  are the only two methods for conformational epitope prediction that are based on antigen structure information. recently, researchers tested and evaluated existing epitope prediction methods on benchmark datasets, and concluded that the accuracies of these methods are not high enough to significantly reduce the experimental workload  <cit> . combining experiments with computational methods can tremendously improve the accuracy of the epitope prediction at a modest cost in biological experiments. therefore, it has attracted the attention of many researchers, especially in integrating computational methods with random peptide libraries. several researchers have reported encouraging preliminary results using phage-display peptide libraries  <cit> . mimotopes can be selected from phage-displayed random peptide libraries by affinity selection with monoclonal antibodies , so-called biopanning. the mab affinity-selected mimotopes can be selected by their capacity of binding to the ab directly against a given antigen . obviously, the mimotopes and ag are both recognized by the same ab paratope and thus mimotopes are expected to mimic natural epitopes. the purpose of the computational approach is to analyze the set of mimotopes and then to localize the mimicked region that is regarded as the epitope candidate. thereafter, biological experiments, such as site-directed mutagenesis and deletion analysis, may be implemented for further validation.

generally, a computational method has three steps to approach this goal:  the representation of the surface residues of the antigen;  the search  of the mimotopes  on the antigen surface;  the output of the epitope candidates based on screening and clustering. pizzi et al  <cit>  were the first to combine computational methods with experimental results to assign epitopes. recently, they published an improved method named meps  <cit> . in meps, the surface of antigen is represented by a collection of peptides below a certain length. the motifs that derived from the mimotopes are searched against this surface and alignment tools like blast can be directly used in the method. however, finding all given length simple paths  on a surface graph representing the exposed residues of the antigen is a np-hard  problem  <cit> . subsequently, several computational algorithms were proposed, in which some new strategies were adopted  <cit> . for example, sitelight  <cit>  divides the antigen surface into overlapping patches and then aligns each mimotope with each patch based on the maximal bipartite matching algorithm. mapitope  <cit>  converts a set of mimotopes into overlapping residue pairs, then calculates them to rank the pairs' occurrences to obtain a set of major statistically significant pairs , and finally uses them to search the 3d structure of the antigen and links the ssp into clusters on the antigen surface. lately, pepsurf  <cit> , an epitope prediction program based on a color-coding algorithm  <cit> , proposed to search all possible simple paths in the surface graph of an antigen and adopted a clustering strategy for epitope prediction. however, the running time of pepsurf depends exponentially on the length of a mimotope. therefore, on their online server, each mimotope used must be less than or equal to  <dig> amino acids in length. although epitopes and mimotopes are functionally equivalent, they seldom share a similar sequence. the mimicry is supposed to rely on similarities in physicochemical properties and similar spatial organization. moreover, the binding site of an antibody is a surface, not just a continuous sequence, so the epitope prediction problem is outside the scope of classical string alignment algorithms. searching all the surface residues on an antigen of interest for the mimotopes is problematical. therefore, although numerous phage display library based algorithms have been proposed to characterize b-cell epitopes, the precise localization of the interaction site mimicked by the mimotopes on the antigen surface is still an open challenge  <cit> .

in this research, we presented a method, pep-3d-search, based on mimotope analysis for b-cell epitope prediction. in pep-3d-search, a promising aco  algorithm was proposed to search matching paths on an antigen surface with respect to the query mimotopes or a motif. the aco algorithm adopted a novel heuristic strategy that makes it powerful in dealing with longer mimotopes or motifs. moreover, the p-value calculation algorithm and the dfs  algorithm, a graph search algorithm, were used to screen and cluster the result paths at the output stage. a group of test cases, which were all taken from published data, were applied to pep-3d-search for validation of its performance. the experimental results showed that the predictive performance of pep-3d-search was comparable to other epitope prediction algorithms, and some novel, rational results were provided.

implementation
algorithm flow
the pep-3d-search algorithm flow is shown in figure  <dig>  its input included a 3d structure of an antigen   <cit>  file) and a set of mimotopes or a motif. pep-3d-search identified all exposed residues of the given antigen and created a surface graph of it. the algorithm can be employed in two modes. the first mode is the mimotope mode, which searched for matching paths on the antigen surface with each query mimotope by the aco algorithm. all paths were scored to the corresponding mimotope according to an amino-acid substitution matrix. putative candidate epitopes were then picked out by the p-value calculation algorithm and the dfs algorithm. the second mode is the motif mode, which directly mapped the motif onto the antigen surface using the aco algorithm and took the top-scoring paths as epitope candidates.

graphical representation of the antigen surface
a b-cell epitope typically is a solvent accessible surface consisting of some 15– <dig> exposed residues derived from  <dig> to  <dig> discontinuous segments of the antigen  <cit> . whether or not a residue is exposed can be determined by its solvent accessible surface area . in this study, the exposed residues in the study antigen were determined by three steps:  the total sasa of a residue composed of n atoms was calculated by: sasa = ∑nai, where ai is the sasa of the ith atom and determined by the surface racer program  <dig>   <cit>  with a probe sphere of radius  <dig>  Å, corresponding to a water molecule;  the relative solvent accessibility  of a residue was calculated as the sasa of the residue compared to the maximum exposed surface of the same residue type in an extended ala-x-ala tripeptide, where the maximum exposed surface of the residue x in the ala-x-ala tripeptide is that calculated by ahmad al.  <cit> ;  a residue was determined as being exposed if the value of its rsa is greater than a predefined threshold . a surface graph representing the exposed residues, g = , was defined, where v is the vertex set consisting of all exposed residues, and e is the edge set, where any two vertices are connected by an edge if the euclidian distance between the two vertices is not greater than a predefined threshold. in pep-3d-search, three methods were provided to calculate neighbor residue pairs on the antigen surface. firstly the distance between the two residues was taken as the distance between the cα atoms of the two amino acids. using cα atoms may better reflect the backbone positions. secondly, the distance between the cβ atoms was used, which may better reflect the side chain position . thirdly, the minimum distances between all the heavy atoms of the two residues were used. in pep-3d-search, we used ca, cb and aha to represent the three methods respectively and took ca as the default parameter with a distance threshold  <dig> Å.

the aco algorithm
aco is a multi-agent heuristic algorithm used for combinatorial optimization. it was inspired by the capability of real ants to find the shortest path between their nest and a food source. the original aco algorithm was introduced by dorigo et al  <cit>  for solving the traveling salesman problem . since then, many researchers have extended the original algorithm, and have successfully applied their new algorithms to large scale tsp and other problems like the vehicle routing, scheduling, routing in internet-like networks, and so on  <cit> . the successful application of aco algorithms in the tsp inspired us to develop a new heuristic algorithm for solving the mimotope prediction problem. our aim was to find a simple path on a surface graph that yielded the alignment to a mimotope or a motif with a maximal score. similarly to the tsp, our problem was an ordering problem, i.e. the algorithm's aim was to put the different vertices in a certain order. however, several different aspects had to be considered:  our problem is a partial vertex permutation of a graph, in which the number of vertices in the permutation equals the residue number in the mimotope ;  the edge of any two neighbor vertices must be the same length, and scoring a resulting path is only dependent on a vertex permutation, totally irrelevant to the path length;  in a resulting path, some insertions/deletions may be permitted. therefore, some new strategies were needed for solving our problem. the details of these strategies are described below.

definition of the pheromone trail and the heuristic information
the pheromone trail and the heuristic information are two important parameters in the aco algorithm. theoretically, the pheromone trail can give the artificial ants a global guide in their decision-making, whereas the heuristic information can guide these ants to explore better paths locally. the quality of an aco application depends greatly on the definition of the meaning of the pheromone trail and the heuristic information  <cit> . according to the features of our problem, pheromone and the heuristic information for each edge on surface graph were defined as follows:

let τ be the pheromone from vertex i to vertex j at the kth searching step in a solution, which encodes the favorability of visiting a certain vertex j after vertex i, where  <dig> ≤ k ≤ l, and l is the number of vertices in a resulting path . in our approach, τ was assigned an initial value at the start point and was updated after each iteration.

let η be the heuristic information from vertex i to vertex j at the kth searching step in a solution, which encodes the preference of visiting a certain vertex j after vertex i, where  <dig> ≤ k ≤ l, and l is the number of vertices in a resulting path. the value of η was assigned according to the input mimotope  and the amino-acid substitution matrix used . for example, let the mimotope be "anynatrgtvsa", and a row of the amino-acid substitution matrix used is supposed to be: "a←a, k, i, g, v, d, s, n, q, t, f, c, e, l, m, y, h, p, r, w" which represents the scoring values of each amino-acid substitution for alanine . it can be seen that the first, the fifth and twelfth amino acid in the mimotope are all alanine . in order to make the ants tend to find maximal alignment score in each step, for k =  <dig>   <dig> and  <dig>  we will set η =  <dig>  if the vertex j is a alanine  and i is any neighbor vertex of j, and in the same way, η =  <dig> , if the vertex j is a lysine  and i is any neighbor vertex of j,..., finally, η = - <dig> , if the vertex j is a tryptophan  and i is any neighbor vertex of j. in this way, for all  <dig> ≤ k ≤  <dig> and each edge on the surface graph, η can be defined and it naturally represents the preference of an ant in vertex i for vertex j in each searching step.

in the case of a motif, let q =  be the motif, then qk  may be a set of amino acids , a gap  or a character "x" which means it can be any amino acid. when qk is a set of amino acids , η will be set to be the maximal value in all the scoring values of vertex i substitution for vertex j, where the vertex j belongs to the set s and i is any neighbor vertex of j; when qk is a gap or a character "x", η will be set to be the average value of the substitution matrix, if j and i are a pair of neighbors.

scoring amino acid similarities
algorithms for alignment of protein sequences typically measure similarity by using a substitution matrix with scores for all possible exchanges of one amino acid with another. the choice of the substitution matrix will directly influence the performance of the algorithms. however, the optimal substitution matrices used by the existing epitope prediction algorithms are generally not compatible with each other. following comparison experiments, we chose the substitution matrix m_blosum <dig> by mayrose et al  <cit>  as the default selection for the similar match mode. moreover, we defined the substitution matrix strict as the default selection for the exact match mode, in which the scoring value of substitution between the same two amino acids is  <dig>  whereas the scoring value of substitution between any two different amino-acids is  <dig>  a simple path on the surface graph is a path in which all vertices are distinct. when an ant has no no-visited edge to connect to other vertices, it is allowed to jump to a no-edge-connected vertex if the distance between the two vertices is less than the double predefined distance threshold. in this situation, a gap can be left on its path. for each unmatched residue, a penalty was added.

according to the above analysis, two methods for scoring the similarity of amino acids are proposed. for mimotope analysis, the similarity score h of amino acids qi and pi is calculated by equation :

  h={minimum+penaltyif qi or pi is a gapsotherwise 

where minimum refers to the minimum value in the substitution matrix used; the values of penalty are set from  <dig> to - <dig>  ; s is the observed substitution score in the substitution matrix used.

in the case of motif analysis, let q =  be the motif and p =  be the resulting path on the surface graph, then we calculate the similarity score h  by equation :

  h={averageif qi is x or−minimum+penaltyif qi is an amino-acid and pi is a gapsif both qi and pi are amino-acids 

where average refers to the average value in the substitution matrix used; minimum denotes the minimum value in the substitution matrix used; the values of penalty is set from  <dig> to - <dig>  ; s is the observed substitution score in the substitution matrix used.

building a solution
the pheromone trail and the heuristic information defined above will now be used by the ants to find the best solutions. suppose the number of residues in the mimotope is l. every ant starts with a virtual original point named "o", which is permitted to connect to any vertex on the graph. then an ant will randomly choose a vertex as its first vertex, and builds a solution going from a vertex to another connected vertex. the process will not stop until the ant has visited l vertices on the graph. at the kth searching step , the probability that an ant a in a vertex i will choose a vertex j as its next vertex is given by equation :

  pa={αβ∑g∈jaαβif j∈ja0otherwise 

where τ and η are the pheromone and the heuristic information between i and j at kth searching step, respectively. so the preference of an ant a in vertex i for vertex j is partly defined by the pheromone between i and j, and partly by the heuristic favorability of j after i. parameters α and β define the relative importance of the pheromone information and the heuristic information . ja is the set of vertices that connect to i and have not yet been visited by the ant a in vertex i.

the fitness function
in order to guide the algorithm towards good solutions, a fitness function was defined to assess the quality of the solutions. let q =  be a mimotope  of length l and p =  be a simple path on the surface graph obtained by an ant. then, the alignment score between q and p is defined as: s=∑i=1lh, where h denotes the amino acid similarity score between qi and pi. here, the average of the alignment score between q and p is chosen to define the fitness of the solution p:

  f=sl 

updating the pheromone trail
after all the ants have completed one iteration, the pheromones were updated. firstly, we defined the elite ant as follows: an ant was appointed as the elite ant only if the fitness value of the path obtained by the ant was greater than a threshold. only the elite ants were permitted to leave the pheromones on its own path. the pheromones were updated according to equations  and .

  τ = τ + Δτ 

  Δτ={fif ∈path p of the elite ant0otherwise 

equation  consists of two parts and k represents the kth searching step. the left part makes the pheromone on all edges decay. the speed of this decay is defined by the evaporation parameter ρ  . the right part increases the pheromones on all the edges visited by the elite ants. the amount of pheromone that the elite ant deposits on an edge is defined by the fitness value of the path created by the ant, as in equation . in this way, the increase of pheromone for an edge depends on the number of the elite ants that use this edge, and on the quality of the solutions found by those ants.

in order to enhance exploration of ants and overcome the premature convergence of the aco algorithm, an adaptive strategy was employed to determine the threshold :  initially, the threshold was set to 1;  within  <dig> iterations, if the total number of the elite ants determined in each iteration was less than  <dig>  then the new threshold was set to equal the original threshold minus  <dig> ; within  <dig> iterations, if the total number of the elite ants determined in each iteration was greater than  <dig>  then the new threshold was set to equal the original threshold plus  <dig> . in addition, according to stützle and hoos  <cit> , we defined an upper and lower limit  for the pheromone values. stützle and hoos defined τmax and τmin algebraically based on the probability of constructing the best solution found when all the pheromone values have converged to either τmax or τmin. in our approach, the aim of the aco algorithm was mainly to provide a set of good quality solutions, rather than a best solution. therefore we defined τmax as being equal to the maximum value minus the minimum value in the amino-acid substitution matrix used, and τmin as zero.

output of epitope candidates
while running the aco algorithm, all paths obtained by the elite ants were stored in a local database. how were putative epitope candidates produced from this set of paths? according to the different kinds of input sequences, i.e. a set of mimotopes or a motif, two different strategies were adopted. for the set of mimotopes, a clustering strategy was employed ; for the motif, the n highest scoring paths were chosen directly as the epitope candidates.

p-value calculation for a path
typically, a set of input mimotopes contains a number of amino-acid sequences with different lengths. in order to rationally assess the paths obtained with different mimotopes, we calculated the probability of randomly obtaining a path with a specific score, i.e. p-value of the path. according to the work by mayrose et al  <cit> , the distribution of the scores of random paths can be approximated using an extreme value distribution, whose parameters are fitted from the empirical distribution using the method of moments. to obtain rational empirical distribution of alignment scores, we generated a set of m  random simple paths on the surface graph for every mimotope, and each random simple path was then aligned to the mimotope.

creating a weighted graph of the result paths
we then selected those paths whose p-values were less than or equal to 10- <dig> as the result paths and created a weighted graph of the result paths g = , where v is the vertex set consisting of all the result paths, and e is the edge set, where any two vertices are connected by an edge if they share at least one residue. in addition, the weight of each vertex in g was defined as the p-value of the path.

clustering the result paths based on dfs algorithm
the weighted graph defined above was generally unconnected. each connection component in the graph, which may consist of several connected paths, can be regarded as a potential epitope candidate. here, the dfs algorithm  <cit>  was employed to compute all the connection components of the weighted graph. according to mayrose et al  <cit> , the surface accessible areas of 95% of all available epitopes in the pdb are not greater than  <dig> Å <dig>  moreover, a native epitope is generally less than  <dig> residues. therefore, if the surface accessible area of a connection component was greater than  <dig> Å <dig> or the number of residues in the connection component was greater than  <dig>  this connection component was reduced in size. by iteratively removing a path, the size was cut until the remaining part met the conditions. in each such iteration, the algorithm chose a path for removal such that the remaining connection components kept the maximum score. the score of a connection component was defined as the sum of -log  of the paths within it. as a consequence, n maximum score connection components were output as the n epitope candidates .

RESULTS
epitope prediction based on mimotope analysis
in order to assess the predictive performance of pep-3d-search, we applied it to ten test cases , which were all taken from other similar published data. these test cases fulfilled the following requirements:  a set of mimotopes were derived by screening an antibody in a biopanning experiment;  a 3d structure of the antibody-antigen complex was available;  the native epitope of each test case had been crystallographically defined. due to the similar policy of fully scanning the mimotopes  derived from the mimotopes in mapitope  <cit> ) versus the 3d structure of the antigen, we mainly compared the results from pep-3d-search with those from pepsurf  <cit>  and mapitope.

*number of sequences × sequence length.

epitope prediction using antibody-antigen test cases
the first test group  contained eight test cases from mapitope, pepsurf and mimox  <cit> . the first test case  contains  <dig> mimotopes of  <dig> residues in length. lang et al  <cit>  further analyzed the detailed interactions between the mab a <dig> and the interferon gamma receptor  by selecting  <dig> fragments of the ifngr mutants with high affinity for the mab a <dig> by phage display. these fragments can thus be regarded as mimotopes of the ifngr and the crystal structure of the mab a6-ifngr complex has been resolved . in the second test case , mimotopes were obtained by a similar experiment to the first case, but here the fab fragment of a humanized neutralizing antibody  was mutated and selected for binding to the vascular endothelial growth factor  by phage display  <cit> . the structure of the rhumab-vegf complex has been deposited in the pdb . in test cases three to eight, the six sets of mimotopes were obtained by screening phage display libraries with the 17b  <cit> , 13b <dig>  <cit> , herceptin  <cit> , bo2c <dig>  <cit> , cetuximab fab  <cit>  and 82d6a <dig> igg  <cit>  antibodies respectively , and their corresponding ab-ag complex structures have been resolved . in addition, the native epitope for each test case  is present in the ced database  <cit> . we analyzed the mimotopes in the test cases with our pep-3d-search, pepsurf and mapitope, respectively. the results predicted by the three algorithms and evaluation in terms of the matthews correlation coefficient   <cit> , sensitivity and precision are shown in table  <dig>  the results in table  <dig> show that our pep-3d-search successfully predicted all the mimotopes in all eight test cases. especially, for the test cases 1bj <dig>  1n8z and 1yy <dig>  the mcc, sensitivity and precision values of pep-3d-search were considerably superior to those of pepsurf and mapitope. for the test case 1iqd, pepsurf yielded the best performance ; though mapitope achieved the highest precision , it gave the lowest mcc  and sensitivity ; pep-3d-search yielded inferior prediction  with default parameters, whereas it obtained better prediction by using distance parameter cb with threshold  <dig>  . furthermore, for the test cases 1jrh, 1g9m, 1e6j and 2adf, pep-3d-search and pepsurf gave better predictions, while mapitope failed in the test cases 1e6j and 2adf.

tp: number of true positives; pe: number of residues in the predicted epitope; tn: number of true negatives; fp: number of false positives; fn: number of false negatives; matthews correlation coefficient =−; sensitivity =tptp+fn; precision =tptp+fp.

*for the cases, the best prediction was found in the second-ranked candidate.

tp: number of true positives; pe: number of residues in the predicted epitope; tn: number of true negatives; fp: number of false positives; fn: number of false negatives; matthews correlation coefficient =−; sensitivity =tptp+fn; precision =tptp+fp.

*for the cases, the best prediction was found in the second-ranked candidate.

**for the cases, the best prediction was found in the third-ranked candidate.

using pep-3d-search for the prediction of protein-protein interacting sites
in order to compare pep-3d-search with previously published algorithms, we applied it to detect the interface residues of the interacting proteins for the two test cases, 1avz and 1hx <dig> , which were taken from pepsurf. rickles et al  <cit>  used the fyn-sh <dig> domain to select a semi-combinatorial random peptide library and obtained  <dig> affinity-selected peptides. the co-crystal of fyn-sh <dig> domain with its interacting protein nef and fyn-sh <dig> domain is now available . the second test case was taken from the work by takenaka et al.  <cit> . they screened a random phage library against the  <dig> kda heat shock cognate  protein and obtained a set of peptides that bind hsc <dig>  the structure of hsc <dig> with its interacting protein bag chaperone regulator has been deposited in the pdb . for each of the above test cases, the prediction was compared to the 'true' protein-protein interacting site that was inferred using the 'contact map analysis' server  <cit> .

from table  <dig>  it can be seen that both pep-3d-search and pepsurf obtained better results than mapitope. especially, for the test case 1hx <dig>  the results showed a complementarity between pep-3d-search and pepsurf: the  <dig> contacting residues of protein hsc <dig> and bag chaperone regulator inferred by contact map analysis server were r <dig> ka  ie  mk  le  idtlil  r <dig> rk  vk  q <dig> l <dig> d <dig> e255; the  <dig> contacting residues predicted by pep-3d-search were gns  e <dig> v <dig> k <dig> h <dig> k <dig> k <dig> ad  l <dig> k <dig> d <dig> r <dig> r <dig> ka  i <dig> m <dig> l <dig> fkd  r <dig> lk  rk  g <dig> vk  k <dig> q <dig> af  l <dig> ae ; the  <dig> contacting residues suggested by pepsurf were k <dig> khl  ks  e <dig> gi  d <dig> r <dig> r <dig> ka  i <dig> mk  i <dig> le  e <dig> dt  l <dig> e <dig>  from the above results, it is evident that in the predicted results of pep-3d-search, six epitope residues r <dig>  r <dig> k <dig>  v <dig>  k <dig> andq <dig> were missed by pepsurf, while in the predicted results of pepsurf, five epitope residues k <dig> e <dig>  d <dig> t <dig> and e <dig> were missed by pep-3d-search.

the overall performance of each method was measured by average mcc, sensitivity and precision values. compared with pepsurf and mapitope, pep-3d-search achieved the best average mcc, precision values and second-best average sensitivity value . in addition, pep-3d-search provides three parameters to calculate neighbor residue pairs on antigen surface, which are cb, ca and aha. the experimental results that examined pep-3d-search's performance with different parameters are listed in table  <dig> to  <dig>  the overall performance analyses in terms of average mcc, sensitivity and precision values are shown in figure  <dig>  generally, pep-3d-search obtained better results by using the parameter ca  than by the other parameters. subsequently the parameter ca with distance threshold  <dig> was set as the default.

tp: number of true positives; pe: number of residues in the predicted epitope; tn: number of true negatives; fp: number of false positives; fn: number of false negatives; matthews correlation coefficient =−; sensitivity =tptp+fn; precision =tptp+fp.

*for the cases, the best prediction was found in the second-ranked candidate.

tp: number of true positives; pe: number of residues in the predicted epitope; tn: number of true negatives; fp: number of false positives; fn: number of false negatives; matthews correlation coefficient =−; sensitivity =tptp+fn; precision =tptp+fp.

*for the cases, the best prediction was found in the second-ranked candidate.

epitope prediction based on motif mapping
pep-3d-search also provides the selection of predicting epitope based on motif mapping. the motif sequence can be derived from the set of mimotopes by using multiple sequence alignment tools such as clustalw  <cit>  or directly using the mimox web service, and it is thus supposed to contain important residues for interaction of the ab and the ag. after mapping the motif sequence on to the antigen surface, pep-3d-search obtained a set of matched paths and those top-scoring paths were selected as the epitope candidates. in order to assess the performance of pep-3d-search, six test cases were applied and the results are listed in table  <dig> and supplementary table s <dig> to s <dig> . here, we describe one experiment of the test case 1e6j  in detail. the test case 1e6j is taken from mapitope and mimox. enshell-seijffers et al  <cit>  used the mab 13b <dig>  to select a phage displayed random peptide library and obtained a set of  <dig> mimotopes. the structure of p <dig> with 13b <dig> has been resolved , and the 13b <dig> epitope, which is composed of algpaatee  ta , has been recorded in the ced database as ce <dig>  using mapitope, enshell-seijffers et al suggested that 13b <dig> epitope residues might consist of e <dig> d <dig> a <dig> gpaa  ee  a <dig>  in which the epitope residues are marked in bold. it should be noted that when all parameters were set to default, mapitope predicted candidate residues a <dig> n <dig> p <dig> d <dig> c <dig> a <dig> . furthermore, huang j et al  <cit>  derived a motif sequence,  v  gpl  tx-x , from the  <dig> mimotopes using mimox. mimox has no ability to directly analyze the motif sequence of this type, therefore they derived three fragments, gpl, et and ee, from the motif by manual parsing. using the three fragments as the motif sequences respectively, they predicted the 13b <dig> epitope using mimox. for the fragment gpl, the top two candidates given by mimox were g <dig> p <dig> l <dig> and g <dig> p <dig> l52; for the fragments et, the top three candidates were e <dig> t <dig>  e <dig> t <dig> and e <dig> t210; for the fragments ee, the top three candidates were e <dig> e <dig>  e <dig> e <dig> and e <dig> e <dig>  using pep-3d-search we directly mapped the motif sequence, v gpl tx-x , on to the antigen surface of p <dig> to predict the 13b <dig> epitope. under the similar match mode  and parameter aha , the top ten predicted candidates by pep-3d-search are listed in table  <dig>  from table  <dig>  we can see that the ten candidates all successfully localized in the epitope region. especially, the eighth-ranked candidate gave the best results: d <dig> i <dig> l <dig> g <dig> p <dig> a <dig> e <dig> t <dig> m <dig> a <dig> t <dig> e <dig>  taking the top ten candidates together, we obtained a total of  <dig> residues suggested by pep-3d-search, which overlap  <dig> of the  <dig> epitope residues in the 13b <dig>  the other five experiments for assessing the performance of pep-3d-search are similar to the procedure mentioned above, and their results are listed in supplementary tables s <dig> to s <dig> . these experiments show that pep-3d-search is effective and efficient in predicting epitopes in motif mode.

the searching capability of pep-3d-search
in general, the searching algorithm has a great impact on the effectiveness and efficiency of an epitope prediction program. therefore it is the most important part of the whole design process. in pep-3d-search, the aco algorithm, a kind of heuristic algorithm, is employed for searching mimotopes or motifs on an antigen surface. in order to evaluate the capability of the aco algorithm for searching the target paths with various lengths on the antigen surface, we took gp <dig>  as the target antigen and randomly selected the paths with lengths from  <dig> to  <dig>  residues on the antigen surface as the search goals. as shown in figure  <dig>  a path on the gp <dig> surface with  <dig> residues is localized firstly, e <dig> s <dig> k <dig> q <dig> k <dig> i <dig> n <dig> g <dig> n <dig> k <dig> d <dig> m <dig> k <dig> v <dig> l <dig> v <dig> a <dig> a <dig> y <dig> c <dig> q <dig> v <dig> l <dig> n <dig> t <dig>  in which the euclidian distance of any two neighbor residues is less than or equal to  <dig>  Å. from this path,  <dig> sub-paths with lengths from  <dig> to  <dig>  residues were randomly selected as the test cases . here, we describe one experiment in detail to explain the search process of the target path with  <dig> residues on the gp <dig> surface. the target path is e <dig> s <dig> k <dig> q <dig> k <dig> i <dig> n <dig> g <dig> n <dig> k <dig> d <dig> m <dig> k <dig> v <dig> l <dig> v <dig> a <dig> a <dig> y <dig> c <dig> q <dig> . we used the target path itself and mutations of it as input sequence for pep-3d-search to localize the target path on the gp <dig> surface. some residues on the original sequence were randomly changed . from table  <dig>  it can be seen that pep-3d-search quickly localized the target path with  <dig> iteration numbers. when the input sequence was the target path itself , the path localized by pep-3d-search with the iteration number of  <dig> was e <dig> s <dig> k <dig> q <dig> k <dig> i <dig> n <dig> g <dig> n <dig> k <dig> d <dig> v <dig> k <dig> v <dig> l <dig> v <dig> a <dig> a <dig> y <dig> c <dig> q <dig>  which overlaps  <dig> of the  <dig> residues in the target path; when the iteration number was set to  <dig>  pep-3d-search precisely localized the target path. when the iteration number was  <dig>  the path localized by pep-3d-search was e <dig> s <dig> k <dig> q <dig> k <dig> i <dig> n <dig> g <dig> n <dig> k <dig> d <dig> m <dig> k <dig> v <dig> l <dig> v <dig> a <dig> a <dig> y <dig> c <dig> q <dig>  though the twentieth residue  on the localized path is not identical with the corresponding one  on the target path in that position, they are all cysteine. when a mutated sequence is used as input sequence, pep-3d-search still localized the region of the target path. for example, using eskdringncdmkvhvaayaq  as input, pep-3d-search gave the top-ranked output: e <dig> t <dig> k <dig> n <dig> k <dig> f <dig> n <dig> g <dig> n <dig> ___ d <dig> m <dig> k <dig> v <dig> ___ i <dig> g <dig> a <dig> f <dig> a <dig> q <dig> with  <dig> iteration numbers. as shown in table  <dig>  although pep-3d-search got the worst result in the test case, it overlaps  <dig> of  <dig> residues in the target path.

in the test case, the target path of  <dig> residues in length on the surface of the protein 1g9m  is e <dig> s <dig> k <dig> q <dig> k <dig> i <dig> n <dig> g <dig> n <dig> k <dig> d <dig> m <dig> k <dig> v <dig> l <dig> v <dig> a <dig> a <dig> y <dig> c <dig> q <dig> 

tp: number of true positives; pe: number of residues in the predicted epitope; it: iteration number of pep-3d-search.

the experiments of other eight test cases for assessing pep-3d-search's searching capability are all based on similar procedures to the one described above. those experimental results are listed in supplementary table s <dig> . the experiments demonstrate the excellent search capability of pep-3d-search, especially when the length of the query sequence becomes longer; the iteration numbers of pep-3d-search for localizing the target paths on the protein surface did not change significantly. thus, pep-3d-search can be used for quickly localizing the epitope regions mimicked by longer mimotopes , and the proposed aco algorithm has further potential in other applications involving sequence-structure alignment.

discussion
in this study we developed a method, pep-3d-search, for epitope prediction based on mimotope and motif analysis. an aco algorithm was proposed for aligning a 1d mimotope sequence  to the 3d structure of an antigen, and p-value calculation based screening strategy and dfs algorithm based clustering strategy were employed in localizing epitope candidate regions. compared with competing methods, our pep-3d-search adopts a simple and natural strategy to deal with matches, gaps and deletions in aligning a sequence to an antigen surface, which makes it more efficient and effective, not only for sequence search, but also for motif discovery.

we conducted different sets of experiments to assess our method's performance. the results show that our method is comparable to other similar methods. in some test cases, our method is superior to the others or can provide complementary information to them. on the other hand, in order to examine the searching capability of our method, a set of test cases with different-length sequences was constructed. the experiment showed that our method has excellent capability in searching sequences on a structure, especially when the length of the query sequence becomes longer ; the iteration numbers of pep-3d-search for precisely localizing sequence did not change significantly. thus the method has further potential for localizing the epitope regions mimicked by longer mimotopes. for example, using an mrna display technique, one can obtain affinity-selected peptides of more than  <dig> residues against an antibody  <cit> . moreover, the method also has potential for other applications, such as querying pathways in protein-protein interaction networks  <cit> . the pep-3d-search algorithm depends on several parameters that may influence its prediction accuracy, such as iteration number, gap penalty and distance threshold defining two neighbor residues. however, because of the limited availability benchmark datasets, we only examined a limited set of values for each parameter and were constrained in properly learning these parameters. in our experiments, varying these parameters within a reasonable range did not significantly influence the prediction results .

the pep-3d-search algorithm is basically divided into three steps: generating random paths on the surface graph of an antigen for p-value calculation , searching the optimal paths for each mimotope , and clustering these paths into several epitope candidates. the running time of the algorithm mainly depends on the number of graph edges, the number of mimotopes, the length of each mimotope , and the number of generated random paths for p-value calculation. for a mimotope with  <dig> or  <dig> amino acids, generating  <dig> random paths to obtain the empirical distribution of alignment scores for p-value calculation may take about  <dig> minutes ; searching the optimal paths may take few minutes ; clustering paths can complete in a few seconds. so the main computational burden of the algorithm comes from the p-value calculation.

theoretically, the estimation of the statistical parameters for an alignment score distribution function requires a large number of random paths on the surface graph of the antigen for aligning to the mimotopes. actually, the number of the paths generated at random is determined according to a given time limit, so that the algorithm can make a trade-off between computational time consumed and the accuracy of the final results. we set the number to  <dig> in default. in general, when a set of mimotopes is to be analyzed, the running time of the algorithm will linearly increase with the number of mimotopes. however, because a collection of paths generated at random for p-value calculation can be used by all those mimotopes in the same length in the set of the mimotopes, the actual running time of the algorithm is much shorter in practice. 

we plan to improve our method by further research in at least four areas: 1) by improving the method to identify surface-exposed residues in an antigen; 2) by attempting more effective strategies for searching a path and dealing with matches, gaps and deletions in aligning a sequence to antigen surface in the aco algorithm; 3) by choosing a better amino-acid substitution matrix in scoring procedure for a specialized application; and 4) by studying more efficient methods for p-value calculation.

CONCLUSIONS
this research makes two valuable contributions to the field of epitope prediction. firstly, a promising aco algorithm was proposed to align a sequence or a motif to an antigen surface. secondly, an application program, pep-3d-search, was developed for epitope prediction based on mimotope or motif analysis. as a stand-alone program in this area, pep-3d-search is publicly accessible . the program was tested and evaluated by several datasets . the results indicate that pep-3d-search is comparable to other similar tools.

availability and requirements
project name: pep-3d-search

project's homepage: 

operating system: windows xp professional with service pack  <dig> with microsoft .net framework  <dig>  installed

programming language: visual basic.net

license: gnu gpl

any restrictions to use by non-academics: license needed for commercial use

authors' contributions
yxh designed the algorithm, performed the experiments and the analysis, and drafted the manuscript. ylb conceived of this study and discussed and suggested for algorithm improvement. syg and yw collected the test data and carried out part of the experimental work and participated in writing the manuscript. cgz designed research and contributed ideas. yxl supervised and directed the development process of the whole project and revised the manuscript critically. all authors have read and approved the final manuscript.

supplementary material
additional file 1
supplementary experiment-results. the file contains supplementary tables s <dig> to s <dig> 

click here for file

 additional file 2
source code, test datasets, pep-3d-search toolkit and operation manual. the file is a zip archive containing the visual basic source code for pep-3d-search, licensed under the gnu general public license. it also contains the test datasets, the pep-3d-search toolkit and the operation manual  of pep-3d-search. updated versions will be available at .

click here for file

 additional file 3
an example of predicting epitopes based on mimotope analysis. the file is a zip archive containing all materials to predict the epitopes in the test case 1n8z using pep-3d-search based on mimotope analysis.

click here for file

 additional file 4
an example of predicting epitopes based on motif analysis. the file is a zip archive containing all materials to predict the epitopes in the test case 1e6j using pep-3d-search based on motif analysis.

click here for file

 additional file 5
an example of evaluating the searching capability of pep-3d-search. the file is a zip archive containing all materials to evaluate the pep-3d-search's searching capability by localizing the target path of  <dig> residues in length on the surface of the protein 1g9m  with original and mutated sequences of the target path as inputs.

click here for file

 acknowledgements
this work was supported by the national natural science foundation of china , the distinguished young scholars fund of jilin province , the key grant of jilin province science & technology committee , the key grant of changchun city science & technology committee , the program for new century excellent talents in university , the china postdoctoral science foundation , the cultivation fund of the scientific and technical innovation project of northeast normal university .
