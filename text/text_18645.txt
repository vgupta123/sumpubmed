BACKGROUND
many important agricultural traits are quantitatively inherited. their phenotypes result from expression of multiple genes influenced by the environment. one approach to detect these genes is the candidate gene approach  <cit> . the definition of genes as 'candidate genes' can be based on the knowledge of their biochemical or physiological properties, homology to genes characterized in other species, or due to their close proximity on linkage maps to loci controlling the trait of interest. during the past decade, allelic sequence variation has been characterized for an increasing number of genes, and related to phenotypic variation of agronomic traits  <cit> . for example, thornsberry  <cit>  analysed the allelic sequences of dwarf <dig>  in  <dig> maize inbred lines and identified polymorphism associated with flowering time. remington  <cit>  studied the allelic sequences of  <dig> genes considered as candidate genes for variation in plant height and/or flowering time in a set of  <dig> maize lines, representing a broad cross section of the maize breeding germplasm. the ability to trace respective alleles affecting flowering by marker-assisted backcrossing might be useful to adapt germplasm to other latitudes.

allelic variation within candidate genes is due to insertions/deletions  or single nucleotide polymorphisms . of these, snps are the most abundant form of genetic variation, and different techniques for their efficient detection have been developed. due to their shared history of mutation and recombination the polymorphisms found in candidate gene alleles will not segregate independently but show a correlation, called linkage disequilibrium   <cit> . the information content for allele differentiation of physically adjacent polymorphisms can, therefore, be redundant. thus, the existing ld across a dna sequence for a given germplasm of interest influences the density of marker coverage needed for allele differentiation. ld studies in maize revealed that the distance, over which ld decays, varies considerably depending on the population under examination. the narrower the germplasm base of lines examined, the higher the level of ld  <cit> . genome wide analyses of ld in humans lead to the definition of haplotype blocks, i.e., chromosome regions of strong ld, versus recombination hot spots  <cit> . haplotype blocks reflect the properties and history of that population, e.g., a small population size, a bottleneck leading to genetic drift, or population admixture. similarities in ld patterns in different populations can be used to make assumptions about common ancestry. for example, similarities in ld can be due to the same ancient event, which occurred before separation of common ancestors of the populations  <cit> . within a haplotype block only a few common haplotypes of limited diversity occur, which can be characterized by a small number of snps, also called haplotype-tagging snps .

in contrast to human genetics, plant breeders have the opportunity to generate large populations and expose them to various selection pressures. due to the limited size of candidate genes in the range of few kb, and a very low chance of intragenic recombination events, the initial haplotype alleles for the individual candidate genes can be considered as fixed over few cycles of selection. in this situation, it is sufficient to select a minimum set of snps for the differentiation of those alleles, present in founder genotypes or in early generations, and to trace respective haplotypes or haplotype combinations  in the offspring  <cit> .

various algorithms have been developed to find the minimum number of htsnps based on haplotype block structure  <cit> . for the processing of allele sequence data and selection of minimum sets of snps, software packages are available for the different steps in this process, namely  allele sequence alignment  <cit> ,  identification of polymorphisms  <cit> , and  selection of informative polymorphisms for allele differentiation  <cit> . however, the interoperability of these different software packages is insufficient, resulting in a cumbersome and error-prone multi-step process in assembling and analysing the data.

our objective, therefore, was to develop software, which combines all steps required for selection of a minimal set of polymorphisms for genotype differentiation in offspring populations within a single program , starting from sequence alignments. several examples of candidate gene alleles have been employed to compare the performance of polymin with best  <cit> , for the central step of finding optimized snp combinations for haplotype differentiation. other programs such as snptagger  <cit>  can only be used for some applications, as they do not tolerate more than two different bases per snp site. none of the existing programs provides the possibility of differentiation of genotypes in a heterogeneous population including heterozygous individuals, derived from a set of known haplotypes, an important aspect in plant breeding programs. this step is included in polymin.

implementation
polymin has been developed using the c++ programming language and compiled with the c++ builder  <dig> compiler  for the microsoft windows environment and is available from the website of the project . it has been tested on the windows xp and vista operating systems. a version compiled with the qt sdk cross-platform development environment  is under development, which will enable polymin to run under windows, linux and mac desktop operating systems.

the input file is the multiple sequence alignment in clustal format  <cit>  of the candidate gene sequences from a set of genotypes as generated by, e.g., .

in a first step, the program identifies the different alleles  present in a set of genotypes and their frequency, based on sequence polymorphisms . polymin considers all polymorphisms found after the first base in common over all sequences. further calculations are based on a haplotype matrix, where each haplotype occurs only once.

the algorithm of polymin starts with the whole set of polymorphisms and reduces them, while searching for the minimum number of polymorphisms. optionally, indels, or singletons can be excluded. polymin then searches for polymorphisms that assign haplotypes to the same subgroups. in the following analysis polymin chooses always the first polymorphism of a certain pattern, in order to represent all redundant polymorphisms of the same pattern. subsequently, a minimum set of polymorphisms, necessary to differentiate all – or as many as possible – haplotypes is established.

polymin performs polymorphism reductions either in one  or two  steps as described below. initially, the polymorphisms for haplotype differentiation are selected in a cyclic procedure, based on their polymorphic information content   <cit> :

  

here, fi is the frequency of the ith allele . for each cycle the pic value over all haplotype groups is calculated for all polymorphisms. the polymorphism with the highest pic score is then selected for the next round of haplotype differentiation, generating new haplotype subgroups. the process stops when all haplotypes are differentiated, or when no polymorphisms are left in the subgroups . a reduced set of polymorphisms for haplotype differentiation is thus identified .

this reduced set of polymorphisms can eventually be further minimized in a second step . by excluding single polymorphisms identified in phase i, their contribution on the differentiation of haplotypes is analyzed: if the number of different haplotypes remains identical, the respective polymorphism does not contribute to differentiation in addition to the other selected markers. these polymorphisms are then labelled as non-informative .

finally, polymin identifies the polymorphisms necessary for differentiation of genotypes in the offspring, based on the whole data set or on a user-based selection of parental genotypes or alleles. the subsequent differentiation of the genotypes can be conducted either with the reduced set of polymorphisms or with the whole set of non-redundant polymorphisms. the expected marker haplotypes for all possible genotypes in the offspring, as well as those genotypes that cannot be distinguished in the data set, are displayed and can be used as basis for interpretation of snp results in the offspring.

RESULTS
to date there are no comparable programs which include all described steps from the detection of minimum number of snps to genotype differentiation in the offspring. only single steps can be compared to other programs . starting with a haplotype matrix, both best  <cit>  and snptagger  <cit>  select the minimum sets of snps for haplotype differentiation. both software packages perform a strict reduction of polymorphisms. of the  <dig> polymorphic base positions analyzed in the examples of table  <dig>  one third were snps  and two thirds were insertions/deletions. 20% of the insertions/deletions were combined with a snp . a main drawback of snptagger is that it only allows two alleles per polymorphism, whereas best tolerates tri allelic snps as well as insertions and deletions.

a <dig> polymin phase i,

b <dig> polymin phase i+ii ,

c <dig> best,

d4polymin genotype differentiation optimized ,

*the genotype differentiation for the minimum polymorphism set generated by best was performed with polymin.

example data sets where extracted from ncbi  or from xing et al.  <cit> .

the algorithms of best and polymin exclude first all redundant polymorphisms , but differ in subsequent steps: best begins with single polymorphisms and adds further polymorphisms step by step according to its selection criteria. avi-itzhak thoroughly described an algorithm for minimum snp detection  <cit> , similar to the one used for polymin, whereby the snps are reduced in two phases. avi-itzak uses the shannon entropy  <cit>  as a measure of haplotype diversity for his first phase of polymorphism reduction  <cit> , whereas in polymin the pic value was employed as selection criterion. an example for the second step of polymorphism reduction is presented in table 2: the exclusion of polymorphisms  <dig> and  <dig>  does not result in a further reduction of the number of haplotypes . therefore, in this sample these polymorphisms can be omitted. polymin does not exclude these polymorphisms, when only phase i is applied. the minimum number of polymorphisms required for haplotype differentiation is, therefore, overestimated by phase i in polymin. however, these polymorphisms can be excluded in phase ii and marked as non-informative. taylor and provart  <cit>  apply a slightly different approach to determine the optimal sets of caps marker for genotyping compared to polymin, however the selection criteria, ) is similar to the pic value: ) = 1-. a direct comparison of the two programs was not possible, as capsid selectively analyses polymorphisms that alter restriction enzyme recognition sites. for the subsequent genotype differentiation the suboptimal selection of polymorphisms by polymin's phase i turned out to be superior to those generated by polymin phase i + ii, as more of the possible genotypes can be distinguished in the offspring. for an optimized differentiation of genotypes the initial set of non-redundant polymorphisms has to be used. in table  <dig>  various contrasting data sets were analysed, applying polymin-phase i  or polymin-phase i + ii , and best  respectively. the maximal number of genotypes that can be differentiated in the data set is calculated on the basis of the initial non-redundant set of polymorphisms . depending on the number of haplotypes present in a population, the number of possible genotypes is:

  

where g is the number of genotypes, and h the number of haplotypes. compared to polymin phase i and phase i+ii, best returns minimum polymorphism sets similar to phase i or stricter and never found fewer polymorphisms than polymin phase i+ii for haplotype discrimination.

lines in bold: polymorphisms that will be excluded from the set, when using polymin phase ii, as they do not contribute to the differentiation of the  <dig> haplotypes.

no – polymorphism number,

pm – name of the polymorphism,

bp – position of the polymorphism within the sequence,

rp – number of redundant polymorphisms found in the whole sequence.

in order to compare the power of minimum polymorphism sets generated by best, the genotype differentiation was calculated with polymin based on the best results. the number of genotypes identified by the minimal polymorphism sets generated by polymin phase i and best are different . as long as the number of polymorphisms per minimum polymorphism set is greater for phase i as in best, polymin phase i can identify more genotypes. in the case of ccoaomt- <dig> and lac <dig>  the polymorphism sets generated by best distinguish more genotypes with the same number of polymorphisms than the one generated by polymin phase i, indicating that the algorithm used by best to minimize polymorphisms is superior to the procedure used in polymin in these two cases. the genotype differentiation with the initial set of non-redundant polymorphisms shows, that even when applying all polymorphisms, it will not be possible to differentiate all genotypes .

snptagger developed for human genetics can only analyse two alleles per polymorphism. the program is, therefore, only of minor use in plant genetics. the main drawback of programs developed for human genetics is however the missing analysis of genotype differentiation, a fundamental aspect in plant breeding projects.

discussion
the polymin software was developed to differentiate candidate gene alleles in selected or natural populations and to discriminate genotypes in offspring with an optimal set of polymorphisms. the program is therefore of particular interest for plant geneticists and breeders. polymin was designed to handle both types of polymorphisms – snps and insertion/deletions – and has no restrictions as to the number of alleles at one polymorphic site. polymorphisms with more than two alleles occur rather frequently in plants, especially in highly heterozygous individuals of out-breeding crops. on average  <dig> % of the polymorphisms in the example alignments of table  <dig> had more than two alleles. most programs with similar objectives were developed for human genetics, where large fragments of chromosomes or whole genomes are analysed. this requires a preliminary subdivision of the fragments into haplotype blocks, i.e., regions with strong ld. within those haplotype blocks, a wealth of polymorphisms are available for differentiation, making it necessary to develop algorithms for efficiently reducing the number of polymorphisms in order to obtain a maximum of information for given cost input. respective results can be used to describe, e.g., the ancestry of different sub-populations with different susceptibilities to diseases or other traits of interest  <cit> . the main focuses in human genetics are retrospective analyses.

comparable marker analyses in plant breeding focus mostly on future generations by shaping new populations in the process of marker-assisted selection. typically, the number of meioses accumulated in elite germplasm is rather low, so that breeders typically work at the level of chromosome blocks with extended ld rather than single independent segregating genes.

CONCLUSIONS
polymin provides plant breeders with the design of optimal marker assays to discriminate possible genotypes derived from these extended haplotype blocks and their expected frequency in the offspring, based on the parental genotypes selected. polymorphisms selected by polymin facilitate comparison of actual genotype frequencies in populations with and without any selection pressure or under divergent selection regimes. it is planned to integrate the analysis of diplotyping results into polymin to highlight polymorphisms, which diverge from expectations.

availability and requirements
project name: polymin

project home page: 

operating system: windows xp, windows vista.

programming language: c++

other requirements: none

licence: free non-commercial research-use licence.

any restrictions to use by non-academics: none.

authors' contributions
ukf developed the algorithm for the analysis and planned and supervised the manuscript. bw conceived the software, carried out its design and participated in writing the draft of the manuscript. tl participated in the design of the study and helped to draft the manuscript. all authors have read and approved the final manuscript.
