BACKGROUND
short-sequence dna repeats  are a type of satellite dna in which a dna pattern occurs two or more times. these patterns can be homogeneous or heterogeneous, can occur inter- and intragenically, and can be found in both eukaryotes and prokaryotes. while many ssr loci are in noncoding regions of dna, we focus on those that occur intergenically and thus encode protein repeats as well. these longer intergenic ssrs are of interest as they can be used in genotyping, phylogenetic characterization and analysis of pathogenicity  <cit> . these loci can be identified for many species in genes encoding diverse functions: for example, ssrs are found in haemophilus influenzae yada, which encodes an adhesin  <cit> , staphylococcus aureus coagulase, coa, which is involved in clotting  <cit> , and streptococcus pneumoniae pspa, a surface protein implicated in pathogenic mechanisms  <cit> .

one species where ssrs have proven useful for genotyping is anaplasma marginale, a bacterial tick-borne pathogen of cattle. several factors make the development of a vaccine for this pathogen challenging, including the need for a deeper understanding of strain variation and distribution. a. marginale major surface protein 1a , a protein with a set of ssrs near the amino terminus, has been extensively used for genotyping strains and cataloguing strain distribution. the msp1α repeats are 84–87 bp  in length and vary in sequence and number  <cit> . to date, over  <dig> repeat sequences have been identified in the published literature. cataloguing and tracking these repeats is difficult as diverse groups of researchers are involved in the identification of the repeats. additionally, the task is error-prone when done manually. for example, there exist cases when the same name has been given to repeats with different sequences , and conversely, the same repeat has been assigned more than one name .

a reliable software tool capable of tracking, managing, analysing and cataloguing ssrs and genotypes can alleviate the aforementioned problems, fuel research and collaboration, and accelerate the path to the discovery of a vaccine. while there exist a variety of tools related to repetitive dna in the literature, some with a subset of these functionalities, we found that few have sufficient data management capabilities to be used effectively in genotyping and none provide the analysis or visualization functionalities needed to gain insight into geographic genotype distributions. the tools tandem repeats finder  <cit> , scan_for_matches  <cit>  and the alggen software suite  <cit>  can identify user-specified repetitive elements in dna or protein sequences. however, these tools do not store the search sequences of interest and so they are not suitable to use with a large collection of named repeats. in addition, analysis and visualization functionalities fall outside of the scope of their intended uses. blast  <cit>  is a related tool to these with a much more general purpose; it differs from our context, however, in that it enables one to search for a given element in a whole body of genes, rather than a known body of elements in a given gene. repbase  <cit>  is a database that stores repetitive dna elements for a number of species for use in other tools. the tools that use the repbase data, such as censor  <cit>  and repeatmasker  <cit> , are largely focused around removing repetitive elements rather than tracking or analysing them. additionally, repbase is limited to data from eukaryotes, which in turn limits the tools built around it. pssrdb  <cit>  is a database that stores repetitive gene data for many species of prokaryotes, including a. marginale and s. pneumoniae, but focuses on shorter repeating elements  called simple sequence repeats. there is another class of related tools, with functionality not directly related to genotyping, that identify general repeating elements in dna or protein sequences in a variety of ways. examples of tools that fall into this category include . while there are no tools specifically related to genotypic and geographic repeat analysis, we note that repeatfinder  <cit>  has some interesting analysis capabilities involving substructures of the repeating elements it identifies. finally, we note that repeat finding in a broader sense is an extensively studied topic in bioinformatics. sharma et al  <cit>  provide a survey of tools used for mining microsatellites in eukaryotic genomes. merkel and gemmel  <cit>  give a review of software tools for detecting short tandem repeats and a practical guide  on how to use the tools in an informed manner. lim et al  <cit>  provide a more recent review of tandem repeat search tools with a focus on algorithmic performance.

we developed repeatanalyzer, a new software tool designed to track, manage, analyse and catalogue ssrs and genotypes. the idea for repeatanalyzer originated from a very simple program for repeat identification developed by carter hoffman  <cit> , and branched out to add many new features and analysis capabilities. using a summary of repeat and strain data collected from the literature, repeatanalyzer currently maintains a list of all known a. marginale repeats and strains, the locations where these have been reported, and the original sources of those reports. when given the dna or amino acid sequence of a gene/protein of interest, repeatanalyzer can determine which repeats the sequence contains and whether the genotype has been previously reported. repeatanalyzer also provides a variety of analysis capabilities, including: genetic diversity analysis for a specified geographical region; genotype analysis for a specified ssr, strain or location; and visualization of search results on geographic maps. while we developed repeatanalyzer using a. marginale as the model organism, the tool can also be used in the study of other bacteria with ssr loci.

implementation
repeatanalyzer is a command line software tool, written in python, for storing, managing, identifying and analysing a catalogue of ssrs for a gene locus of interest. these functionalities can be used in genotyping, phylogenetic characterization or pathogenic analysis. figure  <dig> provides an overview of the central functionalities of repeatanalyzer.fig.  <dig> a flowchart of repeatanalyzer’s functionalities. each main branch  represents a type of functionality. following each branch shows the program flow for each option



repeatanalyzer functionalities
a) input newly discovered ssrs and genotypes. repeatanalyzer can add new genotypes and ssrs to its dataset from a plain text file specified by a user. the file is required to be in a simple but specific format . if data in the file already exist in the system, repeatanalyzer avoids adding the data again. further, the program carries out a variety of checks to ensure consistency of data added to the dataset. if an occurrence of a genotype is found at a new location, that location is recorded. if a genotype or ssr with a known sequence is given a new name, that name is added to a list of current names for that genotype or repeat. if a repeat name that is in use is listed with a new sequence, the user is prompted to overwrite the old sequence, keep it in lieu of the new one or give it a new  name. this is done to maintain the uniqueness of repeat names, which is necessary as the repeats present in a genotype are referenced by name only. the data input functionality of repeatanalyzer is shown in branch a of fig.  <dig> 

b) strain identification. given the sequence  of a known ssr locus for an organism from a species of interest, repeatanalyzer finds the maximal set of non-overlapping known repeats in that sequence and the name of the genotype, if any is stored. it also gives the locations where the genotype has been found previously and the sources of this information. the ssrs used for this functionality must have been input as described in section a. as mentioned in the data compilation section, the input file for a. marginale will be maintained along with the software, and files for other species may be kept similarly, if there is sufficient interest. however for any other species, the input file will need to be compiled by the user, as specified in the user manual.



the strain identification functionality is represented in branch b of fig.  <dig>  upon selecting the appropriate menu item, the user can enter either the dna or amino acid sequence for the gene of interest. once the user has selected the appropriate option for the data entered, the program converts the input to amino acid form , and then runs an implementation of the knuth-morris-pratt  string searching algorithm  <cit>  to search for all known repeats in the string . once this is completed, the program removes repeats that are substrings of other found repeats from the results before they are output. in the search for repeats, we chose the kmp algorithm because it is fast in practice  and has guaranteed worst-case behaviour compared to theoretically faster algorithms that do not offer the same reliability such as boyer-moore  <cit> . suffix trees  <cit> , which facilitate more efficient search procedures, are not suitable in our context because the search body is input at runtime .fig.  <dig> a flowchart of the knuth-morris-pratt string searching algorithm. kmp is a computationally efficient algorithm for finding short text patterns in a long string of characters. offsets is a list of numbers. the length of offsets is the number of characters in pattern. each entry in offsets corresponds to the distance counters i and j are adjusted when a mismatch occurs. len denotes the length of item


c) analysis. repeatanalyzer provides two basic analysis functionalities for the repeat data it stores, which we have called diversity analysis and genotype analysis.i) diversity analysis involves calculation of genetic diversity scores for a geographic region. a region can be defined as broadly as a country or as narrowly as a particular province or county. the genetic diversity is calculated in several different ways that we group into two categories. the first category of metrics  measures the percentage of unique repeats in a region, while the second  measures the regularity with which the repeats are distributed. the metric gd <dig>  which was introduced in  <cit> , is a variant of the quantity-centric category. it is simply the number of unique ssrs present in a region divided by the number of strains identified. we introduce a slightly modified variant of gd <dig>  named gd2b, that can be calculated with only genotype data, as this is what repeatanalyzer stores. specifically, gd2b is defined as the number of unique ssrs divided by the number of genotypes. in addition, we developed a new quantity-centric measure of diversity , and a new distribution-centric diversity measure . gdm <dig>  like gd <dig> and gd2b, measures the amount of unique repeats in a region, but unlike gd <dig> and gd2b, is unaffected by the length of genotypes in the region. . gdm <dig> measures how uniformly the repeat occurrences in a region are distributed. gdm <dig> and gdm <dig> each come in two variants, local and global, depending on whether the metric is calculated as an average of the values for each genotype or over the entire region, respectively. the mathematical definitions of these measures are summarized in table  <dig> table  <dig> metrics used to calculate genetic diversity

total#uniquessrs#strains×100
total#uniquessrs#genotypes
avg#uniquessrsingenotypeilengthgenotypei
total#uniquessrstotallengthallgenotypes
avgdeviationfrequencyssriingenotypejlengthgenotypej
deviationfrequencyssritotallengthallgenotypes
length = the number of ssrs in that genotype



in addition to these numeric genetic diversity measures, repeatanalyzer calculates the frequency of each ssr in the region  and lists the set of ssrs that are unique to the given region. plots can  be produced of the distribution of repeat frequencies, repeat lengths or genotype lengths.

ii) genotype analysis, the second type of analysis repeatanalyzer provides, is a detailed summary of the compiled information about a single ssr, genotype or location. as an example, the compiled data for a. marginale ssrs in mexico would include all genotypes found in mexico, all ssrs in those genotypes, and all papers referencing these genotypes in mexico or elsewhere in the world. the analysis for a particular genotype includes: a list of all the repeats the genotype contains, the edit distances  between the repeats in the genotype and the mean edit distance; a list of all locations where the genotype has been reported; and a list of all papers reporting a strain with the genotype. for an ssr of interest, repeatanalyzer prints a summary of all locations where the repeat has been found, the genotypes in which the repeat is found and the sources in which the findings were reported as well as any ssrs within a given edit distance from that repeat’s sequence and any other ssrs of which it is a subset.

the analysis functionality of repeatanalyzer is summarized in the c branch of fig.  <dig> 



d) search. while similar to the genotype analysis functionality, search returns a more succinct summary of information on a large number of repeats and/or strains at once, and it maps these results geographically. for a genotype of interest, a search could be performed on the genotype and/or a repeat present in the genotype. the search produces a map of every location where the genotype has been found as well as every instance of its composite repeats. alternately, a set of similar genotypes could be searched to show where each of them occurs, or all genotypes of a region could be mapped. examples of this functionality are shown in the results section.



the search functionality is depicted in the d branch in fig.  <dig>  the input here can include one or more strains, one or more repeats, and a region. it is also possible to look for all strains or all repeats in a given location or all instances of a given strain or repeats across all geographic regions. the program processes this query and the user may choose to include a map plot of their search as well. the plot shows the locations of all the searched strains and repeats over a world map that can be zoomed to any region of interest. these maps can be saved in most popular image formats  and the data printout can be copy-pasted into a word processor or spreadsheet.e) summarise all current data. repeatanalyzer can also print a summary of all the repeats and strains it is currently storing, along with all the locations where these have been recorded and the sources. the printout is stored in a text file in the same folder as the executable file. if a strain or repeat has multiple names, the names are separated by semicolons. this simple functionality is shown in the e branch of fig.  <dig> 



data compilation
to build, test and verify repeatanalyzer, we used a. marginale ssrs and genotypes we compiled by mining the literature. specifically, we conducted a review of the literature examining papers that reported new ssrs or repeat sequences for genotyping. a total of  <dig> papers were reviewed and  <dig> were found to have genotype and/or repeat data .

we found  <dig> cases in the literature  where the same nucleic acid sequence was assigned a new name independently. when this occurred, we counted it as a single repeat with multiple names. similarly, we counted unique genotypes only where a distinct sequence of repeats existed and thus the total number of unique genotypes we identified is significantly lower than the total number of strains reported. a table of all unique repeat sequences and all their published names is available in additional file  <dig>  we designed our software to account for the potential problem of multiple naming of ssrs by alerting users to existing ssrs with a given name before they are input into the program and allowing them to be renamed.

RESULTS
in this section we demonstrate various functionalities of repeatanalyzer using  the a. marginale msp1α data we collected to validate repeatanalyzer’s functionalities and  some preliminary s. pneumoniae pspa ssrs and genotypes we identified. first, we show repeatanalyzer’s correctness on a large number of inputs and outline several types of errors we found in the literature in the process that the storage and management features of repeatanalyzer could prevent in the future. next, we show several examples that illustrate the mapping and analytic capabilities of repeatanalyzer. finally, we identify some preliminary pspa ssrs and genotypes and compare our genotyping strategy to one used in the s. pneumoniae literature.

validation
in order to validate repeatanalyzer’s identification functionality we downloaded  <dig> published a. marginale msp1α sequences  <cit>  from genbank  <cit> . using repeatanalyzer we compared the sequence of the repeats in genbank against the sequence the isolates were reported as having in the corresponding publication. of the  <dig> sequences examined, the results returned by repeatanalyzer corresponded with the literature in  <dig> cases. for the remaining  <dig> cases, manual curation revealed that the information reported by repeatanalyzer was correct in all of the cases, assuming the genbank data is correct. of the  <dig> erroneous cases, only five presented unique errors. in addition to these, repeatanalyzer had previously corrected five instances of a single name being assigned to two different repeats, which would have otherwise resulted in mismatches. for these  <dig> distinct errors, by comparing the published repeat sequence to the sequence in genbank, we were able to classify the errors into two broad categories as i) mistaken repeat sequence and ii) mistaken repeat name.i) mistaken repeat sequence. this error occurs when the published sequence of an ssr is different from the actual ssr sequence present in genbank. often the difference between the two sequences is small. this type of mistake is easy to make when dealing with a large number of sequences by hand, and it can lead to major confusion when a genotype is effectively mischaracterized as consisting of the wrong series of repeats. repeatanalyzer can prevent such errors by allowing researchers to simply enter the sequence of interest and have a known repeat returned with its name, avoiding the need to tediously compare each amino acid one by one. in most cases, we found that the mistaken repeat sequence is actually a new ssr. in such cases, we renamed the sequences by adding a “-2” to the end of the reported name. instances of the mistaken repeat sequence we found are summarized in the top part of table  <dig> table  <dig> mistaken repeat sequence and mistaken repeat name found in the a. marginale literature


aeach value in parentheses is the last two digits of an accession code where the first digits precede the parenthesized values


bthis repeat was listed as co-reported in the indicated papers



ii) mistaken repeat name. this error occurs when the ssr is reported as corresponding to a previously published ssr, but actually corresponds to a different published ssr. while it is relatively easy to avoid, a mistake like this can be nearly impossible to notice without reanalysing the original sample. in the sequences we examined, we found fewer cases of mistaken repeat names than of mistaken repeat sequences. repeatanalyzer could also prevent mistaken repeat name errors, since the set of ssrs in a sequence is returned by their names, removing the need for any manual checking. instances of the mistaken repeat name we found are summarized in the bottom part of table  <dig> 



examples using a. marginale data
because there is already a large collection of a. marginale ssrs  and genotypes  available, we frame the following examples around the a. marginale data we collected. but the same analysis can easily be applied to ssrs and genotypes for any prokaryote that has distinct ssrs. in a subsequent section we will give an example of another species for which ssr genotyping could provide beneficial insights and for which repeatanalyzer’s functionalities work seamlessly.

regional diversity analysis
repeatanalyzer has several ways to characterize the diversity within a given geographical region. first, it can easily compute the frequency, within known genotypes, of each ssr that occurs in a region. second, it can show the list of ssrs unique to a given region . repeatanalyzer can also produce plots of distributions of ssr frequency, ssr length and genotype length. finally, it can produce a variety of diversity scores that characterize ssr frequency more succinctly.

as an example, we include the diversity scores for two provinces of mexico, nayarit and jalisco, and for kansas, usa in table  <dig>  the table also includes worldwide scores for comparison. based on gdm1-local scores, we can see that kansas has relatively few unique ssrs per genotype, compared to both the mexican provinces and the world, while jalisco has relatively diverse ssrs within its genotypes. similarly, kansas has low gdm1-global value, meaning low ssr diversity in general, while jalisco has a higher value for the same metric. for both gdm <dig> metrics, the world values are the lowest, which is expected as these values contain all known repeats, most of which occur only a few times. the kansas scores, both in local and global terms, are relatively high meaning that, both within each genotype and in general, genotypes contain a more uneven mix of ssrs . in contrast, the two mexican provinces have lower gdm <dig> scores, indicating that the repeats are more evenly distributed. both mexican provinces were found to have repeats unique to them: for jalisco lj <dig> is unique and for nayarit ev <dig>  ev <dig>  ev <dig>  and ev <dig> are unique. kansas has fewer ssrs in general, and none are unique.table  <dig> diversity scores for nayarit and jalisco, mexico, kansas and world data

gdm1-locala
gdm1-globala
gdm2-locala
gdm2-globala

athese values are rounded, however as they are constructed from counts, rather than measurements, they do not have a strict number of significant digits. rather, for the gdm scores, we have chosen to display numbers rounded to three significant digits to make it easier to read and compare them. for the gd2b score we decided to round to whole numbers as the magnitudes are of a different scale



the plots repeatanalyzer produces for the ssr frequency and genotype length distributions for jalisco and the world data are included in fig.  <dig>  we found that generally genotype lengths are normally distributed around a mean for any given region, though the mean varies, while frequencies follow a power-law resembling distribution. further, our analysis of ssr frequency distribution plots for various regions  showed that over 90 % of repeats are  <dig> to  <dig> amino acids long, in agreement with what is commonly believed by researchers. in addition, we found that repeats of length  <dig> are approximately  <dig>  times as likely as repeats of length  <dig> . this is consistent with the global average ratio, where repeats of length  <dig> occur  <dig>  times as often as repeats of length  <dig> fig.  <dig> repeat frequency and genotype length distributions. the four plots in the figure are histograms produced by repeatanalyzer for jalisco, mexico and whole world data. plots a and c show the distribution of ssr frequencies by the number of genotypes in which they occur in the region. plots b and d show distributions of genotype lengths. the inset in figure c is zoomed in to show its middle segment in finer detail; repeatanalyzer automatically generates this type of inset when outlier values would make the indices on the table difficult to interpret



genotype analysis
in addition to characterizing the level of diversity in a geographical region, repeatanalyzer can also be used to compare and analyse individual entities . as an example, we discuss results we obtained for genotype α β β Γ, originally reported in mexico. the analysis revealed that the genotype has been reported in minas gerais, brazil and various locations around mexico and that the average edit distance  between its ssr sequences is fairly high. for each repeat in the genotype, the analysis also showed every reported genotype containing that repeat and where it was found. many of the locations where these repeats appear are similar, including a variety of provinces around mexico, brazil and venezuela, in addition to taiwan. however β and Γ are also reported in the philippines and Γ is reported in italy.

further, when the investigator enters the desired edit distance, genotype analysis can identify repeats with one or more amino acid substitutions, in addition to the known ssr with the furthest edit distance. a summary of the results of such an analysis for the repeats in genotype α β β Γ are included in table  <dig> together with results for other common ssrs for comparison. in this example, we searched with a maximum edit distance of three. interestingly, α is found to have only two recorded repeats within edit distance  <dig>  with repeat  <dig> at edit distance  <dig> and repeat ph <dig> at edit distance  <dig>  while β has more ssrs at each edit distance. both α and β have significantly fewer similar ssrs  than the other repeats analysed, including e and  <dig> which were selected because they have been reported in a similar number of regions as α and β. when examining the relationship of the repeats to each other, the simplest change would be a single amino acid change from the repeat being examined. ergo, one might expect a given repeat to have the most common edit distance as  <dig> when comparing to other repeats. however, analysis of edit distances shows that the most common edit distance for the  <dig> a. marginale repeat data set is  <dig> or  <dig>  with a slightly skewed normal distribution around this point . we posit that this is result of long evolutionary time, where multiple amino acid substitutions have accumulated and been selected for.table  <dig> edit distance analysis results for some common repeats


aparentheses contain the name of the referenced repeat



geographic distribution visualization
repeatanalyzer can also produce publication-quality maps of genotype and/or repeat occurrences over a geographic area. these maps can show any subset of repeats or genotypes and can be filtered by region. if a region filter is applied, the map includes only results that occur in the given region but shows where else they are found in the world. a map can be zoomed to any region of interest, and high-resolution versions can be saved at any zoom level. figures  <dig> and  <dig> show maps resulting from two example queries. the scale of markers on the map can be set from 50 % of the default size up to 300 % of the default size as needed. figure  <dig> has been zoomed in to show mexico, and the full world version is available in additional file  <dig> fig.  <dig> geographic visualization of repeats. the figure shows the output of the query: repeats: 10; 11; 12; 13; 14; 15; b; c; α; β; Γ, strains: none, location: any, scale:  <dig>  a version of this same map zoomed in to show venezuela in detail is available in additional file  <dig>  the size of a circle indicates the scope of the region it denotes. this is necessary because while a location for a genotype must include a country, it may also  include a province and/or county. in these cases, the larger the circle is, the broader the scope; country only markers have the largest circles, while markers for a specific county are the smallest

fig.  <dig> geographic visualization of repeats from nayarit, mexico. the figure shows the output of the query: repeats: α; β; Γ; ev1; ev3; ev7; ev <dig>  strains: ev <dig> β β β Γ; α β β β Γ; ev <dig> β β Γ; ev <dig> ev <dig> β β ev <dig>  location: nayarit, mexico, scale:  <dig> . a version of this same map zoomed out to show the whole world is available in additional file  <dig>  circles with grey outlines represent the positions of whole genotypes, rather than individual ssrs. size still indicates the scope of the region represented, though genotype markers are strictly larger than ssr markers to allow both to be visible simultaneously at the same coordinate location



preliminary analysis with s. pneumoniae data
to illustrate repeatanalyzer’s flexibility with respect to subject species, we collected s. pneumoniae pspa gene sequences from genbank and genotyped the strains using repeatanalyzer. from the five sequences we downloaded, we identified  <dig> unique repeat sequences, each containing  <dig> to  <dig> amino acids. these ssr sequences are available in additional file  <dig>  the genes we examined contained  <dig> to  <dig> tandem ssrs. we found that each genotype was distinct . given the length and variability of repeats present in the pspa gene in virulent strains of s. pneumoniae, we suspect pspa ssr genotypes could be used to differentiate strains with a much finer discrimination than serotyping.table  <dig> ssr genotypes of s. pneumoniae pspa



arepeat sequences are presented in additional file 3




discussion
we developed repeatanalyzer, a program for tracking, managing, analysing and cataloguing ssrs and genotypes. repeatanalyzer automates naming of new ssrs to avoid the most common types of errors found in analyzing this type of data, and provides new metrics for ssr analysis. as mentioned briefly in the implementation section, the metrics gd <dig> and gd2b shown in table  <dig> are dependent on the length of genotypes in a region. for example, consider these two cases. case 1: each genotype in a region has no repeating ssrs, say the strains found there are a b c, d e f and h i j. case 2: a similar region with strains a b c d e f, h i j l m n, and o p q r s t. in case  <dig>  the gd <dig> value is  <dig>  where as in case  <dig> it is  <dig>  intuitively, both cases have the maximum diversity possible, however increasing the length of the genotypes increases the diversity score, making values difficult to compare between areas with varying genotype lengths. gd <dig> captures a kind of diversity where more ssrs in the study population will raise the diversity score, while more strains with similar genotypes will decrease the score. in contrast, the gdm <dig> scores are more focused. gdm1-global is the average percent of unique repeats across all genotypes in the region and gdm1-local is the average percent of unique repeats in each genotype. for case  <dig> in our example, both the gdm1-global and gdm1-local scores would be  <dig>  or 100 %, indicating the maximum possible diversity is present. we argue these values are easier to interpret and are more meaningful. the second type of metric, gdm <dig> measures how often each repeat in a region occurs, and thus captures a completely different formulation of diversity. for case  <dig> of our example, the gdm2-global and gdm2-local diversity measures are both  <dig>  this tells us that both in each genotype and in general, each repeat occurs the same number of times.

the validation method we chose to use for repeatanalyzer, though it allowed us to test our identification functionality in a large set of test cases, relies on the assumption that genbank data is correct. in particular, if a dna sequence is reported correctly in a paper and uploaded incorrectly to genbank, our validation method would mark that as an error. this can be viewed as a limitation. however, due to the rarity of a mismatch between genbank and the literature we chose to trust the veracity of genbank data.

when compiling a. marginale data, we found that the naming standards for strains vary considerably across sources. we found some papers  <cit>  that opted against naming strains at all, perhaps due to the uncertainty faced on how best to name strains. a naming scheme containing the location of the strain and the genotype was proposed by cabezas-cruz  <cit> . however, while an improvement, this nomenclature system leaves out year, which nonetheless might be an important piece of information in the future, for example, to determine whether the same genotype is occurring year after year in a particular region. motivated by this, we propose a new naming convention that is short, information-rich and can be produced directly by repeatanalyzer: ___. as an example, using this naming convention, a previously unnamed strain from kansas would be named 6e_us,ks_2004_ <dig>  <cit> . adding animal id allows someone to quickly realize that in the  <dig> kansas study the 6e genotype occurred seven times.

CONCLUSIONS
in summary, we have developed a new software tool for storing, managing, identifying and analysing short-sequence repeats for the purpose of strain identification. our software can take a gene sequence and return the repeats it contains along with the known strain  that the sequence belongs to. it does so by storing data distilled from sources on repeats at a given ssr locus. the data can be updated simply and searched easily for information about any known strains or repeats. all of these tasks are done in a computationally efficient manner using the kmp string matching algorithm and general programming best practices. repeatanalyzer can also produce a map for any combination of repeats and strains in a given region, offering geographic insights into their distribution not previously available. in addition, it can calculate metrics of diversity within geographic regions. we intend to maintain a periodically updated version of the a. marginale data that researchers can download and make contributions to.

additional files
additional file 1:  a table including all known a. marginale ssrs. each ssr includes all names it has been assigned, separated by semicolons, and sources where it has been referenced are cited from the main text. 

additional file 2: 
figure s <dig>  geographic visualization of repeats . the figure shows the output of the query: repeats: 10; 11; 12; 13; 14; 15; b; c; α; β; Γ, strains: none, location: any, scale:  <dig>  figure s <dig>  geographic visualization of repeats . the figure shows the output of the query: repeats: α; β; Γ; ev1; ev3; ev7; ev <dig>  strains: ev <dig> β β β Γ; α β β β Γ; ev <dig> β β Γ; ev <dig> ev <dig> β β ev <dig>  location: nayarit, mexico, scale:  <dig> . 

additional file 3: a table including all ssrs extracted from the s. pneumoniae samples. each ssr is identified by a number. 



