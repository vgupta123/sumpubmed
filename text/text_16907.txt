BACKGROUND
projects in biotechnology are constantly generating new types of data. as the reduction of costs of genomic assays drops, volume as well as data diversity greatly increase. while advances in knowledge of personalized medicine are expected, scientists are continuously challenged on data management and analysis  <cit> .

bioconductor started in  <dig> as an initiative to provide free software, written in r and implemented in standardized methods and classes, to analyze high-throughput biological data  <cit> . currently, bioconductor is a public repository where scientists can find r packages to analyze all kinds of high-throughput omic data . a standard infrastructure has been created to represent biological data comprising, amongst others, two basic r classes to load experiment’s information: eset and summarizedexperiment. the main objective of these classes is that biological data and phenotypic descriptions are well coordinated. in particular, methods such as subsetting are easily applied simultaneously to experiment and phenotypic data. while eset is designed for microarray data, summarizedexperiment is for next generation sequencing data.

major public projects have performed experiments to a group of individuals generating different types of datasets  <cit> . for instance, the cancer genome atlas   <cit> , is the largest resource available for multi-assay cancer genomics data; the  <dig> genome project  <cit>  aims to provide a comprehensive resource for human genetic variants and gene-expression across populations and; the international cancer genome consortium   <cit>  coordinates  <dig> research projects to characterize the genome, transcriptome and epigenome of multiple tumors. in addition, large repositories collect data of several smaller projects allowing unified storage and stimulating data sharing. gene expression omnibus   is the primary database where data from multi-assay experiments is shared publicly. other reference databases are dbsnp  <cit> , a deposit for short genetic variations and database of genomic variants archive , for longer structural variants  <cit> .

all of these data resources are accessible through standard bioconductor classes . there are numerous packages used to retrieve and transform data from public repositories. for instance, geoquery  <cit>  that obtains geo data as an eset object. such packages aim to facilitate downstream analyses for bioconductor’s packages. however, bioconductor lacks a standard class to efficiently manage different datasets obtained from the same individuals.

several r/bioconductor packages have implemented methods to integrate and visualize biological data: pma , mixomics , made <dig>  <cit> , rgcca  <cit> , omicade <dig>  <cit> , cnamet  <cit> , rtopper  <cit> , iclusterplus  <cit>  and stategra  <cit>  among others. each of these packages implements a different strategy to face the integration analysis. they typically use their own data structure, which is usually a list of matrices. the use of such structure makes it difficult to perform usual operations such as subsetting data across data sets and selecting samples . the specificity of the data structures to each method further hinders the user’s disposition to perform different integration analyses on one study. therefore, a standard structure to manage the different datasets of the same individuals will promote the use of current and future integration methods, allowing the implementation of general methods for management and processing.

in this article, we present multidataset, a new r class based on bioconductor standards developed to encapsulate multiple datasets. multidataset deals with the usual difficulties of managing multiple and non-complete datasets while offering a simple way of subsetting features and selecting individuals. we describe the internal structure of multidataset and illustrate its use in three examples  which cover three common situations in integration analyses.

design and implementation

multidataset is a s <dig> class of r implemented under bioconductor guidelines  <cit> . its structure is an extension of the abstract eset class. multidataset is therefore a data-storage class that comprises datasets of different omic data , feature data and phenotypic data. despite its general form, multidataset maintains the specific characteristics of the datasets .

internal structure of multidataset

multidataset comprises five fields that are r standard lists. their names match other bioconductor classes: assaydata that contains the measurement values; phenodata that stores the description of the samples; featuredata and rowranges that have the description of the features; and return_method that allows recovering the original dataset. relation between fields is shown in fig.  <dig>  in each dataset, samples are shared between assaydata and phenodata, and features between assaydata, featuredata and rowranges. we have programmed a function to recover the original datasets. the class is designed such that the different data is coordinated. a particular feature of multidataset is the storing of datasets from different experiments that may not share the full set of samples between them.fig.  <dig> this schema shows how the information is stored in the five attributes of a multidataset and how the different parts are linked. phenodata and assaydata share the dimension corresponding to samples. featuredata, rowranges and assaydata share the dimension corresponding to features. all the attributes are linked through the data-sets name




six accesors are available to retrieve information from each multidataset’s fields: assaydata, pdata, fdata, rowranges, rowrangeselements and samplenames. the first four retrieve the content of assaydata , phenodata , featuredata  and rowranges . rowrangeselements returns the names of datasets with a genomic coordinates in a genomicranges. the accessor samplenames returns a named list with the samples names of each data set.

adding datasets to multidataset
following bioconductor guidelines, multidataset objects are created empty through its constructor. once the object is created, datasets can be added with add_eset and add_rse. the first function adds an object of class eset while the second adds a summarizedexperiment object and its extensions. the two functions have the same arguments: the multidataset object, the dataset to be added, a tag for the type of dataset  and a name for each dataset. multidataset thus allows the storage of multiple dataset of the same type, under different names. for features with genomic coordinates, a genomicranges object is created from the dataset’s featuredata. in order to maintain the consistency across all datasets, the names of the samples are given by those in the phenotype dataset . if not present, object’s samplenames are used.


multidataset package incorporates three specific functions to include specific omic data sets: expressionset , methylationset  and snpset . these specific functions call general functions to add the data after performing extensive or specific checks . as a result, only datasets with defined features can be introduced to multidataset through a specific function.

specific functions should always be used by users to ensure that the sets are properly added to multidataset. the two basic functions add_eset and add_rse are intended to be used only by developers to develop new specific functions. the hierarchy between the specific and basic functions is shown in fig.  <dig> fig.  <dig> this figure represents the organization of the specific and basic functions to add datasets to a multidataset object. the basic functions, that receive generic eset and summarizedexperiment objects, directly interact with the multidataset objects and developers should use them to extend the functionality of multidataset. specific functions receive more specific datasets and interact with the multidataset object through basic functions. they check the structure of the dataset and users should use them




subsetting multidataset
we have implemented two methods to perform subsetting. the operator ‘[’ can be used to select individuals, datasets and/or features. in the case of having tables with different samples, subsetting is performed by considering the union of samples from the different tables. for instance, let us assume that table  <dig> contains individuals a and b. table  <dig> has individuals a, b and c, and table  <dig> is having individuals a, c. let us also assume that we are interested in getting information from tables  <dig>   <dig> and  <dig> for individuals a and c. our subsetting method will return a multidataset object containing individuals a for table  <dig> and individuals a and c for tables  <dig> and  <dig>  we think that this procedure is better than returning a multidataset object only having individual a  for the three tables. therefore, subsetting by individuals may not return complete cases. notice that the package has another function  that can be applied to this object to get complete cases if necessary.

when subsetting by datasets, if only one is selected, the original dataset is returned . genomicranges object can be used as an argument to select the features present in a given genomic range. in this process, sets with no genomic coordinates  are discarded. we extended the subsetting function of r  to select specific features within a dataset, such as features associated to a gene or filtering individuals given a phenotype.

RESULTS
we illustrate three common situations where multidataset is useful. the examples are used to show package strengths and advantages. the first example shows how to use multidataset to perform two integration analyses with already existing tools . second example shows how to develop a function to integrate gene expression and methylation data. third example illustrates how to incorporate a new type of dataset that is not available in multidataset to store proteome data including limit of detection.

using multidataset with third party r packages
in the first example, we show how to perform an integration analysis with three datasets using two approaches: 1) multivariate co-inertia analysis and 2) clustering of multiples tables. these methods are implemented in the r packages omicade <dig> and iclusterplus . for both analyses, we integrate three datasets stored in a single multidataset object. we use two gene expression datasets and one methylation dataset. the analysis includes three steps. first, the different datasets are added to a multidataset through specific functions. second, a multidataset method is used to easily select those samples present in all the datasets. finally, a wrapper is used to pass the multidataset object to mcia function . this process is also done for the clustering analysis of iclusterplus. both wrappers, for mcia and iclusterplus, are included in multidataset package. we also provide the code of the wrappers to encourage developers to create their own.

integration of methylation and expression using multidataset
in the second example, we show how to develop a function to implement a new method to integrate two types of data. we describe the different parts of correlationmethexprs, a function from meal package  <cit>  that performs an integrative analysis of methylation and expression data. the function has four main steps: 1) checking of data, 2) preparation of data structures, 3) implementation of the integration algorithm and 4) formatting of the results. checking the correct format of original datasets is performed whenever the sets are added to the multidataset, so an integration function only needs to check the global structure of the multidataset. multidataset’s methods facilitate the preparation of data structures and the recovery of original data in bioconductor classes for the use of any bioconductor’s methods. in addition, we illustrate common steps of an integration analysis that are easily performed thanks to commonsamples joint to the list conversion .

adding a new type of data to multidataset objects
in the third example, we show how to create a new specific function to deal with a type of data that is not natively supported in multidataset package . we also cover how to implement checks of the object’s structure inside the function to ensure multidataset’s consistency. this is illustrated by extending an eset object to include proteins’ data. detectors used in multiplex protein quantification work inside the dynamic range of protein concentrations. however, real protein concentrations may be outside these ranges so values outside the limit of detection  are generated. to address this issue, we introduce a new function to load protein data and to modify values out of the lod. then, we implement proteomeset, an eset extension, to include the original data, the transformed data and the description of the limit of detection of each protein. finally, we develop a new specific function to add proteomesets and to check that it contains all the components required with the right names. multidataset can thus be extended to potentially contain any data type.

discussion
the reduction of costs of microarray technologies and next generation sequencing has promoted the expansion of projects that collect different type of biological data on individuals. consequently, it is useful to have a standard procedure to combine the information from different sources for further processing and analysis. we have developed multidataset as a package that helps to storage different datasets, including common bioconductor’s classes. multidataset can also be extended to store novel data types.


multidataset is implemented so it runs extensive checks on the datasets being integrated. it checks for the consistency within and across datasets. in addition, regular operations like selecting complete cases or subsetting are included in the package. multidataset design facilitates data validation, as each kind of omic data is introduced using a specific function. these specific functions include the dataset’s type in the objects’ name, thereby standardizing multidataset objects. integration functions thus require fewer checks because many are done in the previous steps . in addition, the checking can be modified by re-implementing a specific function, without altering the structure of the package.


multidataset is designed to manage multiple datasets while preserving their original characteristics. thus, the assay data, the phenotypic data and the feature data are stored independently for each dataset. in the case of the phenotypic data, we prefer this approach by several reasons. in omic datasets, the phenotypic data also stores technical information. for instance, if we were interested in encapsulating two methylationsets, we will have technical variables with the same name but different information. storing this information in one pheno data will lead to rename both columns to keep the information. in studies with longitudinal data, some phenotypic variables of the individuals change in the datasets. as an example, if we had two expressionsets, one obtained at age  <dig> and the other at age  <dig>  the variable age will have very different values in each dataset. finally, we decided to keep the pheno data separately to allow the user recovering the original datasets. consequently, users can create their multidataset with different datasets, perform some subsetting operations  and then recover the objects with the original classes that can be used to perform downstream analysis.


multidataset performs common subsetting operations as well as managing experiments with multiple omic sources. it contains functions to select the individuals with information in all datasets or those features of each dataset that are inside a region of the genome. moreover, multidataset can also perform other complex subsetting operations, such as selecting subjects with specific phenotypes or selecting features belonging to a gene, which can be of great help in candidate gene studies. in addition, multidataset easily recovers the original dataset for the use with native bioconductor functions.

a bioconductor group interested on combinable experiments has started a repository . this group aims to use r/bioconductor to define interfaces allowing efficient selection and combination of high-dimensional assays. however, it seems that the project focuses on tcga. the package, called multiassayexperiment, shares similar capabilities for managing data, specially related to subsetting. nevertheless, addition of sets is not standardized, lacking some of the advantages that we mentioned in the previous sections. overall, we think that multidataset is a strong candidate to become a standard class in integration of multiple omic data sets since it is already available in bioconductor , while multiassayexperiment is still under development. another disadvantage is that multiassayexperiment is being developed by a large number of contributors making package improvements slow and tedious.

one of the limitations of multidataset is that the memory management is not optimized as its uses straightforward extensions of bioconductor’s classes. as datasets grow in size, further developments on the storage need to be devised. we have used multidataset to encapsulate two methylationsets having 450 k cpgs, on snpset with  <dig>  snps and an expressionset having  <dig>  probes without problems. the other limitation is that, nowadays, multidataset can only be used with three integration pipelines: by mcia  and iclusterplus through a wrapper and as input object for meal package.

currently, we have two lines of work to increase the usage of our package. on one hand, we are contacting integration methods developers to allow using multidataset objects as input in their pipelines. on the other hand, we are developing a new function to download data from geo and include them in a multidataset object.

CONCLUSIONS

multidataset is a new r class designed to manage data from different omics experiment in the same individuals. it includes methods to perform typical operations, such as subsetting or selecting common samples, making integrative analysis more accessible to users with a low expertise in bioinformatics. in addition, its implementation eases standardization of multiple omic sets, which will also ease the development of new integration functions. altogether, multidataset is a suitable standard for data-storage in integration analysis done under r and bioconductor framework.

availability and requirements
project name: multidataset

project home page: https://bioconductor.org/packages/release/bioc/html/multidataset.html


operating systems: windows, unix and mac;

programming language: r

other requirements: none

license: mit.

additional files

additional file 1: “using multidataset with third party r packages”. this file illustrates how to perform an integration analysis using multivariate co-inertia analysis  and clustering of multiples tables . 


additional file 2: “integration of methylation and expression using multidataset”. this file is a tutorial of how to develop a function to implement a new method using multidataset capabilities. 


additional file 3: “adding a new type of data to multidataset objects”. this file exemplifies how to create a method to incorporate data from s <dig> classes to a multidataset object. 




abbreviations
dgvsdatabase of genomic variants archive

geogene expression omnibus

icgcthe international cancer genome consortium

lodlimit of detection

snpsingle nucleotide polymorphism

tcgathe cancer genome atlas

