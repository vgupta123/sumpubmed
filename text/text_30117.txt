BACKGROUND
serial analysis of gene expression  is a global and digital gene expression profiling method  <cit> . it relies on three fundamental principles:  a short nucleotide tag cut from a cdna copy of an mrna is sufficient to uniquely identify the transcript,  two tags can be ligated together to form ditags and unambiguously amplified by pcr, and  multiple tags can be concatenated for efficient detection by dna sequencing. the overall reliability of sage has been compared to other gene expression profiling methods such as northern blots  <cit> , real-time or kinetic pcr <cit> , and cdna and oligo nucleotide micro array hybridizations  <cit> . it was generally found that the reliability and reproducibility of sage is high. typically 70â€“85% of gene expression changes observed in sage can be confirmed by a different method  <cit> . however, a potential bias introduced by amplification of ditags was discussed already in the original sage publication  <cit> . it was suspected that duplicate ditags, i.e. identical copies of a ditag , would occur only as an artifact of pcr amplification. therefore, duplicate ditags have been removed prior to tag counting in most sage studies so far, partly because of requests from reviewers before publication.

however, duplicate ditags will be encountered naturally with a certain frequency, depending on abundance of the two transcripts from which the ditag is derived  <cit> . for example, in the original sage protocol two blunt ended  <dig> nucleotide tags were ligated to form ditags. two tags a and b, each occurring at a frequency of  <dig>  have a  <dig>  probability of being joined. present sage studies typically include  <dig>  tags  leading to  <dig> ab+ba ditags. however, the total count of a tag of  <dig>  frequency in  <dig>  is  <dig>  and the error of  <dig> introduced by removing the naturally occurring ditags is insignificant. furthermore, an algorithm to minimize this problem  was developed by snyder and coworkers <cit> .

however, recent developments in sage technology have accentuated the problem of discarding duplicate ditags. first, there has been a drive towards using smaller samples for construction of sage libraries, facilitating the analysis of cells with specialized functions such as pancreatic cells obtained from biopsies  <cit> . such samples may have extreme gene expression profiles with single transcripts accounting for  <dig> % of the total population of transcripts. second, the widespread use of the longsage protocol in which a two base pair overhang is used in the ligation of ditags, instead of blunt ends  <cit> . consequently, any longsage tag can only form ditags with tags with a compatible overhang, in principle reducing the number of potential partner tags  <dig> fold on the average. in this paper we analyze the error introduced by discarding naturally occurring duplicate ditags in longsage and describe a probabilistic algorithm that can distinguish naturally occurring ditags from artifacts.

RESULTS
a prediction of the number of duplicate ditags as a function of the abundance of the two monotags in sage and longsage is shown in figure  <dig>  it illustrates the error introduced by deleting duplicate ditags as commonly practiced in these analyses. in original sage, all blunt-ended tags can combine with all other tags and, therefore, the number of a particular duplicate ditag ab can be predicted from equation  <dig>  in longsage, tags have a  <dig> nt overhang and their ditag partner is constrained accordingly. therefore, the number of a particular longsage ditag can be estimated from equation  <dig>  assuming an even distribution of possible overhangs.

as can be seen in figure  <dig>  discarding duplicate ditags introduces a serious error for abundant tags in longsage data analysis. for example, two abundant tags, each present  <dig> times in a typical  <dig>  tag study, would give rise to only  <dig> duplicate ditags in sage, but  <dig> duplicate ditags in longsage. counting duplicates only once, as is presently done, would result in an error of 3% for sage and 48% for longsage. in this example we have removed the duplicates for ab only, but in reality a particular tag a, will create duplicates with any compatible tag b, c, d etc. at the frequency stipulated in equations  <dig> or  <dig>  if each of these duplicates is counted only once, a further reduction of the tag count is introduced and, therefore, the error will increase. indeed, this simple estimate demonstrates that the problem is expected to be much greater for longsage, than for conventional sage.

however, the assumption of equal proportions of compatible overhangs in longsage is unrealistic. the genome sequence is not a random distribution of nucleotides  <cit>  and furthermore, this would limit the maximum tag count of any tag to 1/ <dig> of the total tag count of the library , and individual tag counts larger than  <dig> have been encountered.

the experimental dataset derived from rna isolated from pancreatic acinar cells by the arna-longsage procedure was therefore analyzed in greater detail  <cit> . it contains  <dig>  tags before removal of duplicate ditags and  <dig>  after. the unusual high numbers of duplicate ditags reflects an extraordinary abundance of transcripts encoding the enzymes of the digestive juice . table  <dig> shows the  <dig> most abundant tags, the enzyme encoded and the tag counts before and after removal of duplicate ditags. removing duplicate ditags from the dataset reduces the tag count with up to 67% for the most abundant tag. the most abundant tags are the ones most often affected, although medium abundance tags are also significantly affected, if they are compatible with predominant tags . in fact, only for total tag counts  less than  <dig> is the majority of tags unchanged by removal of duplicate ditags. and 19% of medium abundance tags  are changed at least  <dig>  fold. bear in mind, that the error is not affecting all tags to a similar degree, while some tags are unchanged, others may be greatly affected. for an example, the tag count for catgggcgactctggcggccc is  <dig> tags before removal and only  <dig> after, a change of  <dig> fold . anisimov et al. have argued that up to 5% false ditags, so-called quasi-ditags should be removed from sage analyses  <cit> . in our case, removing quasi-ditags has only marginal effect of the analysis , presumably because the error corrected by anisimov et al. is exclusively affecting rare tags, whereas we are concerning with an error increasingly affecting tags the more abundant they get.

atotal number of tags =  <dig> 

btotal number of tags =  <dig> 

ctag count including duplicate ditags/tag count excluding duplicate ditags.

d tentative human contig number from the institute for genomic research

a fold change is calculated by dividing the total tag count with the tag count obtained after removal of duplicate ditags. percentage of total number of different tags in the indicated intervals is given in parentheses.

the corrective measures suggested by welle  <cit> and snyder  <cit>  are both iterative approaches developed for sage. welle suggests splitting up the dataset in a number of sub-datasets, removing duplicate ditags, and then adding these datasets together allowing duplicates. the number of subdatasets to be created, determining the maximal number of duplicate ditags is a simple guess. in fact, this method is equivalent to setting a maximal allowed ditag count instead of excluding all. in longsage, duplicate ditag counts of several hundreds are frequently observed. therefore, determining a low meaningful fixed number of duplicate ditags is not feasible. snyder's algoritm  includes a proportion of the observed duplicate ditags based on the abundance of the two monotags comprising the ditag. this new tag count can then be used to calculate a new proportion of the observed duplicate ditags to be added. many iterations of this algorithm would approach the inclusion of all duplicate ditags. while this algorithm includes some of the naturally occurring ditags, it only works for sage where all tags can form ditags with each other and does not address whether an entire library is biased or not.

in this study, an algorithm implemented in perl was developed  which extracts both monotags and ditags from phred or fasta formatted sequence files, defines the two nt overhang of tag pairs in the ditags, and counts and sorts these ditags into compatible overlapping classes. of the  <dig>  tags in total,  <dig>  were seen twice or more. considering these tags only   <dig>   were present in duplicate ditags. a major complication of the analysis is the presence of most abundant tags in several forms differing in length by one or rarely by two nucleotides. thus a single tag may be split into two or more compatible overlapping classes. for this analysis, only tags between  <dig> and  <dig> nt were considered . these accounted for  <dig> % of all ditags . a  <dig> nucleotide ditag contains two tags in the short form , a  <dig> nucleotide ditag one short form and one long form, and a  <dig> nucleotide ditag contains two tags in the long form . the relative propensity for a tag to appear in long or short form was calculated for each tag without considering the  <dig> nucleotide ditag, as for these ditags, we cannot know which of the two tags is present in the long form. likewise, the compatible overlapping class was determined from the  <dig> and  <dig> nucleotide ditags only, because the overlap in these tags can be unambiguously identified as the two central nucleotides of the ditag.

aditags shorter than  <dig> nucleotides were not extracted from sequences

bpalindromic sequences. the number of sequences compares to half the number in non-palindromic sequences.

clongsagetags generated in-silico form refseq using 17+catg nt tags only.

the number of ditags in the  <dig> possible overlapping classes is tabulated in table  <dig>  the length distribution shows a general overrepresentation of the long form. apparently, the tag generating restriction enzyme, mmei, cleaves the dna strand 21/ <dig> nucleotides downstream of its recognition site twice as often as 20/ <dig> nucleotides. furthermore, the true distribution among compatible overlapping classes is far from uniform. the overlap cg was only present in  <dig> ditags, whereas the aa  was present in  <dig> ditags. this is in line with the relative dinucleotide abundance in humans, which also shows a severe under representation of cg, whereas aa  is more commonly observed  <cit> . this observation is corroborated with the finding that cpg islands are predominantly found in the first exon of genes and therefore rarely in the 3' end of transcripts mostly represented in sage  <cit> . analyzing the distribution of overlaps generated in-silico from the human refseq v.  <dig> also shows a similar tendency, albeit to a lesser extent .

the uneven distribution of compatible overhangs actually raises the question whether a particular overhang can be present in such a low abundance that it suppresses the measurement of other tags due to an insufficient number of compatible monotags. one solution to this would be to conduct the longsage experiments by blunt-ending by t4-dna polymerase prior to ligation of ditags, thus shortening the longsage tags by two nucleotides  <cit> . an advantage of this approach is that the error introduced by removal of duplicate ditags is small and similar to those indicated for sage . however, in the case presented here, saturation of compatible overlaps is not the reason for the rare occurrence of the cg overlap, as cg is a palindrome and thus may form ditags with itself.

two predictions are calculated for the occurrence of each ditag  using equation  <dig> . the two predictions are often the same, but may differ for ditags containing less abundant tags and will approach uniformity for higher duplicate ditag counts. a plot of the predicted numbers of ditags against the observed number of ditags is shown in figure 3a . the slope of a linear regression analysis of the data is  <dig> , in reasonable agreement with the expected  <dig>  however, the pearson product moment correlation coefficient between the observed and the predicted is a modest  <dig> .

detection of outliers is performed by calculating standardized residuals according to equation  for each ditag. assuming normal distribution of the standardized residuals, the standard deviation is calculated for all ditags observed more than once. an observation is classified as an outlier if the standardized residual is larger than three standard deviations . the standardized residuals are plotted in figure 3b. the low number of standardized residuals that fall outside the confidence interval  indicates that most duplicate ditags seem to represent true tags.

inspection of the outliers reveals that most of these ditags contain at least one tag ending in a nucleotide that is inconsistent with the nucleotide sequences of the corresponding unigene found in the tigr human gene index , and most likely represents nucleotide variations. the overlapping class of this variant tag is inconsistent with the overlapping class of the non-variant tag used for the prediction. obviously, the algorithm would provide erroneous predictions in these cases, since it is based on the frequency of the non-variant monotag, which is much higher than the frequency of the variant monotag. a different, rather abundant ditag was observed  much more often than predicted . blast analysis of this ditag reveals that it consists of two tags derived from the e. coli Î²-lactamase gene and thus is most likely the result of vector contamination. removing these data points from the regression increases the pearson correlation coefficient to  <dig> . therefore, an excellent correlation between the number of duplicate ditags observed and predicted is obtained not discarding duplicate ditags.

atentative human contig number from the institute for genomic research .

bthe match to phospholipase a <dig> is not perfect 

cthe tag matches an inverted sequence from carboxypeptidase.

to investigate whether this is special to this particular dataset, we have performed the analysis on additional datasets, five derived from potato tuber  and five other libraries derived from pancreatic tissue  <cit> . the analysis can be carried out on any longsage library, but becomes more precise with more ditags included in the analysis. in our experience, depending on the proportion of duplicate ditags present, a minimum library size of  <dig>  tags seems to be the lower limit for a reliable analysis. in the future, exploiting new dna sequencing technologies, libraries larger than  <dig>  tags will probably be common <cit> . varying numbers of duplicate ditags were present in these libraries, and suspicious outlier ditags were identified in all libraries. however, in none of the libraries the duplicate ditags were biased to an extent that justified the bulk removal of all duplicates. tag extractions including or excluding duplicate ditags of the most abundant transcripts of all additional  <dig> libraries analyzed is shown in . the libraries are affected to a different extent depending on the transcription profile, but all libraries show a change of up to  <dig> â€“ <dig> folds among the  <dig> most abundant transcripts, when including or excluding duplicate ditags . however, similar to the pancreatic acinar library, the effect was not restricted to high abundance tags, but was observed in medium abundance tags as well . the ncbi database, sagedb, currently contains  <dig> sage libraries of which  <dig> are longsage. unfortunately, ditag sequences are not reported so re-analysis of existing data will have to be carried out by the submitters which hold the original sequence files.

also, it is important to consider how the removal of duplicate ditags influences the initial identification of a gene as regulated in a comparison of two transcript profiles. to assess whether this changes by exclusion of duplicate ditags, we compared the pancreatic acinar library with one derived from pancreatic ductal cells with and without the inclusion of duplicate ditags. excluding duplicate ditags,  <dig> tags was identified as statistically significantly regulated . including duplicates yielded  <dig> new tags, while three fell below the statistical cut-off  . some of the tags mapped to genes that are known to be highly expressed in acinar but not ductal cells, such as variants of the digestive enzymes chymotrypsin, trypsin and elastase. therefore, removal of duplicate ditags alters the interpretation of longsage data at least by limiting the power of detecting changes in gene expression; thus effectively excluding what is likely to be valid transcript changes  from further analysis and interpretation.

athe percentage of tags idenfied as differentially expressed that cannot be matched to database sequences are similar including  or excluding  ditags as well as in this list .

it has been found, that the cross-platform agreement of transcriptome measurements by sage, longsage and dna oligonucleotide microarrays was only modest, in contrast to a good intra-platform reproducibility  <cit> . a majority, but not all of the differentially expressed genes identified by either method can be verified by rt-pcr . therefore, to maximize the accuracy of longsage and hopefully improve the cross-platform consistency, it is important analyze and adjust the tag sequences  for a number of potential biases prior to mapping to database sequences. first, linker sequences should be removed. second, the dataset should be tested with the present algorithm. duplicate ditag counts that falls within the confidence intervals should not be adjusted. but in the case of outliers, these can be manually removed after careful analysis , or automatically adjusted to the predicted count by the algorithm to minimize the impact of artifacts. third, to minimize the number of false positives identified as differentially expressed genes, artifact tags originating from sequence errors should be resolved using sagescreen  <cit> .

CONCLUSIONS
the analyses presented here clearly demonstrate that the present procedure of discarding all duplicate ditags can lead to large errors in longsage studies. instead, the algorithm described here should be used to test longsage datasets and identify potentially biased ditags that should be adjusted or removed. based on the results obtained it is likely, that most of the transcriptome profiles present in the databases have been artificially biased by the removal of duplicate ditags.

