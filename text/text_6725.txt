BACKGROUND
when undertaking polymorphism discovery, the selection of an optimal tool depends on the nature of input sequences. for sequences that are derived from individual clones where there is no heterogeneity, snp discovery can be accomplished by comparing sequence information. when relatively few reads are available, polybayes <cit>  in combination with phrap <cit>  can be used. in this case, phrap performs the sequence assembly and polybayes detects snps by implementing a bayesian algorithm. the polybayes algorithm estimates the conditional probabilities accounting for phred quality scores and depth of reads. however, for analyzing a large sequence dataset, such as shotgun sequence reads from a finished genome, ssahasnp <cit>  may be optimal. the ssahasnp software performs fast searches through custom hashing algorithm for making alignments and screens for snp candidates using neighborhood quality standard, nqs <cit> . the nqs algorithm accounts for the quality value of the bases with variation as well as the quality values in the neighboring bases. mining of snps from est sequences is an attractive proposition in some plant and animal species when genome sequences are not yet available. the steps involved in snp discovery from est sequences include clustering, sequence assembly and snp detection and there are several software options available to handle each of these steps. it is important to use phred quality scores and multiple sequence evidences in calling a putative snp. however est data can only provide very limited putative polymorphisms as this approach requires sequences from different genotypes and depth of reads to reduce the likelihood of false positives. except for the most abundantly expressed genes, the numbers of redundant est sequences are relatively low. also other factors such as alternative splicing, reverse transcription errors, and rna editing further interfere with the predictions even after including sequence quality scores. by constructing a software data analysis pipeline snp discovery from est sequences was successfully implemented for maize  <cit> , human  <cit>  and pine  <cit>  species. in polyploid species like soybean snp, discovery efforts are further complicated by polyploidy where paralog sequences have to be delineated before snp calling can be done .

for large-scale targeted snp discovery from pcr amplified sequence tagged sites containing potential sequence variation using a set of flanking primers, polyphred  <cit>  is widely used because it can detect heterozygous bases from the two alleles within an individual. along with the release of polyphred version  <dig>   <cit> , other software such as insnp  <cit> , novosnp  <cit>  and snpdetector  <cit>  have recently been released. these packages are specially designed for re-sequencing projects and most of them require an anchor sequence to align individual reads to form a sequence assembly. insnp  <cit>  is a windows based package and can be helpful for users not familiar with linux. snpdetector  <cit>  scripts work only on unix/linux platforms and uses the smith-waterman algorithm for aligning reads, as well as a modified version of the nqs  <cit>  method for detecting homozygous snps among different individuals. in addition, snpdetector requires a minimum of a 30% threshold for a secondary peak intensity for detecting heterozygous snps. novosnp  <cit>  is designed with a graphical interface and is written in tcl, so, it can work on windows and unix/linux based platforms. novosnp uses blast  <cit>  for aligning sequence reads and uses a series of filters to reduce false positives. this package is configured to work with a database, and, hence, it makes polymorphism discovery and data storage seamless. other polymorphism discovery software, such as autosnp  <cit> , that rely on redundancy and co-segregation of markers within a sequence are useful when trace data are not available.

a high-throughput polymorphism discovery project involves the analysis and management of different types of data including sequences, polymorphisms, genotypes, and haplotypes, and, hence, all of the analytical steps need to be automated and the information stored in a relational database. bioperl  <cit>  is a rich resource for performing several bioinformatics analyses, however, there are currently no modules available for parsing the output generated by polybayes and polyphred. the perl package, posa  <cit> , contains a script for executing phredphrap and parsing the polyphred output. however, that script ignored indels, so, that program was extensively modified and used in the development of this package. the objective of the work reported here was to develop an open source package for facilitating polymorphism discovery through application of the widely used software, polybayes  <cit>  and polyphred  <cit> , for analysis, storing, and editing of polymorphism information in a relational database through a user friendly web interface. additional features were desired for identifying common haplotypes within a sequence tagged site  fragment and for generating data in the formats required for dbsnp submissions. using a large annotated training dataset derived from polybayes predictions, our group has implemented a machine learning algorithm  <cit>  that improved the efficiency of snp discovery in soybean by reducing the need for expert intervention by 85%. the machine learning component is integrated as a part of snp-phage software.

implementation
the snp-phage software pipeline is run through a combination of unix/linux command line and web browser interfaces. it was implemented in perl and uses standard open source modules such as bioperl  <cit> . snp-phage, however, requires other packages, such as phred  <cit> , phrap  <cit> , crossmatch  <cit> , polyphred  <cit> , polybayes  <cit>  and c <dig>   <cit> . all of this software is freely available for academic use from the links provided at the snp-phage website. an installation guide is provided with the snp-phage package that contains test scripts to check for prerequisite software availability. these test scripts also include test data to check the installation success, the database install, and the web interface .

snp-phage software has three components:

a) relational database schema and tables for storing information about the sts, sample chromatograms and genotypes, consensus sequence, and polymorphisms and haplotypes;

b) scripts for analyzing chromatograms by executing the programs described above in a given sequence , parsing the program outputs for putative snps, and making database entries.

c) implementation of a web interface for viewing putative snps; adding new snps; validating snps; and editing consensus sequence and generating a report containing confirmed snps. the genotype output is of the highest quality base from duplicate samples and/or sequencing reads from both forward and reverse directions. haplotypes present in each sts are also determined.

a flow-chart containing data processing and analysis steps in snp-phage is presented in figure  <dig>  some parameters such as directory locations, database connection parameters, and program options are system specific hence they require customization. these parameters are defined in the config directory and are not hard-coded in the software implementation. the scripts refer to this directory for obtaining the parameters required for their execution. understanding and implementing these steps will require some technical expertise with the unix/linux operating systems. a user manual is also provided that explains the use of various features.

snp-phage software was implemented with the following features.

• a standard chromatogram naming convention is required to facilitate sequence assembly by following the st. louis convention described in the phrap documentation  <cit>  for easy association with sequence tag sites and individual genotypes. a file renaming script  is also provided with this software for help with filename conversion.

• phred was used for base calling because it provides quality scores along with the base calls. while our internal test runs  with the demo version of the tracetuner commercial software provided similar results as phred for high quality bases, the two base-calling software packages gave variable results with low quality bases. neither software was consistently superior.

• phrap was used for sequence assembly of chromatograms from stss, because it has more flexible parameters than cap <dig>  <cit>  to force alignment at lower match scores.

• the snp discovery pipeline includes: 1) polybayes, which uses a bayesian inference engine to calculate the probability that a given site is polymorphic primarily optimized for detecting snps among homozygous individuals; and 2) polyphred, which is optimized for detecting snps in heterozygous individuals. polybayes software has been used to accurately predict snps in humans with est sequences aligned to finished and working-draft quality genomic sequences <cit> . it can also be used to analyze amplified stss from inbred species such as soybean  <cit> .

• chromatograms from several stss can be combined into a batch for automated analysis. the output files from polybayes and polyphred containing the candidate polymorphisms are parsed and entries are made to a relational database.

• a web interface provides access to search or browse options through a list of stss to analyze and validate candidate polymorphisms . additional options include the ability to edit the consensus sequence, add new snps, and to generate reports for each sts containing confirmed snps.

• snp validation can be performed for local or global alignments with candidate snps visualized from a web based graphical interface similar to the consed  <cit>  output screen. the quality of the base at the polymorphism position can be ascertained from the background color of the base on the screen as in consed.

• the snp-phage software currently has a limitation in viewing the underlying trace files. hence, heterozygous snps marked by polyphred have to be visualized using the consed interface. a software update to incorporate this feature will be released at a later date.

• the results generated from a machine learning algorithm along with the multiple features used in the analysis are displayed to aid the decision making process.

• candidate polymorphisms can be either confirmed or eliminated from the web interface after manual inspection. these expert-confirmed polymorphisms are then used to create new database entries of validated snps, to assign a genotype for each sample, to identify haplotypes within an sts, and to make database entries to facilitate dbsnp submissions.

RESULTS
snp-phage has been applied to amplified stss of soybean to discover snps  <cit> . following studies have used snp-phage for the discovery of over  <dig>  snps in soybean stss. a subset of  <dig>  snps from this set was used to generate a high density soybean linkage map . snp-phage was also used in comparative legume analysis. a set of  <dig>  soybean primers were used to amplify genomic regions from seven legumes and resulting inter-species polymorphisms were used to study the evolutionary relationships between these legumes . snp-phage was also used to validate in-silico predicted snps in soybean using est data .

snp-phage is designed to identify a set of putative snps by applying polybayes and polyphred. polybayes and polyphred were optimized for different snp detection scenarios  and inclusion of both packages in the software pipeline enhances flexibility. depending on the species or dna/rna source considered, one of the algorithms may be more appropriate. application of machine learning in polymorphism discovery was shown to improve the efficiency of snp discovery by 85% with snps predicted by polybayes. inclusion of machine learning inference along with a visual interface for easy and quick visualization of snps is likely to also improve the efficiency of snp validation.

snp-phage accounts for differences in snps detected by polybayes and polyphred. when a snp is called by both algorithms, genotypes generated from polyphred are used, because it finds both homozygous and heterozygous bases. polybayes marks each position in a multiple indel as a separate snp, whereas polyphred combines the multiple indels into a single snp, as is required for dbsnp submission. the snp positions in such multiple indels from polybayes can be flagged during snp validation so that they can be combined into a single indel in subsequent analysis. the consensus sequence at snp positions depends on the individuals genotyped, because bases in those positions are derived from the most frequently observed genotypes. for indels, the change is more striking to the user, because it can offset other snp positions in the consensus sequence.

snp-phage can, in principle, be extended to work with other unix/linux based snp detection packages such as novosnp  <cit>  and snpdetector  <cit> . however, these packages use different sequence matching and assembly algorithms, including programs such as blast and sim that may result in different alignments, and thus snp positions may differ.

the interface allows the user to deal with some exceptional cases encountered during the expert snp validation such as  identification of a high quality snp not called by the prediction programs,  poor consensus sequence trimming, and  an incorrect consensus base at the snp position. the interface allows for the addition of the snp, along with the entry of the associated genotype into the database, custom consensus sequence trimming, and editing of consensus sequence bases.

CONCLUSIONS
snp-phage is a simple, user friendly package for automated high-throughput polymorphism discovery. the package is provided with an installation guide and user manual to assist in deployment and implementation of this application. additional pre-requisites for installing this application are minimal and only require those needed for base calling, sequence assembly and polymorphism detection.

polymorphism discovery and validation requires a balance between sensitivity  and specificity . however, these requirements may vary for individual projects. projects driven by the need to reduce sequencing costs may wish to investigate all putative snps thus allowing for false positives; whereas other targeted projects such as those using snps as a biomarker for disease validation cannot tolerate false positives. the polymorphism detection programs attempt to fulfill these requirements by ranking snps by a score/probability value. the number of false positive snps predicted by polybayes and polyphred has been shown to be reduced by additionally considering the alignment and quality of the neighboring bases . the modified version of nqs has been used in snpdetector  <cit> ; whereas, in the machine learning  approach, the required feature values are automatically determined from an expert-annotated dataset  <cit> . snp-phage software calculates and makes database entries for a number of additional features not implemented by other snp detection software. these features can also be used to generate a new custom set of rules for filtering snps. ml was applied only on the snps detected by polybayes. one of the features that can be added for heterozygous snps is the ratio of peak heights, as snpdetector implementation requires this ratio to be at least  <dig> .

snp-phage provides the basic framework for snp detection and validation. other supplementary features and functions are being considered for addition to the interface. these additional features will be provided as updates in future with notifications by email for all registered users. this open source resource is intended to be further improved through user suggestions and encourages participation through provision of their custom scripts to be included in snp-phage. some of these features planned will require availability of additional data such as whole genome sequence to provide genome coordinates, est sequence to annotate the location of intron and exon sites, and protein sequence for annotation as synonymous vs. non-synonymous snps. other scripts that are being customized for incorporation into the snp-phage include trio validation, estimation of θ and fst values  <cit>  and data formatting to provide data in the formats required for performing other analyses such as phylogeny, and phase  <cit>  or haploview  <cit> .

availability and requirements
project name: snp-phage

software: additional file 1



test dataset: additional file 2

project home page: 

operating system: unix/linux

programming language: perl

other requirements: phred, phrap, consed, mysql and perl modules from cpan listed in the project documentation .

license: open gpl

any restrictions to use by non-academics: none

authors' contributions
lm, jg dealt with the computational aspects in the implementation

ic, dh and pc performed the sequencing, snp data generation and suggested important features.

cvt provided overall guidance for this project

all authors read and approved the final manuscript.

supplementary material
additional file 1
snp-phage software package. this compressed file contains all scripts required to create a snp processing pipeline and a web interface for data analysis and visualization that is powered by a backend relational database.

click here for file

 additional file 2
test dataset. this compressed file contains test data for recreating the demo website. it contains the database table entries and chromatogram files to test for proper installation of all functionalities provided.

click here for file

 acknowledgements
the authors would like to thank all anonymous reviewers for their insightful comments and helpful suggestions in greatly improving the quality of manuscript presentation.
