BACKGROUND
short linear motifs  are abundant and ubiquitous recurring protein subsequences that function largely independently of the tertiary structure of the containing protein. slims mediate tasks such as cell signalling, act as recognition sites for protein modification and target proteins for subcellular localisation  <cit> . slims are short  and degenerate  making motif context important for specificity due to the limited number of residues in the interaction interface  <cit> . this simplicity gives them an evolutionary plasticity that is unavailable to globular protein domains, enabling de novo motifs to evolve convergently through point mutations, thereby adding new functions to proteins  <cit> . slims preferentially occur in natively disordered regions of proteins  <cit>  challenging the long standing dogma that structure equals function  <cit> . with 25% - 30% of the human proteome natively disordered and large portions of the interactome unexplained by known domain-domain interactions  <cit>  there is vast potential for novel slim discovery  <cit> .

increased knowledge of slim attributes, through the study of known functional motifs, has enabled advancements in computational methods for slim discovery. this culminated in the discovery of a translin-binding motif, the first novel functional motif to be discovered by computational methods  <cit> . these methods can be split into two distinct classes; rediscovery of known slims and prediction of novel slims. slim rediscovery, which was pioneered by prosite  <cit> , uses regular expression or profile matching to search for novel instances of previously known slims. tools such as the elm  <cit>  and mnm  <cit>  servers use context information such as globularity, conservation or residue accessibility to improve confidence in returned motifs. motif rediscovery techniques have also been used to search for enrichment of known slims in proteins that are associated with particular protein functions, using statistical enrichment to define motifs important for these functions. these methods have been used to discover novel instance of both ken box and eh <dig> transcriptional repressor motifs  <cit> .

several methods have also been suggested for the discovery of novel slims. the most successful of these methods seek to find motifs that are over-represented in evolutionarily unrelated proteins sharing a common attribute . dilimot  <cit>  and slimdisc  <cit>  use this technique, to build upon the scoring schemes of asset  <cit>  and pratt  <cit>  respectively, to successfully discover new, and rediscover known, functional motifs. however, these first generation methods have two important deficiencies:  their scores are biased on motif length and dataset size, making them incomparable across multiple datasets and between motifs of different lengths; and  they do not offer an indication of the likelihood that any motif could reach such a score by chance.

in previous work, we introduced slimfinder  <cit> , a probabilistic method for slim discovery that heuristically accounts for these shortcomings with a two-step scoring scheme. both steps of this scoring scheme use simplifying assumptions that are known to be violated in real data. given that motif probability calculations are relatively approximate  these approximations seem at first glance to be satisfactory. however, in practise we noted in studies searching for motifs across many datasets that consistent biases were emerging, that related to the complexity of the motif, and to the size of the dataset searched. since computational motif discovery is most usually struggling to identify a weak signal against a background of noise, we were motivated to try and eliminate these biases by improving the statistical calculations.

the first step of the slimfinder scoring scheme applies the binomial probability mass function to mean success probabilities across all proteins, denoted here as pμ, to calculate the probability of a given motif occurring by chance in the number of proteins it occurs in, or greater. therefore, this assumes that the proteins in a search dataset all have the same length and composition. here, we introduce a more accurate calculation, pv which incorporates unique success probabilities for each protein, allowing for its length and composition. the advantage of correcting for this effect is that the p-value cut-offs from datasets that have varying sizes of proteins become more comparable, as well as being more realistic.

the second step of the slimfinder scoring scheme computes an approximate significance, sig. this is a dataset-based score, which accounts for the multiple testing inherent in motif discovery, by calculating the probability that any motif in the dataset will be returned with that p-value or less by chance. however, sig approximates the probability of all other possible motifs occurring with a score of p or less as p. here, we introduce the true calculation, sig', that replaces this approximation, and present an efficient algorithm for its calculation. the advantage of correcting for this effect is that motifs of different length, or containing amino acids of very different frequency, are treated equally, so that there is not a bias towards any class of motif.

we investigate the impact of replacing both approximations with the more exact calculations on the overall accuracy of the scoring scheme. each step is independent allowing them to be implemented and tested separately, four significance scoring schemes are discussed , investigating the trade-off between accuracy and efficiency. we discuss the optimal approaches for large-scale studies of multiple datasets.

methods
motif discovery statistics can be defined by  <dig> basic probabilities; p1+, the probability that there are  <dig> or more occurrences of a motif in a protein; p, the probability in a dataset of n proteins that a given motif would occur by chance with its observed support or higher; and sig, the probability that any motif would reach p or less by chance. in this section, each probability will be introduced and discussed, focussing on the speed and accuracy of the statistics, and an efficient and accurate method of calculating sig is described.

exact probability of a given motif support considering unique success probabilities
previous work: mean success probability heuristic
the probability, p1+, that there are one or more occurrences of a motif in a protein is calculated differently by slimfinder and dilimot. the former calculates p1+ based on amino acid frequencies, whereas the later calculates p1+ based on word counts. the merits of each method have been discussed previously  <cit> . here, the calculation of p1+, is based on amino acid frequencies and allows ambiguous/degenerate positions to be evaluated.  

where  

equation  <dig>  p
where the success probability, pmotif, is the probability that the motif will occur at any position in the protein, n is the number of positions in the protein that the motif can occur, m is the motif, l is the number of non-wildcard positions in the motif, mi is position i in motif m, x is the number of degenerate/ambiguous possibilities at position i, mik is the kth ambiguous possibility at position i, f is the background frequency of the amino acid mik and b is the binomial function. the calculation is independent of alphabet and allows the use of terminal characters "^" and "$" denoting n- and c- termini respectively, which is taken into account in calculating motif significance.

equation  <dig> considers both amino acid composition and the length of the protein to calculate the probability. by considering the length  the calculations allow short proteins/peptides  to be scored without bias. the amino acid composition allows for any background amino acid frequency to be incorporated, including the distribution from within a protein, adding flexibility to the scoring scheme.

generally, each protein  will have a unique success probability, p1+. previously, the mean success probability for the motif to occur in any given protein in the dataset, p1+μ, was approximated as the mean of the p1+ values.  

equation  <dig>  approximate p 
the probability of k or more proteins in a dataset containing a given motif one or more times, pμ, may be estimated using i, the incomplete beta function, the cumulative distribution function of the binomial probability mass function.  

equation  <dig>  approximate p
where k is the support of the motif , n is the number of proteins in the dataset and p1+μ is the mean success probability of a motif occurring in any protein in the dataset.

more exact calculation
the binomial function calculation in equation  <dig>  assumes all success probabilities are equal to p1+μ . the binomial equation can be expanded to allow unique success probabilities for each protein, pv, by summing the product of success and failure probabilities for each possible combination of k successes, t, and n-k failure probabilities, f. this computation increases the number of calculations necessary nck fold.  

equation  <dig>  set of all possible combinations of k successes from n trials
where  

equation  <dig>  exact p
example
the error associated with pμ is most easily explained in terms of occasions where p1+ for a protein is  <dig>  a frequent occurrence when masking techniques are used to improve motif discovery . consider a set of  <dig> proteins, with success probabilities for a motif p1+ of { <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> ,  <dig> }.  <dig> proteins contain an occurrence of the motif. the mean success probability p1+ is  <dig>  and the motif has a pμ of  <dig> e- <dig>  when unique success probabilities are used a pv of  <dig> e- <dig> is calculated. in this case, the motif occurring k times or more is roughly twice as unlikely to occur as approximated by pμ. the bias introduced by pμ can therefore be considered conservative estimate.

exact probability that any motif will be returned with a given p-value or less
previous work: motif binomial p-value significance heuristic
slimfinder introduced sig, the probability of any motif, with the same number of non-wildcard positions, occurring with that probability p or less by chance.  

equation  <dig>  approximate probability 
where r is calculated as 20ll- <dig>  l is the number of non-wildcard positions in the motif and x is the maximum length of a wildcard region allowed. effectively, this score assumes that all other possible motifs are equally likely to give rise to a score equal to, or lower than, the motif of interest. however, this is not always true. for example, more likely motifs may have, for all supports, a p-value greater than the observed motif's p-value, hence such motifs may never actually occur with a probability as low as p. sig will always score a given p as being as likely or more likely than it is, making sig a conservative approximation.

more accurate significance
to calculate sig', the true probability of  <dig> or more fixed position motifs  in a dataset occurring with the observed p or lower, it is necessary to calculate, for each possible motif p', the probability that the motif will occur with a score of p or less. an efficient algorithm for the calculation of sig' is available in the appendix.  

where  

equation  <dig>  probability 
equation  <dig>  probability 
example
consider a search for dimers in a dataset with an alphabet, a = {l, w}, of size a =  <dig> and proteins of length  <dig>  for the purposes of simplicity, the example uses global amino acid frequencies for p1+ calculations, whereas the typical case described earlier in the manuscript has individual p1+ probabilities for each protein. the dataset contains  <dig> proteins  with sequences  giving global amino acid frequencies of fl =  <dig>  and fw =  <dig> . the probability that any of the  <dig> possible dimer motifs in the motif space, m,  will occur at any position in a protein are pll =  <dig> , pww =  <dig>  pwl = plw =  <dig>  . the probability that a protein will contain one or more occurrences of a motif is p1+  =  <dig> , p1+  =  <dig> , p1+  = p1+  =  <dig>  . using the binomial and cumulative binomial we can calculate, using p1+ as the mean success probability , the probability that each motif will occur k times  and the probability that each motif will occur k or more times .

incomplete beta and binomial shows the cumulative binomial and binomial p-values respectively for each motif for all supports between  <dig> and n =  <dig>  p1+μ is the success probability of the motif considered. the value in italics indicates the highest scoring motif in the example described. the bold values indicate the values of k for which i < =  <dig> , the pμ value of the highest ranking motif. the five right hand columns are only shown to illustrate how the probabilities in the left hand columns are calculated .

searching the dataset for over-represented motifs, the support k for the motifs are ll =  <dig>  ww =  <dig>  wl =  <dig> and lw =  <dig>  pμ of each motif in the motif space is pμ ll =  <dig> , pμ ww =  <dig> , pμ lw = pμ wl =  <dig>  , making ww the top ranking motif occurring in  <dig> protein with a probability, p, of  <dig> . from equation  <dig>  the significance, sig, of pμ ww is  <dig> . for the example in table  <dig>  the set of support values  are shown in bold. this gives the values of k for which i < = p, as being sll = {}, sww = { <dig> , <dig> } and swl = slw = { <dig> }, therefore p'll =  <dig>  p'ww =  <dig>  and p'wl = p'lw =  <dig>  . as expected, the p' values are all less than or equal to p, illustrating the conservative nature of the sig score. calculating sig', once the individual p' values are known, is straightforward. the sig' for ww is  <dig> -  =  <dig>  .

randomised test datasets
to test each of the  <dig> significance scoring schemes,  <dig> sets of  <dig> datasets containing  <dig>   <dig> and  <dig> proteins were picked at random from the uniprot database  <cit> . these datasets model random interaction networks that are likely to have little or no enrichment for any functional motifs. to allow for the calculation of sig'v, a process that is currently computationally intractable using the calculations described here, a similar set of proteins was created to artificially force p1+ values to be equal for each protein thereby testing the scoring schemes accuracy when no bias is present. a human protein was chosen at random from the uniprot database and the residues where shuffled to create datasets of  <dig>   <dig> and  <dig> proteins, therefore each protein is same length and has the same amino acid frequency and hence, for any given motif, has the same p1+ for each protein.

datasets were analysed using slimfinder with default settings with the exception of statistical calculations that were completed as described in this paper. the statistics described in this paper are implemented in freely downloadable software, as a modification to version  <dig>  of the previously described slimfinder software  <cit> , with additional command line switches introduced for the two calculations .

the programme is available at http://bioinformatics.ucd.ie/shields/software/slimfinder. the version of the slimsuite software package available at time of submission is also included as supplemental information with this paper .

RESULTS
comparing the four statistical scoring schemes to expectation
when tested on randomly created datasets, significance scores for fixed motifs should ideally be uniformly distributed  <cit>  . using datasets of proteins randomly selected from uniprot, we tested to what extent each of the  <dig> scoring schemes rejected the null hypothesis, that the top ranking significance scores from these random datasets are uniformly distributed.

for all motif lengths and dataset sizes tested, sig'v did not reject the null hypothesis, consistent with it being a true significance measure . the other three statistics all reject the null hypothesis to differing degrees, with sig' showing less departure from expectation compared to sig and sigv. sig rejects the null hypothesis for all the datasets. the statistics showed similar effects when considering the divergence of the observed p-values  from the uniform distribution . the degree of rejection of the null hypothesis varies considerably according to the dataset size and the motif length . a heatmap illustrates these effects , showing that the degree of rejection of the null hypothesis for each of the three approximate statistics depends on both the dataset size, and on the length of the motif under consideration. overall, the greatest improvement over the sig statistic is provided by considering the exact probability that any motif may have a p-value of the observed significance or less ; while the correction for varying protein lengths and composition in a dataset has a lesser effect when calculating the p-value of the observed motif .

how comparable are significance values of motifs of differing length, or motifs discovered in different sized datasets?
one of the major biases with using a binomial p-value, pμ, which slimfinder attempted to improve upon, was the incomparability of p-values for motifs of different lengths. pμ is strikingly different for random datasets, depending on whether it is the value for a 3mer or a 5mer . we were interested to discover to what extent a given motif significance score might be comparable for different discovered motifs, and to what extent the score is biased, depending on dataset size and motif length. for each scoring scheme, we compared the returned significance scores obtained with each motif size in each dataset size.

no biases are evident with the sig'v scoring scheme where the hypothesis that the significance scores were sampled from the same distribution was only rejected  for one of the  <dig> comparisons , consistent with expectations. the sig statistic showed some biases, but somewhat surprisingly, the sigv statistic appeared more biased than the sig statistic : in particular, the larger datasets seemed to be biased in a way that the smaller datasets are not . however, it can be seen that the majority of sig correlation between datasets relates to p-values in the range of  <dig>  to  <dig>   and is a related to the schemes conservative bias. the box-plots in fig 2a indicate that sig' is reasonably similarly distributed for all motif lengths and dataset sizes, but it is noticeable that the mean p-value varies more across datasets and motif sizes than sig'v does. what is not clear from these random datasets is the extent to which these two statistics are biased for motifs that are significantly over-enriched .

ambiguity
slimfinder considers subsets of pre-defined residue groupings to allow ambiguity in motif positions; this further adds to the complications of significance calculations and the probability calculations have not been extended to consider these. in general, the true significance calculations described in this paper, when used to calculate the significance of an ambiguous motif, will over-estimate the significance of the motif. in sf <dig> in additional file  <dig>  this is illustrated. for these examples, ambiguous motifs were defined as those with one or more ambiguous position or with at least one variable length spacer, using the default set of ambiguous groupings . sig'v overestimates the significance, ignoring the greatly increased search space of potential ambiguous motifs, in addition to the search space of fixed-position motifs . we note that under the conditions tested, the sig calculation is also conservative in all of the datasets considered here, even in the presence of ambiguity. thus, for ambiguous motifs the sig statistic may provide a more robust heuristic for very roughly approximating absolute significance. however, it must be noted that in general ambiguous motifs will still have a relatively higher sig score than non-ambiguous motifs, so that a single model for ranking of ambiguous and non-ambiguous motifs is not ideal. accordingly, search results within a dataset or across many datasets for ambiguous and non-ambiguous motifs should be considered as two separate rankings, given the current available models.

calculation redundancy
the level of redundancy in the brute force calculation of sig' compared to the use of non-redundant motif groupings  is provide in table  <dig>  for 5mer motifs there is a 75-fold decrease in the number of calculations necessary for the calculation of the same value. since the level of redundancy increases as the length of the motif increases, true sig' calculations are possible for motifs which would been computationally infeasible using brute force calculations.

motif length is the length of the motif. number of partitions is the number of solutions in the set m for motifs of length n. number of motifs is the number of distinct motifs of length l where the order of the residues is important. number of non-redundant motifs is the number of the non-redundant distinct motifs of length l where the order of the residues is not important. proportion of non-redundant motifs is the percentage of motif calculations needed to calculate the true p-value sig' distribution.

computational efficiency
for each motif length considered, the number of calculations necessary to calculate sig', with the algorithmic speedup described , increases the number of calculations a+l-1cl fold, compared to the sig calculation, where a is the alphabet size and l is the motif length . while sig' is in these examples 3- <dig> times more computationally expensive than sig, its calculation is tractable, increasing approximately linearly as dataset size increases . for very large datasets, the computational costs seem to be much less. sigv increases the number of calculations ∑ncj fold, for all values of j between k and n, where n is the number of clusters in the dataset and k is the support of the motif. the rapid increase of sigv calculation runtime as the dataset size increases makes it impractical for larger datasets . sig'v performs poorly compared to sig, it increases the number of calculations a+l-1cl*∑ncj fold, for all values of j between k and n, for each motif length considered. the computational cost of sig'v calculation is unsuitable for high throughput analysis in spite of its superior accuracy; it took over a day on a standard workstation for datasets with more than  <dig> proteins.

comparison of the four scoring schemes with the elm benchmarking dataset
the elm benchmarking dataset is a widely used standard by which motif discovery methods can be tested, compared and trained. although the dataset is biologically unrealistic for most discovery situations , the data allows direct comparison of the attributes of scoring schemes. table  <dig> compares the sig' and sig scoring schemes on the  <dig> elm benchmarking datasets . residues with an iupred  <cit>  score of less then  <dig>  were masked, as were under-conserved residues by relative local conservation masking using metazoan orthologues alignments retrieved by gopher  <cit> .

 the elm dataset used.  the sig' score of the top ranking motif matching the known interaction motif.  the sig score of the top ranking motif matching the known interaction motif.  the regular expression of the true functional motif.  the regular expression of the top ranking motif that matches the known elm. significant motifs  are shown in bold.  the number of proteins in the dataset containing the variant of the motif discovered and the number of proteins in the dataset 

sig' scored the true positive motif as more significant than the sig scoring scheme in all datasets with the exception of the highly significant trg_er_kdel motif which was scored as more significant by sig. for one of these, lig_cyclin_ <dig>  this resulted in the returned motifs becoming significant . two false positives  were also returned as significant by sig' which were not returned by sig, however in both cases these motifs were off target motifs, true functional motifs involved in the regulation of the proteins in the datasets . one other example of an off target motifs was significantly over represented by both scoring schemes, two motifs with strong nuclear localisation, lig_rb and lig_pcna, returned arginine/lysine rich nuclear localisation motifs.

CONCLUSIONS
we have shown how more exact calculations of short non-ambiguous protein motif probabilities may be calculated efficiently, and the computational cost associated with these calculations. we propose the use of sig' calculations as the scoring scheme for motif discovery with current typical computational resources, as it offers the best trade off between speed and accuracy. although not as accurate, the sig score will, in circumstances where a motif is obviously enriched, return a close approximation of the true score. thus, a useful technique for high-throughput analyses is to recover datasets of interest using the quicker sig statistical framework at low stringency  before re-running the data using the more accurate statistics. however, for more general use the sig' statistical framework is both efficient and accurate enough to suffice.

improving these statistical measures has a strong bearing on how to efficiently rank potential novel motifs discovered in searches of many datasets derived from across the interactome. future work will need to focus on developing better statistical measures for ambiguous motifs . the problem is non-trivial as the combinatorial explosion introduced by ambiguity and the complex protein groupings that allow a motif to reach a given support makes a true ambiguous motif significance computationally intractable. advances in methodology  <cit> , dataset design  <cit>  and motif enrichment  <cit> , in association with the statistical framework described here, have put computational slim discovery in a position where it can complement experimental methods for the discovery of novel functional slims. as our knowledge of protein-protein interaction, cellular localisation and keyword classification of proteins improves, these methods should aid in the discovery of the vast number of slims remaining to be discovered by pinpointing particular residues of strong biological interest within a robust statistical framework.

abbreviations
slim: short linear motif; sig: significance.

authors' contributions
nd formulated, developed, refined and tested the methods, and wrote the manuscript. ds was involved in initial discussions of the problem and in the writing of the manuscript. re was involved in the initial formulation, and in the writing of the manuscript. all authors read and approved the final manuscript.

appendix
improving the computational efficiency of the sig' calculation
the major bottleneck in the calculation of sig' for a motif p-value, pμ, is the calculation of p' of all motifs with a cumulative p-value equal to or less than p. for longer motifs the complexity can make search times unfeasable, since the number of possible motifs grows exponentially with motif length. however, methods can take advantage of the inherent redundancy in the motif space due to the commutative nature of the motif occurrence probability calculations, pmotif . motifs which contain the same number of each residue from the alphabet a  will have the same pmotif. this means that the order of the residues in the motif has no effect on a motif's occurrence probability . exploiting the redundancy by calculating motif groupings with the same value pmotif yields large increases in the speed of calculations. the value p' will be the same for each motif in a grouping and therefore it is necessary to only calculate this value once for each group, p'group, rather than for each motif.  

equation  <dig>  sig' calculation for non-redundant motif groupings
a non-redundant sig' can be calculated using equation  <dig>  g is the set of all distinct unordered groupings of residues for each partition in p. a partition describes the number of unique residues occurring in a grouping. for example, there are  <dig> possible partitions for motifs of length  <dig>  q = {,,} meaning a 3-mer can have  <dig> residues which are the same, two residues which are the same and another different residue or  <dig> residues which are different respectively. the set q corresponds to the set p = {,,}. for example, rgg, grg, ggr can be considered as a grouping r|gg, which has a partition p =  and q = . rgd, rdg, grd, gdr, dgr and drg can be considered as a grouping r|g|d, which has a partition p =  and q =  and rrr, can be considered as a grouping rrr, which has a partition p =  and q = .  

equation  <dig>  set of all possible partitions for a motif of length l
the number of possible partitions for a given motif length can be described as the cardinality of set p and follows the series { <dig> , <dig> , <dig> , <dig> } as l goes from  <dig> to  <dig>  each partition has cgi distinct unordered groupings of residues and each of these groupings has cmi possible ordered motif combinations. for example, a grouping with p = ,  <dig> of the same amino acids eg. rrr, can only be chosen  <dig> way while p = ,  <dig> different amino acids, can be chosen  <dig> ways.  

equation  <dig>  number of distinct ordered groupings for a partition
where  

equation  <dig> number of ordered motif combinations in a grouping
to calculate the p'group value for each non-redundant motif group, it is first necessary to define all such groupings. this can be achieved efficiently using the recursive algorithm described in the pseudocode found in sf <dig> in additional file  <dig>  the total number of distinct non-redundant motifs of length l and an alphabet of size a, rnr, is calculated as:  

equation  <dig>  number of non-redundant motifs of length l

supplementary material
additional file 1
slimsuite software package. this zip file contains the slimsuite software package used with this submission.

click here for file

 additional file 2
supplemental materials. this file contains all supplementary tables and figures.

click here for file

 acknowledgements
this work was supported by science foundation ireland and an embl interdisciplinary postdoc  fellowship from embl
