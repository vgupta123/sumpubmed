BACKGROUND
the development of "omics" technologies has represented a revolution in biomedical research allowing the study of biological systems from a global perspective. these high-throughput techniques generate vast amounts of data which have required the development and application of sophisticated statistical and machine learning methodologies in order to analyze and extract biological knowledge.

matrix factorization techniques have become well established methods for the analysis of such datasets. these methods can be applied to the analysis of multidimensional datasets in order to reduce the dimensionality, discover patterns and aid in the interpretation of the data. among the most popular, principal component analysis , singular value decomposition  or independent component analysis  have been successfully used in a broad range of contexts such as transcriptomics  <cit> , metabolomics  <cit>  or proteomics  <cit> .

in  <dig> lee and seung developed a novel matrix factorization technique named non-negative matrix factorization   <cit>  to decompose images into recognizable features. the main difference between nmf and other classical factorization methods relies on the non-negativity constraints imposed to the model. these constraints tend to lead to a parts-based representation of the data because they allow only additive, not subtractive, combinations of data items. in this way, the factors produced by this method can be interpreted as parts of the data or, in other words, as subsets of elements that tend to occur together in sub-portions of the dataset . on the contrary, classical factorization techniques decompose the data matrix into a new set of matrices of any sign, involving complex cancellations of positive and negative elements to reconstruct the original dataset. therefore the interpretation of the factors becomes non-intuitive and difficult  <cit> . the comprehensible properties of the nmf method and the intuitivism of the results it provides have centered the attention of many researches in different fields of science and, in particular, in the bioinformatics field where nmf has been applied to the analysis of gene expression data  <cit> , protein sequences  <cit> , functional categorization of genes  <cit>  or text mining  <cit> .

despite the increasing use of nmf in bioinformatics, most of its implementations are only available as matlab  toolboxes, command line programs  <cit>  or integrated in larger analysis packages  <cit> . even if these solutions are useful, there are situations in which a simple standalone tool to perform a very specific type of analysis, as the ones described in the literature  <cit> , is still needed. this situation has motivated us to develop bionmf, a user-friendly tool that implements the classical nmf algorithm and a new sparse variant, the non-smooth non-negative matrix factorization  <cit>  tailored for different applications proposed in the bioinformatics field.

implementation
bionmf has been implemented as a single standalone application for microsoft windows platform. the application has been written in borland delphi version  <dig> and it does not require any special installation or libraries and thus bionmf is self-contained in a single application file. analysis using bionmf can be executed in three steps:

1) selection of the data set for analysis: bionmf accepts as input data files tab separated text files, which might or might not contain row and column labels. in addition and for compatibility reasons, it also accepts data in the format used by the engene software package  <cit> , which allows multiple annotations per rows and columns. there is no limit, in principle, on the size of the input data . only available memory might practically limits its size.

2) transformation of the data for normalization and to accommodate it for positive constraints: seven normalization methods have been included to pre-process the data before the analysis. after normalization, data can be accommodated to satisfy the non-negative constraints necessary for the nmf algorithm.

3) run analysis: the analysis step has been divided into three main modules, which comprises most of the most important nmf applications proposed so far  <cit> : a) standard nmf; b) biclustering analysis; c) sample classification. all of them make use of the non-negative matrix factorization model described below.

non negative matrix factorization model
nmf is a matrix factorization algorithm originally introduced in  <cit> . this technique can be applied to the analysis of multidimensional datasets in order to reduce the dimensionality, discover latent patterns and, more important, aid in the interpretation of the data. formally, the non-negative matrix decomposition can be described as: v ≈ wh where v ∈ ℝm×n is a positive data matrix with m variables and n objects, w ∈ ℝm×k are the reduced k basis vectors or factors, and h ∈ ℝk×n contains the coefficients of the linear combinations of the basis vectors needed to reconstruct the original data . the main difference between nmf and other classical factorization models relies in the non-negativity constraints imposed on both the basis w and encoding vectors h. in this way, only additive combinations are possible. the number of factors  is generally chosen so that it takes a value less than n and m. this is usually imposed since the one of the main purpose of this model is to reduce the overall dimensionality of the data.

in the case of gene expression analysis, for example, the expression data matrix v can be represented as a gene-experiment matrix, where m is the number of genes and n the number of experimental conditions. the k columns of w, therefore, will have the dimension of a single array  and are known as basis experiments or factors. similarly, the n columns of h are known as encoding vectors and are in one-to-one correspondence with a single experiment of the gene expression data matrix. consequently, each row of h has the dimension of a single gene  and it is denoted as basis gene.

RESULTS
the main window of bionmf application is divided into three groups: data input, data transformation and analysis . the application is able to read the data matrix in raw text format with or without header rows and columns. data can also be transposed for analysis. even if nmf seems to be an robust algorithm  <cit> , specially if compared with other clustering methods like hierarchical clustering or som, a previous normalization step is usually necessary to make more evident the patterns of interest. therefore data normalization is provided as a pre-processing step before computing the factorization. normalization methods provided include data centering, standardization of rows and columns , mean subtraction by rows and columns and the normalization method proposed in  <cit>  that first divide each column by its mean and then normalize each row. after the normalization step, if the data contains negative values, this tool offers a set of methodologies to make it positive:

• subtract absolute minimum: the minimum negative value is subtracted to every single cell of the data matrix   <cit> .

• fold data by rows: this approach was used by kim and tidor for the analysis of log-transformed gene expression data  <cit> . every row  is represented in two new rows of a new matrix. the first one is used to indicate positive expression  and the second one to indicate a negative expression value . this process doubles the number of rows of the data set.

• fold data by columns: in a similar way, this option allows users to make the data positive by folding columns . every column is then represented in two new columns. the first occurrence to indicate positive expression and the second to indicate negative values, doubling in this way the number of columns of the data set.

• exponential scaling: data is exponentially scaled to make it positive. this is an inverse operation of a logarithmic transformation.

the following section describe in details the three main analysis modules implemented in bionmf. more information and step by step examples are included in the project web site.

standard nmf
this module performs the classical nmf factorization using the algorithm proposed by lee and seung  <cit> . in the context of bioinformatics most of the reported nmf applications were intended to create a new representation space in which to perform further analysis. generally, this new space has several advantages compared to the initial representation . therefore, the exact nature of input data matrices, as well as post-processing of bionmf output will depend on the particular application field, where other analysis tools can be used. to exemplify the type of analysis problems where the nmf algorithm has been successfully applied, we include a brief description of four applications in different contexts in biology: gene expression data analysis, biomedical text analysis, protein sequence analysis and functional characterization of genes.

kim and tidor applied nmf for gene expression data analysis in yeast  <cit> . they analyzed a data set containing expression patterns monitored for  <dig> saccharomyces cerevisiae genes in  <dig> experiments involving a variety of strains and conditions  <cit> . expression values represented the ratio of the expression in the experiment to that in a control experiment of wild type grown under standard conditions. in this particular case, they used expression matrix v as an n × m matrix, where m corresponded to arrays  and n to genes. in this application they verified that nmf is able to recognize localized gene expression features that are dominated by a few functional categories, indicating that they represent a grouping of genetic components on the basis of cellular function  <cit> . the novelty of this approach with respect to other clustering methods relies on the fact that nmf produces clusters based on local patterns, grouping sets of genes that behave in a strongly correlated fashion in only sub-portions of the data. they showed that the prediction of functional relationships between experiments using the reduced space yielded by nmf outperforms some conventional approaches.

another nmf application proposed in the context of data analysis in biology is text mining  <cit> . in this case, input data matrix v can be modeled as a gene-document collection represented in a vector space model, where v is an m×n sparse matrix . nmf has been used in this context to find relevant common sub-sets of terms that correspond to latent concepts in the literature corpus relevant to the genes.  therefore, any vector space model, using certain weighting scheme, can be provided to bionmf.

given a factorization rank  selected by the user, standard nmf analysis will produce two new matrices . each factor  in the matrix w corresponds to a semantic feature  while each column in h corresponds to the new representation for a gene as a linear combination of semantic factors . to provide both a more comprehensive representation of the genes, and a more robust clustering, chagoyen et al.  <dig>  <cit>  constructed semantic profiles of gene-documents by combining the results from independent runs of the nmf algorithm, using the same number of factors at each run. for that reason, and to provide bionmf with this capability, nmf can be executed a predetermined number of times with different random initial conditions and results can be saved separately or combined in a single file. in this way additional analysis, for example clustering can be performed using the combination of h matrices from different random runs. e.g. clustering of genes according to similar semantic profiles.

nmf analysis has also being used for the identification of sequence patterns conserved in subgroups of proteins in diverse superfamilies  <cit> . in this case, input data matrix v corresponds to a generalized sequence space  that can be obtained from a fuzzy alignment as defined by heger and holm,  <dig>  <cit> . this fuzzy alignment model probabilistically assigns residues to structurally equivalent positions  of the proteins. columns of w are the basis vectors of the reduced space, and h is the encoding in the new basis. the coefficients of the attributes in a basis vector  reflect the frequency of particular residues in the corresponding protein set. in  <cit> , attention was focused on a small set of attributes, selected by covariance analysis of w matrix obtained at different ranks . the resulting clusters of attributes represented conserved sequence patterns.

finally, nmf has been described to perform functional categorization of genes  <cit> . input matrix v of size m×n  corresponds to a binary matrix of functional associations of genes to their corresponding go terms . w describes the loadings of the genes on the k factors and it is further used in cluster analysis. in the clustering process, the genes are deposited into clusters by using a winner-takes-all approach that finds the factor with the highest loading for each gene from matrix w, providing in this way insights about the most prominent functional categories for each gene.

due to the non-deterministic nature of nmf results might differ from one run to the other. to minimize this effect and in order to select the best factorization results, it is crucial to repeat the process using different random initialization for matrices w and h. standard nmf module provides this functionality using two methods: 1) repeat the process a predetermined number of times and select the best possible solution  2) combine different random runs in a single output file, as proposed in  <cit>  .

standard nmf is therefore a wide-ranging analysis module that is not specifically focused to any particular analysis but more generally oriented to any potential application that might use this factorization method for analysis.

gene expression bicluster analysis
one of the main goals in the analysis of large and heterogeneous gene expression datasets is to identify groups of genes that are co-expressed in subsets of experimental conditions. the identification of these local structures plays a key role in understanding the biological events associated to different physiological states as well as to identify gene expression signatures. classical one-way clustering techniques, especially hierarchical clustering, have been commonly applied to cluster genes and samples separately in order to identify these types of local patterns. in the last few years, many authors have proposed the use of two-way clustering methods  to identify gene-experiment relationships. for a review see  <cit> .

bionmf estimates biclusters using a novel method based on a modified variant of the non-negative matrix factorization algorithm which produces a suitable decomposition as product of three matrices that are constrained to have non-negative elements. the new methodology, denoted as non-smooth non-negative matrix factorization  has been recently presented in  <cit> , and its application in biclustering gene expression patterns has also been reported in  <cit> . nsnmf can also be interpreted as a parts-based representation of the data due to the fact that only additive, not subtractive, combinations of data items are allowed. in particular this matrix decomposition produces a sparse representation of the gene expression data matrix, making possible the simultaneous clustering of genes and conditions that are highly related in sub-portions of the data.

similarly to nmf, the non-smooth non negative matrix factorization model is used to approximately reproduce a gene expression matrix v with m genes and n experimental conditions as a product of three new matrices w, h and s , with dimensions m×k, k×n and k×k respectively where k is the rank of the factorization. the k columns of w have the dimension of a single array  and each row of h has the dimension of a single gene . matrix s, on the other hand, is denoted as smoothing matrix and its task is to demand sparseness in both w and h.

for details of the algorithm see  <cit> . due to the sparseness constraint imposed by the smoothing matrix s, each factor obtained by nsnmf contains a relatively small set of genes with non-zero coefficients that determine a local gene expression feature. these genes behave in a strongly correlated fashion in a sub-portion of the data and constitute a gene module. in the same way, coefficients in h are used to determine the set of experimental conditions highly associated to these modules. in other words, the set of genes and experimental conditions that show high values in the same basis experiment  and its corresponding basis gene , respectively, are highly related in only a sub-portion of the data and constitute a gene expression bicluster.

once the factorization has been completed, results can be explored using a graphical user interface , allowing the selection of interesting patterns by removing those genes and samples with very low values in their factor and encoding vector. this is accomplished by sorting the original data matrix by basis genes and basis experiments, which creates a natural ordination in which genes and samples are arranged based on their association to a given local pattern. one of the advantages of the factorization model we are using is that its sparse nature reinforces those genes and experiments that significantly sustain the factor while masks those that do not add any value to it at the same time. therefore, by simply applying a threshold on both genes and samples for a particular factor we obtain a bicluster. bionmf offers the graphical interface for selecting biclusters using this criterion .

similarly to the standard nmf module, the biclustering process allows the multiple execution of the nsmnf algorithm with different random initialization conditions for matrices w and h. the solution that best reproduces the original data matrix is then selected for the analysis.

regarding processing time, this algorithm takes one minute and twenty seconds in a  <dig>  ghz pentium m processor to process  <dig> iterations with a data set containing  <dig> genes with  <dig> experimental conditions.

sample classification
this module implements the approach proposed in  <cit>  where nmf was used to classify tumors samples. this methodology uses nmf to reduce the dimension of expression data from thousands of genes to a set of metagenes to be used for identification of distinct molecular patterns and class discovery. in this particular application the nmf algorithm groups the samples into k clusters, being k the factorization rank.

to determine the most suitable number of meaningful clusters for a given dataset a model selection, that exploits the stochastic nature of the nmf algorithm, was also implemented in bionmf as proposed in  <cit> . since nmf might vary its results depending on the random initial conditions, it is important to evaluate the stability of the clustering structure of the data into k classes when running the algorithm a certain number of times using different random initialization.

this model selection method is based on the idea of consensus clustering  <cit> , that quantitatively evaluates the fact that if a clustering into k classes is strong, it is expected that sample assignment to clusters would not vary significantly from run to run. the consensus matrix is estimated for a given factorization k by calculating the average connectivity matrix of a certain number of random runs. the connectivity matrix is a square n×n matrix, where n is the number of samples. each entry i, j of this matrix takes the value of  <dig> if the sample i and sample j belong to the same cluster and  <dig> otherwise. this is determined in the nmf model by checking if both samples, i and j, which are represented by columns i and j of matrix h, contain a maximum value in the same factor . the entries of the consensus matrix then range from  <dig> to  <dig> and reflect the probability that samples i and j cluster together. if a clustering is stable, it is expected that the consensus matrix will not to vary significantly among runs. therefore, its dispersion between  <dig> and  <dig> measures the reproducibility of the class assignments with respect to random initial conditions.

the samples  of the consensus matrix are then reordered using the average linkage method to provide visual insights of the clustering stability . in addition, a quantitative measure of the matrix dispersion is also calculated based on the cophenetic correlation coefficient  <cit> . this coefficient equals  <dig> for a perfect consensus matrix  while tends to  <dig> when the level of dispersion of the consensus matrix increases. according to  <cit> , the proper values of k should be selected where the magnitude of the cophenetic correlation coefficient begins to fall . this methodology provides a general method for robust molecular pattern discovery than have been effectively used in  <cit> .

bionmf fully implements this methodology using the divergence-based update equations  <cit>  to solve the nmf problem, as was proposed by brunet et al.  <cit> . figure  <dig> shows the results of this method in classifying acute myelogenous leukemia  and acute lymphoblastic leukemia   <cit> . this data set has been used in  <cit>  when this classification approach was reported.

it is important to mention that the cophenetic correlation coefficient has also been used to estimate the optimum factorization rank  in the biclustering application  <cit>  and in the analysis of semantic profiles using the scientific literature  <cit> . this module can then be used as a previous step to for the rest of the analysis modules included in this application.

this methodology has an important computational efficiency drawback due to the fact that a large number of runs per factorization rank  are needed for the sake of robustness. even thought bionmf implements a fast version of this method , careful attention should be paid when using this method with large datasets.

CONCLUSIONS
non-negative matrix factorization method has gained high popularity in the bioinformatics field due to its potential in providing new insights about the complex relationships in large data sets. although this algorithm is conceptually simple, its use by the scientific community still demands a certain level of programming skills to fully exploit it. the bionmf application aimed at filling this gap by providing the research community with a tool containing the functionality needed to run either a simple exploratory analysis or to answer more complex analysis questions in an easy-to-use environment.

current implementation of bionmf includes a basic functionality for running the original nmf algorithm, which can be easily used with any data set. to demonstrate the usefulness of this method we described different types of analysis that have been proposed in different experimental contexts. this includes applications for finding functional gene modules  <cit> , analysis of protein sequences  <cit>  and extraction of semantic features from the scientific literature  <cit> .

more concrete applications of nmf have also been included in bionmf tool. for example gene expression biclustering, which has been incorporated in this application using a new sparse variant of nmf  <cit> . additionally, sample classification using a robust classification methodology is also implemented  <cit> . although some of the analysis modules implemented in bionmf are based on complex methodologies, the whole analysis process remains very intuitive and simple for a final user.

there are still open problems; however, that requires a more detailed study. that is the case of the available methods for making the data non-negative, in particular, for the gene expression applications described in this work. in this application we have implemented four methods to cope with this problem. nevertheless, we believe that there is no best method for all applications and results are very much dependent of the data and problem. a full comparison of methods to transform gene expression data into positive data sets is more than welcome and it represents an interesting topic of research.

bionmf will also be systematically updated to support new functionalities and applications that might potentially help in the analysis of biological information using this methodology or some of its variants. in this way we expect that this tool helps researches in this field in using a method that it is conceptually simple and powerful for the process of data analysis.

availability and requirements
project home page: 

source code availability: 

operating system: microsoft windows 

programming language: delphi pascal v.7

other requirements:  <dig> ×  <dig> resolution

license: gpl

any restrictions to use by non-academics: none

abbreviations
nmf – non-negative matrix factorization

pca – principal component analysis

svd – singular value decomposition

ica – independent component analysis

nsnmf – non-smooth non-negative matrix factorization

aml – acute myelogenous leukemia

all – acute lymphoblastic leukemia

gui – graphical user interface

go – gene ontology

authors' contributions
apm, rdpm and pcs conceived the study. apm and rdpm designed and developed the software. pcs, jmc and mc developed the tests and documentation, ft developed the computational optimization of the method. apm, jmc and rdpm managed and coordinated the project. all authors participated in writing and revising the final manuscript.

