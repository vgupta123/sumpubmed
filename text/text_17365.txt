BACKGROUND
the specific transcription of genes is largely controlled by the interplay of transcription factors  attached to their specific binding sites . it is commonly accepted that for higher organisms the concurrent binding of two or more tfs is required to change the transcriptional state of a gene. in addition, the evolutionary conservation of such binding pattern is assumed – although differences are expected  <cit> .

a number of computational tools have been developed to process experimental data for subsequent prediction of potential tfbss and affected pathways. experimentally determined binding regions are sequenced and compared for common patterns by elaborate statistical methods as e.g. implemented in meme  <cit>  or weeder  <cit> . the obtained binding site data are collected in databases such as jaspar  <cit>  or transfac  <cit> . finally, with different prediction methods  <cit>  occasionally incorporating homologous genes  <cit>  a huge amount of data for potential binding sites can be generated.

currently several software packages or web servers are available to deal with these data. in general the different approaches are restricted to certain aspects or limited in the amount of data they are able to handle. for example, some tools are restricted to a only few genes  <cit>  and just very few implementations utilize information from orthologous genes  <cit> . other methods require additional experimental data such as expression levels  <cit> . moreover the servers are not always easy to use or cannot be complemented with user data. to our knowledge, no service is available for performing combinatorial queries on a genome wide level with concurrent inference of orthologous genes. finally, only very few tools are freely available for local installation.

our client-server based software, d-light, provides a new tool which aims to overcome most of these limitation.  d-light allows for combinatorial searches within or between different species on a genome wide scale.  the software provides a simple java-based graphical user interface  available as browser applet, java web start application or as stand-alone java application.  users can add new promoter sequences, positional frequency matrices  representing the tfs or generic annotations for their subsequent usage in the combinatorial queries.  a user management enables privacy.  client and server are open source software and can be installed locally. we also provide a public d-light server pre-filled with data from human, mouse and rat.

below we first describe the technical concepts and their implementation. we then use d-light to determine on average useful promoter sizes and score cutoff values. we finally demonstrate the relevance of d-light on a biological example.

implementation
we first discuss design principles of the d-light system regarding datasets, access control and data retrieval. then we describe server and client characteristics. a scheme of software components and data flow is shown in figure  <dig>  the implementation of d-light solely employs open source software.

design principles
d-light implements a gene centered concept for data storage and access. the promoter is seen as a continuous region on the genomic dna sequence which is associated with a certain gene and labeled with an accession code. users added sequence data, however, may comprise any piece of genomic dna labeled with a unique accession code. d-light supports multiple genomes defined during server setup. genomic coordinates provided for a certain promoter allow linkage to external genome browsers.

the second type of data stored in d-light are features, which are in general binding sites of a certain transcription factor. user-added data may contain any type of features, with or without an associated score. if the user-added features are tfs with an associated pfm, an integrated prediction method allows the assignment of the tfs to all currently stored promoters.

all user-added data, namely promoters, features and the annotated locations thereof are private. default data calculated during the d-light server setup are accessible to all users. a certain user thus queries the union of default and his private data.

inquiries to the server for the occurrences of certain features  are performed in two steps. first a list of promoters is generated, where at least one hit appears. only during visualization of a certain promoter, all hits on that promoter are calculated . this optimizes the response time for the interactive database queries. complete hit lists are generated on request and can be downloaded in text format , which then requires more time.

server
all data are stored in a mysql relational database. the database schema is optimized for speed rather than for space requirement. stored procedures additionally speed up complex queries.

the server setup is controlled by an xml formatted setup file and performed with python scripts. by default, the scripts download data from ncbi, the jaspar ftp server and our web site. if d-light should use different data sources or prediction tools the setup scripts can be easily modified. related comments are included in the corresponding scripts.

the controller is written in java to utilize rmi  for the client. annotation data transfer is captured by the biodas protocol using the java based mydas server  <cit>  .

client
the client is written in java and communicates with the server via rmi. the gui is based on awt/swing. the annotation viewer uses the genoviz toolkit  <cit> . the client provides multiple query instances. the data required to visualize certain queries are stored in distinct objects which subsequently allows to change quickly between views.

all data visualized in lists, such as genes or features, are equipped with a filter which dynamically displays only records matching a regular expression style criterion.

sequential data flow on user queries
the numbers  <dig> to  <dig> in the flowchart  reflect the sequential data flow during a typical user query to display annotations for a set of genes.  a query string is passed to the controller, which translates it to sql queries.  the sql query results in a list of matching genes which is passed to the client . when the user selects a gene, the biodas server is contacted . then, the biodas server formulates a sql query  and returns the data via a das-xml envelop .

tfbs prediction
the built-in binding site scanner, pyfscan, is written in c++ and implemented python as extension. a stand-alone version of the tfbs scanner for usage independently of d-light is included in the server package. by default, pyfscan calculates log-likelihood ratio scores with uniform background distribution ba = bc = bg = bt =  <dig> :

 s=∑i=1llnfa,iba 

where i is the ith column in the pfm, a denotes the current base given by the respective dna sequence, fa,i is relative frequency of base a in column i and l is the length of the pfm.

the scores are converted into p-values using the method of staden  <cit> . raw scores are converted to normalized scores ranging from  <dig> to  <dig>  where  <dig> corresponds to the maximum reachable score of a given pfm.

retrieving promoter data
promoter data are extracted from ucsc chromosome files. currently we only provide promoter data for genomes with assigned refseq ids. since d-light implements a gene-focused concept, a certain refseq id may only appear once in the promoter set. in practice, ucsc assigns some refseq id to several chromosomal locations. if this is the case, we sort by chromosome name and take the first one. this way, the assignments in normal chromosomes are preferred compared to “random” or “unknown” entities, e.g. chr <dig> is preferred to chr1_random. in hg <dig>  multiply used ids affects 3% of all ids. in many cases these are non coding rnas or micrornas.

the chromosomal location information is taken from the respective refgene tables. following ucscs strategy we extract ± <dig> kb, ± <dig> kb and ± <dig> kb regions relative to the proposed tss. in contrast to ucscs strategy for providing promoter fasta files we also include sequences with unknown tss. in this case, the css  will be known. in many cases the tss and css are within a few hundred bases, and the extracted promoters are likely to include an active tss .

for cross-genome search homology information is required. we use the homology relations defined by the gene product rather than by genomic alignments. the homologous groups are derived from ncbi homologene database  <cit>  and transferred to the mysql database during the d-light server setup.

default settings of the server
the space an time requirements of d-light depend essentially on the promoter sizes, the size and composition of the pfm database and the p-value cutoff of the prediction method. we aimed to find parameter settings which are useful for an “average” gene. considering the average density of predicted tfbs and average gc content , we decided to use ± <dig> kb promoter sequences by default. we also include genes with unknown tss . our defaults include the promoters for human, mouse and rat. there are, however,  <dig> genomes with refseq associations available  and provided for download on our web server.

in accordance with fimo  <cit> , which we used as reference tfbs prediction tool during our software development, the p-value cutoff is set to 10− <dig>  by default, the jaspar core vertebrata set is enabled in d-light, resulting in  <dig> usable pfms which can achieve scores with a p-value smaller than 10− <dig> 

RESULTS
we first show a statistical analysis of the promoters from the human genome regarding the distribution of predicted tfbs with respect to different parameters. then we perform a case study applying d-light to a microarray experiment based gene sets from a cell cycle study.

statistics on promoters
from the hg <dig> we created ± <dig> kb promoters set with annotated tss consisting of approximately  <dig>  sequences. we then predicted tfbs for the jaspar core vertebrata pfms using the log-likelihood ratio score with different p-value cutoffs.

we first plotted the frequencies of predicted binding sites the gc content of the promoter sequences in intervals of  <dig> bases . with a loose p-value cutoff  the hits are almost equally distributed but with less hits around the tss.

the average gc content of the applied pfms is  <dig> %. therefore less hits appear in the gc reach regions around the tss on average. the negative peak is rather small compared to the ground level. the pfms which remain at lower p-value cutoffs only have a marginally higher gc content . the positive peaks which appear at more stringent p-value cutoffs presumably appear because of the increasing number of real binding sites.

this result is supported by a comparison to encode  <cit>  data. we extracted the txn factor chip track data from the ucsc database and calculated the distance of the peak centers to the nearest tss of refseq genes and plotted the relative frequencies of occurrence again with bin width of  <dig> bases . the shape of the distribution is very similar to the curve of the predicted tfbs at p-value cutoff <  <dig> and <  <dig> respectively. note that the base level of predicted tfbs is much higher than the base level of experimentally determined tfbs.

the peaks of all tfbs curves lie within two kilo-bases upstream the tss and  <dig>  kilo-bases downstream. therefore we consider at least a ± <dig> kb region in d-light.

unfortunately, for many genes the tss is not known. however, when the gene is coding for a protein, in general the start of the coding sequence  is known and annotated. we were interested in the distribution of the distance between the proposed tss and css, in case that both entities are annotated. the distance varies between  <dig> base and a  <dig>  mega bases. the quantiles are  <dig> ,  <dig> , and  <dig>  . therefore, in the majority of these cases the tss is in close proximity to the css. in the human genome there are about  <dig> genes with refseq association annotated with a css but not with a tss. these genes are neglected by the ucsc rules for creating promoter sequences. we subsequently include such genes and use the css as anchor for defining the “up- and downstream” region, as only a fraction of those genes will have the tss outside the proposed promoter region.

of significant importance for studying gene regulation on the basis of predicted tfbs’s is the balance between statistical significance of the hits and potentially false hits. different authors use different p-value cutoffs for their methods to predict tfbs, commonly between 10− <dig> and 10− <dig>  we therefore investigated the reachable significance of the  <dig> jaspar core vertebrata pfms using our built-in prediction method. in figure  <dig> we plotted the percentage of matrices able to achieve a certain p-value, given a uniform background distribution. with a p-value cutoff of 10− <dig>  <dig> pfms can not obtain hits, namely gata <dig>  prrx <dig>  ets <dig>  nfe2l1::mafg, arid3a, arnt, arnt::ahr, gata <dig>  mzf1_1- <dig>  nfic, pdx <dig>  sox <dig>  yy <dig>  zeb <dig>  znf354c, and sox <dig>  the most significant hits can be obtained with the pfm pax <dig> 

using the same dataset and prediction method as mentioned above we calculated the number of hits  below a certain p-value cutoff . the percentage is decreasing linearly with the cutoff until a p-value of 10− <dig>  then the curve flattens presumably due to the low number of different pmfs effective for those p-value cutoffs. we also have been interested in how many different corresponding promoters are affected. until a cutoff of 10− <dig> all promoters receive a hit. when increasing the significance in a tfbs search from the default cutoff 10− <dig> to 10− <dig> , only half of the matrices will report hits from only  <dig> percent of the promoters. it is thus important to know down to which p-value cutoff a certain pfm is able to obtain hits. a table for the jaspar core vertebrata pfms is given in additional file  <dig> 

comparison with similar tools
we have compared the capabilities of d-light with eight similar publicly accessible services. while some of the tools use a pure html/javascript approach, others including d-light implement a java-client software. we investigated regarding six properties:  the tool uses precalculated tfbs.  it enables combinatorial queries, either by searching for co-occurrences of tfbs or clusters of tfbs or comparison between occurrence in a set of homologous sequences with the final goal to decrease false positive predictions.  the tool provides access to sequences of multiple genomes. this is implicitly the case when multiple sequences can be uploaded.  the tool accepts sequences uploaded by the user.  the tool accepts pfms uploaded by the user. and , the results can be downloaded in a textual, tabular form, or textual results can easily be copy-pasted from the corresponding web page for further processing by the user. the results are summarized in table  <dig> 

a short survey of how the tools characterize themselves on their respective web page, the corresponding web links and some remarks are given in additional file  <dig>  note that there are other similar software tools such as seqvista  <cit>  or geneact  <cit> , which were not accessible or fully working at the time of writing the manuscript. we therefore could not properly evaluate these tools for adding them to the table.

application to a microarray dataset
cheung et al. demonstrated the applicability of their software geneact  <cit>  by using the microarray data set  deposited in ncbi gene expression omnibus  <cit>  by cam et. al  <cit> . the gse <dig> set contains expression data of cell cycle dependent genes in t98g fibrosarcoma cells. cheung et al. defined differentially expressed genes  and non differentially expressed genes  by f-test p-value cutoff of p <  <dig>  and p >  <dig>  respectively and provided the corresponding lists of genes as additional file  <dig> to their publication. we extracted the list of genes, respectively the corresponding nm numbers and prepared the positive and the negative list by adding a ‘$’ sign to end of each nm number  to enforce full length accession code matches in d-light while ignoring the sequence version number.

cheung et al. found that the e2f family binding sites are over-represented in the positive set. the jaspar entry e2f <dig> represents the binding pattern of the e2f family members such as e2f- <dig> or e2f- <dig>  the authors proved the correctness of the predictions for some of the genes of the positive set by conducting chip assays  <cit> . we wanted to know if one can get comparable results using d-light. for this purpose we pasted the positive list to d-light to query the tf annotations in hg <dig>  and downloaded the resulting data in a comma separated values  file format and did the same for the negative list. from the gse <dig> positive set  <dig> genes were represented in d-light, and  <dig> genes from the negativ set.

we then counted the occurrences of all annotated tfs, calculated the average occurrence per gene pt¯ and nt¯, where t is one of the tfs provided by d-light. for each t we calculated the ratio r=pt¯/nt¯. the top ranking over-represented tf is indeed e2f <dig>  followed by nfya  and usf <dig>  which is in accordance to the results of cheung and coworkers. the ratios delivered by our computational experiment, however, are rather low. we repeated this analysis for various p-value cutoffs. the results are shown on table  <dig>  at high p-value cutoffs no overrepresentation is observed. the lower the cutoff, the higher are the ratios. unfortunately, the minimum reachable p-value of a certain pfm is limited and the predicted hits disappear below a certain p-value cutoff. in order to obtain evidence for the reliability of the ratios we applied the bootstrap function of r to calculate the 95% confidence intervals of the pt¯ and nt¯ values. in any case the average values are within the 95% ci.

ratios of predicted tbfss per gene are shown for different p-value cutoffs and four different top ranking tfs. n/a indicates, that the cutoff is below the minimal reachable p-value for the respective pfm.

we then performed queries with the same lists of genes, but now using the d-light feature to cross-check if a certain binding site is also predicted in the homologous mouse gene . by doing so, the number of usable genes  reduces to  <dig> and  <dig> respectively. the ratio of over-representation increase to  <dig>  for e2f <dig>  which demonstrates the value of incorporating orthologous information to improve the quality of the predictions.

the tf occurrences counting in the csv formatted data files was performed using a simple python script  but using excel should be also feasible for an experienced excel user. we extended the python script to search for over-represented pairs of the tfbs with a minimum sequence separation of  <dig> and a maximum sequence separation of  <dig> base pairs. the five top ranking pairs are e2f1-nfya, mycn-usf <dig>  myc::max-usf <dig>  usf1-usf <dig> and foxc1-rreb <dig>  equipped with these results one now could use d-light to search for other genes which have co-occurrences of e.g. e2f1-nfya or query for other partnering factors for e2f <dig> 

CONCLUSIONS
d-light is a platform independent client-server software to integrate, store and query annotation data for promoters for an arbitrary number of genomes. a major benefit is the smooth integration of user supplied small scale data with pre-assembled large scale data. d-light complements other computational tools in the context of predicting and analyzing gene regulation.

software components responsible for data import are written in python and thus can easily be adapted to handle other annotation data than tfbs or other prediction methods thereof. both, client and server are open source. the software can be installed locally in sensitive environments.

the analysis of a non redundant human promoter data set has shown that on average up and downstream tss regions are equally covered with potential tfbs’s and that on average a ± <dig> kb region the most densely annotated one. however, d-light is not restricted in this manner and may be set up with any promoter sizes.

for the next version of d-light we consider to include the complete genome sequences which then should overcome the currently narrow definition of a promoter region. as shown in the array data use case example, some external scripting is required to search for over-represented tfbs in certain sets of genes. we will investigate also other potential use-cases and include the required procedures and statistical analyses directly into d-light. then, import and export of annotations and sequences in standard file formats such as gff <dig> will be an issue. finally, links to other useful databases such as ncbi nucleotide, ncbi protein, pubmed or pdb will be established.

availability and requirements
project name: d-light

project home page: http://biwww.che.sbg.ac.at/dlight

operating system: client platform independent, server requires linux

programming languages: java, python, c++

other requirements: the client requires java  <dig>  or higher, for server see installation manual

any restrictions to use by non-academics: none

binaries and source is also provided in additional files  <dig> and  <dig> 

competing interests
the authors declare that they have no competing interests.

authors’ contributions
jl, te, mf, sg, cl designed and implemented d-light. cjz performed the statistical analyses and the example applications. pl conceived the study, contributed to implementation and data analysis and wrote the text. all authors read and approved the manuscript.

supplementary material
additional file 1
p-values for jaspar pfms. table with the lowest reachable p-value for the  <dig> jaspar core vertebrata pfms.

click here for file

 additional file 2
comparison with similar tools. short survey of how the tools characterize themselves on their respective web page and the corresponding web links.

click here for file

 additional file 3
installation package. server and client software for local installation.

click here for file

 additional file 4
source code package. source code of server and client.

click here for file

 acknowledgements
the authors thank gerald lirk, fritz aberger and stefan wegenkittl for helpful comments. jl receives a fellowship of the austrian study grant authority.
