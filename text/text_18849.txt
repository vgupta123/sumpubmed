BACKGROUND
the high-throughput nature of terminal restriction fragment length polymorphism  makes this technique amenable for generating comprehensive datasets in the study of microbial communities. despite continued improvements, the analysis of these datasets still requires numerous steps and data manipulations in order to interpret the results. these steps often become obstacles to the analysis, as they are time-intensive and prone to user and analytical error. currently, some of the greatest obstacles of t-rflp data analysis are: i) distinguishing true peaks from noise, ii) aligning peaks across samples iii) creating a two-way data matrix of t-rfs by samples from tabulated raw data, iv) rapid manipulation of data matrices, and v) determining which multivariate analysis is most appropriate for a particular dataset. collectively, these obstacles create research inefficiencies, reduce method standardizations and may limit the amount of information gained from the analysis overall. to address these obstacles, we have developed t-rex , a free, web-based tool to aid in the analysis of t-rflp data. in this paper, we introduce and outline the functions of t-rex and how it addresses each of the above obstacles.

distinguishing true terminal restriction fragments  from background fluctuations in fluorescence is often a major challenge in t-rflp data analysis. the selection of a baseline threshold can dramatically affect the complexity of the community fingerprint and downstream analyses, resulting in signal loss or noise retention. a common procedure is to apply an arbitrary baseline threshold across all samples to delineate true peaks from noise  <cit> . however, this approach is less than optimal, as noise in a sample varies in proportion to the amount of dna subject to analysis, causing variation in the proportions of signal to noise between profiles. various approaches have been described to address this issue  <cit> . in particular, those that seek to objectively eliminate noise on a sample by sample basis, such as a variable percentage threshold  <cit>  or recursively selecting true peaks based on standard deviations of peak areas  <cit>  can be more effective at minimizing this bias.

while the base pair size of every t-rf is determined in relation to an internal size standard, sizing errors can occur due to random fluctuations, purine content, and fluorophores  <cit> . these analytical errors in determining fragment length can result in trf-drift between samples, in which the same fragment is incorrectly assigned a different size in different samples. these errors are either ignored and treated as analytical error, corrected through painstaking manual alignment  <cit> , or aligned using an automated approach  <cit> . however, to date, there have been no reports on the effects of these three approaches. since most peak alignment software isn't integrated with downstream multivariate analyses, it is often difficult to determine the effects of this alignment on the overall interpretation of the data.

multivariate statistical analyses are commonly required to interpret t-rflp data and to examine the impact of environmental variables or treatments on microbial community composition. raw t-rflp data exported from genemapper™, peak scanner™, or similar size-calling software is typically in a tabulated or listed format, where one column contains all the records for each variable . however, these data often need to be formatted into a two-way data matrix to facilitate import into a statistical software package capable of analyzing multivariate data. the formatting of tabulated raw data into a data matrix is generally performed manually or with an application such as a pivot table in ms excel, after samples have been labeled with information pertaining to the experimental design . these formatting approaches can be laborious and error-prone.

a thorough analysis of large t-rflp datasets requires various data matrix manipulations, such as examining all three types of data , relativization of peak height or peak area, averaging replicated samples, examining specific experimental factors, deleting spurious t-rfs, etc. most spreadsheet software applications aren't amendable to these more sophisticated manipulations, making an exhaustive analysis of these data difficult. in our experience, the rational exploration of t-rflp data, which properly accounts for experimental design, replication, and differences in signal to noise ratios can reveal patterns in ordinations that are obscured in less complete approaches to data analysis  <cit> .

finally, there is a lack of consensus in the literature today about which statistical analyses are more appropriate to analyze t-rflp data. in a comparative study of multivariate methods, culman et al.  <cit>  reported that the sample heterogeneity and percent interaction effects of a t-rflp dataset can be used as criteria to select the appropriate statistical approach for data analysis. although sample heterogeneity can easily be calculated, the calculation of interaction effects is more algorithmically involved. culman et al.  <cit>  also demonstrated the utility of the additive main effects and multiplicative interaction  model as a robust and advantageous method for t-rflp analysis. this model is found in only a few multivariate software packages offered today.

currently available software for t-rflp analysis
currently, there are few options to choose from when analyzing t-rflp microbial community data. most software that has been developed is aimed at referencing t-rflp profiles with a sequence database , group samples based on various classification procedures and then reference these profiles to a clone library. however, a drawback is that this software is written in three separate languages  requiring three separate platforms. these platforms are all primarily command line driven and can be cumbersome to inexperienced users. sas also requires a purchased license for use. in addition, t-rflp stats offers no labeling procedure to designate and format raw data, nor does it perform any ordination analyses, argued by some to be superior to classification procedures for the exploratory analysis of microbial community data  <cit> . a few commercial software packages have become available in recent years that offer a range of features regarding electropherogram manipulation, with some limited multivariate procedures, most notably gelquest , genemarker , and torast . however, the high costs of these programs make them inaccessible to some research labs. in addition, features and functions vary widely between these programs, as most were not primarily designed to facilitate t-rflp analysis.

we developed t-rex to address current obstacles encountered in t-rflp data analysis. we sought to build a program that integrated pertinent functions to streamline t-rflp analysis. t-rex allows users to i) label raw data with attributes related the experimental design of the samples, ii) determine a baseline threshold for identification of true peaks over noise, iii) align t-rfs in all samples , iv) construct a two-way data matrix from labeled data and process the matrix in a variety of ways, v) produce several measures of data matrix complexity, including the distribution of variance between main and interaction effects and sample heterogeneity, and vi) analyze a data matrix with the ammi model. t-rex offers users a consolidated, flexible and rapid analysis of t-rflp data.

implementation
t-rex is a web-based application found at the address: . the program is free and requires only a web browser and an internet access to use. the home page outlines the program's features and introduces the user to a template of menu buttons . these menu buttons correspond to a certain action performed on the data. since these actions are to a large extent independent, any of the buttons can be used at any time, without the need to reload or upload the same data again. although no particular sequence of actions is imposed on the user, a typical flow of analysis is illustrated in figure  <dig>  users can work as a guest or may become a registered user, for increased functionality.

uploading data and labeling procedure 
the first step in using t-rex is to create a project. a new project is created by uploading and labeling raw data. this process happens simultaneously and requires two files: i) the raw data file and ii) the label file. the raw data file is the tabulated file that is exported in genemapper®, peakscanner™, or similar size-calling software that contains the peak information for a set of samples. the label file contains a set of labels/attributes that describe each sample and often correspond to factors in the experimental design. both files should be simple text files in tab-delimited format . once a project is created, it can be renamed, merged, or deleted in the my projects page. users can also come back to pre-existing projects and load them in this page for further manipulation.

t-rex has several functions to appropriately handle replicated, missing or multiplexed  <cit>  t-rflp data. users can define what samples are replicates when uploading data  and t-rex will provide information based on these defined replicates. missing data occurs when there is a discrepancy between samples in the raw data and label files, or when poor quality samples are flagged due to data processing procedures. t-rex accounts for missing data, allowing users to omit samples of poor quality without sacrificing information replicated data provide. in addition to replicated and missing data, t-rex is amenable to multiplexing t-rflp methodologies. if a sample contains multiple fluors, peaks of the same fluor are processed as a unit of peaks, keeping them distinct from peaks of other fluors. the program documentation outlines specific guidelines for dealing with replicated, missing, or multiplexed data.

viewing and editing individual samples 
the sample summary page is synonymous with the home page of a particular project . all samples are consolidated to show the total number of peaks, total peak height and peak area, as well as the properties relating to the experimental factors assigned in the labeling procedure. the sample summary page also shows users how data processing procedures  have removed peaks originally found in the raw data file.

individual samples can be viewed, edited, and even removed from the analysis in the sample details page, accessible by selecting the sample id in the sample summary page. once viewing an individual sample, the user will see individual peak properties and will be able to manipulate labels, remove individual peaks of that sample, or mark the entire sample as missing data within the project. the sample details page also allows users see the effects of data manipulation on the reconstructed electropherograms of samples .

filtering out noise from true peaks 
t-rex uses the approach outlined by abdo et al.  <cit>  to find true peaks and reduce background noise. true peaks are identified as those whose height  exceeds the standard deviation  computed over all peaks and multiplied by the factor specified in the box provided. the procedure is then reiterated with the peaks which were not identified as true ones. the iterations continue until no new true peaks are found. the noise filtering can be applied to all samples or just selected samples in the active project. users should select an appropriate standard deviation multiplier based on the original electropherograms and results of the filtering procedure. the program allows for rapid manipulation of the multiplier and subsequent reviewing of results in the samples summary page if a user wants to determine an appropriate multiplier empirically . at any time the filtering procedure can be cleared and the data reverted to their original state with the 'clear filtering' button.

automated alignment of peaks 
peak alignment in t-rex is performed on the set of currently active peaks and occurs automatically whenever this set changes as a result of data manipulation by the user. t-rex offers users two functions to align peaks in the align t-rfs page. with the default option , peaks are simply rounded to the nearest nucleotide  size. alternatively, an automated alignment of peaks across all samples is also possible. this function models the approach taken by the software program t-align  <cit> . briefly the smallest peak across all samples is identified and tagged. peaks within the range specified by the clustering threshold are then identified and grouped into a t-rf. the next smallest peak across all samples not falling into the first t-rf is identified and tagged. peaks within the specified clustering threshold are identified and grouped with the second t-rf. this process continues until all peaks are grouped into a t-rf.

grouping samples into environments 
the environments page allows users to rapidly classify samples into environments based on the given labels. this approach is especially useful when replication in an experiment occurred at multiple scales  and a user wants to compare results based these different ways of defining replication. users can assign and/or reassign replicated samples into environments by using the provided checkboxes to define the set of labels that determine an environment. samples will be considered replicates  if they have identical sets of checked label values. the environments page can be used as an alternative to specifying replicates at data upload, or to change the environment assignments made at the upload stage.

export labeled data to use elsewhere 
the export labeled data page was designed for users who want to take advantage of t-rex's rapid labeling procedure and data manipulation functions, but analyze their data with another software program. after data are uploaded and labeled, users can export the labeled data directly, or can manipulate the data before exporting. the sample summary page indicates the current status of a project and will reflect the exact details of the data that will be exported.

data matrix construction and ammi analysis 
the data matrix/ammi page allows users to first construct a two-way data matrix and then run the ammi model on this data matrix. data matrix construction involves six steps. the first two steps require that all peaks be assigned to a particular t-rf and that each sample be associated with an environment. typically, both these conditions are automatically satisfied and require no special action. the third step allows users to specify which type of data to use for data matrix construction , and if these data are to be averaged across replicates and/or relativized within samples. the fourth step allows users to select which experimental factors should be included in the data matrix. users have the option of selecting all, or only a subset of specific fluors and/or factors to be included in the data matrix and subsequent analysis. the fifth step allows users to omit rare t-rfs or samples with poor peak representation.

t-rfs can be omitted based on number or percentage of occurrences across samples. total number of t-rfs or the cumulative peak height or area can be used to eliminate certain samples. this t-rf and sample filtering step represents a final quality control on the resulting data matrix. selecting 'create data matrix' in the sixth step will take the user to another page where a data matrix is ready for download, and various data matrix properties are displayed, including total numbers of samples and t-rfs present, the maximum, minimum, and average number  of t-rfs across samples, and sample heterogeneity.

at this point the user is able to export the data matrix for analysis with another software package, or continue with the ammi analysis by clicking 'view ammi analysis'. choosing the latter will take the user to another page where a scatterplot displays the ammi ordination scores and four output tables summarize results. the first table reports the full anova table; the second table reports the estimations of interaction sum of squares  for pattern and noise, if the data are replicated. the third table reports the percentages of variation from each main effects and interaction source. the fourth table shows the percentage of interaction signal variation that is captured by the first interaction principal components axes . several output files are also generated and available to download from this page. the specifics of these files are outlined in table  <dig> and the details of this page are described more fully in the t-rex documentation.

summary of results and output 
the results summary page reports the results of relevant basic data matrix properties and summarizes the results of the ammi analysis in one place. the 't-rf abundance table' reports the number of samples  and percentage of samples  in which each t-rf occurs. all generated output files are also available for download at this page.

example dataset
we used t-rex to analyze 16s t-rflp data generated from soils under two different management histories–harvested tallgrass prairie and adjacent agricultural fields–from five different sites across north central kansas . soil was sampled at  <dig> different depth intervals  in june  <dig>  t-rflp procedures were conducted as previously described  <cit> . the data were subjected to several quality control procedures–t-rf alignment , noise filtering  and elimination of samples with less than  <dig> t-rfs. this initial processing deemed that all  <dig> samples were of good quality and suitable to include in the final ordination analyses. processed data were subject to the ammi analysis with t-rex in two separate ways–first, with data defined as un-replicated  and second with each site defined as a replicate . analyzing data as un-replicated was performed to gain insight into variability between sites; a second analysis with sites defined as replicates allowed for a more focused analysis on the experimental factors of primary interest–management history and depth. with replicated data, the ammi analysis provides a calculation of interaction pattern and noise, providing a more resolute picture of the strength of the interaction term.

defining replication was easily performed in the environments page. sample heterogeneity calculations provided by t-rex were high relative to t-rflp datasets previously encountered  <cit> . as a result, we also used nonmetric multidimensional scaling  to analyze the data. the t-rex-constructed data matrices were then exported and subjected to nms in r  <cit>  via the metamds function in the vegan package. nms parameters were manipulated in a variety of ways, but the final analyses were performed with metamds default parameters with the following exceptions: autotransform = false,  <dig> runs. nms ordination results were graphed in r. after observing the ammi ordination results in the scatterplot provided by t-rex, graphing scores were exported and graphed in r for publication purposes.

in addition to ordination results, the ammi analysis provides a breakdown of the contributions of variation from the three sources in the data matrix, i) t-rfs, ii) environments, and iii) t-rfs × environments interactions. the variation from t-rfs reflects variability in the means of different t-rfs, while the variation from environments reflects the number of peaks or overall signal strength in t-rflp profiles. the variation from t-rfs × environments interactions reflect how t-rfs differentially respond with the environments. for our research objectives, the interaction variation was the source of primary interest, as we were concerned with the response of microbial community profiles  to different depths and management histories . culman et al.  <cit>  found that variation due to interaction effects reflect how similar or dissimilar the microbial communities are, and could be used as a tool to objectively assess differences across multiple datasets.

RESULTS
analysis of all the samples in the dataset revealed that depth was the primary driver of bacterial community structure , as this factor was captured by the first interaction principal component . differences in management history  were secondary drivers of community structure, separating out on ipca <dig>  some differences between sites could be observed, but no consistent trends were apparent in this ordination . although sample heterogeneity was high for this dataset , nms analyses proved to be no more discriminatory than the ammi analysis in revealing trends . the data were further analyzed by examining the relationship of depth with each management history individually. samples from prairie soils were easily removed from the dataset by selecting only the agriculture factor during the data matrix construction in t-rex. analysis of the agricultural samples alone revealed similar trends with depth  and resulted in a sample heterogeneity of  <dig> . differences in sites were also observed, as values of the ipca  <dig> loosely reflected differences in sites. the analysis of bacterial communities from prairie soils revealed that differences in site were the primary driver of community structure in these soils , while differences in depth were a secondary driver . sample heterogeneity in the prairie dataset yielded was  <dig> .

analysis of the sources of variation of the un-replicated dataset revealed that bacterial communities from agricultural soil had the largest variation from interaction effects . redefining the dataset so that each site was a replicate resulted in a decomposition of the interaction effects into pattern  and noise. this approach again revealed that the agricultural soil had the greatest variation of interaction effects , which were composed of  <dig> % pattern and  <dig> % noise . in contrast, the bacterial communities from the prairie sites had a relatively low interaction pattern of  and high interaction noise of  <dig> %, indicating the majority of the interaction was idiosyncratic noise. the much larger contribution of interaction signal in agricultural sites compared to prairie sites, indicates that bacterial communities in these soils shared greater differences among samples than did the bacterial communities in prairie soils.

the t-rflp dataset in this study contained three factors , all of which were detectable drivers of bacterial community structure. however, the strength of site differences varied depending on management practice. hence, exploratory data analyses and data matrix manipulation were required to elucidate which factors exerted the greatest influence on bacterial community structure within a specified treatment. t-rex aided in an integrated and rapid manipulation of these data matrices, enabling a thorough analysis of this dataset.

in addition to rapid data matrix manipulation, t-rex also produced a more robust dataset, as prior to data matrix construction, the data were subjected to several quality control procedures–t-rf alignment, noise filtering, and elimination of samples with less than  <dig> t-rfs. this initial processing ensured that all samples were of acceptable quality. the calculations of sample heterogeneity and interaction effects generated by t-rex were also used as prescriptive indicators that the data were complex and that non-parametric analyses, such as nms, may yield more discriminatory ordination results. however, the overall trends revealed by nms did not differ from the ordination results of the ammi analyses .

CONCLUSIONS
t-rex facilitates an integrated and streamlined analysis of microbial community data with a suite of flexible functions that allows researchers to choose the most appropriate data manipulations based on research objectives. t-rex also enables researchers to implement the ammi analysis, a method which holds many advantages for microbial community data analysis. in addition, this software provides a tool to the research community to rapidly and robustly test the effects of various data processing methods on the overall results of datasets. many of these processing methods are known sources of analytical variability, but there is no consensus in the literature of how to most appropriately minimize this variability. we intend to focus the continued development of t-rex on a more sophisticated t-rf alignment algorithm, as well as integrating nms and permutational multivariate analysis of variance. t-rex will allow microbial community analyses to continue to develop as an important tool in understanding microbial community dynamics and their effects on ecosystem processes.

availability and requirements
- project name: t-rex

- project home page: 

- operating system: platform independent for users

- programming language: microsoft asp.net and ms sql server platforms

- license: gnu gpl

- any restrictions to use by non-academics: none

authors' contributions
sc contributed to all sections of the software's development and drafted the initial manuscript. rb wrote all of the source code and contributed to the software's overall development. hg contributed to sections on the ammi analysis, the anova calculations, and the integration of matmodel. hcq contributed to the development of data processing procedures and helped with testing of the software's functions. db provided counseling on issues related to data processing and analysis, and guided the project's development. all authors contributed to the writing of the manuscript.

