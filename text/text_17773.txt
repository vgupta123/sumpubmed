BACKGROUND
numerous genomes from species of the three kingdoms are now available  <cit> . a major current aim of biological research is to characterize the function of genes, for instance their cellular regulation pathways and implications in pathology  <cit> . high-throughput analyses  combined with statistical and bioinformatics data analyses are necessary to decipher such complex biological process  <cit> . microarrays technologies allow the characterization of a whole-genome expression by measuring the relative transcript levels of thousand of genes in one experiment  <cit> . for instance, their relevancies were proved for the classification/identification of cancer subtype or diseases  <cit> .

however, technical limitations or hazards  lead to corrupted spots on microarray  <cit> . during the image analysis phase, corrupted or suspicious spots are filtered  <cit> , generating missing data  <cit> . these missing values  disturb the gene clustering obtained by classical clustering methods, e.g., hierarchical clustering  <cit> , k-means clustering  <cit> , kohonen maps  <cit>  or projection methods, e.g., principal component analysis  <cit> . in practice, three different options can be considered. the first method leads to the elimination of genes, i.e., information loss  <cit> . the eliminated genes may be numerous and among them some may be essential for the analysis of the studied mechanism  <cit> . the second method corresponds to the replacement by zero  <cit> ; it brings up a different problem in the analysis. indeed, real data close to  <dig> will be confused with the mvs. thus to limit skews related to the mvs, several methodologies using the values present in the data file to replace the mvs by estimated values have been developed  <cit> .

the most classical method to estimate these values is the k-nearest neighbours approach , which computes the estimated value from the k closest expression profiles among the dataset  <cit> . this approach was applied to dna chips by troyanskaya and collaborators  <cit>  and rapidly became one of the most popular methods. since this pioneer study, more sophisticated approaches have been proposed, like sequential knn   <cit> .

simple statistical methods have been also proposed as the row mean  <cit> /row average method  <cit> , or approaches based on the expectation maximisation algorithm , e.g., em_gene and em_array  <cit> . principle of least square  has been also widely used, e.g., lsi_gene, lsi_array, lsi_combined and lsi_adaptative  <cit> . kim and co-workers have extended the least square imputation to local least square imputation   <cit> . however this method is only based on the similarity of genes for estimating the missing data. others more sophisticated methods like the bayesian principal component analysis   <cit>  combines a principal component regression, a bayesian estimation and a variational bayes  algorithm.

the mvs replacement in microarrays data is a recent research field and numerous new and innovative methodologies are developed. we can noticed the work of bar-joseph et al. who described a model-based spline fitting method for time-series data  <cit>  and schliep et al. who used hidden markov models for imputation  <cit> . tuikkala and co-workers have investigated the interest to use go annotation to increase the imputation accuracy of missing values  <cit>  as kim et al.  <cit> . hu et al. and jörnsten et al. have incorporated information from multiple reference microarray dataset to improve the estimation  <cit> , while gan co-workers takes into consideration the biological characteristics of the data  <cit> . hua and lai did not propose a new method, but assess the quality of imputation on the concordance of gene prioritization and estimation of true/false positives  <cit> .

in addition we can list the following relevant methodologies applied in mvs replacement for microarray analysis: support vector regression  <cit> , factor analysis regression  <cit> , ordinary least square impute  <cit> , gaussian mixture clustering  <cit> , lincmb  <cit> , collateral missing value estimation  <cit> , linear based model imputation  <cit> , dynamic time warping  <cit>  or iterative knn  <cit> .

in a previous study, we estimated the influence of mvs on hierarchical clustering results and evaluated the effectiveness of knn approach  <cit> . we observed that even a low rate of missing data can have important effects on the clusters obtain by hierarchical clustering methods. recently, this phenomenon was confirmed by wong and co-workers for other particular clustering methods  <cit> .

since our work, numerous replacement methods  have been developed to estimate mvs for microarray data. most of the time, the new approaches are only compared to knn. in this study, we decided to evaluate the quality of mv imputations with all usable methods, and their influence on the quality of gene clustering. the present paper undertakes a large benchmark of mvs replacement methods to analyze the quality of the mvs evaluation according to experimental type , percentage of mvs, gene expression levels and data source .

 is given the name of the methods, the authors, its availability, if we have used it  or not  and the publication year.

 <dig> package bø t.h.

 <dig> package kim h.

RESULTS
general principle
our goals were also  to evaluate methods that experimental scientists could use without intervention,  to select only published methods, and  to analyse influence of the gene clusters. indeed, some studies have been done to compare numerous methods, e.g.,  <cit> , but does not go through the clustering; while less frequent researches goes through the clustering, but test only a limited number of imputation methods as  <cit> . we so have searched all kinds of published imputation methods with available dedicated softwares or codes, whenever the operating system, language or software. from this search, we selected  <dig> available replacement methods, which were compatible with high-throughput computation. others methods had not been used due to the unavailability of the program despite the indication in the corresponding papers or to impossibility to modify the source code to used our microarrays data.

error rate for each replacement method
• em_gene <cit> : this method is always associated to very high rmse values, which range in an interval from  <dig>  to  <dig>  for a rate τ ranging from  <dig>  to  <dig> %  and decrease for values from  <dig>  to  <dig> . such a curved profile is observed for the datasets os and gh2o <dig> . for the other dataset, rmse increases as expected , but is always associated to high rmse values.

• knn <cit> : its rmse values for all six data files always range between  <dig>  and  <dig> . the increase of τ only affects slightly the knn approximation, at most  <dig>  for the datasets b and os. this constancy of rmse values implies that for high rates of missing data  the rmse values remain acceptable.

• sknn <cit> : despite the fact that sknn is an improvement of knn, their rmse values are surprisingly always higher than the one of knn . only with the dataset b, sknn performs slightly better than knn .

• llsi <cit> : the average rmse values of llsi ranges mainly from  <dig>  to  <dig>  for most of the dataset. its performance could be considered as median and its effectiveness is close to the lsi_gene method. its rmse values increase gradually with the increase of τ, i.e.,  <dig>  from  <dig>  to 50% of missing data. it is the less efficient method based on least square regressions. however for the dataset l, this method is the most powerful after the lsis methods .

• lsi_gene <cit> : the effectiveness of lsi_gene is slightly affected by the increase in the percentage of missing data. for each data file, the values of rmse range between  <dig>  and  <dig> . these results are close to those observed for methods llsi and knn, i.e., methods giving of the medium results ranging between the best  and the less efficient methods .

• row mean <cit>  and row average  <cit> : low rmse values are observed for l  and b  datasets. only for dataset gheat, the rmse value is high . strikingly this method shows equivalent and or better results than more elaborated approaches.

• bpca <cit> : for the oc, os and gh2o <dig> datasets, and for τ comprises in the range  <dig>  to 10-15% of missing data, bpca appears to have one of the lowest rmse values , only bypass by two other approaches. this method is powerful for low rates of missing values. however it should be noted that the efficiency of bpca is strongly reduced when the rate of missing data increases. this is particularly notable in the case of the gheat dataset. the values of the rmse increases from  <dig>  to  <dig>  . for a τ value higher than 30%, bpca performs worst than most of the imputation methods. this observation is less striking for the other datasets. for b and os datasets, rmse values increase by a maximum of  <dig>  for τ increasing from  <dig>  to 50%. it is a good illustration of the dataset specificity related to the quality of the imputation methods.

• lsi_array, lsi_combined, lsi_adaptative and em_array <cit> : their rmse values are always lower than  <dig> . remarkably, it is true even for a rate of missing data that equals 50%. the average rmse values of em_array are slightly lower than the ones of the three other methods. it is striking when the rate of missing data exceeds 20%. a pair-wise comparison shows that em_array is better than the three other methods; its approximation is better in 2/ <dig> of the case. if τ is higher than of 33%, this method remains the best one in 80% of the cases .

 is given the percentage of better approximation of one method versus another for a rate of missing value t equal to  32% and   <dig> % with the os dataset. the percentage is given in regards to the method given at the left.

the different datasets influence the quality of the imputation
notably, this order depends on the dataset, but still the changes are often limited. for instance, em_gene performs better than knn and sknn for b dataset, but does not perform better than the others. strong changes could be noted for os that allows sknn to be better than llsi and lsi_gene. nonetheless, it is mainly due to the poor quality of the estimation of these two methods with this dataset. for the l dataset, we observed that llsi method performs well and remains better than other lsis and em_array methods. gheat dataset that is associated to the highest average rmse values has strong particularities as  knn performs better than bpca, row mean, lsi_gene and llsi, and  bpca and row mean performs poorly compared to other methods, being only slightly better than em_gene. hence, it appears that gheat is a more difficult dataset to impute.

extreme values
the same methodology was followed to analyze the extreme values, i.e., 1% of the microarray measurements with the highest absolute values. they have major biological key role as they represent the highest variations in regards to the expression reference . figure  <dig> presents similar examples to these of figure  <dig>  but this time, only extreme values were used in the analysis. thus, the percentage of missing values τ can be differently apprehend, i.e., τ = 10% corresponds to 10% of the extreme missing values, so  <dig> % of the values of the dataset. at one exception, all the replacement methods decrease in effectiveness for the estimate of the extreme values. performance of the methods also greatly depends on the used dataset and especially -in agreement with previous observation - in the case of the gheat dataset. a description of the behaviour of each method is presented in additional file  <dig>  knn  <cit>  is the less powerful method in most of the case . its average rmse value is often  <dig>  higher than the second poorest imputation method. interestingly, in the case of the extreme values, sknn improved greatly. em_gene  <cit>  remains one of the less powerful methods for the imputation of missing values. llsi  <cit>  method effectiveness remains similar compared to the other methods of its group. row mean  <cit>  and row average  <cit>  have rmse values increased by  <dig>  to  <dig>  for the yeast dataset, which is correct in regards to other methods . their efficiencies are median compared to the other methods. bpca  <cit>  has a correct behaviour. but contrary to most of them, it is very sensitive to the datasets. lsi_gene  <cit>  has the lowest rmse values observed after em_array, lsi_array, lsi_combined and lsi_adaptative. this result shows that lsis, whatever the specificity of their implementations, are effective to impute the values missing.

em_array method is again the most performing method . its rmse values are almost identical to the ones previously computed. lsi_array, lsi_combined and lsi_adaptative are slightly less efficient than previously seen. thus, the clustering we have proposed remains pertinent when only the extreme values are implicated. lsi_array, lsi_combined, lsi_adaptative and em_array are always good, and the less efficient methods can be associated now to considerable rmse values. noticeably, knn efficiency collapses and the influence of datasets on the imputation quality is sharpened.

clustering in question
a critical point in the analysis of dna data is the clustering of genes according to their expression values. missing values have an important influence on the stability of the gene clusters  <cit> . imputations of missing values have been used both to do hierarchical clustering  and k-means  <cit>  .

for every hierarchical clustering methods the cpp values are different, but the general tendencies remain the same:  imputation of small rate τ of mvs has always a strong impact on the cpp values, and  the cpp values slowly decreased with the increased of τ. between  <dig>  and 3% of mvs and the cpp values decrease by  <dig> to 3% per step of  <dig> % of mvs. from τ equals  <dig>  to 20% of mvs, the values of cpp decrease overall by 10%. for higher rate of mvs the decreasing of cpp is slower. this loss of stability is present in the case of the k-means method and for each type of hierarchical classification .

individual evaluation of the methods highlights the lack of efficiency of the em_gene imputation method; it obtains always the lowest cpp values, i.e.,  <dig>  to  <dig> % less than other approaches. at the opposite, em_array, lsi_array, lsi_combined and lsi_adaptative are associated to the highest cpp values. in the case of the methods with a median efficiency, e.g., row_mean, their cpp values could be assigned as median compared to the values of the other methods. figure 5b shows the particular example of os dataset. cpp values of bpca  are close to the most powerful methods . moreover, in the classical range of τ less than 20%, it is the best. as seen in table  <dig>  bpca is one of the best approaches for this dataset. hence, common trends can be found between the quality of the imputation method and the gene cluster stability.

in addition, evaluation of imputation methods shows that the cluster quality depends on the dataset. for instance, with the dataset os, imputation of missing values with knn method gives an average cpp value  that equals  <dig> %, while the average cpp values for all the other methods only equals  <dig> % whereas its rmse value is one of highest . the cpp differences are mainly bellow 5%. these results show that an improvement has been obtained since last study. nonetheless, no new approaches had drastically improved the quality of the clustering. interestingly, k-means approach had similar tendencies, underlining that this low improvement is not due to hierarchical clustering.

another question is the comparison between hierarchical clustering algorithms and k-means. nonetheless, comparison only between hierarchical clustering algorithms is already a difficult task. comparison with k-means is so more difficult. indeed, the use of the same number of clusters to compare the hierarchical clustering algorithms with k-means can leads to a wrong conclusion. indeed, for an equivalent number of clusters, most of the cpp values of k-means are lower than cpp values obtained with hierarchical clustering algorithms. however, it is only due to the dispersion of observations within the clusters obtained by k-means approach. thus, to have an unbiased comparison, the dispersion of genes within cluster between k-means and hierarchical clustering algorithms must be computed. it had been done, as previously described  <cit> . following this approach, ward and complete linkages were defined as the best approaches to assess an unbiased comparison. they have both cpp values lower than k-means cpp values. the differences were often higher than 5% underlining the interest of k-means approach to cluster gene expression profiles.

distribution of the observations
when index cpp is calculated, only one group is taken into account. to go further, we used another index, named cppf that allows to take into account the five closer groups, and to check the pairs of genes remaining joint partners. the values of cppf are higher than those of the cpp, e.g., 20% for the ward. methods associated to high cpp values have also high cppf values, while methods with low cpp values have also a lower cppf values. these weak variations shows that often a part of the observations, not associated to the original cluster could be find in its vicinity. these results are entirely in agreement with our previous results  <cit> . it shows here that the novel imputation methods have not permit to get closer related genes with better improvement.

the analysis of associations could also take into account the non-associations. for this purpose, clustering agreement ratio  has been used which considers both associated and non-associated genes. car values are higher than the one of the cpp due to the calculation of the pairs of genes remaining dissociated. indeed, it is more probable than the genes are dissociated than associated according to the number of treated genes and the number of generated groups. for the os dataset, the highest values of the index car concerns ward classification and are ranging between  <dig>  and  <dig> %. for the gheat dataset, it ranges between  <dig>  and  <dig> %. complete linkage, average linkage and mcquitty have lower car values . for k-means classification, the values are higher  <dig> to 2% compared to ward classification, 10% better than mcquitty and complete linkage and 13% to average linkage. this results underlines that k-means allows so a better stability of gene clusters.

discussion
imputation
since our previous analysis  <cit> , numerous new mvs imputation methods have been proposed. some appeared to be true improvements in regards to the computation of rmse. in particular, em_array is clearly the most efficient methods we tested. for τ < 35%, it is the best imputation method for 60% of the values, and for τ > 35%, in 80%. this feature was confirmed by the analysis of extreme values. lsi_array, lsi_combined and lsi_adaptative follow closely the efficiency of em_array. we have unsuccessfully tried to combine these four different methods to improve the rmse values. no combination performs better than em_array.

we can underline four interesting points:

i. as expected, the imputation quality is greatly affected by the rate of missing data, but surprisingly it is also related to the kind of data. bpca is a perfect illustration. for non-kinetic human dataset, mvs estimations were correct, whereas for the gheat dataset the error rate appeared to be more important.

ii. the efficiency of row_mean  is surprisingly good in regards to the simplicity of the methodology used .

iii. even if knn is the most popular imputation method; it is one of the less efficient, compared to other methods tested in this study. it is particularly striking when analyzing the extreme values. sknn is an improvement of knn method, but we observed that rmse values of sknn were not better than ones of knn. it could be due to the use of non-optimal number of neighbours , as for knn. it must be noticed we used kopt defined by  <cit> , this choice has a direct impact on the imputation values.

extreme values are the ones that are the most valuable for the experiments. the imputation of extreme value missing data shows that -except for em_array- the effectiveness of all the methods is affected.

our results are so in good accordance with the results of brock and co-workers  <cit>  who found that methods from bo and co-workers  <cit> , kim and co-workers  <cit>  and oba and co-workers  <cit>  are highly competitive. however, they consider "that no method is uniformly superior in all datasets"  <cit> . our results are simpler to summarize as we observe -thanks to our distance criteria- a grading between the effectiveness of the methods. llsi of kim and co-workers  <cit>  has a correct behavior for all datasets while bpca of oba and co-workers  <cit>  is strongly dependant of the dataset. at the opposite, the methods implemented by bo and co-workers  <cit>  remain the most efficient in all cases. moreover, some implemented methods of bo and co-workers  <cit>  have not been tested by  <cit> , but are the most efficient. all these results are reinforced by the analyses of extreme value imputations.

an important point must be not forgotten, we have, as the other authors, e.g.,  <cit> , used the entire dataset, i.e., no specific selection of interesting profile gene had been done. it could have importance in terms of quality of the imputation values and consequence on the clustering.

clustering
a strong assumption of the microarray data analysis is that genes with similar expression profiles are likely to be co-regulated and thus involved in the same or similar biological processes. different types of clustering and classification methods have been applied to microarray data, e. g., some classical as k-means clustering  <cit> , self-organizing maps  <cit> , hierarchical clustering  <cit> , self organizing tree algorithm  <cit> , and some dedicated approaches as dsf_clust  <cit> , re-sampling based tight clustering  <cit> , cluster affinity search technique  <cit> , multivariate gaussian mixtures  <cit> , model-based clustering algorithms  <cit> , clustering of change patterns using fourier coefficients  <cit> , nearest neighbor networks  <cit> , fuzzy clustering by local approximation of membership  <cit>  or multi-dimensional scaling  <cit> .

given one particular dataset, different clustering algorithms are very likely to generate different clusters  <cit> . this is true when large-scale gene expression data from microarrays are analyzed  <cit> . comparison of different clusters even obtained with the same classification approach is still a difficult task . thus, to assess the relevance of missing value imputation methods, we observed the behaviours of different hierarchical clustering methods and k-means clustering using cpp, cppf  <cit>  and newly introduce car index. results follow exactly the observations done on rmse values . only one method seems ambiguous: knn. indeed, its cpp and cppf are higher than expected. it is mainly due to the selection of the genes in the different datasets. we have decided at the beginning to not discard any genes, i. e., we have absolute no a priori. thus very flat profiles have been conserved and empower knn that prefers to predict values closer to zero than the other methods . it generates clusters with lot of zero, these clusters are so stable. for the majority of the methods, the order of effectiveness of the methods for the maintenance of stability within the groups between various classifications is identical. combination of cpp, cppf and car index underlines the interest of k-means clustering in regards to hierarchical clustering methods. for comparable clusters, k-means gives better values.

wang and co-workers does not found a strong difference between the three imputation methods they used, i.e., knn, bpca and lls, in the classification performance  <cit> . the only comparable extensive study has been done by tuikkala and co-workers  <cit> , they have focussed interestingly on the go term class and use k-means. they have tested six different methods with less simulation per missing value rates and less missing value rates. but, the important point is they have not tested the methods found the most efficient by our approach. we also slightly disagree with their conclusion about the quality of bpca  <cit> . it can be easily understand as only a very limited number of clusters has been tested ; in our case, we have supervised the choice of cluster numbers , leading to a higher number of clusters. this higher number is so more sensitive to the quality of clustering. it must be noticed we have used euclidean distance and not pearson correlation, it was mainly to  stay consistent with our previous research, and  as we have not filtered the data, pearson correlation could have aggregated very different profiles. as the time computation was very important, it was not possible to test the two possibilities.

CONCLUSIONS
the dna microarrays generate high volume of data. however they have some technical skews. microarrays studies must take into account the important problem of missing values for the validity of biological results. numerous methods exist to replace them, but no systematic and drastic comparisons have been performed before our present work. in this study, we have done more than  <dig> . <dig> independent simulations, to assess the quality of these imputation methods. figure  <dig> summarizes the results of our assessment. the method em_array, lsi_array, lsi_combined and lsi_adaptative are the most performing methods. bpca is very effective when the rate of missing values is lower than 15%, i.e., for classical experiments. the values estimated by the row_mean are quite correct in regards to the simplicity of the approach. knn  does not give impressive results, it is an important conclusion for a method used by numerous scientists. the methods lsi_gene and em_gene are not effective but they are to be tested with data files made up of little of genes and a great number of experiments. these conclusions are to be taken carefully because the quality of the imputations depends on the used datasets.

a major disadvantage of numerous methods is their accessibilities. we have tested here only a part of the methods as some are unavailable and others had not worked properly. some methods used here could not be used easily by a non-specialist. it could be interesting so to have implementation of all the different methods in a useful manner with the standardized input and output file format. in the second time, graphic interfaces for the methods could be helpful. these remarks are particularly relevant in regards to recent papers that proposed novel approaches as sllsimpute  <cit>  or interesting comparison  <cit>  that do not compare with the methods that had been considered as the most efficient in this study.

