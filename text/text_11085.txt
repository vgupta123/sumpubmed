BACKGROUND
micrornas  are an abundant class of small noncoding rnas  that can affect gene expression by post-transcriptional regulation of mrnas  <cit> . they typically base pair with sequences in the 3' utr of mrnas to inhibit mrna translation or to promote their degradation. mirnas have been shown to play important roles in various cellular and pathogenic processes, including development, cell death, immunological response, and carcinogenesis  <cit> . since the functional characterization of mirnas depends heavily on identification of their specific target mrnas, numerous bioinformatics methods have been developed for this task .

in recent years, it has been shown that viruses also encode mirnas  <cit> . although for most of the viral mirnas no functions have yet been described, it is conjectured that these mirnas also take part in the complex interactions between viruses and their hosts, and several scenarios have been proposed  <cit>  . in the first scenario, viral mirnas regulate viral gene expression for maintaining, e.g., replication, latency, or evading the host-immune system. for example, mir-bart <dig> of ebv exhibits perfect complementarity to the 3'utr of balf <dig>  which encodes the viral dna polymerase  <cit> , and such an interaction might be essential for maintaining ebv latency. in the second scenario, host mirnas interact with viral rnas, thereby inhibiting virus replication, e.g., mir- <dig> can limit the replication of the retrovirus primate foamy virus  in cell culture through an interaction with pfv mrnas  <cit> . in the third scenario, viral mirnas regulate host genes to induce a more favorable environment for the virus. the regulated genes are most likely related to antiviral response, apoptosis, interferon system, signal transduction, or cellular proliferation  <cit> . stern-ginossar et al.  <cit>  showed that human cytomegalovirus  mirna, mir-ul <dig>  inhibits the translation of a cellular gene micb, which is normally activated when cells are subjected to severe stress, such as viral infection. micb marks these cells for destruction by natural killer cells. the resulting absence of micb protein protects hcmv-infected cells against lysis by natural killer cells.

viruses may affect host mirnas for their own advantage, by regulating up or down the expression of these mirnas. this happens in the fourth scenario reported in  <cit> . in their research, host mir- <dig> and mir-20a were found to be downregulated following human immunodeficiency virus  infection. these mirnas target the 3'utr of host gene pcaf, which has been proposed to promote hiv- <dig> transcriptional elongation. hence, this downregulation is needed for efficient replication of the virus.

in our work we will examine the combination of the last two scenarios, assuming that both human and viral mirnas play an active role in regulating genes that either promote or inhibit viral replication or life cycle.

cooperativity of mirnas in gene regulation
previous studies show that one mirna may have several target genes. furthermore, one mrna can be targeted by multiple mirnas, reflecting cooperative translational control  <cit> . experimental evidence indicates that multiple target sites  in the same 3'utr can potentially increase the degree of translational repression  <cit> . in addition, microarray analyses  <cit>  reveal that most of the mirnas only modestly affect their mrna targets. recent findings show that some virus encoded mirnas have sequence homology to their host human/mouse mirnas, mainly in the seed region . this is one of many mechanisms that are used by viruses to exploit their host  <cit> . we were intrigued by an additional possibility in which viral and host encoded mirnas target the same mrna, possibly in different target sites, to promote gene silencing. it would make sense that viral mirnas that share targets with human mirnas may contribute to increasing the translational repression and tighten the regulation which already exists at a low level in the cell . this important question motivated us to study and predict the cooperativity of viral and host mirnas on host genes.

in this paper, we present a new computational method for examining cooperative effects of viral and host mirnas on the regulation of host genes. we find modules consisting of both viral and human mirnas, and their common target genes, that are involved in similar biological processes . the mathematical formulation of our problem is an extension of a related problem, where the sought modules consist of mirnas and genes of the same species. below we present some studies that worked to solve the latter problem. yoon and de micheli  <cit> , the first to address that problem, represent the multiple relations between mirnas and target genes by a weighted bipartite graph, and find bi-cliques in the graph that represent the mirna-mrna modules . they predict modules using target prediction based on sequence information.

two other approaches combine several information sources to extract the modules, including predictions of mirna target genes and their respective expression profiles. joung et al.  <cit>  apply a genetic algorithm, based on coevolutionary learning, to find an optimal mirna-mrna module. tran et al.  <cit>  use a rule-based learning method to identify the modules.

in general, finding bi-cliques in bi-partite graphs can be formulated as a bi-clustering problem , which is known to be np-complete. therefore, most of the methods that address bi-clustering are based on heuristic approaches, which may miss good solutions. alternatively, applying naive exhaustive enumeration to this problem is extremely time consuming to the point of being impractical. the problem becomes even more complicated when searching for cooperative human-viral mirna modules. directly applying one of the existing bi-clustering algorithms to a united set of both human and viral mirnas may be insensitive to the contribution of viral mirnas. this is due to the wide imbalance between the numbers of human mirnas and viral mirnas .

in order to be able to control the composition of the sought modules in terms of viral and human mirna participants, a new type of clustering algorithm is needed. and indeed, in this paper we describe a bi-targeting algorithm which we developed . we apply a branch and bound approach to develop and prune an enumeration tree of groups of human genes that are targeted by the same set of viral and human mirnas. this algorithm is very efficient since we exploit the fact that the number of known viral mirnas is relatively small, and that we demand a quorum on the number of mirnas in the modules . this "pruning by quorum" allows us to apply enumeration in practical run time. we implemented our bi-targeting algorithm into a software system that combines a variety of biological data sources, such as: genomic sequences, mirna expression measurements, go annotations, and tissue context. the combination of several information sources in the task of module detection minimizes noise and errors accompanying each information source, resulting in more accurate results.

in addition, we developed a very flexible and efficient target prediction algorithm, which we briefly describe in the next section, and in more detail in the appendix section. we use it as a preprocessing step to the module search.

using the bi-targeting system, we study the cooperative regulation of human and epstein barr virus  mirnas on human mrnas in various lymphomas related to ebv. the significant modules are picked by a sampling procedure . we validate two of these modules by surveying information from the biological and biomedical literature. the rest of the significant modules can be found at http://www.cs.bgu.ac.il/~vaksler/bitargeting.htm.

we believe that the results of this research may have far-reaching implications, as they may be applied to the diagnosis and treatment of viral infections, as well as for a wider understanding of viral-induced diseases and the role that mirnas plays in them. our study can contribute to the discovery of genes that regulate virus-host interactions, especially, but not only, in chronic infections, and can serve as targets for therapy  <cit> .

methods
our method consists of two stages: a target prediction stage and a module search stage. in the first stage, we perform all against all dynamic programming on two sets of sequences  in order to predict, for every mirna in the set, its target mrnas. in the second stage we look for modules that are enriched in some biological process, using the results from the first stage and information from gene ontology and the mirna atlas. we elaborate more on the second stage since this is the main goal of our paper. the interested reader may find a description of the first stage in the appendix section.

stage  <dig> - predicting microrna targets
the purpose of this stage is to perform an efficient genome-wide target prediction of all the mirnas against all the possible subsequences of a set of mrnas. mirna target prediction is a well-studied problem, with numerous tools and approaches available. each of these tools accommodates a variety of principles and features of target recognition, for example typical base pairing patterns, thermodynamic analysis of the mirna-target duplexes, conservation of the target site among related species, and accessibility of the target site. for a review see  <cit> .

the amount of the data we need to analyze is huge  and thus applying existing tools to this analysis would be too time consuming. hence, we developed our own efficient tool for this task . the method we propose extends the threshold all-against-all sequence alignment algorithm  <cit> .

we store the mirna sequences in a prefix tree  and the mrna sequences in a separate prefix tree . we then apply dynamic programming to compute hybridization error between a prefix from the mrna tree and a prefix from the mirna tree, for each such pair. if, in one comparison, the number of errors we encounter is larger than a given threshold, then we stop comparing this pair and its descendants in the respective trees . those mirna-target pairs that survived the error threshold can be further checked for duplex energy by the rnaduplex program  <cit> . this results in linking each mirna in our data set to its predicted target genes.

this method is efficient since it simultaneously checks sets of mrna sequences  that share a prefix in the mrna  prefix trees. moreover, it goes over all the duplexes, and prunes those with a hybridization error above a threshold, allowing a very efficient filtration.

comparison with existing approaches
we compare our target prediction method with three existing tools . the tools are miranda  <cit> , pita  <cit>  and rnahybrid  <cit> . our dataset consists of  <dig> experimentally validated mirna-gene pairs out of  <dig> human mirnas and  <dig> mrnas . we downloaded the 3'utr sequences of these mrnas from ensembl biomart  <cit> , a total of  <dig> different transcript sequences. in our results, an mirna-mrna pair is considered a hit if the mirna is found to target one of the transcripts of the mrna. we ran our target prediction method with the constraints listed in table  <dig>  miranda was run with default parameters. the parameters of pita and rnahybrid were set to be close to ours . we compare the results of these four methods in table  <dig>  the information which we compare includes: the total number of predicted pairs, the number of tp predicted pairs  and the running time. for our target prediction tool, the total number of predicted pairs falls within the ballpark of both pita and miranda. rnahybrid, on the other hand, predicts twice as many pairs. as far as sensitivity goes, our results pretty much match that of pita and outperforms miranda by far. rnahybrid gave the best sensitivity, . when comparing running times, our tool noticeably outperformed all the other engines, this in spite of keeping up competitive sensitivity and total number of predicted pairs. recall that fast running time was the main objective for developing our fast filtration.

tool
a out of  <dig>  pairs. b out of  <dig> experimentally verified pairs.

stage  <dig> - finding modules - the enumeration algorithm
in this section we describe our enumeration algorithm for finding modules that are statistically enriched in biological processes . an important objective in our study is to ensure that the modules found by our method contain mirnas that are mutually expressed and thus can cooperatively regulate gene expression. in order to ensure this condition, we use the mirna atlas  <cit> . this atlas provides mirna expression profiles in different conditions . we focus on a set of conditions where both human and viral mirnas  are expressed. based on these data sources, we address the following problem.

given a go category c, a mirna atlas condition a, expression level threshold t, a p-value threshold p, the minimal number of human and viral mirnas required in a sought module q <dig> and q <dig> , respectively. find all the modules composed of mirnas whose expression in a is greater than t, which include at least q <dig> and q <dig> human and viral mirnas, respectively, and whose intersection of the target-sets of human genes yields an enrichment p-value smaller than p in c.

the enrichment is measured using a hypergeometric p-value  <cit> . the hypergeometric p-value measures the statistical significance of the overlap between the target genes and the genes in the considered category .

for each go category c and each atlas condition a of interest, we perform the enumeration process as follows. let h and v be the set of human and viral mirnas. let ha and va be the subset of human and viral mirnas expressed in a. let ta be the set of their target genes ; and let tca = ta ∩ c .

our enumeration algorithm dynamically constructs and prunes an enumeration tree, which is built from the genes in tca. a path in the tree represents a potential module. the module consists of the genes in the inner nodes of the path and a list of mirnas  in the leaf . at the end of the run of the algorithm, the enumeration tree stores in its leaves all the modules that satisfy the quorum constraints. the pseudocode of our algorithm is found in the appendix section. below we supply an illustration of the algorithm applied on the data from table  <dig>  with the quorum constraints q <dig> =  <dig> and q <dig> =  <dig>  we initialize the tree to consist of a root node and one dummy leaf node with all the human and viral mirnas in a ). genes are inserted to the tree one by one in order of increasing number of hits of human mirnas on the gene . each inserted gene, g, is connected by an edge to the root and becomes a root of newly generated copies of all its preceding siblings in the tree. the leaves of the new subtree contain intersections of g's mirna sets  with the corresponding sets in the siblings' leaves. when these intersections do not satisfy the quorum constraints we prune the unsatisfying edge from the tree. . the leaves of the subtree rooted at c contain the intersections of the set of mirnas hitting c with the set of the dummy leaf, and of b. notice that the respective intersections of the mirna sets hitting b and c are empty. thus the edge from c to b is pruned from the tree).


genes


mirnas
a
b
c
d
the columns correspond to genes  and the rows to human and viral mirnas . cell  in the table is checked if mirna m is predicted to target gene g. the last row provides, for every gene, its targeting mirnas .

in figure  <dig> we show the tree after inserting d and making it the root of all its preceding siblings: the dummy node, b node, and c node. in the leaves of the subtree rooted at d are the intersections of the respective mirna sets. now two prunings occur in the enumeration tree. the original node b  and its targeting mirnas, are now fully contained in the subtree rooted in d, thus b is now redundant and deleted from the enumeration tree. as in  <dig>  the sets of mirnas of c and of d are both empty and the edge from d to c is pruned .

in figure  <dig> we illustrate adding a, making it the root of the subtrees of its siblings. intersecting a's mirna sets with the siblings' mirna sets, resulting in deleting c  and pruning d .

at the end of the process, the enumeration tree contains all the modules . the leaves of the tree are traversed and their p-value is computed. the modules are then filtered  and reported according to ascending p-value.

the sampling procedure
to set a cutoff p-value for significant modules, we estimate the distribution of the hyper-geometric p-value scores for every <a, c> pair as follows. we sample, from the full set of mirnas, two subsets of human and viral mirnas, of same size as ha and va, respectively. then we find their target genes that satisfy the quorums, and intersect them with c. next, we perform the enumeration algorithm on the genes in the intersection and store the hypergeometric p-values of the obtained modules. we repeat this sampling process  <dig>  times, and compute the distribution of the obtained p-values. this distribution allows us to pick a significant p-value for our reported modules. we pick the p-value that is in the  <dig>  quantile of the distribution to be the p-value cutoff for our reported modules.

RESULTS
we applied our system to the discovery of modules of genes targeted by human mirnas and mirnas of the epstein barr virus. the epstein-barr virus  is a human herpes-virus that infects over 90% of the human population worldwide. ebv can infect b lymphocytes and epithelial cells, and typically establishes long-term asymptomatic latent infection in memory b lymphocytes. nevertheless, ebv infection has oncogenic potential, which can result in a number of malignancies, including burkitt's lymphoma, hodgkin's lymphoma, nasopharyngeal carcinoma, and lymphoproliferative diseases, especially among immunocompromised individuals  <cit> . during the latent infection of ebv, only a limited subset of its genes is transcribed, allowing it to evade immune recognition.

latency gene expression is classified into three groups: type i - expressing only nuclear protein ebna1; type ii - expression of ebna <dig> and membrane proteins lmp- <dig>  2a, 2b; type iii - six nuclear proteins ebna- <dig>   <dig>  3a, 3b, 3c, lp, and three membrane proteins lmp- <dig>  2a, 2b. the noncoding rnas eber <dig> and eber <dig> and a set of ebv-encoded mirnas are differentially expressed in all three forms of latency  <cit> .

datasets
the set of human and viral mature mirna sequences was downloaded from the mirna registry  <cit>  containing  <dig> human mirnas and  <dig> ebv mirnas . the set of human 3'utr sequences was extracted from the ensembl's biomart  <cit> , database ensembl  <dig>  each 3'utr in this set is annotated with an ensembl gene and transcript id.

the gene ontology  associations and ontology structure files were downloaded from  <cit> . each 3'utr was attributed to the corresponding gene name in the ontology file, using the ensembl gene and transcipt ids.

the set of 3'utrs was filtered to contain 3' utrs from genes that are expressed in b cells  and that have at least one biological process annotation. this resulted in  <dig> sequences  from  <dig> genes. utrs longer than  <dig> nts, were shortened to  <dig> nts. mirna expressions were taken from the mirna atlas. eight tissue samples from the atlas, expressing both human and ebv mirnas, were found to be relevant. seventy-two go categories  related to apoptosis, immune response, signal transduction, proliferation, and cell cycle were chosen.

the target prediction stage
in the first stage we ran all-against-all target prediction between the mirna and 3'utr sets described above. the target prediction was carried out with the constraints listed in table  <dig>  which are derived from the literature . in addition we checked duplex energy at the leaves of the prefix tree . the duplex energy was normalized by the energy of the duplex formed between the mirna and its complement, and if the resulting ratio exceeded a threshold of  <dig>  the target prediction was accepted as positive.

running the target prediction on  <dig> human mirnas  and  <dig> human mrnas  resulted in  <dig> human mirna/human mrnas  pairs. we analyzed some characteristics of the putative target-binding association . figure  <dig> shows the distribution of the number of target mrnas per each human mirna, and figure  <dig> shows distribution of the number of human mirnas targeting each mrna. according to this analysis, one human mirna binds putatively to the 3'utr of  <dig> mrnas on average . alternatively, one mrna is targeted by  <dig> human mirnas on average . an analysis of the efficiency of our filter can be found in the appendix section.

the predicted modules and supporting evidence
in this stage we used the target prediction results from the previous stage. the enumeration process was carried out on  <dig> go categories versus  <dig> atlas conditions, resulting in  <dig> <a, c> pairs, where a denotes an atlas condition and c denotes a go category. we found  <dig> modules that fulfilled the following quorum constraints, q <dig> =  <dig>  q <dig> =  <dig>  and had a p-value lower than the cutoff . modules with fewer than two genes were filtered out. the expression level threshold t was calculated for each mirna as the average expression among all the atlas conditions related to b cells. among the go categories tested in our experiment, there are dependent categories that contain the same genes. among atlas conditions sometimes groups of expressed mirnas overlap. in order to reduce the redundancy of the reported modules we combined identical modules from different go categories and atlas conditions. this procedure resulted in  <dig> modules. below we present and analyze two selected modules that were found by our method. the full set of potential modules can be obtained at http://www.cs.bgu.ac.il/~vaksler/bitargeting.htm.

module i) was obtained from genes related to "induction of apoptosis" and mirnas that are expressed in burkitt lymphoma. the module consists of three human mirnas, mir- <dig>  mir-20a, and mir-15b, one viral mirna, mir-bart <dig>  and three human genes. a thorough literature search supported our predictions as follows. mir- <dig> and mir-20a belong to the genomic cluster mir-17- <dig>  the cluster consists of six mirnas that are tightly grouped within an  <dig> base-pair region of human chromosome  <dig>  <cit> . the mir-17- <dig> cluster first attracted attention following a series of observations linking these mirnas to cancer pathogenesis, as it undergoes amplification in several types of lymphoma and solid tumors. it was also shown that these mirnas are tightly linked to the functions of the e2f family of transcription factors, which are critical regulators of the cell cycle and apoptosis. furthermore, o'donnell et al.  <cit>  validated that e2f <dig> is a target of mir- <dig> and mir-20a. therefore, these mirnas lead to decreased e2f <dig> protein and thus attenuate e2f induced apoptosis .

the third human mirna is mir-15b. this mirna was recently shown to regulate cell cycle progression in glioma cells by targeting cell cycle-related genes, such as ccne <dig>  <cit> . in addition, cimmino et al.  <cit>  reported that its analog mir-15a  negatively regulates bcl <dig>  which is an anti-apoptotic gene that is often overexpressed in many types of human cancers. the participation of this mirna in this module suggests that this mirna may also have oncogenic roles in this particular type of malignancy, by targeting genes that promote apoptosis.

the viral mirna mir-bart <dig> was shown to target a human protein puma  <cit> . puma plays a role in apoptosis as a direct downstream target of p <dig>  in addition to being able to initiate apoptosis via a p53-independent mechanism  <cit> . down-regulation of puma by mir-bart <dig> may protect ebv-infected cells from virus-induced apoptosis. furthermore, searching for targets of bart <dig> on the viral genome revealed  <dig> hits on the ebna-lp protein. ebna-lp promotes the expression of viral genes that expose the virus to the immune system.

three human genes that were found to participate in this module are strongly related to apoptosis. ppp1r13b  has an important function in cellular apoptotic pathways  <cit> . aspp <dig> and aspp <dig>  are induced by the e2f <dig> transcription factor and cooperate with the tumor suppressor p <dig> and its family members p <dig> and p <dig> in trans-activating pro-apoptotic genes such as the bcl2-family member bax, the bcl2-binding component puma, and p53-induced gene  <dig>  . inhibition of endogenous aspp function suppresses the apoptotic function of endogenous p <dig> in response to apoptotic stimuli  <cit> .

the second gene in the module is bcl2l <dig>  which is a pro-apoptotic gene that regulates cell death in mature b cells. it is thought to initiate apoptosis by binding to and inactivating pro-survival bcl2-family members, such as bcl <dig>  <cit> . deletions or methylation of the bim locus are found in various human b lymphomas  <cit> . furthermore, it was shown previously that latent infection of burkitt lymphoma cells with ebv results in a significant reduction in the expression of bim  <cit> . a number of recent works  have also identified bim as a direct target of multiple members of the mir-17- <dig> cluster .

the third gene, tp <dig> , an important epithelial developmental gene, is a member of the p <dig> tumor-suppressor gene family. the p <dig> gene has two promoters, resulting in two different types of proteins with opposing functions, a p53-like protein containing the ta domain  and inhibitory proteins lacking ta, called dnp <dig>  tap <dig> upregulates expression of proapoptotic bcl- <dig> family members such as bax and bcl2l <dig>  <cit> . p <dig> is capable of binding a series of p53-responsive promoters and can transactivate many p <dig> target genes. p <dig> activity is regulated by proteins such as aspp <dig> and aspp <dig> , which also modulate p <dig> activity. p <dig> can mediate apoptosis in a manner similar to that of p <dig>  and it was proposed that p <dig> is essential for p53-mediated apoptosis induced by dna damage  <cit> . the cooperative regulation of human and viral mirnas of the apoptotic pathway is demonstrated in figure  <dig>  the dashed arrows indicate validated targets of mir- <dig>  mir-20a, and mir-bart <dig>  and the solid arrows indicate the new regulation pattern discovered in our module. our predictions may imply that mirnas in this module target genes along the cascade that leads to apoptosis. in particular, these results predict that a primary function of mir-bart- <dig> may be to prevent p <dig> mediated apoptosis by targeting different mrna transcripts.

module ii ) consists of mirnas from the hodgkin lymphoma cell line, hsa-mir- <dig>  hsa-mir- <dig>  and ebv-mir-bart <dig>  and genes from the "regulation of lymphocyte activation" category - cdkn2a and icoslg.

cdkn2a  is a tumor suppressor that binds to the complex of cyclin d <dig> and cyclin-dependent kinase  <dig> to repress its ability to phosphorylate the retinoblastoma protein, and consequently, blocks cell cycle progression from g <dig> to s  <cit> . inactivation of this gene has been shown in a wide variety of human cancers as a consequence of mutation, homozygous mutation, or promoter methylation  <cit> . in addition, it was shown that ebv oncoprotein lmp <dig> blocks the expression of cdkn2a, by promoting the crm1-dependent nuclear export of ets <dig>  which is an important transcription factor for cdkn2a, thereby reducing the level of its expression  <cit> . furthermore, human mirna mir- <dig>  which presents in this module, has been demonstrated to promote cell growth through repression of this gene  <cit> . mir- <dig>  in addition to its function in attenuating e2f induced apoptosis , was shown to target cdkn1a , a gene that functions as a regulator of cell cycle progression at g <dig>  <cit> .

the second gene found in module ii is icoslg. this gene is expressed on monocytes, dendritic cells, and b cells and can be induced by inflammatory stimuli in peripheral tissue. binding to icosl delivers a co-stimulatory signal for t cell proliferation and cytokine secretion  <cit> . furthermore, this gene was shown to be important in several immune responses against pathogenic microorganisms such as bacteria, parasites and viruses  <cit> .

the two modules presented have a tight connection to the function of the ebv, which establishes a long-term latent infection in the host cells. thus, it is reasonable to assume that ebv will use its and the host's machinery, including mirnas, for downregulating genes that lead to apoptosis or immune response. these modules supply evidence of the cooperation between human and ebv mirnas in the task of preventing apoptosis, promoting cell growth, and evading the immune response. it is important to note that the target sites of the human and viral mirnas on the utrs of the genes in this module are different. thus this cooperation, with multiple target sites, can lead to an increased degree of translational repression.

discussion and 
CONCLUSIONS
mirnas represent a class of molecules produced by both viruses and their hosts that can benefit either the virus or the host, depending on the particular interaction. viral mirnas were discovered only recently, and functional relationships between viruses and viral or host mirnas are only now beginning to be elucidated. a comprehensive understanding of the entire landscape of the mirna-mediated host-virus interactions may uncover novel pathways that promote or limit virus replication. in turn, this knowledge may lead towards the development of effective antiviral therapy and could help guide drug design.

in this work we focused on the contribution of viral and host mirnas in regulating host genes, and thus in promoting or inhibiting viral replication or life cycle. our method searches for modules of mirnas  and their common host target genes that are involved in similar biological processes.

our method is related to bi-clustering methods that have been used in various biological issues  <cit> . the bi-clustering approach groups rows and columns simultaneously in a two-dimensional data matrix. alternatively, a data matrix can be viewed as a bipartite graph. previous works, dealing with module search, represent one set of nodes as mirnas and the second set as target mrnas; the edges represent target relations. since in our problem, the mirnas are of two different sources , we cannot use the existing methods of bi-clustering. instead, our graph can be viewed as a two-sided bi-partite graph, and the goal is to find two sided bi-cliques.

in order to achieve this goal, we developed a new bi-targeting algorithm. the algorithm constructs an enumeration tree of human genes that are targeted by the same sets of mirnas, and contains the modules at the end of its construction. due to the application of a branch and bound technique, the algorithm is very efficient and enables, within a practical time, enumeration of all possible modules.

our method combines a variety of biological data sources. genomic sequences were used for the target prediction task. tissue context information was used to narrow the list of human genes to genes that are expressed in the cells infected by the virus of interest . mirna expression profiles  and go annotations enabled us to find potential modules consisting of mirnas co-expressed in an atlas condition  and genes with similar biological function from a go category. the combination of several information sources in the task of module detection minimizes noise and errors accompanying each information source, resulting in more reliable results.

in addition, we developed our own method for target prediction, which extends the threshold all-against-all algorithm. the method performs an efficient genome-wide target prediction of all the mirnas against all the possible subsequences of a set of mrnas. our algorithm was able to prune a large portion of the aligned trees by utilizing the fact that the number of errors in the mirna-mrna duplex is bounded by some threshold.

note that the two methods we present in this paper are independent. one can use our target prediction algorithm as an efficient stand-alone target prediction system. in addition, our module finding method can use any source of target information, produced by any of the existing target prediction tools, using different principles of target recognition. the method can also be applied to other viruses, as long as their mirna expression profiles are available .

we applied our method to the discovery of modules consisting of human and viral  mirnas and human genes. the identified modules display meaningful discoveries supported by the literature. two of the modules are analyzed in detail in this paper.

since not much is known about the function of viral mirnas, finding modules that link the viral mirnas and the human mirnas, might help in understanding the role of viral mirnas in viral infections. thus the method developed in this work can be of help to better understand viral-induced diseases and the role that mirnas plays in them.

authors' contributions
ysa presented the problem and constraint parameters. ivl, kk, and mzu developed the algorithms. ivl contributed to code development and data analysis, and found supporting evidence in the literature. all authors drafted the manuscript, and read and approved the final manuscript.

appendix
predicting mirna targets: a filter based on error bounded complementarity
we perform a genome-wide target prediction of all the mirnas against all the possible subsequences of a set of mrnas in an efficient way. the method we propose extends the threshold all-against-all alignment algorithm  <cit> . all-against-all alignment problems can be solved using dynamic programming and suffix trees  <cit> . sagot used a variant of this problem to extract approximate repeated motifs from a sequence or common motifs from a set of sequences  <cit> . in this work we extend this idea to the task of target prediction by using prefix trees .

the trie data structure  <cit> , τ, allows representation of the mirna/mrna sequences in an efficient way. the tree τ has the following properties: each edge of τ represents a character c ∈ {a, c, g, t/u}, the characters represented by sibling edges are distinct, and the concatenation of the labels of the edges on a path from the root to a leaf represents the full string inserted in the tree.

for our target prediction system we construct two tries, one for the mirna sequences and one for sequence segments of the  mrnas. next, we apply the branch and bound algorithm to find complementarities between sequences from the mirna trie and the mrna tries. in more detail, construction of the tries is as follows.

let m be a set of m mirnas, and let g denote a set of n mrna sequences in the database for the organism under consideration. consider the trees in figure  <dig>  τm and τg, which represent the mirna and mrna sequences, respectively. τm is built from the mirna sequences in 5' → 3' orientation. a node u in τm keeps the character of the incoming edge . a leaf node, which corresponds to an mirna, keeps in addition a boolean vector v  initialized with f . each v  has n cells, one for each mrna, and each mrna has a running number. cell i in v  indicates whether the i'th mrna is the mirna's predicted target   = t).

τg is built from mrna subsequences, which are produced by partitioning the mrna reversed  sequences into given size consecutive overlapping windows with a slide of 1-nt. the partitioning of the mrna into windows ensures that every nucleotide in the mrna will be examined as a potential starting point of a target site to one or more mirnas. since the mrna sequence may have bulges when hybridized to an mirna, we set the size of the window to be longer than the typical mirna length, namely to  <dig> nucleotides. each node in τg keeps the same data as τm . it also has a list of all mrnas for which the path from the root of τg to this node spells a substring of this mrna ).

our goal now is to measure the complementarity between all the mirnas in τm and the mrna subsequences in τg. in order to get an admissible branch-and-bound search, we use a target prediction score which is monotonic with respect to the increasing length of the prefixes of the compared mirnas and mrnas . the score, which is denoted by min_err is computed using dynamic programming.

the dynamic programming table dp
for any pair of nodes , u ∈ τm, and v ∈ τg, dp  holds the target prediction score between the prefix of the  sequence spelled by the path from the root of τm to node u versus the prefix of the  sequence spelled by the path from the root of τg to node v, respectively.

let u' be the parent of node u in τm and let α be the character labeling the edge between them. similarly, let v' be the parent of v in τg and let β be the character labeling the edge between them. if we traverse the trees in pre-order traversal, then , , and  are computed before .

the target prediction score of  is computed using the recurrence formula given below:  

where mirna_gap and mrna_gap are penalties for inserting a gap on the mirna side of the duplex or on the mrna side of the duplex, respectively, and match is the dis-complementarity penalty between the characters α and β .

note that mismatches and gaps increase min_err. using the restrictions on mirna target detection based on sequence complementarity, we can bound min_err with a threshold k. thus, an mrna sequence t has a chance of being a target of mirna sequence p if min_err of p and t is at most k.

observation
the score min_err is monotone with respect to an increase in the prefix length of p and t .

several features that are related to the hybridization pattern between the mirna and its targets are incorporated into this algorithm. there is an option  to require a seed of a given length and position  in the hybridization between the mirna and the mrna,  to restrict the number of gu pairs that are formed in the duplex, and  to restrict the size of each bulge formed in the duplex. the thresholds that we use for these features in our work are derived from the literature describing experimentally verified mirna targets .

the computation of min_err is done in pre-order traversal of the trees. pruning is performed while traversing the mrna trie. the calculation is stopped at each node v of τg where min_err >k, or one of the above listed restrictions is violated. when the algorithm reaches a leaf u in τm, it updates v  according to the mrna sequences that are located in the non-pruned nodes of τg. at this point a hybridization structure between the mirna represented by leaf u and the corresponding mrna target sequences is calculated using the rnaduplex program  <cit> . duplexes with a normalized free energy score  less than a given user threshold are filtered. after performing the dp, we are left with an mirna tree where every leaf node v is associated with the set of mrnas which are its predicted targets, as maintained in the t vector.

we note that the filter described in this section is stand-alone, and can be used independently on other species with different parameters.

filter efficiency measurements
we demonstrate the efficiency of applying our filter on the dataset, described in the datasets subsection, with three sets of parameters as detailed in table  <dig>  each utr was partitioned into sliding windows of size  <dig> nts, with a sliding offset of  <dig> nts between frames, resulting in  <dig> subsequences. since the rnaduplex procedure is by far the most time consuming component of our method, we measured the efficiency of our filter in terms of the number of calls to rnaduplex.

we define by the naive method a method that calls rnaduplex when there is a seed complementarity, under the constraints of seed location and number of gu pairs in the seed . columns  and  contain the number of rnaduplex calls for the naive method and for our method, respectively, and column  contains the percent of calls saved by our method.

in all three data sets there is a great reduction in the number of rnaduplex calls. the middle row demonstrates a much bigger save in number of calls by our method. this is mainly because of the strong constraint applied on the number of allowed errors . the reduction in the number of calls to rnaduplex is due to the compression of the sequences of both mirnas and mrnas into prefix trees and the strong pruning that we apply during the calculation of the hybridization score, accompanied with the constraints that we apply on potential duplexes.

hypergeometric p-value
for a given module obtained for a pair <a, c>, the hypergeometric p-value is computed as follows: let n be the total number of genes in the dataset and c the number of genes that belong to the go category c . let t be the number of mutual targets of the mirnas in the module and tc the number of genes among them that also belong to c . the hypergeometric p-value of this module is:  

pseudocode of the enumeration algorithm
   input : genes - list of genes from a certain go category. every gene x in this list has a set of human and viral mirnas targeting it, denoted as x.h_mirs and x.v_mirs, respectively.

   input : h_mirs, v_mirs - full list of human and viral mirnas.

   output: enumeration tree

   root← new node();

   dummy← new node();

   dummy.h_mirs← h_mirs;

   dummy.v_mirs← v mirs;

   root.children.add;

   foreach gene ∈ genes do

      node← appendsiblings;

      root.children.add;

   end

algorithm 1: construct tree

   input : gene - a new gene to be inserted into the tree

   input : root - the root node of the enumeration tree

   input : q <dig>  q <dig> - quorum restriction on human and viral mirnas

   output: creates a new node and appends to it  all its siblings

   node = new node;

   foreach child ∈ root:children do

      sibling← copy;

      foreach leaf ∈ sibling:leaves do

         size1← leaf.h_mirs.size;

         leaf.h_mirs← intersect;

         size2← leaf.v_mirs.size;

         leaf.v_mirs← intersect;

         if size == size <dig> and size == size <dig> then

            /* delete due to the containment      */

            delete the path from the leaf in child subtree;

         end

         if leaf.h_mirs.size < q <dig> or leaf.v_mirs.size < q <dig> then

            /* prune due to the quorum restrictions      */

            delete the path from the leaf in sibling subtree;

         end

      end

      node.children.add;

   end

   return node;

algorithm 2: appendsiblings

