BACKGROUND
most proteins function by interacting with other molecules; the binding sites have evolved for achieving specific interactions and avoiding undesirable associations that would be deleterious to the normal functioning of the cell. thus the interfaces between two protein subunits provide context for understanding the principles of molecular recognition. a large volume of structural data on protein interactions, either complexes between independent polypeptide chains, or oligomeric assembly of subunits, is available in the protein data bank   <cit> , which has been used to generate diverse datasets of protein-protein interfaces  <cit> . the physical and chemical features of the interfaces have been analyzed  <cit>  and softwares/websites, such as protein-protein interaction server  <cit> , molsurfer  <cit> , spin-pp  <cit> , etc. are available for their calculations. nevertheless, our understanding of the biomolecular interactions is not adequate enough, for example, to infer unambiguously the arrangement of the subunits in an oligomeric protein from crystallographic studies  <cit> , or to ascertain a high success rate for the prediction of models of protein-protein complexes through docking methods  <cit> .

recently, protein-protein interfaces have been dissected from new perspectives  <cit> . it has been shown that many large interfaces are not contiguous, but built of spatially demarcated surface patches. such segregation into patches is also indicative of the location and distribution of water molecules held in the interface  <cit> . additionally, one can also divide the interface into core and rim regions using the difference of solvent accessibilities of residues and the chemical properties of each region are quite distinct. interestingly, this division also mirrors the degree of conservation of interface residues in a family of homologous proteins  <cit> , and this represents an important signature of protein interaction sites. various other physicochemical parameters have also been developed  <cit> , which in combination, can distinguish the true oligomeric state  from the lattice contacts observed in protein crystals. in this article we describe a web-server, proface that dissects a given protein-protein interface and obtains various parameters to characterize it.

implementation and 
RESULTS
input file and parameters
all the protein chains should be contained in the input file in the pdb format and the user must indicate which chains  constitute each of the two components forming the interface between them. also, one has to specify the way to display the dissected interface, i.e., to show the residues belonging to core and rim and/or in spatial patches. for clustering into patches the threshold distance has to be supplied. this distance should typically be half the maximum distance between any two interface atoms on a given protein chain – the latter distance is listed along with the other parameters in the output. ideally, the number of patches should be the same on both the components and if this is not the case the threshold value may have to be slightly changed  to achieve this. the suggested values are  <dig> Å for protein-protein complexes  <cit>  and  <dig> Å for homodimers  <cit> , as these gave patches that were visually meaningful in the vast majority of the cases.

output files and parameters
there are five types of output: a) plot of interface residues with secondary structural information; b) statistics of interface parameters; c) coordinates of interface atoms and the pdb files in which the interface residues are tagged; d) list of residue contacts across interface; and e) the view of the interface atoms.

plot of interface residues with secondary structural information
the secondary structural elements  are computed using the program dssp  <cit>  and shown below the residue names  along the sequence for the individual chains. the sequence information is based on residues for which coordinates are available . there are three options to show the interface residues:  to simply show the interface residues ;  to show them dissected into core/rim regions ; and to show them dissected in two different ways – spatial patches  and core/rim regions . an example of option  is displayed in figure  <dig> 

statistics of interface parameters
a typical example of output parameters is shown in table  <dig>  the interface area is the sum of the solvent accessible surface areas  of the two components less that of the pair. asa is calculated using program naccess  <cit> . all protein atoms or residues contributing more than  <dig>  Å <dig> to the interface area are counted as interface atoms or residues, whose numbers are tabulated. non-polar interface area is the area contributed by non-polar interface atoms . interface area/surface area is the ratio of the interface area to the rest area of the protein surface in the two components. fraction of non-polar atoms is based not on the area contributed, but on the number of atoms. fraction of fully buried atoms is the ratio of interface atoms that are completely buried in the complex  to the total number of interface atoms . residue propensity score and local density are defined in bahadur et al.  <cit> . residues with at least one fully buried interface atom are designated as core residues, while rim residues do not contain any interface atom that is fully-buried. once a residue is identified as core, all its constituent atoms are assumed to be in core  and the interface area contributed by the atoms of the residue is part of the core region. statistics also include atoms/residues/areas divided into core and rim regions . also the number of patches in individual chains and their respective sizes are tabulated .

output files
the 4-digit code used to name the output files are randomly generated and does not have any correspondence to the input file name. the coordinates are stored in two types of files  and there are two files  of each type. in the .pdb file the interface residues are distinguished from the remaining atoms in the structure on the basis of the content in the two columns – occupancy factor and b-factor. the non-interface residues have a value of  <dig>  in these columns. for the interface residues, a) the occupancy is replaced by - <dig>   or  <dig>  ; b) the b-factor column is replaced by a value  <dig>  through  <dig> , depending on the patch to which the residue belongs. in the .int file, only the interface atoms are kept, with the occupancy and the b-factor column modified as above . moreover, there are two additional columns, in which the asas of the constituent atoms in the individual component and in the complex are provided. one can use this information to calculate the interface area contributed by individual residues and, for example, correlate with the thermodynamic data on the free energy of binding  <cit> .

another output file  provides the list of residue contacts across the interface. for an interface residue in the first component the list shows the interface residues from the other component which are within a distance of  <dig>  Å. if a pair of residues in contact have the same residue name and number, this is indicated by the symbol '<< ---' at the end of the line. this interaction has been designated as self-contact and indicates that the interface may have been formed by components/chains related by a 2-fold symmetry  <cit> . an example of the presence of self-contacting residues in a homodimer structure is presented in figure  <dig>  some of the parameters in table  <dig>  along with the information on self-contacting residues may be used to ascertain if a 2-fold related contact observed in a crystal structure truly represents a biological homodimer.

view of the interface atoms
this can be done using either rasmol  <cit>  or chime  <cit> , depending on whichever program has been configured by the user on the machine. clicking on the rasmol link will first enable the user to download the pdb file , which can then be viewed by either program. clicking on the chime link loads the pdb file directly in chime. as the b-factor column of the pdb file has been replaced by number codes indicating the patch to which the atoms belong, the interface atoms can be colored on the basis of patches using rasmol. also, the pdb file generated by the program can be used in grasp  <cit>  to color the molecular surface according to the criterion of patch or core/rim region.

CONCLUSIONS
proface can be used to dissect a protein-protein interface, deriving physicochemical parameters. the output can be used to display the interface with standard softwares and understand the biological significance of the interaction.

availability and requirements
• project name: proface

• project home page: 

• operating system: platform independent

• programming language: java, c++

• other requirements: jre  <dig> . <dig>  or higher, chime plug-in  <dig>  or higher; all of them are available for download at the above web address

• license: free

• any restrictions to use by non-academics: none

authors' contributions
rps and rpb wrote the source codes, participated in developing the server. ap and sm participated in developing the server. pc conceived the study, and participated in its design, analysis, and coordination. rps, rpb, ap, sm and pc all contributed to writing the final manuscript and interpretation of data.

