BACKGROUND
genome-wide association studies  have revolutionised our understanding of the genetic basis of a wide variety of complex human traits and diseases. gwas are designed to detect associations between single nucleotide polymorphisms  across the entire genome and outcome. the focus of most gwas have been binary phenotypes or quantitative traits, for which proficient software tools for analysis have been developed, such as snptest  <cit>  and plink  <cit> .

“time-to-event” outcomes have become increasingly relevant, particularly in the context of pharmacogenetic studies, where the outcome of interest could be based on overall survival  <cit> , time to remission  <cit>  or progression-free survival  <cit>  after treatment/therapy intervention. the traditional approach to the analysis of time to event data is through survival modelling, and the underlying models used are the same when applied to genetic association studies. however, the challenge arises from the scale and complexity of genetic data, and the need to incorporate a range of analytical models, which require computationally efficient software. currently, there is a paucity of such powerful tools for survival analysis of gwas.

there are many recent gwas published with a focus on survival outcomes such as he et al.  <cit> , phipps et al.  <cit> , johnson et al.  <cit>  and wu et al.  <cit> . in these studies, genome-wide time to event analyses were conducted using standard statistical software, such as r or sas, which are limited by memory and not easily amenable to high-performance computing  solutions to improve efficiency. programs such as probabel  <cit>  exist for this type of analysis, but are limited to the use of only the cox proportional hazards model and also do not allow exploration of snp-covariate interaction effects. this is a particularly important feature for the analysis of pharmacogenetic data, where it is often desirable to test for drug or dose interactions with snps.

we have developed the software tool survivalgwas_sv, which has addressed these challenges, and currently employs a single snp analysis approach using two commonly used analysis models. key features include:  compatibility with widely used programs such as impute  <cit> , thereby directly accommodating imputed data without the need for file conversion;  a range of survival analysis methods are available with the foundation in place for implementing extensions;  options for testing snp-covariate interactions, showing overall and individual test of association p-values; and  compatibility with high performance parallel computing clusters.

survivalgwas_sv is the second program to be released under the survivalgwas suite, which also includes the complementary power calculator “survivalgwas_power”  <cit> .

implementation
user interface
survivalgwas_sv is a console application utilising command line inputs. the software is run from a command prompt terminal, compatible with linux, windows and mac os x. the program requires little interaction from the user since a script of commands can be submitted to the program. this is useful for the analysis of large data files: the user can specify “batches” of the data file to analyse in parallel using multiple computer nodes, where each core can run a different part of the analysis. the program requires mono  <cit>  to run the software on linux and mac os x, but this does not compromise speed or efficiency.

inputs
survivalgwas_sv is set up in a very simplistic way. firstly, the user is required to specify the two data files that will be read into the program. this must be a genotype file  or a variant call format  text file that contains the snp genotype probabilities , and a sample file  that contains all the covariate, survival time and censoring indicator information for each individual. the software supports vcf files containing the snp genotype probabilities, dosages and/or hard genotype calls. in some circumstances, the user would have the genotype files compressed, either in a.zip or.gz file format, both of which can be read into the software directly. secondly, the user specifies details about terms to include in their analysis model, such as covariates and/or interaction, whilst also specifying the censoring indicator and observed survival time. thirdly, the user must specify the range of snps to be analysed, to enable efficient parallel computing. lastly, the user must enter the chosen analytical method to use and the name of the file for which the analysis output will be saved. if the user is analysing covariates within the model, but does not require summary statistics for the covariates to be included in the output file, an option is available for only printing the results for the snp or interaction effects. this is helpful when creating graphical summaries, such as manhattan plots, using other programs. table  <dig> gives a brief description of all the available commands.table  <dig> list of commands available in the software and their corresponding usage description




conversion & validation
before the data can be analysed, a number of conversions and quality control measures must be performed by the software. when the genotype file is read in, one snp at a time, either directly typed or imputed, survivalgwas_sv will convert the genotype probabilities for each subject into a “dosage” under an additive model for the minor allele. this enables appropriate analysis for imputed snp data by taking account of the uncertainty in the imputation process. the dosage model is given by si=pi1+2pi <dig>  where pi <dig> and pi <dig> are the probabilities that subject i carries  <dig> or  <dig> minor alleles, respectively, at the snp.

survivalgwas_sv throws exemptions whenever the user has specified an incorrect command or states a header that cannot be found in the data files. in such an event, the program will exit the application and will require re-submission of the task. the program also handles missing values within the .sample file. if a subject has missing values  for survival time, censoring indicator or a covariate used in the model then the subject is removed from the analysis with their corresponding snp information.

analysis
analysis can be carried out using one of two methods:  a cox proportional hazards model; or  a parametric weibull regression model. both methods have their advantages under different scenarios. more details about power and choice of method can be found in syed et al.  <cit> . software for performing power calculations under a range of pharmacogenetic time to event scenarios is also available from syed et al.  <cit> .

the cox proportional hazards model is widely considered the ‘standard’ approach when modelling time to event outcomes. it is a semi-parametric model where the hazard ratio takes a parametric form in terms of the regression coefficients, but the baseline hazard is unspecified. a disadvantage of this model is that the distribution of survival times is unknown. in cases where the proportional hazards assumption is not valid, other analysis models or extensions to the cox-regression model should be considered.

the weibull regression model is a parametric survival model with completely specified hazard and survivor functions. the weibull model is beneficial when the hazard ratio is not proportional over time or the data have an accelerated failure time feature. for more information on the estimation of the weibull regression model parameters please refer to syed et al.  <cit> .

output
the output from the analysis is saved in a text file, the name of which is specified by the user. each individual parameter analysed is recorded in a list under a header row that specifies the values in each column. it includes the variable name , rs id, chromosome number, base-pair position, effect and non-effect alleles, coefficient value for each variable analysed, along with its hazard ratio, standard error, confidence intervals  and corresponding p-value . the weibull regression model output will also comprise of a row for the intercept and shape parameter. there is also output for the likelihood ratio test of the overall model, effect allele frequency , minor allele frequency  and the impute info measure of imputation quality  <cit> .

example commands
assuming all data files and software are in the same folder, the command line in a linux terminal for the analysis of  <dig> snps and  <dig> additional covariates using a cox proportional hazards model is as follows:


mono survivalgwas_sv.exe -gf=data.gen -sf=data.sample -t=event_times -c=censoring -cov=covariate <dig> covariate <dig> -chr= <dig> -lstart= <dig> -lstop= <dig> -m=cox -p=onlysnp -o=output.txt


each command is separated by a space. the user can specify the exact location of the data files and where the output file will be saved. e.g., /directory/data/output.txt


an example of a shell script  to distribute the analyses between  <dig> computer cores within a linux cluster, using a sun grid engine batch system is as follows:


#!/bin/bash



#$ -o stdout



#$ -e stderr



directory=/survivalgwas_sv #location of software and data



str1= <dig> #start position in genotype file



str= <dig> #number of snps/lines in genotype file



no_of_jobs= <dig> #number of cores



inc=`expr \ \/ $no_of_jobs` #increment



#sge_task_id takes values 1:no_of_jobs



nstart=`expr \ \* $inc’



nstop=`expr $nstart + $inc – 1`



mono $directory/survivalgwas_sv.exe –gf=$directory/data.gen –sf=$directory/data.sample -t=event_times -c=censoring -cov=covariate <dig> covariate <dig> -chr= <dig> -lstart=$nstart -lstop=$nstop -m=cox -p=onlysnp -o=$directory/output${sge_task_id}.txt


RESULTS
to evaluate the performance of survivalgwas_sv, we simulated genotype data using the software hapgen <dig>  <cit> , based on european ancestry individuals from the hapmap <dig>  <cit>  reference panel. approximately  <dig>  million snps were simulated across  <dig> chromosomes for  <dig> patients. we then selected one snp  on chromosome  <dig> as the causal variant, which we used to generate time to event data. we generated the time to event data using the power calculator software “survivalgwas_power”, which simulated the survival time and censoring indicator for each individual for this single replicate of genotype data at the causal snp. a treatment covariate  was also simulated for each patient using a binomial distribution. the active treatment and the placebo were divided evenly  between the  <dig> patients. four datasets were simulated with censoring occurring randomly for approximately 20% of the sample:  proportional hazards data with a significant snp effect only;  proportional hazards data with significant snp, treatment and interaction effect;  accelerated failure time data with a significant snp effect only; and  accelerated failure time data with significant snp, treatment and interaction effect. datasets  and  were analysed using the cox proportional hazards model, whereas datasets  and  were analysed using the weibull regression model. only the snp term was included in the analysis models for analysing datasets  and . datasets  and , included snp, treatment and interaction terms within the analysis models. after analysis, the number of snps was reduced by removing snps with a maf <  <dig> . this was to remove rare variants for which there is minimal power to detect association, and a standard procedure in gwas quality control.

figure  <dig> presents the results from the cox proportional hazards model depicted by manhattan and qq-plots for dataset . the cox proportional hazards analysis was able to detect the causal snp association, identifying snps to be genome-wide significant  in the data simulated using the proportional hazards model. the same can also be said when considering fig.  <dig>  which depicts the interaction analysis  for dataset , simulated using the proportional hazards model.fig.  <dig> graphical representation from proportional hazards data snp analysis. graphical output from simulation study.  manhattan plot of cox proportional hazards analysis snp p-values &  cox proportional hazards analysis qq-plot


fig.  <dig> graphical representation from proportional hazards data snp-treatment interaction analysis. graphical output from simulation study.  manhattan plot of cox proportional hazards analysis interaction p-values &  cox proportional hazards analysis qq-plot




figures  <dig> and  <dig> represent the results from analysing the datasets simulated using the accelerated failure time assumption. figure  <dig> shows us that the weibull regression analysis identified the association between the causal snp and time to event outcome. figure  <dig> indicates that the weibull regression model was able to detect the interaction effect in dataset .fig.  <dig> graphical representation from accelerated failure time data snp analysis. graphical output from simulation study.  manhattan plot of weibull regression analysis snp p-values &  weibull regression analysis qq-plot


fig.  <dig> graphical representation from accelerated failure time data snp-treatment interaction analysis. graphical output from simulation study.  manhattan plot of weibull regression analysis interaction p-values &  weibull regression analysis qq-plot




the entire analysis was run using  <dig> computer nodes . each node consisted of a hp proliant dl170h g <dig> server,  <dig> intel xeon e <dig>  <dig> ghz quad-core cpus, 36 gb memory and 1 tb of local storage. running the single snp analysis of  <dig>  million snps across  <dig> chromosomes for  <dig> individuals with no additional covariates took ~6 h to complete using the cox proportional hazards model and ~5 h to complete using the weibull regression model. the more covariates added to the analysis and/or the addition of an interaction, the longer the computational runtime. each additional covariate took approximately an extra  <dig>  s for each individual snp analysed. the weibull regression analysis runtime varies greatly; this is due to the convergence criteria of the newton-raphson method used for estimation of all parameters  <cit> . runtime is also dependent on missing values within the sample file and whether or not the genotype file is compressed. ultimately, cluster specifications and size of data files are the most influential factors affecting the speed of the software.

CONCLUSIONS
survivalgwas_sv is the first analytics software capable of applying a range of survival analysis methods to genome-wide data, with appropriate handling of imputed genotypes. the software can be applied to large-scale gwas datasets efficiently and effectively, without incurring memory issues.

survival analysis methodology is evolving quickly, with the majority of researchers implementing new methods within the r statistical environment. future versions of survivalgwas_sv will employ more complex analysis techniques and extensions to account for more complex survival models such as competing risks, whilst integrating with r to allow for the software to update methodological changes faster.

survivalgwas_sv will ultimately enable discovery of genetic biomarkers of patient response to treatment for a range of complex human diseases, and will offer opportunities for patient stratification according to predicted benefit or risk of treatment, allowing personalisation of therapeutic intervention.

abbreviations
gwasgenome-wide association studies

hpchigh-performance computing

mafminor allele frequency

snpsingle nucleotide polymorphism

vcfvariant call format

