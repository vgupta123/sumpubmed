BACKGROUND
rna sequencing  has become as a cornerstone of genomics research. tophat and tophat <dig>  <cit>   is a highly-cited spliced read mapper for rna-seq data that is used in many large-scale studies around the world, for example in breast cancer  <cit> . a search for the term “tophat” in the ncbi gene expression omnibus  and the european nucleotide archive  yields  <dig> and  <dig> datasets using tophat, respectively, with the true number being likely much higher.

tophat writes read data in the bam format – the binary version of the sequence alignment/map  format  <cit> , but unlike other read mappers, it writes separate files for reads it could map to the reference genome  and reads it could not map . although many analyses focus on mapped reads alone, often it is necessary to consider unmapped reads, for example to perform quality assurance, to deposit the data in online archives, or to analyze the unmapped reads themselves.

however, all released versions of tophat to date  generate unmapped.bam files that are incompatible with common downstream software, e.g., the picard suite , samtools  <cit> , or the genome analysis toolkit   <cit> . even if the problems leading to the incompatibility are corrected in future versions of tophat, an immense amount of data has already been aligned with affected versions and would need to be realigned, and potentially reanalyzed. tophat-recondition is a post-processor for tophat unmapped reads that corrects the compatibility problems, and restores the ability to process bam files containing unmapped reads.

implementation
tophat-recondition is implemented in python using the pysam library  and requires python  <dig>  or higher. the simplified workflow of the software is shown in fig.  <dig>  first, the unmapped.bam file is loaded into memory, both for performance reasons and to enable random access to the unmapped reads. in the first pass over the unmapped reads the / <dig> and / <dig> suffixes are removed from read names , mapq is set to  <dig>  missing 0x <dig> flags are added to unmapped read-pairs, and the reads are indexed by their read names . in the second pass all unmapped reads with mapped mate are recorded to enable detection of missing mapped mates. the accepted_hits.bam file is read sequentially to obtain information to correct unmapped reads with mapped mate; the previously built index is used to quickly access the unmapped mate of the current mapped read. the mate-related bits  in the flags field of unmapped reads for which the mapped paired read could not be found are unset, effectively making them unpaired. additionally, the rname, rnext, pnext and pos fields are modified as described above. the corrected unmapped reads are written as unmapped_fixup.bam in the specified directory , along with a log file detailing the performed modifications. tophat-recondition can process a library with  <dig> million reads in ten minutes on a standard pc, with the disk read performance being the limiting factor.
fig.  <dig> simplified workflow of tophat-recondition



RESULTS
tophat’s unmapped.bam incompatibility with other tools has three origins: software bugs resulting in violations of the sam/bam specification , divergences from the specification’s recommended practices, and different interpretation of acceptable values for some of the file format’s fields between software.

two tophat issues impair compatibility: first, all unmapped read-pairs lack the 0x <dig> bit  in their flags field. this leads to downstream software incorrectly assuming the reads to be mapped. second, for unmapped reads where the flags field declares the paired read to be mapped, this mapped paired read may be missing from the sequence files. this makes the unmapped read’s fields invalid and can lead to software searching for, and failing to find the paired read.

the sam/bam specification contains a section on recommended practices for implementing the format. for read-pairs with one mapped and one unmapped read, tophat does not follow the recommendations that rname and pos of the unmapped read should have the same field values as the mapped read. additionally we found that setting rnext to the mapped read’s rnext value, and pnext to  <dig> improves compatibility.

lastly, there are differing interpretations of which field values are acceptable in certain conditions between software packages. for example, the valid range of values for the bam mapping quality  is 0- <dig>  for unmapped reads, tophat always sets the mapq value of unmapped reads to  <dig>  and bwa  <cit>  sets the value to greater than  <dig> in certain conditions, while the picard suite asserts that this value be  <dig> and returns an error when encountering such a read, which can confuse users.

some bam-processing software, e.g., picard and gatk can be configured to accept reads that do not conform to its expectations by ignoring errors, thus allowing processing to succeed. however, the resulting bam files remain non-compliant to the specification which can lead to issues in later analysis steps that are difficult to debug.

the occurrence of these problems is dependent on both the sequencing depth and the percentage of unmapped reads in the dataset; a higher value in either category can result in a higher rate of errors.

tophat-recondition either repairs or works around these problems, which allows processing to complete with all sam/bam-compliant software without relying on reducing strictness requirements.

usage information and a walk-through example can be found in additional file  <dig> 

CONCLUSIONS
tophat-recondition enables easy and fast post-processing for tophat unmapped reads. the tool can be used to process tophat-written unmapped reads to make them compatible with downstream tools such as samtools, the picard suite and gatk, which is currently not possible with the stock unmapped reads. this will increase the utility of the immense amount of rna-seq data that has been analyzed by tophat.

availability and requirements
project name: tophat-reconditionproject home page:https://github.com/cbrueffer/tophat-reconditionoperating system: platform independentprogramming language: pythonother requirements: pysamlicense: 2-clause bsdany restrictions to use by non-academics: none

additional file
additional file  <dig> usage information and walk-through example. 



competing interests

the authors declare that they have no competing interests.

authors’ contributions

cb wrote the tophat-recondition software. cb and lhs wrote the manuscript. both authors read and approved the final manuscript.

funding

this work was supported by the swedish cancer society, swedish research council, governmental funding of clinical research within national health service, and mrs. berta kamprad foundation.

