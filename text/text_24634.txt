BACKGROUND
protein name identification in texts is an important challenge in bioinformatics. several approaches have been proposed to tackle this problem. machine learning and statistical techniques proved to be useful  <cit> . other methods focus on linguistic techniques  <cit> , or are based on the usage of dictionaries extracted from databases, ontologies, and other data sources  <cit> . some methods rely on the combination of dictionaries and linguistic/machine learning techniques  <cit> . an overview of biological named entity extraction and an introduction into the problem with description of fly synonyms is given in  <cit> .

yeast, mouse, and fly are interesting organisms from several points of view: they are among the experimentally most intensively studied organisms. as model organisms they are frequently used to elucidate pathways and molecular interactions that might play a role in human diseases. for each of these organisms, there exists a well curated and public organism specific database. as many scientific publications deal with these organisms, a reliable gene/protein name detection method would be a significant advance for information retrieval and extraction. due to the differences in their protein nomenclature, the set of these three organisms is well suited for comparing gene/protein name identification tools.

when an entity extraction system is required to provide database identifiers for identified proteins, it is certainly beneficial to use a dictionary-based approach. we present a simple and efficient approach for protein name identification. it is based on extensively curated synonym lists. synonyms are then searched within medline abstracts by exact matching. the matching tool only recognizes spellings of a synonym that are explicitly contained in the synonym list and it does not consider context for matching. its initial main application was to test different synonym lists and to evaluate different kinds of expansions of synonym lists performed during curation. this tool allows us to rapidly evaluate modifications of synonyms and enables us to build high-quality synonym lists. these can then also be used as a prerequisite for text-mining with other text-mining tools. additionally, we present post filters which improve precision of our results; this is important for synonyms that overlap with common words or expressions having different meanings.

the biocreative evaluation   <cit>  was set up to assess the ability of automated systems to identify names of genes and gene products and normalize them by association of a unique identifier for each gene/gene product. in this paper we use the terms gene, gene product and protein as synonyms even though these terms refer to distinct biological objects.

our goal in participating in the biocreative evaluation was to assess the recall and precision that can be achieved with extensively curated synonym lists and exact string-matching, and to assess the difference with more sophisticated text-mining approaches. this evaluation allows us to evaluate our approach, especially the quality of annotation, on a blind prediction basis and for an independent test set. by using comparable synonym lists, it also allows us to compare our approach to a more involved approximate matching procedure implemented in the tool prominer  <cit>  in terms of recall and precision, as well as runtime and ease of use.

methods
generation and curation of synonym lists
the performance of an approach based on exact matching depends heavily on the quality and completeness of the synonym list used for searching. the synonym lists for yeast and mouse were created on the basis of the lists provided by the biocreative organizers. these lists were originally extracted from the corresponding organism specific databases, saccharomyces genome database   <cit>  and mouse genome database   <cit> . the fly synonym list was extracted directly from flybase  <cit>  and provided by hanisch et al.  <cit> .

we curated the provided lists to cover additional, frequently used synonyms and remove unspecific and inappropriate synonyms. the individual curation steps are fully automated, they can be applied individually and thus the curation procedure can be adapted to the synonym list that needs to be curated. essentially we always follow the same curation procedure, usually only very few parameters or rules are changed when it is applied to a synonym list of a different organism. here we describe the principles and the sequential steps as applied for the mouse synonym list; for yeast and fly the procedure was slightly modified.

in a first step, synonyms consisting solely of digits and/or special characters and synonyms of length less than two are removed. subtype specifiers are expanded to equivalent other specifiers . special characters at the beginning or end of a synonym are removed and different spelling variants like the insertion of a hyphen or space between alphabetic characters and digits are added . synonyms of a length less than six characters are added in upper case and with the first character in upper case.

eventually, organism specific expansion is performed, e.g. yeast synonyms as defined in the synonym list are often mentioned in texts with extension 'p', e.g. soh <dig> â†’ soh6p. the rules for such organism specific expansions must be deduced from a given training set  or by manual analysis of a set of texts if no annotated training set is available.

in a second step, synonyms matching common english words are removed . synonyms containing subtype specifiers are expanded by the synonym without subtype specifier if there is only one subtype mentioned in the synonym list .

the third step accomplishes further expansion and pruning. the tool used for this purpose was provided by d. hanisch, for a detailed description see  <cit> . in the expansion phase, new synonyms are added to the existing ones. the expansion is based on rules and lists. a list of frequent acronyms and long names is used for expanding every occurrence of a common acronym in the synonym list to the corresponding long name and reducing long names to acronyms .

inappropriate synonyms are detected and removed in the pruning phase by using token-class based regular expressions. a token can be any sequence of letters and/or numbers. a token class is a group of words which have a similar meaning or usage. examples of token classes are: measuring units , common words , descriptions , numbers, single letters. these token classes are combined in regular expressions, e.g. 'a number followed by a measuring unit', 'one description', 'a common word followed by a number'. synonyms that are matched exactly by one of these regular expressions are removed, e.g. ' <dig> kda' is removed by the regular expression 'a number followed by a measuring unit'; 'if 1' is removed by the pattern 'a common word followed by a number'. the lists of words belonging to a token class and the rules for combining them in regular expressions were compiled during previous work . the lists and rules used during the third curation step are of a general character and hence are usually not adapted when applied to new synonym lists. ambiguous synonyms  generally need to be assigned or disambiguated to one of the corresponding proteins. our approach does no disambiguation, therefore ambiguous synonyms are removed from the synonym list. objects which have no synonym left are removed from the synonym list.

the standard curation procedure was adapted to biocreative as follows: for yeast, the expansion rule for the extension 'p' was added. for fly, common words were not removed. for all organisms, synonyms that produced many false positive but not true positive matches in the training data were removed. the results on the provided hand-curated training set were analysed manually and some obvious, but missing synonyms were added .

due to the added spelling variants and expansion of abbreviations the curated synonym lists are significantly larger than the original ones. the curated mouse synonym list contains on average  <dig>  synonyms per object compared to  <dig>  synonyms per object in the original list. the curated yeast synonym list contains on average  <dig>  synonyms per object compared to  <dig>  synonyms per object in the original list. the run-time of the entire curation procedure depends on the size of the synonym list and the rules that are applied; it is about  <dig> minutes for the yeast synonym list.

match detection
synonyms as defined in the synonym list are searched within the texts by exact text matching. the search is case insensitive only if the synonym contains numbers or if the synonym length is above a certain threshold . when several synonyms of different length can be matched at a certain text position, only the longest match is reported.

rule-based post filter
we implemented a simple rule-based post filter that checks occurrences of synonyms for nearby occurrence of modifiers  indicating that the passage of text does not refer to a protein.

short synonyms in parentheses often overlap with definitions of abbreviations differing from the assumed protein, e.g. '...mapped by fluorescence in situ hybridization ...', '...developing mouse submandibular gland ...', 'fish' and 'smg' are valid mouse protein names, but the text does not refer to these as proteins. we clarify the meaning of such occurrences by checking the words ahead of parentheses corresponding to the letters of the synonym. if no significant overlap of these words with the alternative names of the assumed protein is found the match is discarded. as example the alternative name for 'fish' is 'five sh <dig> domains', for 'smg' it is 'small nuclear ribonucleoprotein polypeptide g', both have no overlap with the text fragments before parentheses shown above and are therefore removed.

svm-based post filter
fly synonyms show a significant overlap with common english words, body parts and phenotypic descriptions and therefore require context dependent evaluation. after the biocreative assessment, a post filter based on support vector machines   <cit>  has been implemented.

first, the curated fly synonym list is searched against medline-abstracts. matches of multi-word synonyms are always accepted. matches of single-word synonyms are evaluated by the svm and classified as true or false hits. the svm uses the following features:

â€¢ surface keys, i.e. orthographic properties of the matched synonym: synonym length; whether it contains non-characters, numbers, greek numbers, capitals, lower-case letters, numbers and letters; whether it consists entirely of capitals, lower-case letters; whether it has a capital after a non-capital; whether the first letter is upper case followed by only lower case

â€¢ part of speech tags  <cit>  of the matched synonym and directly adjacent words

â€¢ prefix and suffix of the synonym 

â€¢ all substrings of length  <dig> of the synonym

the feature value for the synonym length corresponds to the number of characters of the synonym. all other features are encoded as binary values .

furthermore, we use scores that indicate how often a word was found close to a correct synonym match. six categories of words were used: nearest verbs, nearest nouns, and words adjacent to a synonym match; occurrences before and after a match were considered separately.

scores for nouns and verbs were generated from the  <dig>  abstracts of the fly training set. we analysed each sentence that contains a synonym and extracted the closest verb and noun  <cit>  before and after the synonym match. as positive samples, we used the correct matches, as negative samples the false matches . for these verbs and nouns a score is calculated as described below.

a second set of scores is based on a search of mouse synonyms against approximately  <dig>  medline abstracts. in this data set, words appearing adjacent to synonym matches are extracted irrespective of their grammatical class. since we have no standard of truth for this data set, we assume every match as positive sample and extract the words adjacent to it. in order to estimate the background frequency of words, we consider all words of every sentence of that data set where no synonym has been matched as negative.



these scores are then used as svm feature values: the directly adjacent words and the closest verbs and nouns before and after a synonym match are extracted. for each category, the score of the word is used as value for the corresponding feature, it is  <dig> if no score was defined for the word.

the svm uses a linear kernel. it is trained on  <dig>  exact matches of single-word synonyms against the fly training set, where each true hit is used as positive sample and each false hit as negative sample. for the prediction, the curated synonym list is matched against the abstracts of the test set. matches of multi-word synonyms are accepted directly. every match of a single-word synonym is classified by the svm as positive or negative. a single word synonym is only accepted for an abstract if at least one match of this synonym within the abstract is classified as positive. all matches of multi-word synonyms and the accepted single-word synonyms are reported as final result.

in this paper we only show the usability of the svm-based post filter for fly synonyms. the motivation for using scores obtained by searching fly and mouse synonyms against two different sets of abstracts was to exploit more information than given in the annotated training data.

principles of the prominer approach
the prominer team used essentially the same curated mouse synonym list as we did. thus biocreative allows a comparison of our exact matching approach to the prominer approach, which is described in detail in  <cit> . here we only give a short description of the prominer principles.

the match algorithm implemented in prominer is based on token classes. different token classes have different weights according to their relevance for the protein name, e.g. tokens of the class 'modifier'  are important and thus have a high weight whereas tokens of the token class 'description'  have a low weight. this weighting scheme allows that a multi-word synonym is recognized even if certain less relevant parts of it are missing in the text. the prominer framework additionally applies different post filters and thus filters out non-specific synonyms. it has disambiguation capability, i.e. depending on the context of a synonym match it can narrow the list of proteins that an ambiguous synonym refers to. the tolerance of matching, the stringency of post filters, and also the accepted level of ambiguity for reporting is defined by a set of parameters that can be tuned for a specific application.

evaluation
the evaluation was performed on  <dig> medline abstracts for each of the organisms yeast, mouse, and fly. the results were evaluated by the biocreative organizers in terms of:



RESULTS
general performance
for yeast, we submitted one result set without post-filtering. for mouse, we submitted two runs: one without any post-filtering  and one with the rule-based post filter described above . for both organisms our tool achieved results close to the best overall results. the results are shown in table  <dig> and figures  <dig> and  <dig>  the results for fly  are shown in figure  <dig> 

for yeast the difference in f-measure from the best result is  <dig> %. this difference is mainly due to lower precision , but also recall is somewhat lower . for mouse, the best result is a run done with prominer; the difference with our results in f-measure is  <dig> %/ <dig> %. this run was done with the same synonym list, the only difference being that the list for prominer contained ambiguous synonyms, which were removed from our list.

some examples of errors in the recognition of mouse gene names are listed in the tables  <dig>   <dig>  and  <dig>  the errors in the yeast results are similar, and are not discussed in detail.

biocreative shows the different levels of difficulty for protein name recognition for different organisms; yeast has a quite precise nomenclature consisting mainly of distinctive single word synonyms, compared to mouse with many multi word protein names, and fly for which a large number of synonyms exist that overlap with standard english words and anatomic descriptions.

our results show that a straightforward approach for protein name recognition can be successful. exact matching of curated synonyms results in good recall and precision for yeast and mouse, the results are only marginally below those of the best methods available.

curation and exact matching of fly synonyms results in low precision . this pinpoints a limit of the 'simple' approach. the results after application of the svm-based post filter show that this limit can be overcome by additional application of more involved techniques.

curation of synonym list
figures  <dig>   <dig>  and  <dig> show the impact of curation. the result obtained with the original, non-curated, and the final, fully curated, synonym list is shown for all three organisms. the results of the fully curated lists of yeast and mouse were those that were submitted to biocreative.

the curation of the yeast synonym list increases recall significantly while precision decreases slightly .

for mouse, figure  <dig> shows the results for the original and the fully curated list and also results for intermediate curation steps. the figure shows that already an exact search with a list returned from steps 1+ <dig> of our curation procedure yields results which are comparable to those submitted by other groups. the final results were generated by applying all three curation steps. the additional execution of the third step of curation, namely the removal of inappropriate synonyms based on regular expressions of tokens and the expansion of acronyms and long names yields a further increase in recall and precision. the complete curation procedure significantly increases precision and also slightly improves recall of the mouse synonym list.

during the curation procedure, all ambiguous synonyms were removed. we analyzed two scenarios for estimating the effect of not removing them from the mouse synonym list. if we kept all ambiguous synonyms and reported all proteins to which they belong, we would obtain  <dig> additional correct matches and  <dig> false matches . if we were able to disambiguate them to the correct objects, which would be the ideal case, this would have been  <dig> additional correct matches and no additional false matches .

false positives
all false positive matches are correct matches of a valid synonym, they appear as false positives because the occurrence does not refer to the protein that was assumed to be mentioned. in these cases, the context reveals the intended meaning of the expression.

the false positive matches can be classified in different categories. some examples are listed in tables  <dig> and  <dig>  several false positives originate from phenotypic descriptions, e.g. 'growth retarded'. detailed grammar or semantic analysis would be required to distinguish between such descriptions and the gene being associated with the phenotype. other false positive matches have keywords close-by that clearly indicate that the match should not be reported because it refers to a different organism or it is not the focus of interest, e.g. 'human doublecortin' or 'bmp2-mediated'. these matches could easily be filtered out by the rule-based post filter, which does not yet consider organisms and words indicating that a match is only a passing mention. the post filter removes several false positive matches and so slightly increases precision, some examples are given in table  <dig> 

false negatives
the false negative matches can be classified into three groups : missing synonyms, different spellings of synonyms, and ambiguous synonyms.

in the future, recall could be increased by covering more spelling variants. some of the false negatives can be recovered by quite simple means such as equal treatment of space and hyphen or a further extension of subtype descriptors . inversions are more difficult to deal with as they are not always allowed. the inclusion of ambiguous synonyms could also bring about an improvement.

in some cases proteins are mentioned by expressions which have no clear relation to any of the given synonyms. these cases are difficult to handle.

the analysis of the false negative matches of yeast showed that long names of some proteins were used in abstracts while our synonym list contained only the corresponding short names. some of these long names could have been extracted from description fields of the saccharomyces genome database or swiss-prot. we only used the original synonym lists and applied the curation procedure as described above for obtaining the final synonym list. we did not include further information as contained in the database description fields or the list of additional yeast gene descriptions provided by the organizers. the reason for this is that we wanted to evaluate our approach in a way so that it could be applied for a large set of organisms, which possibly are not as well annotated with additional description fields as yeast, mouse and fly. it is certain that by considering further data sources as the annotations and descriptions in organism specific databases or general databases like swiss-prot, it will be possible to discover further synonyms and thus obtain higher recall.

rule-based post filter
the rule-based post filter was applied on mouse results; it increases precision by  <dig> % and decreases recall by  <dig> %. this shows that the approach is in principle useful but also shows its limits. the rules applied for filtering out false positives were defined after a crude manual analysis of the results on the training set. further enhancement is clearly possible.

one of the aims of the biocreative evaluation is the organism-specific recognition of gene/protein names. our approach does not yet include an organism filter. precision might be increased by disapproving matches that co-occur with organism names distinct from the organism of interest.

the examples of false positive matches in table  <dig> suggest further rules: all matches with a close-by occurrence of words indicating a passing mention  could be removed; part of speech tagging could help to identify descriptions like 'striated muscle', and one could consider removing matches that are tagged as adjective.

a more detailed analysis of false positive matches would probably produce further rules, but this needs intensive manual effort. another possibility could be the generation of rules by automatic means, e.g. statistic analysis of word frequencies. we propose the usage of the svm-based post filter instead of the rule-based post filter, as it also considers close-by words but does not need manually generated rules.

svm-based post filter
the identification of fly synonyms highlights the limits of the simple approach consisting of extensive curation and exact matching of a synonym list. the nomenclature of fly makes it indispensible to filter matches depending on the context. we used a svm to filter hits resulting from exact matching.

as descriptors, we use a number of commonly used features, such as surface keys, part-of-speech tags, and substrings. furthermore, we exploit the capability of our system to recognise mouse synonyms with satisfying accuracy and speed. we estimate scores for words appearing close to synonym matches within a large set of medline abstracts. these scores indicate the frequency of occurrence of the word with synonym matches. some examples of the top-ranked words are: interactor, protooncogene, costimulates ; heterodimer, transcripts, corepressor ; exerts, suppresses, encodes . these words are strong indicators of a gene-/protein-mention.

thus, we include more information than given in the original training set. the svm-based post filter proves to be very effective in filtering matches of fly synonyms, it increases precision by  <dig> % and f-measure by  <dig> % compared to the exact matching of the curated synonym list without post-filtering. the analysis of the filtered matches of the evaluation data set showed that most synonyms were either never  or always  filtered, and that this is almost always correct according to the annotation of the organizers. in some cases context is crucial for correctly classifying results, e.g. the word 'torpedo' in '... the signals transduced by the torpedo product ...' describes a fly gene, whereas in '... the mature drosophila ache is closely homologous to that of torpedo ache.' it describes an organism. these mentions were correctly classified by the svm-based post filter. the filter also has a positive effect on the matches of yeast and mouse synonyms . a significant advantage of this filtering approach compared to the rule-based post filter is its independence of manually generated rules and its general applicability.

comparison to approximate matching implemented in prominer
our results show that especially for organisms having a stringent terminology, such as yeast, exact text matching is useful and reasonable for protein name recognition. for such organisms, an approximate search like the algorithm applied in prominer does not improve the results significantly. the results for mouse show that for organisms with a more difficult terminology there is a slight difference in performance between exact text matching and approximate search. considering the best submitted results of both approaches , precision is similar but recall is higher for approximate search. keeping in mind the approximate matching procedure of prominer, this is obvious.

the result of the basic prominer search with the non-curated synonym list and no filtering and disambiguation  is slightly better than the results of exact matching of the non-curated synonym list. this is due to approximate matching and the internal scoring function that eliminates poor matches. the full prominer framework includes extensive filtering and disambiguation. with optimal parameter setting this system shows good results even when using the non-curated synonym list . the parameters used for this run were acquired during post evaluation and turned out to yield better results than the parameters used for the biocreative submissions. by using the curated synonym list with the same settings  the f-measure increases further to  <dig> . this shows that also for an approximate and advanced approach like prominer the curation of the synonym list has a significant effect on the search result. there are important advantages of the exact matching procedure: it is easy to run as it does not need any parameter optimisation. as the curation of the synonym list is independent of the search, an iterative curation procedure can be established. this is useful if the search result on a training set indicates bad synonyms which should be removed from the synonym list. the runtime of the curation procedure depends largely on the size and characteristics of the synonym list. for yeast, the curation takes about  <dig> minutes and the exact search against the training set of  <dig>  abstracts including analysis and report of results takes about  <dig> seconds on a standard machine. the exact search script is implemented in perl, it has less than  <dig> lines of code and is easy to adapt to different input and output formats.

prominer is less dependent on the curation of the synonym list and is capable of synonym disambiguation, but it is more difficult to set up and handle. the system needs adjustment of different matching parameters which have a significant effect on the results. it needs about  <dig>  minutes for preprocessing  of the yeast synonym list. the search on the corresponding training set including filtering and report of results takes  <dig>  minutes.

CONCLUSIONS
our goal in participating in the biocreative evaluation was to assess the recall and precision that can be achieved with extensively curated synonym lists and exact string-matching, and to assess the difference with more sophisticated text-mining approaches. our mouse synonym list was also used by group  <dig> with a more sophisticated search algorithm implemented in the tool prominer  <cit> . this evaluation allowed us to compare the different approaches on a blind prediction basis and for an independent test set. the results show that the difference in terms of recall and precision is small. our approach showed good performance in protein name recognition with exact text matching. our system does not need to be adapted for specific synonym lists in terms of parameter tuning or internal lists. this allows for straightforward application. it is crucial for our approach to use synonym lists which are as complete and correct as possible. therefore, we used a system for the extensive curation of protein synonym lists, based on the application of individual, fully automated steps. this curation is largely independent of the synonym list to be curated since the individual curation steps are of general character. nevertheless, the system can easily be adapted to cover specific problems of synonym lists, like missing synonyms that are frequently used in texts and which can be deduced from the synonyms in the list by application of rules.

one disadvantage of the extensive curation is the fact that the synonym lists become very large as they need to cover all possible different spellings of a protein name. in order to avoid this, one could consider making the text search more flexible, e.g. by including certain equivalent expressions like space and hyphen directly in the search tool.

our approach relies heavily on synonym lists and is therefore presumably less useful for applications where such a list is not readily available, e.g. the recognition of general gene and protein names without normalization as in biocreative task 1a . one could consider generating a general synonym list by joining annotations from a large number of public databases for applying our approach to this task.

biocreative clearly demonstrated the different levels of difficulty for identifying gene names of different organisms. for yeast, we obtained good results without any post-filtering, mouse results were slightly inferior, and fly results without post-filtering are unsatisfactory because of low precision. the usage of post filters can compensate for low precision, especially the proposed svm-based post filter proved to be very effective.

exact matching of the curated synonym list returns hits with high recall. depending on the characteristics of the synonym list, an appropriate post filter can be set up individually for increasing precision. the fly results show that also for organisms with an unspecific nomenclature, our approach including post-filtering yields good results.

the separation between matching and filtering allows flexibility in the kind of filter applied, and also makes it possible to gear the final result towards recall or precision.

