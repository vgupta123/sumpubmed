BACKGROUND
the majority of all therapeutic proteins elicit an anti-biotherapeutic immune response  in human patients receiving treatment  <cit> . the clinical effects of such a response may include various rapidly manifested anaphylactic responses, a reduction of therapeutic efficacy, and in rare cases cross-reactivity of anti-drug antibodies with endogenous patient proteins resulting in a form of induced autoimmunity  <cit> . wide concern over these issues has focused biopharmaceutical researchers on the immunogenicity of protein therapeutics, and has driven the search for strategies to detect, assess, and ameliorate potentially deleterious immune responses  <cit> .

while there exists a variety of factors that influence a protein therapeutic's immunogenicity  <cit> , we focus here on the effect of a protein's origins. specifically, non-human proteins exhibit a disproportionately high frequency of immunogenicity in humans as a result of the classical immune response  <cit> . in contrast, proteins of human origin are more likely to be recognized as "self," or to meet the "criteria of continuity"  <cit> . the goal is thus to engineer variants of the foreign protein that also are recognized as "self." for therapeutic antibodies, whose structure and function are well understood, immunogenicity reduction may be realized by rational grafting of key functional residues from an exogenous therapeutic antibody onto a human antibody framework  <cit> . the resulting chimeric antibody maintains the binding specificity and affinity of the exogenous therapeutic candidate, but the majority of the protein is comprised of human-derived amino acid sequences, thereby reducing the propensity for abir. the prevalence of chimeric and humanized antibodies among fda approved therapeutics  <cit>  as well as a detailed meta-analysis  <cit>  provide overwhelming evidence for the efficacy of this approach as a whole. however, there remains a considerable empirical, trial-and-error component, even in "rational" approaches  <cit> . rational grafting techniques require a precise knowledge of structure-function relationships, as well as a modular structure common to the exogenous therapeutic candidate and a homologous human protein. with the advanced state of knowledge for immunoglobulin proteins, therapeutic antibodies inherently satisfy these prerequisites. however, exogenous enzymes, signaling peptides, and other classes of non-human proteins represent a potentially massive pool of biotherapeutic agents. to effectively tap this reservoir of next generation drugs, more advanced deimmunization strategies are required to address the fact that many of these candidates do not possess common modular structures and frequently have no homologous human counterpart.

one alternative to humanization by rational grafting is the identification and modification of immunogenic peptide fragments of a protein, or t-cell epitopes, that drive the abir. these peptides are derived from proteolytic processing of protein that has been internalized by antigen presenting cells . the peptide fragments are bound within the groove of type ii major histocompatibility complex proteins , which are then transported to the surface of the immune cell where the peptide-mhc ii complex is displayed to the extracellular environment. should the displayed peptides constitute immunogenic sequences, they will form ternary peptide-mhc ii-t-cell receptor complexes with surface receptors of cognate white blood cells. the resulting signaling cascade leads to a coordinated immune response against the offending protein. to avoid such a response, it is sometimes possible to identify the most immunogenic peptide fragments of a candidate protein, and to subsequently mutagenize one or more of the corresponding residues so as to disrupt the peptide fragment's capacity to complex with the mhc ii and/or t-cell receptors. this process has been successfully applied to numerous therapeutic candidates including staphylokinase  <cit> , factor viii  <cit> , and a β-lactamase  <cit> . deimmunization by epitope deletion suffers from the limitation of being exceptionally time and resource intensive. traditionally, the approach entails synthesizing and testing the immunogenicity of large panels of peptides from the native protein, performing alanine scanning mutagenesis on the most immunogenic fragments to pinpoint critical mhc ii binding residues, incorporating deimmunizing mutations into the full length protein, and finally testing the functionality and immunogenicity of the engineered protein variants, only a small fraction of which are likely to retain high activity and/or constitute globally deimmunized candidates. more advanced implementations of this strategy exchange functionally relevant mutations for alanine mutations, but only late in the experimental cycle.

computational methods have been employed to aid the identification of mutations that can effectively eliminate mhc ii binding. often computational analyses are performed on only a small subpopulation of peptides that have been preselected from a much larger pool of possibilities  <cit> . these approaches also typically focus on a minimal set of only the most immunogenic peptides , and therefore cannot be guaranteed to provide globally optimal sequences. alternatively, numerous computational tools have been developed for immunogenicity prediction for an entire protein, based on its amino acid sequence  <cit> , and the efficacies of several alternative methods have been evaluated in head-to-head comparisons  <cit> . some such algorithms have been used to identify immunogenic peptides in practical biotherapeutics  <cit> ; our goal is to integrate such immunogenicity analyses within optimization algorithms that reduce predicted immunogenicity while accounting for structural and functional consequences.

in order to address the shortcomings of earlier approaches, this paper presents a novel protein design method in which protein sequences are computationally optimized to produce variants that are more likely to exhibit both low inherent immunogenicity and high level functionality. these are two competing concerns - mutations introduced to reduce immunogenicity may produce unstable or inactive proteins. we establish as our primary optimization objective reduction of immunogenicity, according to predicted t-cell epitopes within the sequence  <cit> . in order to also address the concern of stability/activity, we identify for each residue position those mutations that are deemed acceptable according to sequence and/or structure-based analyses. a dynamic programming approach then finds globally optimal and near-optimal sets of these acceptable mutations that minimize the occurrence of predicted epitopes.

our methods provide a number of significant extensions to the state of the art. they are not limited to deimmunization of antibodies , but can also be applied in engineering immunotolerant versions of more complex proteins, such as therapeutic enzymes. our approach seamlessly integrates immunogenic peptide identification, mutagenic deimmunization, and functional/structural analysis of potential mutations, employing well-established and effective tools for prediction of epitopes and for evaluation of stability changes. our dynamic programming-based algorithms are guaranteed to find globally optimal sets of mutations, avoiding the pitfall of making a mutation to mitigate one epitope but inadvertently introducing a new overlapping epitope. we provide the protein engineer with flexibility in setting a desired threshold for immunogenicity, limiting the number of mutations to consider, and in targeting specific mhc alleles. finally, in contrast to traditional experimental and computational techniques, our methods preferentially guide mutations to the most promiscuous immunogenic amino acids, i.e., those that are elements of two or more overlapping immunogenic peptides .

we apply our methods to optimize variants of several different protein therapeutics that have previously been targeted for deimmunization by other approaches. we characterize the space of sequences near these targets, identifying variants that are predicted to be less immunogenic than wild-type but still stable, i.e., deleting some predicted epitopes while using only conservative substitutions. we find a number of variants that, in comparison to earlier designs, contain fewer predicted epitopes for a given number of substitutions, or, viewed the other way, use fewer substitutions to delete a similar number of epitopes. our approach targets many of the same immunogenic regions as identified by experimental studies, even when not specifically focused. furthermore, by restricting substitutions to be relatively conservative , our variants are likely to maintain greater thermodynamic stability.

methods
our overall goal is to select, from the mutations deemed acceptable, a set that efficiently reduces the occurrence of predicted t-cell epitopes. we now formalize this problem; fig.  <dig> illustrates.

problem  <dig>  given a protein sequence s of length n, determine a variant s' minimizing , such that ∀i: s' ∈ m, where

• e : a <dig> →  <cit>  returns the epitope score for a peptide  in the range of  <dig> to  <dig>  where lower is better

• m : { <dig>   <dig>  ..., n} → 2a provides the allowed residues, indicating which amino acids  may be considered at each residue position

here and throughout, we use a = {a,c, ..., y} for the set of amino acids; sequences are 1-indexed; and the notation xi..j indicates the substring of x from position i to j, inclusive.

a number of experimentally-validated bioinformatics tools exist to predict immunogenicity  and changes in stability . our current implementation supports several state-of-the-art tools  <cit> , but is modular and can readily support others  <cit> .

immunogenicity evaluation
t-cell epitope predictors encapsulate the underlying specific recognition of an epitope by an mhc ii protein. we focus here on the human leukocyte antigen group dr  of mhc ii proteins, since they are the predominant isotype. hla-dr proteins have a recognition groove whose pockets form energetically favorable interactions with specific side-chains of peptides approximately  <dig> residues in length. numerous methods are available for epitope prediction, and they have been shown to be predictive of immunogenicity  <cit> . for the results, we employ two quite different and complementary methods.

propred
sturniolo et al.  <cit>  experimentally measured the binding affinity between individual residues and individual pockets of the mhc ii binding groove on a limited set of alleles. they then created binding profiles for untested alleles through sequence and structure alignment with tested alleles. in this "pocket profile" method, tepitope, the sum of position-specific weights for each residue in a 9-mer provides a score that is compared against a threshold to determine whether or not the peptide is in a given percentile of the best-recognized peptides. the approach was experimentally validated by comparing its predictions against hla-dr selected and nonselected peptide repertoires; up to 80% of the selected peptides were correctly predicted at a threshold that yielded < 5% false positives. singh and raghava then built a tool, propred, to expand the scope of tepitope and make it more easily accessible and applicable  <cit> . in a recent independent evaluation  <cit> , propred did quite well in epitope prediction, achieving an average  <dig>  area under the curve  across  <dig> different alleles. propred has also been successfully employed in a number of different studies; e.g., it has recently helped identify antigenic sites on a mosquito midgut glycoprotein, immunoreactive peptides in prostatic acid phosphatase, and promiscuous t-cell epitopes of three major secreted antigens of mycobacterium tuberculosis  <cit> . in all three of these examples, propred facilitated the rapid identification of potential vaccine targets that were then experimentally characterized in detail. in our case study of erythropoeitin , we found a quite striking match between propred predictions and published elispot assay immunogenicity results.

smm-align
nielsen et al.  <cit>  pursued a different approach to epitope prediction, developing the smm-align method by applying machine learning techniques to large curated databases of experimentally validated epitopes: the immune epitope database iedb  <cit>  and syfpeithi  <cit> . while propred uses data from single residues binding to single mhc ii pockets, smm-align uses data from whole peptides. furthermore, while propred is based on sequence and structure alignment, smm-align is uses gibbs sampling and a regulated least squares regression to develop position specific scoring matrices that predict the binding affinity between an epitope and mhc ii allele. in the independent evaluation mentioned above  <cit> , smm-align also achieved a mean  <dig>  auc .

while there are over  <dig> different hla-dr alleles, we have focused on  <dig> common alleles  that represent the majority of human populations world-wide  <cit> . thus our epitope score is the fraction of these  <dig> alleles predicted to recognize a peptide. in order to evaluate the potential for finding an epitope, we scored each of the  <dig> possible 9-mer peptides under propred at a 10% threshold. we found that  <dig>  ·  <dig>  are predicted to be recognized by one or more alleles, including  <dig>  ·  <dig> by all  <dig> alleles; see fig.  <dig> for a complete histogram.

stability evaluation
evaluating the effects of mutations on a protein's stability and activity is at the heart of all rational protein engineering techniques. for the results, we consider three different methods using different sources of information to determine acceptable residues likely to maintain wild-type qualities.

blosum
given sequence alone, standard substitution tables such as blosum  <cit>  can evaluate the overall acceptability of a mutation, according to substitutions in sets of natural sequences. we compute a "relative" blosum- <dig> score - the difference between the wild-type/wild-type score  and the wild-type/mutant score. we obtain a reasonably conservative set of acceptable residues by only taking those with score differences of at most  <dig> 

conservation
a set of sequences related to the target protein reveals which positions are highly conserved, and to which amino acid, vs. which are more variable. in turn, this is indicative of which residues are riskier to mutate and which ones are safer. the utility of sequence alignments in engineering thermostablilized and functional protein variants has been proven in numerous experimental studies  <cit> . we use a multiple sequence alignment and phylogenetic tree to compute position-specific amino acid frequencies in a family. to avoid over-counting highly-related sequences, we weight sequences using a bottom-up tree-based algorithm  <cit> . the weighted position-specific score for amino acid a at position i, according to a multiple sequence alignment f of sequences s with  weights ws is then:   

we permit residues such that ϕi, a exceeds a user-specified threshold, defaulting to -log  <dig>  

foldx
when a structure is available, we employ the foldx ΔΔg° predictor  <cit>  to evaluate the change in free energy for each possible substitution. foldx was demonstrated to achieve of  <dig>  correlation between predicted and experimental ΔΔg° over 95% of a database after outlier removal. foldx has since been successfully used to aid protein design, e.g., for custom dna kinases and potential anticancer drugs  <cit> . it is important to note that our method does not need precise ΔΔg° prediction, but only an indication of whether a possible substitution is relatively "safe" . we allow those residues whose predicted ΔΔg° values are at most a user-specified threshold, defaulting to  <dig>  kcal/mol, more than the wild-type value .

our problem specification treats substitutions independently of each other. while this is certainly a simplification, as residue interactions do affect stability and activity, it enables us to more quickly generate a number of solutions that are optimal  with respect to epitope score. these solutions can then be subjected to more expensive analyses for non-additive effects.

dynamic programming algorithms
given immunogenicity and stability predictions, represented in an epitope score e and set of allowed residues m, our goal  is to choose a set of mutations to minimize the total epitope score. in order to solve this problem by dynamic programming, let us define t  as the best possible total epitope score for the prefix of s ending at position i, such that the last  <dig> amino acids form the string x. t can be defined recursively:   

where · represents concatenation.

optimal substructure holds: the best score ending at some position with some string must extend the best score ending at the previous position with a compatible string. thus we can solve the recurrence by dynamic programming. ultimately we want to find the minimum value in the last column , and trace back to reconstruct the sequence. one small note of practical importance: when there is a tie for the minimum in eq.  <dig>  we should of course keep the wild-type amino acid.

the calculation for each cell requires constant time, and in the worst case there are n ·  <dig> cells. however, in practice we only need to fill in the entries that use allowed substitutions; if these are reasonably conservative, the table is much smaller. in the blosum-based approach described above, there are an average of  <dig>  amino acids to consider for each position. the results section provides position-by-position details for a specific protein, using blosum, conservation, and foldx.

in order to restrict the total number of substitutions made, an additional column can be added to the dynamic programming table. now define r as the best possible total epitope score for the prefix of s ending at position i, such that the last  <dig> amino acids form the string x, and that exactly s substitutions have been made from s. r can be defined recursively:   

where i{} is the indicator function, returning  <dig> if the predicate is true and  <dig> if it is false. here we ensure that the s index of r counts the total number of substitutions, starting in the base case with the number in the n-terminal 8-mer, and then in the recursive case adding  <dig> iff the most c-terminal residue of x is different from the corresponding wild-type residue. the extension only affects the size of the table ; the cost for computing each cell remains constant. we can readily extend this approach to calculate an  substitution score for each mutation, using s to track the total substitution score rather than the number of mutations.

while a standard dynamic programming backtrace returns a single optimal solution, there may in fact be multiple variants with the same score. it may also be beneficial to consider near-optimal variants, as it is unlikely that our epitope score and evaluation of mutations are perfect, and thus near-optimal variants are worth considering. upon finding the set of optimal and near-optimal solutions, we can subject them to further analysis, e.g., to model the effects of multiple substitutions, or to consider the ease of construction. furthermore, by comparing and contrasting the good variants, we can better assess the robustness of a variant , as well as the general utility of a substitution .

the problem of extracting multiple optimal and near-optimal solutions in dynamic programming has been extensively studied, from the early days of the field  <cit> . it has also received attention specifically in the bioinformatics community, as dynamic programming is at the heart of sequence alignment . for example, waterman and byers  <cit>  modified the standard dynamic programming backtracing procedure to produce near-optimal solutions, naor and brutlag  <cit>  presented an alternative approach for representing  all alignments whose score is within a factor of optimal, and gusfield  <cit>  explicitly accounted for the objective function parameters that yield different optimal solutions.

our current implementation employs the approach described by waterman and byers  <cit>  in order to generate multiple possible variants.

implementation
we have implemented our method in platform-independent java code. the program takes as input a target protein sequence, along with specifications of how to evaluate stability and immunogenicity. as discussed above, the program can evaluate stability with blosum, conservation , or foldx , and immunogenicity with propred  or smm-align . the user must indicate which methods to employ, along with any necessary inputs  and can adjust the thresholds for acceptable stability scores . the program outputs all tied-for-optimal and near-optimal variants up to a user-specified limit, along with stability and immunogenicity evaluations of each variant according to the various predictors.

the software can be freely obtained for academic use by request from the authors. a demonstration web-based version is available at http://www.cs.dartmouth.edu/~cbk/deimm/.

RESULTS
we demonstrate our approach by applying it to a number of proteins that have been the object of previous deimmunization efforts. we explore the favorable sequence space of these proteins by evaluating epitope score under the propred method at a 10% threshold, and considering allowed residues under one of blosum, conservation, or foldx. we then independently assess each variant under smm-align for epitope score and each of the other measures for stability.

in presenting stability predictions, we separately sum the value of each metric  over all the chosen substitutions. this enables assessment of a plan under different and potentially complementary measures; developing a consensus method in the future might yield even better results. the blosum score for each substitution is either  <dig>  or  <dig> . the negative-log conservation score for a substitution ranges from roughly  <dig>  to  <dig>  , with a maximum of roughly  <dig>  for allowed substitutions. for foldx, the score for a substitution ranges from roughly - <dig> to  <dig> , with a maximum of  <dig>  for allowed substitutions.

staphylokinase 
warmerdam et al.  <cit>  sought to deimmunize the fibrin-selective thrombolytic agent staphylokinase, specifically the sakstar wild-type variant derived from a lysogenic s. aureus strain. they targeted the c <dig> region, spanning residues 71- <dig>  which was recognized by 90% of the t-cells cloned from a set of donors. based on results from alanine scanning mutagenesis, sets of 2- <dig> alanine substitutions were selected to produce new variants designed to reduce immunogenicity.

we applied our approach to the original wild-type 71- <dig> peptide, using the staphylokinase/streptokinase family  for conservation statistics and sakstar crystal structure  for foldx calculations. fig.  <dig> shows the amount of freedom in planning, in terms of the number of allowable residues at each position under our three evaluation methods. blosum is typically more conservative and is overall more uniform; conservation depends on the position-specific diversity in the family; and foldx allows more mutations when analysis of the structure at hand indicates that they would not be too destabilizing. on average, blosum permits  <dig>  residues per position, conservation  <dig> , and foldx  <dig> . table  <dig> summarizes some of our optimized variants, one per allowed residue predicate . our objective function is the number of propred-predicted epitopes, so this number naturally decreases with the number of substitutions, though it is worth noting that each substitution actually deletes several predicted epitopes. furthermore, the independent predictor smm-align  likewise trends downward with an increasing number of substitutions. since propred was derived from pocket profiles and sequence alignments, while smm-align was trained on specific experimentally identified epitopes, they provide complementary assessments of immunogenicity, and their agreement suggests that we are indeed likely to be deleting actual epitopes. by comparing results for the different allowed residue predicates, we can gain insights into how best to delete these epitopes, from a stability-preservation viewpoint. for example, we see that v <dig> was chosen for the first substitution under all three approaches. with blosum, the conservative v79t was chosen; with conservation, d <dig> was recognized as sufficiently common in the sequence record; and with foldx, k <dig> was predicted to maintain stability. on the other hand, the three-substitution conservation-based variant eliminates all epitopes , but incurs a large ΔΔg° penalty relative to the solutions from the other metrics. it is worth noting that currently only the epitope score is the objective function , and the goal is to delete as many epitopes as possible using substitutions allowed by a particular predicate. thus, for example, in order to delete more epitopes, a conservation-based design may actually end up with a larger conservation penalty than a blosum-based design, by using less common substitutions  that are not allowed by blosum. further insights can be gained by considering all tied-for-optimal variants . for example, we can identify commonly selected mutations, e.g., v79t and v79k, and might consider variants incorporating them to be of higher quality.

variants of sakstar 71- <dig> by warmerdam et al. b <dig>  as well as by our dynamic programming algorithm, optimizing for propred and allowing mutations according to blosum, conservation, or foldx. e: number of propred epitopes; b, c, and ΔΔg°: total substitution penalty under blosum, conservation, and foldx, resp.; s: number of smm-align epitopes.

our method identifies the favorable region of the sequence space, but a natural question is what portion of the space is favorable. in other words, are many or most variants likely to be good anyway? fig.  <dig> shows the distribution of epitope scores for all 2-mutation variants of sakstar, using all acceptable mutations according to the blosum evaluation.  the figure makes clear that most variants have scores much worse than the optimal ones designed by our approach: the median score is  <dig> and only  <dig> of the  <dig> sequences  achieve the optimal score of  <dig>  thus experiment planning techniques are required, as stochastic methods are unlikely to produce high-quality variants.

our designs show dramatic reduction in predicted t-cell epitope content  compared to the variants chosen by warmerdam et al. their variants minimally decrease, or even introduce new predicted t-cell epitopes, due in part to limitations in their selection of amino acids .

while warmerdam et al. focused effort on the c <dig> region, our method is able to globally optimize an entire protein and thereby address a weakness identified in the earlier method: the "vast majority of humans recognize additional immunogenic sakstar regions"  <cit> . fig.  <dig> profiles a 6-mutation full-protein variant identified by our method. notice that even though it was not specifically targeted, the c <dig> immunogenic region was addressed with substitution v79d. in addition, mutations were selected in five other regions of high predicted immunogenicity. each mutation deletes an average of  <dig>  epitopes, overlapping the substituted position and/or for different mhc-ii alleles. furthermore , all substitutions are to amino acids with weighted frequency greater than . <dig> at those positions in the staphylokinase family. table  <dig> and additional file  <dig>  table s <dig> detail a number of the full-protein variants for different numbers of mutations. again the smm-align epitope evaluation correlates very well with the optimized propred score, trending downward with increasing numbers of substitutions. the different allowed residue predicates all hit the c <dig> region  within the first few substitutions , but also delete epitopes in a number of other predicted immunogenic regions . the designs compare favorably with the warmerdam designs in terms of both epitope predictors. the conservation-based variants tend to be particularly aggressive in deleting epitopes by choosing other residues represented in the family, but sacrifice more in predicted stability under foldx.

variants of the full sakstar protein by warmerdam et al.  <cit> , as well as by our dynamic programming algorithm, optimizing for propred and allowing mutations according to blosum, conservation, or foldx. e: number of propred epitopes; b, c, and ΔΔg°: total substitution penalty under blosum, conservation, and foldx, resp.; s: number of smm-align epitopes.

propred threshold
epitope predictors employ thresholds in deciding to label peptides as mhc-ii binders or non-binders. to illustrate our algorithm, we have employed the "loosest" propred threshold of 10%, erring on the side of predicting spurious epitopes instead of on the side of missing epitopes. we also evaluated plans for sakstar based on a tighter threshold of 5%. as expected, with the 5% threshold, propred predicts fewer epitopes than with the 10% threshold: sakstar 71- <dig> has  <dig> predicted epitopes at 10% but only  <dig> at 5%. at 5% our algorithm finds completely deimmunized variants for the peptide within  <dig> substitutions . the substitution v79t eliminates 75% of the epitopes predicted in the 71- <dig> peptide at the 5% threshold and 50% of those predicted at the 10% threshold . for full-length sakstar, both thresholds predict the same regions to be immunodominant . changing the threshold from 10% to 5% seems to evenly attenuate the epitope signal across the protein. of particular significance, we note that our optimization algorithm selects exactly the same full-length 6-substitution conservation-based variant with the 5% threshold  as it did for 10% . the plan eliminates a strikingly high proportion of epitopes, 66% at the 10% threshold and 88% at 5%.

allele analysis
a detailed analysis of predicted sakstar epitopes by binding allele shows that our 6-substitution conservation-based variant eliminates some of the epitopes predicted for each different allele . at the propred 5% threshold, our design eliminates all epitopes predicted to bind to alleles hla-drb1* <dig> and hla-drb1* <dig>  total allele elimination does not occur at the 10% threshold, although in the variant, alleles  <dig> and  <dig> are predicted to bind only  <dig> and  <dig> epitopes, respectively. the plots further underscore the observation that the 5% and 10% thresholds yield similar epitope profiles across the whole protein both by sequence and by allele. as mentioned above, the optimal deimmunizing mutations are identical for plans under both thresholds, but a greater percentage of predicted epitopes are eliminated at the 5% threshold. in general, it is easier to eliminate an epitope that lies between the 5% and 10% threshold than one that exceeds the 10% threshold. for example, in the 5% plan, the v79t mutation eliminates  <dig> of  <dig> epitopes beginning at residue  <dig>  but none of these four epitopes are eliminated at the 10% threshold.

erythropoietin 
tangri et al.  <cit>  focused on two regions in the protein therapeutic erythropoietin , residues 101- <dig> and 136- <dig>  which they experimentally determined to be immunogenic during an intensive analysis of peptide fragments spanning the entire length of the protein. they engineered four variants targeting the anchor residues of identified t-cell epitopes in these regions: l102p/s164d , t107d/s146d , l102g/t107d/s146d , and l102s/t107d/s146d .

we applied our methods to explore the favorable sequence space of epo, using the erythropoietin/thrombopoietin family  for the conservation statistics and the crystal structure of human epo  for the foldx analysis. as demonstrated above for sakstar, our method is not restricted to optimizing only targeted regions, but can instead seek to delete epitopes throughout the protein. since both the propred and smm-align epitope predictors and tangri et al.'s in vitro assays showed that there are many immunogenic regions in epo, we performed full-protein optimization, rather than restricting the allowed substitutions to the 101- <dig> and 136- <dig> regions. fig.  <dig> illustrates a 10-mutation blosum-based variant. the black line is an experimentally determined immunogenicity plot from tangri et al.  <cit>  and trends well with the propred model of immunogenicity. some deviations may be explained by the difference in alleles tested , and by the fact that they analyze 15-mers at every  <dig> positions while we analyze 9-mers at every position. nonetheless, the correlation is quite striking, as is the ability of our design to target most of the highly immunogenic regions with only a small number of substitutions. each substitution is quite effective, deleting an average of  <dig>  epitopes.

variants of the entire epo protein by tangri et al.  <cit>  as well as by our dynamic programming algorithm, optimizing for propred and allowing mutations according to blosum, conservation, or foldx. e: number of propred epitopes; b, c, and ΔΔg°: total substitution penalty under blosum, conservation, and foldx, resp.; s: number of smm-align epitopes.

as with sakstar, comparison of the different predicates yields insights into positions and substitutions that appear to be good in general; e.g., v82t under blosum, v82a under conservation, and v82e under foldx, deleting  <dig>   <dig>  and  <dig> epitopes respectively. notably, none of the v <dig> mutations eliminates the epitope anchored at l <dig> on allele hla-drb* <dig>  otherwise v82t and v82a eliminate all of the epitopes in the region overlapping position  <dig>  our global optimization recognizes diminishing returns at this area on the protein. while adding additional mutations in the region may eliminate the final regional epitope at l80; it is only one epitope, and mutations elsewhere eliminate more epitopes.

therapeutic antibodies
lazar et al.  <cit>  introduced the concept of "human string content," or the percent identity between peptides derived from a test antibody sequence and corresponding peptides taken from a multiple sequence alignment of homologous human antibodies. we applied our methodology to anti-her2/neu antibody 4d <dig>  the anti-egfr antibody  <dig>  and the anti-epcam antibody 17-1a. at the 16-substitution level, we are able to reduce epitope score by about 70-90%; this compares favorably to the previous work, which required more than four times that many substitutions. see additional file  <dig> for a more detailed description of the case study and our results.

CONCLUSIONS
we have shown that dynamic programming can address the problem of designing protein variants predicted to have reduced immunogenicity while maintaining stability. our method found a number of variants that compare favorably to those developed in previous efforts. in many cases, our designs delete more epitopes than previous efforts, as measured by the propred pocket profile method and independently assessed with the smm-align method. at the same time, the capacity of our algorithm to integrate stability analysis with deimmunization resulted in variants predicted to maintain greater thermodynamic stability. we further showed our optimization methods to be highly efficient, eliminating on average over  <dig> epitopes per mutation. finally, one of the most powerful features of our methods is that we achieve global deimmunization as opposed to targeted deletion of a single epitope regardless of other immunogenic or functional consequences.

the algorithm guarantees that our variants are provably optimal with respect to the epitope and stability predictors, but this does not guarantee optimal properties in vivo. instead, our algorithm should be viewed as a way to suggest variants worth studying experimentally. it provides a tool for the protein designer to explore the space of designs and focus in what appears to be a beneficial region, according to the best available predictions.

future experimental work will focus on selection of one or more therapeutic targets that will be subjected to an exhaustive optimization under several mutational loads. based on the resulting plans, small libraries of candidate variants will be constructed, expressed and purified, tested for functionality, and experimentally evaluated for immunogenic potential. further computational work will develop other classes of optimization algorithms for incorporating properties not strictly local in terms of the primary sequence, such as residues that covary in the sequence record or form strong interactions in the three-dimensional structure.

availability and requirements
project name: dp2: dynamic programming for deimmunizing proteins

project home page: http://www.cs.dartmouth.edu/~cbk/deimm/

operating system: platform independent

programming language: java

other requirements: java  <dig>  or higher

license: gnu gpl

any restrictions to use by non-academics: please contact the authors before non-academic use.

authors' contributions
asp, keg, and cbk developed the approach; asp, wz, and cbk designed the algorithms, asp implemented the algorithms and collected the results; asp, keg, and cbk analyzed the results and wrote the paper. all authors read and approved the final manuscript.

supplementary material
additional file 1
additional variants. the file includes additional variants for sakstar 71- <dig>  full-length sakstar, and full-length epo, as well as an additional case study for abs 4d <dig>   <dig>  and 17-1a.

click here for file

 acknowledgements
this work is supported in part by us nsf grant iis- <dig> and an alfred p. sloan foundation fellowship to cbk, and a neukom institute compx grant to cbk and keg.
