BACKGROUND
it is recognized that small regions of proteins tend to fold independently and are then stabilized by interactions between these distinct subunits or modules. the dissection of proteins into structurally independent and functionally distinct subunits led to the idea that proteins can be considered as collections of smaller units such as domains  <cit> . different definitions of domains have been in existence  <cit> . while some define a domain as a recognizable substructure within a protein and connected to other domains by very few structural elements such as a loop or a helix, others define domains as a parts of a protein molecule that behave in a quasi-independent manner and are considered as cooperative units in protein folding  <cit> . a further definition describes a domain as a relatively compact part of a protein that is characterized by its own pattern of intramolecular collective dynamics and which are distinguishable from those of other domains  <cit> . in the belief that an unequivocal definition of a module must be based on the most fundamental property of protein 3d structure, namely, the adjacency matrix of inter-residues contact, we adopted a network representation of the protein.

in an earlier work  <cit> , we had used a well-established, global method for identifying modules in networks  <cit> . the algorithm converges towards the maximization of the modularity of the given protein network; the network being defined by an adjacency matrix with a  <dig> denoting the existence of residue-residue contacts and a  <dig> for non-contacts. maximizing the modularity score, as defined by guimera et al.  <cit>  results in maximizing intra-module contacts while minimizing the inter-module contacts. the modularity m is given by

 m=∑s=1nmlsl− <dig> 

where nm is the number of modules, l is the number of links in the network, l is the number of links between nodes in module s and d is the sum of the degrees of the node in module s. in doing so, this allows the representation of the residues of the protein in terms of their intra-module degree, z and participation coefficient, p., which are given by

 zi=κi−κsj−σκsjpi=1−∑s=1nm <dig> 

where κi is the number of links of residue i to other residues in its module si, κ¯sj is the average of κ over all residues in module sj, ωκsj is the standard deviation of κ in module sj, κis is the number of links of node i to nodes in module s and ki is the total degree of node i.

we demonstrated that the labeling of residues in terms of these invariants, allowed for information rich representations of the studied proteins as well as to sketch a new way to link sequence, structure and the dynamical properties of proteins. we discovered a strong invariant character of protein molecules in terms of p/z characterization, pointing to a common topological design of all protein structures. this invariant representation, applied to different protein systems enabled us to identify the possible functional role of high p/z residues during the folding process. effectively, this invariance is a cartographic representation of the contact network for proteins and is represented by the plot of the residues in the p - z space. since it is identical for all the proteins, it does not embed any structural peculiarities or information for separating between different protein folds  <cit> .

we also observed that the modules identified using the procedure outlined above correlated well with early folding units or "foldons" and thus a knowledge of the modules existing in a given protein can help to identify residues that are critical for folding.

a significant use for the modules identified using our methodology is for the development of algorithms for protein 3d structure determination. in addition knowing the modules for a protein can help in the understanding of the folding pathway for that protein since residues with high |p/z| values tend to be protected during transition state and hence are fixed early in the folding process.

the modules can also be used for engineering new enzymes which is typically carried out by building a chimera of multiple proteins by cutting and pasting sequences from the respective proteins. a knowledge of the modules can guide the cuts in order to obtain chimeras that can fold in-vitro. in addition models of such early folding units can be invaluable in understanding the biochemical pathways of diseases that are known to be pathological through partially folded forms of proteins leading to the development of therapeutics.

implementation and 
RESULTS
gandivaweb
the gandivaweb webserver is based on the gandiva  algorithm which is an implementation of the guimera algorithm  <cit>  that uses a genetic algorithm  to optimize the modularity score, instead of simulated annealing which was used in the original algorithm. the algorithm has been written in c and was developed using the parallel genetic algorithm pgapack  <cit> , the gnu scientific library  <cit>  and the openmpi  <cit>  and mpich  <cit>  mpi  <cit>  implementations. the webserver has three main functionalities:

 <dig>  it displays the results from the application of the modularity algorithm gandiva on a set of  <dig> single-chain, globular proteins that were used as the basis for the work done in  <cit> .

 <dig>  the main functionality of the website however, is the ability to process an uploaded protein structure file  using gandiva and to send the results back to the user. since gandiva is a stochastic algorithm, the algorithm is run a number of times and the best results, as denoted by the largest modularity score obtained, is emailed back to the user. the user can set certain parameters like the maximum number of modules to be determined, the number of times to run the algorithm, the number of generations for the genetic algorithm as well as the number of generations for the fitness score to remain constant before it is assumed to have converged to a solution. an algorithm that takes into account the size of the protein  as well as the number of jobs in the queue for the cluster, notifies the user about the expected time required for the completion of the job. the results emailed back to the user are made up of the following parts:

• a results file that contains the details of the modular decomposition of the protein. the results file  <dig> contains the modularity score in the first line. this is succeeded by the following columns: residue number, module number, intra-module connectivity , inter-module participation coefficient , p/z, |p/z|. the second column indicates the module to which each residue belongs. in addition to the results file, five different figures are generated.

• along with the results file four figures are also included in the final results. the first two figures  and 1) show cartoon representations of the protein with the residues colored according to the modules that they belong to and the |p/z| value, respectively. high |p/z| valued residues act as structural stabilizers and have been found to be correlated with the residues that are protected in the transition phase.

• the third figure  shows a scatter plot of the residues on the p - z plane. this scatter plot is overlaid on the scatter plot of the residues for the  <dig> proteins studied in  <cit> . marked deviation from the typical "dentist's chair" shape for a particular protein suggests non-native contacts.

• the fourth  and fifth  figures show contour plots of the distribution of the buried and surface residues  plot) and the hydrophobic and polar residues over the topological p - z space, respectively. the distributions were obtained by first calculating the residue accessible surface area  and hydrophobicities respectively for each residue followed by partitioning the p - z space into an  <dig> ×  <dig> grid and then calculating the mean value of the rasa and hydrophobicities in each bin. the mean value for each cell of the  <dig> ×  <dig> grid was then plotted as a contour plot. significant differences have been observed between these distributions for native and decoy proteins, with native distributions showing more structure .

 <dig>  the third functionality of the webserver is in displaying the results obtained using gandiva. the user can upload the pdb file and the results file  and view the results in the embedded jmol viewer. for both functionalities  <dig> and  <dig>  the user can choose to view the protein colored by the modules that the residues belong to or by the |p/z| values. the user can also choose to view only hydrophobic, only polar or all the residues. additionally, the viewer can choose the graphical representations of the protein that are a part of the embedded viewer.

discussion
the gandivaweb server has been designed to partition any given pdb structure into modules. the modules thus obtained correlate well with autonomous folding units. additionally, high |p/z| valued residues are identified. these residues have been shown  <cit>  to correlate well with residues that are protected early during the folding process. a knowledge of such units can help in understanding the folding process. it can also be used for engineering enzymes as mentioned earlier. enzymes are typically engineered by cutting and pasting sequences from multiple proteins. knowing the "natural" boundaries of protein folding modules can guide the "cuts" required in order to engineer proteins that can fold in-vitro. moreover, the knowledge of early folding units can help in understanding the biophysical and biochemical causes of diseases that are caused by the misfolding of proteins.

CONCLUSIONS
we believe that the gandivaweb server will be of immense use to scientists interested in the phenomena of protein folding and those studying the architectural and structural organization of proteins.

additionally, the site will also be useful for scientists interested in the engineering of novel enzymes by providing them with a modularized view of the protein.

availability
the webserver can be found at 

authors' contributions
ak wrote the main algorithm and wrote the paper. tl designed and implemented the webserver and also helped in the writing of the paper. mt was in charge of the overall project.

