BACKGROUND
probabilistic models are widely used for sequence analysis  <cit> . hidden markov models  are a very large class of probabilistic models used for many problems in biological sequence analysis such as sequence homology searches  <cit> , sequence alignment  <cit> , or protein genefinding  <cit> . stochastic context-free grammars  are another class of probabilistic models used for structural rnas for problems such as rna homology searches  <cit> , rna structure prediction  <cit> , and rna genefinding  <cit> .

sequence similarity methods based on hmms or scfgs can take the form of profile or pair models and are very important for comparative genomics. these probabilistic methods for sequence comparison assume a certain degree of sequence divergence. for instance, in profile models  a sequence is compared to a consensus model. profile models must allow for the occurrence of insertions and deletions with respect to the consensus, and they do so by using state transition probabilities that assign some position-dependent penalties for modifying the consensus with insertions or deletions. similarly, in pair probabilistic models  <cit>  two related sequences are compared . pairwise alignments need to allow for substitution, insertion and deletion events between the two related sequences. substitutions are taken care of by residue emission probabilities, while insertion and deletion events are generally taken care of by state transition probabilities as in the case of profile hmms.

in the blast programs  <cit> , the score of a pairwise alignment is determined using substitution matrices which measure the degree of similarity between two aligned residues. similarly, in pair probabilistic models, residue emission probabilities are based on substitution matrices. the evolution of substitution matrices has been studied at large for many different kinds of processes: nucleotides, amino acids, codons, or rna basepairs  <cit> . the evolution of emission probabilities using substitution matrices is easily integrated into probabilistic models both for hmms  <cit>  and for scfgs  <cit> .

in probabilistic models, insertion and deletion events  are sometimes described by treating indels as an additional residue  in a substitution matrix. more often they are described using additional hidden states, where transition probabilities into those states represent the cost of gap initiation and transitions within those states represent the cost of gap extension. if the cost of gap initiation and gap extension are identical, it is referred to as a linear gap cost model. hidden states allow arbitrary costs for gap initiation and gap extension, which is traditionally referred to as an affine gap cost model. treating gaps as an extra character in a substitution matrix is equivalent to assuming a linear gap cost model. the parameters that modulate those processes should be allowed to change as the divergence time for the sequences being compared is varied. it has been difficult to combine probabilistic models such as profile and pair hmms or scfgs with evolutionary models for insertion and deletions  <cit> . methods to evolve transition probabilities are not as well developed as those describing substitution matrices, but significant effort is currently aimed at this problem  <cit> . models incorporating the evolution of insertions and deletions in the context of probabilistic models such as profile hmms or pair models are a very important goal in order to make those probabilistic models more realistic.

i encountered this problem in working on qrna, a computational program to identify noncoding rna genes de novo. qrna uses probabilistic comparative methods to analyze the pattern of mutation present in a pairwise alignment in order to decide whether the compared nucleic acid sequences are more likely to be protein-coding, structural rna encoding, or neither. originally qrna was parameterized at a fixed divergence time. motivated by the goal of making qrna a time dependent parametric family of models, i investigated the possibility of evolving the transition and emission probabilities associated with a given probabilistic model. since i already had the model parameterized for a given time, i aimed to use that model as a generating point of the whole time-parameterized family of models.

because qrna includes both linear and affine gap models in different places, in this paper i propose algorithms to describe the evolution of indels as a -th character in a substitution matrix, and algorithms to describe the evolution of the transition probabilities associated with a probabilistic model.

the purpose of this paper is to describe the general theoretical framework behind these methods. a detailed description of the particular implementation of these algorithms in qrna and a discussion of the results obtained with "evolutionary qrna"  will appear in a complementary publication.

RESULTS
evolutionary models for emission probabilities
the evolution of emission probabilities without gaps
in order to introduce notation, i will start with a brief review of the current methods for calculating joint probabilities conditional on time, p, where i, j are two residues . p gives us the probability that residues i and j are observed at a homologous site in a pairwise alignment after a divergence time t. pairwise sequence comparison methods score aligned residue pairs with these joint probabilities either explicitly or implicitly  <cit> . in explicit generative pair probabilistic models, like the pair-hmms and pair-scfg in qrna, the p terms are referred to as pair emission probabilities.

the evolution of joint probabilities is usually obtained by modeling the corresponding conditional probabilities pas a substitution process in which residue i has been substituted by residue j over time t. probabilistic models for nucleotide substitutions  <cit>  assume that nucleotide substitution follows a model of evolution that depends on an instantaneous rate matrix,

qt = etr,     

where t is the divergence time, r is the instantaneous rate matrix, and qt is the substitution matrix of conditional probabilities, that is qt ≡ p. this is a reasonable model used, for instance, to describe nucleotide substitutions in the jukes-cantor  <cit>  or kimura  <cit>  models, or the more general rev model  <cit> ; this is also the evolutionary model used for amino acid substitutions  <cit> , codon to codon substitutions  <cit> , and rna basepair to basepair substitutions  <cit> .

throughout this paper, i will use the words "divergence time", "divergence", or "time" equivalently to describe the amount of dissimilarity between biological sequences measured as the number of mutations and gaps introduced in the alignment of the sequences. i will never refer to "time" as representing an actual number of years of divergence, since this number cannot be determined intrinsically from sequence data.

thus, given a rate matrix r, qt  can be inferred for any desired time using the taylor expansion for the matrix exponential,



this taylor series converges in all cases.

there are several ways in which the rate matrix r can be determined. one approach is to use analytically inferred rate matrices that depend on a small number of external parameters  <cit> . for instance, the hky model for nucleotide substitutions  <cit>  depends on six parameters: the four stationary nucleotide frequencies, a rate of transitions, and a rate of transversions, which have to be provided externally. another type of approach uses maximum likelihood methods  <cit>  in order to estimate a rate matrix numerically from a training set of sequence alignments.

a third approach arises naturally in cases where suitable joint probabilities have already been estimated for a pair model, and we wish to make that model conditional on evolutionary divergence time. this approach starts from the assumption that our point estimate represents sequences at a particular arbitrary divergence time t*. for example, a similar assumption was taken to construct the blosum matrices  <cit> , which were obtained as joint probabilities at discrete point estimates from clusters of aligned sequences.

in this third approach the parameters at the generating time t* will be used to construct a rate matrix for the process. this approach is motivated by the kind of situation in which we find ourselves with probabilistic methods based on homology such as qrna: a model has been trained in one kind of data, and the resulting probabilities represent some effective but fixed divergence time, and we wish to extend that model to a time-dependent parameterization.

for residue substitution processes, the rate matrix r and q*, defined as the substitution matrix at the generating time t* , convey exactly the same information. more explicitly, assuming the evolutionary model given in equation  we can calculate the rate matrix of the process as a function of q* as



kishino et al  <cit>  introduced the idea of calculating the rate matrix starting from a given substitution matrix using equation  and an eigenvalue decomposition of q*. it is worth noting that the matrix equation for the rate r can be expressed as a taylor expansion of the form



which allows for a direct numerical calculation of the rate matrix. the convergence of this series requires only that for every  eigenvalue λ of matrix q*, then |λ - 1| <  <dig>  in addition, for any valid substitution matrix the eigenvalues have to be real and |λ| ≤  <dig> . under these two conditions, the above taylor series converges so long as the eigenvalues of q* are positive. therefore the three properties required of q* in order to be able to obtain a rate matrix using the taylor expansion in equation  are that its eigenvalues are all smaller than one , real, and positive. complex or negative eigenvalues would correspond to oscillatory behaviors, which do not seem to reflect the biology. all the substitution processes i have tested so far for nucleotides, amino acids, and rna basepairs correspond to real and positive eigenvalues for which the above method is applicable.

it is relevant to compare instantaneous rate matrix approaches to the approach used in the pam amino-acid substitution matrices  <cit> . the pam matrices were not generated by calculating a rate matrix, but by estimating from a collection of highly similar sequences the substitution matrix for the time of one substitution per site  ≡ qt =  <dig> , and then calculating qt at any other  time by multiplication. this is a discrete approximation that converges to the same answer given by the rate method for very small time units. pam matrices have been criticized for not being able to capture the substitutions that are observed for more dissimilar sequences. blosum matrices empirically outperform pam in sequence homology searches, presumably because sequences at larger divergence times were used to calculate the blosum matrices. however, the blosum method is not a time dependent continuous model but a very coarse-grained discretization. there are ways of combining the best of both approaches  to generate rate matrices, for instance by using the resolvent method  <cit> , or using maximum likelihood methods as in the wag matrices  <cit> . however, it is also possible to take a discrete blosum matrix, for instance blosum <dig>  and convert it to an underlying rate matrix. the blosum62-generated rate matrix obtained using equation  is shown in figure  <dig> 

a rate matrix can also be derived from the pam data  by various methods. one exact method is to do an eigenvalue decomposition as presented in  <cit> . recently, other methods have been proposed to calculate a rate matrix from the dayhoff data  <cit> . these methods still assume that r ≈  which corresponds to taking only the first term in the taylor series for the logarithm in equation . this assumption is good only for very closely related sequences. using the taylor series allows one to estimate, using the same input data and avoiding the calculation of eigenvalues, the rate matrix to any desired level of precision, independent of the degree of similarity in the training set.

notice that the rate matrix obtained using blosum <dig>  has two off-diagonal negative entries . off-diagonal entries of the rate matrix have to be positive so that i + δtr can be interpreted as a substitution matrix for very small times δt. this problem is not unique to sequence data. the construction of rate matrices for a markov process from empirical data using a generating time is also used in mathematical modeling of financial processes such as credit risk modeling  <cit> . in the world of mathematical finances the problem is referred to as the regularization problem. i will use one of following regularization algorithms presented in  <cit> . the qog algorithm  regularizes the rate matrix. the qom algorithm  leaves the rate matrix unchanged and regularizes the conditional matrix at a given time if any negative probability appears. using the qog algorithm we obtain a regularized version of the rate matrix using blosum <dig>  which is given in figure  <dig> 

regularization algorithms
here i reproduce the qog and qom regularization algorithms. the proofs for these algorithms can be found in  <cit> . the qog algorithm regularizes each row of a rate matrix independently. given a row in a rate matrix r,

r =  ≡  ..., r),     

the qog algorithm solves the problem of finding the vector at the minimal euclidean distance from r such that the sum of all its elements is zero, and all elements but one are positive.

the steps of the qog algorithm are:

 <dig>  permute the row vector so that r <dig> = r.

 <dig>  construct the vector w, such that wi = ri - λ, where .

 <dig>  obtain the permutation , such that .

 <dig>  construct , for k =  <dig>  ..., n -  <dig> 

 <dig>  calculate kmin = mink =  <dig>  ..., n -  <dig> {k such that ck ≤ 0}.

 <dig>  construct the vector



 <dig>  the regularized row is given by r ← p- <dig> (). finally reverse the permutation of step .

the qom algorithm regularizes each row of a conditional matrix independently. given a row in a conditional matrix qt

r =  ≡ ,..., qt),     

the qom algorithm solves the problem of finding the vector at the minimal euclidean distance from r such that the sum of all its elements is one, and all elements are positive.

the steps of the qom algorithm are:

 <dig>  construct the vector w, such that wi = ri - λ, where .

 <dig>  if all wi are non negative, r ← w is the new regularized row.

 <dig>  otherwise, obtain the permutation , such that .

 <dig>  construct , for k =  <dig> ..., n.

 <dig>  calculate kmax = maxk =  <dig> ..., n {k such that ck ≤ 1}.

 <dig>  construct the vector



 <dig>  the regularized row is given by r ← p- <dig> ().

a  <dig> ×  <dig> example starting from joint probabilities at a given generating time
as an review of these techniques, i will use a set of  <dig> ×  <dig> single-nucleotide joint probabilities p for i, j = {a, c, g, t} at a particular generating time t* to construct the corresponding rate matrix.

in this example, the joint probabilities at the generating time using the matrix notation p* ≡ p are given by,



these  <dig> ×  <dig> pair-nucleotide probabilities are taken from the program qrna. they were calculated according to  <cit>  by marginalizing codon-codon joint probabilities which were constructed from the blosum <dig> matrix of amino acid substitutions. these  <dig> ×  <dig> probabilities can be viewed as a particular example of the rev model  <cit> . note that the sum of all elements of p* adds up to one, and the matrix is symmetric.

the marginal probabilities defined as pi = ∑j p can be calculated from the joint probabilities to be,

p =  = .     

similarly, the conditional probabilities p can be calculated from the previous joint and marginal probabilities using the relationship p = p pi. using the matrix representation q* ≡ p we have,



notice how the sum of the elements in each row adds up to one. notice also how q* is quite different from the identity matrix, which means that we have started with a quite divergent generating time.

if we assume a homogeneous markov substitution process, we can interpret the conditional probabilities q* as the matrix of substitution probabilities at the generating time. thus, we can characterize the underlying evolutionary process by its instantaneous rate of evolution, which can be calculated from q* using equation . the resulting rate matrix r  is given by,



this rate matrix has all the good properties: "normalization": the sum of the elements of each row is zero.  "reversibility": pi rij = pj rji. the process is reversible by construction because we started with symmetric joint probabilities.  "saturation". the rate matrix converges at time infinity to the given marginal probabilities in equation . we can test saturation by using equation  and calculating the substitution matrix for a very large time. for instance, for t = 10t* we have



saturation  of a markov process is a necessary consequence of  normalization and  reversibility. appendix a shows a derivation of the previous statement which was useful for me  when studying the behavior at t = ∞ of more complicated evolutionary models. therefore, starting from joint probabilities as in this example, we can always interpret the marginal probabilities as the stationary probabilities of the evolutionary process.

in summary, starting with a single set of joint probabilities at one particular generating divergence time t*, we calculate the joint probabilities at any other arbitrary time, assuming an exponential model of evolution. to that effect, given the particular set of joint probabilities  we have calculated the corresponding rate matrix  by taylor expansion. thus we can estimate the substitution matrix/conditional probabilities at any other arbitrary time, simply using equation , and reconstruct the joint probabilities at any other arbitrary time. for instance, for t =  <dig> t* we obtain,



this method allows us to evolve pair emission probabilities corresponding to different processes  for instance  <dig> ×  <dig> amino acid-to-amino acid joint emission probabilities,  <dig> ×  <dig> codon-to-codon joint emission probabilities, or  <dig> ×  <dig> rna basepair-to-basepair joint emission probabilities. thus, this method is useful to be applied in combination with pair hmms or pair scfgs already parameterized at one fixed divergence time to make their emission probabilities a time-dependent family.

the evolution of emission probabilities with indels treated as an extra character
substitution processes  are not enough to describe the full evolutionary relationship between two biological sequences. we also need to consider indels, for which we need to introduce more complicated models of evolution than the one described so far.

indels have traditionally been a problem for phylogenetic methods. programs to construct phylogenetic trees from data such as phylip  <cit> , paup*  <cit> , and other phylogeny packages  <cit>  treat gaps as missing data. the theoretical description of the evolution of gaps in a probabilistic fashion reached a landmark with the thorne/kishino/felsenstein  model  <cit> . the tkf model however is hard to implement in combination with a probabilistic model such as an hmm, although an active area of research exists in that direction  <cit> . a more direct attack to the problem of introducing phylogeny into existing probabilistic models originated with the concept of tree hmms  <cit> . the tree hmm method models the evolution of the parsing of different sequences through an hmm. this approach is more related with the evolution of transition probabilities, and i will discuss it later on in this paper.

here i am going to describe a method for the evolution of indels under the assumption that they behave like an additional residue added to a n × n residue substitution matrix. this is a simplification of the problem because it forces indels to have linear penalties  and to behave independently of each other . despite its apparent simplicity, this approach poses interesting problems in parameterizing evolution.

let us review some of the implications of insertion and deletion processes. the treatment that pair models give to pairwise alignments can be interpreted  with all generality as if one of the sequences is the ancestor of the other one. for any two aligned residues we assume that they can be related by a substitution process. for a residue aligned to a gap we assume that either a residue in the ancestor was deleted in the descendent sequence, or that a residue not present in the ancestor appeared in the descendent sequence.

an stochastic insertion–deletion process also involves insertions followed by subsequent deletions. these events leave no trace in pairwise alignments because alignments usually do not retain gaps aligned to gaps. however, when we are treating indels as an extra character, we have to account for such events.

if we were given ideal alignments with all their gap-to-gap aligned columns we could estimate from data the  ×  extended joint probabilities at a generating time, . because that is not the case, we need to make some inference about . let us represent with Δ, such that  <dig> ≤ Δ ≤ 1/ <dig>  the expected frequency of observed gaps with respect to the total number of residues in pairwise alignments at a particular time t*. the parameter Δ, can be estimated from data, or it could be estimated according to the tkf model  <cit>  as



if we knew the values for the rate of insertions λ and the rate of deletions μ, such that  <dig> <λ <μ.

let us represent with Δ' the expected frequency of missing gap-to-gap aligned columns in a pairwise alignment at a particular time t*. one can estimate Δ' as the expected length of insertions that were later deleted without leaving any trace in current sequences. the probability of a stretch of l gap-to-gap characters is given by the geometric distribution density ρ =  Δ2l. therefore Δ' is given by,



using these two parameters and the joint probabilities in the absence of gaps at the generating time p*() we can construct the set of  ×  extended joint probabilities at t* as



where we have assumed independence for the joint probability of a residue and a gap. the normalization factor Ω = 1/ represents the fact that the observed Δ is different from the value we would have obtained had we known the complete alignment.

another implication of insertion and deletions appears in the behavior of the marginal probabilities of single residues and indels. at t =  <dig> when sequences have not yet diverged, the marginal probability of finding a gap in an alignment should be zero. in the limit t = ∞, the pairwise alignment of two finite-length sequences is going to be dominated by gap-to-gap alignments, which implies that as the divergence time increases the marginal probability of a residue becomes negligible, while the marginal probability of a gap becomes one in the limit t = ∞. our evolutionary model has to be able to accommodate such saturation frequencies.

a step-by-step description of the algorithm for the evolution of gaps as an extra residue
i will start by describing the steps to implement the method before explaining how to derive those steps. this method can be applied starting from two different situations: starting from a n × n set of joint probabilities at a generating time that need to be extended to allow indel characters and evolved with time; or starting from a given n × n rate matrix that needs to be extended to allow indel characters.

suppose we start with a n × n set of joint probabilities p* at a generating time t*, where p stands for the marginal probabilities and q* represents the set of conditional probabilities associated with p*.

 <dig>  extend the joint probabilities at the generating time t* to a  ×  matrix of joint probabilities  of the form,



where Δ is a parameter which represents the expected frequency of gaps with respect to the total number of residues in an pairwise alignment at t*, and which satisfies the condition  <dig> ≤ Δ ≤ 1/ <dig>  the parameter Δ' is given in terms of Δ as , and the normalization constant is given by Ω = 1/. the indices with hats () stand for the n residues, and exclude the gap character, which i represent with the symbol -.

the  ×  extended conditional probabilities at the generating time  are given by,



 <dig>  construct the  ×  extended rate matrix rε as



where



 <dig>  calculate the exponential of the rate matrix  using the taylor expansion,



 <dig>  construct the extended matrix of conditional probabilities at arbitrary time  as



where the matrix q <dig> is given by



where  are the original marginal probabilities of p*, and the probability  <dig> <q <dig> ≤  <dig> is given by . the function δ is a kronecker delta which takes value one for i = j and zero otherwise. the case q <dig> =  <dig> corresponds to the extreme case in which the n +  <dig> gap residue does not evolve.

 <dig>  construct the extended marginal probabilities  as



where the probability of a gap at time t is given by,



i call this process "quasi-stationary" because the background frequencies  () at any finite time are always proportional to the original n-dimensional background frequencies . this result is a concequence of the fact that the first n elements of the last row of q <dig> are proportional to the n stationary frequencies . on the other hand, while remaining "quasi-stationary" the background frequencies evolve from  at time zero towards "all gaps" at time infinity, i.e. limt → ∞ Λt =  <dig>  this behaviour at time infinity is the consequence of the particular value of q <dig> selected in the previous step.

 <dig>  finally, construct the evolved  ×  joint probabilities at arbitrary time  as



the expression for Λt in equation  guarantees reversibility, that is, that the extended  constructed according to the above expression are symmetric.

for the other starting situation, in which we have a n × n rate marix r, the procedure to generate a  ×  quasi-stationary reversible evolutionary model is the following:

 <dig>  construct the  ×  extended rate matrix rε as



where we have extended the n × n rate matrix r with the parameter β >  <dig> 

the instantaneous rate is given by,



thus β is the instantaneous rate of deletion of a character, while -β is the rate of insertion of character .  notice that q <dig> =  <dig> corresponds to the case in which the rate of insertions is zero.

 <dig>  find  analytically, if an analytic expression for rε is given by solving the differential equation d () / dt = rε , or numerically, proceeding as in step  of the previous procedure.

 <dig>  proceed as in steps - of the previous procedure.

a  <dig> ×  <dig> example starting from joint probabilities at a given generating time
we start with the generating joint probabilities p* in the  <dig> ×  <dig> example in equation , which we want to extend to a  <dig> ×  <dig> matrix by adding a gap character. for this example, i have selected the arbitrary value for the gap parameter Δ =  <dig> .

the  <dig> ×  <dig> joint probabilities in equation  augmented to a  <dig> ×  <dig> matrix  using the gap parameter Δ =  <dig>   =  <dig> ) is given by,



the conditional probabilities   = pε  are given by,



the extended marginal probabilities at the particular time instance t* are given by,

 =  = ,     

which are quasi-stationary with respect to the  <dig> ×  <dig> stationary probabilities p =  we started with in equation .

the matrix of conditional probabilities at time zero using expression  is given by,



the rate matrix for this example, calculated using the taylor expansion described in equation  takes the value,



one should not be concerned to see a whole row of zeros for this rate matrix. for this generalized model the instantaneous rate of evolution is not directly given by the rate matrix; instead, the instantaneous rate of evolution is given by,



in this example, the instantaneous rate of evolution takes the form,



one should not be concerned either by having some negative off diagonal components. for small times δt, the conditional matrix is given by,



therefore, in order to have a proper matrix of conditional probabilities for sufficiently small δt, it is necessary to satisfy the following condition for each pair of indices i, j,

if q <dig> =  <dig> then  >  <dig>      

in this case, the off-diagonal components of the last row of q <dig> are non-zero, which allows us to have negative off-diagonal elements for that row in the instantaneous rate matrix q0rε.

with the  <dig> ×  <dig> rate matrix in hand, we can apply steps  and  to obtain the conditional probabilities at any arbitrary time . for instance for t =  <dig> t* we obtain the following evolved conditional probabilities:



the quasi-stationary marginal probabilities are constructed using the result  =  <dig> , and the  <dig> ×  <dig> stationary probabilities p = , following step  of the algorithm as,



finally, using equation , for t =  <dig> t*, we obtain the following evolved joint probabilities



notice that this matrix is symmetric, which is the result of having imposed reversibility for any arbitrary divergence time.

we can also see by calculating the conditional probabilities at large divergence times how these probabilities evolve towards their saturation values given by . for instance, for t = 30t* we have,



an example starting from a rate matrix: the jukes-cantor model extended to gaps
as an example of a situation in which we start with a rate matrix, let us consider the generalization of the jukes-cantor model  <cit>  to a  <dig> ×  <dig> evolutionary model with a gap character. the original jukes-cantor model assumes that all nucleotides mutate at the same rate α >  <dig> which is represented by the rate matrix



in this simple case the conditional matrix qt = etr can be found analytically by solving the matrix differential equation . because of the symmetries of the problem we can write



with the condition rt + 3st =  <dig>  we then obtain the following differential equations





and the solutions are,





by taking the limit t = ∞ in the previous two equations, one can see that the saturation frequencies of the jukes-cantor model are pi =  <dig>  for i = a, c, g, t.

the  <dig> ×  <dig> extended jukes-cantor rate matrix rε is constructed by adding a rate of mutation to a gap represented by the quantity β ≥  <dig> which in principle we will assume is different from the rate of substitutions α,



we also introduce the matrix at time zero q <dig> which depends on the probability parameter  <dig> ≥ q <dig> >  <dig> 



where the particular case q <dig> =  <dig> is only allowed if simultaneously β =  <dig>  and corresponds to a trivial extension of the original jukes-cantor model in which the gap character does not evolve.

the conditional matrix at arbitrary time is given by  = q <dig>  the symmetries of the problem in this case allow us to parameterize  as



with the conditions rt + 3st + γt =  <dig> and 4ξt + σt =  <dig> 

introducing the matrix mt ≡ , we can parameterize



which implies that



σt =  γt + q <dig>      

the differential equation to calculate mt takes the form  = rε mt, which translates into the differential equations,







which are satisfied by





γt =  <dig> - e-βt.     

and in addition we have



σt =  <dig> -  e-βt.     

in the limit case β =  <dig>  the solutions for rt and st reduce to those of the original jukes-cantor model with the trivial additions of σt =  <dig>  ξt =  <dig> and γt =  <dig>  after setting q <dig> =  <dig> 

the extended jukes-cantor model depends on three parameters: the rate of nucleotide substitution α >  <dig>  the rate of nucleotide deletion β ≥  <dig>  and the parameter  <dig> ≥ q <dig> >  <dig>  what is the meaning of q <dig> ? q <dig> controls the saturation frequencies , as well as the background frequencies at any other finite time. for β >  <dig> and  <dig> >q <dig> >  <dig>  taking the limit t = ∞ in equations -, one can see that the saturation probabilities are given by . at any other finite time, the background frequencies of the model are quasi-stationary with respect to the background frequencies of the original jukes-cantor model, and are given by



pt  = Λt.     

imposing the reversibility condition  in particular we obtain γt + Λtσt = Λt which implies,



therefore q <dig> controls how fast the background frequencies approach the saturation probabilities  through the factor Λt. for a given β, the larger q <dig>  the faster Λt approaches one. 

at first glance, it looks like q <dig> could take any value including one in the solution for the extended jukes-cantor model. q <dig> =  <dig> would result in fixed background frequencies of the form , which is an undesirable result, and the value q <dig> =  <dig> would have to be excluded when β >  <dig>  in fact, the limit to the ungapped jukes-cantor model has to be taken by setting β =  <dig> first, and then q <dig> =  <dig>  in that way, Λt =  <dig> for all times, which is the correct result for the original jukes-cantor model.

derivation of the algorithm for a  ×  quasi-stationary and reversible evolutionary process
unlike the ungapped n × n case in which the marginal probabilities are time independent, in the presence of gaps the marginal probabilities have to evolve with time. in fact, as i discussed earlier, the marginal probability of a gap   has to evolve from zero at time zero to one at time infinity. as a result of that observation, probabilistic evolutionary models with q <dig> ≠ i are necessary in the presence of gaps in order to maintain reversibility. the reason for this requirement is the following: for an evolutionary model of the form etr, reversibility implies that there is some p* such that p*q* = p* ; it follows then that p*r =  <dig>  and therefore p*etr = p* for arbitrary time t. thus, under a reversible model of the form qt = etr, marginal probabilities do not evolve with time. on the other hand, if q <dig> ≠ i then the condition p*q* = p* does not imply p*r =  <dig> for the rate matrix r, and therefore it does not impose p* as the marginal probabilities for arbitrary t. 

therefore, to model the evolution of gaps we need to generalize the evolutionary model to have the following form

 = q <dig>      

the matrix q <dig> can be parameterized in following form,



this matrix depends on one additional parameter q <dig>  the particular dependency q <dig> ∝ , is necessary to obtain quasi-stationary reversibility of the marginal probablilities.

the rate matrix is now a function of q <dig> and , and takes the form



where the matrix  has the form,



where



notice that q <dig> may be inverted as long as  <dig> <q <dig> ≤  <dig> 

with respect to the marginal probabilities we have that at the generating time t* because of the way the extended probabilities p* were constructed we imposed a quasi-stationary behavior of the form,



where



the generalized conditional matrix in  also saturates at very large times, and the saturation probabilities  are given by those of the rate matrix, that is limt→∞  = limt→∞  . because of the relationship in equation  between the rate matrix and the matrix , the saturation probabilities  are given by the condition ,



then using equation  we can see that the saturation probabilities maintain the quasi-stationary property that was imposed at the time instance t*, and are given by,



where



as i discussed before, it is reasonable to impose that at infinity all we find is gaps, i.e Λ∞ =  <dig> , which implies η =  <dig> and



notice that because the relationship given in equation  between Δ' and Δ, then  <dig> <q <dig> <  <dig> 

for an arbitrary time we have the reversibility relationship



this equation is satisfied by construction in the n × n subspace. by inspecting the implications of the above equation for the gap index, we obtain an expression of Λt  at arbitrary time that allows us to have quasi-stationary reversible evolution. the function Λt is given by,



evolutionary model for transition probabilities
the standard way in which comparative probabilistic models allow for insertions and deletions is by introducing several additional states with their corresponding transition probabilities. for instance, in a pair-hmm for sequence alignment  the presence of gaps requires the introduction of two states  which emit a nucleotide in only one of the two sequences. the probabilities associated with transitioning in and out of those states control the "gappiness" of the alignment. therefore the evolution of these parameters with time is necessary in order to model different degrees of sequence divergence.

there has been a continued effort on improving the accuracy of the evolution of emission probabilities  such as allowing correlations between the rates at different sites  <cit> , improvements in the derivation of rate matrices from sequence data  <cit> , or estimating multiple nucleotide changes  <cit> . in comparison, the ideas to describe the evolution of transition parameters in probabilistic models are much less standardized  <cit> .

the goal of this section is to describe the evolution of transition probabilities. for instance, in the pair-hmm of figure  <dig> the transition probabilities from the "xy" state to the "x" or "y" states describe the introduction of gaps in one of the two aligned sequences, using an affine penalty. these transitions should be zero when the sequences have not yet diverged , but they should be maximal at infinite divergence. in between these two extremes, it is desirable to model the transition probabilities changing with divergence time. these methods are termed "evolutionary" because the transition probabilities will be parameterized with time, using functions that are generalizations of the markov process that probabilistic evolutionary models assume for substitutions. unlike the tkf model  <cit>  and other related evolutionary models  <cit> , the approach presented here will not describe the actual underlying evolutionary process that may have generated one sequence from another.

the tree-hmm method  <cit>  is possibly the method closest to what i develop here. a tree hmm tries to model the phylogenetic relationship between related sequences by modeling the parsings of different sequences through the model. in a tree hmm it is not the actual transition probabilities of the hmm, but the parsing of the different sequences through the models that are evolved using rate matrices that resemble the diagonal rate matrices introduced in the first of the methods described below. here i want to generate pair or profile probabilistic models that when comparing two related sequences are able to accommodate to the degree of divergence observed between the two sequences, and i intend to do that in a continuous-in-time and probabilistic fashion, using the smallest possible number of free parameters. no evolutionary history of individual insertion/deletion events will be generated; only a posteriori would an evolutionary history be established by comparing sequences  or alignments  generated by the model at different times.

i present two methods to evolve transition probabilities. one of the methods considers the evolution of a vector of transition probabilities. in this method, the value of the transition probabilities at time zero and time infinity are input parameters, which gives a relatively large number of free parameters. in the second, more restrictive, method the transitions associated with several states are assumed to evolve under the same evolutionary process. this condition constrains some of the free parameters, but does not fix them all completely. when the more restrictive conditions are used, both algorithms give the same results. these two algorithms are applicable to most pair and profile probabilistic models, be they hmms or scfgs, generalized or not. i present an example of the evolution of a vector probability vector for a pair hmm, and an example of the evolution of a matrix of transition substitutions for a profile hmm.

evolution of a vector of transition probabilities
a step-by-step description of the algorithm
let us start by providing the recipe to apply the algorithm:

 <dig>  given a transition probability vector



 <dig>  assume its set of values is known at the three particular time instances of t =  <dig>  t = t*, and t = ∞, named q <dig>  q*, and q∞. assume each component i in these probability vectors satisfies one of the following three conditions,

q <dig> <q* <q∞ or q <dig> >q* >q∞ or q <dig> = q* = q∞, for all i.     

 <dig>  if the three input vectors satisfy the condition,



where r >  <dig> is a real number independent of i, then calculate qt at an arbitrary time t  as



normalization of the vector qt is guaranteed by equation .

 <dig>  otherwise qt is given by the following expression



where the function wt is given by



an example: evolution of the transition probabilities of a pair-hmm "xy" state
consider the transition probability vector associated to the "xy" state of the pair-hmm given in figure  <dig> 



which describe the four possible transitions from a correlated emission of two nucleotides to another correlated emission in both sequences (); to a gap in sequence y (); to a gap in sequence x (); or to end the alignment ().

below are some arbitrary values for the transition vector at divergence times: t =  <dig>  t = t*, and t = ∞ associated with state "xy", qxy,



the transition txy→e = τ is related to the expected length of the alignments generated using the model. we typically want to keep that transition invariant through time, and correlated with the alignment length l: τ = 1/l.  the other three transitions change with time from a situation of no gaps at time zero, to a situation at time infinity in which all there is present is gaps, because no residue in either sequence has a homologous residue in the other.

transition probabilities at t =  <dig> and t = ∞ can be stated from first principles. transitions at the generating time t*, are estimated from data, at the same time that emission probabilities are estimated. the transition probabilities at any other time are given by applying the algorithm. using equation  we obtain,



similarly to this "xy" state case, all the other transition probabilities that appear in the pair model of figure  <dig> could be continuously parameterized with the divergence time of the alignment being scored. this algorithm can be applied to any full set of transition probabilities emerging from a particular state in a given probabilistic model that must evolve with time.

connection with a tree-hmm 2× <dig> match-transition matrix
in the original representation of a tree-hmm  <cit>  the idea of a match-transition matrix is introduced. if one parse through the hmm generated a match to match  transition, while another parse through the model generated a match-to-delete  transition, one can consider the substitution of mm by md similarly to a substitution of residues by the conditional probability p. this leads to the concept of a  <dig> ×  <dig> match-transition matrix given by,



which in  <cit>  is parameterized with two real numbers r ≥  <dig>  and  <dig> ≤ a ≤  <dig> as



tree-hmms model the evolution of paths though the hmm. in contrast, the method proposed here models the evolution of the transition probabilities of the model themselves. however, one can see that the match-transition matrix is closely related in form to the model we have proposed here. introduce the probability vectors,



for t =  <dig> and t = ∞ they have the following values,



it is easy to see that the match-transition matrix given in equation  can be rewritten as,





for a diagonal rate matrix . such diagonal rate matrix does not require additional normalization because it corresponds to the case described in equation .

derivation of the algorithm to evolve a vector of transition probabilities
to describe the evolution of transition probabilities, the simple exponential models used for substitution matrices are not sufficient. i propose to adopt a generalization of the exponential model of the form,



where i is the n × n identity matrix, r is a vector still to be identify, and a r is a n × n rate matrix.

this model simply adds to the exponential term a time independent vector a,



because qt= <dig> = q <dig>  then it is necessary that a = q <dig> - r, thus giving the expression in equation . note that this is the most general solution of a differential equation of the form  ∝ . until now it was always assumed that the constant term was zero, that is r = q <dig>  the freedom added by including a term constant in time is that, while before the behavior at t = ∞ was solely controlled by etr, now the additional term also contributes to that limit.

an immediate consequence of this generalization is that the rate matrix is not now sufficient to determine the whole evolutionary process. in addition to the rate matrix, the probability vector must also be specified at time zero  and at time infinity  such that,



the exponential of the rate matrix r has the general form,



for some real eigenvalues . if conditions are restricted to the case in which ki >  <dig>  ∀i, the immediate consequence of working with positive eigenvalues is that,



there is then a simple relationship between the vector r and the values of the probabilities at time zero and saturation,

q∞ = q <dig> - r.     

therefore, we can write with all generality



however, for the given information , the time-parameterized vector qt in  is still underdetermined.

in order to reduce the amount of freedom, i assume that etr is diagonal . diagonal rate matrices have been used in other contexts of generalized evolution such as the tree-hmm model  <cit> . then we have,



at this time the known probabilities at the generating time t*, q*, have not yet been used. these are,



thus we obtain



which can be solved for ki,



the condition ki >  <dig> translates into  <dig> < <  <dig>  or



this condition has two solutions:

q <dig> <q* <q∞  or q <dig>  >q*  >q∞ .     

even though this model was derived under the conditions of equation , it also extends to the degenerate case where for some i we have

q <dig> = q* = q∞,     

since this simply corresponds to these parameters undergoing no evolution at all.

therefore if the input column vectors satisfy one of the three previous conditions for each one of their elements, the parametric expression is



a normalization condition has not yet been imposed. using the unity vector ut = , normalization requires that



for an evolutionary model of the form qt ∝ etr normalization requires that etru = u for arbitrary times. i refer to this property as the strong normalization condition. the normalization of a generalized evolutionary model of the form  requires the weaker condition tetru =  <dig>  this property is always true for a rate matrix that satisfies the strong normalization condition. i refer to this property as the weak normalization condition.

in order to obtain the strong normalization condition automatically it is necessary to have a rate matrix of the form r = u diag  u- <dig> ). such a type of rate matrix is not appropriate to describe the evolution of a probability vector, since such rate matrix cannot be uniquely inferred from the three input probability vectors q <dig>  q*, q∞. for that reason, i have explored the use of rate matrices of the diagonal form r = diag , which can be inferred from the three input probability vectors q <dig>  q*, q∞ using expression . such diagonal rate matrices, however, in general do not satisfy the strong normalization condition, thus the weak normalization normalization condition must be obtained by other means.

define wt:



if the input vectors satisfy the condition for all i,



for some real number r >  <dig>  then the rate matrix has the particular form r = diag, the function wt =  <dig> for arbitrary times, and the weak normalization condition is satisfied automatically.

the previous condition is in general too restrictive. if the previous condition is not satisfied, by construction wt is zero at t =  <dig>  t = t* and t = t∞, but in general wt ≠  <dig> for n >  <dig>  normalization is then achieved  by modifying our definition of qt to



the final expression is



evolution of a matrix of transition probabilities
in some cases, several states of a model correspond to a particular evolutionary event, and it seems natural to expect that their transitions would evolve under the control of the same rate matrix. for instance, in a profile hmm  i will consider the joint evolution of the transitions of three states associated with a given consensus position: match , insert , and delete .

for a collection of m states s = {s <dig> ..., sm} that transition into a collection of n states e = {e <dig> ..., en}, consider the set of all transition probabilities emerging from the m originating states s and ending in the n states e,



the set of s and e states do not have to be mutually exclusive, and some e states can also be part of the s set. the set of e states also has to be complete, in the sense that



on the other hand, not all e states need to be reached by a given  state; some transitions may be forbidden by design. for instance, for the states associated with a consensus position in a profile hmm the set of originating states is s = {m, d, i}, and the set of ending states is e = {m', d', i}, where the prime index indicates the next position in the profile. the condition m ≤ n can be imposed with all generality.

we want to describe the evolution with time of the transition probabilities. for that purpose, i will use the m × n matrix of transitions qt such that,



note that an evolutionary model of the form qt = q0etr, like that used for evolving gaps as extra characters, is not sufficient. a model of the form qt = q0etr in the limit of infinite divergence would necessarily result in transitions that for a given end state are all identical and independent of the previous state. that is clearly too restrictive for most models, for instance in a profile hmm, in which some of the transitions are not evolved and are set to zero.

in order to allow for more general saturation properties of the transition probabilities, i propose the following model for the evolution of the matrix of transition probabilities,

qt = q <dig> + k ,     

where r is the n × n rate matrix, and the m × n matrix k is still to be determined. this extension  corresponds to adding a constant term a = q <dig> - k, and it is is the more general solution of a differential equation of the form  ∝ .

we will see that k = , thus

qt = q <dig> +  ,     

= q∞ +  etr.     

as in the previous case, a freedom provided by the additional constant-in-time term is that while the saturation behavior of q0etr is controlled by the saturation probabilities of etr, the model given by equation  is independent of those saturation probabilities so that the probabilities at infinity can be set arbitrarily. that is, assuming that ψ is the n dimensional vector of saturation probabilities of etr,





notice that while qt, q <dig>  q∞ and k are m × n matrices operating in the s × e space, the matrices r and etr are square n × n matrices operating in the e × e space. in fact, etr determines the change in time that a transition probability into one of the e states experiences and in which fashion that change is absorbed by the transition probabilities into any other e state.

a step-by-step description of the algorithm
the recipe to implement the algorithm is as follows:

 <dig>  assume we know the m × n  matrices of transition probabilities at time zero q <dig> and at time infinity q∞, such that the rank of q <dig> - q∞ is m.

 <dig>  if an analytic n × n rate matrix r is given, one can find the analytic expression for etr by solving the differential equation d/dt = retr, and jump to step . for a numerical solution jump to step .

 <dig>  if the information given is the set of transition probabilities at a generating time t*, calculate the rate matrix r as,



the n × m matrix o is obtained by solving the set of linear equations

- o + umvt = im × m,     

where um is the m dimensional unity vector , and v is a m dimensional vector uniquely determined by the set of m independent linear equations,

vt  =  <dig>      

vt um =  <dig>      

the solution of equation  is not unique. in fact, equation  determines the matrix o up to a n dimensional probability vector ψ that satisfies the conditions ψt o =  <dig>  this probability vector corresponds to the saturation probabilities of the matrix etr. while the rate matrix r and the matrix etr depend on the choice of the saturation probabilities ψ, the asymptotic behaviour of the matrix of transition probabilities is independent of ψ, as was shown in equation .

 <dig>  impose the condition,

vt  =  <dig>      

this condition  imposes constraints between the set of probabilities at time zero, at time t*, and at time infinity.

 <dig>  calculate the exponential of the rate matrix etr using the corresponding taylor expansion.

 <dig>  finally, calculate the set of evolved transition probabilities as,

qt = q <dig> -      

or

qt = q∞ +  etr.     

an example: evolution of the transitions of a profile hmm given a rate matrix
to illustrate this method, consider the case of a profile hmm . there are three states associated with a given consensus position in the profile: the match state , the insert state  and the delete state . these three states transition into states m' , d' , and i , therefore in this example m =  <dig> and n =  <dig> 

consider the following the transition matrix



this transition matrix, like a nucleotide substitution matrix, adds up to one by rows. we assume as in hmmer  <cit>  that there are no transitions between the insert and the delete states, but the model could work under more general conditions.

the matrix at time zero is given by



the parameter 1/ is the average length of an insert in between two matched positions at very short times . the parameter 1/ is the average length of a deletion at very short times . for instance, one could set qi very close to zero, which implies that, for very small times when , the average length of a insertion would be very close to one.

at time infinity, one can parameterize the transition probabilities as



where md and md represent the probabilities of match to delete and match to insert at infinity, and dd and ii are the delete to delete and insert to insert probabilities at time infinity, .

let us assume that the rate matrix is given by



for some parameter α >  <dig>  this rate matrix assumes that the rate of change in the occurrence of state m' is similar to that of state d' and that of state i, and that this change reverts equally into the other two states. more realistic situations can be achieved using rate matrices depending on more parameters.

the instantaneous rate of transition change is given by,



this matrix gives the instantaneous change that a transition probability experiences under this model and describes how that change is transferred to the other allowed transition probabilities.

the matrix etr can be obtained analytically by solving the differential equation d/dt = retr. this is a 3-dimensional jukes-cantor model which has as its solution,



with





putting all together, we obtain the following evolved transition probabilities for a profile hmm under a jukes-cantor like assumption for the rate matrix:



substituting the values for st given in equation , we have the following evolved transition probabilities for a profile hmm,















the evolution of different paths through the hmm
in a tree-hmm one assumes that the different paths through the model are the objects that are subject to evolution  <cit> . here we have directly modeled the evolution of the transition probabilities of the hmm. we can get an intuition for the meaning of these evolved transition probabilities by estimating how these evolved transition probabilities induce the evolution of different paths through the model. a process that is similarly to that modeled by a one-branch tree-hmm.

suppose that at time zero, we emitted residue a from state m, and residue b from state m'. the model assigns to such sequence a probability given by,



where pm and pm' represent the emission probabilities associated to the m and m' states respectively. now suppose that at time t there has been an insertion of n residues in between the two matches a and b; the model assigns to such sequence a probability given by,



where pi represent the emission probabilities associated to the insert state.

we can interpret that in time t the path through the model that generated ab has evolved into the path through the model that generated ai <dig> ..inb with probability given by



to get a better intuition of what this means, take as an example the case in which the time interval t is very small.

then the probability that a path between two matches in the hmm inserts n residues in time t ≈  <dig> is



this probability is proportional to 3αmi the rate of substituting a match-to-match transition for a match-to-insert transition, and to  , which is the geometric factor associated to an insert of length n at time zero.

an example: evolution of the transitions of a profile hmm given the transitions at a generating time
in this case, we maintain the same values for the transition probabilities at time zero q <dig> and at time infinity q∞, but the rate matrix will be obtained from a generating time for which we know the transition probabilities.

the set of linear equations in step  of this algorithm that determine the vector vt =  are

mdv <dig> + v <dig> =  <dig>      

miv <dig> + v <dig> =  <dig>      

v <dig> + v <dig> + v <dig> =  <dig>      

the solution of these linear equations is

v <dig> = /d,     

v <dig> = -md/d,     

v <dig> = -mi /d,     

where d ≡  - md - mi.

parameterize the matrix o in the form



with each row adding to zero. the set of linear equations in step  that determine the matrix o are

 + v <dig> =  <dig>   + v <dig> =  <dig>      

 + v <dig> =  <dig>   + v <dig> =  <dig>      

 + v <dig> =  <dig>   + v <dig> =  <dig>      

solving mi and ii in terms of di we have,



the matrix o is therefore determined up to the unitary vector . the saturation probabilities ψt =  are defined by the equations ψto =  <dig>  which imply







substituting vector d with vector ψ we finally obtain the following expression for the matrix o in terms of the saturation probabilities ψ:



the condition in step  of the algorithm translates in this case into the following relationship of parameters,



this is an additional set of constraints that the "vector" algorithm does not impose.

to test the algorithm i have made up a toy hmm consensus state, which at the generating time t* is given by the matrix of transitions,



selecting the particular values qd = qi =  <dig>  and dd = ii =  <dig> , using the constraints of equations  implies that md =  <dig>  and mi =  <dig> . using these values and the arbitrary values for the saturation probabilities ψ = , we obtain the following o matrix:



the rate matrix r constructed using equation  is given by



and an instantaneous rate matrix -r is given by,



the evolved set transition probabilities at time t =  <dig>  is given by,



using the "vector" method, in which transition probability vectors evolve independently with the same set of parameters, we would have obtained the identical result,



the normalization function wt given in equation  is different from zero only for dimensions larger than two. the second and third row effectively have dimension two , and do not require normalization. for the first row the normalization function takes the value w <dig>  =  <dig> .

the vector method allows us to use more unrestricted sets of parameters than the matrix method since the conditions in equation  are independent for each row. in principle, however, the conditions in equation  seem to allow behaviors that the vector model does not allow such as  >md ≡  as long as, simultaneously,  >dd ≡ . in practice when i have tested that kind of situation, the rate matrices obtained are always not real, and therefore they lack any biological interpretation.

derivation of the algorithm to evolve a matrix of transition probabilities
we start with a model of the general form

qt = q <dig> + k ,     

where q <dig> is the known m × n matrix of probabilities at time zero, and the m × n matrix k must still be determined.

assume that we know the transition probabilities at time infinity, which we represent by the m × n matrix q∞. then, because of the asymptotic behavior of the exponential family etr, limt→∞etr = unψt for some n dimensional saturation probabilities, where ψt = , and the n dimensional unity vector  = , we have

q∞ = q <dig> + k .     

this equation implies that

k = -+ ψt,     

where  is a m dimensional vector that represents the sums by rows of k, i.e. ∑jk =  which we impose to be different from zero.

because for the exponential family etr we have the reversibility condition ψtetr = ψt for arbitrary time, introducing the expression for k in equation  in the equation  we have the general result,

qt = q <dig> - .     

this result proves point  of the previous algorithm description.

therefore if given q <dig>  q∞ and a n × n rate matrix r, which satisfy the reversibility conditions ψtr =  <dig>  we can calculate the evolved transition probabilities using the equation .

in the case in which the information given is the set of transition probabilities at a generating time t*, designated by q*, the calculation of the rate matrix r involves the following steps:

 the m × n matrix k is by construction invertible because we have imposed  ≠  <dig>  for all rows i.

a little aside with respect to matrix inversions is in order here. the  inverse of a matrix is defined only for square matrices. one can introduce a inverse-like matrix for a non-square matrix; these are called pseudoinverses  <cit> . the pseudoinverse of a non-square matrix is not unique and many pseudoinverses can be defined; one of the best known is the moore-penrose matrix inverse  <cit> . we will see how despite the fact that the pseudoinverse of k is not unique, we can still define qt uniquely.

therefore solving for r in equation  at the particular time t* we have



where k- <dig> is the n × m pseudoinverse of k defined by the conditions kk- <dig> = im×m and k-1k = in×n.

 because the final result for qt in equation  does not depend on the values  we can set them with all generality to the form  = ρ ≠  <dig>  therefore we have

k = - + ρum ψt.     

because k-1kun = un and kun = ρum, then we need that k-1um = ρ-1un. therefore we propose that the n × m pseudoinverse matrix k- <dig> has the following form,



where the n × m matrix o, and the m dimensional vector v satisfy the conditions,

o um =  <dig>      

vtum =  <dig>      

 in order to satisfy k-1k = in×n we need to have,

vt =  <dig>      

-o + unψt = in×n.     

equation  is a set of homogeneous linear equations that together with the normalization conditions in equation  uniquely determine the vector v.

on the other hand, in order to satisfy kk- <dig> = im×m, the following must apply:

ψto =  <dig>      

-o + umvt = im×m.     

equation  is a set of linear equations which determines o aside from a dependence on an arbitrary probability vector. in particular we can find the expression of matrix o in terms of the vector ψ as we did in equation .

once the matrix o has been obtained using equation  as a function of the vector ψ, one can verify that the set of equations describe by  is automatically satisfied for any vector ψ as long as it satisfies the condition ψto =  <dig>  this is the result presented in step  of the algorithm.

 because ψ corresponds to the saturation probabilities of etr, then it is necessary that ψtr =  <dig>  this condition is satisfied if,



therefore it implies that,

vt =  <dig>      

which is the condition imposed in step  of the algorithm. under those conditions, it results for the rate matrix r,



notice that the parameter ρ ≠  <dig>  which is necessary to be able to invert the matrix k to calculate the rate r, does not appear anywhere in the final result, either in the evolved transitions qt or in the value of r. this results from the fact that in either equation the only relevant component is the projection of k  into . the same projection is what makes the vector ψ that appears in the pseudoinverse k- <dig> irrelevant. even though limt→∞etr = uψt, it is also true that limt→∞ etr =  <dig>  so that the dependence on ψ disappears from the final expression of q∞.

reversibility and multiplicativity
for a given probabilistic model, imposing reversibility has different implications for its emission and transition probabilities. in pair models, we assume that the emission probabilities are reversible by imposing p = p, which corresponds to using symmetric joint probabilities represented by the shorthand notation p. if the emissions do not involve gaps, the marginal probabilities do not evolve, and the evolved joint probabilities are obtained from the evolved conditionals and the saturation probabilities. in the presence of gaps, i have described how to construct the evolved conditionals and the corresponding evolved marginals in a way that maintains reversibility for any arbitrary time, so that we can construct evolved symmetric joint probabilities.

for transition probabilities the situation is different. mathematically, a matrix of transition probabilities is like a substitution matrix  but there is not the equivalent of "joint" probabilities for transitions. to maintain reversibility for the transitions of a probabilistic model, one has to build reversibility in the design of the model. in particular, one needs to be sure that the transition probabilities that involve gaps lack any directionality. for instance, in the pair-hmm of figure  <dig> we need to impose that  for arbitrary times. that is achieved by making sure that the input transition probabilities at time t*, zero and infinity do lack directionality.

another property of probabilistic models of evolution for residue substitutions is multiplicativity. multiplicativity is an immediate property for evolutionary models of the form etr. for residue-substitution evolutionary processes, multiplicativity implies that the transition from one given event  to another event  in a finite time, if it goes through any intermediate state, has to be of the form of any other possible substitution. in mathematical terms,



however, when allowing gaps, any intermediate evolutionary step can go through processes of deletions or insertions in addition to substitutions; therefore multiplicativity as described in the previous equation does not hold anymore. there is a natural explanation of why "substitutions-only multiplicativity" is modified when considering insertion and deletion events. consider the evolution of gaps as single characters, which was introduced previously in this paper. the substitution matrix with gaps  satisfies the relationship



analyzing this matrix equation by components and using the expression for q <dig> given in equation , the substitution of residue a into residue b in finite time t + t' has the following terms:



the first term corresponds to pure substitution events of the form , and it is identical to equation . the second term modulated by the coefficient 1/q <dig> , which is part of the non trivial matrix q0) represents the event in which . the third term ) represents the event in which . note that this model would align at time t + t' residues which could have been derived by a gap intermediate. this is usually discouraged by evolutionary models that describe the evolutionary history of insertions and deletions, in which such event would be represented as . for the model at hand, the fact that a gap can revert into a residue is a consequence of treating gaps as an additional residue in a substitution matrix.

for the particular case of the generalized jukes-cantor model introduced before, it turns out that the two extra terms in equation  are independent of the particular substitutions and cancel, such that



therefore the generalized jukes-cantor model preserves multiplicativity. this results from the extreme simplicity of the model and is not true for more complicated models. for instance, for the rate matrix created from a particular q* in the other example presented in this paper , the two extra terms in equation  are different for the different nucleotide substitutions, and do not cancel out.

a more complicated situation appears for probabilistic models that introduce gaps in an affine manner. a given residue-to-residue substitution process that occurred in a finite time could have appeared from a very large number of intermediate situations in which stretches of other nucleotides could have been added or removed. the simple one-to-one correspondence that models of substitutions maintain through evolution does not exist in the presence of insertion and deletion events. this does not mean that evolutionary models with gaps are inconsistent, however some traditional properties of phylogenetic trees of single residue evolution such as the pulley principle  <cit>  cannot be applied under the transition probability evolution models.

CONCLUSIONS
motivated by the goal of making qrna  an evolutionary model, i have introduced several probabilistic methods to describe the evolution of insertion and deletion events. the methods introduced here have a larger scope than this program alone, and they can be applied to other pair probabilistic models and to profile hmms and scfgs as well.

i described an algorithm which addresses the evolution of gaps as an extra residue in a  ×  substitution matrix. this method can be applied to the joint emission probabilities of pair models. this method allows us to maintain a stationary n-dimensional background distribution, while the actual -dimensional background frequencies evolve towards all gaps at time infinity. i call this process quasi-stationary. as an example, i showed an analytic solution for the jukes-cantor model extended to gaps.

i also presented two methods for the evolution of transition probabilities in a profile or pair hmm or scfg, that are applicable to any probabilistic model that uses transitions between states to model insertions and deletions. in the first algorithm, the transition probabilities associated with one state in the model are evolved as a vector independently of the transition probabilities associated to any other state in the model. i also presented a second algorithm in which the transition probabilities associated with a given set of states co-evolve under the control of a single rate matrix. i presented an example of the application of these methods to a pair-hmm and to a profile hmm.

i have applied these methods to the program qrna, which was the motivation for the development of the algorithms in the first place. qrna contains three probabilistic models  that analyze the pattern of mutation of a given pairwise alignment to decide which of the three models best classifies the alignment. these models are a combination of generalized pair-hmms and a pair-scfg. originally, this program assumed a fixed divergence time, and all the emission probabilities of the different models were tied to those of blosum <dig>  that produced a qrna parameterized for highly diverse sequences, which in turn produced a large number of false positives for highly similar sequences. in the new program eqrna, all emission and transition probabilities are a continuous time-dependent family able to match any possible degree of sequence divergence.

the three models of qrna  need to be at approximately the same evolutionary distance, so that when a pairwise alignment is analyzed, the differences in scores of the models result from observing a different pattern of mutations  rather than because one model favors more closely related sequences than the other. this model synchronization requires a number of qrna-specific design elements which are tangential to the implementation of the evolutionary models for indels and transition probabilities presented in this paper. for reasons of clarity, i leave for another paper a detailed description of the particular implementation designs that went into eqrna in order to make it fully evolutionary. in a nutshell, the transition probabilities of the oth and cod models are evolved according to the algorithm to evolve vectors of transition probabilities, while the emission probabilities of those two models were evolved using the original qrna parameters as the generating time of the respective rate matrix. in the rna model, for the context-free grammar component of the model, the transitions are fixed, and the evolution of gaps is accommodated by treating gaps as extra characters according to the method presented here for that purpose. the hmm component of the rna model is parameterized with time similarly to the oth and cod models. preliminary results show an important improvement compared with the previous fixed-time implementation. the application of these evolutionary methods for other probabilistic models for sequence comparison beyond eqrna should be tractable.

so far the methods presented here have been introduced only in profile and pair models. they could also be applied to probabilistic models where, instead of aligning two contemporary sequences, one aligns a sequence to an ancestor. the only difference with respect to an evolutionary pair model is that, in this case, the emission probabilities will be the substitution  matrices themselves instead of joint conditional-on-time probabilities. one important limitation of the methods presented here is that, in general, they lack the property of multiplicativity. in consequence, in order to extend the methods presented here to more than two sequences related by a phylogenetic tree, one would have to work with rooted trees. a future challenge is to incorporate these evolutionary methods into multiple sequence probabilistic models that explicitly describe the phylogenetic relationship between the sequences.

availability
the different models presented in this paper have been implemented in several small ansi c programs. these are not fully developed software applications, but demonstrations  of how the different algorithms work. the programs are freely available at .

