BACKGROUND
increasingly, the search for mechanisms and biological processes in complex diseases begins with exploration of data from many sources to incorporate clinical, molecular, and high-throughput genomic data. a scientist might search literature and other databases for candidate interactions, pathways, etc. to hone in on likely candidates for study in the wet lab. the discovery process requires downloading data from several data sources, matching identifiers between data lists, and manipulating lists to match elements from one list with elements from other lists. the left flow chart in figure  <dig> shows an example of the traditional process, which is tedious and error-prone when done by hand and which generally requires considerable computational skill to automate.

the right flow chart in figure  <dig> summarizes the corresponding process in sidekick, a web-based genomic decision framework that bridges the work of laboratory and computational scientists. sidekick enables intuitive query and combination of complex data sources to facilitate research and discovery with no requirement for computational expertise. the framework capitalizes on web services provided by quality data sources and incorporates the researcher's beliefs to weight results. sidekick handles gene-pair lists as well as gene lists, facilitating the representation of interactions. interacting pairs involved in important cellular functions are expected to evolve in a coordinated manner in order to preserve these functions  <cit> , thus co-evolution information often provides better insight into physical interactions than simple amino acid sequence analyses. sidekick enables protein interaction mapping among various species in a simple manner to promote the inclusion of co-evolution information. this paper describes the sidekick framework and demonstrates its capabilities and flexibility using the problem posed in figure  <dig> for illustration.

much of the previous work in biological knowledge discovery has focused on large-scale top-down discovery rather than bottom-up development of hypotheses. for example, castellano et al.  <cit>  mine information from  <dig>  scientific documents using parallel processing in a grid computing environment. their sample application extracted symptoms and pathologies from the unstructured documents, highlighting the computation power of a grid approach for large-scale discovery using text mining. pounds et al.  <cit>  have developed a tool that determines the statistical significance within groups of gene expression datasets by identifying patterns of association with more than one endpoint analysis. g-sesame  <cit>  determines gene similarity based on go terms, while cluego  <cit>  and pipe  <cit>  facilitate mass spectrometry analysis and gene annotation exploration.

an obvious step is to combine multiple focused research tasks into a single tool for knowledge discovery. the discoverynet system  <cit>  facilitates this combination using grid computing for computationally expensive analyses. the system allows scientists to build reusable workflows that can be deployed for use outside the original creator's lab. discoverynet has become an important portion of the inforsense consulting company, which specializes in high-throughput discovery workflows. in one example, celera used an inforsense workflow to browse, analyze, and integrate clinical data including enzyme linked immunoassay and single nucleotide polymorphism data. while discoverynet is a viable solution for large companies, the software appears to be financially out-of-reach for smaller labs and appears to limit the knowledge exploration to pre-determined workflows rather than allowing the incremental discovery of information to drive the discovery process.

gaggle  <cit>  in conjunction with firegoose  <cit>  provides a free plug-in for the mozilla firefox web browser that facilitates transfer of information between various bioinformatics websites including kegg, embl, string, and david. users can transfer information to and from local desktop applications such as pipe and cluego that perform specific bioinformatics analyses. although this approach offers the flexibility of no set workflow order and free availability, the tools require multiple installations and provide no visual representation of the steps required for a particular analysis. users must parse the output from each web site source. also, the system does not provide a mechanism for assessing and organizing the user's belief or confidence in the results.

genepattern  <cit> , like gaggle and firegoose, runs within a web browser but also can be downloaded and run locally. originally created for gene expression analysis, genepattern also enables single nucleotide polymorphism and proteomics analysis. genepattern provides fixed workflows that encapsulate analyses processes and allows the development of user-created workflows. genepattern processes are oriented towards capturing detailed and possibly large-scale computational analysis rather than initial exploration, knowledge discovery, and evaluation of data.

quext  <cit> , which focuses primarily on literature searches, retrieves relevant articles given an input set of genes and modifies the order of article relevance to reflect user belief. it initially gives each synonym and gene name equal weight; however, the user can indicate preference for article types by increasing the weight of that synonym or gene name concept, thus changing the results to match the user's belief.

implementation
overall organization and purpose
sidekick is a biological knowledge discovery application that focuses on bottom-up discovery and organization of belief. sidekick combines multiple sources of data for many common research tasks including determination of genes involved in a disease, diseases associated with a gene, gene expression enrichment, gene ontology enrichment, chromosome locality enrichment, and interactions. by using web services, sidekick keeps its information as current as the data sources themselves. the user can save and combine analysis steps to easily document and reproduce results or back track to previous states when investigations in one direction do not produce meaningful results.

currently sidekick supports three queries, four filters, several ways to combine results, and methods for saving and restoring workflows and data. sidekick's modular design using adobe flex and action script  <dig> allows programmers to incorporate additional queries, filters, or data sources. sidekick runs in any browser with the latest adobe flash player plug-in. the sidekick website, http://visual.cs.utsa.edu/sidekick/home.html provides a user's guide and flash tutorial describing sidekick's use.

sidekick has a unique system for managing user belief that makes the user an active participant in assigning confidence measurements to biological discoveries. users can combine various quality measures provided by different sources to evaluate quality of the analysis. furthermore, users can incorporate their own biases related to the specific sources of information and particular types and magnitudes of measurements enabled by sidekick's visualization module and underlying dempster schafer  <cit>  confidence source combination.

although genes have many synonyms, sidekick uses ncbi's gene id as the common denominator for identifying genes. currently sidekick incorporates data from six species , with plans to include more. sidekick is organized around four types of actions: query, enrich, combine, and manage. the query and enrich modules generate a provenance date of download to enable users to identify research results with data source version. the remainder of this section outlines the analysis, sources of information, expected results, and types of confidence measurements that the user can influence based on background knowledge. see figure  <dig> for reference during the description.

query
query: disease/term → gene list generates a list of genes given a search term by combining results from both ncbi national center for biotechnology information http://www.ncbi.nlm.nih.gov/ and ncibi the national center for integrative biomedical informatics http://www.ncibi.org. ncibi's gene2mesh uses a statistical approach to annotate genes reliably and automatically with the concepts defined in mesh, the national library of medicine's controlled vocabulary for biology and medicine. the gene2mesh web service returns gene symbols given a mesh term or mesh terms for a given gene. sidekick's disease/term → genes list queries gene2mesh for the input term and builds the resulting gene list. each result entry includes a score-from-source representing the significance of the association between the input disease and genes derived from pubmed abstracts. gene2mesh returns a p-value for this score.

ncbi's esummary web service produces a gene list given a term , but does not assign a p-value to the gene-term pair. sidekick uses a value of  <dig>  as a default p-value for ncbi's score-from-source. since ncbi does not limit search terms to diseases, ncbi's results can be broader than ncibi's more focused results. the user can choose between disease only or general within the ncbi search input filter to focus on only disease terms or to allow for generalized searches. sidekick uses ncibi's p-value when both sources return a particular gene-term pair.

query: genes → interacting pair list searches several data sources for genes believed to interact with the input gene list. the web services that provide the interaction data are ncbi and ncibi's mimi  <cit> . mimi was created by compiling several publicly available data sources including hprd  <cit> , intact  <cit> , bind  <cit> , biogrid  <cit> , mint  <cit> , ccsb  <cit> , dip  <cit> , reactome  <cit> , and mdc  <cit> . the score-from-source is the number of articles that describe a specific interaction provided by mimi's web service. the input genes are in the first column and the output genes are the interactants of the corresponding input gene.

query: genes → orthologous pair list, finds orthologs of genes between species from a user specified list. sidekick uses ensembl's orthologous gene lists and displays the percent identity between the two orthologs as the score-from-source. the output genes are orthologs corresponding to the input gene.

sidekick also displays the sources of information for all results. if multiple web services returned the same result, sidekick lists each source. using the visualization module and the individual result evaluation tool, users can modify the source credibility and score-from-source credibility based on user confidence in the source and confidence in the score provided by the source. user assigned credibility falls in the range , where  <dig> indicates perfect belief or confidence,  <dig> indicates neutral belief or confidence, and  <dig> indicates perfect disbelief the default credibility is  <dig> . sidekick then combines confidence scores into a single combined credibility value, as described later.

users can sort the query results by columns, and the gene ids are hyperlinked to ncbi's entrez website.

enrich
enrichment looks for a common feature among elements of a study set that occurs more frequently than at random as determined by a population set. the difference between random occurrence and the specific occurrence is often encapsulated by a p-value, which can be used as confidence measurement. sidekick's enrichment modules discover concepts that are enriched in a list of genes or in a list of gene pairs. sidekick currently supports enrichment by go terms, mesh terms, gene expression, and chromosomal proximity. the user can sort the results in various ways, and the result genes are linked to ncbi.

enrich: genes for go term explores the relationships among genes in a given gene list according to their gene ontology  annotations. a traditional approach to go term enrichment takes each go term and determines if that term is over-represented within the gene study set, as compared to a larger gene set population. the terms in the gene ontology are not independent, but rather form a directed acyclic graph with more specific terms as the children of more general parents. for example, mismatch repair is a child of dna repair. simple term-for-term analysis does not take into account the potential relationships among different go terms such as a parent-child relationship. grossmann et al.  <cit>  present a novel approach for detecting overrepresentation of go terms using parent-child analysis. their method addresses not only the hierarchical nature of go terms but also occurrences of the same term in multiple branches of the graph. the less rigorous parent-child-union strategy defines the set of parents of a term t as the union of genes annotated with any parent of t. the parent-child-intersection strategy reduces the number of enriched terms by defining the set of parents of a term t as the intersection of genes annotated with term t, counting the genes annotated for all of the parents. grossmann et al. conclude the parent child approach avoids many of the false positives that the term-for-term approach produces.

iea, inferred from electronic annotation, consists only of evidence from computational analysis and is considered by some as less trustworthy. the evidence included allows for either curated only  or all types . selecting all types increases the evidence, but perhaps decreases the perceived quality. the maximum term hits allows for either targeted or more general searches.

each result from enrichment analysis includes the enrichment term, the gene or gene pair found to be enriched for that term, and scores that represent the confidence in the enrichment result. the score-from-source is the p-value representing the likelihood that a subset with shared go terms happened randomly as compared to the general population. this value and the user's background knowledge form the score-from-source credibility value. another important factor in enrichment studies is the size of the enriched set relative to the set as a whole. the size-of-group value is the number of genes enriched for the same term. the size-of-group credibility score allows the user to define the importance of this measurement. sidekick combines all of the credibility scores using dempster schafer theory.

enrich: for disease terms uses ncibi's gene2mesh web service to find the disease mesh terms enriched in subsets of the gene inputs. sidekick only uses the disease category mesh terms from the ncbi's national library of medicine. like go terms, disease mesh terms are hierarchical. sidekick uses a modified version of the go term enrichment algorithm of grossmann et al. to combine mesh terms in parent-children relationships. the outputs are similar to those of go term enrichment, with the score-from-source as the p-value representing the likelihood that a subset with shared mesh terms happened randomly as compared to the general population.

gene expression refers to the number of transcripts produced from a gene, which is loosely related to the number proteins produced. sets of genes that are over-expressed or under-expressed under a specific condition as compared to the population as a whole may be related. the european bioinformatics institute provides a web service, gene expression atlas within arrayexpress  <cit>  that contains curated data for gene expressions under different biological conditions across experiments. the conditions include cell type, developmental stage, and disease state among many others. enrich: for gene expression allows input of a gene list and selection of multiple conditions. arrayexpress does not directly return a p-value but instead returns the number of experiments in which the gene is up/down regulated for that condition. sidekick forms the score-from-source by subtracting the number of down-regulated experiments from the number of up-regulated experiments. if the final score-from-source is positive, more evidence for up regulation is present. the other scores are similar to those of the other enrichments.

enrich: for chromosomal proximity displays the gene groups that are most enriched for chromosomal proximity as determined by the number of base pairs separating the start positions of genes. the score-from-source is the p-value of the enrichment indicating the probability that the proximity of the subset of genes could have happened at random.

all of sidekick gene enrichment analyses allow gene pair lists for input. sidekick pair-list enrichment analysis finds gene pairs where both elements are enriched for a specific term. as an example, enrich: for go terms can determine whether a subset of gene pairs localize to the same location in the cellular context. the score from source is the p-value for the enriched subset that contains the genes.

combine
the union operation finds all genes or gene pairs present in any input list, while intersect finds genes or gene pairs present in every input list. the difference operation asks the user to designate one of the input lists as the superset and removes all items of the other list from the superset. the union and intersect operations combine any number of gene lists or gene pair lists from the same species, while difference allows only two gene or gene pair lists.

the translate operation combines two pair lists when the output of the first list is comparable to the input of the second list. for example, suppose that the first list contains orthologs of human to mouse  and the second list contains interactions of genes in mouse . translation produces a gene pair list matching human genes to interacting genes in mouse. for the current modules, column order represents input genes and discovered genes through a two-step process. eventually sidekick will support using column order for analyses like transcription factor regulation where the first column holds the transcription factor and the second column holds the target of the transcription factor.

manage
file operations include saving and loading an entire workflow, saving and loading gene lists or gene pair lists, importing ncbi ids or ncbi gene names, and exporting results as a comma separated file. for gene pair lists, the subset can be either a row selection or an output column selection. the resulting subset for row selection is a gene pair list, while column selection produces a single gene list comprised of all genes in the selected rows of the output column with duplicates removed. extracting rows from an enrichment results set produces the genes contained in the selected groups with duplicates removed. sidekick uses xml as the underlying file format for most files.

belief and confidence for controlling exploration
a user's belief in input sources depends on many factors including the user's background knowledge and view of the data sources. in sidekick, the level of user belief or credibility for any single score is a value between  <dig> and  <dig>  where  <dig> indicates complete acceptance of a result. a credibility value of  <dig> indicates strong skepticism or alternatively complete belief in the result's negation. sidekick allows negative values for individual scores so that users can specify that a particular result provides evidence against something. by default, sidekick assigns a credibility of  <dig>  to each score; however, the user is free to adjust this credibility. sidekick then uses dempster-shafer to combine credibility scores to obtain an overall belief credibility score. while the user is able to indicate disbelief with a negative credibility score, the combined credibility indicates belief and therefore always ranges from  <dig> to  <dig> where  <dig> indicates perfect combined belief and  <dig> indicates lack of belief. these credibility scores allow users to focus on results that are likely to be more significant or more reliable and are useful for sorting results by relevance. the user is also free to ignore completely the tracking of belief.

each sidekick operation produces a score-from-source that depends on the type of calculation performed. for example, ncibi combines many sources in response to mesh-term-to-gene queries and provides a p-value reflecting the weight of evidence for each response. as shown in figure  <dig> the visualization module enables the user to adjust credibility scores. the module requires that each score be a non-negative real number, with more significant scores being larger than less significant ones. sidekick converts score-from-source values into this format, for example, by taking the negative log of a p-value. sidekick allows the user to control the level of belief in an interactive way. to visualize and assign user belief to a score-from-source, the user presses the adjust score-from-source credibility button. sidekick displays the normalized scores using a cumulative probability density graph. the same visualization step allows the user to influence the combined credibility by adjusting the size-of-group credibility. the values forming the cumulative probability density graph are the number of elements enriched for each group.

the belief adjustment graph represents both the range of values and the relative density of specific values within the range. dividers partition the input values and allow users to assign confidence scores to different groups of input values. by increasing or decreasing the number of partitions and moving the partitions, the user can change the confidence score assigned to the input values contained within a partitioned range. sidekick uses the expectation maximization  <cit>  algorithm for determining the initial number of partitions and k-nearest neighbor  <cit>  for clustering to a specified number of partitions .

another way to influence the overall credibility is to evaluate the credibility of the sources that produce a gene or gene pair list . each source for a given query or filter is initially assigned a weight of  <dig> . the user can change this value to reflect belief in the data source in two distinct ways. by pressing the adjust source credibility button, the user can globally change the confidence from  <dig>  to reflect increased belief  or increased disbelief  in the reliability of the specific source.

the user can also influence source credibility by expressing belief or disbelief in individual results from that source. when the user changes the radio buttons at the far right of a result row, sidekick modifies both the combined credibility for that item and also the source credibility of the site that produced the result. during the analysis, sidekick iteratively learns its user's beliefs based on the evidence provided by individual credibility decisions. using a methodology similar to the online training for spam filtering of goodman et al.  <cit> , sidekick adjusts the source credibility score in a positive or negative direction when the user changes a radio button corresponding to an item from a particular source away from neutral. the learning rates have default settings of , corresponding to adjustment of the five radio buttons to the left or right of neutral. the user can modify these rates by selecting adjust source credibility learning rates.

sidekick includes credibility measures for all of the filters, queries, and combinations and combines multiple evidence using dempster schafer theory   <cit>  to produce a final combined credibility for each element in a list. dst defines the possible predictive outcomes using the term universe of discourse Θ also called the frame of discernment. for mutually exclusive outcomes Θ becomes Θ = {t, f} where t = true and f = false. dst also models exceptional situations as Ø. in this case, the frame of discernment is Θ = {t, f, Ø}.

elements of 2Θ  form the class of general propositions in the domain. for our frame of discernment the possible sets are {t}, {f}, {tf}, and {Ø}. a function m: 2Θ →  is called a basic probability assignment if it satisfies:

 m= <dig>   ∑a⊆Θm=1and m>=0for all a 

in other words each possible prediction is assigned a probability, there are no exceptional situations, and collectively the probabilities add up to one. the quantity m is defined as a's basic probability number and represents our belief in the proposition represented by a. the probability assigned to the set {tf} indicates uncertainty. if there is no uncertainty i.e. m =  <dig> then m + m = 1

a belief function assigns to each subset of Θ a measure of our total belief in the proposition represented by the subset. the one-to-one relationship between belief functions and basic probability assignments is given by the following formula:

 bel=∑b⊆am 

two pieces of evidence can be combined using dst. let m <dig> and m <dig> be basic probability assignments on the frame of discernment Θ for two pieces of evidence. belief is combined by finding the orthogonal sum of m <dig> and m <dig>  i.e. m = m <dig> ⊕ m <dig> and m = 0

 m=k∑x∩y=am1•m2k−1=∑x∩y≠Øm1•m <dig> 

the quantity log k quantifies the conflict between the two basic probability assignments. a detailed example of combining credibility using dempster shafer theory appears in the supplemental materials file. see additional file  <dig> supplemental.pdf

RESULTS
this section highlights the strengths of sidekick by reproducing the analysis of interologuefinder  <cit> , which involves creation of a protein interaction network comprised of known and predicted interactions. as briefly described in figure  <dig> interologuefinder constructed a protein-protein interaction network comprised of known and predicted interactions within five species. although sidekick has added a sixth species, we will limit the discussion to the original five species. interologuefinder inferred interactions in a target species by looking for known interactions in source species and then matching orthologous proteins in the target species. team biologists then applied coimmunoprecipitation to verify predicted interactions in fly. the biologists' understanding of protein conservation across speciation events enabled confidence in this approach. interologuefinder also included a quantitative way to compare the interactions. protein interactions range from weak to strong interactions. interologuefinder combined several measurements including the experimental support for a known interaction, the species support for known and predicted interactions, and the orthologous support of known and predicted interactions into a single score to represent the believability of both known and predicted interactions. interologuefinder used a different method of evidence combination than sidekick does and does not incorporate user belief.

as with sidekick, interologuefinder analysis does not focus on maximizing the number of possible interactions by increasing coverage, but rather on generating as high quality interactions as possible. the work was carried out by a team comprised of both computer scientists and biologists, each bringing different perspectives to the analysis task. the computational tasks involved combining a variety of datasets, matching different identifiers for the same proteins, and predicting the protein interactions in one species by analyzing protein interactions among orthologous proteins in other species. the biologists brought specific expert knowledge to the process by determining which data sets should be trusted as high quality and the biological foundation for predicting interactions. they had formulated opinions through an understanding of the process by which the data repository incorporates new information and through a working knowledge of the data used for their own research and its worth as related to their work.

sidekick enables computational analysis of systems such as interologuefinder and places researchers in control of their prior biological knowledge and research goals without the need for computational support. interologuefinder discovered a number of interactions that had not appeared in other data sources , which were subsequently verified in the wet lab. users can easily reproduce the published results of interologfinder using sidekick's simple queries and data combination modules in  <dig> easy steps. we compare the tasks required for both development and use of interologuefinder and sidekick. the discovery of multi-species protein networks requires orthologous gene lists and protein-protein interactions for the species to be studied .

typical manual approach 
team biologists began the interologuefinder work with a small list of potential target genes of interest and determined interactions present in publically available data bases . the computational team members expanded the interaction network by adding interactions present in orthologs based on orthologous relationships between genes specified by ensembl . these relationships are identified by ensembl identifiers that must be mapped to ncbi gene ids. a computational scientist downloaded, parsed, and remapped these interactions in order to implement interologuefinder. this process was performed multiple times when ensembl was updated .

interologuefinder also combined several data sources . computational team members downloaded ensembl synonym tables and converted protein identifiers from the intact and dip databases into ensembl ids. the bind database uses ncbi ids. the data required remapping to the latest ids and finding associated protein accession numbers, removing non-protein molecules, filtering for the appropriate species, and removing redundant results. over the course of developing the application that predicted protein interactions, scientists downloaded, parsed and combined the data sources multiple times because the information became out-of-date .

interologuefinder iteratively processed all five species using the interaction files and the following strategy. for a test gene pair, g <dig> and g <dig>  that does not have a known interaction in the target species, the procedure was to find orthologs  in another species and check for interactions between the orthologs. interologuefinder used the orthologous relationship to infer the interaction for g <dig> and g <dig> . development of the program took many hours of programming and several hours to run. interologuefinder used this method to identify the predictions med <dig> med <dig>  med <dig> med <dig>  and med <dig> med <dig> in fly from interactions in human. scientists selected these gene interactions because of their inclusion in a genome-wide rnai screen of genes required for viability after treatment with methyl methanesulfonate.

comparing the lists in interologuefinder  required a program to compare all known  and discovered interactions . when done by hand it is only feasible to check a few interactions for membership in both lists.

sidekick's flexible exploratory approach
sidekick provides a simple query: genes → orthologous pair list that allows users to find the orthologs in a specified species. behind the scenes, sidekick uses the same files from ensembl. however, these files are cached on the sidekick server. sidekick only downloads the information when a user requests a new species species combination and refreshes the local copy of the two files weekly to maintain accuracy. downloading of files is necessary because ensembl does not offer web services for data retrieval; however the sidekick server manages the data download 

sidekick's query: genes → interacting pair list uses ncbi and ncibi's mimi's web service to retrieve interaction information. mimi contains all of the data sources included in interologuefinder's analysis and several additional interaction data sources. sidekick doesn't download files, but rather acquires just-in-time information using mimi web services.

sidekick's directed research approach enables the user to achieve the same results as a process such as interologuefinder. for example, using the fly gene med <dig> as input into the query: genes → orthologous pair list with h. sapiens as the target species, the user finds the fly pair ortholog:  <dig>  <dig> . the user can reduce the result to a single gene list by selecting new list from result column. the single human gene list now forms the input into query: genes → interacting pair list, producing a second gene pair list . this pair list contains  <dig> human interactions. to connect the input column of the orthologs  to the output column of the interactants , use combine: translate: genea-geneb translate geneb-genec → genea-genec. the resulting pair list  has  <dig> fly genes and their orthologous interacting partners in human. after extracting the results column, using query: genes → orthologous pair list , and translating between interactants and orthologs, we now have connected the original fly gene with fly interactants .

the process finds both known and unknown interactions. to isolate only predicted interactions, simply use the original fly input list and run query: genes → interacting pair list to form a pair list . using  as the superset, the difference between interactions found through orthologous transfer and known interactions removes all known interactions leaving only interactions not known in public data bases . this list not only contains all three of the interactions validated by interologuefinder, but also  <dig> other interactions that might warrant further analysis. figure  <dig> shows a screenshot of sidekick at the end of a similar analysis.

sidekick's provenance and version tracking
sidekick maintains dates of data acquisition within each query and enrichment. sidekick either queries the web source directly or maintains a local copy of the data based on the stated update schedule for each web source; so that the user receives up-to-date data when using sidekick. table  <dig> shows the current data sources and their stated update schedule.

provenance information does not give the data source's current version, like ensembl's current database version of "ensembl genes 59". this information is not always available across all data sources. rather, using the date of acquisition that is associated with a specific data source and maintained across file save and loads, a user is able to maintain information relevant to the age of their analysis as it relates to data source updates.

sidekick's extensibility
sidekick currently supports six genomes, however the framework was constructed with the goal of extending to a variety of genomes. to add an additional species two main areas need to be updated. in the global base class, four lists are included to define different aspects of each species. these include the taxonomy identifier, the formal species name, an informal name for drop-down list display and the group label to use from ncbi's sequence files. when a new species is added to these lists, the front end of sidekick is modified. the second area to update is the backend file downloading and processing. this includes species specific download and processing of ncbi gene and sequence information, ensembl orthology information and processing of gene ontology information files.

discussion
the proliferation of publicly available biological data sources greatly increases potential for discovery but also raises issues of complexity, organization, and reliability for the user. multiple data sources increase coverage and confidence in the annotated information, but sources are quite varied in their reliability and format, each with strengths and weaknesses. mathivanan et al.  <cit>  evaluated several human protein-protein interaction databases that are available for download to aid researchers in choosing the data for their experiments. the databases included bind  <cit> , dip  <cit> , hprd  <cit> , intact  <cit> , mint  <cit> , mips  <cit> , pdzbase  <cit> , and reactome  <cit> . they discovered significant variations among these databases in terms of number of genes represented, number of interactions, source of data for the databases, and vocabularies. sidekick capitalizes on integrated sources such as ncibi's mimi, which has compiled an extensive number of databases to increase coverage of many types of information while rectifying vocabulary differences. many of the data sources covered by mathivanan et al.  <cit>  are present in mimi and sidekick.

the sidekick architecture is extensible, providing an opportunity for integration of new services at the user level. a data source must make its data available through a web service, placing the burden of keeping the data up-to-date on the source itself. the sidekick web server stages data files that must be downloaded, providing an interface for sidekick clients. some analyses are performed on the server, while other analyses are performed on the client, taking advantage of flex's client-side object-oriented support.

sidekick manages a variety of credibility measurements to quantitatively describe belief in information and uses dempster-shafer's ability to represent uncertainty and lack of knowledge. credibility, which is more loosely defined than a strict probability, allows users to organize information about importance and to sort by these factors over successive calculations using information from disparate sources. p-values are often used to describe enrichment tasks where probability of the null hypothesis is measured.

goodman  <cit>  explains the inherent problem of using p-values as a means of measuring belief and uses a bayesian approach to convert p-values into a probability measurement. however, conversions and combinations of p-values require previous knowledge of the distribution of the input p-values, which may or may not be available.

dempster-shafer theory  in combination with sidekick's visualization of score-from-source addresses the problem of uncertainty, combination of beliefs and conversion of p-values when the underlying distribution is unknown. dempster-shafer's theory provides the ability to model and combine certainty even in the presence of uncertainty. currently, none of the data sources directly conflict with each other. for example, query: disease/term → gene list provides results from both ncbi and ncibi. the fact that only one source might provide a gene does not mean that the second source has evidence against the inclusion of the gene in the combined list. rather this situation indicates no evidence for inclusion. however, if two future web sources do conflict, dst manages disbelief as well. when combining conflicting evidence, the strength of the belief and disbelief are combined, with the stronger evidence having a greater effect. multiple belief functions may be combined by applying dst iteratively for each basic confidence measurement assignment. when multiple web services return the same gene, dst increases confidence in that gene's inclusion in the results list.

the visualization module addresses the problem of p-value conversion without distribution information. for dst to be used, one must have beliefs assigned to each of the values representing the data. sidekick's visualization and clustering methodology gives the user the ability to manage the conversion from p-value to credibility measures, reflecting prior knowledge in the credibility scores. once credibility scores are assigned, either as a result of a computation or by the user, sidekick uses dst for combining these scores into an overall result credibility. a detailed example of combining credibility using dempster shafer theory is provided in the supplemental materials file. see additional file  <dig> supplemental.pdf

provenance and version tracking are incorporated into sidekick to facilitate repetition of experiments and evaluation of data quality. given the rate which data is updated, a key aspect to sidekick's strength is ensuring up-to-date data at the time of downloads. within sidekick, provenance information is included in the saved workflows and results.

sidekick currently supports six genomes, however the framework was constructed with the goal of extending to a variety of other genomes. when an additional genome is added, the developer adds the pertinent information to the species specific lists. currently this includes the taxonomy id, the formal and informal species names, and the genome sequence group label to use for chromosomal information. if any specific genome is not covered by a particular data source, the lack of information will appear as lack of results in the query or enrichment. this lack of information can be mitigated through the use of query: genes → orthologous pair list. by finding orthologous genes that are covered by existing data sources, the user is able to transfer annotations to the unannotated genome.

CONCLUSIONS
sidekick offers an easy-to-use web-based, flexible alternative to current research tools. belief updating through visualization allows scientists to incorporate their own background understanding into the manipulation of data. gene and gene pair list discovery, enrichment and combination allow accessibility to data and complex biological discovery. sidekick is unique in its capabilities for scoring and manipulating gene pair lists as well as its user belief management. while the examples of this paper emphasize initial discovery and exploration, sidekick can also play an important role in interpretation of results obtained from other types of analyses. often the final stage of an analysis such as clustering produces a gene list. in the discussion of the results, researchers typically apply enrichment analysis to explain how the resultant genes are related. researchers can further explore these relationships by importing their gene lists into sidekick and quickly determine interactions, enrichments, and orthology.

we will continue to work with scientists using sidekick to implement additional modules and services. not only will these expand analysis involving genes, but also those involving other molecules such as proteins, and protein complexes.

availability and requirements
• project name: sidekick

• project home page: http://visual.cs.utsa.edu/sidekick/

• operating system: platform-independent

• programming language: flex  <dig>  and action script  <dig>  java servlets

• other requirements: adobe flash player  <dig> and a browser that supports it

• license: no license required

• any restrictions to use by non-academics: none

authors' contributions
msd and kar conceived the framework. msd developed the framework with input from ky and kar. all participated in the manuscript development. all authors read and approved the final manuscript.

supplementary material
additional file 1
a detailed example of using dempster shafer theory to combine credibility scores.

click here for file

 acknowledgements
we acknowledge support from nih research centers in minority institutions 2g12rr1364-06a <dig>  and computational support from the sa computational biology initiative. sidekick uses web services and data from a number of sources including ncbi, ncibi, and ebi.
