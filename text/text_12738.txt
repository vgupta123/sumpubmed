BACKGROUND
metabolism visualization for systems biology studies
the scale of metabolic studies varies according to the data and to the biological questions. for instance, toxicologists often follow the degradation of a given molecule; in that case they focus only on a very small number of reactions. at a larger scale, biologists studying glycolysis will focus on this particular metabolic pathway. most of the work on metabolism visualization has been done at this level of detail  <cit> . however, in order to investigate an organism's metabolic response to stress, it is relevant to study all the pathways simultaneously. for instance, this will be useful for treating the results of high throughput experiments such as transcriptomic data where relevant gene products are identified in many pathways. visualization is a suitable and obvious solution to achieve this kind of study, for instance by representing all the metabolic pathways in one drawing and by coloring relevant enzymes and metabolites  <cit> . in  <cit> , the authors use this approach to analyze simultaneously transcriptomic and metabolomic data . based on this representation, they managed to identify at once perturbations in the calvin cycle, glycolysis and tca cycle. such kinds of studies emphasize the necessity to develop methods that allow to visualize the entire metabolic network in a single drawing.

highlighting pathways according to experimental data provides some clues on metabolic processes. however, to integrate these conclusions in a systems biology approach, it is necessary to understand how these pathways are linked and how processes span over them.

the issue of analyzing biological processes spanning several metabolic pathways appears in many contexts. as we already mentioned, it appears when analyzing metabolomic or transcriptomic experiments, which are generally not pathway-focused. this issue also arises for topological analyses based on motif detection  <cit> . a motif  may occur in different parts of the network , and each occurrence may be composed of reactions belonging to different pathways .

therefore, pathway visualization is not suitable for such tasks but neither is network visualization without pathway information. indeed, to be useful for mapping experiments, it is necessary to represent the entire network structure while keeping the contextual information provided by its division into metabolic pathways. note that this is one of the requirements for biological network visualization proposed in  <cit> . recently, in addition to the studies that use the network as a background, great efforts have been devoted to the analysis of the topological properties of metabolic networks  <cit> . indeed topology could, for instance, give clues on the evolution of the organisms they are related to. more generally, topological features like shortest path, connectivity, node degrees and node/edge metrics have become common investigation tools. to visually retrieve topological information, it is necessary that the drawing provides a faithful image of the network structure. this is a challenging problem which has not been addressed by current metabolic network visualization tools  <cit>  which choose to allow node duplication and therefore do not face this issue.

in the case where nodes are not duplicated, pathways which share reactions and compounds cannot all be drawn equally well . therefore, choices have to be made on which pathways will be drawn well in priority. we propose both an automatic way of making this choice and possibilities for the user to define his own priorities. this last option adds an interesting feature to the tool: depending on the choices made, the backbone of metabolism  can be adjusted to the pathways one is interested in. this backbone can either include the glycolysis and the tca cycle as it is traditionnally the case in most drawings or, alternatively, it can include pathways that share compounds or reactions with glycolysis and the tca cycle and which would, if not chosen, be drawn in the background. playing around with this option enables to get a grip on the interdependence of the pathways.

the aim of this paper is to propose an algorithm to draw the entire metabolic network. the produced representation will have to follow textbook drawing conventions , display information on the metabolic pathways and keep the topology of the network by avoiding node duplication.

metabolic network drawing and visualization
drawing metabolic pathways
a metabolic pathway  is a subnetwork of the metabolic network. the decomposition of the entire network into metabolic pathways is generally done according to biological functions: molecule degradation , molecule synthesis  or energy transfer  <cit> . until recently, these pathways have been manually drawn, for instance for teaching purposes, or to exchange results  <cit> . then, numerical versions of these manual drawings were proposed and used on web servers such as kegg  <cit> .

in the last few years, automatic drawing algorithms have been designed, mainly for two reasons. first the number of organisms for which a metabolic network is described is increasing quickly. indeed, in silico methods have been designed to reconstruct metabolic pathways from annotated genomes  <cit>  which are more and more numerous. second, these putative networks follow a regular curating process implying many changes in their structures. in this section, we describe the algorithms that have been proposed for drawing metabolic pathways since they could be extended to the entire network.

because biologists are used to textbook representations, most of the automatic methods consist in following the drawing habits of these representations  <cit> . even if there is no standard for these conventions, it is possible to identify the most commonly used ones. some of the aesthetic criteria are also used in graph drawing  <cit> : lowering the number of edge crossings and lowering the number of bends on edges. moreover, the biological nature of pathways implies some conventions. the notion of reaction cascade is central since generally metabolic pathways describe the transformation of input metabolites into output ones. most automatic drawing algorithms have been designed to emphasize this structure. the algorithm proposed in  <cit>  and implemented in biominer uses a hierarchical drawing algorithm which embeds nodes on regular horizontal layers  <cit> . others propose adapted versions of classical hierarchical drawing algorithms, like in  <cit>   or in  <cit>  .

however, these algorithms do not emphasize cyclic patterns which are also relevant . thus, other methods were designed to take into account these two configurations. the first one was proposed in  <cit>  where the authors introduce a compound graph layout algorithm, that is, they first detect cycles then treat them as metanodes creating a directed acyclic graph  and applying a hierarchical drawing algorithm on this dag. in  <cit> , the authors refine the approach by detecting nodes shared by two cycles thus providing two cyclic representations instead of one. finally,  <cit>  proposed the same kind of approach for signaling pathways, adding the ability to manually constrain the drawing. however, all these algorithms were initially designed to draw pathways and are not well adapted to draw networks. for instance, we tried to use the software simwiz which implements the algorithm proposed in  <cit>  to draw the metabolic network of escherichia coli but the program failed because the network was too large. we were nevertheless able to draw the metabolic network of mus musculus, which is smaller. the result is shown in figure  <dig>  in this case, the main problem is due to the cycle detection which is applied on the whole network thus highlighting cycles that span over different pathways.

scaling to the whole metabolic network
in the graph drawing community, efficient drawing algorithms have been designed to draw large networks. among them, force-based layouts  <cit>  are commonly used. such layouts mimic physical systems, that is, nodes are considered as masses  and edges behave as springs . this system evolves from a random embedding to one corresponding to an equilibrium, providing a suitable layout. these algorithms generate quite good drawings since they generally emphasize dense subgraphs and spread low degree nodes on the screen space. they are used in cytoscape  <cit>  or in the online sbml viewer  <cit>  for instance. however, as mentioned in  <cit> , such drawings are not satisfying for biologists. the first reason is that they do not follow textbook drawing conventions, and the second is that they emphasize topological clusters which generally do not correspond to a metabolic pathway decomposition. to overcome this last problem, force-based methods could be used in a compound graph layout as it is done in  <cit>  . however, this tool is not dedicated to metabolic pathway visualization and thus does not follow all textbook drawing conventions.

the two main efforts for automatically drawing metabolic networks while keeping metabolic pathway information and respecting drawing conventions are: reactome  <cit>  and the pathway tools cellular overview diagram  <cit> . as it was mentioned before, in both tools nodes are duplicated thus the only drawing problem is to embed metabolic maps. both achieve it by grouping maps according to their common functions. the latter assumes that a hierarchy on the pathways is given as input to the algorithm and is then used to display pathways close to each other when they are close to each other in the hierarchy. this functionality is not included in the current implementation of our algorithm. nevertheless, it is still possible to circumvent this problem by redefining coarse-grained pathways  in the input data.

in the following sections, we first describe our metabolic network drawing algorithm. then we discuss our approach and compare it to other published methods using the metabolic network of esherichia coli  as benchmark.

implementation
using a mixed bipartite graph to model metabolic networks
a graph provides an intuitive way of organizing large amounts of relational data. the general definition of a graph g =  is simple. it consists of a set v of n vertices  and a set e of m edges, each of which corresponds to a pair-wise relationship between two of the nodes . modeling the metabolic network consists in choosing which biological objects are associated to nodes and edges. it is necessary to do this model description before introducing the graph drawing algorithm, since it will constrain the representation. for instance, a model may imply that some nodes have a high degree, thus complicating a planarization process.

bipartite graph
a metabolic network is a set of biochemical reactions . different models could be used . here, we consider that there are two kinds of nodes: reactions and substrates  and that there is an edge between a reaction and a substrate if the substrate is consumed or produced by the reaction. the discussion of this choice is out of the scope of this paper, but the main motivation is due to the use of this model in many textbook drawings. this graph is generally called a bipartite graph since its set of nodes can be split into two subsets where the elements are not linked . thus the set of vertices can be split into two subsets r = {v ∈ v |v is a reaction} and s = {v ∈ v |v is a substrate}, and v = r ⊕ s and e ⊆ {|u ∈ r, v ∈ s} = r × s.

mixed graph
metabolic reaction can be either reversible  or irreversible . this orientation is defined according to the physiological properties of a reaction. sbml descriptions of reactions provide this kind of information. in order to model such a biological phenomenon, we use a mixed graph. in a mixed graph, the set e of edges is splitted in two subsets a and e', where a is the set of arcs , e' is a set of non-oriented edges and e = a ⊕ e'.

thus, for modeling the whole network, we use a mixed bipartite graph g = .

graph hierarchy
a metabolic pathway is a subnetwork of the metabolic network. here, it corresponds to a graph gp =  where vp ⊂ v and ep = { ∈ e|u ∈ vp and v ∈ vp} ⊂ e . for a given metabolic network g, we note pg = {gi|  <dig> ≤ i ≤ np} its np metabolic pathways. one can notice that for each gi, vi and ei can be decomposed in four subsets ri, si, ai and e′i
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgfbqrgaqbamaabaaaleaacqwgpbqaaeqaaaaa@2f52@ .

taking pathways into account leads to the following graph hierarchy : the graph g representing the whole network and np induced subgraphs gi representing its np metabolic pathways.

drawing algorithm
the algorithm we propose has two main steps: first, a multi-scale clustering is performed creating a quotient graph , and second, clusters and quotient graph are drawn using three drawing algorithms. in the next section, we first explain our clustering algorithm and then, we present the drawing algorithms we use.

multi-scale clustering
one of the main problems is that metabolic pathways often share nodes. for instance, in figure  <dig>  the yellow, blue and purple regions respectively represent pathways p <dig>  p <dig> and p <dig>  one can see an overlap between p <dig> and p <dig>  and between p <dig> and p <dig> . this situation is not rare in real networks: in the e. coli metabolic network,  <dig> nodes  are shared between several pathways, and the average number of pathways per node is more than  <dig> . since we choose not to duplicate nodes, and since vertices of a pathway have to be drawn next to each other, our algorithm has to decide whether a node is embedded next to a pathway or next to another. for example, the shared node between p <dig> and p <dig> could be drawn near p <dig> or near p <dig>  this is achieved by a two-step process. the first step consists in computing an independent set of pathways  and the second one in detecting cycles and paths.

first pass : computation of an independent set of pathways
first of all, the algorithm searches for a subset pind = {p <dig>  ..., pind}, ind ≥  <dig>  pind ⊆ pg such that  <dig>  the pathways of pind are independent and  <dig>  ∑i=1i=ind|pi|
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaaewaqaamaaemaabagaemicaa3aasbaasqaaiabdmgapbqabaaakiaawea7cagliwoaasqaaiabdmgapjabg2da9iabigdaxaqaaiabdmgapjabg2da9iabdmgapjabd6gaujabdsgakbqdcqghris5aaaa@3e8d@ is maximized. for instance, in figure 3a, {p <dig>  p3} is the independent set that maximizes this sum among all possible independent sets of pathways .

the problem of finding a maximum independent set is known to be np-hard  <cit> . this problem can be reduced to a coloration problem . to find a solution, we use the welsh and powel heuristic  <cit> . then, for each color class c, ∑pi∈c|pi|
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaadaaeqaqaamaaemaabagaemicaa3aasbaasqaaiabdmgapbqabaaakiaawea7cagliwoaasqaaiabdchawnaabaaameaacqwgpbqaaeqaasgaeyici4saem4qameabeqdcqghris5aaaa@3a3a@ is computed, and a maximum one is chosen as our independent set.

let pnind = pg\pind. then, for all the pathways in pnind, we exclude nodes that are shared with at least one other pathway in pg. we denote this reduced set by p′nind
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgqbaugaqbamaabaaaleaacqwgobgtcqwgpbqacqwgubgbcqwgkbazaeqaaaaa@3343@.

each element of pind and p′nind
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgqbaugaqbamaabaaaleaacqwgobgtcqwgpbqacqwgubgbcqwgkbazaeqaaaaa@3343@ is a set of nodes. these sets define a clustering on the original graph since there is no overlapping between them. this clustering is used by replacing each subgraph induced by an element of pind or p′nind
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgqbaugaqbamaabaaaleaacqwgobgtcqwgpbqacqwgubgbcqwgkbazaeqaaaaa@3343@ by a metanode representing it . we call this first clustered graph gclust <dig> 

for all the pathways in pind and in p′nind
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgqbaugaqbamaabaaaleaacqwgobgtcqwgpbqacqwgubgbcqwgkbazaeqaaaaa@3343@, we search for the longest independent mixed cycles . a mixed cycle is a sequence of nodes v <dig>  v <dig>  ..., vl, l ≥  <dig> such that ∀  <dig> <i ≤ l,  ∈ e' ∪ a and  ∈ e' ∪ a.

moreover, ∀  <dig> <i <l, if vi represents a reaction and vi- <dig> a substrate consumed in  this reaction, then vi+ <dig> is produced by  vi. this problem is also np-complete even if a = ∅  <cit> . to "solve" it, we use an exact maximum length cycle algorithm and bound the computation time with a threshold. if the threshold is reached, we stop the algorithm and consider that the longest mixed cycle we have already found is a longest one. this allows to have an exact result in the best case and an approximation of a longest mixed cycle otherwise. the technique computes all mixed paths using a mixed breadth-first search . in figure 3c, one can see the longest independent cycles of each element of pind and p′nind
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgqbaugaqbamaabaaaleaacqwgobgtcqwgpbqacqwgubgbcqwgkbazaeqaaaaa@3343@ highlighted in red. these cycles are clustered into metanodes yielding a multi-scale graph called gclust <dig>  for all the metabolic networks on which we tested our algorithm, the threshold was not reached .

second pass : detection of cycles and paths
the next step of the algorithm consists in computing the longest independent mixed cycles in gclust <dig>  excluding metanodes. at each iteration, we cluster a longest cycle into a metanode and exclude it for the next search. we then compute the longest mixed paths, i.e. the longest sequences of nodes of degree less or equal to two v <dig>  v <dig>  ..., vl, l ≥  <dig>  where ∀ <dig> <i ≤ l,  ∈ e' ∪ a.

in figure 3d, one can see the two new metanodes, the left one is a path and the other one is a cycle. the result of this clustering is the quotient graph that will be the input of the drawing algorithm.

drawing algorithm
to draw the metabolic network, we use three drawing algorithms: one for the quotient graph and two for the metanodes.

drawing metanodes
to draw subgraphs represented by metanodes, we use a recursive drawing algorithm. this algorithm draws all the subgraphs from the most nested to the least nested. according to our clustering method, a subgraph is either a cycle or an acyclic graph. in the first case, we use a circular drawing algorithm ; in the second case, we use the hierarchical drawing algorithm presented in  <cit> .

drawing the quotient graph
we want a drawing that optimizes the angular resolution and the number of bends to obtain a better visibility. the mixed-model algorithm of c. gutwenger and p. mutzel  <cit>  is a trade-off between all these aesthetic criteria. moreover, drawings produced by this algorithm are similar to manually drawn metabolic networks.

to use the mixed-model algorithm, we need to make modifications on the quotient graph. indeed, it can only be applied to planar graphs; therefore, we have to planarize  the quotient graph. this problem is well-known and is np-hard  <cit> . many techniques exist that do it either by augmentation or by deletion of edges . for a survey on this topic, one can refer to  <cit> . the drawback of an augmentation based technique is that it may add up to |v| <dig> nodes, thus the drawing becomes difficult to understand. that is why we use our own heuristic: vertices of higher degree are removed one by one until the graph becomes planar. all removed nodes are then re-inserted. removed edges are re-added one by one as long as the graph is planar.

the re-insertion of edges for each node is done with no prior order, using a greedy approach. the edges that have been removed and not re-inserted during the planarization step will be re-inserted after the planar subgraph is drawn.

the obtained planar subgraph of the quotient graph is drawn by the mixed-model algorithm  <cit> . to summarize, this algorithm has two steps :

• the first step builds an ordered partition of the set of nodes. this partition is called shelling ordering. the principle is to remove successively nodes that are on the external face of the graph.

• the second one is the "recomposition" of the graph according to the shelling ordering. to guarantee that there is neither edge-edge crossing nor node-edge overlapping, the ordering is traversed in reverse order.

as described in the background section, if a vertex is in a pathway, it has to be drawn close to the other vertices of the pathway. taking into account such a constraint in the mixed-model algorithm can be done during the decomposition phase. let so = {v <dig>  v <dig>  ..., vr} be the shelling ordering. when a vertex n is added to a set vi,  <dig> ≤ i < r, we add in priority vertices which have a constraint with n into the next vj, j > i. those nodes will be more likely to be drawn next to each other.

the last step of our drawing algorithm is to draw edges removed during the planarization step. these edges are routed on the external face, using an orthogonal drawing with three bends per edge. figure  <dig> shows the drawing obtained by our algorithm on the metabolic network of e. coli. this is an organism which has been widely studied, its metabolism is composed of  <dig> pathways,  <dig> substrates and reactions  and  <dig> links  between them.

parameter: focus pathways
the algorithm allows to focus on several pathways, i.e. one can choose pathways to be entirely clustered. users constrain the independent set algorithm by giving an ordered list of pathways that are clustered if possible. indeed, such a list may not be represented by an independent set in the dependence graph . in this case, the order of the list gives the priority associated to each pathway and helps to extract an independent set of pathways from the list. nodes representing those pathways and their neighbors are removed from the dependence graph. an independent set is then computed in the resulting dependence graph. the final independent set is obtained by adding this independent set and those computed in the list.

RESULTS
data
to test and validate the algorithm, we used data from the version  <dig>  of the ecocyc database. we developed perl scripts using the pathway tools software  <cit>  to obtain information on the reactions, compounds and metabolic pathways involved in the metabolism of the k <dig> strain of escherichia coli. we chose this organism because it is perhaps the most curated one and we thus avoid most of the data artifacts caused by automatic reconstructions of metabolism.

several filters are applied on the original data to build our test data. the first one is to withdraw reactions involving large molecules such as proteins. next, we remove reactions that are involved in no identified metabolic pathway. the last filter has for objective to avoid ubiquitous compounds. indeed, co-factors such as atp and nadh participate in many reactions and form hubs in the network which lead to a very fuzzy drawing. one traditional way around this problem is to eliminate the most connected compounds but this implies that metabolic pathways that have these compounds as final products or as precursors become meaningless. we therefore prefer another solution which consists in eliminating the connection between a compound and a reaction if the compound is annotated in ecocyc as "secondary" in each metabolic pathway that contains the reaction. a compound is defined as "primary" in a biocyc metabolic pathway when it is a direct chemical intermediate between the start substrate and the end product and is defined as "secondary" when it is a sub-product or a secondary substrates  of the metabolic pathway.

it is important to note that this filter leads to a clearer drawing but any kind of compound filter could be applied. in the same way, the classification of the reactions in the ecocyc-defined metabolic pathways was an easy way to test our algorithm but other classifications could be used, for instance a decomposition into elementary modes  <cit>  or extreme pathways  <cit> . a metabolic pathway, as defined in biocyc, can be either a linear chain of reactions, a branched pathway, a cycle: this topological diversity is interesting for testing our drawing algorithm.

the data is stored in a sbml file  <cit>  and computed by metaviz. the information about the belonging of each reaction is directly included in the smbl file as shown below in the entry of one reaction which belongs to three different metabolic pathways:

...

<reaction id="dihydrofolatereduct__45__rxn" name="dihydrofolatereduct-rxn" reversible="true">

   <notes>

      <html:p>subsystem: tetrahydrofolate biosynthesis</html:p>

      <html:p>subsystem: superpathway of chorismate</html:p>

      <html:p>subsystem: formylthf biosynthesis i</html:p>

   </notes>

   <listofreactants>

      <speciesreference species="thf" stoichiometry="1"/>

   </listofreactants>

   <listofproducts>

      <speciesreference species="dihydrofolate" stoichiometry="1"/>

   </listofproducts>

</reaction>

...

after the filtering, the sbml file contains :

•  <dig> compounds and  <dig> reactions 

•  <dig> metabolic pathways of which  <dig> are superpathways, i.e. pathways which contain other pathways.

validation
the protocol we adopted for the validation is the following: we systematically compared the behavior of metaviz to cytoscape and to the pathway tools cellular overview diagram whenever possible. this comparison was carried out for the following tasks:

• visualization of the whole network;

• visualization of individual metabolic pathways;

• visualization of a metabolic pathway in its context.

visualization of the whole network
the drawing obtained by the pathway tools cellular overview diagram  with the same data represents all metabolic pathways but in this case, the layout is fixed. moreover, it is not possible to zoom further into the drawing.

unlike the pathway tools cellular overview diagram, metaviz enables to see a metabolic pathway in its context, keeping the same layout. for instance, figure 7a is merely a zoom of figure  <dig> 

drawing of the tca cycle
we do not compare the results with cytoscape of which the purpose is not to draw metabolic pathways but only to draw a whole network.

in the data from biocyc, the tca cycle is included in the super pathway of "glycolysis, pyruvate dehydrogenase, tca, and glyoxylate bypass". because of its great number of nodes, this pathway was chosen by the algorithm to be particularly well drawn: all the nodes  involved in this super pathway are grouped together into a same metanode . the drawing obtained by metaviz is very similar to the one obtained by the pathway viewer of biocyc . the differences between the two drawings are mostly due to the differences in the types of graph used to model the network: a simple graph in the case of biocyc, and a bipartite graph in the case of metaviz.

drawing of the valine biosynthesis pathway
this pathway is a four-step chain which starts with pyruvate and ends with l-valine.

we present here two cases:  <dig>  the clustering is not guided and  <dig>  the clustering is guided. if the clustering is not guided, this pathway is not selected to be drawn well and is actually split into three parts: one node is drawn in the superpathway of the tca cycle and glycolysis , one node corresponds to the superpathway of pantothenate and coenzyme a biosynthesis  and the third node corresponds to the other reactions .

this metabolic pathway has not been efficiently drawn because some of its elements belong to larger metabolic pathways. nevertheless, we do not see such a representation as a negative result but instead consider the division of this metabolic pathway into several parts as interesting. indeed, it means that this metabolic pathway shares several elements with others, showing the interdependence between the pathways. otherwise, if the clustering is guided and valine biosynthesis is chosen as a focus pathway, metaviz efficiently represents it . obviously, this choice leads to the disconnection of the metabolic pathways sharing the same nodes. as mentioned above, we can see here one of the main interests of metaviz: it is possible to change the backbone of the drawing to center it on specific metabolic pathways. if we compare this drawing with the one obtained by the pathway viewer of biocyc , we observe that the order of the nodes is reversed. that is pyruvate is on the left of biocyc drawing while it is at the bottom of the metaviz one. hence pyruvate appears as the input of the pathway. but in biocyc sbml description these reactions are annotated as reversible. so it is not, in that case, possible to automatically identified pyruvate as the input of the pathway.

visualization of a metabolic pathway in its context
metaviz represents explicitly the links between metabolic pathways. these links are ignored when metabolic pathways are separately drawn  or when no information about the belonging of the nodes to a metabolic pathway is displayed . the pathway tools cellular overview diagram proposes to optionally draw these links in superposition to the main drawing. the limit of this approach is that, since these links are not incorporated in the original layout, the final drawing may become very dense and hard to read.

it is possible with metaviz to highlight the nodes that are neighbors of a selected node. figure  <dig> shows the direct neighbors  of the valine biosynthesis pathway. one can then more easily follow each edge to see to which nodes in the network this metabolic pathway is connected.

CONCLUSIONS
in this paper, we present an algorithm to compute the representation of a metabolic network. this method addresses a challenging problem which consists in representing simultaneously the topology and the metabolic pathway information. indeed, metabolic pathways often share metabolites and reactions, thus to represent them in a single view, previous approaches duplicated these shared elements. however, duplication produces drawings where the depicted connectivity does not fit the real topology of the network. to overcome the problem of shared nodes, we propose a clustering step based both on topology and a metabolic pathway decomposition. during this step, we deal with pathway overlapping by detecting a largest set of independent pathways and sub-pathways. the resulting graph clustering shows the overall organization of the pathways. to follow common drawing conventions, it is drawn using a planar graph drawing algorithm. finally, each pathway or sub-pathway is drawn using specific drawing algorithms . in our collaboration with physiologists, we noticed that they often consider some pathways as being central in their global studies. to respect their habits, the physiologists can provide a set of focus pathways that will be considered as a parameter of the clustering step. thus our algorithm will generate a drawing where these pathways are entirely and carefully drawn.

this global representation allows the visualization of processes that span over different metabolic pathways. for instance, this approach was successfully used to highlight metabolic processes, especially those traversing different metabolic pathways.

one of the future directions we would like to consider concerns the improvement of the global aspect of our drawing. the drawing conventions that we identified for metabolism are mostly local . following them does not ensure to have a global picture that will look like the boehringer map  <cit>  which may be closer to what biochemists are used to. indeed, the global picture that we obtain with our method can be puzzling at first glance, and it is only when navigating in the drawing that the user will find more familiar patterns. we believe that we can improve the aspect of the global drawing in considering alternative ways of drawing the quotient graph.

in this paper, we focused on the drawing part of metabolic network visualization. as it was mentioned, drawings are used as a background for high throughput data visualization. since this algorithm is already implemented in a graph drawing software  <cit> , we plan to develop an input module for omic data. another issue will be to add more relational information such as signaling processes. we plan to use the third dimension to incorporate the additional edges.

availability and requirements
project name: metaviz

project home page: 

operating system: currently linux and windows. mac osx ports is possible.

programming language: c++

other requirements: tulip  <cit> , qt from trolltech.

license: gpl

authors' contributions
fj initiated this work. rb, vl, lc, da, ms and fj defined metabolic network drawing constraints. rb, da, and fj established the translation of these constraints into graph drawing ones. rb and da designed the drawing algorithm. rb and pm implemented the algorithm. lc build the datasets from ecocyc. vl, lc and ms performed the tests and result analysis. all authors participated in manuscript preparation. all authors have read and approved the final manuscript.

