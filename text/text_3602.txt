BACKGROUND
 <dig>  introduction
in many biological processes proteins play a key role. they are involved in biological regulation, development, growth, locomotion, metabolism, and reproduction. therefore, the study and analysis of proteins is of high importance in the fields of biology and medicine. due to their chemical structure proteins are able to interact with each other. these interactions trigger many biological processes. for example, signals from the exterior of a cell are mediated to the interior of the cell by protein-protein interaction  of the signaling proteins. such processes are also involved in diseases such as cancer. ppis are fundamental to life, and their investigation yields insight into the evolution of animals  <cit>  and into biochemical function  <cit> .

for each species its proteins and their interactions form a ppi network. the ppi networks of different species are related if they evolved from a common ancestor whose ppi network can be viewed as their common ancestral network. learning more about the evolution of ppi networks helps us understand the networks themselves. ppi networks can be aligned by finding proteins with the same common ancestor, so-called orthologs  <cit> . investigation of such an alignment allows for the detection of similarities and dissimilarities between different species. for example, the interaction network between key regulators of stem cell pluripotency  is believed to be shared by mouse and human, while there are differences in the signaling network that controls the key regulators  <cit> . in section  <dig>  we provide the fundamental biological background on proteins, ppi networks, and their alignment. this description leads to the formulation of the key questions that one wants to address by investigating aligned biological networks.

since tackling these questions requires the simultaneous exploration of different types of relationships between proteins, research on biological networks demands the support of a graphical display of such networks. as biologists are interested in viewing the interaction of the proteins within one species, but also the alignment based on the orthologous proteins between the species, standard graph layouts are of limited use. first attempts to the visualization of aligned biological networks can mostly be regarded as ad-hoc approaches in terms of visualization methodology, see the related work in section  <dig> . with this paper, we intend to

• present a novel solution to the problem that applies visualization technology optimizing layout and interaction,

• discuss our contribution in terms of visualization methods and how they relate to existing methods from other application areas, and

• show how our interactive visual exploration system is used in practice.

instead of presenting yet another ad-hoc approach to visualize aligned biological networks, we built an interactive visualization system that allows for a systematic exploration of the data. our system is based on a new  <dig> d layout approach, see section  <dig> , and provides the user with various application-targeted interaction techniques to visually explore the alignment, see section  <dig> . the layout has to fulfill certain specific requirements, which are formulated in section  <dig> . how an application scientist can interactively and visually explore network alignments is described in an application scenario in section  <dig> 

 <dig>  protein-protein interaction networks and key questions
protein-protein interactions  are transient or permanent connections between proteins, and they are important for many biological phenomena such as signaling, transcriptional regulation, and multi-enzyme complexes. they are explained by molecular adhesive forces between parts of the proteins  which in turn can be tracked down to the atomic level. the proteins of an organism and their interactions form a ppi network.

interaction networks evolve by the loss and gain of nodes  and links . it is assumed that the complex networks interconnecting the components of an organism such as a human being are, like all of life, the result of a more or less gradual evolutionary process of descent with modification. emergence of biological complexity is nevertheless poorly understood, and a deeper understanding is of utmost importance.

as the ppi networks of different species evolved from a common ancestor network, we are able to align them. a network alignment for a number of networks from different species specifies which nodes  in one network correspond to  which nodes in the other networks. this correspondence may be one to one, or it may relate a set of paralogs in one species to an orthologous set of paralogs in another species. more precisely, we view proteins from one species to be paralogous if they evolved by duplication after the speciation event splitting the last common ancestor. two proteins in one species that evolved from the same protein are not understood as paralogous if they were already distinct proteins in the ppi network of the last common ancestor. in additional file  <dig>  we provide a more detailed discussion on the biological background of protein interaction network evolution. in a recent strand of research several groups have begun to systematically compare interaction networks between organisms, and the network of one organism with itself  <cit> . in the first case, orthologous subnetworks are inferred, as described above. paralogous subnetworks can be detected in the second case. in particular, the pathblast tool  <cit>  can detect orthologous paths in two networks. given a path or a small network to search for and a network to search in, it returns orthologs of the query path/network in the search network, displayed in a graphical "side by side" output  <cit> . pathblast also aligns networks for more than two species. another network alignment approach called "local graph aligner" was developed based on a spin model  <cit> . this approach is used to align several networks and evaluates the statistical significance of the alignment. yet another approach, networkblast  <cit> , uses an efficient representation of alignments and infers conserved complexes. the output of networkblast can be used as input for vanlo. in another approach, networks are not directly aligned by their graph structure. instead, they are aligned based on modeling the evolution of the networks from a common ancestral ppi network using bayesian methodology  <cit> . this approach allows the alignment of more than two large networks. it does not only compute an alignment, it also explains how the networks evolved.

in biology, scientists are not only faced with ppi networks but with many other kinds of biological networks including regulatory ones that involve dna-protein interaction and metabolic ones that include small metabolites as nodes. these networks are also related by evolution and can be aligned. therefore visualization techniques developed for aligned ppi networks can also be used for these kinds of biological networks. analysis of all kinds of networks will gain importance, in particular in biomedicine. after all, complex diseases must be tackled nowadays: cancer, arteriosclerosis and dementia are all multifactorial. they all have their cause in the interplay of a multitude of factors, many of which corresponding to networks gone out of order. in this context, comprehensive visualization can be a trigger of medical progress.

given aligned ppi networks of different species, biologists are particularly keen on having means to answer the following questions:

• what is the conserved core of the alignment, i.e., its most ancestral part?

• what are the cores of the underlying pairwise alignments?

• what is new in each network?

the core of an alignment consisting of orthologous proteins in all species that share the same interactions most likely consists of proteins responsible for the same biological process and with the same function. this insight allows biologists to predict some protein properties from aligned ppi networks  <cit> . furthermore, the core of an alignment is a good estimate for the network of the last common ancestor of the species involved. the pairwise cores are good estimates for the last common ancestor network of two species. hence, they should be explored for the networks of two species that are close in the species tree. detection of pairwise cores can help biologists to reconstruct the evolution of parts of the ppi network.

newly developed parts in a ppi network are usually assumed to represent new functionality, that did not exist before. after being identified, this new part may afterwards be subject to further investigations. network comparison should allow to find putative errors in one of the networks, or in the alignment. one hint for an error  could be an edge existing only in one of the species, and the user can have a closer look, trying to find out what the evidence for this edge is and whether this interaction really exists.

 <dig>  related work
 <dig> . <dig> graph drawing
it is intuitive to represent biological networks such as ppi networks as graphs. in a ppi network the proteins can be represented as vertices of a graph and the ppis as edges of the graph. therefore, visualizing biological networks is a special subject of graph drawing which is a well-studied field in information visualization  <cit> .

the layout of a graph is most important because it determines the human perception of the graph  <cit> . in graph drawing one is generally interested in optimizing the layout of the graph with respect to some properties and constraints. many different approaches exist, depending on the properties of the graph or on the information one is interested to visually extract or highlight. graphs are most commonly drawn using a 2d layout where vertices are drawn as nodes and edges represented by lines. plenty of algorithms exist for automated graph drawing  <cit> . probably the most prominent approach to layout a graph is given by the family of force-directed algorithms  <cit> . the goal of these algorithms is to group interconnected nodes together and to spatially separate non-connected nodes. therefore, attracting and repelling forces are defined and applied for node interference. typically, all nodes repel each other using pairwise repelling forces and all connected nodes attract each other . algorithms like the one by fruchterman and reingold  <cit>  or the one by kamada and kawai  <cit>  iteratively compute a displacement for each node determined by the defined forces until convergence. the advantage of these algorithms is their flexibility, i. e. the possibility to define the forces according to a special application, which makes these algorithms suitable for many different graphs in diverse applications. another iterative approach is to define an energy function which penalizes bad properties of the layout, and then to use simulated annealing or another optimization algorithm for iteratively optimizing this function  <cit> . within the field of biology, a wide range of graph layout algorithms are considered as can be seen in the numerous visualization tools for biological networks like cytoscape  <cit> , proviz  <cit> , visant  <cit> , or vanted  <cit> .

 <dig> . <dig> visualizing aligned networks
aligned networks can be regarded as a set of graphs, where the alignment establishes connections between the graphs or, more precisely, between entities of the graphs . for visualizing an alignment of ppi networks different approaches have been considered and are used today. for a detailed survey on the state of the art in visualizing aligned biological networks we refer to our report  <cit> , where we divide the approaches into two main classes, namely "side by side" and "all in one".

the "side by side" approach, follows the idea to draw the individual aligned networks next to each other in a 2d layout and to highlight the aligned nodes by the same relative position and/or additional edges connecting them  <cit> . the advantage of this approach is that it is able to intuitively handle paralogous proteins. however, this approach is inappropriate for large network alignments and is hardly readable if there are many additional edges for representing the alignment relation.

the "all in one" approach draws the aligned networks in just one node-link diagram where one node represents the orthologous proteins of all networks  <cit> . obviously, fewer edges and nodes are needed with this visualization but problems with the interpretation of the edges and also with displaying paralogs arise  <cit> . these problems can be alleviated to some degree by using the idea of metagraphs  <cit> .

an appropriate solution that combines the advantages of both classes is given by using  <dig> d layouts  <cit> , where the individual networks are laid out in 2d and the relationship of the entities is implied by drawing all 2d layouts simultaneously using the third dimension and by placing corresponding entities on top of each other. schreiber  <cit>  used such an approach for the comparison of different biological networks in the context of metabolic pathways. however, his approach does not support the visualization of paralogous entities . moreover, he did not provide any interactive exploration methods and his approach is specialized for metabolic pathways and a kegg  <cit>  like layout.

in terms of visualization methodology, visualizing aligned biological networks is related to the representation of evolving graphs. when considering evolving  graphs one deals with one graph that changes over time, instead of an alignment of related graphs. several approaches for so-called dynamic graph drawing exist  <cit> . the layout considerations of these approaches could easily be adopted to laying out aligned networks, where the split representation, i.e., each time step is shown in a separate drawing window, corresponds to the "side-by-side" layout and the merged representation, i.e., all time steps integrated into one drawing window, corresponds to the "all-in-one" layout. some dynamic graph drawing approaches also consider a  <dig> d approach with each time step drawn in a separate layer where the layers are placed on top of each other  <cit> . given the key questions formulated in the section  <dig> , we observed that they can be more intuitively answered when using our novel  <dig> d layout algorithm, which considers the specific layout requirements described in section  <dig> . in particular, following these requirements, paralogs as well as orthologs can be identified easily.

 <dig>  layout requirements
for the visualization of aligned biological networks several approaches exist and they were surveyed and discussed in our report  <cit>  where we derived some general layout requirements. we generally assume, as all existing approaches do, that the layout should be displayed as a node link diagram. therefore, the general requirements for node link diagrams should be met also by a layout for aligned networks. such general requirements are:

• all nodes should be clearly separated,

• nodes connected by an edge should be placed close to each other to prevent long edges,

• the number of edge crossings should be minimized, and

• available space should be used in an optimal way.

as a network alignment is not just a simple graph without further constraints. we derived some specific requirements that should be met by aligned network layouts. these specific requirements, designed to address the key questions outlined in section  <dig> , are:

• the structure of individual networks should be easily identifiable,

• individual networks should be clearly separated,

• alignment relations, i.e., which nodes and links are corresponding to which nodes and links in other networks, should be shown in a visually intuitive manner, and

• the core of the alignment should be easily retrievable and comprehensible.

 <dig> implementation
 <dig>  the layout
we developed a novel interactive visual network exploration system with respect to the requirements specified above. its main features are an appropriate aligned network layout and a range of helpful interaction mechanisms to visually explore the alignment.

 <dig> . <dig>  <dig> d setting
taking into consideration the approaches discussed in section  <dig> , our layout is based on a  <dig> d setting for the aligned graphs. the different networks are laid out in separate equidistant layers placed on top of each other.

to support an intuitive understanding of orthologous proteins of different networks, orthologs are assigned the same 2d position across the different layers. therefore, the alignment relation is naturally and intuitively embedded into the layout and no additional edges, connecting the orthologous proteins, are required, as they are in "side by side". thus, we only use one type of edge, namely the interaction edges between proteins, which keeps the visualization simple.

paralogs are handled such that they are drawn closely together in a structured way at 2d positions within a well-defined area around the 2d position of the orthologous partners. hence, paralogous structures can easily be identified.

 <dig> . <dig> strategy
for visualizing aligned networks with the above-mentioned layout representations , the networks are first laid out as node link diagrams in 2d. for the three layout representations the same layout algorithm can be applied, because all of them need the individual networks laid out in 2d with general graph drawing requirements and the orthologs of the different networks should have the same position.

to ensure this global layout structure, where the orthologous sets of paralogs of the different networks are positioned to the same 2d positions within the respective layers, the aligned networks need to be handled simultaneously. the strategy of our layout algorithm is

 <dig>  to build one common graph representing the complete network alignment by merging the corresponding orthologous sets of paralogs into one node,

 <dig>  to lay out this merged graph in 2d using known graph layout algorithms,

 <dig>  to split the previously merged paralogs and compute their local arrangement within each network, and

 <dig>  to map the networks to different layers, which are rendered in a  <dig> d setting.

the first three steps are independent of the  <dig> d setting such that other settings  can be used, if desired.

 <dig> . <dig> layout algorithm
our algorithm consists of four steps, which are described in this section. in figure  <dig>  we illustrate the individual steps by giving an example. the example alignment consists of the two networks shown in figure 1ia) and 1ib), where nodes with the same color are corresponding. corresponding nodes are orthologs if they appear in different panels and they are paralogs if they appear in the same panel.

merging into one graph
the given network alignment can be understood as one large graph with proteins as nodes. in a first step we collapse each orthologous set of corresponding paralogs, into one node. hence, all proteins orthologous to each other are represented by a single node in this merged graph. all edges in the merged graph represent ppis. the merged graph for our example is shown in figure 1ii). the advantage of using a merged graph is twofold. first, the orthologous proteins are already assigned to the same position, and secondly, the remaining graph is smaller and computing its layout becomes easier because the traditional layout algorithms usually work better on small graphs.

computing the layout of the merged graph
the merged graph now is laid out in 2d by applying one of the graph layout algorithms mentioned in section  <dig> . for biological networks no additional graph-theoretical information such as planarity or density can be assumed a priori. therefore, no special layout algorithm for graphs with certain properties can be used. heuristic methods are a good choice in this case. in our visualization system we provide the use of two force-directed algorithms, namely the one by fruchterman and reingold  <cit>  and the one by kamada and kawai  <cit> . in addition, we provide the use of a simulated-annealing algorithm  <cit> , as it allows us to define an energy function adapted to our needs. the user may choose her/his preferred algorithm or she/he may simply test all three options and pick the result she/he likes best.

for our example the new layout is shown in figure 1iii).

in our simulated annealing approach we have four main terms. we sum up the lengths of the edges, the number of edge crossings, and the inverse of the angles between all pairs of incident edges to penalize these properties. we also add penalties if two nodes are too close to each other, in order to always clearly separate all nodes. if nodes consist of paralogous proteins, the lengths of their adjacent edges are divided by the number of paralogs to allow longer edges and therefore more space for these nodes.

undo the merging step
starting from the merged layout where all orthologous sets of paralogs have the same position, the final layout is computed. first the node positions computed for the merged graph are distributed onto the nodes of the individual networks, as shown in figure 1iva) and 1ivb). afterwards the positions of the paralogous proteins have to be modified, because they still have the same position. these layout computations for the sets of paralogs can be done for each network individually. for one set of paralogs the free space around the position that is assigned to the set is determined according to the number of merged paralogs. recall that the energy term used in the previous step allocates more space for merged paralogs. within this free space local 2d arrangements for the small subgraphs of paralogs need to be determined. the local arrangement we chose for our implementation is to distribute the paralogs equidistantly on a small circle within the free space, where the center of the circle is the previously assigned 2d position. after this step, the layout of the layers is completed, see figure 1va) and 1ivb). in each of the networks there was just one set of paralogs to be laid out.

assigning the  <dig> d setting
from the graph layout the  <dig> d representation of the aligned networks is obtained by assigning each network an individual layer displayed in cartesian coordinates at equidistant heights z. for each node, a three-dimensional primitive is rendered at  where  are the coordinates computed by the algorithm and z is the assigned height for the network. the edges are connecting the nodes inside each individual network and therefore lie automatically in one layer, i.e. the start- and endpoint have the same height coordinate z. no edges between different layers are necessary, as orthologous groups are rendered on top of each other and are therefore easy to identify just by position.

 <dig>  interactive visual exploration
the layout algorithm presented in the previous section generates an overall arrangement considering all proteins and all relations among them. when exploring the data, the user may be interested in seeing the entire structure, but typically also wants to concentrate on certain aspects. we provide interaction mechanisms that support such a visual exploration and analysis. since all interactions operate on our  <dig> d graph layout embedded in 3d space, all views are consistent and embedded into the overall context.

for the description of the interaction mechanisms that are supported by our system, we make use of the taxonomy introduced by yi et al.  <cit> .

explore
since we are using a  <dig> d layout, rotation, translation, and zooming are supported. different angles highlight different aspects of the data set.

reconfigure
although our  <dig> d layout serves as the basis for all exploration tasks, we still support 2d layouts. one reason is that application scientists are currently used to look at 2d layouts. providing the 2d layouts in addition to our  <dig> d layout allows them to easily correlate our visualization to what they have in mind. we hope that this reduces the barrier to use our tool. another reason is that 2d layouts may be beneficial for non-interactive visualizations which may be rendered for publications. we support both traditional 2d layouts, i.e. "side by side" and "all in one".

encode
we support different color encodings for different networks. in addition, nodes can be encoded by shape information.

abstract/elaborate
when exploring the entire aligned network, showing all paralogs may hinder the comprehension of the global structure. therefore we support an abstraction mechanism that collapses nodes representing paralogs into just one node. when investigating a certain substructure these paralogs are, of course, important to display therefore we can undo the abstraction at any time.

filter
it is obvious that filtering is one of the main interaction features. in particular, we allow displaying/hiding edges or even complete individual networks. of course, filter operations embed other interaction mechanisms like elaborating on paralogs.

in addition we found it useful to allow the user to store layouts for alignments to continue the exploration at a later time point, and to allow the user to take screen shots.

 <dig> 
RESULTS
for our application scenario we decided to use an alignment of the ppi networks of five species. we chose the ppi network of the insulin/igf <dig> pathway. this pathway is of major importance not just in diabetes research, but it is relevant to molecular ageing in general  <cit> . the interaction data for our example is taken from the string  <cit>  web server , which integrates different kinds of biological data, for example databases such as kegg  <cit> , for building a protein interaction network. we integrated interactions traceable to databases or experiments; we did not use any data based on other evidence such as text-mining because they often contain errors. we only trusted interactions with a high confidence  and we deleted a few interactions that were listed by string under the label 'experimental data' even though they were predicted by orthology .

finally, we manually investigated interactions scoring between  <dig>  and  <dig>  and added them, if string listed experimental evidence from biogrid  <cit> , bind  <cit>  or hprd  <cit> . for the detection of synonyms and orthologs and also for the detection of paralogs we used ihop  <cit> , homologene  <cit> , and ensembl  <cit> . for the insulin/igf <dig> network we found sufficient data for human, chimpanzee, mouse, rat, and fly. in the following we use our visualization system to explore the network alignment that is shown in figure  <dig>  the network of each species is shown in one layer and they are additionally color coded as follows: human , chimpanzee , mouse , rat , and fly . two aspects of network evolution and some artifacts due to missing data catch the eye immediately.

in the  <dig> d layout in figure  <dig>  we can see that the igf1/igf1r part of the network  is not found in fly  but it exists in mammals, and we infer that it evolved in the lineage from the common ancestor of fly and mammals  to mammals. this observation is in concordance with russell and kahn . more data  would enable us to set a more precise time point at which this part of the network may have evolved. the fly network  is devoid of any paralogs; complexity of the pathway in mammals increased by duplication. the paralogs that evolved in the mammalian species form two clusters, the irs cluster and the akt cluster, and the visualization makes it clear that these two clusters of duplicated nodes are accompanied by a large number of duplicated edges. tracking these down in string, we observe that the duplicated edges are derived from kegg. however, kegg does not describe the interactions of each paralog individually. instead, it only lists the interactions of one representative akt/irs protein, and data processing by string was done under the assumption that the interactions are valid for each paralog, an assumption that is not necessarily true. thus, the duplicated edges may be a data processing artifact. on the other hand, if the assumption is true, the interpretation is that in the insulin signaling pathway, interactions were usually kept after gene duplication leading to paralogs. for example, the number of edges from pi3k to the irs cluster equals the number of irs paralogs  except for chimp, where for pi3k there is no interaction with the other proteins, as discussed below. such a scenario, if it reflects biological reality and is not a database artifact, indicates that the irs paralogs are alternative stopovers in the standard signaling chain from ir to pi3k, via irs , indicating redundancy. 

looking at the red network , a large number of interactions  existing in the other networks are missing. in this situation filtering out the other networks and only looking at the network of the chimp and the human one for comparison supports the exploration. this is done easily and the filtered view is shown in figure  <dig>  in chimp, only pdk <dig>  pten and akt are connected. there are no links  connecting pdk <dig>  pten and akt to the other proteins. here, the biologist interpreting the network must know two facts for a correct analysis:  human and chimpanzee are very closely related; their genomes and physiology are very similar, and  mouse and rat together form a group that is in turn related to the human/chimpanzee group. thus, the biologist concludes that the missing edges must be due to missing data in string, and that they are not yielding insight into network evolution. in fact, chimpanzee data are just recently becoming available and it is no wonder that these are incomplete. moreover, the biologist can use the network alignment to predict missing components  in the chimpanzee network which is expected to be almost identical to the human one.

the interaction of fly foxo <dig>  and ir  is only displayed in case of fly. tracking down the link in string, an entry from the bind database  <cit>  is listed as evidence, which in turn cites puig et al.  <cit> . their abstract includes the sentence "dfoxo  activates two key players of the dinr/dpi3k/dakt pathway: the translational regulator d4ebp and the dinr itself". in short, foxo activates inr in fly, where inr  is the ortholog of ir  in mammals. it is possible that the feedback loop ir → pi3k → akt → foxo → ir  is not just active in fly, and that it also exists in the other species. here, our visualization yielded an interesting hypothesis, which is not so obvious in a series of "side by side" renderings.

using filtering operations to mask out chimp, rat, and fly allows an easy comparison of human and mouse as shown in figure  <dig>  in this figure the eye can easily identify the identities and the differences. first of all, there is no difference with respect to the nodes. however, some links in human are missing in mouse. for example, these are links from sirt <dig> to foxo <dig>  from ir to igf1r, and from igf to irs. all these links can be traced back to human-specific data incorporated into string; the links are reported in a publication supporting a bind entry  <cit>  or they are derived from hprd  <cit>  and pid  <cit> .

finally, with the help of our visualization we are able to identify the core of the network alignment, which consists of the nodes and edges that are present for the largest number of species. setting the minimum species threshold to  <dig>  the core does not include the link between foxo and insr  that we discussed above, nor the interactions foxo <dig> → pdk <dig>  irs → pten and pten → ir , nor the interactions that are present only in human.

if there are many paralogs it is very useful to use abstraction, by collapsing the paralogs, reducing the number of displayed nodes and edges. the information for finding the core network will nevertheless not be missing in this abstract view, see figure  <dig>  in particular, the edges from pi3k to irs can be seen much easier in figure  <dig> than in figure  <dig> 

researchers interested in one of the traditional layout settings such as a "side by side" layout, can obtain one by a mouse click, see figure  <dig>  in this setting one can easily see that there are many edges missing in the network of the chimpanzee . however, it is hard to recognize which edges do exist in most of the networks and therefore might belong to the core of the alignment. moreover, it is hard to recognize the novel interactions discussed above.

the example shown up to now is rather small, five networks with around ten proteins each, altogether around  <dig> proteins. but vanlo is able to handle larger network alignments with hundreds of proteins too. an example dataset with three networks and a total of nearly  <dig> proteins can be navigated interactively and a layout with our simulated annealing algorithm was computed within less than  <dig> seconds, see figure  <dig>  another visualization challenge is a sparse alignment, with a small overlap between the different species, see figure  <dig>  the collapsed graph of an alignment  does not depend on the number of networks in which there are orthologous proteins and therefore the layout computation for sparse graphs is as efficient as the one for dense graphs.

in conclusion, our tool can be used for the detailed inspection of the similarities and differences of alignable interaction networks, as we did for two  and five networks . in turn, a bird's eye view of the latter alignment provided by our tool yielded some quick insights into regions where paralogs are abundant, and regions where some subnetworks are not represented. interaction mechanisms supported the analysis tasks by filtering the required information and facilitating an interactive display of the parts to be investigated.

 <dig> 
CONCLUSIONS
the visualization system for aligned biological networks  we presented, enables the user to answer some key questions concerning network alignments. it also provides several interaction techniques allowing the user to visually explore aligned networks. additionally, a new layout approach using  <dig> d is presented. this approach fulfills all requirements for a layout of alignments. the layout turns out to be helpful to understand the structure of a network alignment. also, traditional representations are supported. thus the visualization system is a very useful tool for biologists to explore alignments, to find out details and to render results.

with respect to limitations of the software and future work, it would be useful to automatically include properties of the proteins and to automatically map them to shape or color attributes. this would help the user to easily predict properties of proteins, where they are not known. regarding the edges, it would be useful to allow different edge/arrow shapes, for example, to denote regulation of a protein  by another protein . moreover, for very large networks in particular , we are developing ways to transform/simplify these before rendering them, based for example on the ideas of royer et al.  <cit> . finally, a visualization of the entire evolutionary history of an aligned set of networks, starting from a small ancestral network, is on our agenda.

 <dig> availability and requirements
the software project presented in this manuscript is called vanlo  and is available on . the presented software is implemented in c++, where the included graphs are implemented using the boost graph library and for the graphical user interface qt was used. the simulated annealing layout algorithm is an own implementation and the other layout algorithms are, sometimes modified, the ones provided by the boost graph library. this first publication of the software is only for the use with windows xp but it will later on be published in a platform independent version. a manual for the software, including a file format description for the alignment data, and an explanation of the usage is given in additional file  <dig>  the work is currently published under the lesser gnu public license , which allows every user to freely use the software.

 <dig> authors' contributions
sb did the implementation work and together with ll accomplished the theoretical work on the visualization ideas. gf developed the visualization scenario together with the interpretation and initiated this project. all three authors contributed to the manuscript. all authors read and approved the final manuscript.

 <dig> authors' information
sb studied mathematics and recieved his diploma in  <dig> at the ernst-moritz-arndt-universität greifswald, germany. thereafter he worked as a scientific member in the field of visualization and computer graphics at the universität greifswald, germany, where he is actually doing his ph.d. on visualization of protein interaction data. his research interests are in the fields of visualization and graph theory.

ll is an associate professor of computational science and computer science at the school of engineering and science of the jacobs university, bremen, germany. he received his academic degrees from the universität karlsruhe , germany, including a diploma in computer science in  <dig> and a ph.d. in computer science in  <dig>  he spent three years as a post-doctoral researcher and lecturer at the institute for data analysis and visualization  and the department of computer science of the university of california, davis, u.s.a. he joined the department of mathematics and computer science of the ernst-moritz-arndt-universität greifswald, germany, as an assistant professor in  <dig>  since  <dig> he holds his current position at jacobs university. ll's research interests are mainly in the areas of scientific and information visualization but include certain topics in computer graphics and geometric modeling.

supplementary material
additional file 1
background on protein protein interaction network evolution. in the second supplement, the file protein_background.pdf, the evolution of protein interaction networks of different species from one common ancestor species is explained. due to their evolution from a common ancestor, ppi networks can be aligned. how an alignment is defined, is also explained in this supplement. furthermore the reader finds a detailed explanation on orthologous and paralogous proteins.

click here for file

 additional file 2
manual. the file manual.pdf includes a manual for the use of the vanlo software and a file format specification for the input files used.

click here for file

 acknowledgements
we thank clemens harder for his assistance in data acquisition.
