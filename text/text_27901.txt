BACKGROUND
proteins that evolve from a common ancestor can change functionality over time. for example, different related enzymes can bind to different substrates. identifying the residues that cause these changes in specificity is important as this could allow one to alter the substrate specificity  <cit>  or to predict the effect of mutations on the protein. the most common method for identifying sdp  starts with the construction of a multiple sequence alignment of the homologous proteins. often the branching order of a phylogenetic tree exactly matches the known functional split between the proteins. several methods have been used to identify the sdp's using only the tree and alignment  <cit> , or combined with prediction of ancestral sequences  <cit>  or with analysis of structures  <cit> . the evolutionary trace  method, for example, identifies sdps responsible for subgroup specificity by partitioning the tree or dendrogram into an increasing number of subgroups of similar sequences with subsequent analysis of their three-dimensional  structures  <cit> 

in cases when the functional split does not correspond to a clear phylogenetic split in the tree, other methods for identifying the sdps have to be used. this situation can arise in highly divergent families, as proteins have multiple features that co-evolve along with specificity, such as the sub-cellar location or interaction with other proteins which may give a larger phylogenetic signal than the functional difference  <cit> . these methods normally require a multiple alignment, and a classification for the sequences.

livingstone and barton implemented a method called amaps that highlighted positions in an alignment that had different amino acid properties conserved between different sub-groups  <cit> . a similar idea is implemented in the conserved property difference locator method  <cit>  which is available as a web server  <cit> . mutual information has also been used as a measure to identify residues that confer specificity  <cit> . it is used to measure of how often a particular position in a sequence is conserved in one sub-family, and varies in another. improvements were made to this algorithm which included taking into account the non-uniformity of amino acid substitutions via amino acid substitution matrices and a method for automatically setting cut-off thresholds  <cit> . the method of hannenhalli and russell  <cit>  identifies the functional residues by comparing hidden markov model profiles generated for each subgroup and calculating the relative entropy for each position. positions with high relative entropy have very different amino acid distributions between the subgroups, and as such are considered possible sdps. pirovano et al.  <cit>  showed that relative entropy exhibited undesirable asymptotic behaviour, and then reformulated it as "sequence harmony". sequence logos  <cit>  have also been used to visualise differences between two subfamilies  <cit> .

a variety of multivariate statistical approaches have been applied to sequence analysis over the years. principal coordinates analysis  <cit>  was used to plot protein sequences in a low dimensional space that preserved the distances between them  <cit> . later, principal component analysis  was used on multiple sequence alignments to identify possible functional residues  <cit> . the columns in the alignment were converted into a vector of binary variables of length  <dig>  which represented the absence/presence of an amino acid at this position. pca analysis of this matrix was then used to project the sequences onto  <dig> or  <dig> dimensions, which allowed identification of possible sequence clusters. the residue variables were also projected onto the same space, so that group specific residues could be identified. this method was implemented as a package called sequencespace. more recently this method has been automated so that the user does not have to manually identify the sequence groups  <cit>  and made available as a web server  <cit> . correspondence analysis  has also been used to identify sdps  <cit> . ca is used to decompose a chi-squared table between residues and sequences and has the attraction of automatically plotting both in the same space. the correspondences between residues and sequences  can then be seen from their proximity on the scatter plots.

ca and pca are usually considered to be "unsupervised" techniques, to use the terminology of the field of machine learning and classification. this means that groups of objects that are of a-priori interest are not specified in advance. the axes are derived as those that account for maximum variance among the objects when these are plotted on them. often, this is sufficient to obtain the information that one is interested in. the groups of interest may separate out in a useful manner along the first  <dig> or  <dig> axes or they may not; it will depend on the data set. particular splits in the data may not show up in a useful manner on the plots. the most interesting splits can be masked by stronger trends of a less interesting nature such as amino acid composition. the analysis can be "supervised" by specifying groups and forcing the analysis to focus on these. in the case of pazos et al  <cit> , the relationships between the groups of sequences and residues are determined by an analysis of ca plots. groups of sequences are represented as mean vectors and the residues that are closest to each vector are the ones that are most related to that group of sequences.

in this paper, we demonstrate the use of between group analysis  for identifying sdps from a sequence alignment. bga is a supervised multivariate analysis method for sample discrimination and class prediction  <cit>  and has been recently used to identify genes of interest from microarray data sets  <cit> . bga is supervised by labelling each object  in advance as belonging to one of a small number of groups and forcing the axes to be those that split these groups as much as possible. technically, the analysis is accomplished by finding those axes that maximise the between group variances. informally, this is accomplished by treating the group centroids as the objects to be analysed and by carrying out a ca or pca on these centroids. this produces results that are similar in appearance to those derived from multiple discriminant analysis but with the bonus of being robust when the number of variables exceeds the number of objects. bga carried out using pca is very similar to partial least squares discriminant analysis . in practice, bga is carried out in two stages. these are automatically done using the made <dig> package  <cit> . firstly, an ordination is computed using either pca or ca on a data set in which the different groups are defined. bga then finds linear combinations of the axes that maximise between-group variances and minimise within-group variances. this combination is very flexible as it can be used to examine any number of pre-specified groups. it has a further advantage in that it can be combined with a variety of data types from binary to continuous because of the way in which it can use pca or ca.

RESULTS
lactate/malate dehydrogenases
the results for the lactate/malate dehydrogenase case using the two different amino acid encoding schemes are shown in figure  <dig>  each set of results is displayed using three vertical lines, each of which is a view of the single axis of the analysis. the sequences are plotted on the line on the left, the group centroids are in the middle and the variables/residues are plotted on the right. each sequence is joined, by a line, to its group centroid. the ten most extreme variables at each end of the axis are displayed in the same order as they appear on the axis. in both sets of results, the variables at the top of the axis are most associated with the mdh group of sequences while the residues at the bottom are most associated with the ldh group.

in both sets of results there is a very clear separation of the two groups of sequences. this is a useful indicator to tell if the method was able to successfully separate the two groups. the inter-group separation is much more than the intra-group separation. there are no obvious outliers in either analysis.

both sets of results correctly identify the gln-arg mutation as being important. this is position  <dig> in the alignment, which contains  <dig> glutamine's and  <dig> methionine in the lactate set of sequences but only arginine in the malate set. it is the second most highly ranked position for the ldh group in the analysis with the binary representation, as well as the second position for the mdh group in the method using the aap encoding. figure  <dig> shows the positions, highlighted in the alignment, that were identified by the analysis using the aap encoding.

the positions at the end of the axis are either strongly conserved in one group but not the other, or are strongly conserved in both groups but different from each other. if each group has a different strongly conserved residue the position will show up at both ends of the axis. this is true for the top position in the aap encoding scheme,  <dig>  which is a fully conserved d in the ldh group and n in mdh. the top position in the binary encoding scheme is position  <dig>  a fully conserved m in ldh and q in mdh. positions that are strongly conserved in one group and not the other will show up with a residue and position on the end of the axis corresponding to the group of sequences that they are conserved in, but there won't be a corresponding variable at the other end. one example of this is alignment position  <dig> which is an arginine  in the lactate sequences but can be either a or p in the malate case.

for this dataset, we compared our results with the sdppred web server  <cit> . sdppred predicted  <dig> residue positions as being important and these are shown in table  <dig>   <dig> of these positions were also found in the top  <dig> residues at in the bga analysis. the two positions that were predicted by sdppred and not by bga were position  <dig> and  <dig>  three positions were predicted by the bga and not by sdppred. they were e at position  <dig>  d at  <dig> and e at position  <dig> 

nucleotidyl cyclases
the results for the nucleotidyl cyclases are shown in figure  <dig>  using the two different representation schemes. in both plots there is clear separation of guanylate cyclases  and adenylate cyclases .). the two positions , glu-lys  and cys-asp  that are sufficient to change the specificity are both identified by the method.

the analysis using the binary representation identifies all of the residues identified by hannenhalli and russell  <cit> . it also identified a position,  <dig> in the alignment, which only ever contains r in the guc sequences, is mostly q in the adc but can be an r. this means that if there is a glutamine in that position it is likely to be an adenylate cyclase. figure 7shows the positions, highlighted in the alignment, that were identified by the analysis using the binary encoding. the results were also compared with the sdppred web server. the results are shown in table  <dig>  sdppred predicted  <dig> positions as being important, all of which the bga method identified.

serine proteases
the most striking aspect of the results is that many residues are strongly associated with the elastase group. there are  <dig> residues plotted in the same position, furthest along axis  <dig>  they are 130v, 137i, 145y, 168q, 219g, 229h, 255v, and they are all fully conserved for the elastases and not for the other two groups. the residue most associated with trypsin is d in position  <dig>  which was also identified by hannenhalli and russell  <cit>  as is the next residue, a in position  <dig>  these two residues are defined as part of the binding pocket  <cit> . the other residue in the pocket, g, in position  <dig> in the alignment is located at the negative end of axis  <dig>  on the opposite end of the elastase group. this is because it is column  <dig>  in this alignment, for the elastase is blank, whereas the other two groups have a g in this position. this residue highlights the critical importance of the alignment for this type of analysis, as this position didn't show up as significant in the hannenhalli and russell  <cit>  analysis. in the alignment used by hannenhalli and russell  <cit>  this position isn't blank for the elastases. it in fact contains 50% of g, and as a result didn't show up as significant. position  <dig> is also strongly associated with the chymotrypsin group, with a c at that position. the elastases have a fully conserved n in this position too, however this doesn't show up strongly in this analysis, as there is also an n present in one of the chymotrypsins.

similar results can be seen when pca is used as the ordination technique with the aap encoding, as shown in figure  <dig>  positions  <dig> and  <dig> strongly split the chymotrypsins and the trypsins. interestingly, factor a at position  <dig> is strongly associated with the chymotrypsin group.

discussions and 
CONCLUSIONS
the inter relationship between amino acid residues and the functional properties of a protein is of great importance in understanding how that protein acts. investigating how amino acids vary or are conserved at particular positions, depending on the function of the protein provides valuable insight into this relationship. one approach is to take a collection of sequences from homologous proteins and to represent them as a multiple alignment. this is followed by clustering the sequences into functional or phylogenetic groups and a search for residue/property correlations  <cit> . unfortunately, it is then challenging to disentangle patterns of residue occurrence that are due to functional differences between the groups and patterns that are merely due to the process of amino acid substitution over time down different phylogenetic lineages. the fact that phylogenetic and functional groupings often disagree makes the situation even more difficult.

multivariate analysis provides a logical alternative to traditional hierarchical clustering and has been used a number of times to analyse residue/property relationships  <cit> . this has proven to be useful for informal data exploration and visualisation. most recently, pazos et al  <cit>  showed how to use correspondence analysis for this purpose, as an alternative to the more traditional pca. they also showed how to analyse specific trends, of a priori interest, in the data. in this paper, we took this a stage further and showed how to use bga as a general-purpose technique for protein alignment data exploration. we can combine it with ca in which case it becomes a way of carrying out a supervised ca, for any number of groups. with two groups, you get a single discriminating axis, which can be used like a discriminant function for classifying new sequences. this also ranks the variables  in terms of their discriminating power.

bga can also be combined with pca in which case there is a choice of how to encode the alignment information and measure amino acid occurrence in columns. strict binary coding with ca enforces a strict view of presence or absence and is useful for emphasising clear trends in the data. it is, however, vulnerable to being misled by outlier amino acid occurrences. for example, if one sequence has one unusual amino acid in one position, the analysis will interpret this as potentially useful discriminating information. this is greatly improved by the use of pseudocounts. pca has the advantage of allowing quantitative amino acid information to be used, such as amino acid physico-chemical properties  <cit> . in both case, sequence weighting is easy to apply to bga using the made <dig> and ade <dig> packages. this overall combination is powerful and flexible while being computationally very fast and simple. finally, bga is especially useful because it can be used to analyse any number of functional classes. in the examples we used in this paper, we have only used  <dig> or  <dig> classes for demonstration purposes but any number can be used and visualised.

in summary the method presented here is complementary to the other methods for identifying sdp's. it produces similar results, but provides an alternative method for viewing the results. this makes the method very suitable for data exploration.

