BACKGROUND
regulation of gene transcription is complex and often combinatorial in nature  <cit> . combinatorial gene regulation is a major factor in evolution, because it helps coordinate diverse novel phenotypic features in a new species. because it often reflects chemical synergies between transcription factors , combinatorial gene regulation can be broadly classified as either:  homotypic, where a single tf binds to multiple sites in the regulatory region of a gene; or  heterotypic, where multiple tfs target a single gene. accurate knowledge of potential synergies between regulatory elements is therefore essential to understanding evolution and phenotypic diversity.

many computational tools are available for prediction of regulatory elements. most tools are based on one of two methods:  an enumeration of over-represented words  <cit> ; or  probabilistic sequence models  <cit> . our previous work  <cit>  produced the a-glam computer program, which combines word enumeration with probabilistic sequence models to identify cis-regulatory sequences in human promoters, as follows. given any gapless subsequence alignment, probabilistic sequence models yield a marginal bayesian log-odds score. the gibbs sampler in a-glam uses simulated annealing to maximize the log-odds score over all possible gapless alignments. a-glam also can start from a set of "seeds", e.g., statistically significant positions from word enumeration, to maximize the log-odds score over all possible gapless alignments containing the seeds.

gibbs sampling  is a respected markov-chain monte carlo procedure for discovering sequence motifs. as a theoretical framework, however, it encounters several practical problems when searching for regulatory elements in dna. first, it tends to find dna repeat elements, regardless of their biological interest. second, it often requires prohibitive computational time to find multiple instances of a regulatory element in a single sequence.

because a-glam was based on gibbs sampling, we were eager to overcome the practical problems above. our previous work  <cit>  used seeds to overcome the first problem, repeats. the user can constrain the alignment output to include the seeds, a so-called "anchored alignment". our implementation of gibbs sampling therefore avoids repeats, because the user can specify in advance which motif is of biological interest.

to overcome the second problem, multiple instances of a motif, a-glam now has an option for post-processing the results of gibbs sampling. gibbs sampling produces a position specific scoring matrix . the new scanning step resembles a psi-blast search based on the pssm. the methods section describes it under the sub-heading "the new scanning step".

implementation
a-glam was written in c++ and compiled by gcc  under the linux operating environment. the binary files, documentation and the datasets are available for download from the project ftp site .

the gibbs sampling step in the previous implementation of a-glam
briefly, a-glam takes a set of sequences as input. the gibbs sampler step in a-glam uses simulated annealing to maximize an "overall score", a figure of merit corresponding to a bayesian marginal log-odds score. the overall score is given by

s=∑i=1w!!+∑{log⁡2−cijlog⁡2pj})     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgzbwccqgh9aqpdaaewbqaamaabmgabagagiibawmaei4ba8maei4zac2aasbaasqaaiabikdayaqabagcdawcaaqaamaabmgabagaemyyaemaeyoei0iaegymaedacagloagaayzkaagaeiyiaecabawaaewaceaacqwgjbwycqghrawkcqwghbqycqghsislcqaixaqmaiaawicacaglpaaacqgghaqiaagaey4kasyaaabuaeaadagadeqaaigbcygasjabc+gavjabcegannaabaaaleaacqaiyagmaeqaaowaamwaceaadawcaaqaamaabmgabagaem4yam2aasbaasqaaiabdmgapjabdqgaqbqabagccqghrawkcqwghbqydawgaawcbagaemoaaogabeaakiabgkhitiabigdaxagaayjkaiaawmcaaiabcgcahaqaamaabmgabagaemyyae2aasbaasqaaiabdqgaqbqabagccqghsislcqaixaqmaiaawicacaglpaaacqgghaqiaaaacaglbbgaayzxaagaeyoei0iaem4yam2aasbaasqaaiabdmgapjabdqgaqbqabagccyggsbabcqggvbwbcqggnbwzdawgaawcbagaegomaidabeaakiabdchawnaabaaaleaacqwgqbgaaeqaaagccagl7bgaayzfaaaaleaadaqadiqaaiabdqgaqbgaayjkaiaawmcaaaqab0gaeyyeiuoaaogaayjkaiaawmcaaawcbagaemyaakmaeyypa0jaegymaedabagaem4dachaniabgghildgccawljagaaczcamaabmgabagaegymaedacagloagaayzkaaaaaa@7e1e@

in equation , m! = m... <dig> denotes a factorial; aj, the pseudo-counts for nucleic acid j in each position; a = a <dig> + a <dig> + a <dig> + a <dig>  the total pseudo-counts in each position; cij, the count of nucleic acid j in position i; and c = ci <dig> + ci <dig> + ci <dig> + ci <dig>  the total number of aligned windows, which is independent of the position i. the rationale behind the overall score s in a-glam is explained in detail elsewhere  <cit> .

to initialize its annealing maximization, a-glam places a single window of size  <dig>  within every sequence randomly , implicitly placing the windowed subsequences into a gapless multiple alignment. it then iterates the following procedure. in the procedure's first step, a-glam proposes a set of possible changes to the alignment. the proposal step is either a repositioning or resizing step. in a repositioning step, one sequence is selected uniformly at random; the set of proposed changes includes all possible positions for its window. in a resizing step, either the right or the left end of the alignment windows is selected; and the set of proposed changes includes expanding or contracting the corresponding end of all alignment windows by one position at a time, expansion being permitted only up to the ends of the sequences.  each one of the proposed changes leads to different value of the overall score s. in the procedure's second step, a-glam then accepts one of the proposals randomly, with probability proportional to exp, where t is a parameter representing an annealing temperature. the temperature t is gradually lowered to t =  <dig>  with the intent of finding the gapless multiple alignment of the windows maximizing s. the maximization implicitly determines the final window size. the randomness in the algorithm helps it avoid local maxima and find the global maximum of s. we ran the annealing algorithm within a-glam ten times independently. the steps  corresponding to e-values and post-processing were then carried out with the pssm corresponding to the best of the ten scores s.

the individual score and its e-value in the previous implementation of a-glam
the gibbs sampling step produces an alignment whose overall score s is given by equation . consider a window of length w that is about to be added to a-glam's alignment. let δi equal  <dig> if the window has nucleic acid j in position i, and  <dig> otherwise. the addition of the new window changes the overall score by

Δs=∑i=1w∑δi{log⁡2}     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqqhuoarcqwgzbwccqgh9aqpdaaewbqaamaaqafabaaccigae8htdq2aasbaasqaaiabdmgapbqabaaabawaaewaceaacqwgqbgaaiaawicacaglpaaaaeqaniabgghildaaleaacqwgpbqacqgh9aqpcqaixaqmaeaacqwg3bwda0gaeyyeiuoakmaabmgabagaemoaaogacagloagaayzkaawaaiwabeaacyggsbabcqggvbwbcqggnbwzdawgaawcbagaegomaidabeaakmaadmgabawaaewaceaadawcaaqaaiabdogajnaabaaaleaacqwgpbqacqwgqbgaaeqaaogaey4kasiaemyyae2aasbaasqaaiabdqgaqbqabaaakeaacqwgjbwycqghrawkcqwghbqyaaaacagloagaayzkaagaei4la8iaemicaa3aasbaasqaaiabdqgaqbqabaaakiaawufacagldbaaaiaawuhacagl9baacawljagaaczcamaabmgabagaegomaidacagloagaayzkaaaaaa@60d9@

the score change corresponds to scoring the new window according to a pssm that assigns the "individual score"

si=log⁡2     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgzbwcdawgaawcbagaemyaakgabeaakmaabmgabagaemoaaogacagloagaayzkaagaeyypa0jagiibawmaei4ba8maei4zac2aasbaasqaaiabikdayaqabagcdawadiqaamaabmgabawaasaaaeaacqwgjbwydawgaawcbagaemyaakmaemoaaogabeaakiabgucariabdggahnaabaaaleaacqwgqbgaaeqaaagcbagaem4yammaey4kasiaemyyaegaaagaayjkaiaawmcaaiabc+caviabdchawnaabaaaleaacqwgqbgaaeqaaagccaglbbgaayzxaagaaczcaiaaxmaadaqadiqaaiabiodazagaayjkaiaawmcaaaaa@4f8d@

to nucleic acid j in position i. equation  represents a log-odds score for nucleic acid j in position i under an alternative hypothesis with probability / and a null hypothesis with probability pij. psi-blast uses equation  to calculate its e-values: the derivation through equation  confirms the pssm in equation  as the natural choice for evaluating individual sequences.

to assign an e-value to a subsequence with a particular individual score, consider the alignment sequence containing the subsequence. let n be the sequence length, and recall that w is the window size. if Δsi denotes the quantity in equation  if the final letter in the window falls at position i of the alignment sequence, then Δs* = max{Δsi : i = w,...,n} is the maximum individual score over all sequence positions i. we assigned an e-value to the actual value Δs* = Δs*, as follows. staden's method  <cit>  yields Ρ{Δsi ≥ Δs*}  under the null hypothesis of bases chosen independently and randomly from the frequency distribution {pj}. our e-value e =  Ρ {Δsi ≥ Δs*} is therefore the expected number of sequence positions with an individual score exceeding Δs*. the factor n - w +  <dig> in e is essentially a multiple test correction.

the new scanning step
our scanning method shares some similarities with the algorithm previously developed by neuwald et al  <cit> . given a pssm like equation , the scanning step scans all sequences, assigning an e-value e to every subsequence of length w. every subsequence with a small e-value e ≤ e <dig>  where e <dig> is some pre-assigned small threshold, contributes to the counts cij in a new pssm. the new pssm replaces the old pssm, and the step is repeated. the step is repeated until either:  no new motifs contribute to the pssm ; or  some user-specified number of iterations is attained. figure  <dig> describes the method graphically. finally, the algorithm reports the predicted motifs within each sequence, in order of increasing e-values. analogous to psi-blast, the iterative procedure usually converges, or else background motifs come to dominate the pssm . corruption indicates that a lower threshold e <dig> is required.

thus, although the gibbs sampling step in a-glam finds at most one regulatory element per sequence, the scanning step can rapidly locate several instances of the element in each sequence.

RESULTS
prediction performance of a-glam
a-glam's predictions of transcription factor binding sites were evaluated with reference sets containing known functional sites. sequence logos  <cit>  of the motifs predicted by a-glam were generated using weblogo  <cit> . the height of a stack of letters in the logo represents the total amount of information at that position, in bits. within each stack, the height of each letter is proportional to the nucleotide frequency at that position.

uas elements in histone promoters
others have identified the spt <dig> gene as a global regulator of core histone promoter activity in yeast. a recent study  <cit>  concluded that the spt10p transcription factor is involved in sequence-specific activation of histone genes. the protein promotes histone gene expression by binding in highly cooperative manner to paired instances of a dna regulatory motif, uas . accordingly, we tested a-glam with four histone promoter sequences known to contain multiple instances of the binding site for the spt10p transcription factor. all binding sites had been experimentally verified with gel-shift assays.

of the nineteen motifs in the dataset, a-glam correctly identified fifteen sites without any false positives . a-glam's consensus motif of gttcn2antttttcnc corresponds closely to previous results  <cit> . previous knowledge about the consensus permits some further evaluation of a-glam's predictions. in the hht2-hhf <dig> and hta2-htb <dig> promoters, spt10p is known to bind to six sites. in the hht2-hhf <dig> sequence, the two sites a-glam missed lacked the complete ttc motif, however, suggesting that spt10p might only bind weakly there. similarly, in the hta2-htb <dig> promoter, alignment sites contain the consensus tt/gc and ttct/gc sites. however, the two sites a-glam missed lack important consensus nucleotides, again suggesting weak binding. these results suggested a-glam's potential to rank motifs based on binding strengths. accordingly, we sought datasets where binding affinities had been measured experimentally.

operator sites in lambda phage
many previous studies have examined the kinetics of operator binding in the promoter region of phage lambda  <cit> . gene regulation in phage lambda is complex, and its description can be found elsewhere  <cit> .

we extracted two sequences corresponding to adjacent promoter regions of the lambda chromosome from the refseq database  <cit> . the first promoter sequence contains the three right operator sites ; the second, the three left operator sites . in each case, the binding sites correspond to the palindromic consensus tatcaccgccggtgata  <cit> . previous studies have deduced that the lambda repressor and cro compete for the operator sites, with the outcome often deciding the fate of the infected bacteria. molecules of the repressor bound to adjacent operator sites interact and display positive cooperativity  <cit> .

a-glam identified five out of the six experimentally verified operator sites, missing only or <dig>  when the five operator sites a-glam identified were placed in increasing order by their experimentally determined constants for dissociation with cro repressor, the e-values were also in increasing order, with the exception of or <dig> .

gal4p regulatory elements
gal4p, encoded by the gal <dig> gene, is one of the best known regulatory transcription factors in yeast. gal4p and a complex of other proteins activate yeast galactose catabolic genes   <cit> . they regulate gal genes having multiple binding sites  in a highly cooperative manner  <cit> . gal4p itself binds to correctly spaced pairs of low affinity binding sites in the upstream activating sequence for gal   <cit> . cooperativity in dna binding causes a synergistic enhancement of gal4p activation of transcription. gal4p also binds to pairs of high-affinity binding sites, but binding studies involving isolated sites have shown that the corresponding uasg is only twice that of a single high affinity binding site.

we extracted sequences from the saccharomyces cerevisiae promoter database for the upstream promoter regions of the six genes gal <dig>  gal <dig>  gal <dig>  gal <dig>  gal <dig> and gcy <dig>  <cit> . the sequences contained fourteen experimentally verified gal4p binding sites. among the  <dig> binding sites, a-glam correctly identified  <dig> sites excluding one false positive. a-glam was run using the zoops  mode, setting maximum motif width to  <dig>  the consensus motif identified by a-glam closely matched the known consensus cggccg of the gal4p binding site  <cit>  .

kruppel binding targets in drosophila melanogaster
kruppel  encodes a zinc finger transcription factor expressed in spatially and temporally restricted patterns during drosophila embryogenesis. we extracted genomic sequences surrounding  <dig> kruppel-binding sites from  <dig> different genes; hunchback, tailless, eve, knirps, ubx, en, spalt and abd-b.

a-glam correctly identified  <dig> binding sites without any false positives. the consensus produced by a-glam agreed well with the known consensus .

comparison of a-glam, glam and alignace
we compared a-glam's accuracy in identifying the binding sites with glam  <cit>  and alignace  <cit> , another de novo gibbs sampler based algorithm. the gibbs sampling procedure in alignace permits multiple occurrences of a motif in a sequence, unlike the zoops model in glam and a-glam. for comparison purposes, we obtained test datasets that were used to assess various motif discovery tools in a recent contest  <cit> . the datasets were comprised of sequences from four different species:  fly;  human;  mouse;  yeast. each data set contained known binding sites in the original promoter sequence . approximately 85% of the datasets contained multiple occurrences of a binding site in at least one sequence. hence, these datasets provided a convenient benchmark for assessment purposes. detailed description of the datasets appear elsewhere  <cit> . for each tool, the accuracy of the top motif predicted on each data set was compared using the correlation coefficient

cc=/.     
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgdbwqcqwgdbwqcqgh9aqpdaqadiqaaiabdsfaujabdcfaqjabgena0kabdsfaujabd6eaojabgkhitiabdaeagjabdcfaqjabgena0kabdaeagjabd6eaobgaayjkaiaawmcaaiabc+cavmaakaaabawaaewaceaacqwgubavcqwgqbaucqghrawkcqwggbgrcqwgqbauaiaawicacaglpaaadaqadiqaaiabdsfaujabd6eaojabgucariabdaeagjabd6eaobgaayjkaiaawmcaamaabmgabagaemivaqlaemiuaalaey4kasiaemoraykaemota4eacagloagaayzkaawaaewaceaacqwgubavcqwgobgtcqghrawkcqwggbgrcqwgqbauaiaawicacaglpaaaasqabagccqgguaglcawljagaaczcamaabmgabagaeginaqdacagloagaayzkaaaaaa@6156@

in equation  <dig>  tp  is the number of nucleotide positions common to known and predicted sites, fn  is the number of nucleotide positions in known sites but outside predicted sites, fp  is the number of nucleotide positions in predicted sites but outside known sites and tn  is the number of nucleotide positions outside both known and predicted sites.

the comparison yielded some valuable insights into a-glam's performance. in general, the scanning step improved a-glam's ability to identify known sites on mouse and yeast datasets . a-glam and glam performed poorly on fly data sets, however, worse than alignace. the fly datasets where alignace performed better contained only single sequences, however. a-glam and glam probably failed on such datasets because of their zoops mode, in which the gibbs sampler permits at most one motif occurrence per sequence. on human datasets, surprisingly, glam outperformed both a-glam and alignace. moreover, the three programs often produced alignments corresponding to completely different motifs. in all such cases, a-glam and alignace identified motifs corresponding to a repeat sequence. a partial explanation follows. in the zoops mode, gibbs sampling searches for at most one motif instance in any single sequence, so the multiplicity of a repeat does not affect the gibbs sampling step much. the best alignment after gibbs sampling therefore might correspond to a known biological signal. unfortunately, the large number of repeat elements in the human genome then can decoy a-glam in the scanning step. the multiplicity of a repeat does affect the scanning step, so after iterating sufficiently, the scanning step incorporates the repeat into the pssm to overwhelm the original biological signal. the multiplicity of a repeat also affects the gibbs sampling step in alignace, so alignace converges on repeats for similar reasons.

discussion
this paper introduces some important options into the a-glam computer program. previously, after its gibbs sampling step a-glam returned a gapless multiple alignment. a-glam assigned pssm scores and e-values to the aligned subsequences. to avoid excessive run times, the sampling step predicted at most one regulatory element per input sequence. now, a-glam uses an iterative strategy like psi-blast, so the pssm from the sampling step finds multiple instances of the regulatory motif in individual sequences. instances with an e-value below a user-defined threshold e <dig> are then permitted to contribute to the pssm, which is then updated. the pssm-updating step is then iterated. finally, the predicted instances of the regulatory motif are reported, by sequence in the order of increasing e-value.

validation with regulatory elements from well characterized systems confirmed that the scanning step can identify regulatory elements rapidly and dependably, even in the presence of homotypic regulatory clusters . in comparison to gibbs sampling for homotypic regulatory clusters, the scanning step is faster, with little loss  in predictive accuracy, particularly in yeast datasets. moreover, the e-values for predicted elements sometimes corresponded well with their experimental binding affinities . further investigation of the correspondence would therefore be desirable.

the scanning step uses a threshold e <dig> for inclusion into a-glam's pssm. the threshold e <dig> is critical, because it is subject to the same conflicting constraints as in psi-blast. on one hand, stringent thresholds  can eliminate interesting instances of a motif; on the other hand, loose thresholds  can cause the pssm to include too many false positives, possibly diluting the true positives to oblivion, causing "corruption". in particular, corruption can occur for subtle motifs that do not deviate much from the background nucleotide distribution. most of our analysis used a default threshold e <dig> =  <dig> , which is practical under most circumstances.

our studies of a-glam's performance on particular datasets indicated some general conclusions about gibbs sampling and the identification of binding sites. in a fly dataset consisting of a single sequence, glam's gibbs sampling step performed poorly because the step identifies only a single binding site per sequence. the scanning step added in this article therefore identifies multiple instances of a binding site per sequence only when the dataset contains multiple sequences. the scanning step noticeably degraded predictions on human datasets, primarily because of repeats . the degradation is likely to be a pitfall for any program able to detect homotypic regulatory clusters , because through sheer multiplicity, repeat elements can overwhelm a signal from homotypic binding elements. notably, the scanning step improved a-glam's performance on yeast datasets, a behaviour likely to generalize to any genome containing homotypic regulatory clusters and lacking repeats. we do not specifically address the issue of interaction among binding elements for different transcription factors, a phenomenon largely confined to complex organisms. hence, our methods are most effective in lower organisms such as yeast, fly and microbes.

several remedies to the problem of repeats are available. first, a user can focus the a-glam program on a motif of interest by providing either:  a "seed word" contained in the motif of interest or  a list of "seed windows", at most one per input sequence and all of equal size. in its seed-oriented mode, a-glam then constrains its gapless multiple alignment to contain the user-provided seeds. second, the repeats can be masked with standard programs, such as repeatmasker  <cit> . third, many recent studies have also suggested that a high-order background markov model can avoid repeats and aid the detection of regulatory elements  <cit> . we are currently incorporating an option for a markov background into a-glam.

CONCLUSIONS
in summary, our scanning step identifies multiple elements in a single sequence with e-values. it speeds up regulatory motif discovery, by avoiding unnecessary use of the computationally expensive gibbs sampling step, with little loss  in predictive accuracy. the availability of completely sequenced genomes presents an increased demand for rapid and accurate prediction of regulatory elements. our methods seem well adapted for this challenge.

availability and requirements
project name: a-glam

project home page: 

operating system: linux

programming language: c++

other requirements: gcc or other equivalent compilers

license:

any restrictions to use by non-academics: no

abbreviations
a-glam – anchored gapless local alignment of multiple sequences.

pssm – position-specific scoring matrix

authors' contributions
kt analyzed the data and implemented the scanning step in a-glam; lm-r participated in the design of the study and acquired the datasets for analysis; ss provided the software for the e-value computation; dl contributed to the design of the datasets; jls developed the mathematical theory.

supplementary material
additional file 1
the package includes: • a-glam source code written in c++. • a-glam linux executable. • makefile

click here for file

 additional file 2
this winzip archive contains the input test datasets used in this study.

click here for file

 acknowledgements
support for this work was provided by the intramural research program of the national institutes of health.
