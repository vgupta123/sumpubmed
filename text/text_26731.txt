BACKGROUND
the continuously growing availability of genomic information exercises pressure on the systems used to capture it and on users concerned with its interpretation. analysis of large scale genomic data is a demanding task, requiring extensive input from diverse sources of biological significance, statistical methodologies and data exchange standards. to answer interesting biological questions, biologists need accessible interfaces that enable convenient visualization of information, searching multiple databases and flexible maneuvering within the data. when confronted with the lists of significantly differentially expressed genes from the microarray experiments performed, it is important to get a feel for the genome-wide distribution of the data and to be able to quickly navigate between diverse sources of information. visualization on a genomic scale is also helpful in identifying and representing clusters of genes that are co-regulated and map close to each other in the genome. there are several examples of regions in the genome where genes implicated in the same biological processes are clustered together on the genome, e.g the cytokine-receptor cluster on mouse chromosome  <dig>  <cit> , and a group of cytokine related genes associated with il- <dig> on mouse chromosome  <dig>  <cit> . chromatin remodeling events control transcription of closely mapped genes, and chromosomal clustering may point to regions where such events are actively induced.

since existing visualization solutions were not sufficient for our needs, we designed and implemented two programs, stripe and gfftool for integrating, visualizing and exploring whole genome data. we feel that the solutions developed here will interest a broad range of scientists in different laboratory settings working with large scale genomic data sets from microarray, proteomic or even computational methods. we have made both tools freely available to academic users on our website. currently, the human, mouse and rat genomes are available for immediate use. figure  <dig> shows a plot of the entire human genome in stripe. the chromosome numbers and designations are indicated at the top of each chromosome. the gene lengths of all genes are plotted. longer genes are thicker than shorter genes as the length of the genes here is scaled along both the vertical and the horizontal axes. the blue rectangle is a selection rectangle. it is possible to zoom in to a selected region by simply selecting a portion of the plot.

although a few tools that have the ability to provide such plotting capability exist currently, none of them are sufficiently user-friendly or provide ways of extracting additional biological information about genes of interest. users have to depend on extensive bioinformatics capabilities in order to get to the point of plotting the data. however, even after the data is plotted only limited interaction with the data is possible. caryoscope <cit>  provides a genome-wide view of microarray data and some linking capabilities to the web. however, in spite of the provided guidelines, some prior experience of handling data from varied databases and with scripting languages such as perl or python is required. similarly although it is possible to export appropriately formatted files from the stanford microarray database <cit> , this is of little help to researchers who are interested in visualizing data from their own experiments, that may or may not be from microarrays. caryoscope offers the advantage of being fully scriptable and easy to embed in a workflow, but has the disadvantage of being less useful as a platform for data exploration. other applications, such as seegh  <cit> , and cghanalyzer  <cit> , are designed for viewing dual channel array data derived from comparative genomic hybridization studies. chromoviz  <cit>  is implemented as an r package for visualizing genomic data. although it is possible to plot several datasets for each chromosome at a time, obtain a karyotype plot for the chromosome in question, and explore data by zooming, the search capability is limited and web linking to publicly available databases is absent.

implementation
stripe and gfftool have been programmed in perl/tk. we have tested both successfully on windows, linux and solaris operating systems, but caution that some online resources may work better on the windows platform. we recommend a minimum of  <dig> mb ram to run the programs.

RESULTS
we describe the features of both programs, and provide illustrative examples of data plotting and exploration.

gfftool features
it is important to be able to integrate experimental data with annotation sources to be able to ask relevant biological questions. we use the well defined gff  file format for representing data. the program gfftool was designed to collate our microarray data together with the annotations and locations of the genes while stripe provides an interactive environment for exploring the data on the genomic landscape.

the gff format is well suited to store both numerical and textual data for genes and their features. choosing a format is not enough though, and one must be able to easily create, modify, query and check if the data is in the correct format as well. gfftool provides a number of methods to deal with the gff file. importantly, firstly it allows users to create their own gff file for the genome of their choice. detailed instructions for creating a new gff file for a genome are provided in the program manual. for the large number of researchers interested in human, mouse and rat genomes, pre-prepared gff files have already been created and may be used for browsing the genomes even without integrating it with any other data. all gff files distributed with the programs have been created using gfftool itself, using data distributed by ncbi and ebi. these files contain ~ <dig>  genes for human, ~ <dig>  genes for mouse and ~ <dig>  genes for the rat genomes.

in addition, integrating more data to an existing gff file is a simple, one-step procedure. as both programs use standard ncbi gene database identifiers, once the experimental data has been linked to these identifiers, the data can be immediately added to an existing gff file to create a new gff file containing the experimental data. the experimental data need only be in the commonly used tab-delimited form to be accepted by gfftool. moreover, gfftool also provides methods to re-format a few popular data files distributed by ncbi and ebi .

gfftool also allows one to query the gff file and extract subsets of interest , and create a gff file exclusively for this subset of genes. it is also possible to subset a whole genome gff file based on a text file containing a gene list of standard ncbi gene database identifiers . obtaining ncbi gene ids for the genes is a pre-requisite for combining the user's data with the gff files used. such conversions may be routinely performed by several already available tools, e.g david  <cit>  and matchminer <cit> .

the data from a gff file can also be exported to a tab-delimited or a comma-delimited format for use in other applications . also, gfftool includes a format checking feature which allows one to thoroughly check the file before plotting in stripe.

stripe features
stripe allows easy searching, highlighting and importantly, brisk navigation through several diverse annotation sources for any gene. it uses the standard ncbi gene database identifiers as minimal units for plotting. the pre-prepared gff files for the human, mouse and the rat genomes are ready to plot directly with stripe. these files contain several annotation fields, e.g. the ncbi entrez gene id, gene name, gene length, gene symbol, cytogenetic location, genbank accession, and swissprot id for all genes that have been mapped to a definite chromosomal location. these fields are used to link the application to a variety of different publicly available databases. additional annotation fields may also be added to a gff file using gfftool.

stripe offers up-to forty different methods for plotting and coloring the data. it is possible to plot raw, zero-centered, mean-centered, log-transformed, and mean log-transformed data. one can plot a histogram plot and then overlay on it several line plots. each plot can be colored in three different ways: using any user-defined color, a defined color column in the gff file, or a separate tag file that allows different groups of genes  to be appropriately labeled and colored. upregulated and downregulated genes may also be colored differently at any time. in the absence of any user data, one can create and navigate a plot based only on the locations of the genes. this plot can also be colored as described above. it is useful when the user is mainly interested in knowing the location of the genes and exploring the genome.

it is possible to choose a data column from the gff file, values from which are displayed whenever one places the mouse cursor on any gene as a tool tip. in addition, the cytogenetic band and the value in the plotted data set are always displayed. pressing and dragging the right side mouse button over a group of genes activates the zooming and lassoing feature. the selected area is zoomed in immediately for a closer examination. figure  <dig> shows this in detail for a part of the plot. it is easy to see the bar-chart like plots in this view. the various options available for plotting are also shown in the plot pull-down menu. this menu is used when one desires to also scale the gene length along the chromosome. stripe provides two ways of creating each plot. one is to plot a data value associated with a gene as a horizontal rectangle on a vertical chromosome, where the horizontal axis of the rectangle corresponds to the data value and the vertical axis to the length of the gene. this is shown in the zoomed in view in figure  <dig> where the gene lengths are scaled along the chromosome. the menu shown in the plot is used when one desires to have an idea of the actual gene lengths as well. the other method is to use a line perpendicular to the vertical chromosome. the plot uniform menu is used when one needs to ignore the gene length. in this case, this line is drawn at the exact midpoint of the gene and the gene length is disregarded. we have noticed that excluding the gene length during visualization provides a more reliable view of potential clusters of genes as the width of each gene is constant. an illustrative comparison is shown in the two insets in figure  <dig>  in the left inset the gene lengths have been plotted and in the right inset a single line is drawn at the center of each gene. a large number of spurious clusters can thus be visually filtered. it must be noted that this method does not override any statistical method used to identify clusters, but rather, acts as an aid to visualizing and exploring potential clusters. we suggest that any statistical tests for overrepresentation on the data be performed prior to its incorporation into stripe.

intuitive perl-based regular expression searches may be carried out in the displayed tool tip column  and the search results can be highlighted immediately on the plot. highlighting can be done in many different ways . the colors of highlighting search results can be customized before each search is performed. this provides the user with the ease of locating the genes of interest. also, as any number of searches may be performed on a plot, different subsets of genes may be highlighted simultaneously on the plot. figure  <dig> shows an example of the search functionality in stripe. in this example, a simple search for the word "toll" highlights all the gene names in the human genome that contain the word "toll". the toll-like receptors are pathogen recognition receptors and important components of innate immune defense. the matching genes are colored red on the plot and encircled by an oval for immediate identification. the lasso window is also shown with details of the all the search results obtained with the pattern. the inset also shows the results of how two different search results may be highlighted in the plot. the blue rectangles are a search result for the word "interleukin" and the red ovals are the search results for the word "interferon". these search results can be saved to a text file. plots may be saved as postscript files that can be read easily using standard graphics programs.

it is easy to reset the plot to its original state, and then select another area for zooming in. the lasso window provides detailed information on genes each time a search is performed or the plot is zoomed in. "panning" on the canvas is done by pressing and dragging the left mouse button.

an important feature of stripe is the linking of the experimental data to a variety of biological databases. using the database identifiers specified in the gff file, stripe links to databases providing information on the gene, nucleotide and protein sequence information, single nucleotide polymorphisms, homologous genes across species, available pubmed literature, pathway information, gene expression data in public databases, genotype reports, chromosome maps, gene ontology categories, alternate splicing data, protein domains information, neighboring gene network associations, and genetic association databases. a customized link to a website using a data column from the gff file can be defined. figure  <dig> shows a close up view of the toll-like receptor  <dig> gene in the human genome. the gene is colored red and encircled by an oval. the mouse over feature provides a small box that indicates the gene name, the cytogenetic location, and the data value at that point. a double click on any gene brings up a small gene page window which shows further annotation details on the gene, in this case, toll-like receptor  <dig>  the ncbi geneid, official gene name, official gene symbol, cytogenetic location, genbank accession number and the swissprot identifier, is shown in the upper part of this window. the lower part of the gene page provides access to over  <dig> resources on this gene. all resources have been classified for easier access. it is also possible to provide an identifier in the gff file and use it to create a customized deep link to any user-defined resource.

stripe provides access to a large number of different resources for each gene. basic information, e.g. name, gene symbol, cytogenetic location etc, is provided right away. deep links to several ncbi databases are provided, e.g. pubmed, genbank, omim, gene expression omnibus , homologene. three choices for genome browsers are provided, the ncbi map viewer, ucsc genome browser, and the ensembl genome browser, so that users interested in a different display can easily switch to any of these and access additional information available there. all of the important databases for protein domains, pfam, interpro and smart are available. gene ontology searches are available from the go database. transcripts with known alternative splice variants can be looked up the in alternative splicing database. pathway information can queried from kegg and biocarta, while literature connections can be explored using pubgene.

in order to illustrate the utility of these programs we used data derived from a microarray-based genome-wide analysis of palindrome formation or gapf  <cit> . the method described is a novel technique to detect the prevalence of palindrome-containing regions in cancer cells and to identify those regions harboring structural chromosome aberrations. the gapf method was compared to conventional array comparative genome hybridization  in its ability to identify palindromes. the study concluded that dna palindromes were frequent in human cancer and also provided evidence of possible clustering of palindromic sequences at specific chromosomal loci. in addition, gapf was demonstrated to be more sensitive than array cgh in detecting dna palindromes. two datasets from the original publication, colo_cgh and colo_gapf have been plotted together in line plots in stripe and are depicted in figure  <dig>  it is clearly seen that there is clustering of some of the data which is not immediately evident from tabular data as given in the supplementary section of the publication. the two insets show zoomed in regions of the plot. the left inset shows the chromosomal region at 1q <dig> where clustering of genes can be seen. the right inset shows a close up of the "myc" gene at locus 8q <dig> encircled in the two line plots . once such a plot is created, it is publication-ready, fully interactive, zoomable and searchable and provides a starting point for navigation through several databases for each gene. this demonstrates how, in addition to providing tables, one may also easily provide overall visualization of the genomic distribution of the data.

to provide another example of the program's capability to plot actual microarray data, we have taken data from a recent gene expression profiling study on cancerous renal cell carcinoma  <cit>  and plotted it with stripe . the data was retrieved from the stanford microarray database and added to the human genome gff file using gfftool. a single experiment is shown here  and the log <dig> ratios have been plotted centered around zero. upregulated genes are colored red and are plotted on the right sides of each chromosome while the downregulated genes are colored blue and are plotted on the left sides. it is also useful to plot identified differentially expressed genes separately purely as a means for reducing complexity and exploring hypotheses. the inset in the figure shows the cancer survival signature gene set identified by the authors plotted separately. as the plot is linked to the various resources for each gene, it provides an excellent gateway to explore each gene individually. the gff files containing both the experiment and the cancer survival gene signature data are available with the programs.

CONCLUSIONS
stripe and gfftool are programs that make whole genome plotting easy for users, provide organized access to information resources, reducing time for manual navigation, and allow using a single plot as a gateway for exploration. both stripe and gfftool are still under development. detailed documentation for both programs is available from the project home page.

availability and requirements
• project name: stripe and gfftool

• project home page: 

• operating system: windows, linux, solaris

• programming language: perl/tk

• other requirements: none

• license: free for academic use

• any restrictions on use by non-academics: contact corresponding author for a license

abbreviations
gff: general feature format

ncbi: national centre for biotechnology information

ebi: european bioinformatics institute

pfam: protein families database

kegg: kyoto encyclopedia of genes and genomes

gapf: genome wide analysis of palindrome formation

authors' contributions
rg conceived the program, wrote and tested it, prepared the manuals and the website. hl assisted in coding and testing both programs. tc oversaw the entire development process. rg and tc prepared the manuscript. all authors read and approved of the final manuscript.

