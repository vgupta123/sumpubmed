BACKGROUND
the estimation of evolutionary distances between biological sequences is at the basis of many bioinformatics problems: it plays a particularly important role in phylogenetic tree inference  <cit>  and in an increasing number of comparative genomics analyses over large sets of genes or proteins . the most accurate way of estimating evolutionary distances is currently maximum likelihood, but the procedure is so time-consuming that is hardly practical when dealing with large datasets. in such cases, complexity is often tackled by working on the basis of individual pairs, such as in distance tree methods or in the "all-against-all" at the beginning of many comparative genomics analyses. however, by estimating an evolutionary distance for each pair individually, no knowledge about the covariance of distance estimates with common evolution can be directly obtained. thus, when comparing pairwise distances among related sequences, for instance to infer which of two homologs is closer to a third one, confidence intervals cannot be derived directly from the pairwise estimates.

the present article investigates this fundamental problem of estimating the difference between two distances in a triplet of homologs . we compare the standard multivariate maximum likelihood approach with a much faster estimator based on pairwise distances, and present a formula to estimate its variance. as two examples of applications, we show how our results improve the detection of asymmetric evolution and the identification of the closest relative in a group of homologs. but first, we briefly review the markovian model of evolution and maximum likelihood estimation of distances.

pam model of sequence evolution
the evolutionary distance between two biological sequences is generally based on the assumption of a first-order markovian process of amino acid evolution. this implies two biological assumptions, common to all standard models of evolution: no memory and position-independence. the substitutional processes are described in the form of substitution matrices, defining mutation probabilities from each character to every other character for a given evolutionary distance. these matrices are either parametrical models of sequence evolution or empirically based substitution matrices. parametrical models are often employed for nucleotide substitution , while empirical matrices  are widely used for peptide replacements in proteins. pioneered by dayhoff in the 1970s  <cit> , these models have been improved with more sequence data becoming available in the 1990s   <cit> ). codon substitutions have been described by parametrical  as well as empirical  matrices.

because of the additivity of distances computed under the markovian model of sequence evolution. substitution matrices for a wide range of evolutionary distances can be derived from a single substitution matrix m through the equation mx = m, which is a special form of the chapman-kolmogorov equation for markov chains. it is common and computationally more efficient to formulate this process in terms of a rate matrix q from which the probability matrices for distance d are derived as m = edq. we normally measure d in pam units  <cit> , which completely defines q.

maximum likelihood estimation
evolutionary distances are best estimated by maximum likelihood . in case of a pair of sequences, the ml estimation is well known and practical . when more sequences are under consideration, the complexity of distance estimation by ml increases very steeply, mainly because it requires a multiple sequence alignment  and the inference of the phylogenetic tree topology, two difficult procedures for which the optimal solution can currently only be computed in exponential time with respect to the number of sequences. a common strategy for tackling this problem is to work on the basis of pairs, such as in distance tree methods. in this article, we focus on the specific problem of estimating, in a triplet of homologs x,y,z . the difference Δ between two distances dxy and dxz. in such case, the multidimensional ml approach over the triplet is still practical. we call the estimator of Δ obtained by this method Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet. alternatively, Δ can be estimated by a simple algebraic relation over pairwise distances over x, y, z estimated individually. we call this alternative estimator Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise. details about the computation of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet and Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise are provided in the methods section.

RESULTS
in the present section, we compare the estimators Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet and Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, and introduce a numerical approximation to estimate the variance of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, and show that it gives accurate confidence intervals. finally, we describe two applications of the results.

comparison between the two estimators
in terms of computational complexity, the two estimators differ significantly. given m sequences of length n, Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet requires the separate treatment of each o triplet, and considering that an optimal 3-way alignment by dynamic programming  is o, the time complexity is o. in contrast, all Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise can be computed on the basis of o pairs of sequences aligned by dp in o, yielding a time complexity of o. typically, whenever an analysis involves more than a few thousand proteins, millions of triplets have to be considered and Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise is the only practical approach of the two. in terms of accuracy, both estimators are asymptotically unbiased: in the case of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet, it is a property of the ml estimator, while in the case of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, it is the consequence of the linearity of the expected value . we compared the two estimators by simulation over a large number of triplets , generated randomly according to the pam model of evolution with different distances dox, doy, doz . in each experiment, both estimators were converging toward the correct value for the difference, which confirms that the asymptotic behavior is a reasonable assumption for protein sequences of typical length. in terms of statistical power; surprisingly, the observed variance of the estimates obtained by Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise was on average less than 1% larger than the observed variance of the ml estimator over the triplet, suggesting that Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, although much faster to compute, is on average almost as accurate as Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet.

the variance of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet can be computed exactly . but there is no direct estimator of the variance of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, since it results from an algebraic relation over pairwise distances estimated individually, whose covariances are therefore unknown. there are indirect ways of estimating that variance, through the sampling distribution when doing simulation such as the one mentioned above, or bootstrapping when handling real data. however, such procedures are very time consuming. to overcome this problem, we devised a numerical approximation of σ <dig> as function of the pairwise distance estimates.

numerical approximation of σ2
in essence, the numerical approximation described here was obtained through regression over a large number of samples. we settled for this approach after discovering that the analytical solution to this problem, even when using a simpler model of evolution . requires solving a polynomial of degree  <dig>  the details of this investigation are reported in the appendix. in view of this inherent complexity, the regression cannot be exact, but it turns out to be a surprisingly precise numerical approximation for comparisons that involve proteins that have an evolutionary distance smaller than  <dig> pam units, which corresponds to percentage sequence identity greater or equal to  <dig> %. we generated random triplets in the following way: a random-length  sequence was chosen as the origin o. three random pam distances  were selected for dox, doy and doz. the sequence o was mutated according to these distances to obtain x,y and z, our triplet. we generated about  <dig>  triplets for three types of scoring matrix: updated dayhoff matrices  <cit> , dna for coding genes and jtt  <cit> . the dna scoring matrices were computed from a very large set of entire coding gene alignments from mammals. it is used in the oma project  <cit>  to align entire coding genes and is based on a 4-symbol alphabet. for each triplet, we computed pairwise distance estimates and their variances as input for the approximation. given that Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise is almost as powerful as Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet, we computed and used σ <dig>  as reference value for σ <dig> 

we examined a large number of regressions and one approximation stood out of the rest due to its efficiency, low average error and other minor indications. table  <dig> shows the coefficients of the approximation for the three types of scoring matrices.

 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgkbazgaqcaaaa@2e0d@xy + d^
coefficients of the regression on the logarithms for the three types of scoring matrices. the error column shows the mean error, which by virtue of being a regression on logarithms is very close to the relative error.

for example, the approximation for dna variances is

σ˜2=d^yz <dig> σ <dig> .+σ2) <dig> σ2) <dig> .2449
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaafaqabegabaaabaaccigaf83wdmnbagaadaahaawcbeqaaiabikdayaaakiabcicaoiqbfs5aezaajawaasbaasqaaiabdchawjabdggahjabdmgapjabdkhayjabdeha3jabdmgapjabdohazjabdwgalbqabagccqggpaqkcqgh9aqpdawcaaqaaiqbdsgakzaajawaa0baasqaaiabdmfazjabdqfaabqaaiabigdaxiabc6cauiabiodaziabigdaxiabiida4iabikdayaaaaoqaaiab=n8aznaacaaaleqabagaegomaidaaogaeiikagiafmizaqmbakaadawgaawcbagaemywaklaemowaofabeaakiabcmcapmaacaaaleqabagaegimaajaeiola4iaeg4mamjaegimaajaegomaijaegonaydaaaaakiabc6cauaqaamaalaaabagaeiikagiae83wdm3aawbaasqabeaacqaiyagmaagccqggoaakcuwgkbazgaqcamaabaaaleaacqwgybawcqwgzbqwaeqaaogaeiykakiaey4kasiae83wdm3aawbaasqabeaacqaiyagmaagccqggoaakcuwgkbazgaqcamaabaaaleaacqwgybawcqwgabgwaeqaaogaeiykakiaeiykakyaawbaasqabeaacqaixaqmcqgguaglcqaiwaamcqai5aqocqaizawmcqaizawmaagccqggoaakcqwfdpwcdaahaawcbeqaaiabikdayaaakiabcicaoiqbdsgakzaajawaasbaasqaaiabdifayjabdmfazbqabagccqggpaqkcqwfdpwcdaahaawcbeqaaiabikdayaaakiabcicaoiqbdsgakzaajawaasbaasqaaiabdifayjabdqfaabqabagccqggpaqkcqggpaqkdaahaawcbeqaaiabicdawiabc6cauiabigdaxiabigdaxiabiida4iabigdaxaaaaoqaaiabcicaoiqbdsgakzaajawaasbaasqaaiabdifayjabdmfazbqabagccqghrawkcuwgkbazgaqcamaabaaaleaacqwgybawcqwgabgwaeqaaogaeiykakyaawbaasqabeaacqaixaqmcqgguaglcqaiyagmcqai0aancqai0aancqai5aqoaaaaaaaaaaa@9b87@

readers familiar with numerical analysis will find an analogy between the approximation presented here and standard approximations for transcendental functions. for example, it is customary to approximate exp through a quotient of polynomials p/q, for some limited range of x.

the relative error is in all the three cases less than 10%. furthermore, since we normally use the square root of the variance, the relative error is in such cases half of the indicated. the last column indicates the dimension of the approximation which should be  <dig> in perfect conditions, and is indeed quite close.

the fact that very different matrices have very similar coefficients, the low error and the almost correct dimensionality reassures us of the quality of the approximation.

to test the accuracy/applicability of the approximation, as well as the other two methods to obtain the variance, we compared the  <dig> and 99% confidence level obtained using the appropriate number of standard deviations to the actual percentage of correct decisions obtained in a simulation over  <dig>   <dig> protein triplets generated as described above. the results are shown in table  <dig> 

|Δ^
|Δ^
|Δ^
|Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise - Δ| > k·σ˜
|Δ^
comparison among the different methods to estimate the variance of the two estimators Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet and Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, resulting from a simulation using updated dayhoff matrices over  <dig>  proteins triplets, except for the bootstrapping method, based on  <dig>  samples. the first column tests the 95% confidence interval, the second the 99% confidence interval.

as expected, the ml estimator over the entire triplet  yields a precise variance estimate. on the other hand, we see that assuming independence for the estimation of the variance  leads to very inaccurate confidence intervals. estimating the variance of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise by bootstrapping  gives good confidence intervals, but the procedure is even more computationally intensive than Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet, and therefore of little practical use in the present context. using σ˜
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacuwfdpwcgaacaaaa@2e85@ <dig> in conjunction with the variance of the ml estimator works remarkably well . and surprisingly, applying the numerical approximation  happened to give slightly more accurate results than the exact triplet variance .

finally, we compared the different estimators on real biological sequences, using data obtained from the oma orthologs project  <cit> , triplets of orthologous sequences from various eukaryotes were randomly selected and aligned using the multiple sequence alignment package from darwin  <cit> . all positions containing gaps were excluded, and variances were then estimated on the ungapped triplets using the various estimators . the variance estimates from the approximation formula deviate very little from the results obtained by the two more expensive methods – for simulated as well as empirical alignments. additionally, the plots illustrate the high correspondence between the results from the ml estimation and the bootstrapping, and show that the estimator based on an assumption of independence often yields overestimates of the variance. the difference between simulated and empirical data probably arises from the limitations of the markovian model of evolution. worth noticing is that the agreement of our estimator with bootstrapping is comparable to the one of the ml variance estimator: this implies that our approximation has a similar robustness when applied to real data.
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacqwfdpwcdaqhaawcbagaemoyaimaem4ba8maem4ba8maemidaqnaem4camnaemidaqnaemocainaemyyaemaemicaahabagaegomaidaaaaa@3c22@. finally, the lower-right plot confirms that variance estimation under the assumption of independence can yield a large overestimation of the correct variance.

applications
in the following, we provide two examples of applications that benefit from the increase in statistical power of the estimator Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise enabled by the approximation: detection of asymmetric evolution and identification of the closest relative in a set of homologs. furthermore, in  <cit> , we show how our result can be used in the context of paralogy detection.

we first define three indicator functions that will be used in these comparisons. they decide whether the pair of proteins x, y is significantly closer than x, z at the confidence level expressed by the number of standard deviations k. the first and second ones both use the estimator Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, but the first definition uses as variance of the estimate the upper bound that is obtained by assuming independence of d^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgkbazgaqcaaaa@2e0d@xy and d^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuwgkbazgaqcaaaa@2e0d@xz , whereas the second use the approximation σ˜
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaaiigacuwfdpwcgaacaaaa@2e85@ <dig> of the variance. the third indicator function uses the estimator Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet.

closerind={trueif Δ^pairwise<−k⋅σindfalseotherwise
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbwycqwgsbabcqwgvbwbcqwgzbwccqwglbqzcqwgybgcdawgaawcbagaemyaakmaemoba4maemizaqgabeaakiabcicaoiabdifayjabcycasiabdmfazjabcycasiabdqfaajabcycasiabdugarjabcmcapiabg2da9maaceqabaqbaeaabigaaaqaaiabbsha0jabbkhayjabbwha1jabbwgalbqaaiabbmgapjabbagamjabbccagiqbfs5aezaajawaasbaasqaaiabdchawjabdggahjabdmgapjabdkhayjabdeha3jabdmgapjabdohazjabdwgalbqabagccqgh8aapcqghsislcqwgrbwacqghfly1iigacqwfdpwcdawgaawcbagaemyaakmaemoba4maemizaqgabeaakiabcicaoiqbfs5aezaajawaasbaasqaaiabdchawjabdggahjabdmgapjabdkhayjabdeha3jabdmgapjabdohazjabdwgalbqabagccqggpaqkaeaacqqgmbgzcqqghbqycqqgsbabcqqgzbwccqqglbqzaeaacqqgvbwbcqqg0badcqqgobaacqqglbqzcqqgybgccqqg3bwdcqqgpbqacqqgzbwccqqglbqzaaaacagl7baaaaa@87db@

closerapp={trueif Δ^pairwise<−k⋅σ˜falseotherwise
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbwycqwgsbabcqwgvbwbcqwgzbwccqwglbqzcqwgybgcdawgaawcbagaemyyaemaemicaanaemicaahabeaakiabcicaoiabdifayjabcycasiabdmfazjabcycasiabdqfaajabcycasiabdugarjabcmcapiabg2da9maaceqabaqbaeaabigaaaqaaiabbsha0jabbkhayjabbwha1jabbwgalbqaaiabbmgapjabbagamjabbccagiqbfs5aezaajawaasbaasqaaiabdchawjabdggahjabdmgapjabdkhayjabdeha3jabdmgapjabdohazjabdwgalbqabagccqgh8aapcqghsislcqwgrbwacqghfly1iigacuwfdpwcgaacaiabcicaoiqbfs5aezaajawaasbaasqaaiabdchawjabdggahjabdmgapjabdkhayjabdeha3jabdmgapjabdohazjabdwgalbqabagccqggpaqkaeaacqqgmbgzcqqghbqycqqgsbabcqqgzbwccqqglbqzaeaacqqgvbwbcqqg0badcqqgobaacqqglbqzcqqgybgccqqg3bwdcqqgpbqacqqgzbwccqqglbqzaaaacagl7baaaaa@83af@

closertriplet={trueif Δ^triplet<−k⋅σfalseotherwise
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgjbwycqwgsbabcqwgvbwbcqwgzbwccqwglbqzcqwgybgcdawgaawcbagaemidaqnaemocainaemyaakmaemicaanaemibawmaemyzaumaemidaqhabeaakiabcicaoiabdifayjabcycasiabdmfazjabcycasiabdqfaajabcycasiabdugarjabcmcapiabg2da9maaceqabaqbaeaabigaaaqaaiabbsha0jabbkhayjabbwha1jabbwgalbqaaiabbmgapjabbagamjabbccagiqbfs5aezaajawaasbaasqaaiabdsha0jabdkhayjabdmgapjabdchawjabdygasjabdwgaljabdsha0bqabagccqgh8aapcqghsislcqwgrbwacqghfly1iigacqwfdpwccqggoaakcuqhuoargaqcamaabaaaleaacqwg0badcqwgybgccqwgpbqacqwgwbaccqwgsbabcqwglbqzcqwg0badaeqaaogaeiykakcabagaeeozaymaeeyyaemaeeibawmaee4camnaeeyzaugabagaee4ba8maeeidaqnaeeiaagmaeeyzaumaeeocainaee4dacnaeeyaakmaee4camnaeeyzaugaaagaay5eaaaaaa@86b8@

asymmetric evolution
after a gene duplication, the two copies can evolve independently. it has been suggested that in many cases, one duplicate maintains the ancestral function while the other is free to evolve and acquire novel functionality  <cit> . this scenario implies that the protein with conserved functionality will undergo less sequence evolution than the one exploring new functionalities.

detecting this asymmetric evolution after duplication is an important factor not only for function prediction or orthologs assignment, but also for bringing new insights in our understanding of genome evolution in general .

in order to identify cases of asymmetric evolution, one typically considers three sequences – the two duplicates and an out-group . several methods have been developed to test the significance of the unequal lengths of the branches leading from the common ancestor to the two duplicated sequences. tests on simulated and real data from arabidopsis thaliana for two of such methods have suggested very low statistical power to detect asymmetric evolution of duplicates  <cit> .

the closer indicator function can be used to detect asymmetric evolution. with dxy being the distance from the out-group to the closer of the two duplicates and dxz the distance to the other one, closer  decides if the two duplicated proteins have evolved at significantly different rates. the parameter k can be chosen to reflect the confidence level, e.g.  <dig>  for the 95% level.

we tested the method using all three variants of closer  on a protein set from a recent publication about whole genome duplication in s. cerevisiae  <cit> . from a set of  <dig> genes pairs that arose by whole genome duplication, they report  <dig> cases of one paralog evolving at least 50% faster than the other paralog. the position of the ancestral gene was determined by an out-group gene from k. waltii. additionally, a set of  <dig> gene pairs is given where at least one of the s. cerevisiae genes evolved at least 50% faster than the k. waltii homolog.

the results are summarized in fig.  <dig>  we first discuss the differences among three variants of closer. as expected, the over estimation of the variance of the estimator in closerind considerably reduces the cases of asymmetry detected in comparison with closerapp. as for closerappand closertriplet, they agree on  <dig> of  <dig> cases, with  <dig> cases only reported by closer app and  <dig> only by closer triplet. this discrepancy results from the error introduced by the approximation for the estimation of the variance of Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise, but mostly from the inherent differences in the predictions of the two estimators Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@pairwise and Δ^
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacuqhuoargaqcaaaa@2e22@triplet.

if we now compare the predictions of kellis and colleagues with our results, it appears that in  <dig> out of  <dig> cases, their prediction of asymmetric evolution could be confirmed by closerapp, while with the remaining  <dig> pairs, our method did not support the asymmetry prediction. it is remarkable, however, that all these  <dig> pairs belong to the group of the  <dig> pairs with a fast evolving k. waltii homolog. it seems likely that the uncertainty in placing the origin of the triplet  causes rate-based methods as used in  <cit>  to report asymmetric divergence despite the unclear situation. as opposed to that, the distance-based methods presented here, by incorporating the variance of the estimates explicitly, take the uncertainty about the point of origin into account, and therefore give more conservative predictions in these cases.

furthermore, closerapp found  <dig> additional cases of asymmetry among the remaining  <dig> gene pairs in the data set. together with the  <dig> cases above, this results in  <dig> % of all genes arising from the genome duplication event. this is clearly more than the 5% that could be expected from random chance and agrees with previous studies were significant amounts of asymmetrically evolving duplicates have been reported .

closest homolog without phylogenetic reconstruction
the identification of the closest relative of a protein  in a set of homologs traditionally requires the reconstruction of the corresponding phylogenetic tree. however, building gene trees remains a time consuming and error-prone task, thus methods based on pairwise evolutionary distance estimates are attractive. in this section, we show that using the variance approximation presented above can boost the statistical power of pam distance comparisons to determine the closest homolog.

in simple contexts, or when accuracy is not a concern, the problem of identifying the closest relative can be solved reasonably well by coarse approaches, such as the top blast hit, or even the sequence with highest percentage identity. as the number of proteins grows larger and the number of homologs with similar distances increase, these methods show their limits. indeed, it has been previously shown that the top blast hit is often not the closest relative  <cit> . at least two ideas lead to better results: the use of evolutionary distance estimates such as pam distances, and accounting for confidence intervals, so that whenever there is not enough information to reliably discriminate among several distances, all of them are kept, presumably for further analysis.

since the comparison of the methods requires precise and unbiased knowledge of the closest homolog, we use simulated data generated in the same way as in the section above, according to the pam model. families of homologs were created through mutation and duplication following random phylogenetic trees  with the following properties:  each branch has a random mutation rate from a uniform distribution between  <dig> and  <dig>   duplication occurs only along the leftmost branch, at random intervals, on average about every  <dig> pam units,  the generation is performed in  <dig> steps and results in trees with an average number of leaves of  <dig>  . the very asymmetric duplication process is used to explore efficiently the parameter space, both in terms of distance magnitude to the closest homolog as in the number of homologs with similar distances.

for each protein x belonging to such a family, the closest homolog predictions using the following three criteria were compared to the actual closest homolog. the first one computes the subset of homologous sequences h that align with x with score higher than a particular fraction of the top score.

set1={y∈h|score≥⋅max⁡z∈h)}
 mathtype@mtef@5@5@+=feaafiart1ev1aaatcvaufkttlearuwrp9mdh5mbpbiqv92aaexatlxbi9gbaebbnrfifhhdyfgasaach8aky=wiffydh8gipec8eeeu0xxdbba9frfj0=oqffea0dxdd9vqai=hguq8kuc9pgc9s8qqaq=dirpe0xb9q8qilsfr0=vr0=vr0dc8meaabaqaciaacagaaeqabaqabegadaaakeaacqwgtbwucqwglbqzcqwg0baddawgaawcbagaegymaedabeaakiabg2da9iabcuha7jabdmfazjabgigiolabdieaijabcyha8jabdofatjabdogajjabd+gavjabdkhayjabdwgaljabcicaoiabdifayjabcycasiabdmfazjabcmcapiabgwmizkabcicaoiabigdaxiabgkhitiabdugarnaabaaaleaacqaixaqmaeqaaogaeiykakiaeyyxic9aacbeaeaacyggtbqbcqgghbqycqgg4baeasqaaiabdqfaajabgigiolabdieaibqabagccqggoaakcqwgtbwucqwgjbwycqwgvbwbcqwgybgccqwglbqzcqggoaakcqwgybawcqggsaalcqwgabgwcqggpaqkcqggpaqkcqgg9bqfaaa@6694@

the second method computes the set of closest homologs, without using our variance approximation, formally

set <dig> = {y ∈ h | ∄ z ∈ h, z ≠ y, closerind}

the third method computes the set of closest homologs using our approximation, formally

set <dig> = {y ∈ h | ∄ y ∈ h, z ≠ y, closerapp}

the cut-off parameters k <dig>  k <dig>  k <dig> can be set according to the desired level of confidence. at k =  <dig>  only the top score, respectively the shortest expected distance, is returned. higher k values correspond to more conservative predictions, with increasing number of closest homolog candidates. for the evaluation of the methods, we vary k <dig> between  <dig> and  <dig> , while k <dig>  k <dig> are varied between  <dig> and  <dig>  note that only k <dig> corresponds to the number of standard deviations from the expected value.

the resulting curves are presented in fig.  <dig>  at low cut-off values, all three methods perform similarly, but as k increases, the method using closerapp gives better results.

CONCLUSIONS
computing the difference of two evolutionary distances that are not independent is a common operation in an increasing number of bioinformatics analyses. we presented and compared two estimators for the difference of two evolutionary distances in a triplet of homologs, one estimator based on pairwise distance estimates and the maximum likelihood estimator. surprisingly, the estimator based on pairwise distance is almost as powerful as the ml estimator. but in terms of time complexity, it scales much better than the ml estimator and is therefore better suited at large-scale analyses. however, since its variance is not easy to estimate, we introduced a numerical approximation that allows the computation of accurate confidence intervals. finally, we showed how these results can be used to test for asymmetrical evolution, and to identify the closest relative of a sequence in a group of homologs without phylogenetic reconstruction. as of future work, we plan to extend these results to models of evolution allowing rate variations, as well as insertion-deletions.

