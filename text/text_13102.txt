BACKGROUND
homology is the basis of comparative biology
 <cit> , and recognising sets of homologous genes or proteins underlies much of modern bioscience including genome annotation, phylogenetic inference and studies of protein structure. particularly in high-throughput applications, these molecules are usually arranged into putatively homologous sets based on sequence similarity. a greater degree of shared similarity  observed among a set of sequences relative to the others in the dataset indicates a likely homologous history.

in recent studies
 <cit> , clustering approaches have been loosely grouped into three classes based on their algorithmic design: hierarchical, greedy heuristic, and bayesian. hierarchical clustering approaches, e.g. esprit-tree
 <cit> , operate on pairwise distances  that are commonly generated by local alignment  and group sequences at a defined threshold of similarity. while computationally demanding of space and memory, greedy heuristic approaches such as cd-hit
 <cit>  and uclust
 <cit>  are more scalable, in substantial part because they simultaneously compute pairwise similarity and group the sequences using a greedy global-alignment algorithm. cd-hit has been adopted in major databases
 <cit>  to delineate protein families and reduce data redundancy, while uclust, which uses a fast global-alignment algorithm  that takes only best hits into consideration, can accurately delineate highly conserved protein sets
 <cit> . in addition to these three categories, mcl
 <cit> , adopting probability and graph flow theory within a markov matrix framework, has been widely adopted for delineating families in phylogenetic studies
 <cit> . the performance of these approaches necessarily varies depending on features of the data, including content bias , and the degree to which the sequences have diverged in the course of evolution. a recent benchmarking analysis
 <cit>  using both empirical and simulated data suggests that hierarchical approaches are more accurate in recovering sequence clusters than are greedy heuristics. nevertheless the contribution of these features individually on the performance of clustering approaches remains unclear.

here we assess the clustering performance of mcl in comparison to the fast, greedy heuristic clustering method, uclust. we approach this issue in two ways. first, we examine the performance of these two approaches in clustering empirical protein datasets from three sets of bacterial genomes at varied levels of g+c content: staphylococcus at ∼ 33% g+c
 <cit> , mycobacterium at ∼ 66% g+c  and escherichia coli/shigella with ∼ 50% g+c
 <cit> . different clustering performance across these three datasets would therefore indicate, at least partially, the sensitivity of these approaches to g+c content of the genomes. second, we generated sets of sequences by simulation on a tree, in order to assess individually the impact on clustering performance of sequence divergence, rate heterogeneity, and bias in g+c content.

RESULTS
we examined, respectively for mcl and uclust, the similarity between two sets of clusters , as estimated by comparing all possible paired member assignments using the adjusted rand index , which ranges between − <dig> and  <dig>  this measure, based on the agreement of cluster memberships between two sets of data, has been widely adopted to measure clustering accuracy, e.g.
 <cit> . ari >  <dig> indicates that the two sets share a number of identical clusters , ari =  <dig> indicates the two sets do not agree exactly on any cluster memberships, and ari <  <dig> indicates the deviation between the two sets is greater than expected by chance.

analysis of empirical data
sets of protein sequences encoded by genomes of three bacterial genera were obtained from previously published work, or from public databases:  <dig> proteins from  <dig> staphylococcus genomes
 <cit> ,  <dig> proteins from  <dig> mycobacterium genomes
http://www.tbdb.org/ as of  <dig> december  <dig>  and  <dig> proteins from  <dig> escherichia coli and shigella genomes
 <cit> . as our reference cluster dataset we extracted all relevant clusters  from the manually curated protein cluster database figfam
 <cit> , as available from the pathosystems resource integration center  website
 <cit> ,
http://www.patricbrc.org/. for mcl, we used both blastp and ublast to generate the distance matrices . the mcl results based on blast+ and ublast searches are designated blast+mcl and ublast+mcl respectively.

figure 
 <dig> shows the ari for each comparison of all possible paired members between the generated and reference clusters, respectively for mcl  and uclust clustering, across the relevant parameter settings, i.e. inflation parameter i for mcl and identity threshold id for uclust. results of ublast+mcl are not shown because they are highly similar to those of blast+mcl . in general, the clusters of escherichia coli/shigella and staphylococcus generated by either blast + mcl or uclust are more similar to the reference , than are the clusters of mycobacterium .
1: figure s <dig> 

the number of clusters increases drastically with increasing id in uclust , in comparison to mcl , in which the number of clusters remains similar across i . when comparing cluster sizes, we focus on those of size n ≥  <dig> as these clusters are phylogenetically meaningful. for staphylococcus, escherichia coli/shigella and mycobacterium, the reference numbers of clusters  are  <dig>   <dig> and  <dig> respectively. the results closest to these, although not necessarily the most accurate , are those generated using blast+mcl with  <dig> ,  <dig> , and  <dig> , in comparison to  <dig> ,  <dig>  and  <dig>  using uclust .

we observed an increase in ari as i increases in mcl across all data. a similar trend is observed in uclust for the escherichia coli/shigella data, in which ari increases proportionately with id, with the maximum achieved at id  <dig> . however, for mycobacterium and staphylococcus , a reverse trend is observed in uclust. in these instances, ari decreases when higher id threshold was applied. this trend can partly be explained by the lower within-cluster sequence similarity observed for the mycobacterium and staphylococcus dataset than for escherichia coli/shigella . figfam protein families of mycobacterium  and of staphylococcus  are more divergent  than those of escherichia coli/shigella . although such low within-cluster similarity  could be explained by single-member clusters , such divergence could partly be explained by compositional biases in these genomes. therefore a lower id threshold in uclust appears to perform better in these cases. we expect clustering performance to increase as annotation of these proteins improves as more genome data become available.

these results, if general, indicate that the greedy heuristics approach tends to under-cluster compositionally biased sequences. this is not due to the ublast algorithm implemented in uclust, as mcl generates about the same numbers of clusters when we take bit scores from ublast . in addition to g+c bias, other evolutionary parameters e.g. among-site variation of substitution rates and/or convergence could also have contributed to our result. highly similar sequences play to the strength of global alignment  more than to local alignment , as shown by the high ari values in figure 
 <dig>  our mcl clustering results shown in figure 
 <dig> are based on the blast e-value cut-off at 10− <dig>  as we applied more-stringent thresholds at 10− <dig> and 10− <dig>  we observe higher clustering accuracy in mcl . for instance, in the case of staphylococcus, mcl clustering at i =  <dig>  yielded ari  <dig>   based on blast e ≤ 10− <dig>  in comparison to  <dig>  and  <dig>   at e ≤ 10− <dig> and 10− <dig>  respectively. our results support the notion that selecting an appropriate threshold of similarity measures is key in optimising clustering performance
 <cit> . because with empirical data it is difficult to isolate or distinguish individual causative factors, we next simulated the evolution of families of homologous proteins under controlled settings of branch length , rate heterogeneity and compositional bias.

analysis of simulated data
using simulated data of protein sequences, we assessed the clustering performance based on three individual evolutionary aspects:  sequence divergence,  among-site rate heterogeneity, and  g+c bias. all simulated datasets were generated using evolver as implemented in paml  <dig> 
 <cit> . for each designated parameter setting, we generated  <dig> protein families each of size n =  <dig>  and of length  <dig> amino acids, by simulation on an unrooted symmetrical tree , on which all internal branches  are of the same length.

the ari described above measures clustering accuracy in these methods, but does not provide any insights into cluster numbers and sizes, which could be useful in understanding the exact nature of mis-clustering. as we know the exact cluster size and numbers in our simulated data, here we adopted an additional, independent measure for performance accuracy based on cluster sizes. given nc = mean n among the resulting clusters, and nr = mean n observed in the reference set, we denote δ as a measure of fold difference of the average cluster size against the reference: δ = nc/nr. here we follow clark et al.
 <cit>  in defining the instances of over-clustering and under-clustering. over-clustering is observed when δ >  <dig> , and under-clustering when δ <  <dig> . we apply δ to all clusters, i.e. δ is simply the overall average cluster size divided by the known size n =  <dig>  if our clustering methods perform perfectly, we expect to recover  <dig> protein sets each of size n =  <dig> . we might also anticipate that as sequences grow more divergent, patchy or biased, clustering methods may become less efficient in grouping them correctly within families, and/or in distinguishing these families from each other. the results we present here are averages across five replicates. given that the minimum cluster size is  <dig>  the minimum δ across these instances is 1/4 =  <dig> . for all the results described below, all instances where δ =  <dig> yielded sets that are identical to the reference .

sequence divergence
to assess the effect of sequence divergence, we simulated the sequence data on an unrooted tree , progressively set the internal branch length x =  <dig> ,  <dig> ,  <dig> ,  <dig>  and  <dig>  substitutions per site, and used a discrete approximation of the gamma distribution .

as divergence increases from  <dig>  to  <dig>  mean substitutions per site , we observe a decrease in the clustering performance of all three methods . the number of generated clusters is shown in additional file
1: figure s <dig>  at x =  <dig>  substitutions per site , the  <dig> homologous sets were perfectly recovered by uclust at id ≤  <dig>  , and almost perfectly at id =  <dig>  . uclust, however, failed to recover any clusters at id ≥  <dig>  . in contrast, both mcl-based methods recovered all  <dig> protein sets  at settings of i between  <dig>  and  <dig> . blast+mcl and ublast+mcl tend to over-cluster slightly at i =  <dig> , yielding  <dig>  and  <dig> clusters  respectively, and to under-cluster slightly at i =  <dig> , generating  <dig>  and  <dig>  clusters respectively. as x increases from  <dig>  to  <dig>   the  <dig> protein sets were still recovered using either of the two mcl approaches at low i settings , whereas uclust usually failed to recover any families of n ≥  <dig> whatsoever when x ≥  <dig> . as shown in additional file
1: figure s5a, incrementing x from  <dig>  to  <dig>  resulted in the gradual decrease of average within-cluster sequence similarity from  <dig> % to  <dig> %.
 <dig>  with x set at   <dig> ,   <dig> ,   <dig> , and   <dig>  substitutions per site, using  blast+mcl,  ublast+mcl, and  uclust, across the specific parameter settings . all numbers shown are averaged across five replicates in each instance. standard deviation from the mean in each case  is <  <dig> . the δ values are plotted within the same panel . see also additional file
1: figure s <dig> 

these results suggest that local alignment-based approaches using mcl are more effective in recovering homologous protein families than the global alignment-based method, when sequences are  more evolutionarily distant from each other. some proteins, although sharing little sequence similarity, are known to be structural homologs, i.e. sharing high similarity in folding structure due to a common ancestral origin
 <cit> . in these instances, clustering of these highly divergent sequences  into a single homologous family would be desirable. when the level of sequence divergence is the only determining factor for the protein clusters, mcl with i ≤  <dig> appears to be a better option than uclust.

among-site rate heterogeneity
we modelled rate heterogeneity  across-sequence under the discrete approximation of the  gamma distribution, with the shape of the distribution determined by the α parameter. a small value  implies that substitution differs greatly across sites, e.g. a few sites have diversified quickly while the others little or not at all. this condition is analogous to having multiple conserved domains within a protein sequence. a large value , on the other hand, indicates that most sites have diversified at about the same rate. to assess the effect of rate heterogeneity we fixed x =  <dig>  and progressively set α =  <dig> ,  <dig>  and  <dig>  under the same 8-category discrete gamma distribution.

figure 
 <dig> shows how the three clustering methods perform when rates are heterogeneous within a low, uniform sequence divergence . the number of generated clusters is shown in additional file
1: figure s <dig>  interestingly for the two mcl approaches, as α increases from  <dig>  to  <dig>  the  <dig> protein sets  were recovered in almost all cases across all inflation parameter values, except at i ≥  <dig> . even at i =  <dig>  and α =  <dig>  mcl recovered  <dig> clusters . interestingly, for blast+mcl  at i =  <dig> , although δ =  <dig> , the observed ari is  <dig> , suggesting clustering errors. in comparison, uclust became much less efficient in recovering the correct protein sets as α was increased. for instance, at id =  <dig> , the number of protein clusters increases, and performance accuracy decreases, in proportion to α, from  <dig>  to  <dig>  to  <dig>  respectively at α =  <dig> , α =  <dig>  and α =  <dig> . families of n =  <dig> could be recognised at lenient id thresholds  but thresholds of  <dig> ,  <dig>  and  <dig>   were too stringent. as shown in additional file
1: figure s5b), changes in α do not result in significant changes in within-cluster sequence similarity .
1: figure s <dig> 

by itself, increased across-sites rate heterogeneity does not affect clustering accuracy as much as does greater sequence divergence. all three clustering approaches recovered the correct number of families more efficiently when rate heterogeneity was high  than when it was low . the local alignment-based approach using mcl is more robust than the greedy heuristic of uclust to heterogeneity of rate across sites. we examined the data across other α values and found negligible difference, i.e. cases of α =  <dig> and  <dig> are similar to the case of α =  <dig>  while the case of α =  <dig>  is similar to the case of α =  <dig> .

compositional bias of coding sequences
for this part of analysis, we generated  protein sequences from simulated dna sequences at varying levels of g+c composition . with both mcl and uclust, clustering accuracy of the protein sequences falls off slightly as the underlying simulated dna sequences become more compositionally biased . the number of generated clusters is shown in additional file
1: figure s <dig>  in this analysis, the lack of filtering for low-complexity sequences in ublast resulted in a huge number of sequence hits among the high g+c data , and therefore a pairwise matrix that is too large for practical clustering using mcl. as such, only blast+mcl and uclust results are shown. from 50-80% g+c almost all families are recovered by mcl at i =  <dig>  and  <dig>  ; for example, at i =  <dig>  blast+mcl recovers  <dig> families  at 70% g+c and  <dig>  at 80%, but  <dig>  at 90% g+c. at i >  <dig> , however, blast+mcl over-clusters; e.g. at i =  <dig> , blast+mcl recovers  <dig>   <dig> and  <dig> sets of n =  <dig> at 60%, 70% and 80% g+c .
1: figure s <dig> 

for uclust, sequence identity settings id >  <dig>  appear to be too stringent, as few sets of n =  <dig> were recovered . interestingly, at the most-extreme g+c content considered here , blast+mcl at i =  <dig>  recognised  <dig> clusters , of which  <dig> have n = 4; in comparison, uclust at id =  <dig>  found  <dig> clusters , of which  <dig> are of n =  <dig>  the variation of g+c proportion across these simulated dna sequences does not cause significant changes in pairwise sequence similarity within protein clusters , explaining why our results did not drastically change, particularly in uclust . in order to assess whether our simulated conditions in this experiment are intrinsically unfavourable to uclust in general , we examined the performance of uclust across instances of 50% g+c with an increasing proportion of invariant sites  in the sequences, from  <dig>  to  <dig> , as shown in panels  to  in additional file
1: figure s <dig>  panel  in the same figure shows the average within-cluster pairwise sequence similarity of each of these cases. evidently, as the proportion of invariant sites across the sequences increases, the efficiency of uclust in correctly identifying the four-member clusters increases. for instance, at id =  <dig> , uclust recovered almost  <dig> clusters of n =  <dig> when inv >  <dig>   remains a key factor influencing the performance of uclust. such conserved regions and invariant sites across sequences are expected in empirical data.

g+c bias inevitably influences codon usage in protein translation
 <cit> . given that changes at the third codon position  are more likely to be cryptic, the usage of codons ending in g or c is expected to increase with g+c bias. this was indeed observed in a recent study of various prokaryote and eukaryote genomes
 <cit> , except for two codons. the same study demonstrates that usage of some codons is non-linear to g+c bias. whereas the different levels of g+c content causes little difference in the accuracies of the two approaches in clustering the resulting protein sequences, mcl is more robust to such fluctuation than uclust, as observed by number of protein sets of n <  <dig> . to analyse the effect of g+c bias, we allowed our simulated dnas only a low degree of divergence . at the most-extreme g+c content we examined  there is much-reduced scope for sequences  to be recognisably different from each other, whether viewed locally or globally. as such, our observation that both mcl and uclust failed to recover the known number of families across most parameter-value settings is not surprising. fortunately, few empirical data are biased to this degree.

the mcl-based methods are computationally more expensive than uclust. the most time-consuming step is the generation of the matrix of sequence relatedness using all-versus-all blast. for this study, all computation was done using a 640-node linux high-performance computer cluster . for a set of  <dig> protein sequences, the blast analysis on a single cpu required 250–300 mb of memory and took ca  <dig> to 12 hours depending on sequence variation within the set, with analysis of protein sequences generated at 90% g+c bias requiring the most time and memory.

CONCLUSIONS
we assessed the performance accuracy of two clustering approaches designed for different purposes. uclust was designed for de novo clustering of large datasets  to reduce data redundancy and size, while mcl is commonly used to delineate homologous sequence sets. the former is usually done at higher level of sequence similarities than the latter. our study demonstrates that evolutionary aspects other than sequence divergence, e.g. among-site rate heterogeneity and g+c content bias, affect the clustering performance of these two approaches. we have demonstrated that sequence divergence, rate heterogeneity and content bias can individually and in combination affect the accuracy with which mcl and greedy heuristic algorithms can recover homologous protein families. we found the impact to be broader and more severe on the heuristics-based uclust than on two variants of mcl implementations. the simple global percent identity among sequences adopted in the former may be advantageous when sets of proteins or ribosomal rnas
 <cit>  are highly similar or contain overlapping or redundant regions , or when extreme scalability is required, as the clustering of these sequences is computationally more tractable than mcl. for application to data that are more divergent, and exhibit higher among-site rate variation and/or content bias, mcl may often be the better choice, especially if computational resources are not limiting.

