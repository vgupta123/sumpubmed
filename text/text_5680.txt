BACKGROUND
proteins perform many essential biological functions such as catalysing metabolic reactions and mediating signals between cells. these functions are often carried out by distinct “domains”, which may be identified as highly conserved regions within a multiple alignment of a group of similar protein sequences, as in the pfam classification  <cit> . it is widely accepted that such protein domains often correspond to distinct and stable three-dimensional  structures, and that there is often a close relationship between protein structure and protein function  <cit> . indeed, it is well known that protein structures are often more highly conserved than protein sequences  <cit> , and this suggests that proteins with similar structures will have similar biological functions  <cit> . the protein data bank   <cit>  now contains over  <dig>  3d structures, most of which have been solved by x-ray crystallography or nmr spectroscopy.

as well as sequence-based and structure-based classifications, proteins may also be classified according to their function. for example, the enzyme commission  <cit>  uses a hierarchical four-digit numbering system to classify the enzymatic function of many proteins. the first digit, or top-level “branch” of the hierarchy, selects one of six principal enzyme classes . the second digit defines a general enzyme class . the third digit defines a more specific enzyme-substrate class , while the fourth digit, if present, defines a particular enzyme substrate. however, it should be noted that because ec numbers are assigned according to the reaction catalyzed, it is possible for different proteins to be assigned the same ec number even if they have no sequence similarity or if they belong to different structural families.

furthermore, there are several ways in which a protein might provide one or more enzymatic functions, as illustrated in fig.  <dig>  in the simplest case , a protein contains just one domain, and there is is a one-to-one association between that domain and a particular enzymatic function. in this case, it is reasonable to suppose that the catalytic site is located entirely on that domain. similarly, a protein may have two or more distinct domains, each of which provides a distinct enzymatic  function . on the other hand, a protein domain could be involved in more than one catalytic activity, as illustrated in fig. 1
c. finally, a catalytic site may be at the interface between two domains, or one domain serves as a necessary co-factor for the other . clearly, it is biologically relevant to be able to distinguish all such cases. however, except for the simplest case , it can be seen that finding domain-ec associations automatically is a non-trivial task. several groups have described approaches or resources that can associate entire pdb protein chains with enzyme ec numbers . probably the most up-to-date and exhaustive association between pdb chains and ec numbers is provided by sifts  <cit> , which is a collaboration between the protein data bank in europe and uniprot  <cit> . sifts incorporates a semi-automated procedure which links pdb chain entries to external biological resources such as pfam, and intenz  <cit> .
fig.  <dig> 
a) one domain provides one enzyme function;  two domains on the same chain each provide a different enzyme function;  one domain provides two different enzyme functions;  one domain provides one enzyme function, while a second domain acts as a co-factor with the first domain to provide an additional enzyme function




while all of the above mentioned approaches can provide associations between pdb protein chains and enzyme ec numbers, to our knowledge, very few approaches have been published for automatically assigning ec numbers to structural domains. scopec  <cit>  uses sequence information from swissprot and pdb entries that have been previously annotated with ec numbers in order to assign ec numbers to scop domains  <cit> . it first looks for pdb chains that fully map to swissprot entries  and that match on at least the first three ec number digits. in this way, scopec identifies single domain structures that can be associated unambiguously with an ec number. although scopec can subsequently propagate a known ec-domain association to a matching domain in a multi-domain protein, it is generally not able to resolve cases where multiple ecs are associated with multi-domain chains  for more than  <dig> scop domain families  <cit> .

the dcgo approach follows the principle that if a go term tends to be attached to proteins in uniprotkb that contain a certain domain, then that term should be associated with that domain. the statistical significance of an association is assessed against a random chance association using a hypergeometric distribution followed by multiple hypotheses testing in terms of false discovery rate. the dcgo approach addresses the issues of hierarchical structure of most biological ontologies and the nature of domain composition for multi-domain proteins. however, a mapping onto pfam domains is proposed only for go terms and not for ec numbers.

here, we describe a recommender-based approach call “ecdomainminer” for associating pfam domains with ec numbers, which builds on our previously described statistical approach  <cit> . recommender systems are a class of information filtering system  <cit>  which aim to present a list of items that might be of interest to an on-line customer. there are two main kinds of recommender systems. collaborative filtering approaches make associations by calculating the similarity between activities of users  <cit> . content-based filtering aims to predict associations between user profiles and description of items by identifying common attributes  <cit> . such an approach has recently been applied to a quite different problem of discovering novel cancer drug combinations  <cit> .

here, we use content-based filtering to associate ec numbers with pfam domains from existing ec-chain and pfam-chain associations from sifts, and from ec-sequence and pfam-sequence associations from swissprot and trembl, where protein chains and sequences serve as the common attributes through which ec-pfam associations are made. note that our approach does not attempt to identify catalytic sites or catalytic residues. rather, we aim to detect frequent co-occurrences of pfam domains and ec numbers in order to deconvolute the often complex ec-pfam relationships within multi-domain and multi-function protein chains. we assess the performance of our approach against a “gold standard” dataset derived from interpro  <cit> , and we compare our results with the pfam-ec associations derived from the dcgo database. we also show how our database of more than  <dig>  ec-pfam associations can be exploited for automatic annotation purposes.

methods
data preparation
our data sources are sifts for ec number and pfam domain annotations of pdb chains, and uniprot for ec number and pfam domain annotations of protein sequences. uniprot is divided into three parts:  the non-redundant, high quality, manually curated swissprot part,  the trembl data that are annotated using unified rules  <cit> , called here unirule, and  the rest called here trembl.

in addition, in order to parameterise and evaluate ecdomainminer, we use the interpro database  <cit>  which contains a large number of manually curated ec-pfam associations. flat data files of sifts , uniprot , and interpro  were downloaded and parsed using in-house python scripts. from the sifts data, associations between ec numbers and pdb chains, and associations between pdb chains and pfam domains were extracted. associations between uniprot sequence accession numbers  and ec numbers, and an-pfam associations were then extracted from the swissprot section of uniprot to give a dataset of swissprot associations. for the trembl entries, we collected and stored the corresponding an-ec and an-pfam associations which had been annotated by unirule, and those associations lacking unirule annotations to give two further sequence-based datasets of associations, which we call the unirule and trembl association datasets.

to avoid bias due to duplicate structures or sequences in the four source datasets, all pdb chains and uniprot sequences were grouped into clusters having 100% sequence identity using the uniref non-redundant cluster annotations  <cit> , and each cluster was assigned a cluster unique identifier . note that since just a few point mutations can dramatically change an enzyme’s substrate specificity, making clusters of identical rather than highly similar sequences avoids the risk of falsely clustering proteins that share highly similar folds but which have quite different substrates. the source ec-chain and ec-an associations were then mapped to the corresponding cid in order to make four sets of ec-cid associations. a similar mapping was applied to the source pfam-chain and pfam-an associations to give four sets of pfam-cid associations.

for the reference data, we extracted from interpro a total of  <dig> ec-pfam associations in which each ec number had all four digits and each pfam accession number referred either to a pfam domain or a pfam family . these associations were considered to be “positive examples”, and were randomly divided into two equal “training” and “test” subsets. however, for training purposes, we also needed some “negative examples”. we therefore created a set of “false” ec-pfam associations by first shuffling the cid-ec and cid-pfam associations from sifts dataset, and by then randomly collecting  <dig> wrong ec-pfam associations from the shuffled datasets. in the rest of this article, we will refer to the combined set of  <dig> randomly chosen positive examples from interpro and  <dig> randomly chosen negative examples as our “training dataset” and the remaining  <dig> positive and negative examples as our “test dataset”.

inferring ec-pfam domain associations
the main idea underlying the discovery of hidden ec-pfam associations is to assign a feature vector to each ec number and each pfam domain, where the length of the vector is given by the total number of pdb and uniprot cids, and where each vector element marks the existence  or absence  of an ec number or pfam domain annotation for a particular cid. each possible ec-pfam association is then scored using the cosine similarity between the corresponding pair of ec and pfam feature vectors.

the various steps of our content-based filter approach for finding associations between 4-digit ec numbers and pfam domains are illustrated in fig.  <dig> for the sifts dataset. first, all relations between pdb cids and ec numbers, and between pdb cids and pfam domains are extracted from sifts, as described above. joining these two lists of relations then yields a complex many-to-many graph that contains relations between ec numbers, pdb cids, and pfam domains.
fig.  <dig> a graphical illustration of calculating raw ec-pfam association scores from existing sifts ec-cid and pfam-cid associations




after this join operation, all ec-cid relations are encoded in a binary matrix, where a  <dig> represents the presence of an association and a  <dig> represents no association. this matrix is then row-normalised such that each row has unit magnitude when considered as a vector. similarly, all pdb cid-pfam relations are encoded in a second binary matrix which is column-normalised. consequently, the product of the two normalised matrices corresponds to a matrix of cosine similarity scores between the rows of the first matrix and the columns of the second matrix. thus, each element, s, of the product matrix represents a raw association score between an ec number, ec, and a pfam domain, d.

similarly, raw ec-pfam association scores are calculated from ec-cid and pfam-cid relations extracted from swissprot, trembl and unirule. then, because we wish to draw upon the relations from all four datasets, we combine the four raw scores as a weighted average to give a single normalized confidence score, c
s
ec,d: 
  <dig> csec,d=∑iwisi∑iwi 


where i∈{s
i
f
t
s,s
w
i
s
s
p
r
o
t,t
r
e
m
b
l,u
n
i
r
u
l
e} enumerates the four datasets, w
i are weight factors, to be determined, and where an individual association score, s
i, is set to zero whenever there is no data for the  pair in dataset i.

in order to find the best values for the four weight factors, receiver-operator-characteristic  curves  <cit>  were calculated using the positive examples of our interpro-based training dataset, against the remaining associations .

each weight was varied from  <dig>  to  <dig>  in steps of  <dig> , and for each combination of weights a roc curve of the ranked association scores was calculated. the combination of weights that gave the largest area under the curve  of the roc curve was selected.

defining a confidence score threshold
having determined the best weight for each data source, we next wished to determine an overall threshold for the confidence score. to do this in an objective way, we scored and ranked the members of the training dataset, and labeled them true or false according to a threshold value that was varied from  <dig>  to  <dig>  in steps of  <dig> . for each threshold value, we counted the number of positive examples above the threshold , negative examples above the threshold , negative examples below the threshold , and positive examples below the threshold . we then calculated the recall, r, precision, p, and their harmonic mean in order to obtain a “f-measure” using: 
  <dig> r=tptp+fn,p=tptp+fp,f=2rpp+r. 


the score threshold that gave the best f-measure was checked on the test subset and selected as the best threshold to use for accepting inferred associations.

exploiting the ec number hierarchy
the above approach has focused on finding explicit co-occurrences between pfam domains and 4-digit ec numbers. however, it is possible to find more associations by relaxing the criteria for co-occurrences of ec-pfam annotations by looking for matches only at the 3-digit ec level. indeed, we have observed several cases where true associations according to the interpro training dataset were assigned confidence scores below the threshold value because they had too few  instances to provide sufficient support. therefore, the above procedure was repeated using 3-digit ec numbers to give a 3-digit scoring scheme . then, any 4-digit ec-pfam association below the 4-digit threshold, but consistent with a 3-digit ec-pfam association above the 3-digit threshold, was added to the final list of accepted 4-digit ec-pfam associations. it should be clarified that “consistent” means here that the 4-digit ec number is a descendant of the 3-digit ec number and that the pfam domains are the same.

hypergeometric distribution p-value analysis
while the above procedure provides a systematic way to infer ec-pfam associations, we wished to estimate the statistical significance, and thus the degree of confidence, that might be attached to those predictions. more specifically, we wished to calculate the probability, or “p-value”, that an ec number and a pfam domain might be found to be associated simply by chance. for example, it is natural to suppose such associations can be predicted at random if ec or d are highly represented in the structure/sequence cids. in principle, in order to estimate the probability of getting our ec-pfam associations by chance, one could generate random datasets by shuffling the relations between ec numbers and cids on the one hand, and between pfam domains and cids on the other hand. however, this is quite impractical given the very large numbers of cids, ec numbers, and pfam domains, and the complexity of the filtering procedure that would have to be repeated for each shuffled version of the dataset. therefore, as in  <cit> , we assume that a random association of cids to pairs of ec and d follows a hypergeometric distribution.

letting n denote the total number of cids, n
d the number of cids related to the pfam domain d, and n
ec the number of cids related to the ec number ec, the hypergeometric probability distribution is given by 
  <dig> p=∑i=kec,dminnecin−necnd−innd, 


where p represents the probability of having a number x
ec,d equal to or greater than the observed number k
ec,d of cids associated with both d and ec. traditionally, a p-value of less than  <dig>  is taken to be statistically significant. however, because this test is applied to a large number of ec-pfam associations, we apply a bonferoni correction which takes into account the so-called family-wise error rate   <cit> . we therefore consider any p-value less than  <dig> /t as denoting a statistically significant inferred ec-pfam association in a dataset, with t the total number of tested ec-pfam associations for this dataset, in order to distinguish ec-pfam associations using both confidence scores and p-values, we classify them into three classes, “gold”, “silver”, and “bronze”. an association is assigned to the gold class if both its ec-pfam score is greater than the determined threshold and all its p-values  are statistically significant. an association is labeled silver if its score is above the threshold but one or more of its p-values is not statistically significant, or if its score is below the threshold  but all its p-values are statistically significant. all other associations are labeled bronze.

RESULTS
data source weights and score threshold
after clustering identical structures and sequences, and calculating raw association scores , our merged dataset contains  <dig> sifts,  <dig>  swissprot,  <dig>  trembl, and  <dig>  unirule candidate ec-pfam associations, giving a total of  <dig>  distinct ec-pfam associations to draw from table  <dig>  in our roc-based training procedure, the best auc value of  <dig>  was obtained with weights w
sifts= <dig> , w
swissprot= <dig> , w
trembl= <dig> , and w
unirule= <dig> . these weights clearly give greater importance to the candidate associations in swissprot and unirule, respectively, compared to those in sifts and trembl.
8
2
5
6
3
7
0
1
3
0
2
2
2
0
,
7
2
8
4
4
5
5
3
6
1
3
cs is the confidence score

all italicized entries are calculated by ecdomainminer




the optimal score threshold was determined according to the f-measure training procedure using our training dataset . this gave a score threshold of  <dig>  for a maximum f-measure of  <dig> . applying this threshold to the test dataset yielded a comparable f-measure of  <dig> , and precision and recall values of  <dig>  and  <dig> , respectively.

global analysis of inferred ec-pfam associations
the results of the ecdomainminer approach are summarized in table  <dig>  this table shows the numbers of 4-digit ec-pfam associations along with the numbers of distinct ec numbers and pfam entries involved in those associations for the four sources and the merged datasets before filtering.

after applying the  <dig>  score threshold, the number of ec-pfam associations falls to  <dig>  with an overlap of about 96% of interpro reference associations. using the relaxed 3-digit association approach , the final ecdomainminer dataset contains  <dig>  ec-pfam associations that overlap by  <dig> % the interpro reference dataset. these numbers show that our approach efficiently retrieves the interpro reference ec-pfam associations, including a small percentage  that have a low confidence score.
fig.  <dig> scale-up factors for ecdomainminer compared with interpro. ratios between the numbers in ecdomainminer and in interpro have been calculated for associations , ec numbers , and pfam domains  after dividing the dataset according to each ec branch represented in the associations  and for all the dataset . 1: oxydoreductases; 2: transferases; 3: hydrolases; 4: lyases; 5: isomerases; 6: ligases




the greatest ecdomainminer scale-up factor occurs for associations involving the oxydoreductases . the smaller scale-up factor observed for pfam domains  can be explained by the fact that not all pfam domains display an enzymatic activity. thus there is a natural limit in the coverage of pfam database by our ec-pfam associations, whereas there is no such limit for the coverage of ec numbers. combining the confidence scores with the calculated p-values as described in “hypergeometric distribution p-value analysis” section gave  <dig> gold associations ,  <dig>  silver associations , and  <dig> bronze associations.

comparison with dcgo
in order to compare ecdomainminer with the dcgo approach  <cit> , we extracted scop2ec associations from the domain2ec file available from the dcgo database . the domain2ec file includes  <dig> associations with 4-digit ec numbers, of which  <dig> are related to scop “families” and  <dig> to scop “superfamilies”. because interpro only tabulates scop family domains, we limited our comparison to the set of  <dig> scop2ec family associations. the scop families were mapped to pfam families according to interpro mapping files in order to generate a set of  <dig> “pfam2ec” associations . this set  was compared with the set of all  <dig>  merged ec-pfam associations found by ecdomainminer .
fig.  <dig> venn diagram showing the intersection between a pfam2ec  from dcgo, b all-merged , and c ecdomainminer . region i  is the portion of  for which there is no data in any of our four source datasets. region ii  is the portion of  that exists in  but is not retained in ecdomainminer . region iii  is the overlap between  and . region iv  is the portion of ecdomainminer associations that are not available from scop2ec. region v  is the rest of the merged set of ec-pfam source associations that are absent from  and not retained as gold, silver, or bronze associations by ecdomainminer




this comparison showed that a total of  <dig> pfam2ec associations from scop2ec are not present in our merged dataset. the remaining  <dig> pfam2ec associations were then compared with the  <dig>  associations calculated by ecdomainminer . this comparison  produced a total of  <dig> ec-pfam associations which are common to pfam2ec and ecdomainminer, indicating that ecdomainminer agrees with  <dig> % of the pfam2ec associations from dcgo. furthemore, this comparison also shows that ecdomainminer result set contains  <dig>   additional ec-pfam associations that are not available through dcgo.

selecting plausible associations in multi-domain proteins
because ecdomainminer finds many new ec-pfam associations, it is important to ask to what extent it also might produce false associations. firstly, we recall that ecdomainminer eliminated more than 92%  of low-scoring associations from the merged source dataset. this suggests that most of the eliminated associations involve pfam domains that are not catalytically active. indeed, if a pfam domain is not regularly associated with protein chains or sequences having an enzymatic activity, the ecdomainminer score for that domain is very low, and hence no ec number is assigned to that domain. this applies in particular to accessory domains that can co-occur with various catalytic domains in multi-domain proteins. a good example of such an accessory domain is pf <dig>  which is a part of  <dig> different architectures. among these architectures, there are  <dig> and  <dig> different architectures, which additionally contain pf <dig>  and pf <dig> , respectively. according to pfam website, pf <dig> is catalytically inactive but pf <dig> and pf <dig> are active. in fact, ecdomainminer assigns pf <dig> to  <dig> different ec numbers with a majority of ec  <dig> . <dig> , and pf <dig> to  <dig> different ec numbers that all start with  <dig>  . however, ecdomainminer does not assign pf <dig> to any ec number. this is because a large number of protein chains and sequences containing either pf <dig> or pf <dig> and associated with the above-mentioned ec activities, do not contain pf <dig>  in other words the catalytic activities of pf <dig> and pf <dig> are not strictly dependent on the presence of pf <dig>  moreover, the sifts and uniprot databases indicate that pf <dig> is associated with  <dig> different pdb chains and  <dig> different protein sequences. however, none of those pdb chains are associated with an ec number in sifts and only  <dig> protein sequences  are associated with at least one 4-digit ec number. consequently, the association score of pf <dig> with any ec number is zero for both the sifts and swissprot datasets and is quite low  for both the trembl and unirule datasets. thus, the confidence scores of all of the associations involving pf <dig> in ecdomainminer are lower than our threshold of  <dig> , and so these candidate associations are filtered out. this mechanism explains how an accessory domain is not assigned to an ec number by ecdomainminer, and suggests that most of the retained associations are proper candidates for domain functional annotation.

single and multiple ec-pfam associations
exploring the ecdomainminer results readily reveals that a given ec number or pfam domain can be involved in one or more distinct ec-pfam associations. figure  <dig> shows the relative distribution of ec numbers and pfam domains according to the number of ec-pfam associations they are involved in. this figure shows that  <dig> out of  <dig> ec numbers and  <dig> out of  <dig> pfam domains are involved in a single ec-pfam association.
fig.  <dig> distribution of ec numbers  and pfam domains  in multiple associations. numbers  represent the arity of the association in which a given ec number, respectively pfam domain, is involved. in addition, for each arity, the normalized number of gold, silver, and bronze associations is plotted. it can be observed that for arities equal to or greater than  <dig>  the proportion of silver associations is always the highest but significant numbers of gold associations remain present even for high arity numbers




although this represents rather high proportions of the total number of ec numbers and pfam domains in ecdomainminer , the intersection of the concerned ec-pfam single associations yields a list of only  <dig> one-to-one ec-pfam associations, of which  <dig>   <dig>  and  <dig> are gold, silver, and bronze associations, respectively. comparison with the interpro reference dataset reveals that two thirds  of these one-to-one associations are novel compared to interpro. interestingly, we confirmed in our source datasets that all of these associations involve single-domain proteins. thus, these unambiguous associations constitute the most reliable novel associations calculated by ecdomainminer.

the complete list of one-to-one ec-pfam associations found by ecdomainminer may be downloaded from the ecdomainminer web site. interestingly  <dig> of these associations  concern “duf”  or “upf”  pfam entries. these are listed in part  of table  <dig> in order of decreasing confidence score.
 <dig> . <dig> 
 <dig> . <dig> 
the ‘pdbs ’ column contains  <dig> counts of pdb chains containing the mentioned pfam domain and having either the same ec annotation in sifts as calculated by ecdomainminer , or different ec annotations between sifts and ecdomainminer , or no ec annotations in sifts . complete lists of pdb identifiers may be retrieved from the ecdomainminer web server




these examples demonstrate that ecdomainminer can be used to enrich domain annotation. visual inspection of the one-to-one ec-pfam associations indicates that about one quarter of them  could have been retrieved simply by comparing the names associated with the ec number and the pfam identifier, which are nearly identical . however, only  <dig> of these associations were in fact already known in interpro. clearly, minor and unpredictable spelling differences impair the automatic retrieval of such similar but non-identical ec and pfam names. nonetheless, while these associations could be found by clever text matching, we emphasise that ecdomainminer’s confidence scores and p-values provide a level of support for each association that would be very difficult to obtain from text mining alone.

the multi-partner associations calculated by ecdomainminer provide many more complex ec-pfam associations. as a first analysis of such multiple associations, we looked for obligate pairs or tuples of pfam domains that are always associated with a given ec number. briefly, for any pair of pfam domains, , associated with the same ec number, ec,  we reject those pairs for which at least one ec-annotated cid  occurs in relation with d
 <dig> and not d
 <dig> or with d
 <dig> and not d
 <dig>   for all other pairs we calculate for each source dataset the ratio of the number of ec-annotated cids related to d
 <dig> and d
 <dig>  to the total number of ec-annotated cids. a support ratio of  <dig> means that all cids annotated with ec in a dataset are also related to d
 <dig> and d
 <dig>  a similar algorithm was used for triplets and quadruples of pfam domains. for a support ratio of  <dig> in at least one source dataset, we found  <dig>   <dig> and  <dig> obligate associations between an ec number and a pair, a triplet or a quadruplet of pfam domains. these associations are available from the ecdomainminer website. two examples are given in part  of table  <dig> 

interestingly, filtering the names of the pfam domains with the expressions “n-terminal” and “c-terminal” yielded  <dig> obligate pairs containing both a n-terminal and a c-terminal domain of the same function. this indicates that our approach is finding enzymes in which the catalytic function is provided by the interface between two consecutive pfam domains. only  <dig> of these obligate pair associations are currently documented in interpro.

annotating pdb chains with ec numbers
our analysis of the december  <dig> release of the sifts database reveals that about 45% of pdb entries lack an ec number annotation. of course, such an annotation is not expected to be present in all pdb entries because not all proteins have enzymatic activity. nonetheless, it is interesting to use ecdomainminer to analyse the number of pdb entries that contain pfam domains which are present in ec-pfam associations. table  <dig> shows that a total of  <dig>  pdb chains lacking ec annotations in sifts include at least one of the  <dig> pfam domains present in ecdomainminer.



overall, we calculated that these chains map to a total of  <dig>  pdb entries that could benefit from the additional annotations inferred by ecdomainminer. for those chains lacking ec annotations, ecdomainminer finds gold, silver, and bronze ec-pfam associations for  <dig> ,  <dig>  and  <dig>  pdb chains, respectively. in particular,  <dig> pdb chains could benefit from our dataset of  <dig> non ambiguous one-to-one ec-pfam associations.

the ecdomainminer web server
the ecdomainminer web server may be queried by ec number or pfam domain. thus, if one wishes to search for associations for a protein chain that currently lacks any ec annotation in the pdb , one first needs to retrieve from the pdb the pfam domain that it contains . then, querying the ecdomainminer server with each pfam domain identifier will show the associated ec numbers , along with the associated filtering scores and quality classes. in this example, ecdomainminer finds a gold quality association between pf <dig>  present in pdb chain 2q7xa, and ec number  <dig> . <dig>   which consequently can be associated with pdb entry 2q7x. interestingly, pdb entry 2q7x is described as a putative phospho transferase from streptococcus pneumoniae tigr <dig>  which is consistent with the enzymatic activity found by ecdomainminer, and which could not be deduced from the pfam domain name .

CONCLUSIONS
we have presented a content-based filtering approach for associating ec numbers with pfam domains. this approach has been shown to be able to infer a total of  <dig>  non-redundant ec-pfam associations, which corresponds to over  <dig> times as many ec-pfam associations as currently exist in interpro. furthermore, thanks to our calculated p-values, we have assigned an intuitive quality rating  to each ec-pfam association found. these calculated associations are publicly available on the ecdomainminer web site. we anticipate that our content-based filtering approach may be applied to other annotation vocabularies or ontologies, and we are currently working to extend our approach to discover new go-pfam annotations.

we believe that enriching protein chain annotations will facilitate a better understanding and exploitation of structure-function relationships at the domain level. while many of the associations calculated by ecdomainminer are consistent with those recently made available by the domain-centric dcgo approach for finding ec-scop associations, the ecdomainminer results set contains many more associations than dcgo. indeed, the ecdomainminer result set contains  <dig>  ec-pfam which are not available in dcgo. our analysis of the simple one-to-one associations found by ecdomainminer shows that several duf or upf entries in pfam may be assigned functions from the ec classification, and that obvious inconsistencies in the annotation texts may easily be corrected or unified. however, only a relatively small number  of ec-pfam associations in our result set are simple one-to-one associations, indicating that there exist a large number of many-to-many relations between ec numbers and pfam domains. further analyses of these complex associations using graph database and machine-learning techniques could reveal many more hidden protein structure-function relationships.

abbreviations
anaccession numbers

aucarea under the curve

cidcluster unique identifier

csconfidence score

dcgodomain centric gene ontology database

dufdomain of unknown function

ecenzyme commission

fnfalse negative

fpfalse positive

gogene ontology

nmrnuclear magnetic resonnance

pprecision

pdbprotein data bank

pfamprotein family database

rrecall

rocreceiver operator characteristics

scopstructural classification of proteins

scopeca database of catalytic domains

siftsstructure integration with function, taxonomy and sequence

tntrue negative

tptrue positive

trembltranslated sequences from the european molecular biology laboratory bank

uniprotkbuniprot knowledge base

upfuncharacterized protein family

