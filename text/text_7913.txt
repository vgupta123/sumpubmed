BACKGROUND
in statistics, bootstrapping is a general purpose parameter estimation approach falling within a broader class of resampling methods  <cit> . bootstrapping allows one to assess whether the data distribution has been influenced by stochastic effects. non-parametric bootstrapping proceeds by generating pseudo-replicates of the observed data. each of the pseudo-replicated data sets is obtained by random sampling with replacement from the original data set. on the other hand, parametric bootstrapping involves sampling from a fitted parametric model, obtained by substituting the maximum likelihood estimator for the unknown population parameter.

non-parametric bootstrapping is the most commonly used robustness estimation method in phylogenetics  <cit> . it is applied to evaluate the reliability of a phylogenetic tree by examining how often a particular clade, or the corresponding branch, in the tree appears when the original nucleotides or amino acids are resampled. the tree inferring method used to reconstruct the phylogeny from the original data should be carried out to infer the phylogenies from the resampled data. the frequency with which a given branch is found represents its bootstrap support .

different parametric bootstrapping procedures related to phylogenetic analysis were proposed by huelsenbeck et al.  <cit> , swofford et al.  <cit>  and goldman et al.  <cit> . parametric bootstrapping can be carried out when we assume an explicit model of sequence evolution. in this case, the original data are used to estimate the stochastic evolutionary parameters, which may include the site-specific rates of evolution, the distribution from which the rates of evolution are drawn or the substitution probabilities on each branch, characterizing the original data set.

in spite of concerns, controversy and confusion over the interpretation of bootstrap scores  <cit> , bootstrap analysis has been playing a prominent role in many phylogenetic studies and will likely remain a key method for assessing branch support of phylogenetic trees  <cit> . it is often assumed, for instance, that the bootstrap support of a branch represents the probability that this branch is correct. however, this point of view is over-simplified  <cit> . for example, in the case of the famous felsenstein zone quartet tree the maximum parsimony and upgma methods converge to the wrong tree as the sequence length increases, and thus both assign very high bootstrap scores to the clades of the wrong phylogeny  <cit> . the best way to interpret the bootstrap support of a given clade is to consider that it indicates the probability that this clade would continue to be found if the same phylogenetic inferring method was applied to pseudo-replicated data having the same empirical distribution as the original data set  <cit> .

in this article we introduce two weighting schemes which can be used to assign weights to each of the trees obtained from pseudo-replicated data. one of them is based on the ls estimate of "pseudo-replicated" trees, whereas the second one proceeds by assessing bootstrap support of those trees . these two weighting schemes can be used to correct the standard non-parametric bootstrapping procedure that assign equal weights to each of the phylogenies obtained from the pseudo-replicated sequences. such a correction will take into account the quality of each pseudo-replicated phylogeny. the ls coefficient, as well as the ml function value or the maximum parsimony score, can be used as an estimate of how close the distance matrix obtained from the pseudo-replicated sequences  is to the space of trees. for instance, if it is located far away from this space  compared to the other trees inferred form pseudo-replicates, then a low weight should be assigned to this tree . alternatively, secondary bootstrapping can be performed to obtain a robustness estimate for each of the trees built from pseudo-replicates. each of the pseudo-replicated multiple sequence alignments  obtained from the original data can be resampled once again to obtain secondary pseudo-replicated multiple sequence alignments  that can be, in turn, used to assess the bootstrap support of the tree inferred from pra. in this way, an average bootstrap score of internal branches of each pseudo-replicated tree can be used to assign a weight to this tree. thus, a higher average bootstrap score of a "pseudo-replicated" tree will correspond to a higher weight assigned to this tree.

this article is organized as follows. in the methods section, we present two weighting schemes, based on the ls and secondary bootstrapping, used to assign weights to "pseudo-replicated" trees. there we also discuss the possibility of normalization of the obtained tree estimates. then, in the results section, we present the simulation results for the traditional  bootstrapping and four different bootstrapping procedures inducing weights, while considering two real data sets of  <dig> dna sequences  and  <dig> protein sequences . in these simulations, we also compare the robustness of the competing bootstrapping procedures by assessing their performances under the condition when different amounts of noise were added to the original data. the discussion section compares the proposed methods with standard bootstrap correction procedures and explains the rationale of our study. finally, the conclusion section summarizes the introduced weighting schemes and presents the ideas for future research.

methods
here we discuss four new weighting schemes which can be used in bootstrapping to assign weights to the trees obtained from pseudo-replicated sequences. specifically, the ls  and secondary bootstrap score estimates will be computed for each pseudo-replicated phylogeny. the normalized ls and normalized secondary bootstrap score estimates will be also considered. all these estimates can be used to generate weights of pseudo-replicated trees. a "corrected" bootstrapping procedure based on the obtained weights will be presented.

let x be a set of n taxa  and a be a multiple sequence alignment obtained for the taxa from x. we assume that each sequence in a has l nucleotides . the model of nucleotide substitution that best fits the data can then be determined and the corresponding data correction applied. a phylogenetic tree t can be inferred by a tree-building algorithm . the standard non-parametric bootstrap scores can be calculated using the following procedure  <cit> :

 l columns of a are randomly chosen with replacements, giving rise to a pseudo-replicated sequence alignment pra with n rows of l columns. this procedure is repeated n times and a set of pseudo-replicated sequence alignments pra <dig>  pra <dig> ..., pran is obtained.

 phylogenetic trees t <dig>  t <dig> ..., and tn are then reconstructed from the pseudo-replicated alignments pra <dig>  pra <dig> ..., and pran, by means of the same tree-inferring algorithm that was used to build t.

 the topology of the original tree t is then compared to the topologies of the trees built from pseudo-replicates. the bootstrap score of the branch k in t  is the percentage of time that k is found in the set of trees t <dig>  t <dig> ..., and tn. it is computed as follows:   

where bi is the set of internal branches of the tree ti, given by their non-trivial splits or bipartitions.

ls-based bootstrapping
the least-squares  coefficient can be used to estimate how well the given distance matrix d, obtained from the multiple sequence alignment a using a specific sequence-to-distance transformation, approximates the patristic distance  Δ between the leaves of the phylogenetic tree t obtained from d using the selected tree-building algorithm. in this study, the jukes-cantor distance  <cit>  for the dna sequences and kimura protein distance  <cit>  for the amino acids were employed. the least-squares coefficient, ls, between d and Δ is computed as follows:   

where d is the distance between the taxa i and j, and δ is the patristic distance between the leaves labelled by i and j in the phylogenetic tree t.

we propose to use the ls coefficient to assign individual weights to all trees obtained from pseudo-replicated data . obviously, the smaller the value of the ls coefficient, the better the phylogenetic tree fits the corresponding distance matrix d. instead of using equal weights for all trees obtained from pseudo-replicated data, as the traditional bootstrapping does, the following four-step weighting scheme was adopted in this study:

 <dig>  given the original sequence alignment a, we first computed from it a series of n pseudo-replicated alignments pra <dig>  pra <dig> ..., and pran, using the traditional bootstrapping strategy. the jukes-cantor  <cit>  evolutionary model was then applied to obtain the distance matrices m, prm <dig>  prm <dig> ..., and prmn, from a, pra <dig>  pra <dig> ..., and pran, respectively. phylogenetic trees t, t <dig>  t <dig> ..., and tn and the corresponding tree metric matrices Δ, Δ <dig>  Δ <dig> ..., and Δn were calculated from these distance matrices using neighbor joining  <cit> .

 <dig>  the vector ls = {lst | t =  <dig>   <dig> ..., n}, comprising the ls coefficients for all n trees obtained from pseudo-replicates was then computed:   

where dt  and δt  are, respectively, the distance between the taxa i and j in the pseudo-replicated distance matrix prmt and the patristic distance between the leaves labelled by i and j in the tree t inferred from prmt . the maximum likelihood  and maximum parsimony  estimates can be used at this step as an alternative to ls. in the case of maximum parsimony, multiple optimal trees are usually generated for each replicate . the resultant multiple pseudo-replicated trees can be treated in two following alternative ways: first, a consensus tree for these multiple trees can be established  and then used in the computations in the same way that the unique nj tree; second, each of the obtained multiple pseudo-replicated trees can directly contribute to the computation of the weighted bootstrap scores, but the resulting weights  of each of those trees should be in turn divided by the cardinality of the set of optimal trees obtained for the considered set of pseudo-replicated sequences.

 <dig>  at this step the weights of all trees,w = {wt | t =  <dig>   <dig> ..., n}, obtained from pseudo-replicates were computed by solving the following system of equations:   

the solution of the system  is as follows :   

 <dig>  the ls-based bootstrap scores of the internal branches of t, denoted here as ls_bs = {ls_bsk | k =  <dig>   <dig> ..., m}, were then determined. the ls-based bootstrap score of the branch k in t was computed as follows:   

where m is the number of internal branches of the original tree t and bt is the set of internal branches of the tree t.

normalized ls-based bootstrapping
normalized ls-based bootstrap scores can also be computed and used to estimate the robustness of a phylogenetic tree. the normalization of ls, which should in most cases accentuate the difference between the ls coefficients associated with the phylogenetic trees inferred from pseudo-replicated data, was performed in the following way:   

where norm_ls = {norm_lst | t =  <dig>   <dig> ..., n} is the normalized vector of the least-squares coefficients computed after step  <dig>  and min and max are, respectively, the minimal and maximal values of the set {ls <dig>  ls <dig> ..., lsn} computed at step  <dig>  obviously, all the values of norm_lst  are located in the  <cit>  interval. steps  <dig> and  <dig> were then carried out as described above using the normalized ls coefficients, and the weight of the tree t was computed as follows:   

secondary bootstrapping
secondary bootstrap scores can be also used to assign weights to phylogenies inferred from pseudo-replicates. the weight of each phylogeny inferred from  pseudo-replicated sequences can be assessed as the average of bootstrap scores of its internal branches. a pseudo-replicated sequence alignment prai  can be used to create ns secondary pseudo-replicated alignments sprai <dig>  sprai <dig> ..., sprains. as in traditional bootstrapping, the columns from prai can be randomly chosen with replacements to create secondary pseudo-replicates. phylogenetic trees ti <dig>  ti <dig> ..., and tins can then be inferred from the pseudo-replicated alignments sprai <dig>  sprai <dig> ..., sprains, and the tree ti inferred from prai, using the same tree-building algorithm . the topology of ti can then be compared to the topologies of the trees built from the secondary pseudo-replicates. the bootstrap scores of all internal branches of ti can be computed, and the average bootstrap score  characterizing the overall bootstrap support of the tree ti can be estimated.

when either the ml or mp approach is used, possible multiple optimal pseudo-replicated phylogenies can be treated in two ways: first, the mean of their average bootstrap scores can be taken into account in formulas  <dig> and  <dig> and then their consensus tree in formula 11; second, each of the obtained optimal ms or ml pseudo-replicated trees can directly contribute to the computation of the weighted bootstrap scores but their resulting weights  should be divided by the cardinality of the set of optimal pseudo-replicated trees.

the weights w = {wt | t =  <dig>   <dig> ..., n} of all the trees ti  obtained from primary pseudo-replicates can be computed by solving the following equation system:   

the solution of the system  is as follows :   

obviously, the bigger the average secondary bootstrap score assigned to a tree, the bigger the tree weight.

the bootstrap scores of the internal branches of t based on secondary bootstrapping, and denoted as ss_bs = {ss_bsk | k =  <dig>   <dig> ..., m}, can then be calculated. thus, the bootstrap score of the branch k in t can be calculated as follows:   

where m is the number of internal branches of the original tree t and bt is the set of internal branches of the tree t.

normalized secondary bootstrapping
as in the case of the ls-based bootstrapping, the normalized secondary bootstrap scores can be computed and used to estimate the tree robustness. the normalization, which should emphasize the difference between the average secondary bootstrap scores of phylogenetic trees inferred from primary pseudo-replicates, can be carried out in the following way:   

where norm_ss = {norm_sst | t =  <dig>   <dig> ..., n} is the normalized vector of the average secondary bootstrap scores of primary pseudo-replicated trees t <dig> ..., tn, and min and max are, respectively, the minimal and maximal values of the set {ss <dig> ..., ssn}. then, the weight of the primary pseudo-replicated tree t can be computed as follows:   

RESULTS
in this section we apply the four discussed weighting schemes to examine two real data sets consisting, first, of protein-coding mitochondrial dna sequences for a group of  <dig> primate species  <cit>  and, second, of  <dig> phers synthetase amino acid sequences for a group of  <dig> organisms, including bacteria, archaea and eukarya  <cit> .

data description
the first examined data set was originally described by hayasaka et al.  <cit> . the latter authors determined nucleotide sequences of homologous 896-base fragments of mitochondrial dnas  derived from four species of old-world monkeys, one species of new-world monkeys, two species of prosimians and five species of hominoids. they then reconstructed a phylogenetic tree for this group of  <dig> primates. the internal branches of this tree have very high bootstrap support, varying from  <dig> to 100% . this data set was also analyzed in a number of evolutionary studies  <cit> .

the second considered data set includes  <dig> phers synthetase sequences with  <dig> bases for  <dig> bacteria,  <dig> archaea and  <dig> eukarya organisms originally studied by woese et al.  <cit> . phers is the only class ii synthetase in the nun codon group, and it has no close relatives within that class. for both the α- and β-subunits of phers, significant length differences distinguish the bacterial subunits from their archaeal counterparts. woese et al.  <cit>  found that the aarss were very informative about the evolutionary process. the analysis of different phylogenetic trees for a number of considered aarss revealed the following features: the aarss evolutionary relationships were mostly conform to established species phylogeny; a strong distinction existed between bacterial and archaeal types of aarss; horizontal transfer of aars genes between archaea and bacteria was predicted . in fact, phers shows classical canonical pattern with the only exception being the spirochetes  pherss. they are of the archaeal, not the bacterial genre, and are closely related to the clade formed by the archaea pyrococcus horikoshii, pyrobaculum aerophilum and sulfolobus solfataricus . the considered phers data set was also studied intensively  <cit> .

distribution of the ls coefficients and average secondary bootstrap scores
first, we examined the distribution of the least-squares  coefficients and secondary bootstrap scores  for the primate  <cit>  and phers synthetase  <cit>  data sets presented above . for both original multiple sequence alignments , we also created their "noisy" variants by modifying 10% of the nucleotides for the primate msa and amino acids for the phers msa . the noise-affected data were generated in order to investigate how the ls and sbs functions change when the uncertainty is introduced in the data. figures  <dig> and  <dig> show the distribution of ls and sbs for the original  and "noisy"  msas as well as for  <dig> pseudo-replicated data sets obtained from each of them.

figures 3a and 4a show that the ls coefficients corresponding to the original msas  are very low . this means that the original msas were generally much closer to the space of phylogenetic trees than the pseudo-replicated msas obtained from them. after the addition of noise  the ls coefficients corresponding to the original and pseudo-replicated msas obviously increased, but the difference between them emphasized: the ls coefficient of both original trees  became the smallest ones in both cases.

on the other hand, the average sbs corresponding to the original trees  were not among the highest ones compared to those of the "pseudo-replicated" trees. this means that the original trees were not necessarily more robust than their pseudo-replicated counterparts. after the addition of noise , the robustness of the original and "pseudo-replicated" trees decreased as expected. for the noisy data, the average sbs of the original trees remained only slightly higher than the mean of the average sbs of the "pseudo-replicated" trees.

simulation study
a simulation study was conducted to evaluate the performances of the four introduced weighting strategies, including the ls and sbs-based  bootstrapping. the traditional bootstrapping scheme, assigning the weights of  <dig> to all pseudo-replicated trees, was also tested. the simulations were carried out on the primate  <cit>  and phers synthetase  <cit>  data sets discussed above.

in order to examine the robustness of each weighting strategy, a simulation with "noisy" sequences was performed. a random noise varying from  <dig> to 10%  was added to both original msas  to create the variants of "noisy" data. to simulate noisy data in the aligned sequences, we tested two experimental strategies. the first strategy consisted of changing at random a fixed percentage of nucleotides from the observed sequence, whereas the second one consisted of the random elimination or addition of blocks of nucleotides  of different sizes. in this section, we are presenting the combined results  for these two strategies detailed below.

strategy  <dig>  for a given noise percentage , each nucleotide or amino acid of the original data set had the probability of nr% to change its state. if the nucleotide or amino acid x was chosen to be affected by noise, it was replaced by a different nucleotide or amino acid. all the other nucleotides or amino acids, different from x, had an equal probability  to replace x in the msa. the sequences were not realigned after the addition of noise.

strategy  <dig>  for a given percentage of noise , the random elimination or addition of blocks of nucleotides  of different sizes  was performed. the elimination of blocks of nucleotides or amino acids imitates possible deletion events and introduces new gaps in the multiple sequence alignment. the addition of short sequences of nucleotides or amino acids imitates possible insertion events.

the seqboot program from the phylip package  <cit>  was used to generate multiple resampled versions of the original primate and phers msa. for each execution,  <dig> replicates of the original data sets were generated. all the other parameters used were the default seqboot parameters. the jukes-cantor  <cit> , in the case of nucleotides, and kimura protein  <cit> , in the case of amino acids, sequence-to-distance transformations followed by the neighbor-joining algorithm  <cit>  were carried out to infer phylogenetic trees. the five bootstrapping strategies  were tested on such noisy pseudo-replicates. for each of the five strategies, the following measure, denoted here as least-squares bootstrap deviation - ls_bd, was calculated as follows to assess the strategy robustness:   

where bsk is the bootstrap score of the internal branch k in the original tree t inferred from the original msa , bsnk is the bootstrap score of the internal branch k in the tree tnoisy obtained from the original msa affected by noise, and m is the number of internal branches in the original tree t .

figures  <dig> and  <dig> report, respectively, the primate  <cit>  and phers  <cit>  phylogenies built with neighbor-joining. it is worth noting that the primate phylogenetic tree  perfectly corresponds to that previously obtained by makarenkov and legendre  <cit> , whereas the phers phylogeny  was different from the tree obtained by woese et al.  <cit>  and boc et al.  <cit> , using the ml methods. the most noticeable difference between the presented nj phylogeny  and the ml trees built by woese et al.  <cit>  and boc et al.  <cit>  is that in the tree in figure  <dig> the spirochetes  are not specifically related to the archaebacterium p. horikoshii . the bootstrap scores provided by the five competing bootstrapping strategies  were calculated for the original and noisy data and depicted in figure  <dig>  and figure  <dig> and table  <dig> . the results presented in figures  <dig> and  <dig>  and in table  <dig> demonstrate that the normalized secondary bootstrap scores were usually higher than the bootstrap scores yielded by the four other bootstrapping strategies, including the traditional bootstrapping method. this trend was maintained for both original and noisy data. on the other hand, the bootstrap scores provided by the secondary bootstrapping, ls-based bootstrapping, and normalized ls-based bootstrapping were very similar to those obtained with the traditional unweighted bootstrapping. for instance for the original  phers data, the standard bootstrap scores were lower than those given by the normalized secondary bootstrap scores strategy in  <dig> of  <dig> cases , equal in  <dig> cases  and higher in only  <dig> cases . thus, when a 10%-noise was added to the data, the difference in the bootstrap scores even emphasized. the indicated scores for the original and noisy data, for each of the tested noise percentages, were the averages calculated over  <dig> repeated calculations .

comparison of bootstrap scores for the five bootstrapping strategies considered in this study. the comparison was made for all  <dig> internal branches of the phylogenetic trees inferred from the original  and noisy  phers sequences. the branch numbers correspond to those indicated in figure  <dig>  standard bootstrap scores , secondary bootstrap scores , ls-based bootstrap scores , normalized secondary bootstrap scores  and normalized ls-based bootstrap scores  are reported.

moreover, figures  <dig> and  <dig>  representing, respectively, the primate  <cit>  and phers  <cit>  data, illustrate the difference in the following parameters between the five bootstrapping strategies: sum of bootstrap scores of internal branches  and least-squares bootstrap deviation . the latter parameter, computed according to formula  <dig>  can be viewed as an indicator of the method's robustness. indeed, the lower the method sensitivity regarding the noise factor, the smaller the least-squares bootstrap deviation. the results in figures 7- <dig> are shown depending on the noise percentage . when observing the sum of bootstrap scores and the least-squares bootstrap deviation curves, one can notice that the normalized secondary bootstrap scores strategy always provided the highest totals of bootstrap scores of internal branches and the lowest least-squares bootstrap deviations regardless the noise level. for instance for the primate data set and the normalized secondary bootstrapping, the least-squares bootstrap deviation, ls_bd, between the noise-free and noisy bootstrap scores  was equal to  <dig> , while for the traditional bootstrapping, the ls_bd coefficient was much higher and equal to  <dig> . alternatively, for the phers data set and the normalized secondary bootstrapping, the ls_bd coefficient was equal to  <dig> , while for the traditional bootstrapping it was also much higher and equal to  <dig> . the additional simulations conducted with larger noise levels  confirmed the observed trend.

discussion
the controversial study conducted by hillis and bull  <cit>  claimed that the traditional bootstrap confidence values used to assess tree accuracy are consistently biased downward. as a response to hillis and bull  <cit> , felsenstein and kishino  <cit>  argued that the phenomena noticed in  <cit>  are not the result of bootstrap use but rather a result of summarizing the evidence for a given clade using the associated p-values.

later on, efron et al.  <cit>  introduced a method for bias correction to estimate more accurate p-values for topological inference through a correction based on first-order p-values. the simplex of possible solutions is partitioned into regions corresponding to different tree topologies  <cit> . efron's study concluded that the confidence values  obtained using the traditional felsenstein's bootstrapping are not systematically conservative  as was stated by bull and hillis  <cit> . depending on the local configuration of the topological space around the actual tree, the bias may be conservative or liberal. according to efron's study  <cit> , felsenstein's method provides a reasonable first approximation to the actual confidence levels of the observed tree clades. one interpretation of non-parametric bootstrapping that is compatible with bayesian inference was also proposed : "in a bayesian sense,  can be thought of as reasonable assessments of error". efron et al.  <cit>  defined another type of non-bayesian confidence level  , such that  and  converge at rate , as the sequence length n increases. the methods discussed in  <cit>  and  <cit>  assess the curvature of the solution boundary, which is used in an analytical correction formula to estimate the magnitude of the shifted bootstrap distribution.

in  <cit> , efron and tibshirani introduced the "problem of regions". there, one wishes to know which of a discrete set of possibilities applies to a continuous parameter vector. efron and tibshirani gave several examples of problem of regions that appear in real applications, including testing significance for model selection and for the number of density peaks. they concluded that, at some point, third-order and higher terms may be necessary to obtain sufficiently accurate confidence estimates  <cit> . both of the latter studies used weighting procedures. however, the weights described in  are not applied to pseudo-replicated trees, as in our study, but to the first-level bootstrap vectors. the procedure of reweighting the first-order resamples is carried out using a simple importance sampling scheme . according to  <cit> , reweighting the first-order bootstrap samples converts, from a bayesian point of view, the flat-prior of a posteriori probability distribution of the related regions into the appropriate welch-peers a posteriori probabilities.

furthermore, the method introduced in this paper is based on the quality of pseudo-replicated trees  used in the classical felsenstein's bootstrapping, whereas the efron method  <cit> , based on an iterative bootstrapping, searches directly for the improvement of the bootstrap scores robustness. it is worth noting that the second-level bootstrap vectors considered in  <cit>   are generated only for the first-level bootstrap vectors located on the boundary of the clade whose robustness is evaluated.

in their recent work, gullo et al.  <cit>  discussed the usage of different weighting schemes for clustering ensembles, including the problems of consensus tree reconstruction and bootstrap support computation. clustering ensembles  have recently emerged as a powerful tool to address traditional clustering issues  <cit> . given a data collection, a set of clustering solutions , can be generated by varying the parameter settings. given a clustering ensemble , a major goal is to extract a consensus partition , taking into account information available from the given set of clustering solutions. gullo et al.  <cit>  provided the justification for several weighting schemes to discriminate among the clustering solutions, including the one adopted in the present study. each of these schemes is based on theoretical considerations on ensemble diversity and computes the vector of weights w =  in such a way that wi ∈ , for each i ∈ , and . the first of those schemes, called single weighting , presents the most intuitive way to weight each clustering solution . the key idea consists in computing each individual cluster diversity measure  and then in assigning weights that are proportional to individual cluster diversities. in fact, formulas  <dig> and  <dig> used in our study to determine the individual weights of pseudo-replicated trees are analogous to formula  <dig>  in  <cit> . these formulas represent the simplest and the most intuitive way of introducing weights in bootstrap analysis. most research works focusing on clustering ensembles diversity suggest selecting ensembles according to a maximum diversity criterion  <cit> , which states that the higher the ensemble diversity , the better the accuracy of the consensus partition  extracted from the ensemble. thus, in our study, the weights are computed using a linearly increasing distribution, which defines weights according to a maximum diversity criterion. in the future, it would be also interesting to test the other weighting schemes discussed in  <cit> . specifically, a normal distribution model that computes weights according to a median diversity criterion  along with the group weighting  and dendrogram weighting  models could be tested in the framework of weighted bootstrapping.

CONCLUSIONS
the traditional non-parametric bootstrapping is a common method for assessing tree confidence in phylogenetic analysis  <cit> . it generates and operates pseudo-replicated  data sets having the same empirical distribution that the original data set. however, traditional bootstrapping does not take into account either the "tree-likeness" of phylogenies inferred from pseudo-replicated sequences  or the bootstrap support of those phylogenies. in this study, we described four weighting strategies allowing one to assign weights to the trees inferred from pseudo-replicates, and thus to do away with one of the limitations of traditional bootstrapping: the assignment of equal weights to all "pseudo-replicated" trees. in our approach, the weights of the trees inferred from pseudo-replicates are assigned according to either the ls estimate of this tree  or to the average secondary bootstrap scores  of the tree . the simulations carried out with two real data sets and five weighting strategies, including the ls and sbs-based bootstrapping, the ls and sbs-based bootstrapping with the data normalization, and the traditional bootstrapping, suggest that the weighted bootstrapping based on the normalized sbs usually exhibits larger bootstrap scores and a higher robustness compared to the traditional bootstrapping and the three other competing methods. the high robustness of the weighting strategy based on the normalized sbs makes this strategy particularly useful in the situations when the considered sequences were affected by noise or underwent insertion or deletion events. also, when large numbers of replicates  were considered, the performances of the four other weighting strategies were very similar, thus confirming the stability of the traditional unweighted bootstrapping.

an interesting way for the future investigation would be the study of the proposed weighting schemes in the context of establishing a consensus tree. for instance, the consense program of the phylip package  <cit>  allows the user to introduce weights for each of the input trees. indeed, the average sbs or ls  estimates of the trees  could be used to compute the consensus tree . in addition, a new way of computing a consensus tree, which takes into account all individual bootstrap scores of the internal branches of the input trees, could be developed for the weighted supertree methods discussed in  <cit> .

authors' contributions
vm, ab and jx designed the methods, implemented them and carried out the simulations. vm, pp-n, f-jl and pl supervised the project and coordinated the development of the methods. all authors read and approved the final manuscript.

