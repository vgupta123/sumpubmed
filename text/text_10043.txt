BACKGROUND
reverse vaccinology  is one of the best examples of how bioinformatics can boost molecular immunology. the conventional approach to design vaccines requires pathogen's cultivation and dissection of its main components before testing their ability to elicit protective immunity. rv's novelty consists in starting the search for immunogenic antigens from in silico analyses of the pathogen's genome instead of culturing the microorganism  <cit> . this allows scientists to save time and money while facing pathogens for which cell culture is difficult or impossible. rv potentially permits researchers to select, in addition to most in vivo expressed antigens , any protein encoded by the genome of a pathogen. rv is less helpful with eucaryotes due to complexities of cellular and tissue organization, and it is more effective with prokaryotes, extra- and intracellular. indeed, the production of specific antibodies can boost immunity not only against extracellular pathogens, usually controlled by th2-polarized responses, but also against either obligate or facultative intracellular ones, usually controlled by th1-polarized responses. even these latter pathogens are susceptible to humoral immunity during the extracellular phases of their infectious cycle and are made vulnerable by antibody cross-linking that modifies the intracellular milieu through signaling  <cit> .

the extracellular pathogen, neisseria meningitidis serogroup b, stands as a milestone for rv. from its genome, pizza and coworkers selected  <dig> out of  <dig> predicted orfs for protein expression as those meant to be new, surface-exposed antigens  <cit> .  <dig> orfs were successfully cloned, expressed in escherichia coli and tested in a variety of assays. in the end, five proteins were found to satisfy criteria of surface exposure, conservation/expression in all strains as well as a significant titer in serum bactericidal assays. this work induced further research of other pathogens in the same way: porphyromonas gingivalis  <cit> , streptococcus pneumoniae  <cit> , chlamydia pneumoniae  <cit> , bacillus anthracis  <cit>  and group b streptococci  <cit> . enhancing such a genome-based approach with a trascriptome-based one – through the use of dna microarrays – shows whether, when and to what extent antigens are expressed, thus identifying those highly expressed during infection processes  <cit> . finally, proteomics, although expensive and laborious, can verify in silico prediction of membrane composition  <cit> .

we focused on the selection of the in silico vaccine candidates  from the list of predicted proteins to address two issues: the possibility  of automatizing the process with new criteria of analyses and  of reducing the percentage of vcs to less than the 20–30% reported until now  <cit> . indeed, the real goal of in silico selection is to choose the minimal number of vcs sufficient to find protective antigens  during experimental phases, thus designing a vaccine that conserves time and money. therefore, it has to be stressed that obtaining a high recall of pas in a very small number of selected vcs is more convenient than trying to find all possible pas. according to this approach it is more productive to select the pas that will most likely be easily expressed. this reduces the risk of experimental troubles. the main cause of failed cloning and expression of  <dig> out of  <dig> vcs from neisseria meningitidis b was the presence of more than one transmembrane spanning region   <cit> . thus, we decided to have no more than two predicted tms as an a priori requirement. of course, viable vcs can be missed because of such a filter; the extracellular loops of multispanning membrane proteins can actually be significant targets especially if reasonably large. hence, one may focus on fragments likely to be exposed and accessible to antibodies rather than the entire protein in order to overcome eventual cloning and expression problems. although such a "local" approach is reasonable, we designed the software to select entire antigens for experimental challenges rather than hazarding fine predictions that may not correspond to in vivo conditions.

choosing such a conservative way to face vaccine design inevitably implies missing some pas, but this is a small price to reach a valuable compromise. even selecting only surface antigens may imply missing non-surface pas. yet discarding non-surface-exposed predicted antigens, thereby forwarding further bioinformatic analyses on selected ones, proved successful. however, to mimimize the risk of loosing good vcs, we stored up information concerning analytical steps for each sequence without distinction: the final output presents only selected vcs, but information concerning all other proteins is retained. vcs are presented with corresponding integrated analyses. in order to "rationalize" selection step, we took into account the importance of avoiding antigens that can potentially cause autoimmunity in man  <cit> . since major hystocompatibility complex  ligands can be really short ; this problem may rise also from antigens sharing weak global similarity with host proteins. addressing such a question on a proteomic scale would make manual management of bioinformatic analyses impossible.

we report here on a new, fully automated rv system, developed to predict best vcs from bacterial proteomes  and to manage and show data by user-friendly output.

implementation
nerve software pipeline is presented in figure  <dig>  nerve is composed of eight perl scripts. a script named "nerve" leads the user through text-interface configuration. once this is successfully completed, the script starts and manages the whole process that can be roughly divided in two parts: the first in which all data is produced and stored and the second in which a restricted part of this data is selected. the acquisition of data is performed by six different analytical steps, each forwarded by a special script and each in turn screens the whole proteome indistinctly. all the information produced is stored both in a mysql table and in text files organized in special subdirectories. once production and storage of data is completed, another script selects a restricted number of entries from the mysql table  and ranks them in a user-friendly html table . restriction is performed by four integrated filters and is based on values created by steps  <dig> to  <dig>  filters loc and top select non cytoplasmic antigens containing no more than two tms . subsequently, based on empirical threshold values, filters pad and shp discard antigens that show a low probability of being adhesins and/or a significant similarity to human proteins. to set these values, nerve was tuned on ten entire proteomes containing known immunogens; we chose the pair of threshold values that gave the best compromise between restrictivness and immunogen recall. after restriction, nerve uses values created by step  <dig> to rank the antigens extracted by the filters. an html table presents this restricted and ranked pool of vcs, showing in six columns the values created by the analytical steps. entries and data are linked to the corresponding textfiles, thus providing the user with complete information.

RESULTS
the system we created predicts the best vcs starting from the flatfile proteome of a prokaryotic pathogen. it forwards six proteome-wide analyses that mine and save data in text files and in an automatically generated mysql table. the table will contain as many records of extracted information as the number of sequences in thirteen fields. the best vcs are finally selected and are shown in a user-friendly html table reporting seven out of the thirteen fields, linked to the textfile-information that they summarize.

the first proteome scannings assign each sequence three predictions:  subcellular localization,  adhesin probability and  topology, using the algorithms psortb  <dig>   <cit> , spaan  <cit>  and hmmtop  <cit>  respectively. indeed, surface-exposed proteins such as outer membrane proteins and especially adhesins, are ideal targets for vaccine development  <cit> . at the same time, the presence of more than one tm in many of these vcs, proved problematic in cloning and expression phases of rv   <cit> . this clearly shows how predicting number of tms is potentially a crucial step in saving time and money for subsequent experimental tests. the fourth step addresses the problem of sharing similarity regions between pathogen and host proteins. it is well known that in vaccine development this can either cause low immune response/tolerance or autoimmunity  <cit> . we have chosen the algorithm blast to compare each pathogen's sequence as a query against the human proteome  <cit> . local alignment is suitable for this task because potential mhc ligands – the ones we search for to help predict potential interferences  with the immune system – can be very short   <cit> . thus, the script scans alignments, extracting each sequence fragment  that shows no more than three "positives"  and one "mismatch"  per nine-residues  window. in this way we not only take into account mhc ii, commonly involved in presentation of exogenous antigens, but also mhc i, involved in cross-presentation  <cit> . these settings can be changed at the start of the manager programme according to the user's preferences. once an sp is found, corresponding bacterial and human sequences are reported with their position in the protein and the available description for the human entry in the mysql table and the text file. once this fourth step is complete, each pathogen's sequence is assigned to a file, named as its accession, and sent to four new fields in the mysql database. the first two of these fields show query length and number of mined sps. the third one reports four features for each sp: position, amino acid sequence, occurrence and "mhc ligand". this last feature is expressed as either "positive" or "negative" depending on the results from a screening of human mhc ligands derived from the database mhcpep  <cit> . these mhc ligands do not necessarily correspond to t-epitopes. it would be more advantageous to use a t-epitope prediction tool, but as of now there is no such tool available for standalone use. in addition, since the number of unknown mhc ligands is possibly high, "positive" is a "necessary-but-not-sufficient" condition, whereas "negative" stands as an absence of evidence rather than an evidence of absence. the fourth field reports the aggregate number of amino acid residues from all peptides.

the fifth step allows the user to compare the pathogen's proteome to any other from a different strain/serogroup. indeed, inferring conservation of each sequence may be helpful in selecting the best vcs as the more an immunogen is conserved, the more protective the vaccine becomes. the way in which we compare two pathogen proteomes is the same process we use to compare pathogen versus human proteomes; all regions potentially capable of binding mhc ligands are searched for in an analogous way. although this step is not compulsory, it allows nerve to rank vcs from most to least represented in the compared prokaryotic proteome in the html table presenting the selection set . when possible the sixth step assigns an homology-driven, function prediction to each vc. for instance, this allows one to focus on a vc that shows strong similarity to either known virulence factors or strong immunogens. nerve uses blastp algorithm to compare each sequence to the uniprot database. according to ariel et al.   <cit> , the script adopts these parameters: e-value ≤1e- <dig> and / ≥  <dig> . this allows nerve to attribute to the sequence the subject's most similar function as a query putative function, reported in a further special mysql column – if no hits are found, the notice "no sufficient similarity found for function inference" is shown. the putative function is then saved in a special text file with the corresponding score and e-value. this last step completes the mysql database, which in total contains thirteen fields complete with all the information produced along the six analyses. although each type of information may be retrieved at any time, the final script presents the best vcs in a user-friendly html table. this displays accession numbers and six out of the eleven mysql fields, linking them to text files containing summarized data .

for final selection of vcs, nerve uses feature-based, a priori requirements to discard proteins that are likely to waste time and money during the experimental tasks  and to exclude non-surface antigens such as cytoplasmic/inner membrane proteins . to further improve final selection efficiency, nerve considers two characteristics for empirical tuning: the probability that a sequence is an adhesin and the presence of regions common to human proteins. variation of threshold values for such features along iterative analysis of a known data set  allowed nerve to define restricted vc pools  including a high number  of the described pas that fulfill nerve a priori requirements . settings consistently confirmed themselves as reliably effective – in terms of both pa recall and selection restrictiveness – when tested on six further proteomes . in fact, most  of the described pas fulfilling nerve a priori requirements  were included in  <dig> % whole proteomes average size pools .

CONCLUSIONS
rv stands as a turning stone in vaccinology. it shows how powerful and useful bioinformatics can be in the post-genomic era. creating a tool specifically designed to automatize in silico steps not only makes rv really available but also time and cost efficient. indeed, nerve was conceived to combine automation with an exhaustive treatment of vcs selection task by implementing and integrating six different kinds of analyses. its modular structure allows further development of new, additional steps as well as the refinement of existing modules. this would improve the compromise between vc selection restrictivness and pa recall. another goal was to avoid loosing information, thereby giving the user the chance to recover all data mined by nerve for further investigation. for instance, recovered data regarding shared similarity regions between vcs and human proteins may be of help when taking into account possible occurrences of either tolerance or autoimmunity.

finally, the nerve prediction system proved – on a large number of bacterial proteomes – to be reliably effective in selecting very restricted vc pools that are characterized by a high recall  of pas. in particular these results narrow vc pool restriction from the reported 20–30% to an improved 8–9% of proteome sequences. nerve's attempt to save time and money is also mediated by selection criteria, meant to facilitate crucial experimental steps, the protein cloning and expression phases. last but not least, nerve's user-friendly format and easily interpretable output should further aid researchers in designing subunit vaccines against bacterial pathogens.

availability and requirements
project name: nerve

home page: 

this software is also available as an additional file 

operating system: linux 

programming language: perl

other requirements: perl  <dig> . <dig> or higher, psortb  <dig> , spaan

license: gnu gpl

any restrictions to use by non-academics: licence needed

abbreviations
mhc = major hystocompatibility complex; orf = open reading frame; pa = protective antigen; rv = reverse vaccinology; sp = shared peptide; tm = transmembrane helix; vc = vaccine candidate.

authors' contributions
sv: conception, design, acquisition, analysis and interpretation of data, manuscript drafting; fb: design, manuscript critical reading; ff: conception, analysis and interpretation of data, manuscript drafting. all authors read and approved the final manuscript.

