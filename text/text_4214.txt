BACKGROUND
the structure and topology of gene regularity network  is essential to understand the mechanism that how gene transcription factor  regulates genes expression and consequent cellular behaviors such as development, differentiation and response to stimuli. the deregulation of these networks results in change the genes expression and leads to implication in ontogenesis and tumor progression  <cit> . technologies like high through output sequencing and microarray offer a great deal of information about individual genes, but the reconstruction of grn based on genome wide data still remains a big challenge. the prior biological knowledge along with genomics and post genomics data has given rise to supervised techniques to solve this challenge.

many computational methods have been developed to infer grn, mostly using unsupervised approaches. recently, there has been surged in supervised approaches due to identification of large number of transcription factors and their targets which enabled to have sufficient data to train supervised models. the most recent and largest study published by maetschke sr  <cit>  has clearly shown that the supervised approaches outperform unsupervised and semi-supervised approaches for inference of grn. they compared the prediction accuracy of  <dig> unsupervised methods with support vector machine  and reported it outperform unsupervised methods in different experimental conditions except in knockout experiment by z-score method. similar study to evaluate supervised inference of grn was done by mordelet and vert  <cit> . they compared supervised techniques to context likelihood to relatedness , algorithms for the reconstruction of accurate cellar networks , relevance networks  and a bayesian networks  on an e. coli benchmark data set by faith et al.  <cit> .

any algorithm for supervised learning can be used in principal for interference of grn. we have used state of art svm algorithm for inference of grn for different biological conditions and network size. ben-hur and noble  <cit>  provided a very simple method where a local model is used to estimate the prediction of interacting partners of each protein in the network. this in turn is used for all local models and then combine together to predict edges throughout the network. we used this concept to estimate local model for each tf based on their expression profiles and the genes regulated by tf from other genes. all models were than combined to rank candidate regulatory relationship between tf's and all genes in the genome  <cit> .

in this article, we investigated and compared prediction accuracy of svm using  <dig> widely used kernel functions on wide range of networks and experimental data types  with comparison to unsupervised methods. the aim of our study was to identify a suitable algorithm for inference of grn with respect to each experimental condition and network size. we have also developed a simple tool and given the name “comparesvm”  for inference and comparison of grns . although many supervised algorithms have been developed, but we used svm as it has been successfully applied to inference of grn. comparesvm unlike unsupervised techniques requires a list of known regulation relationship between tf and target genes in addition to gene expression data. this is standard method in the field of machine learning for supervised techniques, the known/prior knowledge is used to train a classifier to be able to predict the unseen data. this limitation is of not much concern due to huge surge in the regulation databases for many species and specially availability of well documented model species.

genenetweaver is an open source tool for in silico benchmark generation and profiling of network inference. it uses in vivo microarray compendia along with synthetic data to access the performance of network inference methods. it enables us to simulate and generate dataset for gene knockdown, knockout and multifactorial microarray expression profiles for e. coli. knockdown experiment refers to the technique in which expression of one or more genes is reduced. knockout experiment is a genetic technique in which one of the gene expression is completely made inactive and multifactorial experiment refers to the technique where small number of genes expression values are perturbed by a small random number.

we have tested comparesvm on e. coli data extracted by genenetweaver of different nodes  ranging from  <dig> to  <dig> . our aim was to identify which inference method worked better for a given experimental condition profiles. we also investigated the accuracy of this method as the size of the network is increased for a certain biological condition profiles. we have identified that for small networks of all biological condition, svm  outperform unsupervised inference methods, whereas, for large network svm  also perform better with the expectation of multifactorial experimental condition.

methods
supervised methods
svm
we used svm, as it has been successfully applied to infer grn  <cit> . we have used svm library libsvm developed by chih-chung  <cit>  for implementation of comparesvm. the essence of svm is a kernel function k between any two genes x and xi, that is the measure of similarity between two genes. in case of grn, it is measured in terms of expression profiles. given a set of m genes x1 … xm, svm estimates a scoring function for any new gene x of the form using following equation;  <dig> fx=∑i=1mαikxi,x+c 

where, “αi” are the weights in the expression to be optimized by the svm by maximizing the large positive scores for genes in a positive class  and large negative scores for genes in negative class  in the training set. “c” is so called complexity parameter that needs to be optimized for predication performance, it also controls possible over fitting of the training set. once the optimal values of alpha and c are found, genes in the test set can be classified by fitness function f either to + <dig> or − <dig> class as shown in figure  <dig> figure  <dig> 
two dimensional representation of support vector machine, using maximum margin with support vectors to classify data. local model is generated for each transcriptional factor to classify list of genes.



the kernel k is used by svm to build scoring function. in our experiments, we want to infer regulation of gene from gene expression profiles of three different biological conditions. therefore, we represented each collection of gene expression data as a vector. we planned to evaluate the following four kernel functions on four different biological conditions and networks of different size.linear kernel



linear kernel is simplest kernel function of svm. it is given by the inner product < x, y > with addition to c constant. linear kernel is also term as no-linear kernel. scoring function of the linear is as follow:  <dig> kx,y=xty+c b) polynomial kernel



polynomial kernel is nonlinear kernel and has been studied for problem where all the training set is normalized. this makes it ideal for microarray as data is normalized by different normalization techniques before generating expression matrix. polynomial kernel has two additional parameters, d denote the degree of freedom  and slope of alpha. scoring function of polynomial kernel is as follow:  <dig> kx,y=αxty+cd c) gaussian kernel



gaussian kernel is a radial basis kernel function. it has additional parameter sigma. if overestimated, it will behave almost linear and will lose it non-linearly feature. if underestimated, the kernel will lack regularization and will be highly sensitive to the noise in training set. scoring function of the gaussian kernel is as follow:  <dig> kx,y=exp−γx−y <dig> d) sigmoid kernel



sigmoid kernel is also known as hyperbolic tangent  kernel and multilayer perception  kernel. the origin of this kernel is from theory of neural networks and has been found to be performed well in practice as well. there are two adjustable parameters of sigmoid kernel, slope of alpha and the intercept parameter c. scoring function of sigmoid kernel is as follow:  <dig> kx,y=tanhαxty+c 

unsupervised methods
the clr algorithm is an extension of relevance network  <cit> , which predicts regulations between tf and genes by detecting mutual information. clr was used by faith  <cit>  for gene network construction from compendium of gene expression data of e. coli. clr uses an adaptive background correction to the estimation of mutual information. than for each gene, a score is computed for statistical likelihood of mutual information. then, for each pair of tf-target gene, the mutual information score is compared to the context likelihood of both the tf and the target gene, and turned into a z-score. tf-gene interaction is then ranked by decreasing order  <cit> . we have used pearson and spearman estimation for calculating prediction accuracies for clr using minet  <cit>  package of r .

comparesvm
comparesvm is implemented in matlab, a typical workflow contain  <dig> sections including optimization, comparison and prediction as shown in figure  <dig>  firstly, these parameters are optimized for a given kernel using grid search in comparesvm optimization as shown in figure 2a. for each kernel, two parameters are optimized with the exception of linear kernel, which only require  <dig> parameter for model optimization. this in turn can be repeated for all kernels. once parameters are optimized, comparesvm comparison can generate auc for each kernel as shown in figure 2b. the kernel with higher accuracy and its optimized parameters can be used in comparesvm prediction to identify new targets of tf . if the optimized parameters are already known, the comparesvm prediction can be used directly.figure  <dig> 
typical workflow for inference of gene regularity network using comparesvm.  <dig> section: optimization , comparison  and predication .
prediction accuracy  of unsupervised and supervised methods on knockout , knockdown , multifactorial  and average  data  generated by genenetweaver extracted from
e. coli. for each network of size:  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>   <dig> networks were generated for each size and experimental condition.



comparesvm is a svm tool to infer new regulation between list of tf and all genes in the organism. it requires two types of inputs. firstly the list of genes and their expression values for a given experimental condition, which in our case was a vector of expression values in a compendium of expression profiles for a certain experimental conditions. secondly, the list of known regulation relationship between known tf, the list of genes regulated and not regulated by these tf. these lists can be constructed from publically available databases of experimentally characterized regulation like regulationdb  <cit> . although, negative examples of these tf are not well documented in databases.

once the lists have been prepared, comparesvm splits the problem in many sub-problems; each sub-problem was associated with tf in a list of known tf. for each tf, we trained a binary classifier to differentiate genes known to be regulated and the list of genes not known to be regulated by the tf, based on the genes expression profiles. the concept was to measure the expression level of tf and its target genes using same assumption used by many unsupervised algorithms for grn. if two genes were regulated by the same tf then they were likely to had exhibit same expression patterns. once the classifier had been trained for the tf on training data, the list of new genes can be assigned to given tf if their score meets the threshold. local models were generated for each tf and new genes were assigned to them using threshold. the final step was to combine the score of all local models to rank the candidate tf-gene interaction list. a similar approach was used by bleakley  <cit>  and sirene  <cit> . this process was repeated for four different types of kernels to give comparative results.

evaluation
we performed evaluation on simulated, steady-state expression data, generated from sub network from e. coli network, in order to check the accuracy of an algorithm against true known network  <cit> . we used genenetweaver  <cit>  to extract and simulate the gene expression data. genenetweaver provides methods for both in silico benchmark generation and performance profiling of network inference algorithms. genenetweaver extracts sub networks from the list of known interaction networks such as e.coli and s.cerevisiae. it emulates transcription and translation using set of ordinary differential equations to generate expression data for knockout, knockdown, dual knockout and multifactor experiments.

the expression value of a given gene is set to zero in simulation of knockout experiment, whereas in knockdown experiment, the expression value is halved. in case of multi-factorial experiments, the expression values of small number of genes are perturbed by a small random number. we only provided expression data and did not provide metadata information to algorithm like in dream challenge. unsupervised methods are only provided with expression data, whereas for supervised methods, interaction data is provided in addition to expression profiles. unsupervised methods were used with their default parameters and for supervised methods five cross validation was applied and parameters were optimized on training data only.

RESULTS
we evaluated the prediction accuracy of unsupervised method  using estimation  with comparison to supervised approaches  using microarray simulated data. the prediction accuracy was measured by the area under the receiver operator characteristics curve  for prediction methods  using three different experimental conditions  and also average of three experimental conditions . networks of node size  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig> were extracted from e. coli and expressed data were simulated by genenetweaver. genenetweaver generated number of nodes equal to number of experiments.  <dig> networks were simulated and generated by genenetweaver for a given size of network and experimental condition, therefore each evaluation was tested ten times. the large standard deviation was observed in predication accuracy of all methods and experimental conditions. for small network, the accuracy varies from random networks to close perfect prediction.

in unsupervised method clr, the correlation method  performed poorly for knockdown experimental condition. in knockout experimental condition, same pattern was observed, but as the network size approached to  <dig>  the predication accuracy approached to 70% as shown in figure  <dig>  in multifactor experimental condition, it performed exceptionally well and slightly better than supervised methods. but its prediction performance was not suited for network with small number of nodes even in multifactorial experimental condition as shown in figure  <dig> 

clr, the correlation method pearson has more dramatic impact on prediction accuracy on knockout experimental condition compared to spearman as changes in the expression values are not monotonically distributed, but both performed poorly on the knockdown experimental condition with comparison to svm. pearson performed very well as the size of network increased as well as on the network with few nodes compared to spearman correlation method. although, supervised methods had higher prediction accuracy for small network, but as the size of network increased in multi-factorial experimental condition, the clr  performed better as shown in figure  <dig> 

in svm, the three  out of four kernel methods outperformed the unsupervised methods with the exception of multifactorial experimental condition. although, for network size up to  <dig> nodes, performance was better than unsupervised methods in multifactorial condition as well. in all experimental conditions, the gaussian kernel was most consistent and had least standard derivation. polynomial kernel achieved highest accuracy in knockout experiments as network size approached to  <dig> nodes and in knockdown experimental condition, linear kernel marginally better than polynomial kernel in prediction accuracy for large networks as shown in figure  <dig>  in multifactorial condition, these three kernels  performed well for networks of small size up to  <dig> nodes and slightly underperformed as network size approached  <dig> with compared to unsupervised methods. sigmoid kernel had poor performance in all experimental conditions and its performance was not better than random guess.

gaussian kernel possibly is the best option for prediction of grn from microarray data as it has high accuracy and less standard derivation on small datasets compared to all other inference methods. it also has overall best performance for all biological conditions .figure  <dig> 
prediction accuracy  average overall network sizes of unsupervised and supervised methods on knockout, knockdown, multifactorial and average data generated by genenetweaver and extracted from
e. coli. for each network of size:  <dig>   <dig>   <dig>   <dig>   <dig>   <dig> and  <dig>   <dig> networks were generated for each size and experimental condition.



linear kernel is a fast and does not require any additional parameter to optimize the prediction with contract to all other kernel methods. even with its simplicity compare to other complex kernels, it still performs almost same as other complex kernel methods and ranked 2nd in overall prediction accuracy. it slightly outperformed the gaussian kernel as the size of node reaches  <dig> in three biological experimental conditions.

our analysis indicates that suitability of a method for predication of grn depends on biological condition and size of network. for small networks , all biological conditions can be inferred by gaussian kernel with high prediction accuracy . as the size of network approaches to  <dig>  the clr  outperforms the all other methods in multifactorial condition, but svm  is best suited for knockout data and svm  for knockdown. gaussian overall performed better in all experimental conditions and sizes of the network as shown in figure  <dig> 

discussion
we have developed a tool based on svm to infer grn, and used it to compare four widely used kernels to evaluate prediction accuracy on three biological conditions and combination of all. our results are in agreement with already published report  <cit> , but as the size of nodes exceeds  <dig>  the unsupervised method  slightly outperforms the supervised method  in multifactorial experimental condition. we have also observed that the large number of repeats is required on network of different sizes to accurately estimate the prediction accuracy of these methods.

the most important observation from this evaluation is that there is no one universal method suitable for inference of grn for all biological conditions. the suitability of inference method depends up size and type of expression profiles of microarray data. on average, the unsupervised methods achieve low accuracy with exception of multifactorial dataset. although, pearson correlation is comparatively accurate enough and even does not require parameter optimization. unsupervised methods are suitable for simple and small problem but are fast and do not require any prior training for inference of grn.

the limitation of comparesvm due to its supervised nature approach is inability to predict target of tf which have no prior known targets. the performance of the comparesvm depends upon the list of known target genes; therefore, tf with incomplete list of interaction will produce poor local models. this may direct the research into hybrid model which are based on supervised and semi-supervised methods which can address this challenge.

CONCLUSIONS
to summarize, comparesvm can be used to infer grn with high accuracy  for networks  with svm gaussian kernel for biological datasets . for large network, choice of algorithm depends upon the type of biological condition. there had been variation in prediction accuracy in all inference methods, therefore; prediction should be limited for simple network. future work is needed for the development of semi-supervised methods that have the ability to predict target of tf which have no prior known targets.

additional files
additional file 1: 
software package. comparesvm.zip file that contains matlab scripts and example datasets to demonstrate our approach.


additional file 2: 
readme: a world file containing detailed manual to install and run the software.


additional file 3: 
a zip file contains dataset  ranging from  <dig> to  <dig>  each experiment type and size has  <dig> different expression profiles.


additional file 4: 
a zip file containing results of sample runs for three examples.


additional file 5: 
a zip file contains r script for unsupervised algorithm clr.




competing interests

the authors declare that they have no competing interests.

authors’ contributions

zg contributed to the conception and the development of methods and tool, prepared manuscript and analyzed the results. msha prepared and revised the manuscript, and prepared data set for statistical analysis. mdmr contributed in statistical analysis of the results and manuscript preparation. mc contributed to the design and conception of project, critically read and approved the final manuscript. all authors read and approved the final manuscript.

this project was supported by the grant of zhejiang university scholarship program for foreign students, and partly supported by the national natural sciences foundation of china . the authors thank dr. björn sommer for his valuable discussions on this work.
