BACKGROUND
the availability of a growing number of draft or completed genomes has shifted the most pressing challenges towards the understanding of the molecular and cellular biology of genes and other encoded elements. this understanding is facilitated by the interpretation of genomes not only in terms of their structure but also of their function and diversity. to this end cdnas from several human large-scale sequencing projects  <cit>  have proven their usefulness in the identification and annotation of gene structures and splice forms  <cit> . these projects have established and improved methodologies for the production of cdna libraries, enriched in full length and rare transcripts  <cit> , which was mandatory for the discovery of new targets for functional genomics. in addition to the utilization of cdnas in genome and gene annotation, this physical resource provides the basis for the molecular and cellular functional analysis of the encoded proteins  <cit> , and of functional rnas.

the german cdna consortium has pioneered the large-scale sequencing of full-length cdnas  <cit>  and their systematic exploitation in protein localization experiments  <cit> . initial sequence annotations have been integrated with experimental data and bioinformatics analysis  <cit> . one example is the lifedb database  <cit> , which is used as a front-end tool for the dissemination of information and for manual and automated annotation. several large-scale applications of cell-based assays have since been implemented to define candidates for further studies and to identify their potential impact in disease  <cit> ,  <cit> . however, the initial annotation of cdnas and deduced ests has to face a considerable amount of biological and experimental noise  <cit> , though some of the observed phenomena  may be biologically significant  <cit> . accurate cdna annotation has traditionally been achieved via manual curation, using the experience of expert individuals to annotate sequences manually. although manual curation can attain high degrees of accuracy  <cit> , it cannot keep pace with the continuously growing number of entries in sequence and other databases  <cit> . a straightforward decision process in the selection of cdnas for experimental analysis of encoded proteins is therefore a key factor for the creation of relevant datasets within the functional genomics analysis of genes and proteins.

we have developed a new high-throughput cdna analysis tool, caftan, which filters sequences based on their potential to be derived from full-length and fully processed transcripts and spliced forms. it identifies and filters those cdnas containing incompletely processed or truncated transcripts, which are consequences of erroneous mrna processing  <cit>  or of errors in the cloning process. thus this filtering of targets saves time in the selection of cdna templates for the subsequent sub-cloning of open reading frames and the functional characterization of encoded proteins.

the main strategy of caftan is based on the mapping of cdnas to the genome assembly, and the analysis of their genomic context. the presence and type of polya signals, internal and flanking repeats, the gc-content, and splice site types are evaluated in different tests and aid in the classification of cdnas into several groups according to their sequence quality. caftan compares the coordinates of cdnas in the respective genomic locus with the coordinates of a reference set of cdna-sequences from publicly available resources . it thus generates detailed information about overlapping exons and a structural classification of any cdnas with respect to the reference set of transcripts and splice variants.

we applied this tool to a set of  <dig> human cdnas annotated as "known protein-coding" cdnas in vega    <cit> . vega is a central repository for manual annotation of vertebrate finished genome sequences. it thus generates detailed information about overlapping exons and a structural classification of any cdnas with respect to the reference set of transcripts and splice variants. the results showed that caftan was able to classify correctly more than 85% of the analyzed cdnas. its good performance makes it suitable for providing the curator/scientist a first and fast overview about the quality and the already existing annotation of a set of cdna. caftan does not substitute the hand curation process and further detailed orf analysis; however it supports the selection or rejection of targets, thus speeding up the discovery process in the lab.

implemetation
the implementation of the caftan method can be summarized in the following stages: 1) input or raw data, 2) extraction of simple and composite features from raw data, 3) rules definitions, 4) prediction and evaluation, 5) program specifications

input 
caftan takes as input a multiple fasta file of the cdnas to be analyzed and a blat output from the fasta sequence file in psl format with header  <cit> .

feature extraction
simple and composite features were extracted from a training set of  <dig> manually curated sequences from the german human cdna project -dkfz collection . afterwards, the distribution of these features was studied depending on their tag- in the curated dkfz set- , see section  <dig> .

simple feature extraction
exon mapping refinement
the first step is to know where and how good the cdnas are localized in the genome. for that purpose we use blat, which maps most cdnas to a single position/locus in the human genome. however, recent gene duplication events, repeat elements in cdnas, or misassemble of genome sequence contigs give rise to the mapping of cdnas at multiple loci, making a post processing of the blat output  necessary. only the hit with the lowest number of mismatches is selected. the mapping positions of the selected hit are kept for use of this cdna in further analyses.

afterwards, the distances between consecutive blocks- matches of the cdna to the genome in the blat output- are analyzed; a block can be interpreted as an exon. the blocks are joined when the distance is less than  <dig> bp in the genome sequence. the final number of blocks and their exact genomic positions are recalculated and stored. this process is repeated for every cdna.

additionally information on the number of mismatches, successfully mapped length, number of ns, gaps etc. are stored for the later generation of composite features and rule definitions. .

complex r
true if any of the following repeats is present: sva r, alu r, l <dig> r, ltr r, or scrna
alu r
l <dig> r
sva r
ltr r
scrna r
cdna ss type
returns a string with the type depending on the ss types in the cdna
unknown: at least one unknown splice sites
antisense: at least one antisense ss, no unknown
u12: at least one u <dig> ss, no antisense and no unknown ss
non_canonical: only non canonical and cannonical ss
canonical: all splice sites are cannonical
non_canonical ss "gc-ag"
u <dig> ss "at-ac"
antisense ss "ct-gc","gt-at"
canonical: there is at least a canonical signal in the cdna
non-canonical a: there is no canonical signal and there is a non-canonical a onel
non-canonical b: there is none of the above signals but there is a non-canonical b one
non-canonical c: there is none of the above signals but there is a non-canonical c one
canonical a taaa
non-canonical a ataaa
non-canonical b aataa
non-canonical c ataaa
polya c: if there is more than 80% as in a  <dig> bp window in the genome.  <dig> last bp from the last exon +  <dig> bp after.
repeatc: complex repeats contamination in the last exon or 3' end
mixed contamination: both contaminations
cdna polya signal and tail analysis
polya sites in mrnas are defined by a hexameric polyadenylation signal, aauaaa, or a one-base variant thereof  <cit> . this signal is usually located ~ <dig> bases upstream of the cleavage site and, sometimes, there is also a gu -rich element located 20â€“ <dig> bases downstream of the site  <cit> . the polya polymerase then adds a polya tail to mrnas during pre-mrna maturation.

we have developed the program "polyasignal", using emboss libraries   <cit> , to identify within cdna sequences potential polya signals in the context of a polya tail. the program retrieves the position and type of every possible hit. it also allows searching for sequences having only polya signals or polya tail.

the user can define almost all variables, such as maximum distance allowed between the signal and the polyadenylation site , and patterns to match the polya signals and polya tail. parameters are by default optimized for the human genome  <cit>  but it can be easily adapted for other organisms. all obtained information is stored for the later creation of composite features and rules extraction.

feature extraction from assembly: splice sites, repeats, genomic polya tail
splice sites
most exon/intron boundaries match consensus dinucleotides that are specific for splice donor and splice acceptor sites at the 5' and 3' ends of exons, respectively  <cit> . all putative splice donor and acceptor sites  are extracted for every cdna from the genome assembly . u <dig> dependent introns have been historically classified in those containing canonical splice sites with conserved gt and ag dinucleotides and those containing gc-ag were called non-canonical splice sites. u12-dependent introns discovered later showed a preference for at-ac dinucleotides in the splice donor/acceptor positions. we use this classification to create the introns ss types , because there is not an accepted standard nomenclature in the literature for the splice sites depending on the splicesome, or on the combination of donor/acceptor dinucleotides used by the intron.

once the splice type of each intron in a cdna has been defined, the ss type of the whole cdna is then defined . the cdna splice site type is classified as canonical only when all of its splice sites are canonical, for other cases see table  <dig> 

cpg islands
the genomic sequence is further checked for cpg islands up to  <dig> bp from the beginning of the cdna. we use the generally accepted definition of what constitutes a cpg island  <cit> .

genomic polya tail
additionally, the presence of a stretch of multiple a's  in the genome at the matching position of the cdna's end is checked. we look for a window of  <dig> bp in the genome taking the last  <dig> bp of the last exon plus the following  <dig> bp in the genome. if this  <dig> bp nucleotide window has more than 80% a's content, then we assume the presence of a genomic polya.

repeats
repeat elements in the last exon and in the 5' and 3'end of thequery cdna are identified. the repeats in these regions are searched as follow: those overlapping the last block/exon of a cdna, those overlapping the first  <dig> bp in the 5'upstream region, and repeats overlapping the terminal  <dig> bp from the 3'downstream region. all information is stored for the later generation of composite features, rules and quality tests evaluation 

coordinate based comparison of the cdna set with vega and ensembl annotations
caftan compares the coordinates of mapped cdnas after filtering with the genomic coordinates of reference sets from the publicly available resources of the vertebrate genome annotation  database  <cit>  and ensembl  <cit> . vega is a central repository for manual annotation of vertebrate finished genome sequences while ensembl produces and maintains automatic annotation on many eukaryotic genomes.

each analyzed cdna is linked to the best matching gene in vega and/or ensembl . since vega genes are organized in transcripts, the best matching transcript needs to be selected. for that purpose, the coordinates of all existing vega and/or ensembl transcript variants for the best matching gene are extracted and compared with the query cdna including all exon and intron coordinates. an "exon score" defined as the ratio between the exons overlap and the sum of their lengths, is calculated for all transcript exons and query cdna exons. once the exons have been compared all to all a "transcript score" given below is calculated for every vega and/or ensembl transcript found to overlap with the query cdna.

transcript score = /);

here the "total_transcript_exon" score is the sum of all transcript exon scores and "mrna_exon_nr" and "cdna_ex_nr" are the number of exons in the transcript and in the query cdna, respectively. the score can have values between  <dig> and  <dig>  where  <dig> indicates a perfect match in all exons from the vega/ensembl transcript to all the exons of the query cdna and the same number of exons. the transcript with the highest score is selected as the best overlapping one to the query cdna. all its relevant information is stored.

composite features
the extracted features are combined to calculate further relevant information for each cdna sequences .

mapping
first the mapping of a cdna sequence to the genome is analyzed in detail. the percentage of a cdna sequence that can be mapped to the genome gives an indication of possible colligation events during cdna cloning, potential errors in the genome assembly, or the existence of trans-splicing. all information obtained from the raw blat output and its filtering is used to calculate the quality of the mapping process by taking into account the number of mismatched positions internally and in the 3' and 5' ends .

cdna structure
the tests related to the cdna structure determine if the query cdna was the product of a single exon or a multi-exon gene and is calculated using the filtered blat exon results.

repeats
the number of repeats in the three regions described before in section  <dig> . <dig>  is analysed and post-processed to distinguish between simple repeats, low complexity repeats , and complex repeats . the repeat type composite feature in the corresponding region depends on how many repeats were found and how much they could influence the right cloning of the cdna: complex repeats > simple repeats > low complexity repeats.

splice sites score
once the splice type of each intron in a cdna has been defined, the ss type of the whole cdna is then defined . the ss-score is calculated as the percentage of "good" splice sites in a multi-exon cdna. splice sites are rated "good" when they match canonical, non-canonical, or u <dig> donor-acceptor pairs. a higher ss-score correlates with a better quality of the respective cdna. in the training set, cdnas sequences with internal deletion, when compared to a reference sequence, presented always a variable percentage of bad splice sites along the total number of splice sites. therefore, the presence and type of splice sites was valued as a positive feature for the cdna classification within caftan. such deletions are commonly artefacts that occur in the bacteria after cloning, where sequences of cdna inserts are deleted by recombination. since this recombination is independent of splicing, these events mostly do not occur at canonical splice sites

polya signal and tail
the number and type of signals are calculated for each cdna using polyasignal and the results are used to create the feature signal type . the signal type is selected according to the hexamer distribution  <cit>  found. the polya signal selection ranking is in the following order, in cases where more than one signal is found in one cdna: canonical > non-canonical_a > non-canonical_b > non-canonical_c. definitions of the hexamer types are given in table  <dig> 

contaminations
a polya contamination is true if there is a polya stretch in the genome at the 3' mapping position of the terminal cdna exon, this is classified as a genomic polya. then the 3' end of the last exon is checked for the presence of complex and simple repeats within its last  <dig> bp or  <dig> bp respectively. if repeats are found in these regions the cdna has "repeat contamination". if more than one repeat is found, only one will be shown with the following preference: first complex repeats in the following order, alu > l <dig> > sva > ltr, then simple repeats and last low complexity repeats.

"mixed contamination" means both types, ie. genomic polya and repeat contamination. the type of any putative contamination is classified and stored .

 <dig>  rule generation
the distribution of simple and composite features extracted from the training set  was studied depending on their tag- in the curated dkfz set-  using clustering methods. we found distinct relationships among features that were able to characterize different sets of observations in the training set. these profiles -relationships among features- were discussed and some times modified according to the curator's expert knowledge. the decision rules obtained are presented in table  <dig>  and use the terminology from table  <dig> 

the definition of splice site types  is described in table  <dig>  * good ss are canonical splice sites, non-canonical, and u <dig>  bad ss + are unknown and antisense combinations of donor and acceptors 

 <dig> ) "uncovered", i.e. those cdnas that mapped with less than  <dig> % of their length to the genome, which usually means the presence of too many gaps in the genome  <dig> ) "bad_se", i.e. bad single exon cdnas;  <dig> ) "bad_me", i.e. bad multiple exon cdnas;  <dig> ) "questionable_se", and  <dig> ) "questionable_me", are cdnas with single or multiple exons, respectively, that should be manually inspected by the curator/scientist in order to take a decision about their quality;  <dig> ) "good_se_cdna", i.e., high quality single exon cdnas;  <dig> ) "good_me_cdna", i.e., high quality multiple exon cdnas; 8) "partial_mapped", are cdnas with gaps bigger than  <dig> bp either in the 3', 5' end or in the internal region  <dig> ) "undefined", are any cdnas that do not fit into one of the previous categories because they failed to pass the evaluation pipeline. elements in the latter group will be used for the further refinement of the evaluation and classification system.

the quality assessment starts with the evaluation of the quality of a cdna mapping to the genome. the decision process is similar for multiple and single exon cdnas . however, for the former ones further information is required i.e., the splice sites type definition  and especially the splice sites score. the splice sites score  was defined as the percentage of canonical, non-canonical and u <dig> donor-acceptors pairs in the cdna across the total number of donor-acceptor pairs. a cdna is not allowed to contain antisense other unknown ss to be classified as "good splice sites". in contrast, the "bad" splice sites type is attached to a cdna when there is at least one unknown or antisense splice site among the donor acceptor pairs of a cdna.

a cdna is rated to be of high quality when it is perfectly mapped to the genome, has a polya signal and a polya tail, and in the case of multiple exons the ss score is higher than  <dig> % and the ss type is "good splice sites" . the ss score is required to be higher than  <dig> % for a cdna, to be classified as high quality, in the case that it contains "bad splice sites". this means that at least one of the donor-aceptor pairs is unknown or antisense. cdnas lacking the polya signal are considered to be "bad". any multiple exon cdnas having ss scores lower 60% are classified as "bad_me" .

cdnas with one type of contamination repeats, or genomic polya and/or lacking the polya tail need to fulfill other criteria in order not to be classified as "bad" . the presence of complex repeats in the last exon of the cdna is considered negatively in the quality selection process. alu sequences, like other sines, occur at higher frequency within non-coding domains of single copy genes  and they can affect the processing of pre-mrnas leading to altered gene products  <cit> . in addition, the presence of alu sequences and other retro-transposable elements  in pre-mrna can affect polyadenylation of transcripts and influence transcription as well  <cit> . these repeats can be present in total rna pool used to obtain cdna library . this situation makes possible the priming of other mrnas -especially partially spliced- during amplification . as result incomplete/problematic cdna sequences are produced.  alu repeats frequently contain polya sequences at the genomic level and these often serve as oligo dt-priming sites in the cdna generation process. such cdnas are usually 3' truncated and mostly terminate in intronic sequences. since this phenomenon is quite frequent we included the presence of an alu sequence at the 3' terminal end of a cdna as "bad". but, as observed in table  <dig>  if a cdna has a complex repeat in the last exon but all other composite features are following the profile of a good cdna, it will classified as "questionable_cdna".

the lack of a polya tail at the 3' end is also negatively considered during the quality assessment process, because a polya tail is a canonical motif that strongly promotes translation initiation through secondary structures, such as hairpins  <cit> . and moreover polya+ rnas have been found in the interchromatin granule clusters  in the nucleus which are not transported to the cytoplasm, as would be the case if they represented protein-coding mrnas, but do have regulatory functions  <cit> .

caftan uses the information recovered from vega and ensembl . if there is a perfect match of a vega/ensembl transcript  to the query cdna, then the cdna will be classified as "good" or "questionable". if the match is not perfect  the classification will depend on the presence/absence/type of contamination and/or the presence or absence of polya signal and polya tail . if there is at the same time a mixed contamination  the cdna will be considered always "bad".

although the presence of cpg islands is always checked, their presence or absence is not taken into account in the decision tree. it has been proven in mammalian genomes that many genes are not necessarily associated with these regions. nevertheless, this feature could be useful in the detection of 5' cdna's completeness by further manual verification. a major amount of protein-coding genes transcription start sites  â€“ around 70% â€“ are found to be near cpg islands  <cit> .

evaluation sets
we generated and analyzed two cdna sets in order to evaluate the performance of our method. the first set contained  <dig>  "known protein-coding" cdnas extracted from the human vega database, which is the current "golden" annotation standard in mammalians. for comparison we created a set of  <dig>  "bad" cdnas sequences. to do this, we selected from the human genome i) randomly a chromosome, ii) the beginning of the cdna according to the length of the randomly selected chromosome, and iii) a random number of exons, introns and their lengths. limits for the introns and exons lengths were taken from the work of sakharkar et al.,  <cit> . randomly generated exons were retrieved from the human assembly ncbi <dig> and joined to generate cdnas. for this set of "bad" cdnas a polya tail was artificially added at the 3'end of the terminal "exon".

program specifications
caftan was written using object oriented perl, and has been implemented as a downloadable stand-alone version available at  <cit> . preprocessing of cdna sequences with the program polyasignal is mandatory for the stand-alone version of caftan, as this takes output files of polyasignal as input. caftan requires a previous installation of bioperl- <dig>   and of ensembl  <cit>  because it utilizes the ensembl perl api  <cit>  and emboss .

caftan is also available under the w3h task system at the dkfz  <cit> . this web version takes as input multiple fast a sequences file and a blat  <cit>  output from the fasta sequence file in psl format with header.

the polyasignal source code is available through the authors and it has been submitted to be included in future releases of the emboss package. queries in the ensembl database can be done "remote" at the ensembl site or "locally" provided the user has installed the ensembl databases. the default is set to remote.

RESULTS
caftan allows the analysis of several thousands of cdnas within a few minutes, giving the curator/scientist an overview about the likelihood of having fully spliced/processed cdnas and providing the already existing annotation for the cdna set. it supports the rejection of low quality cdnas and helps selecting novel splice variants, and/or completely novel transcripts for new experiments.

the evaluation described in the implementation section to assess the performance of caftan showed that it is able to correctly classify more than 85% of  <dig> selected "known protein-coding" vega cdnas as high quality multi- or single-exon . it identified as good  <dig>  % of the single exon cdnas and  <dig> % of the multiple exon cdnas. in the set of random generated cdnas the fraction of cdnas that was predicted, as high quality was only  <dig> %, almost all being single exon cdnas. vega is a central repository for manual annotation of vertebrate finished genome sequences thus the "known protein coding" cdna set was selected as a reference for the evaluation.

when we analyzed the vega cdnas classified by caftan as "bad_se"  and "bad_multiple_exons"  we found, that in the case of the group classified as "bad_multiple_exon_cdna", all of them lacked the presence of a polya signal but had a perfect match to vega transcripts. the manual inspection by an expert curator of these vega cdnas sequences showed that most of the vega cdnas sequences were not complete, part of the 3'utr region failing or having an artefact 3'utr end. in table  <dig>  there is a summary of  <dig> selected cases, in which only  <dig> of these cases  are false negatives, . on the other hand, when inspecting the vega cdnas group classified as bad single exon  we found that most of them lacked a polya signal or had a non-conventional one. when checked in detail ,  <dig> of these  <dig> "bad_single_exons" were found to be histone coding cdnas. histone coding cdnas do not undergo polyadenylation due to the fact that they have a very short life and do not need to be stabilized. the rest either did not have a complete 3'utr or they were even products of internal priming events  <cit>  complicating a proper distinction between these cases. while the lack of a polya signal does not necessarily indicate an artifact, internal priming certainly is, and such cdnas must be regarded as noise for our porpouse. taking these results into account, the caftan can correctly classify up to  <dig> % of the cases, thus proving to be highly efficient. the number of "right" and "wrong" classified single exon cdnas in the vega set was very similar to the respective values in the random set.

all of them lack the presence of a polya signal but have a perfect match to vega transcripts, as it should be expected. the manual inspection by an expert curator of these vega cdnas showed that all of them but  <dig>  where not complete failing part of the 3'utr region or having artifact 3' end like no.  <dig> 

all of them lack the presence of a polya signal but have a perfect match to vega transcripts, as it should be expected. the manual inspection by an expert curator of these vega cdnas showed that  <dig> all of them are histone coding cdnas which do not go under polyadenylation. the rest either did not have a complete 3'utr region or was an artifact 3'.

it is worth mentioning that the "splice sites score" is the composite features that provided the most reliable information about the quality of multi-exon cdnas.

when analyzing the remaining "bad" multiple exons  cdnas, we saw that most of the wrong classification was due to mistakes in the mapping process. blat is the current fastest algorithm to map sequences to a genome. it is designed to find sequences of 95% and greater similarity in a minimum of  <dig> bases, thus it may miss shorter sequence alignments, making the mapping of shorter exons especially problematic. an alternative would be the use of megablast  <cit> , and the subsequent use of sim <dig>  <cit> . we have already used such an approach for all mammalian genomes in cdna2genome  <cit>  and recently the same approach was used for arabidopsis thaliana by hayden et, al <cit> . this approach implies a much larger processing time and a big bias through the selection of exons containing canonical splice sites by sim <dig>  <cit> . other programs like est_genome  <cit>  or like spidey  <cit>  are also accompanied by strong preferences in it's scoring for gt...ag splicing sites  <cit> . this bias is reduced when using blat because it provides pair-wise alignment information but not explicit predictions of splice junctions.

several cdnas were wrongly classified because of misalignments in the first and last exons that were due to the presence of repeat elements in the utr regions, and to misalignments of 3' terminal poly-a sequences. all these cdnas were classified as being of questionable quality. any cdnas in this category should not be discarded but a rating in this category should rather be an indicator to the scientist curator that he or she should look in detail in the caftan output and to take an expert decision on the quality of the query cdna. the cdnas in this category were about 5% in the multi-exon class of cdnas.

the transcript score, which evaluates the total overlap between a query cdna and the vega/ensembl annotated transcripts, was for both cdnas types -when using the human ncbi assembly 35- between  <dig> and  <dig>  in  <dig>  % of the cases, where  <dig> is a perfect match. the results presented here, are based on assembly  <dig> and so when looking in the vega annotation, the average of the transcript score is lower. this is due to the fact that vega still uses the assembly ncbi <dig>  while ensembl and all the databases available for blat use the assembly ncbi <dig>  this is a temporal problem that affects only to those chromosomes, which changed the mapping coordinates in the ncbi <dig> and will be solved in the moment that vega changes to the assembly ncbi <dig>  in the random generated cdnas sets all transcript scores remained under  <dig>  %.

caftan was implemented as a fast approach towards the selection of cdnas from resources that have been generated in high-throughput projects. a more accurate algorithm like megablast would certainly improve the alignments, but this would be at the cost of speed. in view of the high success rate of caftan in the analysis of the vega and random cdna sets already obtained with blat, we decided not to compromise speed for a possible small improvement in reliability. nevertheless, future implementations of caftan will be allowing users to upload either blat or megablast outputs or they can already use cdna2genome, which annotates cdnas using this approach but which needs long running times. both the web and the downloadable versions are modular and will further permit the implementation of additional filtering tools for alternative mapping methods.

additionally to the cdna quality classification, caftan provides extensive information about each cdna, which is divided in different tab tabulated outputs tables . the "mapping" output contains the exact mapping information of the cdnas to the selected genome after filtering of the blat exons. the "evaluation" output classifies the cdnas according to their quality and the presence or lack of the features described above. it provides the following fields: contamination, number of mismatches in the 5' and 3'end, mapping classification, exon number, splice site number, score and type, polya signal number type and score, repeats, repeats in the 3' end. "vega annotation" and "ensembl annotation" outputs contain detailed annotation of genes and transcripts in vega/ensembl overlapping the analyzed cdnas. this file includes a quality score for each overlapping gene and transcript that is based on the number of shared positions over the total length of the overlapping annotated gene/transcript. the table also contains gene identifiers, begin and end of mapping positions, chromosome number, number of exons, and information on shared and missed exons. "vega detailed annotation" and "ensembl detailed annotation" outputs provide further details at the individual exon level, plus positional differences between annotated vega/ensembl exons and exons of the query cdna. the "polyasignal" output contains the results of the search for polya signals and polya tails in the cdnas using the selected regular expressions. the final output of caftan is an "xml" file that contains all information from all outputs obtained in the process. this xml file can be directly integrated in user databases and used for further analysis with other programs.

currently we are working on the development of supervised learning algorithms for the improvement of cdna quality prediction, especially for single exon cdnas. in the future caftan will be additionally extended towards the classification of transcripts that are products of exon skipping events, alternative usage of poly  sites, and the presence of alternative promoters and transcription start sites .

the results described here were obtained with the default parameters established for caftan and optimized for mammals. one of the advantages of caftan is that it allows the adjustment of parameters to adapt it to any organism. the parameters can easily be changed in the configuration file . the polyasignal program can be configured for other genome preferences, and the rules to be taken into account can be modified for different genomes. new organism's genomic databases can be used as soon as they become available by adding them to the configuration file. we think that it is a very useful program for the annotation and research of unfinished genomes. the use of caftan as a first filtering step should be followed by an orf analysis like described by takeda et al.  <cit> . we further plan to extend the algorithm to the analysis of ests as well.

CONCLUSIONS
we have developed a new high-throughput sequence analysis tool, caftan , which performs a fast and reliable quality prediction of cdnas. several thousand cdnas can be analyzed in a short time, giving the curator/scientist a first quick overview about the quality and the already existing annotation of a set of cdnas. caftan does not substitute the manual expert curation and further detailed orf analysis; however it supports the rejection of low quality cdnas and the selection of likely novel splice variants, and/or completely novel transcripts. the successful exploitation of the large number of available cdna sequences and the respective clones in functional genomics experiments necessitates the fast distinction between noise and those cdnas that are valid for further detailed and manual annotation.

limitations
- existing databases in ensembl

- the need of a blat mapping output.

- the performance of caftan depends on the number of input cdnas and on the overall machine load. analysis of the  <dig>  cdnas from the vega set took  <dig>  seconds on a six processor sun enterprise. the remote use of the msql ensembl database could be slowed down when the ensembl server is extensively accessed, favoring a local implementation.

availability
operating system: linux, unix

programming language: perl5

requirements:

- for the download distribution it is necessary to install ensembl package, bioperl- <dig>  or higher, and the perl dbi package prior to the installation of caftan.

- use of the web version requires a husar account at  <cit> .

license:

restrictions to use by non-academics: license needed

authors' contributions
v.k conceived the initial idea. c.v, v.k and kh.g developed and designed the project. c.v and p.e designed and coded the program polyasignal, and designed caftan classes as well as the downloadable module. c.v. developed the tests, coded the program, created the test sets, and drafted the manuscript. a. h-w created the xml schema for caftan. a.p, s.w and s.s participated in coordination; curated manually the "bad" cdnas set and helped to draft the manuscript. all authors read and approved the final version of the manuscript.

supplementary material
additional file 4
table of dkfz annotated sequences

click here for file

 additional file 5
hand annotation of the dkfz cdnas sequences

click here for file

 additional file 2
polyasignal executable for emboss

click here for file

 additional file 3
polyasignal acd file for emboss

click here for file

 additional file 1
cpan distribution of the caftan software

click here for file

 acknowledgements
we thank ingo schupp and igor zwir for discussions and suggestions. the german federal ministry of education and research  supported this work with grants 01gr <dig> and 01gr <dig> and 01gr <dig> 
