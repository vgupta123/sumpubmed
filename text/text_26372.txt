BACKGROUND
development of high throughput transcription profiling techniques such as microarrays and sage  <cit>  has made it possible to evaluate the expression levels of genes on a genome wide scale. the ability to look at expression profiles of different cellular states has the potential to provide knowledge about the mechanisms driving such important events as differentiation, aging and tumorogenesis. in addition to understanding transcription profiles of individual genes, the ability to visualize relationships between whole sets of gene expression data provides the means to infer higher-order relationships between the sampled biological conditions  <cit> . in this paper, we describe the design and usage of an interactive viewer, which builds hypothetical phenetic networks from sage expression data. these networks may help to associate analyzed sage libraries with some intermediate stages in the development of different cellular states or progress of disease, such as cancer. as an example, we have used our program to analyze publicly available sage data, but our application is also applicable to microarray data analysis.

implementation and 
RESULTS
traditionally, hierarchical data are presented as a rooted or unrooted tree with bifurcating branches connecting different data points . generally, only the distances along the edges of the tree are shown proportionally. in a non-reticulated tree, the distance between nodes that are not directly connected is not easily visualized or understood. building a hierarchical tree benefits by operating in 3-dimensional space, as such 3-dimensional structure provides more details about the relationships between the analyzed datasets.

the algorithm of building phenetic networks or dendrograms, which we have used for our viewer, is generally applied in systematic biology. for systematic analysis, tree-building techniques are designed to order data in terms of phylogenetic relationships, from which evolutionary history can be inferred. in contrast, system analysis of sage and microarray data assumes that extraction of order in the relationships between different gene expression profiles and presents clues about biological processes and functions on molecular, cellular and tissue levels. systematic approaches may allow improvement of diagnosis, disease classification, and prognosis, as well as assist in drug design, among other scientific and medical goals.

we have developed a graphical viewer for analysis of the hierarchical organization of cellular expression profiles, analyzed by sage or microarray experiments. the output diagram is a system of nodes, each of which represents a sage or microarray experiment, and the connections between nodes in the diagram. for each node, the relative position on the graph depends on the differences between its expression profile and the expression profiles of the other analyzed nodes. in order to generate the diagram, the user can choose a distance metric to generate the comparison. our viewer currently offers five distance metrics, all having a different approach to the estimation of the distance between expression profiles. these metrics include euclidean, manhattan, pearson and pearson squared distances  <cit> . in addition, we have implemented a generic, 'quantitative' metric, which calculates distance as a ratio of the number of differently expressed genes to the number of similarly expressed genes 

the application loads the data from plain tab-delimited text files. currently, we provide support for two formats – generic, tab-delimited with optional tags for description and total number of tags in a sage library and geo . format of compatible files is shown in figure  <dig>  the calculation of distances is performed via a pairwise analysis, so the distance value is calculated for each possible pair of sage or microarray experiments. in all five cases the values are normalized and put into an array, which is used to draw the graph. this array, or 'distance matrix' may be exported as a plain text file.

our viewer automatically positions the analyzed nodes in 3d-space according to the calculated distances between them. in comparison to traditional phenetic techniques, mostly generating 2d-diagrams, this approach has several advantages. the constraints imposed by 2d-space are removed, so it is possible to get a more adequate snapshot of the system relationships between datasets. the nodes are connected, and by default it is possible to change the visibility for the connecting edges, adjusting the threshold for maximal length to be shown. in addition, in the default view mode the color of the edges reflects the tension, indicating if an edge is compressed or stretched. as the initially displayed length of an edge may be different from the calculated value for this connection, the user can estimate how accurate the lengths of the edges are is by looking at their color. treebuilder3d shows stretched edges in blue and compressed edges in red. as an alternative way to filter out insignificant  connections, our viewer can use a simple aggregation algorithm, analogous to neighbor-joining method using arithmetic averages, described in  <cit> . after the 'distance matrix' is loaded into the viewer, nodes are placed randomly and the application starts to move nodes in order to keep the length of connecting edges proportional to their input values. the application's algorithm attempts to achieve the most relaxed state of the graph, which should give the most informative display of relationships between datasets, as at that point the displayed length of the edges should become proportional to the input distances. the relaxation algorithm checks one node at a time, making the adjustments for the distances between the current node and all the others. eventually, after several cycles, diagram becomes stabilized . however, the absolute energetic minimum is rarely achieved – especially, with large number of data points. we tested the treebuilder3d, loading different number of sage libraries, and do not recommend opening more than  <dig> libraries, as it both degrades the performance of the application and makes it harder to achieve minimum tension between the nodes. switching to nj mode does not affect the placement of the nodes, but determines the branching order of the network. it is possible to remove expression libraries or to add them to the analyzed set interactively, while the viewer automatically adjusts the diagram. the underlying java3d api allows manipulating the graph in 3d coordinates, so the user has the ability to pan, rotate or zoom in/out. the viewer uses filenames as labels, which are shown on the selection list, as well as on the graph next to the nodes. alternatively, the 'description' option allows specification of an alternative description, which may be read from the header of the files with expression data.

CONCLUSIONS
treebuilder3d provides a simple, comprehensible view of relationships in a hierarchy when applied to analysis of large-scale gene expression data generated by methods such as sage. an advantage of representing relationships between gene expression profiles in a three dimensional tree diagram is that it allows the visualization of subtleties in internodal relationships that could be overlooked due to the constraints imposed by a two-dimensional tree diagram. treebuilder3d allows the display of analyzed data in a more natural and intuitive way.

availability and requirements
the program is written in java and runs on windows or linux platforms. in addition to compiled java executable and documentation, we provide the source code for treebuilder3d under the terms of the general public license  on our web site  <cit>  . treebuilder3d requires sun's jre  <dig>  or later , as well as java3d package version  <dig> . <dig>  which is available for download at . due to the limitations of the java3d api, currently there is no support for mac os. further information may be requested via e-mail to the corresponding author pruzanov@bcgsc.ca.

authors' contributions
pr and sjmj developed the main ideas and methodology; pr did the coding; sjmj provided feedback and coordination of the project. sjmj and pr both read and approved the final manuscript.

supplementary material
additional file 1
contains the compiled java executable, documentation and the source code for treebuilder3d. example data sets are also included for the testing purposes.

click here for file

 acknowledgements
steven jones is a scholar of the michael smith foundation for health research. the authors wish to acknowledge support from the bc cancer foundation, genome british columbia, genome canada. the authors also would like to thank erin pleasance, genome sciences centre and dr. sheldon mckay, cold spring harbour laboratory, for critical reading of the manuscript.

figures and tables
