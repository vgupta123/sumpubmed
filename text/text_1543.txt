BACKGROUND
the classic "lander-waterman model"  <cit>  provides statistical estimates for the read depth in a whole genome shotgun  sequencing experiment via the poisson approximation to the binomial distribution. although originally intended for estimating the redundancy when mapping by fingerprinting random clones, the lander-waterman model has served as an essential tool for estimating sequencing requirements for modern wgs experiments  <cit> . further-more, although it makes a number of simplifying assumptions  that are violated in actual experiments, extensions and generalizations  <cit>  have continued to be developed and applied in a variety of settings.

the advent of "high-throughput sequencing", which refers to massively parallel sequencing technologies has greatly increased the scope and applicability of sequencing experiments. with the increasing scope of experiments, new statistical questions about coverage statistics have emerged. in particular, in the context of sequence census methods, it has become important to understand the shape of coverage functions.

sequence census methods  <cit>  are experiments designed to assess the content of a mixture of molecules via the creation of dna fragments whose abundances can be used to infer those of the original molecules. the dna fragments are identified by sequencing, and the desired abundances inferred by solution of an inverse problem. an example of a sequence census method is chip-seq. in this experiment, the goal is to determine the locations in the genome where a specific protein binds. an anti-body to the protein is used to "pull down" fragments of dna that are bound via a process called chromatin immunoprecipitation . these fragments form the "mixture of molecules" and after purifying the dna, the fragments are determined by sequencing. the resulting sequences are compared to the genome, leading to a coverage function that records, at each site, the number of sequenced fragments that contained it. as with many sequence census methods, "noise" in the experiment leads to random sequenced fragments that may not correspond to bound dna, and therefore it is necessary to identify regions of the coverage function that deviate from what is expected in the "null" situation when only noise is present. finding peaks that are extreme requires a definition of "extreme" in the sense of some test statistic taking a large value as well as a probability model for the coverage process that leads to the null distribution of the test statistic and hence to means for calibrating what values of the test statistic are improbably large in the null regime. the height of a peak is one obvious statistics, but we hope to get more discriminating procedures by also considering a suitably defined numerical summary of the shape of a peak. indeed, the shape-based methods presented here have been used to develop a peak-caller--t-pic--for the chip-seq assay  <cit> .

the purpose of this paper, however, is not to develop methods for data analysis, but rather to present a null model for the shape of a coverage function that is of general utility. that is, we propose a definition for the shape of a coverage function in terms of the topology of a tree. we describe a random instance assuming that fragments are selected at random from a genome, with lengths of fragments given by a known distribution. we indicate how our description can be used to either compute analytically or approximate via simple monte carlo simulation the distributions of quantities of interest in a data analysis.

methods
in this section, we use some specialized mathematical terminology and notation that the reader may be unfamiliar with. we feel it is important to include this in order to make our statements rigorous and mathematically correct. we will give the definitions of some of the concepts and a general idea of others, but first we set some notation. the symbols ℝ,ℤ, and ℤ≥ <dig> stand for the real numbers, integers, and non-negative integers , and the elements of a set can be listed inside curly braces, for instance a = { <dig> ,3}.

the shape of a fragment coverage function
we begin by explaining what we mean by a coverage function. given a genome of length n, a coverage function is a function f : { <dig>  ..., n} → ℤ≥ <dig>  the interpretation of this function is that f is the number of sequenced fragments obtained from a sequencing experiment that cover position i in the genome. because n is very large, we work with the set ℝ and redefine a coverage function as f : ℝ → ℤ≥ <dig>  which simplifies our analysis. we next introduce an object that describes a sequence coverage function's shape. our approach is motivated by recent applications of topology including persistent homology  <cit>  and the use of critical points in shape analysis  <cit> . for a given coverage function f : ℝ → ℤ≥ <dig>  we will define a rooted tree, which is a particular type of directed graph with all the directed edges pointing away from the root. this tree tf is based on the upper-excursion sets off : uh: = {)|f ≥ h},h ∈ ℤ≥ <dig> and keeps track of how the sets uh evolve as h decreases. long paths in tf represent features of the coverage function that persist through many values of h.

specifically, for each h ∈ ℤ≥ <dig>  let ch denote the set of connected components of the upper-excursion set uh. that is, each element of ch is an interval i such that f ≥ h for all x ∈ i and if j is another interval for which i ⊂ j and j ≠ i , then f <h for some y ∈ j. we define the rooted tree tf =  as follows

• vertices in v correspond to the connected components in the sets ch, with h ranging over all non-negative integers.

•  ∈ e provided their corresponding connected components ci∈chi and cj∈chj with hi <hj satisfy hi = hj- <dig> and cj ⊂ ci.

note that the root of tf corresponds to the single connected component in c <dig>  the tree tf is very similar to a contour tree , which is built using level sets of a function, and a join tree  <cit> . indeed, suppose we ignore every vertex that is adjacent to only one vertex with greater height. then, the remaining vertices of tf correspond to  local extrema of f. each local maximum of f yields the birth of a new connected component as we sweep down through h ∈ ℤ≥ <dig> while a local minimum of f merges connected components. since we do not require f to have distinct critical values , the vertices in tf can have arbitrary  degrees, as is depicted in figure 1c.

in the sequel, we will use the following equivalent characterization that can be found in . given a coverage function f : ℝ → ℤ≥ <dig> with f = f =  <dig> and f >  <dig> for x ∈ , we form an integer-valued sequence x <dig>  ..., x2n that records the changes in height of f on the interval . first, we note that while the coverage from one nucleotide to the next may jump by more than one, we can always extend the known function values to define a coverage function f on ℝ whose jumps are all one unit. in any case, for the probability model of the coverage function that we propose below, jumps of size greater than one occur with zero probability. then, the sequence x <dig>  ..., x2n consists of the y values that f travels through from x <dig> := f =  <dig> to x2n := f =  <dig> and satisfies

 x0=x2n= <dig> xi>0  for  0<i<2n,|xi−xi−1|=1  for  1≤i≤2n. 

such a sequence is called a lattice path excursion away from  <dig>  next, we define an equivalence relation on the set { <dig>   <dig>  ..., 2n} by setting

 i≡j⇔xi=xj=mini≤k≤jxk. 

the equivalence classes under this relation are in 1: <dig> correspondence with the connected components in the upper-excursion sets of f|. one equivalence class is { <dig>  2n}, and if {i <dig>  ..., ip} is an equivalence class with  <dig> <i <dig> <i <dig> < ... <ip then xi1−1=xi1− <dig> , whereas xiq−1=xiq+ <dig> for  <dig> ≤ q ≤ p conversely, any index i with xi- <dig> = xi- <dig> is the minimal element of an equivalence class. we use the minimal element of each equivalence class as its representative. thus, we can view the vertices of tf| as the set {0} ∪ {i|xi- <dig> = xi-1} two indices i <dig> <i <dig> are adjacent in tf| provided xi2=xi1+ <dig> and xk≥xi <dig> for i <dig> ≤ k ≤ i <dig>  figure  <dig> gives an example of a coverage function together with its lattice path excursion  and rooted tree. the minimal elements of each equivalence class in figure 1b are depicted with red squares.

planar poisson processes from sequencing experiments
in order to model random coverage along the genome thought of as a continuum, we adopt the perspective of the lander-waterman model and use a poisson process to give random starting locations for the fragments. specifically, we suppose that the left end-points of the fragments form stationary poisson point process on ℝ with intensity ρ.

at each point of the poisson point process we lay down an interval that has that point as its left end-point. the lengths of the successive intervals are independent and identically distributed with common distribution μ. we will use the notation x for a coverage function built from this process and xt for the height at a point t.

let t <dig> t <dig>  ... be the left-end points and l <dig> l <dig>  ... be the corresponding lengths of intervals. the interval given by  will cover a nucleotide t <dig> provided ti ≤ t <dig> and ti + li ≥ t <dig>  we can view this pictorially by plotting points {} in the plane. then xt0-- the number of intervals covering t0-- is the number of points in the wedge-shaped region in figure  <dig> 

before defining a two-dimensional poisson process, we note that the reader can think of borel sets as being the "nice" subsets of ℝ <dig> that measures are defined on, where a measure is a generalization of the area of a set. any set the reader can imagine is almost certainly a borel set and we include this terminology to maintain mathematical rigor - there are difficulties that arise in defining measures in a self-consistent manner on all subsets of ℝ <dig> that don't arise if we restrict to borel sets. we now recall the definition of a two-dimensional poisson process and refer the reader to  or  for the details. suppose is a locally finite measure on the borel sets ℬ  . a random countable subset ∏ of ℝ <dig> is called a non-homogeneous poisson process with mean measure Γ if, for all borel subsets a, the random variables n := # satisfy:

 <dig>  n has the poisson distribution with parameter Γ, and

 <dig>  if a <dig>  ..., ak are disjoint borel subset of ℝ <dig>  then n, ..., n are independent random variables.

the following theorem is a theoretical statement about our null model for random fragment placement and is a consequence of . the theorem and the work that follows from it will allow us to access the shape of random fragment placement by giving a description we can simulate.

theorem  <dig>  the collection {} of points obtained as described above is a non-homogeneous poisson process with mean measure ρm ⊗ μ.  here m is lebesgue measure  on ℝ.

the expected value of the coverage function xt <dig> at an arbitrary point t <dig> is the expected number of points that the poisson process puts into the wedge-shaped region in figure  <dig>  by definition, this is the mass assigned to the wedge by the mean measure ρm ⊗ μthat is, e = ρm ⊗ μnote that

 ρm⊗μ=ρ∫−∞t0∫t0−u∞μdu=ρ∫−∞t0μ)du=ρ∫0∞μ)ds=ρ∫0∞sμ, 

where the last line follows from an integration-by-parts. thus, e] is the product of the intensity ρ and the mean length of a fragment.

remark: the average height e  can be computed without the use of theorem  <dig>  we include the derivation above as a first illustration that properties of the coverage function can be understood in terms of the two-dimensional poisson process.

fragment lengths have a general distribution
to use the shape of fragment coverage in a data analysis, one needs to understand the distribution of the shape when fragments are laid down according to the null model described above. in particular, one is interested in the probability of seeing shapes associated with trees that have a height exceeding some high level. one way of doing this would be to first simulate a very long stretch of the two-dimensional poisson process, determine the coverage function, construct the trees for peaks that exceed a high level, compute our shape statistic for each tree, and then record the empirical distribution of the resulting values. however, peaks that exceed high levels occur very infrequently and so we would need to simulate infeasibly long stretches of the poisson process in order to determine the probabilities we are interested in with reasonable accuracy. thus, in this section we propose a markov approximation that lets us start at high levels . the corresponding trees are distributed as galton-watson trees with generation-dependent geometric offspring distributions and these are easy to simulate. in the results and discussion section, we compare this approximation to that obtained by simulating the poisson process for fixed length fragments.

suppose that we have a general distribution μfor the fragment lengths. the discrete-time stochastic process that records the values of x at its successive jumps is typically not a markov chain , but we will compute the conditional probability that x takes the values k ±  <dig> at its next jump given that it currently has the value k and use the discrete-time markov chain with transition probabilities given by these conditional probabilities as an approximation for the actual process of successive values of x. more precisely, we observe x at some fixed "time" -which might as well be  <dig> because of stationarity, and ask for the conditional probabilities given x <dig> that the next jump of x will be upwards to x <dig> +  <dig> or down-wards to x0- <dig>  let t denote the time until the next fragment comes along. this random variable has an exponential distribution with rate ρ and is independent of x <dig> . if we condition on x <dig> = k, the two-dimensional poisson point process must have k points in the region

 a:={:−∞<t≤ <dig> −t<l<∞}, 

depicted in figure  <dig>  conditionally, these k points in a have the same distribution as k points chosen at random in a according to the probability measure

 ρm⊗μρm⊗μforb⊂a. 

however, in order that the next jump after  <dig> is up-wards, the two-dimensional poisson point process must have no points in the orange region

 {:−∞<t≤ <dig> −t<l<t−t} 

in figure  <dig> as these fragments end before time t. this leaves the k points lying in the blue region

 {:−∞<t≤ <dig> t−t≤l<∞}, 

which occurs with probability )duρ∫0∞μ)du)k.

thus, conditional on x <dig> = k, the probability that the next jump will be upwards is

 ∫0∞)du∫0∞μ)du)kρe−ρtdt. 

write p for this quantity. to build trees, we are interested in the jumps of the coverage function, and hence we define a discrete-time markov chain on the nonnegative integers with transition probabilities

 p={ <dig> if i=0 and j= <dig> p,if i≥1 and j=i+ <dig> −p,if i≥1 and j=i− <dig> ,otherwise. 

suppose now we have a lattice path excursion starting at  <dig>  given a vertex v of the associated tree at height k, we are interested in the number of offspring  of this vertex. suppose i <dig> is the minimal equivalence class representative for vertex v, and suppose i <dig> the equivalence class of i <dig> is {i <dig>  i <dig> ..., in} with i <dig> <i <dig> < ... <in. then, we have xir=k for  <dig> ≤ r ≤ n, xir+1=k+ <dig> for  <dig> ≤ r ≤ n -  <dig>   xin+1=k− <dig>  and xt >k for i <dig> <t <in with t ≠ some ir. from the markov property, for  <dig> ≤ j ≤ n we have the equations

 ℙ{xij+1=k+1|xij=k}=p  andℙ{xij+1=k−1|xij=k}=1−p. 

the resulting tree is a galton-watson tree with generation-dependent offspring distributions . indeed, the probability a vertex at height k has n offspring is given by

  pn), 

which is the probability of n failures before the first success in a sequence of independent bernoulli trials where the probability of success equals 1-p. the utility of equation  <dig> is that it allows one to  simulate trees for peaks that exceed a high level under the null model, making it possible to compare trees built from actual data to those formed by random fragment placement.

we close this section by processing another feature of the trees  that we can compute using our markov approximation. let r be probability that our markov chain started in height i reaches height j before it hits height  <dig>  we have the relations

  r=pr+)r 

with the boundary conditions r =  <dig> and r = 0: next, given a height h, let yn:=rr, for  <dig> ≤ n ≤ h. using equation , we have

 yn+1=yn+−1)yn−1p 

for  <dig> ≤ n ≤ h -  <dig> with y <dig> =  <dig>  y2=1p. we may solve inductively for yh and obtain r=1yh. the quantity r gives the probability that a tree corresponding to a single lattice path excursion away from  <dig> and coming from the null model is at least as tall as height h. note that this type of tree comes from a block where the coverage function rises from  <dig> and then back again-often referred to as an island or contig. this probability can be used to do an initial "filtering" of peaks in a data analysis: one first concentrates on peaks that exceed some height that is calibrated using a knowledge of r and then computes the shape statistic and associated p-values for just those peaks. as an example, figure  <dig> in the results and discussion section shows r plotted for the fixed fragment length.

RESULTS
fragment lengths have the exponential distribution
when the distribution μof fragment lengths is exponential with rate λ, our markov approximation is exact, as shown below. in this case, we have μ) = ℙ{l >s} = e-λ sand

 e=ρ∫0∞e−λsds=ρλ. 

claim  <dig>  the process x is a stationary, time-homogeneous markov process.

proof. it is clear that x is stationary because of the manner in which it is constructed from a poisson process on ℝ <dig> that has a distribution which is in-variant under translations in the t direction; that is, the random set {} has the same distribution as {} for any fixed t ∈ ℝ. since μis exponential, it is memoryless, meaning for any interval length l with an exponential distribution

 ℙ{l>a+b|l>a}=ℙ{l>b}. 

this means that probability that an interval covers t <dig> knowing that it covers t <dig> is the same as the probability that an interval starting at t <dig> covers t <dig>  thus, the probability that xt2=k given xt for at t ≤ t <dig> only depends on the value of xt <dig> 
 indeed, in terms of time, ℙ{xt2=k|xt1=k′} depends only on t <dig> -t <dig> 

more specifically, x is a birth-and-death process with birth rate β = ρ in all states k and death rate δ = kλ in state k ≥  <dig>  the jumps of x are given by a discrete-time markov chain with transition matrix

 p={ <dig> if i=0 and j= <dig> ρρ+iλ,if i≥1 and j=i+ <dig> iλρ+iλ,if i≥1 and j=i− <dig> ,otherwise, 

and we have the probability a vertex at height k has n offspring is

 nλkρ+λk. 

note that as the exponential distribution is the only distribution with the memoryless property, we lose the markov property when μis not exponential.

fragments have a fixed length
suppose μis the point mass at l . then

 μ)={ <dig> u<l <dig> u≥l, 

and

 ∫t∞μ)du={∫tldu=l−t,t<l <dig> t≥l. 

this gives

 p =∫0lklkρe−ρtdt=∫01wkρe−ρldw=θe−θ∫01wkeθwdw 

for k ≥  <dig>  where θ: = ρl = e. we integrate by parts and find that p = θe-θq where

 q=wkeθwθ|w=0w=1−kθ∫01wk−1eθwdw=eθθ−kθq 

for k ≥  <dig>  which yields the recursion

  p=1−kθp, 

for k ≥  <dig> with p=1−1θ+e−θθ. solving explicitly, we obtain

  p=k!k−jj!θk−j+k−1e−θθk) 

for k ≥  <dig>  below we verify that equation  satisfies the recursion in equation :

 1−kθp=1−k!θk−1−jj!θk−1−j+k−2e−θθk−1)=k!k−jj!θk−j+k−1e−θθk)=k!k−jj!θk−j+k−1e−θθk)=p. 

next, we compare the trees built from the markov approximation to the trees arising from the poisson process when fragments have a fixed length. we simulate trees with average height θ =  <dig> , <dig>  and  <dig> using both the poisson process and the markov approximation. the histograms in figure  <dig> show the densities of simulated trees for the markov approximation  and for the poisson process  for θ =  <dig> , <dig>  and  <dig>  additionally, the plots in figure  <dig> depict the probabilities r  and Π{tree from simulated poisson process has height ≥ h} . these figures illustrate that, for large θ, the markov approach seems like a reasonable approximation.

our observation that randomly sequenced fragments from a genome form a planar poisson process in  coordinates has implications beyond the coverage function analysis performed in this paper. for example we have found that the visualization of sequencing data in this novel form is useful for quickly identifying instances of sequencing bias by eye, as it is easy to "see" deviations from the poisson process. an example is shown in figure  <dig> where fragments from an illumina sequencing experiment are compared with an idealized simulation . specifically, paired-end reads from an rna-seq experiment conducted on a gaii sequencer were mapped back to the genome and fragments inferred from the read end locations. bias in the sequencing is immediately visible, likely due to non-uniform pcr amplification  <cit>  and other effects.

the "shape" we have proposed for coverage functions was motivated by persistence ideas from topological data analysis . in the context of tda, our setting is very simple , however unlike what is typically done in tda, we have provided a detailed probabilistic analysis that can be used to construct a null hypothesis for coverage-based test statistics. for example, computing test statistics  <cit>  based on the trees constructed from coverage functions and comparing those to the statistics expected from the galton-watson trees has been used to determine protein binding sites in chip-seq assay  <cit> . it should be interesting to perform similar analyses with high-dimensional generalizations for which we believe many of our ideas can be translated. there are also biological applications, for example in the analysis of chip-seq experiments  <cit> , as previously mentioned.

CONCLUSIONS
we believe that the study of sequence coverage functions that we have initiated may be of use in the analysis of many sequence census methods. the number of proposed protocols used in such methods has exploded in the past two years, as a result of dramatic drops in the price of sequencing. for example, in january  <dig>  the company illumina announced a new sequencer, the hiseq  <dig>  that they claim "changes the trajectory of sequencing" and can be used to sequence  <dig> gb per day. al-though technologies such as the hiseq  <dig> were motivated by human genome sequencing a surprising development has been the fact that the majority of sequencing is in fact being used for sequence census experiments  <cit> . the vast amounts of sequence being produced in the context of complex sequencing protocols, means that a detailed probabilistic under-standing of random sequencing is likely to become increasingly important in the coming years.

authors' contributions
lp proposed the problem of understanding the random behaviour of coverage functions in the context of sequence census methods. vh investigated the coverage function and lattice path excursions based on ideas from topological data analysis. se developed the probability theory and identified the relevance of theorem  <dig>  sne, vh and lp worked together on all aspects of the paper and wrote the manuscript. all authors read and approved the final manuscript.

