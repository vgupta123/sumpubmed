BACKGROUND
essential information regarding protein function is generally dependent on the protein’s tertiary structure. this includes the enzymatic function of a protein, and also the binding of ligands, such as small molecule inhibitors  <cit> . methods developed for predicting an enzymatic function of a protein by identifying catalytic residues include: finding local characteristics of functional residues  <cit> , applying known templates of active sites  <cit>  or identifying the surface shape of active sites  <cit> .

in order to predict ligand binding , we first need to determine a 3-dimensional structure of the protein in question, which can be done using several experimental or computational methods  <cit> . structure-based pocket prediction employs geometrical algorithms or probes mapping/docking algorithms  <cit> . comparing these two kinds of methods, it can be said that the geometrical algorithms have low computational costs in contrast to the mapping/docking and scoring of molecular fragments, but the latter algorithms have a greater physical meaning. geometrical algorithms analyze protein surfaces, and once a structure has been determined, a number of algorithms may be used to predict binding pockets on the protein surface  <cit> . one such example, surfnet  <cit> , fits spheres into the spaces between protein atoms and finds gap regions. the results obtained this way correspond to the cavities and keys of a given protein. an algorithm based on geometric hashing called visgrid  <cit>  uses the visibility of constituent atoms to identify cavities. “active site points” are identified by pass  <cit> . in this method the protein surface is coated with a layer of spherical probes, then those that clash with the protein or which are not sufficiently buried are filtered out. the active site points are identified from the final probes. another method is ligsite  <cit> , which is an improvement of the pocket algorithm  <cit> . this algorithm puts protein-occupied space in a grid and identifies clefts by scanning areas that are enclosed on both sides by the protein’s atoms. an alpha-shape algorithm is used by cast  <cit>  and apropos  <cit> . drugsite  <cit>  and pocket-finder  <cit> , in addition to the protein’s shape, also consider physicochemical properties for identification of ligand binding pockets. further geometrical algorithms are travel depth  <cit> , voidoo  <cit> , and cavity search  <cit> . qsitefinder  <cit>  uses interaction energy computation between the protein and a van der waals probe to find favorable binding sites. some methods using mapping/docking and scoring of molecular fragment concepts are described by dennis et al.  <cit> , kortvelyesi et al.  <cit> , ruppert et al.  <cit> , and verdonk et al.  <cit> . there are also several docking based methods that use ligands to probe the proteins for binding sites  <cit> .

computer-aided drug design often applies protein–ligand docking methods, most commonly structure-based methods. these methods provide support to the rational design and optimization of novel drug candidates  <cit> . many structure-based protein–ligand docking methods have been reported in the literature  <cit> . these methods generally rely on first identifying a ligand-binding pocket in the protein structure.

finding a comprehensive, fast and automated method that can accurately predict ligand-binding pockets on protein surfaces is a major challenge in virtual screening biophysics. this goal leads us to introduce a new method for finding putative ligand-binding pockets on a protein surface, and for identifying the most important characteristics of these pockets: surface area, volume, and potential interacting atoms. this information could be used to cluster protein pockets into similarity classes, and could be a valuable resource leading to a significant decrease in the cost and time expended in the drug discovery process.

the method we present in this paper is based on computational geometry and voxelization concepts. in this method we do not use delaunay tessellation, the vision criterion, or fitting spheres between atoms, in contrast to some of the methods mentioned above. the castp method has used the delaunay triangulation and the voronoi concepts to find putative pockets and voids. this method triangulates the surface atoms and clusters triangles by merging small triangles to neighboring large triangles  <cit> . in our work we simply use the convex hull concept and generate a pocket by a grid box formed by the extreme points of a triangle. then, we consider only the atoms closest to the triangle in the formed pocket. the distance to the convex hull is used for choosing the surface atoms. thus, our method is not iterative and does not require a flow through all points, hence the computational cost is relatively low. we also take only a given number of empty voxel neighbors for each atom. voxelization of space for finding putative pockets does not have an essential role for finding surface atoms, unlike visgrid or grid-based methods, which are based on searching for empty voxels in different directions. we also use voxelization for finding the positions of possible ligands and also to determine physical properties of the pockets.

comparative modeling methods use fold assignment and template selection for comparing the target protein to a set of proteins with known structures and to search for homologous proteins that have approximately similar structures. some of these methods are blast  <cit> , psi-blast  <cit>  and hhpred  <cit> . i-tasser  <cit>  is a composite approach of comparative modeling and threading methods  <cit> . a summary of comparative modeling is given by  <cit> . in our method we also consider some biochemical properties of the protein’s atoms and residues as is explained below. hence, the proposed method is not purely geometrical. we demonstrate that the results obtained using this method are in good agreement with empirically known results. hence developing it further may offer even more accurate and reliable results.

methods
we first voxelize the volume of a box defined to contain the extreme points of the protein’s atomic positions. then, we use the convex hull concept to obtain the smallest convex polyhedron containing all of the protein’s atoms. in 3-dimensional space, a convex hull surface is formed by triangles, as shown in figure  <dig>  in the present context, each of these triangles can define a pocket, as illustrated in figure  <dig>  to define a specific pocket, we consider the volume generated by the extreme positions of the triangle vertices as follows: each triangle contains three vertex points,

 ri≡xi,yi,zi,i= <dig> , <dig>  

which we should consider as

 extremexi,extremeyi,extremezi, 

where “extreme” indicates either a minimum or a maximum value. figure  <dig> shows a given triangle on a convex hull. we have made the grids with a length of 1 Å between  in each axis.normally, some parts of this rectangular cube are out of the convex hull, but we do not concern ourselves with them because they will be eliminated by another criterion, namely to keep only a given number of empty voxels near each protein atom in a pocket. figure  <dig> shows only the inside of a convex hull part of a pocket in 2-dimensions and its grid is shown by points .

then, we obtain the voxels, which are contained within this generated volume, and separate the voxels into those that contain protein atoms and those which do not. next, we identify the nearest empty voxels with respect to these protein atoms. these empty voxels give us the possible positions of ligand atoms for this particular protein pocket. at this step, we have found a large number of “pocket” envelopes and all the atoms belonging to these pockets are the “protein’s surface atoms”.in some cases, the entire space  under a triangle is common with another space so we say that these spaces overlap with each other. the overlap is defined by the number of atoms in common between the two pockets divided by the total number of atoms in a pocket, which means the overlap is also dependent on the size of a pocket, so that the overlap between two pockets is not symmetric. figure  <dig> shows the overlap between two pockets in 2-dimensional space. as we can see in this figure, the overlap size of the common site  divided by the size of the pocket  for each pocket is different.

if all atoms contained in a set of the pocket atoms exist in the other pocket, it has an overlap of 100%. however, the second pocket may have more atoms than the first one, i.e. it has all atoms of the first pocket plus other atoms. for example, the overlap between pockets # <dig> and # <dig> might be 100% while the overlap between pockets # <dig> and # <dig> is only 50%, because the number of atoms in pocket # <dig> is twice as large as the number of atoms in pocket # <dig>  and all atoms belonging to pocket # <dig> are also contained in pocket # <dig>  but only a half of the atoms in pocket # <dig> are also in pocket # <dig>  accumulating all pockets with a given overlap between them as new pockets is the next step.

the final step is related to biochemical and physical criteria such as hydrophobicity, hydrogen bonding, ionic and van der waals interactions, and also the depth, surface area and volume comparisons between a given pocket and a ligand. by using biochemical conditions, we can find which atoms and which corresponding residues could potentially participate in an interaction with the ligand’s atoms. tables  <dig> and  <dig> propose a set of simple biochemical conditions. it should be noted that to find an active site, more accurate conditions should lead to more accurate results. in this step we can also compute the size of pockets.

abbreviations used:hba: hydrogen bond acceptor, hbd: hydrogen bond donor, vdw: van der waals interaction, ion: ionic interaction, sul: sulfur interaction.

the bond list is given in the pdb file conect lines.

a detailed description of the algorithm is given in the following:

the algorithm

 <dig>  input protein atom position data, and define a box by using the extreme positions of the atoms.

 <dig>  voxelize the box by considering the voxel with  <dig> Å in length, width and height.

 <dig>  compute the convex hull surrounding the protein atoms and obtain the volume of the convex hull and the surface area of atoms.

 <dig>  separate empty voxels  from voxels filled by the protein atoms in the convex hull.

 <dig>  define the pockets by the volume generated by the vertices of each triangle on the convex hull.

 <dig>  compute the overlap between two neighboring pockets and assemble the pockets with an overlap greater than a minimum value .

 <dig>  find the physical properties of the pockets such as depth, surface and volume.

 <dig>  find the residues corresponding to the pocket atoms.

 <dig>  assess the biochemical conditions  <cit>  as introduced in table  <dig> . in this step we can find the atoms and residues that participate in the potential active site.

 <dig>  compare physical and biochemical properties between ligand atoms  and the atoms of a given pocket, such as: the size of pockets  with ligand size, the number of hydrogen donor/acceptor atoms, possible rings, or van der waals interactions, etc.

supplementary steps to compare our results with known active sites

 <dig>  compute the number of correct residues predicted in each pocket of the unliganded protein and divide it by the number of residues in an “active site” of the liganded protein as reported in the pdb, i.e.

 cf=correctfraction=numberofcorrectresiduespredictedinpocketnumberofresiduesinactivesite 

 <dig>  optional step. compute the minimum distance between the ligand atoms and each residue atoms in the pocket. then, filter residues of a pocket with the minimum distance greater than the given values, for example  <dig>  Å.in figure  <dig>  we illustrate these steps in 2-dimensional space for better clarity. here, we need to use a line instead of a triangle to define a pocket. figure  <dig> uses the example of the protein labeled 1a6u in the pdb. it shows 3-dimensional atomic positions of the protein and the atoms that belong to a pocket.

RESULTS
in reality, the geometrical criteria give initial information about physical properties for the possible protein-protein or protein-ligand docking, determining shapes, sizes, etc. for docking to occur, the recognized geometrical protein pocket should be a protein’s active site. finding active sites is very complicated for both in vitro and in silico methods. there are many computer programs that find active sites  <cit>  but they have high computational cost associated with them and also they do not typically determine physical properties of the active site which means that we need to find a ligand in spite of lacking some important information. therefore, it is imperative to use mixed geometrical and biochemical methods to find possible pockets in a protein. this paper has introduced a method to find protein pockets with a higher probability of interactions than based on exclusively biochemical methods. this method offers a speed-up of the drug discovery process by allowing clustering of both the protein pockets and ligands.

we first demonstrate our method by describing an example, namely a pair of unliganded and liganded proteins, 1a6u and 1a6w. we have used only non-water atoms of 1a6u to find its pockets. these pockets are reported in table  <dig>  to verify these results, we check the site remark lines for the pdb file of its liganded pair structure, i.e. 1a6w, and we compare the residues of each active sites of the pdb file 1a6w with the residues obtained in each computed pocket. then, we obtain the cf –value for each active site. the last two columns of table  <dig> report these values.

pocket num.
*
** 
ha

a 


b 

*** 
cf
cf
st 
as, hap

c

nd 
as, ac1

c

*pocket number indicates the number in the protein’s atomic positions convex hull surface rows, and they correspond to three vertices of triangles.

**noa means the number of atoms.

***vdw means van der waals.


a
ha means hydrogen bond acceptor.


b
hd means hydrogen bond donor.


c
these are the cf-values . for 1a6w in pdb two active sites  are reported as hap and ac <dig> 

here, we give a summary discussion regarding the properties of the unliganded protein structure 1a6u. it has  <dig> atoms and its box has 43 × 49 × 41 voxels. the convex hull completely surrounded by triangles involves  <dig> triangles, which means the 1a6u structure can have at most  <dig> possible pockets. however, only  <dig> pockets remain with a  <dig>  overlap cutoff between pockets. by using biochemical conditions, only  <dig> pockets remain and then by using physical conditions of depth and surface, only  <dig> pockets remain. these remaining pockets are listed in table  <dig>  finally, only four pockets are left with a cf of 25% correctly predicted residues as shown in table  <dig>  the liganded protein reported in the pdb is 1a6w , and has the nip ligand, which has  <dig> atoms with an  <dig>  Å length and a  <dig>  Å <dig> surface area. thus, the protein pockets should have values of depth and surface area greater than these. the minimum distance between the atoms of arg 350h in 1a6u with the atoms of the active sites in 1a6w is  <dig>  Å. table  <dig> shows the pockets’ residues and their minimum residue distances for 1a6u to the ligand atoms of nip reported in the heterogenic atom lines in the pdb file of 1a6w.

pocket #  <dig>  
cf
pocket #  <dig>  
cf
pocket #  <dig>  
cf
pocket #  <dig>  
cf
there are four predicted pockets with more than 25% of residues in common between the pockets and the active sites. the values in parentheses are the minimum residue distances for 1a6u to the ligand atoms of nip reported in the heterogenic atom lines in the pdb file of 1a6w.

table  <dig> gives all pockets of 1a6u, where only the two last columns are obtained by the comparison of the results with the binding sites hap and ac <dig> of 1a6w . in table  <dig> the pockets are numbered and ordered arbitrarily. this table and all results were produced independently of the final answer.

as can be seen in figure  <dig>  which is shown in the pdb website for the 1a6w protein, only five residues – tyr 399h, arg 350h, trp 93 l, tyr 401h and trp 98 l – participate in the interaction with the nip ligand, while in the pdb file of 1aw <dig> two active sites with  <dig> and  <dig> residues are reported . this shows that a maximum of 50% of the active site residues reported in the pdb for 1a6w participate in the interaction with the nip ligand . in our computation, for example, in the unliganded protein 1a6u the best pocket has a cf equal to  <dig>  and to  <dig>  for the first and second active site of the liganded protein 1a6w, respectively.

for illustration purposes we have taken the set of  <dig> and  <dig> “liganded and unliganded proteins”, respectively, listed in the supplementary material of li et al.  <cit>  and downloaded the files from the pdb site . we found the pockets of the unliganded proteins, and then we compared these pockets with the known active sites reported in the pdb files of the corresponding liganded proteins.

the correct fraction, cf, of residues predicted in a given pocket is computed and the histograms of maximum cf in each protein’s pockets are reported in figures  <dig> and  <dig>  these results are obtained for a  <dig>  overlap cutoff between pockets, and they show that 76% of the pockets predicted by our algorithm in the 86-element data set have at least half of their residues belonging to an active site in the liganded protein; for the 48-element data set the corresponding number is 50%. by using instead a  <dig>  overlap cutoff, the results are 78% and 54% for the 86-element and the 48-element data set, respectively. note that not all residues in the active sites reported in the pdb participate in protein-ligand interactions.

in table  <dig> we compare the performance of our method with the other methods castp, ligsite, pass, surfnet and visgrid. this table shows that our method with an overlap cutoff of  <dig>  has comparable performance with the other methods. we should also note that the low computational cost of our method is a major advantage. in additional file  <dig>  full pockets of the 48-element set with a cf  of more than 25% are reported. additional file  <dig> also gives the minimum distance between each residue of the protein and ligand atoms.

the other results reported in table iii of li et al.  <cit> .

we have also chosen another  <dig> pairs of unliganded and liganded protein structures of . in figure  <dig> the histograms of the maximum cf in each protein’s pockets are reported . it shows that  <dig> % of the pockets predicted by our algorithm in the 130-element data set have at least half of their residues belonging to an active site in the liganded protein, i.e. cf ≥  <dig> .

an important step which allows a decrease of the time and effort for the drug discovery process is to find suitable ligands through in silico methods using, for example, the virtual screening techniques. our algorithm is easy to use and the cost of computation is approximately between 10 seconds for small proteins and up to 320 seconds for large proteins. the program was implemented in matlab. the computer used for these computations is a laptop with an intel core i <dig> cpu and 8 gb ram. the program usually uses 13% of the cpu time, but sometimes for a while it uses up to 50%. the program also while occupied in computation usually required less than  <dig>  gb of ram memory, but it was observed for some proteins to go up to 2 gb. the execution time for the  <dig> pair dataset is given in additional file  <dig> 

CONCLUSIONS
in this paper, we have introduced a new simple method for predicting putative ligand-binding protein pockets. for each pocket, we can identify possible interacting protein atoms and residues, surface atoms, and also determine the size of a pocket . this information can help us verify possible ligands having a shape and size that is geometrically compatible with the pocket, and thus could be docked to the protein. we have used some biochemical properties to find the possible interacting atoms and residues in the pockets. our method is a low cost computational method which voxelizes the protein space, and uses the convex hull concept commonly employed in computational geometry. this method could be used to classify proteins by the geometric properties of their pockets and also by their biochemical properties. an application of this method could be useful in reducing the cost and time of drug discovery.

competing interests
the authors declare that they have no competing interests.

authors’ contributions
smsf and jat conceived of the study, and participated in its design and coordination and helped to draft the manuscript. both authors read and approved the final manuscript.

supplementary material
additional file 1
table with pairs  of pdb files in the  <dig> element set and in the  <dig> element set. for each pair, the rmsd  is given.

click here for file

 additional file 2
list of the full pockets for each unliganded structure in the 48-element set with a 
cf 
 of more than 25%. for each pocket the cf for each active site  is given after the label “res. in common with n ac:”. residues are named in the form “<resname > <resid > <chain>”. for each residue in a pocket, the minimum distance between the residue and the ligand atoms of the corresponding liganded structure is given.

click here for file

 additional file 3
tab-delimited text file. table with  <dig> pairs of unliganded  and liganded  pdb files. for each pair, the cf and the time of execution  is given.

click here for file

 acknowledgements
smsf acknowledges grant number 2/ <dig> from ferdowsi university of mashhad. jat gratefully acknowledges research support received from the national science and engineering research council of canada, the canadian breast cancer foundation, and the allard foundation.
