BACKGROUND
proteins, especially larger ones, are often composed of individual evolutionary units, domains, which have their own function and structural fold. predicting domains is an important intermediate step in protein analyses, including the prediction of protein structures. in this case the prediction can be applied to each protein domain separately, decreasing prediction times, and increasing prediction accuracy especially in the absence of homologues/templates and when interactions among residues are long ranging. although domain-domain interactions would have to be ignored when predicting domain structures separately, stages for domain-domain interaction prediction can be designed  <cit>  to tie the domains together resulting in the final three dimensional  structure. the detection of structural templates from sequence can also be improved when only considering the sequence that corresponds to each domain, since the domain itself is more likely to be evolutionarily conserved. fold recognition methods also perform better when using individual domains rather than the entire protein  <cit> .

experimental structural determination methods become hard to apply when considering large proteins of many domains. in x-ray crystallography and nmr spectroscopy difficulties often arise when protein domains are joined by less flexible boundary regions. also, nmr structural determination errors tend to arise when the protein is very long. as a result, experimental methods often determine structures by only examining individual domains or at most a few domains together  <cit> .

methods for the prediction of protein domains, similarly to methods for the prediction of the 3d structure, can be classified as template-based or template-free , depending on whether the prediction incorporates structural information from putative homologues from the protein data bank  <cit> . the simplest form of domain prediction assumes all domains are continuous . the main objective of these approaches is to identify domain boundary regions. other methods try to assign residues to particular domains when the domains are discontinuous or split across the sequence . often these latter methods rely on the availability of accurate 3d models , from which the structure is parsed to domains using a 3d to domain parsing algorithm. dompro  <cit>  and its server  <cit>  use ranked structural homologues to construct a 3d structure using modeler  <cit>  then protein domain parser  <cit>  is used to assign the domains. if no homologues are found within a given threshold then ab initio predictions of protein domain boundaries are made from sequence alignments, secondary structure and solvent accessibility predictions. rosettadom  <cit>  uses many 3d structure models predicted from rosetta  <cit>  and the taylor domain parsing algorithm  <cit> .

snapdragon  <cit>  performs  <dig> structural predictions from its 3d ab initio system and assigns domains based on an efficient domain parsing algorithm. these methods that rely on 3d structural models are often computationally expensive making them inapplicable for very large scale predictions.

the domain guess by size method  <cit>  guesses domain boundaries solely based on the length distribution of proteins of known structure and is a useful baseline for benchmarking especially ab initio methods. domssea  <cit>  predicts domain boundaries from aligning predicted secondary structure against a database of 3d structures with annotated domain information in the cath  <cit>  database. armadillo  <cit>  is also simple and effective – it predicts domain linkers by statistics on the amino acid composition of domain boundaries.

in this paper we concentrate on the evaluation of continuous domain prediction. in other words we are more interested in predicting domain boundaries rather than which domain a residue belongs to. to this end, we ignore the problem of discontinuous domains. domain boundaries are important features of a protein and have been given particular attention over the years: an analysis of domain boundaries was carried out in  <cit>  with the aim to design boundaries for domain fusion; boundaries are important for inter-domain coupling  <cit> ; altering the length of boundaries connecting domains has been shown to affect protein stability, folding rates and domain-domain orientation  <cit> ; ultimately, if the location of protein boundaries is known, barring discontinuous domains, domain identity follows.

currently well over half of all known protein sequences show some detectable degree of similarity to one or more sequences of known structure. nearly three quarters of newly deposited structures in the pdb  <cit>  show significant similarity to previously deposited structures  <cit> . the state of the art predictors at the casp  <dig> and  <dig> competitions  <cit>  all contain a template-based component. homology information is particularly appealing for domain boundary prediction since only some domains for a protein may have homologues while some domains may not, but the boundary can still be inferred by subtracting the homologues from the sequence.

our method consists of learning boundaries defined by scop  <cit>  from evolutionary information in the form of psi-blast  <cit>  sequence alignments, predicted template-based structural information in the form secondary structure  <cit> , solvent accessibility  <cit> , ϕ and ψ torsion angles  <cit> , contact density  <cit>  and residue-residue contact maps  <cit> . along with these features weighted non-gap/gaps in pdb templates and weighted scop template definitions are used. all templates are found by simple psi-blast searches on the pdb and scop databases. we train 1d bidirectional recurrent neural networks   <cit>  for the prediction of scop defined domain boundaries. the novelty of the method is both in the soft prediction  and in the input design, with both scop and pdb template profiles used, alongside structural predictions. the structural predictions themselves are made using weighted templates from the pdb with the predictions being significantly better than deriving the information directly from the templates  <cit> .

we show that template information improves over ab initio even for low quality templates, when we design a specialised system for this case. the ab initio predictions compare well with other state-of-the-art ab initio predictors, and the addition of template information always improves over ab initio. as homologues become more accurate predictions are often nearly perfect. it is important to stress that, when homology information is available our algorithm does not take it as the final answer, but rather utilises the homology input in combination with accurate template-based structural information and sequence alignments. this, on average, yields significant improvements over baselines where boundaries are inferred directly from the scop homologues.

although we use simple psi-blast based protocol to find suitable templates, our system is fully modular and may easily incorporate more sophisticated stages with better sensitivity to remote homology . the method is fast and can be applied to  <dig> multi domain proteins in one day on a single  <dig> ghz core.

methods
learning domain boundaries consists of mapping f: ℐ →  where ℐ =  and  =  are the input and output sequences of length n. each oj ∈ { <dig> } is the output symbol at position j resulting in a binary classification problem of domain residues and domain boundary residues. element ij ∈ i is the input encoding for position j in the sequence. the input encoding is a real numbered vector, ij ∈ ℝn, where the design choices of n and ij largely determines the power of the mapping.

a residue's property at position j in the sequence will often depend on local information surrounding j and long range information far up and/or down the sequence. we map residues into boundary/non-boundary states by a bidirectional recurrent neural network   <cit> :

   

where  and  are vectors of hidden states capturing contextual information, respectively, from the left side and right side of the input sequence, and the functions which govern the update of ,  and of the output oj  are realised by multi-layered perceptrons with one hidden layer. s in the equations represents the amount of contextual information that is provided explicitly to the  and  networks, or maximum shortcut length . the amount of context signal is learned alongside the hidden representation and depends on the error signal produced for a particular protein at a particular residue. this is in contrast to the static window methods where a context window is chosen a priori  <cit>  resulting in experiments to determine window sizes using a validation set. in this case danger of overfitting may arise for windows that are too large, especially when the training sets are small. brnns are trained by the standard gradient descent algorithm. the gradient of the error  is computed via an extension of the backpropagation algorithm  <cit> . brnns have been successively applied to many predictive tasks for proteins  <cit> .

as outputs for individual residues are predicted independently, the raw probabilities of residues being in a domain boundary, oj, contain many local peaks. this is a common problem and has also been reported in  <cit> . in order to mitigate it we use a second stage brnn that maps the output of the first one into the boundary/non-boundary sequence. the jth input to this second network includes the first-layer predictions in position j and first stage predictions averaged over multiple contiguous windows. this input at j is the array ij:

   

where kf = j + f, 2w +  <dig> is the size of the window over which first-stage predictions are averaged and 2p +  <dig> is the number of windows considered. in the tests we use w =  <dig> and p =  <dig>  as in  <cit> . capturing long range dependencies is difficult, especially when using gradient descent  <cit> . the second stage brnn described above mitigates this problem, and the presence of shortcut connections  also helps shortening paths between distant residues. a further way to tackle the problem which we attempt here is similar to that described in  <cit> , and relies on placing shortcut connections over longer ranges, corresponding to predicted contact pairs .

interaction brnn
long ranging information, such as the one usually determining beta-sheets, is difficult to capture using most algorithms. a particular residue, i, may be highly coupled with another residue, j, far up or down the sequence. a standard brnn  fails capture this dependency because of the vanishing gradient problem  <cit> , whereby the gradient of the error rapidly approaches zero as it is propagated backwards through a neural network with multiple layers. an attempt to solve this problem is to place connections into the brnn between the two residues that are near each other in the three-dimensional space but might span large sequence separations, as for instance in  <cit> . these interacting connections should allow the model to propagate information  spanning large sequence separations. although boundaries are not expected to be coupled with other boundaries this should improve the prediction accuracy of residues interacting within a domain and thus the overall accuracy.

let us define the estimated probability of contact between residues i and j as pi, j.

when examining the contacts of residue j we look at non-overlapping contiguous windows of contact probabilities up-sequence from j:

  

where uh is an array:

  

and kh = j + hw. w is the window size over which probabilities are considered, p is the number of windows considered, which is the same as the number of shortcut connections. windows down-sequence, , are also taken into account.

we set shortcut connections between all pairs  such that fh = argmaxyuh, y, and f-h = argmaxyd-h, y.

this interaction-based brnn  takes the form;

   

notice how the the connection strength is multiplied by the probabilities of contact, as estimated by our contact map predictor  <cit> .

in our models we use w =  <dig> and p =  <dig>  which means that we connect residue i with the one residue over each 15-residue window of the protein that we deem to be most likely to interact with i.

training, testing set
we start from all chains found in scop  <cit>  release  <dig>  that are x-ray solved with resolution ≤  <dig>  Å and r-factor ≤ 30%. we then use uniqueprot  <cit>  to reduce sequence similarity. we run uniqueprot with options -m custom , and hssp  <cit>  distance of  <dig> . we leave in boundaries for discontinuous domains, which makes the problem harder than just identifying continuous domain boundaries. in total there are  <dig> multi domain proteins  and  <dig> single domain proteins  in our set. the total number of boundaries is  <dig> 

however, it is important to notice that, since we do not cast the problem as that of mapping a protein into its number of domains, but rather as that of mapping a residue into its boundary vs. non-boundary state, the effective number of examples is the number of residues in the sets  rather than the number of proteins, or boundaries. this makes the results of learning quite stable with respect to small variations in initial training conditions or small changes in the architectural parameters of the networks .

pdb and scop templates
for each of the proteins in the dataset we search for structural templates in the pdb available on march 25th,  <dig> .

to generate pdb templates for a protein we run three rounds of psi-blast with parameters b =  <dig>  e = 10- <dig> and h = 10- <dig> against the version of the nr database as available on march  <dig>   <dig> containing over  <dig>  million sequences. the nr database is first redundancy reduced at a 98% threshold, leading to a final  <dig>  million sequences. we then run a fourth round of psi-blast against the pdb using the pssm generated in the first three rounds. in this fourth round we use a high expectation parameter  to include as many hits as possible. we remove from each set of templates all sequences with similarity exceeding 95% between the query and the template to avoid including the query sequence in its own set of templates and to exclude pdb resubmissions of the same structure at different resolution, other chains in n-mers and close homologues. figure  <dig> shows the distribution of the templates with this 95% threshold imposed on the sequence identity.

to train template-based predictions in marginal sequence similarity conditions we create a second set of templates excluding all templates that have a psi-blast hit exceeding 25% sequence identity to the query sequence. to generate scop templates we label every pdb template in these two sets with their scop defined domain boundaries. we use the  <dig>  version of scop released in november  <dig> which contains  <dig>  pdb entries and a total of  <dig>  domains. as not all pdb structures have been classified by scop the set of scop templates is a subset of the pdb templates. figure  <dig> shows the distribution of the templates with this 25% threshold imposed on the sequence identity.

input design
the input vector at postion j,

   

contains evolutionary information from multiple sequence alignments , predicted structural features , scop templates , and gap information from the pdb templates . the evolutionary profile, , contains  <dig> units, one for each of the amino acids. the predicted structural features consist of: secondary structure , solvent accessibility , coarse contact density , local structural motifs based on ϕ - ψ angles  , and contact maps  <cit> . the structural predictions are based on average weighted pdb templates and sequence information and were shown to be better than simply taken the values directly from the templates  <cit> . all predictors produce the probability of belonging to a particular structural class and it is these probabilities that are encoded into the  part of the input.

contact maps should play a special role when predicting domains boundaries. the structurally compact domain regions are clearly distinguishable by visual inspection of a true map as the regions with maximal contact while the boundary regions contain minimal contact . this observation was exploited in  <cit>  where minimal contact average was determined using covariance analysis on the multiple sequence alignments. here we derive three numbers which describe contact density in three regions surrounding j from maps at a  <dig> Å threshold:

   

where tj, mj, bj correspond to the top left, middle, and bottom right contact/non-contact ratio of the boxes surrounding j – see figure  <dig>  cx, y and ncx, y are the contacts and non-contacts for residue pair , where trivial contacts |x - y| ≤  <dig> are ignored. the maps are obtained from a new version of the predictor xxstout  <cit>  which also takes into account template information from the pdb  <cit> .

ideally a boundary can be identified by large tj and bj and small mj for all j. in an initial experiment we found out that local contacting residue pairs are much less informative to determine boundary/non-boundary residues than the global contacting profiles provided by tj, mj and bj .

in the results section we show that  with tj, mj and bj improves boundary prediction when the j contact maps are sufficiently accurate. the number of units in  is  <dig>  +  <dig>  +  <dig>  +  <dig>  +  <dig>  =  <dig> 

homology information
along with structural predictions we input to the network the weighed number of boundaries that we observe in scop templates. if q is the total number of templates found for a protein, the first element of the vector  is:

   

where bp is equal to one if template number p contains a boundary in the position that aligns to the j-th residue in the query protein. note that we extend the original definition of scop boundaries by  <dig> residues towards both termini. if the identity between template p and the query is idp and the quality of a template  is qp then the weight, wp, is:

   

taking the cube of the identity between template and query allows to drastically reduce the contribution of low-similarity templates when good templates are available. for instance a 90% identity template is weighed two orders of magnitude more than a 20% one. in preliminary tests  this measure performed better than a number of alternatives. the second and third element of the vector  encode the weighted average coverage and similarity of a column of the template profile as follows:

   

where cp is the coverage of the sequence by template p , and

   

finally weighted gap and non-gap information from the pdb templates used to make the structural predictions are input. these are computed identically to equation  <dig>   <dig>   <dig>  and  <dig> except instead of boundary and non-boundary classes there are gap and non-gap classes. the intuitive reasoning behind  is that domains should be evolutionarily conserved and non-gap values indicate there is a structural fragment in the pdb similar to the query sequence. both  and  contain  <dig> units resulting in a total input size of: |e| + |struc| + |scop| + |pdb| =  <dig> +  <dig> +  <dig> =  <dig> = 58

measuring performances
to evaluate domain boundary prediction we adopt the domain boundary score used by casp  <dig> and  <dig>  <cit> . a score value is rewarded between any predicted boundary, p, and any true boundary, t, within eight residues. if dp, t is the smallest sequence separation between p and t :

   

the normalised domain boundary score between all predicted and true domain boundaries is:

   

where np and nt are the total number of predicted domain boundaries and true domain boundaries respectively. taking the maximum domain boundary count between predicted and true, max, penalises over-prediction and incorporates both sensitivity  and specificity  into one measure. , ensures the closest  boundaries are only considered all other values are ignored.

we also consider our performance on single domain proteins, through the f-measure which is the harmonic mean of precision and recall. if tp is the number of proteins correctly predicted as single domain, pred is the number of proteins predicted as single domain, and obs is the true number of single domain proteins, recall is  and precision is . note that template quality, where we refer to it, is always the highest sequence identity between the query and the pdb templates found.

RESULTS
we train and test using a 5-fold cross validation procedure. the following models were trained:

• ab initio: all structural predictions are made using our ab initio structural prediction servers  <cit> . in this case we use no contact information, as it led to no improvements in preliminary tests.

• scop95: this model takes as input predicted structural information from our template-based structural predictors  <cit> , pdb gap/non-gap information and scop templates.

• scop25: same as scop <dig> but trained on 25% thresholded templates, i.e. this time no template is allowed that shows more than 25% sequence identity to the query, including to the structural predictors.

• pdb95: this is identical to the scop <dig> models except it now contains no scop template information. note that, although scop is a subset of pdb and pdb information is input to this system, it does not include domain boundary annotations.

• pdb25: same as pdb <dig> but trained on 25% thresholded templates.

• pdb95_nc and pdb25_nc: identical to pdb <dig> and pdb <dig> except the contact profile in equation  <dig> is removed.

• ibrnn95: this is identical pdb <dig> except the brnn now propagates its information and backpropagates its error along additional shortcut connections that correspond to contacting residue pairs.

• ibrnn25: same as ibrnn <dig> but trained on 25% thresholded templates.

all these models have the same architecture, except for extra or missing inputs and are trained by gradient descent. we only ran a small number  initial experiments on the sets randomly split in half training and half test to determine a good size for the architecture, while the cross-validations themselves are run only once. varying the number of parameters of the networks in the initial tests between approximately  <dig>  and  <dig>  only led to very small changes  in predictive quality. when training we place an extra ±  <dig> residues around the scop boundary definitions. however when testing the original scop definition is used. since the problem is extremely imbalanced the optimal threshold  for determining boundaries is generally less than  <dig> . for this reason we determine the optimal threshold on the training folds and test using this threshold on the test fold.

95% distribution
in the [ <dig> )% region ab initio is mostly better than pdb <dig> apart from the [ <dig> )% interval, for an overall score of  <dig> % for ab initio vs.  <dig> % for pdb <dig>  this suggests that pdb templates, and template-based structural predictions are little help when the templates are noisy. however, when a specialised system is built that only learns from noisy templates , it is still possible to glean enough information from templates to outperform the ab initio predictor. this suggests that, more than the noise itself, the small number of examples in the [ <dig> )% region is the main reason why pdb <dig> performs worse than ab initio here.

in order to assess if contact information improves domain boundary prediction with this template distribution we compare pdb <dig> with ab initio and an identical version of pdb <dig> but removing the contact inputs in equation  <dig> . in this case , pdb95_nc performs better than pdb <dig>  but still slightly less well than ab initio . as expected when templates improve  contact information becomes helpful, leading to significantly better domain boundary location prediction compared to both pdb95_nc and ab initio . this proves that contact information is indeed useful when good quality contact maps are available.

figures  <dig> and  <dig> show that our machine learning method, trained in 5-fold cross-validation on the m <dig> set , improves over a simple baseline where equation  <dig>  is adopted as the prediction from the scop templates without using any machine learning filtering. absolute performances are shown in figure  <dig>  while figure  <dig> focusses on the difference between scop <dig> and the baseline. preliminary tests showed that this is a better baseline than ones where only the best template or the top ten templates are considered. this is also the same vector provided as input to our system, hence it is a fair baseline to compare the system against as any gains represent enrichment of the information contained in the templates. it is worth noting that the deviations of the absolute results  of either the baseline or scop <dig> are greater than the deviations of the difference between scop <dig> and baseline on a protein, i.e. the scop <dig> gain is more stable than its absolute score, likely because the variability of the quality of the template is eliminated from the latter . the differences between the prediction and the scop baseline are less than  <dig> standard deviations in all regions of sequence identity to the best template except [40%,50%) and [80%,90%). however the differences are nearly always of the same sign, and overall our system beats the baseline by  <dig> %, which is more than  <dig> standard deviations. the gain in the [25%,100%) area  is also more than  <dig> standard deviations. encouragingly, in the difficult region %) there is also a  <dig> % improvement over the baseline, although this is marginal, at  <dig>  standard deviations.

finally table  <dig> shows the f-measures on single domains for all the models trained on the 95% template distribution. in the [ <dig> )% region ab initio has the best single domain f-measure. again the scop <dig> model is better by  <dig> % at predicting single domain proteins compared to its corresponding baseline. as the templates improve we notice a clear gap between scop <dig> and the pdb only models of pdb <dig> and pdb95_nc . when there are only pdb templates available ab initio slightly outperforms both pdb <dig> and pdb95_nc but the larger increase in boundary score outweighs this for [ <dig> )% templates.

single domain f-measures for all models trained with the 95% template distribution.

25% distribution
in this case we exclude all templates showing a sequence identity greater than 25% to the query. the aim is to build systems that specialise on low-quality templates both by providing more low-quality examples and by not providing any good-quality ones. figure  <dig> shows the domain boundary scores for all the models considered in this region. as expected scop <dig> and pdb <dig> are now always above ab initio, with a much greater margin and confidence than scop <dig> and pdb <dig> 

however, the f-measure on pdb <dig> is  <dig> % worse than the same model without contact input , see table  <dig>  although the contact profile increases the boundary score, it may lead to over-predicting boundaries. the overall boundary score for the pdb25_nc is  <dig> %  an increase of  <dig> % over ab initio for this region. this coupled with the fact that pdb25_nc has the highest single domain f-measure makes it the best scop-less template model for the [ <dig> )% region. the scop based model predicts boundaries with a score of 49% and clearly outperforms its baseline again, on average by 7% . although evaluated on a different distribution of proteins scop <dig> now has a much higher domain boundary score , at the price of a decrease in single domain f-measure .

single domain f-measures for all models trained in the 25% template distribution.

interaction brnn
ibrnn overall domain boundary scores  and single domain f-measure . in brackets the increase or decrease over the normal brnn with contact input .

comparison with other predictors
comparison of different domain predictors is difficult because previous methods were based on different datasets, domain definitions, benchmarks, cross validations and evaluation procedures. thus, we take the comparisons made here with caution. state of the art results at casp  <dig> have domain boundary scores between 65–69%. our four best models scop <dig>  scop <dig>  ibrnn <dig>  pdb25_nc achieve overall domain boundary scores of  <dig> %,  <dig> %,  <dig> % and  <dig> %. figure  <dig> and  <dig> show the recall and precision of our models as a function of the distance from the true boundary to consider a prediction a success. increasing the distance between  <dig> and  <dig> results in small improvements in both prediction and recall, slightly more so for the less accurate systems . it should be noted that this is in essence equivalent to measuring the sensitivity of the results to artificially widening boundary regions.

from the plots we can see that template-based models clearly outperform ab initio both in the domain boundary score and f-measure on single domain results. at a distance of  <dig> from the true boundary our recall is  <dig> %,  <dig> %,  <dig> % and  <dig> % for the models scop <dig>  scop <dig>  ibrnn <dig> and pdb25_nc respectively. the precision of the four models in the same order is  <dig> %,  <dig> %,  <dig> % and  <dig> %. the recall and precision  of the best server groups at casp were : dompro recall 79% and precision 67%, lee recall 75% and precision 64%, rosettadom recall 65% and precision 70% and ginzu 59% recall and 79%. direct comparisons would not be fair here for two major reasons: we have built scop domain predictors, and casp assignments are normally different from scop; especially, while we show that by combining templates and sequence we perform better than by either, we obtain templates by psi-blast, that has much lower sensitivity than many fold recognition components used by the top systems at casp. however, we have run our methods on the free modelling  casp <dig> targets , allowing only pre-casp <dig> templates to be input . of the  <dig> fm single domain targets we predict correctly  <dig>  and one  incorrectly as having two boundaries. as for multi-domain proteins, there was not one single case of a fully fm one. if we focus on multi-domain targets containing at least one domain classified as fm: we predict both boundaries in t <dig>  correctly ; we predict the boundary correctly in t <dig>  although we also predict a second spurious boundary; we correctly predict t <dig> as being 3-domain and place one of the two boundaries correctly; while we predict t0321's  number of domains correctly but boundary location incorrectly by  <dig> residues.

it should be noted that in none of these cases we find psi-blast templates, so we effectively predict all of them ab initio. casp's domain assessment also focussed on t <dig>  which was considered a hard tbm prediction. the assessment article  <cit>  cites one outstanding prediction for this target with an ndo score  of  <dig> – in this case we correctly predict the protein to be 2-domain for a ndo score of  <dig> .

usually most evaluations in the literature are carried out at a distance ±  <dig> from the true domain boundary. our ab initio model has a recall of  <dig> % and a precision of  <dig> % for domain boundaries within  <dig> residues of the true boundary. hence, although this roughly matches the state-of-the-art , in the ab initio case predictions are only of limited practical use. however: for a majority of known protein sequences it is possible to identify a putative homologue in the pdb ; even in the ab initio case it is possible to achieve a higher precision at the cost of reduced recall. for instance we obtain a 55% precision for a recall of  <dig> %. single domains are predicted with a recall of  <dig> % and a precision of  <dig> % on our dataset. table  <dig> shows a summary of some other methods and a short description of the dataset used. random, is a predictor in which we place the correct number of boundaries within a protein, but in a random position. in this case the precision/recall are  <dig> %/ <dig> %, or approximately 2/ <dig> and 1/ <dig> of our ab initio system. chopnet  <cit>  has a reported boundary recall between 46–51%  and single domain recall of 73% on their scop defined dataset when training on both a cath and scop dataset. when training on a scop only dataset as in this study the recall of boundaries seems to be slightly reduced but the single domain recall is drastically reduced to 49%. the ab initio version of domac  <cit>   achieves a recall of  <dig> % and a precision of  <dig> % on single domain proteins, and achieves 27% and 14% recall and precision of domain boundaries within  <dig> residues, corresponding to an f <dig> score  of  <dig> %. the dataset is a balanced, high-quality dataset manually curated by holland et al.  <cit> . in order to compare our methods with domac we have also tested our ab initio predictor on this set, and obtain somewhat different recall and precision , which yield a similar f <dig> . the domain guess by size algorithm  <cit>  has a recall of 50% for domains shorter than  <dig> amino acids on a dataset with domain definitions from the conserved domain database  <cit> . this seems surprisingly good for such a simple method. however predictions were considered correct if a correct prediction is made in one out of top ten predictions, with the accuracy decreasing somewhat when considering the best hit. snapdragon  <cit>  correctly identifies 47% of its single domain proteins. it also achieves a recall of  <dig> % and precision of  <dig> % for the boundaries on a mixture of discontinuous and continuous protein domain dataset. the true boundary sizes here were enlarged to a minimum of  <dig> residues with a correct boundary being ±  <dig> from this true boundary; making our ±  <dig> boundary distance comparable. armadillo  <cit>  achieves a recall of 37% and a precision of 36% on boundaries with a simple amino acid propensity index. again boundaries were considered correct for ±  <dig> residues.

results for some other methods on their datasets compared to the overall ab initio results in this study.

see text for method citations.

finally, we directly compare ab initio and scop <dig> with the predictor in  <cit>  and with pprodo  <cit>  and report the results in table  <dig>  in this case the two predictors are optimised for two-domain proteins rather than for a mixture of single and multiple-domain ones. for this reason we test the predictors, where possible, on both our sets and the sets they were optimised on. on the pprodo set ab initio roughly matches pprodo's recall  but not precision , with slightly more favourable comparisons against  <cit>  that has published precision and recall of 62%. on single domain our recall is similar to pprodo's. scop <dig>  fares better than ab initio and roughly equivalently to pprodo with a recall/precision of  <dig> %/ <dig> %. on our sets pprodo performs quite well, with a recall/precision of  <dig> %/ <dig> %, higher than ab initio  but this time substantially lower than scop <dig> . all systems perform roughly equally well on single domains, with recalls just over 80%. we were not able to get a version of the cat dataset also used in  <cit> , and could not obtain a copy of the predictor in  <cit>  so we could not test it on our sets. in figure  <dig> we report a roc curve for pprodo, ab initio and scop <dig> on our sets. in this case success is measured per residue, rather than per boundary. it is important to notice that we use the original assignment of boundaries adopted by the different programs, i.e. a boundary is extended by  <dig> residues in both directions to determine positives for pprodo, and by  <dig> for ab initio and scop <dig>  in this case the auc  is  <dig>  for pprodo,  <dig>  for ab initio and  <dig>  for scop <dig>  if we consider boundaries to be extended by  <dig> residues, ab initio and scop <dig> auc decrease to  <dig>  and  <dig> , respectively. if we test pprodo on boundaries extended by  <dig> residues on both sides, its auc climbs slightly, to  <dig> .

comparisons with pprodo  <cit>  and  <cit> .

as our results show, template information, when handled by the best systems  can only improve on the ab initio system for all sequence identity ranges, even in the difficult [ <dig> )% region. template-based comparisons are even harder as the data available are more sparse. on a simple two domain set domssea  <cit>  achieves a domain boundary recall of 49% again with ±  <dig> residues and correctly predicts  <dig> % of single domains. domac  <cit>   achieves a domain boundary recall of 50% and a precision of  <dig> %  within  <dig> residues of the true domain for its template based part, and an f-measure of  <dig> % on single domains, again on the holland dataset.

our best template-based system  has boundary recall and precision of  <dig> % and  <dig> %  at ±  <dig> residues and classifies correctly  <dig> % of single domain proteins. even when we only use marginal templates  we achieve boundary recall and precision of 59% and  <dig> %  and predict 80% of single domain proteins correctly. although on different sets, all measures are roughly as good as the state-of-the-art systems domssea and domac.

CONCLUSIONS
we have developed a fast system for the prediction of scop defined domain boundaries that takes advantage of template-based structural predictions and scop templates. within the limits of comparing systems on different datasets, we have shown that our ab initio system compares well with state-of-the-art ab initio predictors. our best template-based systems outperform the ab initio system even when poor templates are available, suggesting that not only can they be used for effective domain annotation in the presence of scop templates, but they may achieve state-of-the-art performances when only twilight or no templates % sequence identity to the query) are available. we have also shown that our machine learning systems outperform baselines where boundary definitions are extracted directly from the best scop template, or from weighed and unweighed profiles of templates. moreover we have shown that, when high-quality contact maps are factored into the prediction via a sophisticated machine learning model it may be possible to achieve even better results. the systems are entirely automated and can be run on a genome scale on a small cluster of pcs.

our future work will focus on a number of directions: training and testing our systems on marginal templates, for instance obtained by subtler homology detection algorithms than psi-blast; building a large-scale database of domain predictions to make publicly available, and to feed into the prediction loop alongside scop definitions; studying different domain definitions, as for instance those in cath and prism; testing the hypothesis that exon information can lead to improved ab initio predictions  <cit> . finally, we have set up a public web server implementing the methods we described in this manuscript. the url of the server is .

authors' contributions
iw designed and developed all the predictors, and wrote most of the first draft of the manuscript. ajmm contributed to the design of the homology component. cm produced the final homology detection component and contributed to the manuscript. er designed an alternative pipeline and provided constant challenges to the development of the final systems. av assisted many phases of the development and provided useful suggestions. gp sparked the process, supervised all phases, wrote parts of the initial draft, produced the final version of the manuscript, and set up the web server. all authors read and approved the final manuscript.

