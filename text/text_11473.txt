BACKGROUND
several methods now exist to measure quantitatively the expression of genes within a biological sample, allowing us to compare expression between cells from different tissues, and between cells from the same tissue under different conditions. more recent technologies for this purpose include microarrays and rna-seq. however one of the most popular remains rt-qpcr, due to its accessibility, relatively cheap price, small requisite amount of starting material and high precision  <cit> . although it has a lower throughput than some other methods, technological advances in recent years have led to improvements. through microfluidics and other technologies it is now possible to run hundreds, even thousands of rt-qpcr reactions in parallel with the same starting sample  <cit> , with a high enough precision that it is frequently used in order to validate findings made through higher throughput technologies  <cit>  . its usage remains ubiquitous.

such rt-qpcr technologies quantify gene expression by attempting to amplify a target dna sequence, representing a gene or other biological molecule, in a query sample . the sample is placed in a well with a primer specific for the dna sequence to be measured, necessary for amplification to begin  <cit> . in the case of the high-throughput rt-qpcr technologies, the sample is delivered to a number of wells in parallel, each containing a separate primer. then a number of amplification cycles are performed for each well. a predefined threshold is set within the exponential amplification phase, when doubling of the product can be detected above background fluorescence, and the number of cycles it takes to get to this threshold is used to estimate the amount of cdna sequence present, and thus the amount of rna that was present in the initial tissue  <cit> .

these values are known as quantification cycle  values  values, but herein referred to as cq, in line with the standardised nomenclature suggested in  <cit> ). by comparing the cq values between two samples , one can compare the amount of dna sequence in one sample relative to the other. it is strongly recommended to normalise these raw values to account for systematic variation between samples, related to differing starting amounts of material, tissue-specific differences in transcription efficiency, and a number of other factors. this is typically achieved through the use of reference genes . these are stably expressed genes that should not change in expression in response to a change in the cell’s environment, or between different cell types  <cit> .

assuming the reference gene exhibits stable expression across different samples, and assuming it does not show a change in expression between sample-types , the subtraction of the cq value of the reference gene from the target gene should account for the systematic variation between samples, and allow for the expression of genes in different samples to be compared to each other directly. furthermore it is generally recommended to combine multiple reference genes in order to reduce error, assuming their combination also shows stable expression  <cit> .

however, it is often the case that reference genes do change in expression between sample-types, or show high stochastic variation under certain conditions  <cit> . the choice of a reference gene that shows variation between sample-types will clearly bias estimation of the expression of other genes within the samples, since subtraction of said reference gene’s expression value from a gene will lead to over or underestimation of the true expression of that gene. similarly, a reference gene that shows a high intrinsic variation in expression under the conditions of the experiment, will lead to inflated stochastic error when estimating the true abundance of the other genes within a sample  <cit> .

several statistical methods have now been proposed to deal with the problem of reference gene selection. these methods will either select the optimal reference gene for an experiment, or a number of reference genes, whose expression values should be combined in order to generate a normalisation factor , which can be used as the calibrator. the work of vandesompele et al. <cit>  starts with a number of potential reference genes and attempts to find the best set of reference genes from this initial list . it does this by looking for the most stably expressed reference genes across all samples within an experiment, without taking into account the labelling of different sample-types. andersen et al. <cit>  proposed a model-based approach that takes into account the overall variability of a reference gene within an experiment, and also between different sample-types. more details on these methods  can be found in a recent paper by chervoneva et al. <cit> , which also introduces a new method for reference gene selection, accounting for correlation between different reference genes. a summary of available software is provided in a chapter of a recently published, comprehensive book on rt-qpcr  <cit> .

the raw-cq value of a target gene minus that of the best reference gene is known as the Δcqvalue. to calculate relative fold change between different conditions, the Δcq value of a gene of interest in one sample type can be subtracted from its value in another sample type, in order to calculate the ΔΔcq value, and thus 2−ΔΔcq <cit> .

another way the reference genes can be used to normalise the cq results is through the adaptation of the method of pfaffl et al. <cit> , where the efficiency of the reference gene is estimated and taken into account when normalising the other genes of interest  <cit> .

recently, other normalisation methods have been proposed that adapt methods originally developed for microarrays and other high-throughput genomic technologies  <cit> .

here we present two packages, readqpcr and normqpcr, written in the freely available statistical computing software r ,  <cit>  and available as part of the bioconductor project ,  <cit> . they allow the user to read rt-qpcr data into r, deal with undetermined cq values, find a suitable reference gene or genes for a given experiment using a method for optimal reference gene selection and normalise the data via the Δcq and 2−ΔΔcqnormalisation methods. the user can also use a number of existing bioconductor packages and functions to perform quality control on their data, and can check the adequacy of reference genes visually. we demonstrate the basic functionality of the packages here and provide an example work-flow, involving the different packages alongside several other well known and highly-used cran and bioconductor packages, applied to a generic rt-qpcr experiment. we then present a experiment where readqpcr and normqpcr have been used to analyse a rt-qpcr dataset, and take the user through the different steps that were undertaken in the analysis of the data.

implementation
typical work-flow
we have created two r packages to be used together in order to analyse rt-qpcr data. to explain the different packages to the user, we have created a work-flow, shown in figure  <dig>  this shows what packages should be used when, and in what order, in order to undertake a typical analysis using rt-qpcr, comparing gene expression between two conditions. for much greater detail please visit the package homepages http://www.bioconductor.org/packages/release/bioc/html/readqpcr.html and http://www.bioconductor.org/packages/release/bioc/html/normqpcr.html and consult the package vignettes, which are 20- <dig> page synopses of the packages. table  <dig> contains details of current r packages available for the analysis of qpcr data.

rt-qpcr packages
data capture
firstly the user will run the experiment. this will produce output, including amongst other things, the names of the genes being measured, and the cq values for each gene in each sample. it is important to adjust the baseline correctly using the appropriate software if necessary. depending on the technology used, there may or may not be a function in the readqpcr package that can read the raw  output from the machine, and upload it directly into r. if such a function is not available, the output must be converted into a simple tab-delimited format, using spreadsheet software or a scripting language , which can then be uploaded into r via readqpcr. this will use the names of the target genes , the sample names and the raw cq values to generate an r-object of class “qpcrbatch”, an extension of the “expressionset” class, which is intended to be the standard container for high-throughput assays and experimental meta-data in bioconductor  <cit> . if the input file contains data on the positions of the wells in which the experiments were performed, this will also populate the “qpcrbatch” object. a “qpcrbatch” can contain an indefinite number of different conditions, from one to as many as the r instance can handle. more than one input file can be uploaded into a single “qpcrbatch”, as long as all the input files contain either the same sample names, or same feature identifiers .

once the raw data has been loaded into r and a “qpcrbatch” object has been generated, the distribution of cq values for each sample can be compared in a pair-wise manner, using the pairs() function or the mva.pairs() function from the affy package  <cit>  as a quality control step to identify outlying samples. this will not always be sensible; for an experiment investigating a small number of genes, with the majority of them changing between conditions, the pair-plots are likely to show little correlation between different sample types. this is unlike microarrays, where often the majority of genes being estimated do not change between sample-type. this contrast between rt-qpcr and microarray pairs-plots is shown in figure  <dig>  however pair-plots can still be useful for comparing different samples within the same sample-type, i.e. biological replicates, and for a visual way to compare within-sample variation with the variation resulting from the different conditions being compared .

though not shown in the work-flow, readqpcr also allows the user to deal with technical replicates by  calculating the arithmetic mean or median of the raw cq values for the technical replicates of a given gene.

missing values can be handled by our packages in a number of ways, as detailed in the vignette. we advise the user to take care when using these functions as missing value imputation may lead to inflated stability values for reference genes.

optimal reference gene selection and normalisation
the next step is to find the best reference genes for a given experiment. normqpcr currently implements two methods for this puprose: a pair-wise stability based method   <cit> , which compares the expression of possible pairs of different reference genes, eliminating “bad” genes in a step-wise manner, and a model based method   <cit> , which takes into account variability of the reference genes between sample types, as well as overall variability in expression. in the case of the former, a minimum of two reference genes can be found, in the case of the latter, a minimum of one. if the user already knows what reference gene to use, this step can be skipped. these methods are implemented in normqpcr using the selecthks() function, which can take either “genorm” or “normfinder” as an argument. it is important to note that although the selecthks() function can accept 2cq or cq values, it is important to specify this with the “log” argument when calling the function.

once the user has identified what reference gene or genes to use, using one of the above methods, the next step is to subtract the cq values for the reference gene  from the other genes in each sample, in order to normalise them  and allow a direct comparison of gene expression between different sample-types . in the case of more than one reference gene being selected, a normalisation constant  will be calculated, as the arithmetic mean or median of the cq values of the reference genes. under the assumption that the rt-qpcr efficiency is equal to  <dig>  this is equivalent to using a normalisation factor, as we show below.

in  <cit>  they propose using a normalisation factor calculated as the geometric mean of the relative quantity  values of the reference genes, based on previous work  <cit> . rqs for some gene j are computed as

  rqj=ejcqj 

where ejis the rt-qpcr efficiency for gene j, and the normalisation factor is calculated as 

  nf=∏p=1frqpf 

where p= <dig> …,findicates the f  reference genes we have chosen. thus following the method described in  <cit> , the cq values of target genes can also be converted to rq, and divided by the nf to make normalised relative quantitiy  values. so for a given gene j one obtains 

  nrqj=rqjnf 

however, assuming e= <dig> for all target genes and reference genes, we can also use the arithmetic mean of the reference gene cq. this can be seen by rewriting equation  as 

  log2nrqj=log22cqj−log2∏p=1f2cqpf 

leading to 

  log2nrqj=cqj−1f∑p=1fcqp 

this is what we refer to as the Δcqjvalue and so 

  nrqj=2cqj−1f∑p=1fcqp 

to perform relative quantification between different sample types, the 2−ΔΔcq values should be calculated by subtracting the Δcq from equation 5) value for a given gene for the case sample from the control sample, i.e. 2Δcqcontrol−Δcqcase, also written as 2−Δcqcase−Δcqcontrol. 2−ΔΔcq values can be calculated using the deltadeltacq() function in normqpcr. this will return a list of all target genes with their corresponding values. these results can also be plotted as bar charts in order to show more clearly what genes are showing differential expression, and the range of error. an example, taken from the real data analysis presented below shows the ΔΔcq values, although the 2−ΔΔcqvalues might also have been plotted . standard deviations are calculated following the protocol presented in  <cit> , using the “same well” method, presented in table  <dig> of this paper: the standard deviation of the differences between cq values of the target gene and the housekeeper, for the different samples, is calculated. the single well method from table  <dig> of the same paper is also available by calling deltadeltact() function with the argument “paired = true”. in both cases, the subtraction of the calibrator is treated as the subtraction of an arbitrary constant, and so does not increase the estimated error  <cit> .

one inherent problem with rt-qpcr is that some values are undetermined. this occurs when the amplification of certain products is not detected above the level of noise, typically within  <dig> cycles, and is interpreted as absence of target transcript. in the case that values are undetermined in one set of samples and not the other , the deltadeltacq() function outputs a “+” or “-” for the fold change, though if a user wishes to impute their own value to replace the “+”/“-” they can do so easily .

the user may wish to perform statistical tests for differential expression, perhaps using the limma package  <cit> , the base r function wilcox.test() or the rowttests() functions in the genefilter package. it is recommended to use the deltacq() function and use the resulting “qpcrbatch” object for this analysis. this object will contain the Δcq values for each gene in each condition, which we expect to be normally distributed.

the ΔΔcqstep can also be exploited as another method to visualise the stability of the reference genes. by calculating ΔΔcq for each reference gene, and plotting these, in ascending order as normalised by a nominal reference gene, the user can see whether some reference genes show more similar expression to each other, and whether other genes stand out. this is shown in figure  <dig>  which contains graphs of the ΔΔcq values for all the genes in an experiment, each ordered by a different reference gene. in each graph, the values are ordered from lowest to highest.

RESULTS
readqpcr and normqpcr were used to analyse a real dataset, investigating the effects of uvb radiation on gene expression in skin by comparing uvb radiated skin to untreated. full experimental details are available in  <cit> , including descriptions of the samples used, their processing, storage conditions, and the experimental set-up. additional file  <dig> shows the series of commands that were used to analyse the data set. in brief,  <dig> biological replicates were produced for each sample-type, and each sample was analysed using taqman array cards,  <dig> well microfluidic arrays produced by applied biosystems. the expression of  <dig> genes was measured for each sample,  <dig> target genes and  <dig> reference genes: beta-actin, beta- <dig> microglobulin, gapdh, and 18s ribosomal rna. each card contained four samples, two case  and two control .

the sds output file, as obtained from the pcr system, was loaded into r using the readqpcr package, populating a “qpcrbatch” object . normqpcr was then used to find the optimal reference genes, using genorm . this indicated that four reference genes were required, since inclusion of a fourth gene leads to a reduction in variation. normfinder could also have been used to select the reference genes.

the arithmetic mean of the cq values of the four reference genes was then calculated to produce a normalisation constant, and this was subtracted from each of the cq values of the target genes to calculate the Δcq values . then mann-whitney u-tests were used on the Δcqvalues in order to calculate a p-value for differential expression between case and control . forty two genes were shown to be differentially expressed . multiple testing correction was also performed, using the method of benjamini hochberg  <cit> , , leaving  <dig> genes significant with an estimated false discovery rate  of  <dig> .

finally, 2−ΔΔcq were produced, for all genes  and the corresponding ΔΔcqvalues were plotted with the corresponding error bars representing +/- one standard deviation . in the case that cq values were na in case, but where values were obtained for control, and vice versa , the bars were given a different colour and a height of the maximum fold change in the experiment, and no error bars were plotted ).

CONCLUSIONS
readqpcr and normqpcr provide tools for uploading rt-qpcr data into r, look for the optimal reference genes, and normalise the data using the ΔΔcqmethod. it has already been used by an experimental group to calculate differential expression using taqman rt-qpcr data  <cit> .

these packages, implementing popular optimal reference gene finding algorithms in the widely-used statistical software for genomic analysis, r, represent an important contribution to the rt-qpcr community, and increase the available options for the analysis of this type of data.

availability and requirements
project name
readqpcr/normqpcr - r packages for the reading, quality checking and normalisation of rt-qpcr quantification cycle  data.

project home page
http://www.bioconductor.org/packages/devel/bioc/html/readqpcr.html

http://www.bioconductor.org/packages/devel/bioc/html/normqpcr.html

operating system
platform independent

programming language
r 

other requirements
bioconductor

license
lgpl-3

competing interests
the authors declare that they have no competing interests.

authors’ contributions
jp: wrote the manuscript. mk & jp: conceived the project and developed the software packages. jmd, sbm and dlhb helped in testing the package, producing data for testing and providing critical feedback. co: contributed to writing and revising the manuscript, and helped plan the work. all authors read and approved the final manuscript.

supplementary material
additional file 1:
qpcrpaperscript.r. and uvb.txt.

click here for file

 acknowledgements
wellcome trust london pain consortium. the work was partly supported by the ‘age-dependent inflammatory response after stroke’  consortium, founded by the ec sixth framework program no.  <dig> 
